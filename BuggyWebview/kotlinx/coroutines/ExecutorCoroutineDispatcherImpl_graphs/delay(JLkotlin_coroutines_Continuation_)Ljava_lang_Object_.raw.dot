digraph "CFG forkotlinx.coroutines.ExecutorCoroutineDispatcherImpl.delay(JLkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY])  (LINE:115)\l0x0001: CHECK_CAST (r0 I:kotlinx.coroutines.Delay) = (kotlinx.coroutines.Delay) (r0 I:??[OBJECT, ARRAY]) \l0x0003: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.Delay)\l  (r2 I:long A[D('time' long)])\l  (r4 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: STATIC call: kotlinx.coroutines.Delay.DefaultImpls.delay(kotlinx.coroutines.Delay, long, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.Delay, long, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:java.lang.Object) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.ExecutorCoroutineDispatcherImpl.delay((r1 'this' I:kotlinx.coroutines.ExecutorCoroutineDispatcherImpl A[IMMUTABLE_TYPE, THIS]), (r2 I:long A[D('time' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>ERROR:Lkotlin\/DeprecationLevel;\}, message=Deprecated without replacement as an internal method never intended for public use\}\}\}\lDebug Info:\l  \-1 \-0x0007: r2 'time' J\l  \-1 \-0x0007: r4 '$completion' Lkotlin\/coroutines\/Continuation;\lSIGNATURE: (JLkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.Delay.delay(long, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

