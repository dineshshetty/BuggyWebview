digraph "CFG forkotlinx.coroutines.ExecutorCoroutineDispatcherImpl.invokeOnTimeout(JLjava\/lang\/Runnable;Lkotlin\/coroutines\/CoroutineContext;)Lkotlinx\/coroutines\/DisposableHandle;" {
subgraph cluster_Region_769377121 {
label = "R(4:1|2|6|7)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|java.util.concurrent.Executor java.util.concurrent.Executor r0 = getExecutor()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|java.util.concurrent.ScheduledExecutorService r4 = r0 instanceof java.util.concurrent.ScheduledExecutorService ? (java.util.concurrent.ScheduledExecutorService) r0 : null\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|PHI: r2 \l  PHI: (r2v1 java.util.concurrent.ScheduledFuture A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|java.util.concurrent.ScheduledFuture r0 = r4 != null ? scheduleBlock(r4, r12, r13, r10) : null\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|RETURN\l|return r0 != null ? new kotlinx.coroutines.DisposableFutureHandle(r0) : kotlinx.coroutines.DefaultExecutor.INSTANCE.invokeOnTimeout(r10, r12, r13)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0009}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000e|PHI: r4 \l  PHI: (r4v1 java.util.concurrent.ScheduledExecutorService) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0011}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001d}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0028}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002e|ORIG_RETURN\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000d}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.DisposableHandle kotlinx.coroutines.ExecutorCoroutineDispatcherImpl.invokeOnTimeout((r9v0 'this' kotlinx.coroutines.ExecutorCoroutineDispatcherImpl A[IMMUTABLE_TYPE, THIS]), (r10v0 'timeMillis' long A[D('timeMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'block' java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0028 \-\> B:13:0x002e, CROSS_EDGE: B:6:0x000e \-\> B:9:0x0019, CROSS_EDGE: B:5:0x000d \-\> B:6:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.Delay.invokeOnTimeout(long, java.lang.Runnable, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.DisposableHandle, kotlinx.coroutines.EventLoopImplBase.invokeOnTimeout(long, java.lang.Runnable, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.DisposableHandle]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12;
Node_0 -> Node_2;
Node_4 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_9;
Node_8 -> Node_9;
Node_11 -> Node_14;
Node_14 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_5 -> Node_6;
}

