digraph "CFG forkotlinx.coroutines.DispatchedCoroutine.tryResume()Z" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY])  (LINE:239)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0002|LOOP_START\lLOOP:0: B:19:0x0002\-\>B:25:0x001e\l|0x0003: IGET  (r2 I:int) = (r0 I:kotlinx.coroutines.DispatchedCoroutine A[D('$this$loop$iv' kotlinx.coroutines.DispatchedCoroutine)]) kotlinx.coroutines.DispatchedCoroutine._decision int  (LINE:273)\l0x0005: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:240)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|0x0007: SWITCH  (r2 I:?? A[D('decision' int)])\l case 0: goto B:24:0x0017\l case 1: goto B:30:0x0016\l default: goto B:29:0x000a \l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|0x0017: SGET  (r5 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater) =  kotlinx.coroutines.DispatchedCoroutine._decision$FU java.util.concurrent.atomic.AtomicIntegerFieldUpdater  (LINE:241)\l0x0019: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x001a: INVOKE  (r4 I:boolean) = (r5 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater), (r7 I:java.lang.Object), (r4 I:int), (r6 I:int) type: VIRTUAL call: java.util.concurrent.atomic.AtomicIntegerFieldUpdater.compareAndSet(java.lang.Object, int, int):boolean A[MD:(T, int, int):boolean (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x001e|LOOP_END\lLOOP:0: B:19:0x0002\-\>B:25:0x001e\l|0x001e: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0002 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0020|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|RETURN\l|0x0020: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0021: RETURN  (r4 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x000a|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|0x000a: NEW_INSTANCE  (r4 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:242)\l0x000c: CONST_STR  (r5 I:java.lang.String) =  \"Already resumed\"  (LINE:243)\l0x000e: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0012: INVOKE  (r4 I:java.lang.IllegalStateException), (r5 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|0x0015: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|RETURN\l|0x0016: RETURN  (r4 I:boolean)  (LINE:242)\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.DispatchedCoroutine.tryResume((r7 'this' I:kotlinx.coroutines.DispatchedCoroutine\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0016 \-\> B:17:?, CROSS_EDGE: B:27:0x0021 \-\> B:17:?, BACK_EDGE: B:25:0x001e \-\> B:19:0x0002\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0023: r2 'decision' I\l  0x0006\-0x0023: r3 '$i$a$\-loop\-DispatchedCoroutine$tryResume$1' I\l  0x0001\-0x002b: r0 '$this$loop$iv' Lkotlinx\/coroutines\/DispatchedCoroutine;\l  0x0002\-0x002b: r1 '$i$f$loop' I\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_24;
Node_20 -> Node_29;
Node_20 -> Node_30;
Node_24 -> Node_25;
Node_25 -> Node_19;
Node_25 -> Node_31[style=dashed];
Node_31 -> Node_26;
Node_26 -> Node_17;
Node_29 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_17;
Node_30 -> Node_23;
Node_23 -> Node_17;
}

