digraph "CFG forkotlinx.coroutines.DispatchedCoroutine.tryResume()Z" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000}"];
Node_19 [shape=record,label="{19\:\ 0x0002|LOOP_START\lLOOP:0: B:19:0x0002\-\>B:25:0x001e\l|int r2 = r7._decision\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|switch(r2) \{\l    case 0: goto L4;\l    case 1: goto L12;\l    default: goto L9;\l\}\l}"];
Node_24 [shape=record,label="{24\:\ 0x0017}"];
Node_25 [shape=record,label="{25\:\ 0x001e|LOOP_END\lLOOP:0: B:19:0x0002\-\>B:25:0x001e\l|if (kotlinx.coroutines.DispatchedCoroutine._decision$FU.compareAndSet(r7, 0, 2) == false) goto L2\l}"];
Node_31 [shape=record,label="{31\:\ 0x0020|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|RETURN\l|return true\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x000a|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a}"];
Node_22 [shape=record,label="{22\:\ 0x0015|throw new java.lang.IllegalStateException(\"Already resumed\".toString())\l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.DispatchedCoroutine.tryResume((r7v0 'this' kotlinx.coroutines.DispatchedCoroutine\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0016 \-\> B:17:?, CROSS_EDGE: B:27:0x0021 \-\> B:17:?, BACK_EDGE: B:25:0x001e \-\> B:19:0x0002\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_24;
Node_20 -> Node_29;
Node_20 -> Node_30;
Node_24 -> Node_25;
Node_25 -> Node_19;
Node_25 -> Node_31[style=dashed];
Node_31 -> Node_26;
Node_26 -> Node_17;
Node_29 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_17;
Node_30 -> Node_23;
Node_23 -> Node_17;
}

