digraph "CFG forkotlinx.coroutines.NonCancellable.plus(Lkotlinx\/coroutines\/Job;)Lkotlinx\/coroutines\/Job;" {
subgraph cluster_Region_1467424743 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|RETURN\l|return kotlinx.coroutines.Job.DefaultImpls.plus((kotlinx.coroutines.Job) r1, r2)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.Job kotlinx.coroutines.NonCancellable.plus((r1v0 'this' kotlinx.coroutines.NonCancellable A[IMMUTABLE_TYPE, THIS]), (r2v0 'other' kotlinx.coroutines.Job A[D('other' kotlinx.coroutines.Job), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>ERROR:Lkotlin\/DeprecationLevel;\}, message=Operator '+' on two Job objects is meaningless. Job is a coroutine context element and `+` is a set\-sum operator for coroutine contexts. The job to the right of `+` just replaces the job the left of `+`.\}\}\}\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlinx.coroutines.Job.plus(kotlinx.coroutines.Job):kotlinx.coroutines.Job]\l}"];
MethodNode -> Node_0;Node_3 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
}

