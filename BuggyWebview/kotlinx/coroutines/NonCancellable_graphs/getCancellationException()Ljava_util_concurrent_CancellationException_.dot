digraph "CFG forkotlinx.coroutines.NonCancellable.getCancellationException()Ljava\/util\/concurrent\/CancellationException;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0007|throw new java.lang.IllegalStateException(\"This job is always active\")\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.util.concurrent.CancellationException kotlinx.coroutines.NonCancellable.getCancellationException((r2v0 'this' kotlinx.coroutines.NonCancellable A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>WARNING:Lkotlin\/DeprecationLevel;\}, message=\{ENCODED_FIELD: kotlinx.coroutines.NonCancellable.message java.lang.String\}\}\}\}\lMETHOD_OVERRIDE: [kotlinx.coroutines.Job.getCancellationException():java.util.concurrent.CancellationException]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

