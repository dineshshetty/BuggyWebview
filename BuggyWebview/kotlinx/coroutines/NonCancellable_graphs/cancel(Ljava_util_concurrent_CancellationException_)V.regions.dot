digraph "CFG forkotlinx.coroutines.NonCancellable.cancel(Ljava\/util\/concurrent\/CancellationException;)V" {
subgraph cluster_Region_748801285 {
label = "R(0)";
node [shape=record,color=blue];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.NonCancellable.cancel((r0v0 'this' kotlinx.coroutines.NonCancellable A[IMMUTABLE_TYPE, THIS]), (r1v0 'cause' java.util.concurrent.CancellationException A[D('cause' java.util.concurrent.CancellationException), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>WARNING:Lkotlin\/DeprecationLevel;\}, message=\{ENCODED_FIELD: kotlinx.coroutines.NonCancellable.message java.lang.String\}\}\}\}\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlinx.coroutines.Job.cancel(java.util.concurrent.CancellationException):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_1;
}

