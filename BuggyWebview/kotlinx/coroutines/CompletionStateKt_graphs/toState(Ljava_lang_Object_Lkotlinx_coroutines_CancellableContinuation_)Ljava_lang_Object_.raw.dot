digraph "CFG forkotlinx.coroutines.CompletionStateKt.toState(Ljava\/lang\/Object;Lkotlinx\/coroutines\/CancellableContinuation;)Ljava\/lang\/Object;" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Throwable) = (r7 I:java.lang.Object A[D('$this$toState' java.lang.Object)]) type: STATIC call: kotlin.Result.exceptionOrNull\-impl(java.lang.Object):java.lang.Throwable A[MD:(java.lang.Object):java.lang.Throwable (m)] (LINE:19)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x000a \l}"];
Node_34 [shape=record,label="{34\:\ 0x0006|0x0006: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$toState' java.lang.Object)]) \l0x0007: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lRETURN\l|0x002e: RETURN  (r0 I:java.lang.Object) A[SYNTHETIC] (LINE:22)\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x000a|0x000a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r2 I:kotlinx.coroutines.CompletedExceptionally) =  kotlinx.coroutines.CompletedExceptionally  (LINE:21)\l0x000d: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: INVOKE  (r4 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getRECOVER_STACK_TRACES():boolean A[MD:():boolean (m)] (LINE:68)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0012|0x0012: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0026 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0014|0x0014: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('caller' kotlinx.coroutines.CancellableContinuation)]) \l0x0015: CHECK_CAST (r4 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r4 I:??[OBJECT, ARRAY]) \l0x0017: INSTANCE_OF  (r4 I:boolean) = (r4 I:??[OBJECT, ARRAY]) kotlin.coroutines.jvm.internal.CoroutineStackFrame \l}"];
Node_38 [shape=record,label="{38\:\ 0x0019|0x0019: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x001c \l}"];
Node_40 [shape=record,label="{40\:\ 0x001c|0x001c: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('caller' kotlinx.coroutines.CancellableContinuation)])  (LINE:69)\l0x001d: CHECK_CAST (r4 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r4 I:??[OBJECT, ARRAY]) \l0x001f: CHECK_CAST (r4 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame) = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) (r4 I:??[OBJECT, ARRAY]) \l0x0021: INVOKE  (r4 I:java.lang.Throwable) = (r0 I:java.lang.Throwable A[D('it' java.lang.Throwable)]), (r4 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame) type: STATIC call: kotlinx.coroutines.internal.StackTraceRecoveryKt.access$recoverFromStackFrame(java.lang.Throwable, kotlin.coroutines.jvm.internal.CoroutineStackFrame):java.lang.Throwable A[MD:(java.lang.Throwable, kotlin.coroutines.jvm.internal.CoroutineStackFrame):java.lang.Throwable (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0027|0x0027: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$f$recoverStackTrace' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:21)\l0x0028: CONST  (r5 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0029: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002a: INVOKE  \l  (r2 I:kotlinx.coroutines.CompletedExceptionally)\l  (r4 I:java.lang.Throwable)\l  (r3 I:boolean)\l  (r5 I:int)\l  (r6 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlinx.coroutines.CompletedExceptionally.\<init\>(java.lang.Throwable, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(java.lang.Throwable, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l0x002d: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('it' java.lang.Throwable)]) = (r2 I:??[OBJECT, ARRAY])  (LINE:19)\l}"];
Node_43 [shape=record,label="{43\:\ 0x002e|RETURN\lORIG_RETURN\l|0x002e: RETURN  (r0 I:java.lang.Object)  (LINE:22)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0026|0x0026: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('it' java.lang.Throwable)])  (LINE:68)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.CompletionStateKt.toState((r7 I:java.lang.Object A[D('$this$toState' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlinx.coroutines.CancellableContinuation\<?\> A[D('caller' kotlinx.coroutines.CancellableContinuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:42:0x0027 \-\> B:43:0x002e, CROSS_EDGE: B:41:0x0026 \-\> B:42:0x0027, CROSS_EDGE: B:36:0x0012 \-\> B:41:0x0026\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x0009: r0 'it' Ljava\/lang\/Object;\l  0x0008\-0x0009: r1 '$i$a$\-fold\-CompletionStateKt$toState$3' I\l  0x000e\-0x0027: r3 '$i$f$recoverStackTrace' I\l  0x000a\-0x002d: r0 'it' Ljava\/lang\/Throwable;\l  0x000b\-0x002d: r1 '$i$a$\-fold\-CompletionStateKt$toState$4' I\l  \-1 \-0x002e: r7 '$this$toState' Ljava\/lang\/Object;\l  \-1 \-0x002e: r8 'caller' Lkotlinx\/coroutines\/CancellableContinuation;\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Object;Lkotlinx\/coroutines\/CancellableContinuation\<*\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_44;
Node_44 -> Node_31;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_41;
Node_37 -> Node_38;
Node_38 -> Node_40;
Node_38 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_31;
Node_41 -> Node_42;
}

