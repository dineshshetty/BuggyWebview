digraph "CFG forkotlinx.coroutines.AbstractTimeSourceKt.wrapTask(Ljava\/lang\/Runnable;)Ljava\/lang\/Runnable;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|kotlinx.coroutines.AbstractTimeSource r0 = getTimeSource()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|if (r0 != null) goto L3\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|java.lang.Runnable r0 = r0.wrapTask(r1)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|if (r0 != null) goto L5\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x000e}"];
Node_20 [shape=record,label="{20\:\ 0x000f|RETURN\lORIG_RETURN\l|return r1\l}"];
MethodNode[shape=record,label="{private static final java.lang.Runnable kotlinx.coroutines.AbstractTimeSourceKt.wrapTask((r1v0 'block' java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000e \-\> B:20:0x000f, CROSS_EDGE: B:14:0x0004 \-\> B:19:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_19[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_19[style=dashed];
Node_17 -> Node_21;
Node_21 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
}

