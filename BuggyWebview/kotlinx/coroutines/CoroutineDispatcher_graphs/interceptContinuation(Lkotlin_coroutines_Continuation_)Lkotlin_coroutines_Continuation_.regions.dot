digraph "CFG forkotlinx.coroutines.CoroutineDispatcher.interceptContinuation(Lkotlin\/coroutines\/Continuation;)Lkotlin\/coroutines\/Continuation;" {
subgraph cluster_Region_1801327078 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0007|RETURN\l|return new kotlinx.coroutines.internal.DispatchedContinuation(r1, r2)\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlin.coroutines.Continuation\<T\> kotlinx.coroutines.CoroutineDispatcher.interceptContinuation((r1v0 'this' kotlinx.coroutines.CoroutineDispatcher A[IMMUTABLE_TYPE, THIS]), (r2v0 kotlin.coroutines.Continuation\<? super T\> A[D('continuation' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/coroutines\/Continuation\<\-TT;\>;)Lkotlin\/coroutines\/Continuation\<TT;\>;\lMETHOD_OVERRIDE: [kotlin.coroutines.ContinuationInterceptor.interceptContinuation(kotlin.coroutines.Continuation\<? super T\>):kotlin.coroutines.Continuation\<T\>]\l}"];
MethodNode -> Node_4;Node_7 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
}

