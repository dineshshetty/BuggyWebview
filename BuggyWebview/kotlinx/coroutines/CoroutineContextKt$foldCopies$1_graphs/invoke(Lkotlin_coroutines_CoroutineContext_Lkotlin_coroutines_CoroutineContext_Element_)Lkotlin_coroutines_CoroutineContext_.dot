digraph "CFG forkotlinx.coroutines.CoroutineContextKt$foldCopies$1.invoke(Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/coroutines\/CoroutineContext$Element;)Lkotlin\/coroutines\/CoroutineContext;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000}"];
Node_11 [shape=record,label="{11\:\ 0x0002|if ((r3 instanceof kotlinx.coroutines.CopyableThreadContextElement) == false) goto L6\l}"];
Node_12 [shape=record,label="{12\:\ 0x0004}"];
Node_13 [shape=record,label="{13\:\ 0x0011|RETURN\l|return r2.plus(((kotlinx.coroutines.CopyableThreadContextElement) r3).copyForChild())\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0012}"];
Node_15 [shape=record,label="{15\:\ 0x0019|RETURN\l|return r2.plus(r3)\l}"];
MethodNode[shape=record,label="{public final kotlin.coroutines.CoroutineContext kotlinx.coroutines.CoroutineContextKt$foldCopies$1.invoke((r1v0 'this' kotlinx.coroutines.CoroutineContextKt$foldCopies$1 A[IMMUTABLE_TYPE, THIS]), (r2v0 'result' kotlin.coroutines.CoroutineContext A[D('result' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'element' kotlin.coroutines.CoroutineContext$Element A[D('element' kotlin.coroutines.CoroutineContext$Element), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0019 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lREPLACED_BY: kotlinx.coroutines.CoroutineContextKt$foldCopies$1.invoke(kotlin.coroutines.CoroutineContext, kotlin.coroutines.CoroutineContext$Element):kotlin.coroutines.CoroutineContext\lBRIDGED_BY: kotlinx.coroutines.CoroutineContextKt$foldCopies$1.invoke(kotlin.coroutines.CoroutineContext, kotlin.coroutines.CoroutineContext$Element):kotlin.coroutines.CoroutineContext\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function2.invoke(P1, P2):R]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

