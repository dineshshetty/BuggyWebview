digraph "CFG forkotlinx.coroutines.debug.AgentPremain.\<clinit\>()V" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.debug.AgentPremain) =  kotlinx.coroutines.debug.AgentPremain \l0x0002: INVOKE  (r0 I:kotlinx.coroutines.debug.AgentPremain) type: DIRECT call: kotlinx.coroutines.debug.AgentPremain.\<init\>():void A[MD:():void (m)]\l0x0005: SPUT  (r0 I:kotlinx.coroutines.debug.AgentPremain) kotlinx.coroutines.debug.AgentPremain.INSTANCE kotlinx.coroutines.debug.AgentPremain \l0x0007: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:24)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0008|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_26 [shape=record,label="{26\:\ 0x0008|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0022, blocks: (B:26:0x0008, B:30:0x001d, B:29:0x0015), top: B:44:0x0008 \}\lCatch: all \-\> 0x0022\l|0x0008: SGET  (r2 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion A[Catch: all \-\> 0x0022, TRY_ENTER]\l0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: CONST_STR  (r3 I:java.lang.String) =  \"kotlinx.coroutines.debug.enable.creation.stack.trace\"  (LINE:25)\l0x000d: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String) type: STATIC call: java.lang.System.getProperty(java.lang.String):java.lang.String A[Catch: all \-\> 0x0022, MD:(java.lang.String):java.lang.String (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0011|0x0011: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0015 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0013|0x0013: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0014: GOTO  \-\> 0x001d \l}"];
Node_30 [shape=record,label="{30\:\ 0x001d|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0022, blocks: (B:26:0x0008, B:30:0x001d, B:29:0x0015), top: B:44:0x0008 \}\lCatch: all \-\> 0x0022\l|0x001d: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0022, MD:\<T\>:(java.lang.Object):java.lang.Object (m), TRY_LEAVE] (LINE:24)\l}"];
Node_34 [shape=record,label="{34\:\ 0x002d|0x002d: INVOKE  (r2 I:boolean) = (r0 I:java.lang.Object) type: STATIC call: kotlin.Result.isFailure\-impl(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)] (LINE:26)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0031|0x0031: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0034 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0034|0x0034: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0035|0x0035: CHECK_CAST (r1 I:java.lang.Boolean) = (java.lang.Boolean) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0037|0x0037: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0040  (LINE:24)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0039|0x0039: SGET  (r0 I:kotlinx.coroutines.debug.internal.DebugProbesImpl) =  kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE kotlinx.coroutines.debug.internal.DebugProbesImpl  (LINE:26)\l0x003b: INVOKE  (r0 I:boolean) = (r0 I:kotlinx.coroutines.debug.internal.DebugProbesImpl) type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugProbesImpl.getEnableCreationStackTraces():boolean A[MD:():boolean (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0044|0x0044: SPUT  (r0 I:boolean) kotlinx.coroutines.debug.AgentPremain.enableCreationStackTraces boolean \l}"];
Node_43 [shape=record,label="{43\:\ 0x0046|RETURN\l|0x0046: RETURN   \l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x0040|0x0040: INVOKE  (r0 I:boolean) = (r1 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)] (LINE:24)\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x0015|TryCatch #0 \{all \-\> 0x0022, blocks: (B:26:0x0008, B:30:0x001d, B:29:0x0015), top: B:44:0x0008 \}\lCatch: all \-\> 0x0022\l|0x0015: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String) type: STATIC call: java.lang.Boolean.parseBoolean(java.lang.String):boolean A[Catch: all \-\> 0x0022, MD:(java.lang.String):boolean (c)]\l0x0019: INVOKE  (r3 I:java.lang.Boolean) = (r3 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[Catch: all \-\> 0x0022, MD:(boolean):java.lang.Boolean (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0022|ExcHandler: all \-\> 0x0022\l|0x0022: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0022]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0023|0x0023: SGET  (r2 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion \l0x0025: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Throwable) type: STATIC call: kotlin.ResultKt.createFailure(java.lang.Throwable):java.lang.Object A[MD:(java.lang.Throwable):java.lang.Object (m)]\l0x0029: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[MD:\<T\>:(java.lang.Object):java.lang.Object (m)]\l}"];
MethodNode[shape=record,label="{static void kotlinx.coroutines.debug.AgentPremain.\<clinit\>()  | CROSS_EDGE: B:41:0x0040 \-\> B:42:0x0044, CROSS_EDGE: B:35:0x0031 \-\> B:38:0x0035, CROSS_EDGE: B:33:0x0023 \-\> B:34:0x002d, CROSS_EDGE: B:29:0x0015 \-\> B:30:0x001d, CROSS_EDGE: B:44:0x0008 \-\> B:32:0x0022\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x001d: r0 '$this$enableCreationStackTraces_u24lambda_u2d0' Lkotlinx\/coroutines\/debug\/AgentPremain;\l  0x000b\-0x001d: r2 '$i$a$\-runCatching\-AgentPremain$enableCreationStackTraces$1' I\lTryCatch #0 \{all \-\> 0x0022, blocks: (B:26:0x0008, B:30:0x001d, B:29:0x0015), top: B:44:0x0008 \}\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [24=4]\}\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_44;
Node_44 -> Node_26;
Node_44 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_34;
Node_30 -> Node_45;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_38[style=dashed];
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_24;
Node_41 -> Node_42;
Node_45 -> Node_32;
Node_29 -> Node_30;
Node_32 -> Node_33;
Node_33 -> Node_34;
}

