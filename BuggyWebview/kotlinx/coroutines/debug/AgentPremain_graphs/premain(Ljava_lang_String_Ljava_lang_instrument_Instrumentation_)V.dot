digraph "CFG forkotlinx.coroutines.debug.AgentPremain.premain(Ljava\/lang\/String;Ljava\/lang\/instrument\/Instrumentation;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlinx.coroutines.debug.internal.AgentInstallationType.INSTANCE.setInstalledStatically$kotlinx_coroutines_core(true)\lr3.addTransformer(kotlinx.coroutines.debug.AgentPremain.DebugProbesTransformer.INSTANCE)\lkotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE.setEnableCreationStackTraces(kotlinx.coroutines.debug.AgentPremain.enableCreationStackTraces)\lkotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE.install()\lkotlinx.coroutines.debug.AgentPremain.INSTANCE.installSignalHandler()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.debug.AgentPremain.premain((r2v0 'args' java.lang.String A[D('args' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'instrumentation' java.lang.instrument.Instrumentation A[D('instrumentation' java.lang.instrument.Instrumentation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/jvm\/JvmStatic;=Annotation\{RUNTIME, type=Lkotlin\/jvm\/JvmStatic;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

