digraph "CFG forkotlinx.coroutines.debug.AgentPremain.installSignalHandler()V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_11 [shape=record,label="{11\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x000e, blocks: (B:11:0x0001), top: B:15:0x0001 \}\lCatch: all \-\> 0x000e\l|sun.misc.Signal.handle(new sun.misc.Signal(\"TRAP\"), kotlinx.coroutines.debug.AgentPremain$$ExternalSyntheticLambda0.INSTANCE)     \/\/ Catch: java.lang.Throwable \-\> Le\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x000e|ExcHandler: all \-\> 0x000e\l}"];
Node_14 [shape=record,label="{14\:\ 0x000f|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.debug.AgentPremain.installSignalHandler((r2v0 'this' kotlinx.coroutines.debug.AgentPremain A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000e \-\> B:14:0x000f, CROSS_EDGE: B:15:0x0001 \-\> B:13:0x000e\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x000e, blocks: (B:11:0x0001), top: B:15:0x0001 \}\l}"];
MethodNode -> Node_9;Node_9 -> Node_15;
Node_15 -> Node_11;
Node_15 -> Node_13;
Node_11 -> Node_16;
Node_11 -> Node_17;
Node_16 -> Node_13;
Node_17 -> Node_10;
Node_13 -> Node_14;
Node_14 -> Node_10;
}

