digraph "CFG forkotlinx.coroutines.debug.AgentPremain.installSignalHandler$lambda\-1(Lsun\/misc\/Signal;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000}"];
Node_11 [shape=record,label="{11\:\ 0x0006|if (kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE.isInstalled$kotlinx_coroutines_core() == false) goto L6\l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE.dumpCoroutines(java.lang.System.out)\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0010|java.lang.System.out.println(\"Cannot perform coroutines dump, debug probes are disabled\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x0017|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.debug.AgentPremain.installSignalHandler$lambda\-1((r2v0 'it' sun.misc.Signal A[D('it' sun.misc.Signal), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x0010 \-\> B:14:0x0017\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

