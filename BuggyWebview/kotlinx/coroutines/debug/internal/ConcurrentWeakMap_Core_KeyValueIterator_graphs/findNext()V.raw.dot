digraph "CFG forkotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.KeyValueIterator.findNext()V" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|LOOP_START\lLOOP:0: B:25:0x0000\-\>B:43:0x0000\l|0x0000: IGET  (r0 I:int) = (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.KeyValueIterator.index int  (LINE:218)\l0x0002: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0004: IPUT  (r0 I:int), (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.KeyValueIterator.index int \l0x0006: IGET  (r1 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap\<K, V\>$Core) = (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.KeyValueIterator.this$0 kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core \l0x0008: INVOKE  (r1 I:int) = (r1 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) type: STATIC call: kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.access$getAllocated$p(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core):int A[MD:(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core):int (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|0x000c: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:41:0x003f \l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|0x000e: IGET  (r0 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap\<K, V\>$Core) = (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.KeyValueIterator.this$0 kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core  (LINE:219)\l0x0010: IGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceArray) = (r0 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.keys java.util.concurrent.atomic.AtomicReferenceArray \l0x0012: IGET  (r1 I:int) = (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.KeyValueIterator.index int \l0x0014: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.concurrent.atomic.AtomicReferenceArray), (r1 I:int) type: VIRTUAL call: java.util.concurrent.atomic.AtomicReferenceArray.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0018: CHECK_CAST (r0 I:kotlinx.coroutines.debug.internal.HashedWeakRef) = (kotlinx.coroutines.debug.internal.HashedWeakRef) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x001a|0x001a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001e \l}"];
Node_29 [shape=record,label="{29\:\ 0x001c|0x001c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|0x0022: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0025 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0025|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0025|0x0025: IPUT  (r0 I:K), (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.KeyValueIterator.key java.lang.Object \l0x0027: IGET  (r0 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap\<K, V\>$Core) = (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.KeyValueIterator.this$0 kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core  (LINE:220)\l0x0029: IGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceArray) = (r0 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.values java.util.concurrent.atomic.AtomicReferenceArray \l0x002b: IGET  (r1 I:int) = (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.KeyValueIterator.index int \l0x002d: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.concurrent.atomic.AtomicReferenceArray), (r1 I:int) type: VIRTUAL call: java.util.concurrent.atomic.AtomicReferenceArray.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0031: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('value' java.lang.Object)]) kotlinx.coroutines.debug.internal.Marked  (LINE:221)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0033|0x0033: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x003a \l}"];
Node_35 [shape=record,label="{35\:\ 0x0035|0x0035: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('value' java.lang.Object)]) \l0x0036: CHECK_CAST (r1 I:kotlinx.coroutines.debug.internal.Marked) = (kotlinx.coroutines.debug.internal.Marked) (r1 I:??[OBJECT, ARRAY]) \l0x0038: IGET  (r0 I:java.lang.Object A[D('value' java.lang.Object)]) = (r1 I:kotlinx.coroutines.debug.internal.Marked) kotlinx.coroutines.debug.internal.Marked.ref java.lang.Object \l}"];
Node_36 [shape=record,label="{36\:\ 0x003a|0x003a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0000  (LINE:222)\l}"];
Node_42 [shape=record,label="{42\:\ 0x003c|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x003c|0x003c: IPUT  \l  (r0 I:V A[D('value' java.lang.Object)])\l  (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator)\l kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.KeyValueIterator.value java.lang.Object  (LINE:223)\l}"];
Node_38 [shape=record,label="{38\:\ 0x003e|RETURN\l|0x003e: RETURN    (LINE:224)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0000|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:25:0x0000\-\>B:43:0x0000\l}"];
Node_44 [shape=record,label="{44\:\ 0x0000|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x001e|0x001e: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlinx.coroutines.debug.internal.HashedWeakRef) type: VIRTUAL call: kotlinx.coroutines.debug.internal.HashedWeakRef.get():java.lang.Object A[MD:():java.lang.Object (s)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x003f|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x003f|RETURN\l|0x003f: RETURN    (LINE:227)\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.KeyValueIterator.findNext((r2 'this' I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:36:0x003a \-\> B:25:0x0000, CROSS_EDGE: B:34:0x0033 \-\> B:36:0x003a, BACK_EDGE: B:31:0x0022 \-\> B:25:0x0000, CROSS_EDGE: B:30:0x001e \-\> B:31:0x0022, CROSS_EDGE: B:39:0x003f \-\> B:24:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0031\-0x003f: r0 'value' Ljava\/lang\/Object;\lTYPE_VARS: [E, V, K]\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_41;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_40;
Node_31 -> Node_44[style=dashed];
Node_40 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_42[style=dashed];
Node_36 -> Node_45;
Node_42 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_24;
Node_45 -> Node_43;
Node_43 -> Node_25;
Node_44 -> Node_43;
Node_30 -> Node_31;
Node_41 -> Node_39;
Node_39 -> Node_24;
}

