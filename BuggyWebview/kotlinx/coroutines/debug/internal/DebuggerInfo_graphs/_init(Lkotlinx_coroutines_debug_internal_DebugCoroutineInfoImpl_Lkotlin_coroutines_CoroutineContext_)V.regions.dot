digraph "CFG forkotlinx.coroutines.debug.internal.DebuggerInfo.\<init\>(Lkotlinx\/coroutines\/debug\/internal\/DebugCoroutineInfoImpl;Lkotlin\/coroutines\/CoroutineContext;)V" {
subgraph cluster_Region_1339489464 {
label = "R(6:1|4|7|10|13|16) | DECL_VAR: java.lang.Thread$State null\l";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0000|kotlinx.coroutines.CoroutineId kotlinx.coroutines.CoroutineId r0 = (kotlinx.coroutines.CoroutineId) r6.get(kotlinx.coroutines.CoroutineId.Key)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001a|PHI: r0 \l  PHI: (r0v5 java.lang.Long A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r4.coroutineId = r0 == null ? null : java.lang.Long.valueOf(r0.getId())\lkotlin.coroutines.ContinuationInterceptor kotlin.coroutines.ContinuationInterceptor r0 = (kotlin.coroutines.ContinuationInterceptor) r6.get(kotlin.coroutines.ContinuationInterceptor.Key)\l}"];
Node_37 [shape=record,label="{37\:\ 0x002e|PHI: r0 \l  PHI: (r0v11 java.lang.String A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r4.dispatcher = r0 == null ? null : r0.toString()\lkotlinx.coroutines.CoroutineName kotlinx.coroutines.CoroutineName r0 = (kotlinx.coroutines.CoroutineName) r6.get(kotlinx.coroutines.CoroutineName.Key)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0042|PHI: r0 \l  PHI: (r0v17 java.lang.String A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r4.name = r0 == null ? null : r0.getName()\lr4.state = r5.getState()\ljava.lang.Thread java.lang.Thread r0 = r5.lastObservedThread\l}"];
Node_48 [shape=record,label="{48\:\ 0x005b|PHI: r0 \l  PHI: (r0v22 java.lang.String A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r4.lastObservedThreadState = (r0 == null \|\| (r0 = r0.getState()) == null) ? null : r0.toString()\ljava.lang.Thread java.lang.Thread r0 = r5.lastObservedThread\l}"];
Node_52 [shape=record,label="{52\:\ 0x0066|PHI: r1 \l  PHI: (r1v1 java.lang.String A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|r4.lastObservedThreadName = r0 != null ? r0.getName() : null\lr4.lastObservedStackTrace = r5.lastObservedStackTrace()\lr4.sequenceNumber = r5.sequenceNumber\l}"];
}
Node_27 [shape=record,color=red,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x000e}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0010}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0026}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0028}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x003a}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x003c}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x004c}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x004e}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x005f}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0062}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x0072}"];
Node_28 [shape=record,color=red,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0050}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0054|REMOVE\lADDED_TO_REGION\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0057}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x003e}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x002a}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0012}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.debug.internal.DebuggerInfo.\<init\>((r4v0 'this' kotlinx.coroutines.debug.internal.DebuggerInfo A[IMMUTABLE_TYPE, THIS]), (r5v0 'source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:49:0x005f \-\> B:52:0x0066, CROSS_EDGE: B:47:0x0057 \-\> B:48:0x005b, CROSS_EDGE: B:45:0x0054 \-\> B:43:0x004e, CROSS_EDGE: B:40:0x003e \-\> B:41:0x0042, CROSS_EDGE: B:36:0x002a \-\> B:37:0x002e, CROSS_EDGE: B:32:0x0012 \-\> B:33:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_27;Node_29 -> Node_30;
Node_33 -> Node_34;
Node_37 -> Node_38;
Node_41 -> Node_42;
Node_48 -> Node_49;
Node_52 -> Node_53;
Node_27 -> Node_29;
Node_30 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_34 -> Node_35;
Node_34 -> Node_36;
Node_35 -> Node_37;
Node_38 -> Node_39;
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_42 -> Node_43;
Node_42 -> Node_44;
Node_43 -> Node_48;
Node_49 -> Node_51;
Node_49 -> Node_52;
Node_51 -> Node_52;
Node_53 -> Node_28;
Node_44 -> Node_45;
Node_45 -> Node_47;
Node_45 -> Node_43;
Node_47 -> Node_48;
Node_40 -> Node_41;
Node_36 -> Node_37;
Node_32 -> Node_33;
}

