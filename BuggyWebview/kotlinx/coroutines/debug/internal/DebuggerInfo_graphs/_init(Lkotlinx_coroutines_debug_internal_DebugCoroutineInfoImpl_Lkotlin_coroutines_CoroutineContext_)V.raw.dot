digraph "CFG forkotlinx.coroutines.debug.internal.DebuggerInfo.\<init\>(Lkotlinx\/coroutines\/debug\/internal\/DebugCoroutineInfoImpl;Lkotlin\/coroutines\/CoroutineContext;)V" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: INVOKE  (r4 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:18)\l0x0003: SGET  (r0 I:kotlinx.coroutines.CoroutineId$Key) =  kotlinx.coroutines.CoroutineId.Key kotlinx.coroutines.CoroutineId$Key  (LINE:20)\l0x0005: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r0 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r6 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x000b: CHECK_CAST (r0 I:kotlinx.coroutines.CoroutineId) = (kotlinx.coroutines.CoroutineId) (r0 I:??[OBJECT, ARRAY]) \l0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0012 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0010|0x0010: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x001a|0x001a: IPUT  (r0 I:java.lang.Long), (r4 I:kotlinx.coroutines.debug.internal.DebuggerInfo) kotlinx.coroutines.debug.internal.DebuggerInfo.coroutineId java.lang.Long \l0x001c: SGET  (r0 I:kotlin.coroutines.ContinuationInterceptor$Key) =  kotlin.coroutines.ContinuationInterceptor.Key kotlin.coroutines.ContinuationInterceptor$Key  (LINE:21)\l0x001e: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r0 I:??[OBJECT, ARRAY]) \l0x0020: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r6 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x0024: CHECK_CAST (r0 I:kotlin.coroutines.ContinuationInterceptor) = (kotlin.coroutines.ContinuationInterceptor) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0026|0x0026: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x002a \l}"];
Node_35 [shape=record,label="{35\:\ 0x0028|0x0028: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x002e|0x002e: IPUT  (r0 I:java.lang.String), (r4 I:kotlinx.coroutines.debug.internal.DebuggerInfo) kotlinx.coroutines.debug.internal.DebuggerInfo.dispatcher java.lang.String \l0x0030: SGET  (r0 I:kotlinx.coroutines.CoroutineName$Key) =  kotlinx.coroutines.CoroutineName.Key kotlinx.coroutines.CoroutineName$Key  (LINE:22)\l0x0032: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r0 I:??[OBJECT, ARRAY]) \l0x0034: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r6 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x0038: CHECK_CAST (r0 I:kotlinx.coroutines.CoroutineName) = (kotlinx.coroutines.CoroutineName) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x003a|0x003a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x003e \l}"];
Node_39 [shape=record,label="{39\:\ 0x003c|0x003c: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0042|0x0042: IPUT  (r0 I:java.lang.String), (r4 I:kotlinx.coroutines.debug.internal.DebuggerInfo) kotlinx.coroutines.debug.internal.DebuggerInfo.name java.lang.String \l0x0044: INVOKE  (r0 I:java.lang.String) = \l  (r5 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.getState():java.lang.String A[MD:():java.lang.String (m)] (LINE:23)\l0x0048: IPUT  (r0 I:java.lang.String), (r4 I:kotlinx.coroutines.debug.internal.DebuggerInfo) kotlinx.coroutines.debug.internal.DebuggerInfo.state java.lang.String \l0x004a: IGET  (r0 I:java.lang.Thread) = \l  (r5 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)])\l kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.lastObservedThread java.lang.Thread  (LINE:24)\l}"];
Node_42 [shape=record,label="{42\:\ 0x004c|0x004c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0050 \l}"];
Node_43 [shape=record,label="{43\:\ 0x004e|0x004e: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x005b|0x005b: IPUT  (r0 I:java.lang.String), (r4 I:kotlinx.coroutines.debug.internal.DebuggerInfo) kotlinx.coroutines.debug.internal.DebuggerInfo.lastObservedThreadState java.lang.String \l0x005d: IGET  (r0 I:java.lang.Thread) = \l  (r5 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)])\l kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.lastObservedThread java.lang.Thread  (LINE:25)\l}"];
Node_49 [shape=record,label="{49\:\ 0x005f|0x005f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0062 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0062|0x0062: INVOKE  (r1 I:java.lang.String) = (r0 I:java.lang.Thread) type: VIRTUAL call: java.lang.Thread.getName():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0066|0x0066: IPUT  (r1 I:java.lang.String), (r4 I:kotlinx.coroutines.debug.internal.DebuggerInfo) kotlinx.coroutines.debug.internal.DebuggerInfo.lastObservedThreadName java.lang.String \l0x0068: INVOKE  (r0 I:java.util.List) = \l  (r5 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.lastObservedStackTrace():java.util.List A[MD:():java.util.List\<java.lang.StackTraceElement\> (m)] (LINE:26)\l0x006c: IPUT  (r0 I:java.util.List\<java.lang.StackTraceElement\>), (r4 I:kotlinx.coroutines.debug.internal.DebuggerInfo) kotlinx.coroutines.debug.internal.DebuggerInfo.lastObservedStackTrace java.util.List \l0x006e: IGET  (r0 I:long) = \l  (r5 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)])\l kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.sequenceNumber long  (LINE:27)\l0x0070: IPUT  (r0 I:long), (r4 I:kotlinx.coroutines.debug.internal.DebuggerInfo) kotlinx.coroutines.debug.internal.DebuggerInfo.sequenceNumber long \l}"];
Node_53 [shape=record,label="{53\:\ 0x0072|RETURN\l|0x0072: RETURN    (LINE:19)\l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0050|0x0050: INVOKE  (r0 I:java.lang.Thread$State) = (r0 I:java.lang.Thread) type: VIRTUAL call: java.lang.Thread.getState():java.lang.Thread$State A[MD:():java.lang.Thread$State (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0054|0x0054: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0057 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0057|0x0057: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Thread$State) type: VIRTUAL call: java.lang.Thread.State.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x003e|0x003e: INVOKE  (r0 I:java.lang.String) = (r0 I:kotlinx.coroutines.CoroutineName) type: VIRTUAL call: kotlinx.coroutines.CoroutineName.getName():java.lang.String A[MD:():java.lang.String (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x002a|0x002a: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0012|0x0012: INVOKE  (r2 I:long) = (r0 I:kotlinx.coroutines.CoroutineId) type: VIRTUAL call: kotlinx.coroutines.CoroutineId.getId():long A[MD:():long (m)]\l0x0016: INVOKE  (r0 I:java.lang.Long) = (r2 I:long) type: STATIC call: java.lang.Long.valueOf(long):java.lang.Long A[MD:(long):java.lang.Long (c)]\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.debug.internal.DebuggerInfo.\<init\>((r4 'this' I:kotlinx.coroutines.debug.internal.DebuggerInfo A[IMMUTABLE_TYPE, THIS]), (r5 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:49:0x005f \-\> B:52:0x0066, CROSS_EDGE: B:47:0x0057 \-\> B:48:0x005b, CROSS_EDGE: B:45:0x0054 \-\> B:43:0x004e, CROSS_EDGE: B:40:0x003e \-\> B:41:0x0042, CROSS_EDGE: B:36:0x002a \-\> B:37:0x002e, CROSS_EDGE: B:32:0x0012 \-\> B:33:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0072: r5 'source' Lkotlinx\/coroutines\/debug\/internal\/DebugCoroutineInfoImpl;\l  \-1 \-0x0072: r6 'context' Lkotlin\/coroutines\/CoroutineContext;\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_51;
Node_49 -> Node_52[style=dashed];
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_28;
Node_44 -> Node_45;
Node_45 -> Node_47;
Node_45 -> Node_43[style=dashed];
Node_47 -> Node_48;
Node_40 -> Node_41;
Node_36 -> Node_37;
Node_32 -> Node_33;
}

