digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3.invoke(Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl$CoroutineOwner;)Ljava\/lang\/Object;" {
subgraph cluster_Region_90846876 {
label = "R(2:1|(2:(1:8)|(1:6))) | DECL_VAR: boolean null, kotlin.coroutines.CoroutineContext context\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|boolean r0 = kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE.isFinished(r4)\l}"];
subgraph cluster_Region_1379798257 {
label = "R(2:(1:8)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_736018485 {
label = "IF [B:3:0x0007, B:6:0x0010] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r0 == true) goto L9\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|ADDED_TO_REGION\l|if ((r0 = r4.info.getContext()) == null) goto L8\l}"];
subgraph cluster_Region_783690492 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1443676683 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001a|RETURN\lORIG_RETURN\l|return r3.$create.invoke(r4, r0)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000a}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0013}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return null\l}"];
MethodNode[shape=record,label="{public final R kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3.invoke((r3v0 'this' kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3 A[IMMUTABLE_TYPE, THIS]), (r4v0 kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\> A[D('owner' kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0010 \-\> B:9:0x001a, CROSS_EDGE: B:3:0x0007 \-\> B:9:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl$CoroutineOwner\<*\>;)TR;\lRENAME_REASON:avoid collision after fix types in other method\lREPLACED_BY: kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3.invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\>):java.lang.Object\lBRIDGED_BY: kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3.invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\>):java.lang.Object\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r1v2, types: [R, java.lang.Object]\l DEBUG: \l \-\> Method merged with bridge method\}\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function1.invoke(P1):R]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_5[style=dashed];
Node_3 -> Node_10;
Node_6 -> Node_8[style=dashed];
Node_6 -> Node_11;
Node_11 -> Node_1;
Node_9 -> Node_1;
Node_0 -> Node_2;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_10 -> Node_1;
}

