digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.updateState(Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl$CoroutineOwner;Lkotlin\/coroutines\/Continuation;Ljava\/lang\/String;)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: SGET  (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock) =  kotlinx.coroutines.debug.internal.DebugProbesImpl.coroutineStateLock java.util.concurrent.locks.ReentrantReadWriteLock  (LINE:470)\l0x0002: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock) = (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.readLock():java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock A[MD:():java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock (c)]\l0x0006: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.lock():void A[MD:():void (c)]\l0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x000a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0022, blocks: (B:18:0x000a, B:22:0x0016), top: B:28:0x000a \}\lCatch: all \-\> 0x0022\l|0x000a: SGET  (r2 I:kotlinx.coroutines.debug.internal.DebugProbesImpl) =  kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE kotlinx.coroutines.debug.internal.DebugProbesImpl A[Catch: all \-\> 0x0022, TRY_ENTER] (LINE:471)\l0x000c: INVOKE  (r2 I:boolean) = (r2 I:kotlinx.coroutines.debug.internal.DebugProbesImpl) type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugProbesImpl.isInstalled$kotlinx_coroutines_core():boolean A[Catch: all \-\> 0x0022, MD:():boolean (m), TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0016 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|0x0012: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.unlock():void A[MD:():void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|RETURN\l|0x0015: RETURN   \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0022, blocks: (B:18:0x000a, B:22:0x0016), top: B:28:0x000a \}\lCatch: all \-\> 0x0022\l|0x0016: IGET  (r2 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl) = \l  (r4 I:kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner A[D('owner' kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)])\l kotlinx.coroutines.debug.internal.DebugProbesImpl.CoroutineOwner.info kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[Catch: all \-\> 0x0022, TRY_ENTER] (LINE:472)\l0x0018: INVOKE  \l  (r2 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)\l  (r6 I:java.lang.String A[D('state' java.lang.String)])\l  (r5 I:kotlin.coroutines.Continuation A[D('frame' kotlin.coroutines.Continuation)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.updateState$kotlinx_coroutines_core(java.lang.String, kotlin.coroutines.Continuation):void A[Catch: all \-\> 0x0022, MD:(java.lang.String, kotlin.coroutines.Continuation\<?\>):void (m)]\l0x001c: SGET  (r1 I:kotlin.Unit A[D('$i$a$\-read\-DebugProbesImpl$updateState$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x0022, TRY_LEAVE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x001e|0x001e: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.unlock():void A[MD:():void (c)] (LINE:470)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0021|RETURN\l|0x0021: RETURN    (LINE:473)\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_25 [shape=record,label="{25\:\ 0x0022|ExcHandler: all \-\> 0x0022\l|0x0022: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0022] (LINE:470)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0023|0x0023: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.unlock():void A[MD:():void (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0026|0x0026: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.debug.internal.DebugProbesImpl.updateState((r3 'this' I:kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\> A[D('owner' kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.coroutines.Continuation\<?\> A[D('frame' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[D('state' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0021 \-\> B:16:?, CROSS_EDGE: B:27:0x0026 \-\> B:16:?, CROSS_EDGE: B:28:0x000a \-\> B:25:0x0022\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x0012: r1 '$i$a$\-read\-DebugProbesImpl$updateState$1' I\l  0x0016\-0x001c: r1 '$i$a$\-read\-DebugProbesImpl$updateState$1' I\l  \-1 \-0x0026: r4 'owner' Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl$CoroutineOwner;\l  \-1 \-0x0026: r5 'frame' Lkotlin\/coroutines\/Continuation;\l  \-1 \-0x0026: r6 'state' Ljava\/lang\/String;\lTryCatch #0 \{all \-\> 0x0022, blocks: (B:18:0x000a, B:22:0x0016), top: B:28:0x000a \}\lSIGNATURE: (Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl$CoroutineOwner\<*\>;Lkotlin\/coroutines\/Continuation\<*\>;Ljava\/lang\/String;)V\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_28;
Node_28 -> Node_18;
Node_28 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_16;
Node_22 -> Node_23;
Node_22 -> Node_29;
Node_23 -> Node_24;
Node_24 -> Node_16;
Node_29 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_16;
}

