digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.findIndexOfFrame(I[Ljava\/lang\/StackTraceElement;Ljava\/util\/List;)I" {
subgraph cluster_Region_245059836 {
label = "R(2:1|(2:(1:3)|(3:5|(2:8|(2:(1:19)|(1:16)))|22)))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0000|java.lang.StackTraceElement java.lang.StackTraceElement r0 = (java.lang.StackTraceElement) kotlin.collections.ArraysKt.getOrNull(r13, r12)\l}"];
subgraph cluster_Region_379966756 {
label = "R(2:(1:3)|(3:5|(2:8|(2:(1:19)|(1:16)))|22))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1391051173 {
label = "IF [B:28:0x0007] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0007|if (r0 == null) goto L3\l}"];
subgraph cluster_Region_652806507 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0009|RETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_359492541 {
label = "R(3:5|(2:8|(2:(1:19)|(1:16)))|22)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x000a|int r4 = 0\ljava.util.Iterator r5 = r14.iterator()\l\l}"];
subgraph cluster_LoopRegion_1645148037 {
label = "LOOP:0: (2:8|(2:(1:19)|(1:16)))";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0015|java.lang.Object \lif (r5.hasNext() != false) goto L8\l}"];
subgraph cluster_Region_1489852758 {
label = "R(2:8|(2:(1:19)|(1:16)))";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0017|java.lang.Object r6 = r5.next()\ljava.lang.StackTraceElement java.lang.StackTraceElement r7 = (java.lang.StackTraceElement) r6\l}"];
subgraph cluster_Region_2050696421 {
label = "R(2:(1:19)|(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1588291534 {
label = "IF [B:42:0x004d] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x004d|PHI: r9 \l  PHI: (r9v3 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((kotlin.jvm.internal.Intrinsics.areEqual(r7.getFileName(), r0.getFileName()) && kotlin.jvm.internal.Intrinsics.areEqual(r7.getClassName(), r0.getClassName()) && kotlin.jvm.internal.Intrinsics.areEqual(r7.getMethodName(), r0.getMethodName())) != false) goto L17\l}"];
subgraph cluster_Region_1574813748 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0055|RETURN\lORIG_RETURN\l|return r4\l}"];
}
}
subgraph cluster_Region_1092998492 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0051|LOOP_END\lLOOP:0: B:31:0x0011\-\>B:44:0x0051\l|r4++\l}"];
}
}
}
}
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
}
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0011|LOOP_START\lLOOP:0: B:31:0x0011\-\>B:44:0x0051\lPHI: r4 \l  PHI: (r4v1 'index$iv' int) = (r4v0 'index$iv' int), (r4v2 'index$iv' int) binds: [B:30:0x000a, B:44:0x0051] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x002b}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x002d}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0039|REMOVE\lADDED_TO_REGION\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x003b}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0047|REMOVE\lADDED_TO_REGION\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0049}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x004f|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x004f}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x004b}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0055|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final int kotlinx.coroutines.debug.internal.DebugProbesImpl.findIndexOfFrame((r11v0 'this' kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]), (r12v0 'frameIndex' int A[D('frameIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'actualTrace' java.lang.StackTraceElement[] A[D('actualTrace' java.lang.StackTraceElement[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 java.util.List\<java.lang.StackTraceElement\> A[D('coroutineTrace' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:46:0x0055 \-\> B:26:?, BACK_EDGE: B:44:0x0051 \-\> B:31:0x0011, CROSS_EDGE: B:40:0x004b \-\> B:42:0x004d, CROSS_EDGE: B:36:0x0039 \-\> B:40:0x004b, CROSS_EDGE: B:34:0x002b \-\> B:40:0x004b, CROSS_EDGE: B:32:0x0015 \-\> B:46:0x0055\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (I[Ljava\/lang\/StackTraceElement;Ljava\/util\/List\<Ljava\/lang\/StackTraceElement;\>;)I\l}"];
MethodNode -> Node_25;Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_30[style=dashed];
Node_29 -> Node_26;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_32 -> Node_47[style=dashed];
Node_33 -> Node_34;
Node_42 -> Node_44[style=dashed];
Node_42 -> Node_48;
Node_46 -> Node_26;
Node_44 -> Node_31;
Node_49 -> Node_26;
Node_25 -> Node_27;
Node_31 -> Node_32;
Node_34 -> Node_35;
Node_34 -> Node_40;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_40;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_38 -> Node_40;
Node_39 -> Node_42;
Node_48 -> Node_43;
Node_43 -> Node_46;
Node_40 -> Node_42;
Node_47 -> Node_49;
}

