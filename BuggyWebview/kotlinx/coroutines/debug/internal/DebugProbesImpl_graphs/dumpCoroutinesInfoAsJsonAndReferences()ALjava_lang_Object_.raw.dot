digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.dumpCoroutinesInfoAsJsonAndReferences()[Ljava\/lang\/Object;" {
Node_38 [shape=record,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY])  (LINE:189)\l0x0002: INVOKE  (r1 I:java.util.List) = (r18 I:kotlinx.coroutines.debug.internal.DebugProbesImpl) type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugProbesImpl.dumpCoroutinesInfo():java.util.List A[MD:():java.util.List\<kotlinx.coroutines.debug.internal.DebugCoroutineInfo\> (m)]\l0x0006: INVOKE  (r2 I:int) = (r1 I:java.util.List A[D('coroutinesInfo' java.util.List)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:190)\l0x000a: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:191)\l0x000c: INVOKE  (r3 I:java.util.ArrayList), (r2 I:int A[D('size' int)]) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x000f: NEW_INSTANCE  (r4 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:192)\l0x0011: INVOKE  (r4 I:java.util.ArrayList), (r2 I:int A[D('size' int)]) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0014: NEW_INSTANCE  (r5 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:193)\l0x0016: INVOKE  (r5 I:java.util.ArrayList), (r2 I:int A[D('size' int)]) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0019: INVOKE  (r6 I:java.util.Iterator) = (r1 I:java.util.List A[D('coroutinesInfo' java.util.List)]) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:194)\l}"];
Node_41 [shape=record,label="{41\:\ 0x001d|LOOP_START\lLOOP:0: B:41:0x001d\-\>B:58:0x0083\l|0x001d: INVOKE  (r7 I:boolean) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0021|0x0021: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:73:0x00cb \l}"];
Node_43 [shape=record,label="{43\:\ 0x0023|0x0023: INVOKE  (r7 I:java.lang.Object) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0027: CHECK_CAST (r7 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo) = (kotlinx.coroutines.debug.internal.DebugCoroutineInfo) (r7 I:??[OBJECT, ARRAY]) \l0x0029: INVOKE  (r8 I:kotlin.coroutines.CoroutineContext) = \l  (r7 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo A[D('info' kotlinx.coroutines.debug.internal.DebugCoroutineInfo)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugCoroutineInfo.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)] (LINE:195)\l0x002d: SGET  (r9 I:kotlinx.coroutines.CoroutineName$Key) =  kotlinx.coroutines.CoroutineName.Key kotlinx.coroutines.CoroutineName$Key  (LINE:196)\l0x002f: CHECK_CAST (r9 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r9 I:??[OBJECT, ARRAY]) \l0x0031: INVOKE  (r9 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r8 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r9 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x0035: CHECK_CAST (r9 I:kotlinx.coroutines.CoroutineName) = (kotlinx.coroutines.CoroutineName) (r9 I:??[OBJECT, ARRAY]) \l0x0037: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0038|0x0038: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x003c \l}"];
Node_45 [shape=record,label="{45\:\ 0x003a|0x003a: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0047|0x0047: SGET  (r11 I:kotlinx.coroutines.CoroutineDispatcher$Key) =  kotlinx.coroutines.CoroutineDispatcher.Key kotlinx.coroutines.CoroutineDispatcher$Key  (LINE:197)\l0x0049: CHECK_CAST (r11 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r11 I:??[OBJECT, ARRAY]) \l0x004b: INVOKE  (r11 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r8 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r11 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x004f: CHECK_CAST (r11 I:kotlinx.coroutines.CoroutineDispatcher) = (kotlinx.coroutines.CoroutineDispatcher) (r11 I:??[OBJECT, ARRAY]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0051|0x0051: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0055 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0053|0x0053: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0059|0x005a: NEW_INSTANCE  (r12 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:199)\l0x005c: INVOKE  (r12 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x005f: CONST_STR  (r13 I:java.lang.String) =  \"n                \{n                    \"name\": \" \l0x0061: INVOKE  (r12 I:java.lang.StringBuilder), (r13 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0065: INVOKE  (r12 I:java.lang.StringBuilder), (r9 I:java.lang.Object A[D('name' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)] (LINE:199)\l0x0069: CONST_STR  (r13 I:java.lang.String) =  \",n                    \"id\": \"  (LINE:199)\l0x006b: INVOKE  (r12 I:java.lang.StringBuilder), (r13 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x006e: SGET  (r13 I:kotlinx.coroutines.CoroutineId$Key) =  kotlinx.coroutines.CoroutineId.Key kotlinx.coroutines.CoroutineId$Key  (LINE:202)\l0x0070: CHECK_CAST (r13 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r13 I:??[OBJECT, ARRAY]) \l0x0072: INVOKE  (r13 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r8 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r13 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x0076: CHECK_CAST (r13 I:kotlinx.coroutines.CoroutineId) = (kotlinx.coroutines.CoroutineId) (r13 I:??[OBJECT, ARRAY]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x0078|0x0078: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x007b \l}"];
Node_57 [shape=record,label="{57\:\ 0x007b|0x007b: INVOKE  (r13 I:long) = (r13 I:kotlinx.coroutines.CoroutineId) type: VIRTUAL call: kotlinx.coroutines.CoroutineId.getId():long A[MD:():long (m)]\l0x007f: INVOKE  (r10 I:java.lang.Long) = (r13 I:long) type: STATIC call: java.lang.Long.valueOf(long):java.lang.Long A[MD:(long):java.lang.Long (c)]\l}"];
Node_74 [shape=record,label="{74\:\ 0x0083|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x0083|LOOP_END\lLOOP:0: B:41:0x001d\-\>B:58:0x0083\l|0x0083: INVOKE  (r12 I:java.lang.StringBuilder), (r10 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)] (LINE:199)\l0x0087: CONST_STR  (r10 I:java.lang.String) =  \",n                    \"dispatcher\": \"  (LINE:199)\l0x0089: INVOKE  (r12 I:java.lang.StringBuilder), (r10 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x008d: INVOKE  (r12 I:java.lang.StringBuilder), (r11 I:java.lang.Object A[D('dispatcher' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)] (LINE:199)\l0x0091: CONST_STR  (r10 I:java.lang.String) =  \",n                    \"sequenceNumber\": \"  (LINE:199)\l0x0093: INVOKE  (r12 I:java.lang.StringBuilder), (r10 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0096: INVOKE  (r13 I:long) = \l  (r7 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo A[D('info' kotlinx.coroutines.debug.internal.DebugCoroutineInfo)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugCoroutineInfo.getSequenceNumber():long A[MD:():long (m)] (LINE:204)\l0x009a: INVOKE  (r12 I:java.lang.StringBuilder), (r13 I:long) type: VIRTUAL call: java.lang.StringBuilder.append(long):java.lang.StringBuilder A[MD:(long):java.lang.StringBuilder (c)] (LINE:199)\l0x009e: CONST_STR  (r10 I:java.lang.String) =  \",n                    \"state\": \"\"  (LINE:199)\l0x00a0: INVOKE  (r12 I:java.lang.StringBuilder), (r10 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00a3: INVOKE  (r10 I:java.lang.String) = \l  (r7 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo A[D('info' kotlinx.coroutines.debug.internal.DebugCoroutineInfo)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugCoroutineInfo.getState():java.lang.String A[MD:():java.lang.String (m)] (LINE:205)\l0x00a7: INVOKE  (r12 I:java.lang.StringBuilder), (r10 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)] (LINE:199)\l0x00ab: CONST_STR  (r10 I:java.lang.String) =  \"\"n                \} n                \"  (LINE:199)\l0x00ad: INVOKE  (r12 I:java.lang.StringBuilder), (r10 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00b0: INVOKE  (r10 I:java.lang.String) = (r12 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x00b4: INVOKE  (r10 I:java.lang.String) = (r10 I:java.lang.String) type: STATIC call: kotlin.text.StringsKt.trimIndent(java.lang.String):java.lang.String A[MD:(java.lang.String):java.lang.String (m)] (LINE:207)\l0x00b8: INVOKE  (r5 I:java.util.ArrayList A[D('coroutinesInfoAsJson' java.util.ArrayList)]), (r10 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:198)\l0x00bb: INVOKE  (r10 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame) = \l  (r7 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo A[D('info' kotlinx.coroutines.debug.internal.DebugCoroutineInfo)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugCoroutineInfo.getLastObservedFrame():kotlin.coroutines.jvm.internal.CoroutineStackFrame A[MD:():kotlin.coroutines.jvm.internal.CoroutineStackFrame (m)] (LINE:209)\l0x00bf: INVOKE  (r4 I:java.util.ArrayList A[D('lastObservedFrames' java.util.ArrayList)]), (r10 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x00c2: INVOKE  (r10 I:java.lang.Thread) = \l  (r7 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo A[D('info' kotlinx.coroutines.debug.internal.DebugCoroutineInfo)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugCoroutineInfo.getLastObservedThread():java.lang.Thread A[MD:():java.lang.Thread (m)] (LINE:210)\l0x00c6: INVOKE  (r3 I:java.util.ArrayList A[D('lastObservedThreads' java.util.ArrayList)]), (r10 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_75 [shape=record,label="{75\:\ 0x0083|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0055|0x0055: INVOKE  (r11 I:java.lang.String) = (r0 I:kotlinx.coroutines.debug.internal.DebugProbesImpl), (r11 I:java.lang.Object) type: DIRECT call: kotlinx.coroutines.debug.internal.DebugProbesImpl.toStringWithQuotes(java.lang.Object):java.lang.String A[MD:(java.lang.Object):java.lang.String (m)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x003c|0x003c: INVOKE  (r9 I:java.lang.String) = (r9 I:kotlinx.coroutines.CoroutineName) type: VIRTUAL call: kotlinx.coroutines.CoroutineName.getName():java.lang.String A[MD:():java.lang.String (m)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0040|0x0040: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0043 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0043|0x0043: INVOKE  (r9 I:java.lang.String) = (r0 I:kotlinx.coroutines.debug.internal.DebugProbesImpl), (r9 I:java.lang.Object) type: DIRECT call: kotlinx.coroutines.debug.internal.DebugProbesImpl.toStringWithQuotes(java.lang.Object):java.lang.String A[MD:(java.lang.Object):java.lang.String (m)]\l}"];
Node_73 [shape=record,label="{73\:\ 0x00cb|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x00cb|0x00cb: CONST  (r6 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:214)\l0x00cc: NEW_ARRAY  (r6 I:java.lang.Object[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x00ce: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00d0: INVOKE  (r7 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x00d3: CONST  (r8 I:??[int, float, short, byte, char]) = (91 ??[int, float, short, byte, char]) \l0x00d5: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x00d8: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('coroutinesInfoAsJson' java.util.ArrayList)]) \l0x00d9: CHECK_CAST (r9 I:java.lang.Iterable) = (java.lang.Iterable) (r9 I:??[OBJECT, ARRAY]) \l0x00db: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00dc: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00dd: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00de: CONST  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00df: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00e0: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00e1: CONST  (r16 I:??[int, float, short, byte, char]) = (63 ??[int, float, short, byte, char]) \l0x00e3: CONST  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00e5: INVOKE  (r8 I:java.lang.String) = \l  (r9 I:java.lang.Iterable)\l  (r10 I:java.lang.CharSequence)\l  (r11 I:java.lang.CharSequence)\l  (r12 I:java.lang.CharSequence)\l  (r13 I:int)\l  (r14 I:java.lang.CharSequence)\l  (r15 I:kotlin.jvm.functions.Function1)\l  (r16 I:int)\l  (r17 I:java.lang.Object)\l type: STATIC call: kotlin.collections.CollectionsKt.joinToString$default(java.lang.Iterable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object):java.lang.String A[MD:(java.lang.Iterable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object):java.lang.String (m)]\l0x00e9: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00ec: CONST  (r8 I:??[int, float, short, byte, char]) = (93 ??[int, float, short, byte, char]) \l0x00ee: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x00f1: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x00f5: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00f6: APUT  (r6 I:??[OBJECT, ARRAY][]), (r8 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) \l0x00f8: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x00f9: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('lastObservedThreads' java.util.ArrayList)])  (LINE:215)\l0x00fa: CHECK_CAST (r9 I:java.util.Collection) = (java.util.Collection) (r9 I:??[OBJECT, ARRAY]) \l0x00fc: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00fe: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$toTypedArray$iv' java.util.Collection)])  (LINE:616)\l0x00ff: NEW_ARRAY  (r12 I:java.lang.Thread[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: java.lang.Thread[]  (LINE:618)\l0x0101: INVOKE  (r12 I:java.lang.Object[]) = (r11 I:java.util.Collection A[D('thisCollection$iv' java.util.Collection)]), (r12 I:java.lang.Object[]) type: INTERFACE call: java.util.Collection.toArray(java.lang.Object[]):java.lang.Object[] A[MD:\<T\>:(T[]):T[] (c)]\l0x0105: CONST_STR  (r13 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlin.Array\<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray\>\" \l}"];
Node_60 [shape=record,label="{60\:\ 0x0107|0x0107: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x013b \l}"];
Node_61 [shape=record,label="{61\:\ 0x0109|0x0109: APUT  (r6 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char]), (r12 I:??[OBJECT, ARRAY]) \l0x010b: CONST  (r7 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:214)\l0x010c: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('lastObservedFrames' java.util.ArrayList)])  (LINE:216)\l0x010d: CHECK_CAST (r9 I:java.util.Collection) = (java.util.Collection) (r9 I:??[OBJECT, ARRAY]) \l0x010f: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0111: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$toTypedArray$iv' java.util.Collection)])  (LINE:620)\l0x0112: NEW_ARRAY  (r12 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: kotlin.coroutines.jvm.internal.CoroutineStackFrame[]  (LINE:622)\l0x0114: INVOKE  (r12 I:java.lang.Object[]) = (r11 I:java.util.Collection A[D('thisCollection$iv' java.util.Collection)]), (r12 I:java.lang.Object[]) type: INTERFACE call: java.util.Collection.toArray(java.lang.Object[]):java.lang.Object[] A[MD:\<T\>:(T[]):T[] (c)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x0118|0x0118: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0135 \l}"];
Node_63 [shape=record,label="{63\:\ 0x011a|0x011a: APUT  (r6 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char]), (r12 I:??[OBJECT, ARRAY]) \l0x011c: CONST  (r7 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:214)\l0x011d: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('coroutinesInfo' java.util.List)])  (LINE:217)\l0x011e: CHECK_CAST (r9 I:java.util.Collection) = (java.util.Collection) (r9 I:??[OBJECT, ARRAY]) \l0x0120: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0122: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$toTypedArray$iv' java.util.Collection)])  (LINE:624)\l0x0123: NEW_ARRAY  (r8 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: kotlinx.coroutines.debug.internal.DebugCoroutineInfo[]  (LINE:626)\l0x0125: INVOKE  (r8 I:java.lang.Object[]) = (r11 I:java.util.Collection A[D('thisCollection$iv' java.util.Collection)]), (r8 I:java.lang.Object[]) type: INTERFACE call: java.util.Collection.toArray(java.lang.Object[]):java.lang.Object[] A[MD:\<T\>:(T[]):T[] (c)]\l}"];
Node_64 [shape=record,label="{64\:\ 0x0129|0x0129: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x012f \l}"];
Node_65 [shape=record,label="{65\:\ 0x012b|0x012b: APUT  (r6 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char]), (r8 I:??[OBJECT, ARRAY]) \l}"];
Node_66 [shape=record,label="{66\:\ 0x012e|RETURN\l|0x012e: RETURN  (r6 I:java.lang.Object[])  (LINE:213)\l}"];
Node_39 [shape=record,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_67 [shape=record,label="{67\:\ 0x012f|0x012f: NEW_INSTANCE  (r6 I:java.lang.NullPointerException) =  java.lang.NullPointerException  (LINE:626)\l0x0131: INVOKE  (r6 I:java.lang.NullPointerException), (r13 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_68 [shape=record,label="{68\:\ 0x0134|0x0134: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_69 [shape=record,label="{69\:\ 0x0135|0x0135: NEW_INSTANCE  (r6 I:java.lang.NullPointerException) =  java.lang.NullPointerException  (LINE:622)\l0x0137: INVOKE  (r6 I:java.lang.NullPointerException), (r13 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_70 [shape=record,label="{70\:\ 0x013a|0x013a: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_71 [shape=record,label="{71\:\ 0x013b|0x013b: NEW_INSTANCE  (r6 I:java.lang.NullPointerException) =  java.lang.NullPointerException  (LINE:618)\l0x013d: INVOKE  (r6 I:java.lang.NullPointerException), (r13 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_72 [shape=record,label="{72\:\ 0x0140|0x0140: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object[] kotlinx.coroutines.debug.internal.DebugProbesImpl.dumpCoroutinesInfoAsJsonAndReferences((r18 'this' I:kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]))  | BACK_EDGE: B:58:0x0083 \-\> B:41:0x001d, CROSS_EDGE: B:55:0x0078 \-\> B:58:0x0083, CROSS_EDGE: B:53:0x0055 \-\> B:54:0x0059, CROSS_EDGE: B:49:0x0043 \-\> B:50:0x0047, CROSS_EDGE: B:47:0x0040 \-\> B:45:0x003a, CROSS_EDGE: B:68:0x0134 \-\> B:39:?, CROSS_EDGE: B:70:0x013a \-\> B:39:?, CROSS_EDGE: B:72:0x0140 \-\> B:39:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0029\-0x00cb: r7 'info' Lkotlinx\/coroutines\/debug\/internal\/DebugCoroutineInfo;\l  0x002d\-0x00cb: r8 'context' Lkotlin\/coroutines\/CoroutineContext;\l  0x0047\-0x00cb: r9 'name' Ljava\/lang\/String;\l  0x0059\-0x00cb: r11 'dispatcher' Ljava\/lang\/String;\l  0x00fc\-0x0109: r9 '$this$toTypedArray$iv' Ljava\/util\/Collection;\l  0x00fd\-0x0109: r10 '$i$f$toTypedArray' I\l  0x00ff\-0x0109: r11 'thisCollection$iv' Ljava\/util\/Collection;\l  0x010f\-0x011a: r9 '$this$toTypedArray$iv' Ljava\/util\/Collection;\l  0x0110\-0x011a: r10 '$i$f$toTypedArray' I\l  0x0112\-0x011a: r11 'thisCollection$iv' Ljava\/util\/Collection;\l  0x0120\-0x012b: r9 '$this$toTypedArray$iv' Ljava\/util\/Collection;\l  0x0121\-0x012b: r10 '$i$f$toTypedArray' I\l  0x0123\-0x012b: r11 'thisCollection$iv' Ljava\/util\/Collection;\l  0x0006\-0x0140: r1 'coroutinesInfo' Ljava\/util\/List;\l  0x000a\-0x0140: r2 'size' I\l  0x000f\-0x0140: r3 'lastObservedThreads' Ljava\/util\/ArrayList;\l  0x0014\-0x0140: r4 'lastObservedFrames' Ljava\/util\/ArrayList;\l  0x0019\-0x0140: r5 'coroutinesInfoAsJson' Ljava\/util\/ArrayList;\l  0x012f\-0x0140: r9 '$this$toTypedArray$iv' Ljava\/util\/Collection;\l  0x012f\-0x0140: r10 '$i$f$toTypedArray' I\l  0x012f\-0x0140: r11 'thisCollection$iv' Ljava\/util\/Collection;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [199=11]\}\l}"];
MethodNode -> Node_38;Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_73;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_57;
Node_55 -> Node_75[style=dashed];
Node_57 -> Node_74;
Node_74 -> Node_58;
Node_58 -> Node_41;
Node_75 -> Node_58;
Node_53 -> Node_54;
Node_46 -> Node_47;
Node_47 -> Node_49;
Node_47 -> Node_45[style=dashed];
Node_49 -> Node_50;
Node_73 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_71;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_69;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_67;
Node_65 -> Node_66;
Node_66 -> Node_39;
Node_67 -> Node_68;
Node_68 -> Node_39;
Node_69 -> Node_70;
Node_70 -> Node_39;
Node_71 -> Node_72;
Node_72 -> Node_39;
}

