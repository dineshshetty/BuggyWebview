digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.dumpCoroutinesInfoImpl(Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_31 [shape=record,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: SGET  (r1 I:java.util.concurrent.locks.ReentrantReadWriteLock) =  kotlinx.coroutines.debug.internal.DebugProbesImpl.coroutineStateLock java.util.concurrent.locks.ReentrantReadWriteLock  (LINE:154)\l0x0003: INVOKE  (r2 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock) = (r1 I:java.util.concurrent.locks.ReentrantReadWriteLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.readLock():java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock A[MD:():java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock (c)]\l0x0007: INVOKE  (r3 I:int) = (r1 I:java.util.concurrent.locks.ReentrantReadWriteLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.getWriteHoldCount():int A[MD:():int (c)]\l0x000b: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x000c|0x000c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0013 \l}"];
Node_35 [shape=record,label="{35\:\ 0x000e|0x000e: INVOKE  (r3 I:int) = (r1 I:java.util.concurrent.locks.ReentrantReadWriteLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.getReadHoldCount():int A[MD:():int (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0014|0x0014: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0015|LOOP_START\lLOOP:0: B:38:0x0015\-\>B:39:0x0017\l|0x0015: IF  (r5 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:59:0x001d \l}"];
Node_39 [shape=record,label="{39\:\ 0x0017|LOOP_END\lLOOP:0: B:38:0x0015\-\>B:39:0x0017\l|0x0017: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l0x0019: INVOKE  (r2 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.unlock():void A[MD:():void (c)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x001d|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x001d|0x001d: INVOKE  (r1 I:java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock) = (r1 I:java.util.concurrent.locks.ReentrantReadWriteLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.writeLock():java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock A[MD:():java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock (c)]\l0x0021: INVOKE  (r1 I:java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.lock():void A[MD:():void (c)]\l0x0024: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0025: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:155)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0026|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_41 [shape=record,label="{41\:\ 0x0026|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0073, blocks: (B:41:0x0026, B:43:0x002e, B:50:0x0067, B:51:0x0072), top: B:58:0x0026 \}\lCatch: all \-\> 0x0073\l|0x0026: SGET  (r7 I:kotlinx.coroutines.debug.internal.DebugProbesImpl) =  kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE kotlinx.coroutines.debug.internal.DebugProbesImpl A[Catch: all \-\> 0x0073, TRY_ENTER]\l0x0028: INVOKE  (r8 I:boolean) = (r7 I:kotlinx.coroutines.debug.internal.DebugProbesImpl) type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugProbesImpl.isInstalled$kotlinx_coroutines_core():boolean A[Catch: all \-\> 0x0073, MD:():boolean (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x002c|0x002c: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0066 \l}"];
Node_43 [shape=record,label="{43\:\ 0x002e|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0073, blocks: (B:41:0x0026, B:43:0x002e, B:50:0x0067, B:51:0x0072), top: B:58:0x0026 \}\lCatch: all \-\> 0x0073\l|0x002e: INVOKE  (r7 I:java.util.Set) = (r7 I:kotlinx.coroutines.debug.internal.DebugProbesImpl) type: DIRECT call: kotlinx.coroutines.debug.internal.DebugProbesImpl.getCapturedCoroutines():java.util.Set A[Catch: all \-\> 0x0073, MD:():java.util.Set\<kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\>\> (m)] (LINE:156)\l0x0032: CHECK_CAST (r7 I:java.lang.Iterable) = (java.lang.Iterable) (r7 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0073]\l0x0034: INVOKE  (r7 I:kotlin.sequences.Sequence) = (r7 I:java.lang.Iterable) type: STATIC call: kotlin.collections.CollectionsKt.asSequence(java.lang.Iterable):kotlin.sequences.Sequence A[Catch: all \-\> 0x0073, MD:\<T\>:(java.lang.Iterable\<? extends T\>):kotlin.sequences.Sequence\<T\> (m)] (LINE:157)\l0x0039: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x003a: NEW_INSTANCE  (r9 I:kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$lambda\-12$$inlined$sortedBy$1) =  kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$lambda\-12$$inlined$sortedBy$1 A[Catch: all \-\> 0x0073] (LINE:614)\l0x003c: INVOKE  (r9 I:kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$lambda\-12$$inlined$sortedBy$1) type: DIRECT call: kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$lambda\-12$$inlined$sortedBy$1.\<init\>():void A[Catch: all \-\> 0x0073, MD:():void (m)]\l0x003f: CHECK_CAST (r9 I:java.util.Comparator) = (java.util.Comparator) (r9 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0073]\l0x0041: INVOKE  (r9 I:kotlin.sequences.Sequence) = (r7 I:kotlin.sequences.Sequence A[D('$this$sortedBy$iv' kotlin.sequences.Sequence)]), (r9 I:java.util.Comparator) type: STATIC call: kotlin.sequences.SequencesKt.sortedWith(kotlin.sequences.Sequence, java.util.Comparator):kotlin.sequences.Sequence A[Catch: all \-\> 0x0073, MD:\<T\>:(kotlin.sequences.Sequence\<? extends T\>, java.util.Comparator\<? super T\>):kotlin.sequences.Sequence\<T\> (m)]\l0x0045: NEW_INSTANCE  (r7 I:kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3 A[D('$this$sortedBy$iv' kotlin.sequences.Sequence)]) =  kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3 A[Catch: all \-\> 0x0073] (LINE:161)\l0x0047: INVOKE  \l  (r7 I:kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3)\l  (r11 I:kotlin.jvm.functions.Function2 A[D('create' kotlin.jvm.functions.Function2)])\l type: DIRECT call: kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3.\<init\>(kotlin.jvm.functions.Function2):void A[Catch: all \-\> 0x0073, MD:(kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\>, ? super kotlin.coroutines.CoroutineContext, ? extends R\>):void (m)]\l0x004a: CHECK_CAST (r7 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r7 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0073]\l0x004c: INVOKE  (r7 I:kotlin.sequences.Sequence) = (r9 I:kotlin.sequences.Sequence), (r7 I:kotlin.jvm.functions.Function1) type: STATIC call: kotlin.sequences.SequencesKt.mapNotNull(kotlin.sequences.Sequence, kotlin.jvm.functions.Function1):kotlin.sequences.Sequence A[Catch: all \-\> 0x0073, MD:\<T, R\>:(kotlin.sequences.Sequence\<? extends T\>, kotlin.jvm.functions.Function1\<? super T, ? extends R\>):kotlin.sequences.Sequence\<R\> (m)]\l0x0050: INVOKE  (r7 I:java.util.List) = (r7 I:kotlin.sequences.Sequence) type: STATIC call: kotlin.sequences.SequencesKt.toList(kotlin.sequences.Sequence):java.util.List A[Catch: all \-\> 0x0073, MD:\<T\>:(kotlin.sequences.Sequence\<? extends T\>):java.util.List\<T\> (m), TRY_LEAVE] (LINE:165)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0054|0x0054: INVOKE  (r6 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)] (LINE:154)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0057|LOOP_START\lLOOP:1: B:45:0x0057\-\>B:46:0x0059\l|0x0057: IF  (r4 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:60:0x005f \l}"];
Node_46 [shape=record,label="{46\:\ 0x0059|LOOP_END\lLOOP:1: B:45:0x0057\-\>B:46:0x0059\l|0x0059: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x005b: INVOKE  (r2 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.lock():void A[MD:():void (c)]\l}"];
Node_60 [shape=record,label="{60\:\ 0x005f|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x005f|0x005f: INVOKE  (r1 I:java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.unlock():void A[MD:():void (c)]\l0x0062: INVOKE  (r6 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0065|RETURN\l|0x0065: RETURN  (r7 I:java.util.List\<R\>)  (LINE:166)\l}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x0066|0x0066: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:604)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0067|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0073, blocks: (B:41:0x0026, B:43:0x002e, B:50:0x0067, B:51:0x0072), top: B:58:0x0026 \}\lCatch: all \-\> 0x0073\l|0x0067: CONST_STR  (r8 I:java.lang.String) =  \"Debug probes are not installed\" A[TRY_ENTER] (LINE:155)\l0x0069: NEW_INSTANCE  (r7 I:java.lang.IllegalStateException A[D('$i$a$\-check\-DebugProbesImpl$dumpCoroutinesInfoImpl$1$1' int)]) =  java.lang.IllegalStateException A[Catch: all \-\> 0x0073]\l0x006b: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[Catch: all \-\> 0x0073, MD:():java.lang.String (c)]\l0x006f: INVOKE  (r7 I:java.lang.IllegalStateException), (r8 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[Catch: all \-\> 0x0073, MD:(java.lang.String):void (c)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x0072|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0073, blocks: (B:41:0x0026, B:43:0x002e, B:50:0x0067, B:51:0x0072), top: B:58:0x0026 \}\lCatch: all \-\> 0x0073\l|0x0072: THROW  (r7 I:java.lang.Throwable) A[Catch: all \-\> 0x0073, TRY_LEAVE]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0073|ExcHandler: all \-\> 0x0073\l|0x0073: MOVE_EXCEPTION  (r5 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0073] (LINE:154)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0074|0x0074: INVOKE  (r6 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x0077|LOOP_START\lLOOP:2: B:54:0x0077\-\>B:55:0x0079\l|0x0077: IF  (r4 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:61:0x007f \l}"];
Node_55 [shape=record,label="{55\:\ 0x0079|LOOP_END\lLOOP:2: B:54:0x0077\-\>B:55:0x0079\l|0x0079: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x007b: INVOKE  (r2 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.lock():void A[MD:():void (c)]\l}"];
Node_61 [shape=record,label="{61\:\ 0x007f|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x007f|0x007f: INVOKE  (r1 I:java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.unlock():void A[MD:():void (c)]\l0x0082: INVOKE  (r6 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0085|0x0085: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0013|0x0013: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private final java.util.List\<R\> kotlinx.coroutines.debug.internal.DebugProbesImpl.dumpCoroutinesInfoImpl((r10 'this' I:kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]), (r11 I:kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\>, ? super kotlin.coroutines.CoroutineContext, ? extends R\> A[D('create' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:39:0x0017 \-\> B:38:0x0015, BACK_EDGE: B:46:0x0059 \-\> B:45:0x0057, CROSS_EDGE: B:51:0x0072 \-\> B:32:?, BACK_EDGE: B:55:0x0079 \-\> B:54:0x0077, CROSS_EDGE: B:57:0x0085 \-\> B:32:?, CROSS_EDGE: B:36:0x0013 \-\> B:37:0x0014\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0073, blocks: (B:41:0x0026, B:43:0x002e, B:50:0x0067, B:51:0x0072), top: B:58:0x0026 \}\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Lkotlin\/jvm\/functions\/Function2\<\-Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl$CoroutineOwner\<*\>;\-Lkotlin\/coroutines\/CoroutineContext;+TR;\>;)Ljava\/util\/List\<TR;\>;\lDebug Info:\l  0x0039\-0x0045: r7 '$this$sortedBy$iv' Lkotlin\/sequences\/Sequence;\l  0x003a\-0x0045: r8 '$i$f$sortedBy' I\l  0x0025\-0x0054: r5 '$i$a$\-write\-DebugProbesImpl$dumpCoroutinesInfoImpl$1' I\l  0x0067\-0x0069: r7 '$i$a$\-check\-DebugProbesImpl$dumpCoroutinesInfoImpl$1$1' I\l  0x0001\-0x0072: r0 '$i$f$dumpCoroutinesInfoImpl' I\l  \-1 \-0x0072: r11 'create' Lkotlin\/jvm\/functions\/Function2;\l  0x0066\-0x0073: r5 '$i$a$\-write\-DebugProbesImpl$dumpCoroutinesInfoImpl$1' I\l  0x0073\-0x0085: r0 '$i$f$dumpCoroutinesInfoImpl' I\l  0x0073\-0x0085: r11 'create' Lkotlin\/jvm\/functions\/Function2;\l}"];
MethodNode -> Node_31;Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_59;
Node_39 -> Node_38;
Node_59 -> Node_40;
Node_40 -> Node_58;
Node_58 -> Node_41;
Node_58 -> Node_52;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_49;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_60;
Node_46 -> Node_45;
Node_60 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_32;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_32;
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_61;
Node_55 -> Node_54;
Node_61 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_32;
Node_36 -> Node_37;
}

