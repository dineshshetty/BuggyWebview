digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.owner(Lkotlin\/coroutines\/Continuation;)Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl$CoroutineOwner;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('$this$owner' kotlin.coroutines.Continuation)]) kotlin.coroutines.jvm.internal.CoroutineStackFrame  (LINE:475)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0009 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('$this$owner' kotlin.coroutines.Continuation)]) \l0x0006: CHECK_CAST (r0 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame) = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x000d \l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|0x000d: INVOKE  (r1 I:kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner) = (r2 I:kotlinx.coroutines.debug.internal.DebugProbesImpl), (r0 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame) type: DIRECT call: kotlinx.coroutines.debug.internal.DebugProbesImpl.owner(kotlin.coroutines.jvm.internal.CoroutineStackFrame):kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner A[MD:(kotlin.coroutines.jvm.internal.CoroutineStackFrame):kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\> (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|RETURN\lORIG_RETURN\l|0x0011: RETURN  (r1 I:kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\>) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0011: RETURN  (r1 I:kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\>) A[SYNTHETIC]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private final kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\> kotlinx.coroutines.debug.internal.DebugProbesImpl.owner((r2 'this' I:kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlin.coroutines.Continuation\<?\> A[D('$this$owner' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000a \-\> B:20:0x0011, CROSS_EDGE: B:16:0x0009 \-\> B:17:0x000a\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0011: r3 '$this$owner' Lkotlin\/coroutines\/Continuation;\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<*\>;)Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl$CoroutineOwner\<*\>;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_21[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

