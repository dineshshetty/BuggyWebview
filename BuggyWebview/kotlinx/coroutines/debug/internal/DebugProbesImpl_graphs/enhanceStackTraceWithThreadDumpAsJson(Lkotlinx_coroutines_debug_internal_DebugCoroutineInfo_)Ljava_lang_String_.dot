digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.enhanceStackTraceWithThreadDumpAsJson(Lkotlinx\/coroutines\/debug\/internal\/DebugCoroutineInfo;)Ljava\/lang\/String;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|java.util.List r0 = enhanceStackTraceWithThreadDump(r14, r14.lastObservedStackTrace())\ljava.util.List r1 = new java.util.ArrayList()\ljava.util.Iterator r2 = r0.iterator()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0013|LOOP_START\lLOOP:0: B:18:0x0013\-\>B:24:0x0050\l}"];
Node_19 [shape=record,label="{19\:\ 0x0017|if (r2.hasNext() == false) goto L11\l}"];
Node_20 [shape=record,label="{20\:\ 0x0019|java.lang.StackTraceElement r3 = r2.next()\ljava.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"n                \{n                    \"declaringClass\": \"\")\lr4.append(r3.getClassName())\lr4.append(\"\",n                    \"methodName\": \"\")\lr4.append(r3.getMethodName())\lr4.append(\"\",n                    \"fileName\": \")\ljava.lang.String r5 = r3.getFileName()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0048|if (r5 != null) goto L9\l}"];
Node_22 [shape=record,label="{22\:\ 0x004a|r5 = null\l}"];
Node_29 [shape=record,label="{29\:\ 0x0050|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0050|LOOP_END\lLOOP:0: B:18:0x0013\-\>B:24:0x0050\lPHI: r5 \l  PHI: (r5v8 java.lang.String) = (r5v7 java.lang.String), (r5v12 java.lang.String) binds: [B:28:0x0050, B:29:0x0050] A[DONT_GENERATE, DONT_INLINE]\l|r4.append(r5)\lr4.append(\",n                    \"lineNumber\": \")\lr4.append(r3.getLineNumber())\lr4.append(\"n                \}n                \")\lr1.add(kotlin.text.StringsKt.trimIndent(r4.toString()))\l}"];
Node_23 [shape=record,label="{23\:\ 0x004c|java.lang.String r5 = toStringWithQuotes(r5)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0050|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0072|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0072|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append('[')\lr2.append(kotlin.collections.CollectionsKt.joinToString$default(r1, null, null, null, 0, null, null, 63, null))\lr2.append(']')\l}"];
Node_26 [shape=record,label="{26\:\ 0x0098|RETURN\l|return r2.toString()\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final java.lang.String kotlinx.coroutines.debug.internal.DebugProbesImpl.enhanceStackTraceWithThreadDumpAsJson((r13v0 'this' kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]), (r14v0 'info' kotlinx.coroutines.debug.internal.DebugCoroutineInfo A[D('info' kotlinx.coroutines.debug.internal.DebugCoroutineInfo), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | BACK_EDGE: B:24:0x0050 \-\> B:18:0x0013, CROSS_EDGE: B:23:0x004c \-\> B:24:0x0050\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [229=9]\}\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_29;
Node_29 -> Node_24;
Node_24 -> Node_18;
Node_23 -> Node_28;
Node_28 -> Node_24;
Node_27 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_16;
}

