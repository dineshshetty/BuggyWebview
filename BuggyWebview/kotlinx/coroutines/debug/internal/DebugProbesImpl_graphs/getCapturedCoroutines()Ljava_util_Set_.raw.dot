digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.getCapturedCoroutines()Ljava\/util\/Set;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap\<kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\>, java.lang.Boolean\>) =  kotlinx.coroutines.debug.internal.DebugProbesImpl.capturedCoroutinesMap kotlinx.coroutines.debug.internal.ConcurrentWeakMap  (LINE:30)\l0x0002: INVOKE  (r0 I:java.util.Set) = (r0 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap) type: VIRTUAL call: kotlinx.coroutines.debug.internal.ConcurrentWeakMap.keySet():java.util.Set A[MD:():java.util.Set\<K\> (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:java.util.Set\<kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\>\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final java.util.Set\<kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\>\> kotlinx.coroutines.debug.internal.DebugProbesImpl.getCapturedCoroutines((r1 'this' I:kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lSIGNATURE: ()Ljava\/util\/Set\<Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl$CoroutineOwner\<*\>;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

