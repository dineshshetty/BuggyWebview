digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.getDynamicAttach()Lkotlin\/jvm\/functions\/Function1;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|TRY_ENTER\lTryCatch #0 \{all \-\> 0x002f, blocks: (B:17:0x0000, B:19:0x001b, B:20:0x0027, B:21:0x002e), top: B:29:0x0000 \}\lCatch: all \-\> 0x002f\l|0x0000: SGET  (r0 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion A[Catch: all \-\> 0x002f, TRY_ENTER] (LINE:62)\l0x0002: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0003: CHECK_CAST (r0 I:kotlinx.coroutines.debug.internal.DebugProbesImpl) = (kotlinx.coroutines.debug.internal.DebugProbesImpl) (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x002f]\l0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: CONST_STR  (r2 I:java.lang.String) =  \"kotlinx.coroutines.debug.internal.ByteBuddyDynamicAttach\"  (LINE:63)\l0x0008: INVOKE  (r2 I:java.lang.Class) = (r2 I:java.lang.String) type: STATIC call: java.lang.Class.forName(java.lang.String):java.lang.Class A[Catch: all \-\> 0x002f, MD:(java.lang.String):java.lang.Class\<?\> throws java.lang.ClassNotFoundException (c)]\l0x000c: INVOKE  (r3 I:java.lang.reflect.Constructor[]) = (r2 I:java.lang.Class A[D('clz' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.getConstructors():java.lang.reflect.Constructor[] A[Catch: all \-\> 0x002f, MD:():java.lang.reflect.Constructor\<?\>[] throws java.lang.SecurityException (c)] (LINE:64)\l0x0010: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0011: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]) A[Catch: all \-\> 0x002f]\l0x0013: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: all \-\> 0x002f] (LINE:65)\l0x0015: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.lang.reflect.Constructor A[D('ctor' java.lang.reflect.Constructor)]), (r4 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object A[Catch: all \-\> 0x002f, MD:(java.lang.Object[]):T VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.InstantiationException, java.lang.reflect.InvocationTargetException (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0019|0x0019: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0027 \l}"];
Node_19 [shape=record,label="{19\:\ 0x001b|TryCatch #0 \{all \-\> 0x002f, blocks: (B:17:0x0000, B:19:0x001b, B:20:0x0027, B:21:0x002e), top: B:29:0x0000 \}\lCatch: all \-\> 0x002f\l|0x001b: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001c: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.lang.Object), (r5 I:int) type: STATIC call: kotlin.jvm.internal.TypeIntrinsics.beforeCheckcastToFunctionOfArity(java.lang.Object, int):java.lang.Object A[Catch: all \-\> 0x002f, MD:(java.lang.Object, int):java.lang.Object (m)]\l0x0020: CHECK_CAST (r4 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r4 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x002f]\l0x0022: INVOKE  (r0 I:java.lang.Object) = (r4 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x002f, MD:\<T\>:(java.lang.Object):java.lang.Object (m)] (LINE:62)\l0x0026: GOTO  \-\> 0x003a \l}"];
Node_24 [shape=record,label="{24\:\ 0x003a|0x003a: INVOKE  (r1 I:boolean) = (r0 I:java.lang.Object) type: STATIC call: kotlin.Result.isFailure\-impl(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)] (LINE:66)\l}"];
Node_25 [shape=record,label="{25\:\ 0x003e|0x003e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0041 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0040|0x0040: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0041|0x0041: CHECK_CAST (r0 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0043|RETURN\l|0x0043: RETURN  (r0 I:kotlin.jvm.functions.Function1\<java.lang.Boolean, kotlin.Unit\>) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0027|TryCatch #0 \{all \-\> 0x002f, blocks: (B:17:0x0000, B:19:0x001b, B:20:0x0027, B:21:0x002e), top: B:29:0x0000 \}\lCatch: all \-\> 0x002f\l|0x0027: NEW_INSTANCE  (r4 I:java.lang.NullPointerException) =  java.lang.NullPointerException A[Catch: all \-\> 0x002f] (LINE:65)\l0x0029: CONST_STR  (r5 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlin.Function1\<kotlin.Boolean, kotlin.Unit\>\" \l0x002b: INVOKE  (r4 I:java.lang.NullPointerException), (r5 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[Catch: all \-\> 0x002f, MD:(java.lang.String):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x002e|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x002f, blocks: (B:17:0x0000, B:19:0x001b, B:20:0x0027, B:21:0x002e), top: B:29:0x0000 \}\lCatch: all \-\> 0x002f\l|0x002e: THROW  (r4 I:java.lang.Throwable) A[Catch: all \-\> 0x002f, TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x002f|ExcHandler: all \-\> 0x002f\l|0x002f: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x002f] (LINE:62)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0030|0x0030: SGET  (r1 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion \l0x0032: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Throwable) type: STATIC call: kotlin.ResultKt.createFailure(java.lang.Throwable):java.lang.Object A[MD:(java.lang.Throwable):java.lang.Object (m)]\l0x0036: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[MD:\<T\>:(java.lang.Object):java.lang.Object (m)]\l}"];
MethodNode[shape=record,label="{private final kotlin.jvm.functions.Function1\<java.lang.Boolean, kotlin.Unit\> kotlinx.coroutines.debug.internal.DebugProbesImpl.getDynamicAttach((r6 'this' I:kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x003e \-\> B:27:0x0041, CROSS_EDGE: B:21:0x002e \-\> B:16:?, CROSS_EDGE: B:23:0x0030 \-\> B:24:0x003a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0022: r0 '$this$getDynamicAttach_u24lambda_u2d0' Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl;\l  0x0006\-0x0022: r1 '$i$a$\-runCatching\-DebugProbesImpl$getDynamicAttach$1' I\l  0x000c\-0x0022: r2 'clz' Ljava\/lang\/Class;\l  0x0013\-0x0022: r3 'ctor' Ljava\/lang\/reflect\/Constructor;\l  0x0027\-0x002f: r0 '$this$getDynamicAttach_u24lambda_u2d0' Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl;\l  0x0027\-0x002f: r1 '$i$a$\-runCatching\-DebugProbesImpl$getDynamicAttach$1' I\l  0x0027\-0x002f: r2 'clz' Ljava\/lang\/Class;\l  0x0027\-0x002f: r3 'ctor' Ljava\/lang\/reflect\/Constructor;\lTryCatch #0 \{all \-\> 0x002f, blocks: (B:17:0x0000, B:19:0x001b, B:20:0x0027, B:21:0x002e), top: B:29:0x0000 \}\lSIGNATURE: ()Lkotlin\/jvm\/functions\/Function1\<Ljava\/lang\/Boolean;Lkotlin\/Unit;\>;\l}"];
MethodNode -> Node_15;Node_15 -> Node_29;
Node_29 -> Node_17;
Node_29 -> Node_22;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_16;
Node_22 -> Node_23;
Node_23 -> Node_24;
}

