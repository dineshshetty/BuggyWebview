digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.findIndexOfFrame(I[Ljava\/lang\/StackTraceElement;Ljava\/util\/List;)I" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|java.lang.StackTraceElement r0 = (java.lang.StackTraceElement) kotlin.collections.ArraysKt.getOrNull(r13, r12)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0007|if (r0 != null) goto L5\l}"];
Node_29 [shape=record,label="{29\:\ 0x0009|RETURN\l|return \-1\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x000a|r4 = 0\ljava.util.Iterator r5 = r14.iterator()\l}"];
Node_31 [shape=record,label="{31\:\ 0x0011|LOOP_START\lLOOP:0: B:31:0x0011\-\>B:44:0x0051\lPHI: r4 \l  PHI: (r4v1 'index$iv' int) = (r4v0 'index$iv' int), (r4v2 'index$iv' int) binds: [B:30:0x000a, B:44:0x0051] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0015|if (r5.hasNext() == false) goto L21\l}"];
Node_33 [shape=record,label="{33\:\ 0x0017|java.lang.Object r6 = r5.next()\ljava.lang.StackTraceElement r7 = (java.lang.StackTraceElement) r6\l}"];
Node_34 [shape=record,label="{34\:\ 0x002b|if (kotlin.jvm.internal.Intrinsics.areEqual(r7.getFileName(), r0.getFileName()) == false) goto L20\l}"];
Node_35 [shape=record,label="{35\:\ 0x002d}"];
Node_36 [shape=record,label="{36\:\ 0x0039|if (kotlin.jvm.internal.Intrinsics.areEqual(r7.getClassName(), r0.getClassName()) == false) goto L20\l}"];
Node_37 [shape=record,label="{37\:\ 0x003b}"];
Node_38 [shape=record,label="{38\:\ 0x0047|if (kotlin.jvm.internal.Intrinsics.areEqual(r7.getMethodName(), r0.getMethodName()) == false) goto L20\l}"];
Node_39 [shape=record,label="{39\:\ 0x0049|r9 = true\l}"];
Node_42 [shape=record,label="{42\:\ 0x004d|PHI: r9 \l  PHI: (r9v3 boolean) = (r9v2 boolean), (r9v8 boolean) binds: [B:40:0x004b, B:39:0x0049] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 == false) goto L16\l}"];
Node_44 [shape=record,label="{44\:\ 0x0051|LOOP_END\lLOOP:0: B:31:0x0011\-\>B:44:0x0051\l|int r4 = r4 + 1\l}"];
Node_48 [shape=record,label="{48\:\ 0x004f|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x004f}"];
Node_46 [shape=record,label="{46\:\ 0x0055|RETURN\lORIG_RETURN\l|return r4\l}"];
Node_40 [shape=record,label="{40\:\ 0x004b|r9 = false\l}"];
Node_47 [shape=record,label="{47\:\ 0x0055|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
MethodNode[shape=record,label="{private final int kotlinx.coroutines.debug.internal.DebugProbesImpl.findIndexOfFrame((r11v0 'this' kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]), (r12v0 'frameIndex' int A[D('frameIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'actualTrace' java.lang.StackTraceElement[] A[D('actualTrace' java.lang.StackTraceElement[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 java.util.List\<java.lang.StackTraceElement\> A[D('coroutineTrace' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:46:0x0055 \-\> B:26:?, BACK_EDGE: B:44:0x0051 \-\> B:31:0x0011, CROSS_EDGE: B:40:0x004b \-\> B:42:0x004d, CROSS_EDGE: B:36:0x0039 \-\> B:40:0x004b, CROSS_EDGE: B:34:0x002b \-\> B:40:0x004b, CROSS_EDGE: B:32:0x0015 \-\> B:46:0x0055\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (I[Ljava\/lang\/StackTraceElement;Ljava\/util\/List\<Ljava\/lang\/StackTraceElement;\>;)I\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_26;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_47;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_40;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_42;
Node_42 -> Node_44;
Node_42 -> Node_48[style=dashed];
Node_44 -> Node_31;
Node_48 -> Node_43;
Node_43 -> Node_46;
Node_46 -> Node_26;
Node_40 -> Node_42;
Node_47 -> Node_49;
Node_49 -> Node_26;
}

