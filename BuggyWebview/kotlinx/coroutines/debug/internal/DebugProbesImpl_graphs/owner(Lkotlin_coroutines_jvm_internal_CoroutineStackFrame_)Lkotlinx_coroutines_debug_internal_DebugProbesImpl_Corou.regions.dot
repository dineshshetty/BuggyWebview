digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.owner(Lkotlin\/coroutines\/jvm\/internal\/CoroutineStackFrame;)Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl$CoroutineOwner;" {
subgraph cluster_Region_471209039 {
label = "R(3:1|(2:4|(1:7))|11)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0000|kotlin.coroutines.jvm.internal.CoroutineStackFrame r0 = r3\l}"];
subgraph cluster_LoopRegion_156222533 {
label = "LOOP:0: (2:4|(1:7))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0003|if ((r0 instanceof kotlinx.coroutines.debug.internal.DebugProbesImpl.CoroutineOwner) == false) goto L4\l}"];
subgraph cluster_Region_1553577076 {
label = "R(2:4|(1:7))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0008|kotlin.coroutines.jvm.internal.CoroutineStackFrame r0 = r0.getCallerFrame()\l}"];
subgraph cluster_IfRegion_1252002818 {
label = "IF [B:20:0x000c] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x000c|LOOP_END\lLOOP:0: B:16:0x0001\-\>B:20:0x000c\l|if (r0 == null) goto L6\l}"];
subgraph cluster_Region_1584752051 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x000e|RETURN\lORIG_RETURN\l|return null\l}"];
}
}
}
}
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return (kotlinx.coroutines.debug.internal.DebugProbesImpl.CoroutineOwner) r0\l}"];
}
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0001|LOOP_START\lLOOP:0: B:16:0x0001\-\>B:20:0x000c\lPHI: r0 \l  PHI: (r0v1 kotlin.coroutines.jvm.internal.CoroutineStackFrame) = (r0v0 kotlin.coroutines.jvm.internal.CoroutineStackFrame), (r0v3 kotlin.coroutines.jvm.internal.CoroutineStackFrame) binds: [B:15:0x0000, B:20:0x000c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x000e|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0005|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0005}"];
MethodNode[shape=record,label="{private final kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\> kotlinx.coroutines.debug.internal.DebugProbesImpl.owner((r2v0 'this' kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]), (r3v0 '$this$owner' kotlin.coroutines.jvm.internal.CoroutineStackFrame A[D('$this$owner' kotlin.coroutines.jvm.internal.CoroutineStackFrame), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x000c \-\> B:16:0x0001, CROSS_EDGE: B:21:0x000e \-\> B:22:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlin\/coroutines\/jvm\/internal\/CoroutineStackFrame;)Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl$CoroutineOwner\<*\>;\l}"];
MethodNode -> Node_13;Node_15 -> Node_16;
Node_17 -> Node_19;
Node_17 -> Node_23[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_16[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_14;
Node_25 -> Node_14;
Node_13 -> Node_15;
Node_16 -> Node_17;
Node_24 -> Node_21;
Node_23 -> Node_18;
Node_18 -> Node_25;
}

