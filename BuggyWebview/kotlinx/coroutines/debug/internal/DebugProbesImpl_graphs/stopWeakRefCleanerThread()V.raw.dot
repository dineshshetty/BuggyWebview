digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.stopWeakRefCleanerThread()V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: SGET  (r0 I:java.lang.Thread) =  kotlinx.coroutines.debug.internal.DebugProbesImpl.weakRefCleanerThread java.lang.Thread  (LINE:105)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0005 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|RETURN\l|0x0004: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:106)\l0x0006: SPUT  (r1 I:java.lang.Thread) kotlinx.coroutines.debug.internal.DebugProbesImpl.weakRefCleanerThread java.lang.Thread \l0x0008: INVOKE  (r0 I:java.lang.Thread A[D('thread' java.lang.Thread)]) type: VIRTUAL call: java.lang.Thread.interrupt():void A[MD:():void (c)] (LINE:107)\l0x000b: INVOKE  (r0 I:java.lang.Thread A[D('thread' java.lang.Thread)]) type: VIRTUAL call: java.lang.Thread.join():void A[MD:():void throws java.lang.InterruptedException (c)] (LINE:108)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000e|RETURN\l|0x000e: RETURN    (LINE:109)\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.debug.internal.DebugProbesImpl.stopWeakRefCleanerThread((r2 'this' I:kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000e \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x000e: r0 'thread' Ljava\/lang\/Thread;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

