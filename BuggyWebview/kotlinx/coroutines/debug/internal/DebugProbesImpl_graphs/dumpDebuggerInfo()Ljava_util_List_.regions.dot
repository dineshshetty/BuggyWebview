digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.dumpDebuggerInfo()Ljava\/util\/List;" {
subgraph cluster_Region_1866255716 {
label = "R(6:1|2|4|(1:6)|8|(2:10|(2:(1:21)|(2:12|17))))";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0000|java.util.concurrent.locks.ReentrantReadWriteLock java.util.concurrent.locks.ReentrantReadWriteLock r2 = kotlinx.coroutines.debug.internal.DebugProbesImpl.coroutineStateLock\ljava.util.concurrent.locks.ReentrantReadWriteLock$ReadLock java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock r3 = r2.readLock()\lint r5 = 0\l}"];
Node_32 [shape=record,label="{32\:\ 0x000d|int r4 = r2.getWriteHoldCount() == 0 ? r2.getReadHoldCount() : 0\l}"];
Node_35 [shape=record,label="{35\:\ 0x0015|PHI: r4 \l  PHI: (r4v2 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int r6 = 0\l}"];
subgraph cluster_LoopRegion_1494455425 {
label = "LOOP:0: (1:6)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0016|LOOP_START\lLOOP:0: B:36:0x0016\-\>B:37:0x0018\lPHI: r6 \l  PHI: (r6v1 int) = (r6v0 int), (r6v4 int) binds: [B:35:0x0015, B:37:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 \< r4) goto L6\l}"];
subgraph cluster_Region_1436736501 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0018|LOOP_END\lLOOP:0: B:36:0x0016\-\>B:37:0x0018\l|r6++\lr3.unlock()\l}"];
}
}
Node_38 [shape=record,label="{38\:\ 0x001e|java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock r2 = r2.writeLock()\lr2.lock()\l}"];
subgraph cluster_TryCatchRegion_47557299 {
label = "Try: R(2:10|(2:(1:21)|(2:12|17))) finally: R(4:22|(1:24)|26|27)";
node [shape=record,color=blue];
subgraph cluster_Region_935530045 {
label = "R(2:10|(2:(1:21)|(2:12|17)))";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0026|TRY_ENTER\lTryCatch #0 \{all \-\> 0x006f, blocks: (B:39:0x0026, B:41:0x002e, B:47:0x0063, B:48:0x006e), top: B:54:0x0026 \}\lCatch: all \-\> 0x006f\l|kotlinx.coroutines.debug.internal.DebugProbesImpl kotlinx.coroutines.debug.internal.DebugProbesImpl r7 = kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE     \/\/ Catch: java.lang.Throwable \-\> L6f\l}"];
subgraph cluster_Region_1421065192 {
label = "R(2:(1:21)|(2:12|17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_236444008 {
label = "IF [B:40:0x002c] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x002c|if (r7.isInstalled$kotlinx_coroutines_core() == false) goto L19\l}"];
subgraph cluster_Region_1038408870 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x006e|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x006f, blocks: (B:39:0x0026, B:41:0x002e, B:47:0x0063, B:48:0x006e), top: B:54:0x0026 \}\lCatch: all \-\> 0x006f\l|throw new java.lang.IllegalStateException(\"Debug probes are not installed\".toString())     \/\/ Catch: java.lang.Throwable \-\> L6f\l}"];
}
}
subgraph cluster_Region_1264968631 {
label = "R(2:12|17)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x002e|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x006f, blocks: (B:39:0x0026, B:41:0x002e, B:47:0x0063, B:48:0x006e), top: B:54:0x0026 \}\lCatch: all \-\> 0x006f\l|kotlin.sequences.Sequence kotlin.sequences.Sequence r7 = kotlin.collections.CollectionsKt.asSequence(r7.getCapturedCoroutines())     \/\/ Catch: java.lang.Throwable \-\> L6f\l}"];
Node_45 [shape=record,label="{45\:\ 0x0061|RETURN\l|return kotlin.sequences.SequencesKt.toList(kotlin.sequences.SequencesKt.mapNotNull(kotlin.sequences.SequencesKt.sortedWith(r7, new kotlinx.coroutines.debug.internal.C0887x8808a3e8()), new kotlinx.coroutines.debug.internal.C0889xee7de334()))\l}"];
}
}
}
subgraph cluster_Region_447582501 {
label = "R(4:22|(1:24)|26|27) | ExcHandler: all \-\> 0x006f\l";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x006f|ExcHandler: all \-\> 0x006f\l}"];
subgraph cluster_LoopRegion_1355625489 {
label = "LOOP:2: (1:24)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0070|LOOP_START\lFINALLY_INSNS\lLOOP:2: B:50:0x0070\-\>B:51:0x0072\lPHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:49:0x006f, B:51:0x0072] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 \< r4) goto L24\l}"];
subgraph cluster_Region_2000379650 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0072|LOOP_END\lFINALLY_INSNS\lLOOP:2: B:50:0x0070\-\>B:51:0x0072\l|r5++\lr3.lock()\l}"];
}
}
Node_52 [shape=record,label="{52\:\ 0x0078|FINALLY_INSNS\l|r2.unlock()\l}"];
Node_53 [shape=record,label="{53\:\ 0x007b|throw r6\l}"];
}
}
}
subgraph cluster_Region_447582501 {
label = "R(4:22|(1:24)|26|27) | ExcHandler: all \-\> 0x006f\l";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x006f|ExcHandler: all \-\> 0x006f\l}"];
subgraph cluster_LoopRegion_1355625489 {
label = "LOOP:2: (1:24)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0070|LOOP_START\lFINALLY_INSNS\lLOOP:2: B:50:0x0070\-\>B:51:0x0072\lPHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:49:0x006f, B:51:0x0072] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 \< r4) goto L24\l}"];
subgraph cluster_Region_2000379650 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0072|LOOP_END\lFINALLY_INSNS\lLOOP:2: B:50:0x0070\-\>B:51:0x0072\l|r5++\lr3.lock()\l}"];
}
}
Node_52 [shape=record,label="{52\:\ 0x0078|FINALLY_INSNS\l|r2.unlock()\l}"];
Node_53 [shape=record,label="{53\:\ 0x007b|throw r6\l}"];
}
Node_29 [shape=record,color=red,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x000f}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x001e|SYNTHETIC\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x0026|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0055|LOOP_START\lDONT_GENERATE\lLOOP:1: B:42:0x0055\-\>B:43:0x0057\lPHI: r5 \l  PHI: (r5v3 int) = (r5v0 int), (r5v4 int) binds: [B:41:0x002e, B:43:0x0057] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 \< r4) goto L14\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0057|LOOP_END\lDONT_GENERATE\lLOOP:1: B:42:0x0055\-\>B:43:0x0057\l|int r5 = r5 + 1\lr3.lock()\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x005d|SYNTHETIC\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x005d|DONT_GENERATE\l|r2.unlock()\l}"];
Node_30 [shape=record,color=red,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0062}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0063|TRY_ENTER\lTryCatch #0 \{all \-\> 0x006f, blocks: (B:39:0x0026, B:41:0x002e, B:47:0x0063, B:48:0x006e), top: B:54:0x0026 \}\lCatch: all \-\> 0x006f\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x0078|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0014}"];
MethodNode[shape=record,label="{public final java.util.List\<kotlinx.coroutines.debug.internal.DebuggerInfo\> kotlinx.coroutines.debug.internal.DebugProbesImpl.dumpDebuggerInfo((r10v0 'this' kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:37:0x0018 \-\> B:36:0x0016, BACK_EDGE: B:43:0x0057 \-\> B:42:0x0055, CROSS_EDGE: B:48:0x006e \-\> B:30:?, BACK_EDGE: B:51:0x0072 \-\> B:50:0x0070, CROSS_EDGE: B:53:0x007b \-\> B:30:?, CROSS_EDGE: B:34:0x0014 \-\> B:35:0x0015\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x006f, blocks: (B:39:0x0026, B:41:0x002e, B:47:0x0063, B:48:0x006e), top: B:54:0x0026 \}\lTYPE_VARS: EMPTY\lSIGNATURE: ()Ljava\/util\/List\<Lkotlinx\/coroutines\/debug\/internal\/DebuggerInfo;\>;\l}"];
MethodNode -> Node_29;Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_34;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_55[style=dashed];
Node_37 -> Node_36;
Node_38 -> Node_54;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_46;
Node_48 -> Node_30;
Node_41 -> Node_42;
Node_45 -> Node_30;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_50 -> Node_57[style=dashed];
Node_51 -> Node_50;
Node_52 -> Node_53;
Node_53 -> Node_30;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_50 -> Node_57[style=dashed];
Node_51 -> Node_50;
Node_52 -> Node_53;
Node_53 -> Node_30;
Node_29 -> Node_31;
Node_33 -> Node_35;
Node_55 -> Node_38;
Node_54 -> Node_39;
Node_54 -> Node_49;
Node_42 -> Node_43;
Node_42 -> Node_56[style=dashed];
Node_43 -> Node_42;
Node_56 -> Node_44;
Node_44 -> Node_45;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_57 -> Node_52;
Node_34 -> Node_35;
}

