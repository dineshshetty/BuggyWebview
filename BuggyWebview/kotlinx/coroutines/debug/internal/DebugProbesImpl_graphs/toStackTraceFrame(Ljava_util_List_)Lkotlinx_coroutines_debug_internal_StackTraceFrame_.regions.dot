digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.toStackTraceFrame(Ljava\/util\/List;)Lkotlinx\/coroutines\/debug\/internal\/StackTraceFrame;" {
subgraph cluster_Region_553700734 {
label = "R(3:1|(2:3|(1:6))|8)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0000|kotlinx.coroutines.debug.internal.StackTraceFrame r3 = null\l}"];
subgraph cluster_IfRegion_1622264252 {
label = "IF [B:14:0x0008] THEN: R(2:3|(1:6)) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0008|if (r11.isEmpty() == false) goto L3\l}"];
subgraph cluster_Region_627341116 {
label = "R(2:3|(1:6))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x000a|java.util.ListIterator java.util.ListIterator r4 = r11.listIterator(r11.size())\l}"];
subgraph cluster_LoopRegion_1440399320 {
label = "LOOP:0: (1:6)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0016|if (r4.hasPrevious() != false) goto L6\l}"];
subgraph cluster_Region_958431680 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0018|LOOP_END\lLOOP:0: B:16:0x0012\-\>B:18:0x0018\l|java.lang.StackTraceElement java.lang.StackTraceElement r5 = r4.previous()\lkotlinx.coroutines.debug.internal.StackTraceFrame r6 = r3\lr3 = new kotlinx.coroutines.debug.internal.StackTraceFrame(r6, r5)\l}"];
}
}
}
}
Node_20 [shape=record,label="{20\:\ 0x002b|RETURN\lPHI: r3 \l  PHI: (r3v1 kotlinx.coroutines.debug.internal.StackTraceFrame) = (r3v0 kotlinx.coroutines.debug.internal.StackTraceFrame), (r3v2 kotlinx.coroutines.debug.internal.StackTraceFrame) binds: [B:14:0x0008, B:21:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|return r3\l}"];
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0012|LOOP_START\lLOOP:0: B:16:0x0012\-\>B:18:0x0018\lPHI: r3 \l  PHI: (r3v2 kotlinx.coroutines.debug.internal.StackTraceFrame) = (r3v0 kotlinx.coroutines.debug.internal.StackTraceFrame), (r3v3 kotlinx.coroutines.debug.internal.StackTraceFrame) binds: [B:15:0x000a, B:18:0x0018] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x002b|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final kotlinx.coroutines.debug.internal.StackTraceFrame kotlinx.coroutines.debug.internal.DebugProbesImpl.toStackTraceFrame((r10v0 'this' kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]), (r11v0 java.util.List\<java.lang.StackTraceElement\> A[D('$this$toStackTraceFrame' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:18:0x0018 \-\> B:16:0x0012, CROSS_EDGE: B:14:0x0008 \-\> B:20:0x002b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/util\/List\<Ljava\/lang\/StackTraceElement;\>;)Lkotlinx\/coroutines\/debug\/internal\/StackTraceFrame;\l}"];
MethodNode -> Node_11;Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_20[style=dashed];
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_17 -> Node_21[style=dashed];
Node_18 -> Node_16;
Node_20 -> Node_12;
Node_11 -> Node_13;
Node_16 -> Node_17;
Node_21 -> Node_20;
}

