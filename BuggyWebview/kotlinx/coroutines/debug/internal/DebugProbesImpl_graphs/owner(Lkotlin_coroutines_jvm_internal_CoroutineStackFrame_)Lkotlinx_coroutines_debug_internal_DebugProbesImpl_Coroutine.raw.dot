digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.owner(Lkotlin\/coroutines\/jvm\/internal\/CoroutineStackFrame;)Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl$CoroutineOwner;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('$this$owner' kotlin.coroutines.jvm.internal.CoroutineStackFrame)])  (LINE:478)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0001|LOOP_START\lLOOP:0: B:16:0x0001\-\>B:20:0x000c\l|0x0001: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY]) kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner \l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|0x0003: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0008 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|0x0008: INVOKE  (r0 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame) = (r0 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame) type: INTERFACE call: kotlin.coroutines.jvm.internal.CoroutineStackFrame.getCallerFrame():kotlin.coroutines.jvm.internal.CoroutineStackFrame A[MD:():kotlin.coroutines.jvm.internal.CoroutineStackFrame (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|LOOP_END\lLOOP:0: B:16:0x0001\-\>B:20:0x000c\l|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0001 \l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|RETURN\lORIG_RETURN\l|0x000e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: RETURN  (r0 I:kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\>) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0005|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner) = (kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x000f: RETURN  (r0 I:kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\>) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{private final kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\> kotlinx.coroutines.debug.internal.DebugProbesImpl.owner((r2 'this' I:kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame A[D('$this$owner' kotlin.coroutines.jvm.internal.CoroutineStackFrame), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x000c \-\> B:16:0x0001, CROSS_EDGE: B:21:0x000e \-\> B:22:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000f: r3 '$this$owner' Lkotlin\/coroutines\/jvm\/internal\/CoroutineStackFrame;\lSIGNATURE: (Lkotlin\/coroutines\/jvm\/internal\/CoroutineStackFrame;)Lkotlinx\/coroutines\/debug\/internal\/DebugProbesImpl$CoroutineOwner\<*\>;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_23[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_16;
Node_20 -> Node_24[style=dashed];
Node_24 -> Node_21;
Node_21 -> Node_14;
Node_23 -> Node_18;
Node_18 -> Node_25;
Node_25 -> Node_14;
}

