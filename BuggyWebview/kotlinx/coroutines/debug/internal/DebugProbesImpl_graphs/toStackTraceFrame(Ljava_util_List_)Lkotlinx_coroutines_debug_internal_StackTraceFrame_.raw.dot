digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.toStackTraceFrame(Ljava\/util\/List;)Lkotlinx\/coroutines\/debug\/internal\/StackTraceFrame;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:504)\l0x0001: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('$this$toStackTraceFrame' java.util.List)]) \l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('initial$iv' java.lang.Object)])  (LINE:673)\l0x0004: INVOKE  (r4 I:boolean) = (r1 I:java.util.List A[D('$this$foldRight$iv' java.util.List)]) type: INTERFACE call: java.util.List.isEmpty():boolean A[MD:():boolean (c)] (LINE:674)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|0x0008: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x002b \l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|0x000a: INVOKE  (r4 I:int) = (r1 I:java.util.List A[D('$this$foldRight$iv' java.util.List)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:675)\l0x000e: INVOKE  (r4 I:java.util.ListIterator) = (r1 I:java.util.List A[D('$this$foldRight$iv' java.util.List)]), (r4 I:int) type: INTERFACE call: java.util.List.listIterator(int):java.util.ListIterator A[MD:(int):java.util.ListIterator\<E\> (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|LOOP_START\lLOOP:0: B:16:0x0012\-\>B:18:0x0018\l|0x0012: INVOKE  (r5 I:boolean) = (r4 I:java.util.ListIterator A[D('iterator$iv' java.util.ListIterator)]) type: INTERFACE call: java.util.ListIterator.hasPrevious():boolean A[MD:():boolean (c)] (LINE:676)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0016|0x0016: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x002b \l}"];
Node_18 [shape=record,label="{18\:\ 0x0018|LOOP_END\lLOOP:0: B:16:0x0012\-\>B:18:0x0018\l|0x0018: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.ListIterator A[D('iterator$iv' java.util.ListIterator)]) type: INTERFACE call: java.util.ListIterator.previous():java.lang.Object A[MD:():E (c)] (LINE:677)\l0x001c: CHECK_CAST (r5 I:java.lang.StackTraceElement) = (java.lang.StackTraceElement) (r5 I:??[OBJECT, ARRAY]) \l0x001e: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('accumulator$iv' java.lang.Object)]) \l0x001f: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0020: NEW_INSTANCE  (r8 I:kotlinx.coroutines.debug.internal.StackTraceFrame) =  kotlinx.coroutines.debug.internal.StackTraceFrame  (LINE:505)\l0x0022: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('acc' kotlinx.coroutines.debug.internal.StackTraceFrame)]) \l0x0023: CHECK_CAST (r9 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame) = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) (r9 I:??[OBJECT, ARRAY]) \l0x0025: INVOKE  \l  (r8 I:kotlinx.coroutines.debug.internal.StackTraceFrame)\l  (r9 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame)\l  (r5 I:java.lang.StackTraceElement A[D('frame' java.lang.StackTraceElement)])\l type: DIRECT call: kotlinx.coroutines.debug.internal.StackTraceFrame.\<init\>(kotlin.coroutines.jvm.internal.CoroutineStackFrame, java.lang.StackTraceElement):void A[MD:(kotlin.coroutines.jvm.internal.CoroutineStackFrame, java.lang.StackTraceElement):void (m)]\l0x0028: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('accumulator$iv' java.lang.Object)]) = (r8 I:??[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x002b|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x002b|RETURN\l|0x002b: RETURN  (r3 I:kotlinx.coroutines.debug.internal.StackTraceFrame A[D('accumulator$iv' java.lang.Object)])  (LINE:506)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final kotlinx.coroutines.debug.internal.StackTraceFrame kotlinx.coroutines.debug.internal.DebugProbesImpl.toStackTraceFrame((r10 'this' I:kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]), (r11 I:java.util.List\<java.lang.StackTraceElement\> A[D('$this$toStackTraceFrame' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:18:0x0018 \-\> B:16:0x0012, CROSS_EDGE: B:14:0x0008 \-\> B:20:0x002b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x0028: r5 'frame' Ljava\/lang\/StackTraceElement;\l  0x001f\-0x0028: r6 'acc' Lkotlinx\/coroutines\/debug\/internal\/StackTraceFrame;\l  0x0020\-0x0028: r7 '$i$a$\-foldRight\-DebugProbesImpl$toStackTraceFrame$1' I\l  0x0012\-0x002a: r4 'iterator$iv' Ljava\/util\/ListIterator;\l  0x0001\-0x002b: r0 'initial$iv' Ljava\/lang\/Object;\l  0x0002\-0x002b: r1 '$this$foldRight$iv' Ljava\/util\/List;\l  0x0003\-0x002b: r2 '$i$f$foldRight' I\l  0x0004\-0x002b: r3 'accumulator$iv' Ljava\/lang\/Object;\l  \-1 \-0x002b: r11 '$this$toStackTraceFrame' Ljava\/util\/List;\lSIGNATURE: (Ljava\/util\/List\<Ljava\/lang\/StackTraceElement;\>;)Lkotlinx\/coroutines\/debug\/internal\/StackTraceFrame;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_16;
Node_21 -> Node_20;
Node_20 -> Node_12;
}

