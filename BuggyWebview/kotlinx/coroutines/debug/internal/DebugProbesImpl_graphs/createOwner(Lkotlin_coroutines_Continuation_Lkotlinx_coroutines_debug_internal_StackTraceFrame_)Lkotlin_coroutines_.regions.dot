digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesImpl.createOwner(Lkotlin\/coroutines\/Continuation;Lkotlinx\/coroutines\/debug\/internal\/StackTraceFrame;)Lkotlin\/coroutines\/Continuation;" {
subgraph cluster_Region_531583681 {
label = "R(1:(2:(3:5|(1:7)|9)|(1:3)))";
node [shape=record,color=blue];
subgraph cluster_Region_527005443 {
label = "R(2:(3:5|(1:7)|9)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2032098593 {
label = "IF [B:13:0x0004] THEN: R(3:5|(1:7)|9) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0004|if (isInstalled$kotlinx_coroutines_core() == true) goto L5\l}"];
subgraph cluster_Region_1718562933 {
label = "R(3:5|(1:7)|9)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0007|kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl r0 = new kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl(r6.getContext(), r7, kotlinx.coroutines.debug.internal.DebugProbesImpl.sequenceNumber$FU.incrementAndGet(kotlinx.coroutines.debug.internal.DebugProbesImpl.debugProbesImpl$SequenceNumberRefVolatile))\lkotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner kotlinx.coroutines.debug.internal.DebugProbesImpl.CoroutineOwner r1 = new kotlinx.coroutines.debug.internal.DebugProbesImpl.CoroutineOwner(r6, r0, r7)\lkotlinx.coroutines.debug.internal.ConcurrentWeakMap\<kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner\<?\>, java.lang.Boolean\> kotlinx.coroutines.debug.internal.ConcurrentWeakMap\<kotlinx.coroutines.debug.internal.DebugProbesImpl.CoroutineOwner\<?\>, java.lang.Boolean\> r2 = kotlinx.coroutines.debug.internal.DebugProbesImpl.capturedCoroutinesMap\lr2.put(r1, true)\l}"];
subgraph cluster_IfRegion_639300293 {
label = "IF [B:16:0x0031] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0031|if (isInstalled$kotlinx_coroutines_core() == false) goto L7\l}"];
subgraph cluster_Region_32990038 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0033|r2.clear()\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x0039|RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_1128695197 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0006|RETURN\l|return r6\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0036}"];
MethodNode[shape=record,label="{private final kotlin.coroutines.Continuation\<T\> kotlinx.coroutines.debug.internal.DebugProbesImpl.createOwner((r5v0 'this' kotlinx.coroutines.debug.internal.DebugProbesImpl A[IMMUTABLE_TYPE, THIS]), (r6v0 kotlin.coroutines.Continuation\<? super T\> A[D('completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'frame' kotlinx.coroutines.debug.internal.StackTraceFrame A[D('frame' kotlinx.coroutines.debug.internal.StackTraceFrame), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0039 \-\> B:11:?, CROSS_EDGE: B:16:0x0031 \-\> B:18:0x0036\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/coroutines\/Continuation\<\-TT;\>;Lkotlinx\/coroutines\/debug\/internal\/StackTraceFrame;)Lkotlin\/coroutines\/Continuation\<TT;\>;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r6v0, resolved type: kotlin.coroutines.Continuation\<? super T\>\}\l}"];
MethodNode -> Node_10;Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_19 -> Node_11;
Node_14 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_18 -> Node_19;
}

