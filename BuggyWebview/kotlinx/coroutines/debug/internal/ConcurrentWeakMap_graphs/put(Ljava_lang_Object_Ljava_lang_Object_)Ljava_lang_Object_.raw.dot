digraph "CFG forkotlinx.coroutines.debug.internal.ConcurrentWeakMap.put(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object) = (r7 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.core java.lang.Object  (LINE:34)\l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0003: CHECK_CAST (r1 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) = (kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) (r1 I:??[OBJECT, ARRAY]) \l0x0005: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: CONST  (r5 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0007: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('key' java.lang.Object)]) \l0x0009: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('value' java.lang.Object)]) \l0x000a: INVOKE  (r0 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l  (r4 I:kotlinx.coroutines.debug.internal.HashedWeakRef)\l  (r5 I:int)\l  (r6 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.putImpl$default(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core, java.lang.Object, java.lang.Object, kotlinx.coroutines.debug.internal.HashedWeakRef, int, java.lang.Object):java.lang.Object A[MD:(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core, java.lang.Object, java.lang.Object, kotlinx.coroutines.debug.internal.HashedWeakRef, int, java.lang.Object):java.lang.Object (m)]\l0x000e: INVOKE  (r1 I:kotlinx.coroutines.internal.Symbol) =  type: STATIC call: kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.access$getREHASH$p():kotlinx.coroutines.internal.Symbol A[MD:():kotlinx.coroutines.internal.Symbol (m)] (LINE:35)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('oldValue' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0018 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0014|0x0014: INVOKE  (r0 I:java.lang.Object A[D('oldValue' java.lang.Object)]) = \l  (r7 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap)\l  (r8 I:java.lang.Object A[D('key' java.lang.Object)])\l  (r9 I:java.lang.Object A[D('value' java.lang.Object)])\l type: DIRECT call: kotlinx.coroutines.debug.internal.ConcurrentWeakMap.putSynchronized(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0018|0x0018: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('oldValue' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x001f  (LINE:36)\l}"];
Node_14 [shape=record,label="{14\:\ 0x001a|0x001a: SGET  (r1 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater) =  kotlinx.coroutines.debug.internal.ConcurrentWeakMap._size$FU java.util.concurrent.atomic.AtomicIntegerFieldUpdater \l0x001c: INVOKE  (r1 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater), (r7 I:java.lang.Object) type: VIRTUAL call: java.util.concurrent.atomic.AtomicIntegerFieldUpdater.incrementAndGet(java.lang.Object):int A[MD:(T):int (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|RETURN\l|0x001f: RETURN  (r0 I:V A[D('oldValue' java.lang.Object)])  (LINE:37)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public V kotlinx.coroutines.debug.internal.ConcurrentWeakMap.put((r7 'this' I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap\<K, V\> A[IMMUTABLE_TYPE, THIS]), (r8 I:K A[D('key' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:V A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x0018 \-\> B:15:0x001f, CROSS_EDGE: B:11:0x0012 \-\> B:13:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: (TK;TV;)TV;\lDebug Info:\l  0x000e\-0x001f: r0 'oldValue' Ljava\/lang\/Object;\l  \-1 \-0x001f: r8 'key' Ljava\/lang\/Object;\l  \-1 \-0x001f: r9 'value' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Map.put(K, V):V\}]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

