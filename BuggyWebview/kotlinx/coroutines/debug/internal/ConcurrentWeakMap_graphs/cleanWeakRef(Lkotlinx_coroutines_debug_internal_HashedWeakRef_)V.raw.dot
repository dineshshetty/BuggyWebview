digraph "CFG forkotlinx.coroutines.debug.internal.ConcurrentWeakMap.cleanWeakRef(Lkotlinx\/coroutines\/debug\/internal\/HashedWeakRef;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object) = (r1 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.core java.lang.Object  (LINE:82)\l0x0002: CHECK_CAST (r0 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) = (kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) (r0 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  \l  (r0 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core)\l  (r2 I:kotlinx.coroutines.debug.internal.HashedWeakRef A[D('w' kotlinx.coroutines.debug.internal.HashedWeakRef)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.cleanWeakRef(kotlinx.coroutines.debug.internal.HashedWeakRef):void A[MD:(kotlinx.coroutines.debug.internal.HashedWeakRef\<?\>):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0007|RETURN\l|0x0007: RETURN    (LINE:83)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.debug.internal.ConcurrentWeakMap.cleanWeakRef((r1 'this' I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap\<K, V\> A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlinx.coroutines.debug.internal.HashedWeakRef\<?\> A[D('w' kotlinx.coroutines.debug.internal.HashedWeakRef), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r2 'w' Lkotlinx\/coroutines\/debug\/internal\/HashedWeakRef;\lTYPE_VARS: [V, K]\lSIGNATURE: (Lkotlinx\/coroutines\/debug\/internal\/HashedWeakRef\<*\>;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

