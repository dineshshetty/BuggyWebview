digraph "CFG forkotlinx.coroutines.debug.internal.ConcurrentWeakMap.putSynchronized(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: MONITOR_ENTER  (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x0001|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0020, blocks: (B:19:0x0001, B:20:0x0005, B:24:0x0018), top: B:29:0x0001 \}\lCatch: all \-\> 0x0020\l|0x0001: IGET  (r0 I:java.lang.Object) = (r7 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.core java.lang.Object A[Catch: all \-\> 0x0020, TRY_ENTER] (LINE:50)\l0x0003: CHECK_CAST (r0 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) = (kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0020]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0005|TRY_LEAVE\lLOOP_START\lTryCatch #0 \{all \-\> 0x0020, blocks: (B:19:0x0001, B:20:0x0005, B:24:0x0018), top: B:29:0x0001 \}\lLOOP:0: B:20:0x0005\-\>B:24:0x0018\lCatch: all \-\> 0x0020\l|0x0006: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:52)\l0x0007: CONST  (r5 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0008: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('curCore' kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core)]) \l0x000a: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('key' java.lang.Object)]) \l0x000b: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('value' java.lang.Object)]) \l0x000c: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l  (r4 I:kotlinx.coroutines.debug.internal.HashedWeakRef)\l  (r5 I:int)\l  (r6 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.putImpl$default(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core, java.lang.Object, java.lang.Object, kotlinx.coroutines.debug.internal.HashedWeakRef, int, java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0020, MD:(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core, java.lang.Object, java.lang.Object, kotlinx.coroutines.debug.internal.HashedWeakRef, int, java.lang.Object):java.lang.Object (m)]\l0x0010: INVOKE  (r2 I:kotlinx.coroutines.internal.Symbol) =  type: STATIC call: kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.access$getREHASH$p():kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x0020, MD:():kotlinx.coroutines.internal.Symbol (m), TRY_LEAVE] (LINE:53)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0014|0x0014: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('oldValue' java.lang.Object)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0018 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0018|TRY_ENTER\lTRY_LEAVE\lLOOP_END\lTryCatch #0 \{all \-\> 0x0020, blocks: (B:19:0x0001, B:20:0x0005, B:24:0x0018), top: B:29:0x0001 \}\lLOOP:0: B:20:0x0005\-\>B:24:0x0018\lCatch: all \-\> 0x0020\l|0x0018: INVOKE  (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) = \l  (r0 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core A[D('curCore' kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.rehash():kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core A[Catch: all \-\> 0x0020, MD:():kotlinx.coroutines.debug.internal.ConcurrentWeakMap\<K, V\>$Core (m), TRY_ENTER] (LINE:54)\l0x001c: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('curCore' kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core)]) = (r2 I:??[OBJECT, ARRAY]) \l0x001d: IPUT  \l  (r0 I:java.lang.Object A[D('curCore' kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core)])\l  (r7 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap)\l kotlinx.coroutines.debug.internal.ConcurrentWeakMap.core java.lang.Object A[Catch: all \-\> 0x0020, TRY_LEAVE] (LINE:55)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|0x0016: MONITOR_EXIT  (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|RETURN\l|0x0017: RETURN  (r1 I:V A[D('oldValue' java.lang.Object)]) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|ExcHandler: all \-\> 0x0020\l|0x0020: MOVE_EXCEPTION  (r8 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0020] (LINE:49)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|0x0022: THROW  (r8 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private final synchronized V kotlinx.coroutines.debug.internal.ConcurrentWeakMap.putSynchronized((r7 'this' I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap\<K, V\> A[IMMUTABLE_TYPE, THIS]), (r8 I:K A[D('key' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:V A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x0018 \-\> B:20:0x0005, CROSS_EDGE: B:28:0x0022 \-\> B:17:?, CROSS_EDGE: B:29:0x0001 \-\> B:26:0x0020\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0020, blocks: (B:19:0x0001, B:20:0x0005, B:24:0x0018), top: B:29:0x0001 \}\lTYPE_VARS: [V, K]\lSIGNATURE: (TK;TV;)TV;\lDebug Info:\l  0x0010\-0x001f: r1 'oldValue' Ljava\/lang\/Object;\l  0x0005\-0x0020: r0 'curCore' Lkotlinx\/coroutines\/debug\/internal\/ConcurrentWeakMap$Core;\l  \-1 \-0x0020: r8 'key' Ljava\/lang\/Object;\l  \-1 \-0x0020: r9 'value' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_29;
Node_29 -> Node_19;
Node_29 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_30;
Node_21 -> Node_24;
Node_21 -> Node_31[style=dashed];
Node_24 -> Node_20;
Node_31 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_17;
Node_30 -> Node_26;
Node_26 -> Node_28;
Node_28 -> Node_17;
}

