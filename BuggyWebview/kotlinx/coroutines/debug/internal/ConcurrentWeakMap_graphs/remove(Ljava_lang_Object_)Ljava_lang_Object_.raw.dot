digraph "CFG forkotlinx.coroutines.debug.internal.ConcurrentWeakMap.remove(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0001|0x0001: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('key' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0004 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0003|RETURN\l|0x0003: RETURN  (r0 I:V) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|0x0004: IGET  (r1 I:java.lang.Object) = (r8 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.core java.lang.Object  (LINE:41)\l0x0006: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0007: CHECK_CAST (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) = (kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) (r2 I:??[OBJECT, ARRAY]) \l0x0009: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: CONST  (r6 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x000c: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('key' java.lang.Object)]) \l0x000e: INVOKE  (r1 I:java.lang.Object) = \l  (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l  (r5 I:kotlinx.coroutines.debug.internal.HashedWeakRef)\l  (r6 I:int)\l  (r7 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.putImpl$default(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core, java.lang.Object, java.lang.Object, kotlinx.coroutines.debug.internal.HashedWeakRef, int, java.lang.Object):java.lang.Object A[MD:(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core, java.lang.Object, java.lang.Object, kotlinx.coroutines.debug.internal.HashedWeakRef, int, java.lang.Object):java.lang.Object (m)]\l0x0012: INVOKE  (r2 I:kotlinx.coroutines.internal.Symbol) =  type: STATIC call: kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.access$getREHASH$p():kotlinx.coroutines.internal.Symbol A[MD:():kotlinx.coroutines.internal.Symbol (m)] (LINE:42)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0016|0x0016: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('oldValue' java.lang.Object)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x001c \l}"];
Node_18 [shape=record,label="{18\:\ 0x0018|0x0018: INVOKE  (r1 I:java.lang.Object A[D('oldValue' java.lang.Object)]) = \l  (r8 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap)\l  (r9 I:java.lang.Object A[D('key' java.lang.Object)])\l  (r0 I:java.lang.Object)\l type: DIRECT call: kotlinx.coroutines.debug.internal.ConcurrentWeakMap.putSynchronized(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x001c|0x001c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('oldValue' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0023  (LINE:43)\l}"];
Node_20 [shape=record,label="{20\:\ 0x001e|0x001e: SGET  (r0 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater) =  kotlinx.coroutines.debug.internal.ConcurrentWeakMap._size$FU java.util.concurrent.atomic.AtomicIntegerFieldUpdater \l0x0020: INVOKE  (r0 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater), (r8 I:java.lang.Object) type: VIRTUAL call: java.util.concurrent.atomic.AtomicIntegerFieldUpdater.decrementAndGet(java.lang.Object):int A[MD:(T):int (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0023|RETURN\l|0x0023: RETURN  (r1 I:V A[D('oldValue' java.lang.Object)])  (LINE:44)\l}"];
MethodNode[shape=record,label="{public V kotlinx.coroutines.debug.internal.ConcurrentWeakMap.remove((r8 'this' I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap\<K, V\> A[IMMUTABLE_TYPE, THIS]), (r9 I:java.lang.Object A[D('key' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:21:0x0023 \-\> B:12:?, CROSS_EDGE: B:19:0x001c \-\> B:21:0x0023, CROSS_EDGE: B:17:0x0016 \-\> B:19:0x001c\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: (Ljava\/lang\/Object;)TV;\lDebug Info:\l  0x0012\-0x0023: r1 'oldValue' Ljava\/lang\/Object;\l  \-1 \-0x0023: r9 'key' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Map.remove(java.lang.Object):V\}]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

