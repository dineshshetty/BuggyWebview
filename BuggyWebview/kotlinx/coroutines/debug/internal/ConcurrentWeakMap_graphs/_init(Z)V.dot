digraph "CFG forkotlinx.coroutines.debug.internal.ConcurrentWeakMap.\<init\>(Z)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|r2._size = 0\lr2.core = new kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core(16)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000f|if (r3 == false) goto L7\l}"];
Node_12 [shape=record,label="{12\:\ 0x0011|java.lang.ref.ReferenceQueue r0 = new java.lang.ref.ReferenceQueue\<\>()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|PHI: r0 \l  PHI: (r0v3 java.lang.ref.ReferenceQueue\<K\>) = (r0v2 java.lang.ref.ReferenceQueue\<K\>), (r0v4 java.lang.ref.ReferenceQueue\<K\>) binds: [B:13:0x0017, B:12:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|r2.weakRefQueue = r0\l}"];
Node_15 [shape=record,label="{15\:\ 0x001a|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|r0 = null\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.debug.internal.ConcurrentWeakMap.\<init\>((r2v0 'this' kotlinx.coroutines.debug.internal.ConcurrentWeakMap\<K, V\> A[IMMUTABLE_TYPE, THIS]), (r3v0 'weakRefQueue' boolean A[D('weakRefQueue' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0017 \-\> B:14:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

