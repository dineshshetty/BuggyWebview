digraph "CFG forkotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1.invoke(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/util\/Map$Entry;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry) =  kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry  (LINE:63)\l0x0002: INVOKE  \l  (r0 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry)\l  (r2 I:java.lang.Object A[D('k' java.lang.Object)])\l  (r3 I:java.lang.Object A[D('v' java.lang.Object)])\l type: DIRECT call: kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Entry.\<init\>(java.lang.Object, java.lang.Object):void A[MD:(K, V):void (m)]\l0x0005: CHECK_CAST (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:java.util.Map$Entry\<K, V\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final java.util.Map$Entry\<K, V\> kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1.invoke((r1 'this' I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:K A[D('k' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:V A[D('v' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0007: r2 'k' Ljava\/lang\/Object;\l  \-1 \-0x0007: r3 'v' Ljava\/lang\/Object;\lTYPE_VARS: EMPTY\lSIGNATURE: (TK;TV;)Ljava\/util\/Map$Entry\<TK;TV;\>;\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function2.invoke(P1, P2):R]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

