digraph "CFG forkotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.cleanWeakRef(Lkotlinx\/coroutines\/debug\/internal\/HashedWeakRef;)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|int r0 = index(r3.hash)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|LOOP_START\lLOOP:0: B:19:0x0006\-\>B:27:0x001c\lPHI: r0 \l  PHI: (r0v2 'index' int) = (r0v1 'index' int), (r0v4 'index' int) binds: [B:18:0x0000, B:27:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.debug.internal.HashedWeakRef r1 = (kotlinx.coroutines.debug.internal.HashedWeakRef) r2.keys.get(r0)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|if (r1 != null) goto L4\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|if (r1 != r3) goto L5\l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|if (r0 != 0) goto L9\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|int r0 = r2.allocated\l}"];
Node_30 [shape=record,label="{30\:\ 0x001c|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|LOOP_END\lLOOP:0: B:19:0x0006\-\>B:27:0x001c\lPHI: r0 \l  PHI: (r0v3 'index' int) = (r0v2 'index' int), (r0v5 'index' int) binds: [B:31:0x001c, B:30:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = r0 + (\-1)\l}"];
Node_31 [shape=record,label="{31\:\ 0x001c|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0014|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|removeCleanedAt(r0)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0011|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.cleanWeakRef((r2v0 'this' kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core A[IMMUTABLE_TYPE, THIS]), (r3v0 kotlinx.coroutines.debug.internal.HashedWeakRef\<?\> A[D('weakRef' kotlinx.coroutines.debug.internal.HashedWeakRef), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0017 \-\> B:17:?, BACK_EDGE: B:27:0x001c \-\> B:19:0x0006, CROSS_EDGE: B:25:0x0018 \-\> B:27:0x001c\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: (Lkotlinx\/coroutines\/debug\/internal\/HashedWeakRef\<*\>;)V\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_29[style=dashed];
Node_22 -> Node_25;
Node_22 -> Node_28[style=dashed];
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_30;
Node_30 -> Node_27;
Node_27 -> Node_19;
Node_31 -> Node_27;
Node_28 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_17;
Node_29 -> Node_21;
Node_21 -> Node_17;
}

