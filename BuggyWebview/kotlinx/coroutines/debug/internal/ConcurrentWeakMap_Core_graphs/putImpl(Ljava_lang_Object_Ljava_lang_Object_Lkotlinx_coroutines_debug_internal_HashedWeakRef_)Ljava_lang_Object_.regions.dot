digraph "CFG forkotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.putImpl(Ljava\/lang\/Object;Ljava\/lang\/Object;Lkotlinx\/coroutines\/debug\/internal\/HashedWeakRef;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1544667112 {
label = "R(2:1|(2:2|(2:5|(1:(1:16))(3:(1:8)|(1:10)|11))(1:(1:51)(3:(2:(2:34|(2:(2:41|42)|(1:36)))|39)|(1:44)|(1:(1:48)))))) | DECL_VAR: int cur$iv, kotlinx.coroutines.internal.Symbol null, int upd$iv\l";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x0000|int int r0 = index(r12.hashCode())\lboolean r1 = false\lkotlinx.coroutines.debug.internal.HashedWeakRef\<K\> r2 = r14\l}"];
subgraph cluster_LoopRegion_1694455798 {
label = "LOOP:0: (2:2|(2:5|(1:(1:16))(3:(1:8)|(1:10)|11))(1:(1:51)(3:(2:(2:34|(2:(2:41|42)|(1:36)))|39)|(1:44)|(1:(1:48)))))";
node [shape=record,color=blue];
subgraph cluster_Region_413911123 {
label = "R(2:2|(2:5|(1:(1:16))(3:(1:8)|(1:10)|11))(1:(1:51)(3:(2:(2:34|(2:(2:41|42)|(1:36)))|39)|(1:44)|(1:(1:48)))))";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x000a|LOOP_START\lLOOP:0: B:57:0x000a\-\>B:102:0x000a\lPHI: r0 r1 r2 \l  PHI: (r0v2 'index' int) = (r0v1 'index' int), (r0v3 'index' int) binds: [B:56:0x0000, B:102:0x000a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'loadIncremented' boolean) = (r1v0 'loadIncremented' boolean), (r1v6 'loadIncremented' boolean) binds: [B:56:0x0000, B:102:0x000a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 kotlinx.coroutines.debug.internal.HashedWeakRef\<K\>) = (r2v0 kotlinx.coroutines.debug.internal.HashedWeakRef\<K\>), (r2v9 kotlinx.coroutines.debug.internal.HashedWeakRef\<K\>) binds: [B:56:0x0000, B:102:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.debug.internal.HashedWeakRef kotlinx.coroutines.debug.internal.HashedWeakRef r3 = (kotlinx.coroutines.debug.internal.HashedWeakRef) r11.keys.get(r0)\l}"];
subgraph cluster_IfRegion_431420705 {
label = "IF [B:58:0x0013] THEN: R(2:5|(1:(1:16))(3:(1:8)|(1:10)|11)) ELSE: R(1:(1:51)(3:(2:(2:34|(2:(2:41|42)|(1:36)))|39)|(1:44)|(1:(1:48))))";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0013|if (r3 != null) goto L4\l}"];
subgraph cluster_Region_1578130683 {
label = "R(2:5|(1:(1:16))(3:(1:8)|(1:10)|11))";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x0052|java.lang.Object java.lang.Object r4 = r3.get()\l}"];
subgraph cluster_IfRegion_1223918976 {
label = "IF [B:79:0x005a] THEN: R(1:(1:16)) ELSE: R(3:(1:8)|(1:10)|11)";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x005a|if (kotlin.jvm.internal.Intrinsics.areEqual(r12, r4) != false) goto L14\l}"];
subgraph cluster_Region_1412644570 {
label = "R(1:(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_353527750 {
label = "IF [B:80:0x005c] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_80 [shape=record,label="{80\:\ 0x005c|if (r1 != false) goto L16\l}"];
subgraph cluster_Region_994196679 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_81 [shape=record,label="{81\:\ 0x005e|kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.load$FU.decrementAndGet(r11)\l}"];
}
}
}
subgraph cluster_Region_153987536 {
label = "R(3:(1:8)|(1:10)|11)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_438525789 {
label = "IF [B:91:0x007f] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_91 [shape=record,label="{91\:\ 0x007f|if (r4 == null) goto L8\l}"];
subgraph cluster_Region_1234487889 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_92 [shape=record,label="{92\:\ 0x0081|removeCleanedAt(r0)\l}"];
}
}
subgraph cluster_IfRegion_756255130 {
label = "IF [B:93:0x0084] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_93 [shape=record,label="{93\:\ 0x0084|if (r0 == 0) goto L10\l}"];
subgraph cluster_Region_529649891 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_94 [shape=record,label="{94\:\ 0x0086|int r0 = r11.allocated\l}"];
}
}
Node_95 [shape=record,label="{95\:\ 0x0088|PHI: r0 \l  PHI: (r0v4 'index' int) = (r0v2 'index' int), (r0v6 'index' int) binds: [B:93:0x0084, B:94:0x0086] A[DONT_GENERATE, DONT_INLINE]\l|r0\-\-\l}"];
}
}
}
subgraph cluster_Region_160800265 {
label = "R(1:(1:51)(3:(2:(2:34|(2:(2:41|42)|(1:36)))|39)|(1:44)|(1:(1:48)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_399194154 {
label = "IF [B:60:0x0016] THEN: R(1:51) ELSE: R(3:(2:(2:34|(2:(2:41|42)|(1:36)))|39)|(1:44)|(1:(1:48))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x0016|if (r13 == null) goto L50\l}"];
subgraph cluster_Region_1522733543 {
label = "R(1:51)";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x0018|RETURN\l|return null\l}"];
}
subgraph cluster_Region_1892526716 {
label = "R(3:(2:(2:34|(2:(2:41|42)|(1:36)))|39)|(1:44)|(1:(1:48)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_612135847 {
label = "IF [B:62:0x0019] THEN: R(2:(2:34|(2:(2:41|42)|(1:36)))|39) ELSE: null";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x0019|if (r1 == false) goto L33\l}"];
subgraph cluster_Region_2050747538 {
label = "R(2:(2:34|(2:(2:41|42)|(1:36)))|39)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_708523673 {
label = "LOOP:2: (2:34|(2:(2:41|42)|(1:36)))";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x0033|LOOP_END\lLOOP:2: B:64:0x001d\-\>B:69:0x0033\l|if (kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.load$FU.compareAndSet(r11, r7, r8) == false) goto L34\l}"];
subgraph cluster_Region_1362513769 {
label = "R(2:34|(2:(2:41|42)|(1:36)))";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x001d|LOOP_START\lLOOP:2: B:64:0x001d\-\>B:69:0x0033\l|int r7 = r11.load\l}"];
subgraph cluster_Region_1426921402 {
label = "R(2:(2:41|42)|(1:36))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_76206338 {
label = "IF [B:65:0x0024] THEN: R(2:41|42) ELSE: null";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x0024|if (r7 \>= r11.threshold) goto L40\l}"];
subgraph cluster_Region_999289750 {
label = "R(2:41|42)";
node [shape=record,color=blue];
Node_66 [shape=record,label="{66\:\ 0x0026|kotlinx.coroutines.internal.Symbol r4 = kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.REHASH\l}"];
Node_67 [shape=record,label="{67\:\ 0x002a|RETURN\l|return r4\l}"];
}
}
subgraph cluster_Region_1486992108 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x002b|int r8 = r7 + 1\l}"];
}
}
}
}
Node_70 [shape=record,label="{70\:\ 0x0035|r1 = true\l}"];
}
}
subgraph cluster_IfRegion_530353475 {
label = "IF [B:72:0x0038] THEN: R(1:44) ELSE: null";
node [shape=record,color=blue];
Node_72 [shape=record,label="{72\:\ 0x0038|PHI: r1 \l  PHI: (r1v2 'loadIncremented' boolean) = (r1v1 'loadIncremented' boolean), (r1v3 'loadIncremented' boolean) binds: [B:62:0x0019, B:70:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == null) goto L44\l}"];
subgraph cluster_Region_979810785 {
label = "R(1:44)";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x003a|r2 = new kotlinx.coroutines.debug.internal.HashedWeakRef\<\>(r12, ((kotlinx.coroutines.debug.internal.ConcurrentWeakMap) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.this).weakRefQueue)\l}"];
}
}
subgraph cluster_Region_457797465 {
label = "R(1:(1:48))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1007960595 {
label = "IF [B:75:0x004c] THEN: R(1:48) ELSE: null";
node [shape=record,color=blue];
Node_75 [shape=record,label="{75\:\ 0x004c|if (r11.keys.compareAndSet(r0, null, r2) != false) goto L47\l}"];
subgraph cluster_Region_1506220542 {
label = "R(1:48)";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x004e|EDGE_INSN: B:76:0x004e\-\>B:83:0x0065 ?: BREAK  \l|break\l}"];
}
}
}
}
}
}
}
}
}
}
Node_54 [shape=record,color=red,label="{54\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_98 [shape=record,color=red,label="{98\:\ 0x0052|SYNTHETIC\l}"];
Node_103 [shape=record,color=red,label="{103\:\ 0x000a|SYNTHETIC\l}"];
Node_102 [shape=record,color=red,label="{102\:\ 0x000a|LOOP_END\lSYNTHETIC\lLOOP:0: B:57:0x000a\-\>B:102:0x000a\lPHI: r0 r1 r2 \l  PHI: (r0v3 'index' int) = (r0v2 'index' int), (r0v5 'index' int) binds: [B:104:0x000a, B:103:0x000a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v6 'loadIncremented' boolean) = (r1v2 'loadIncremented' boolean), (r1v1 'loadIncremented' boolean) binds: [B:104:0x000a, B:103:0x000a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v9 kotlinx.coroutines.debug.internal.HashedWeakRef\<K\>) = (r2v2 kotlinx.coroutines.debug.internal.HashedWeakRef\<K\>), (r2v1 kotlinx.coroutines.debug.internal.HashedWeakRef\<K\>) binds: [B:104:0x000a, B:103:0x000a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_101 [shape=record,color=red,label="{101\:\ 0x005c|SYNTHETIC\l}"];
Node_82 [shape=record,color=red,label="{82\:\ 0x0063}"];
Node_83 [shape=record,color=red,label="{83\:\ 0x0065|EDGE_INSN: B:76:0x004e\-\>B:83:0x0065 ?: BREAK  \l}"];
Node_84 [shape=record,color=red,label="{84\:\ 0x0066|LOOP_START\lLOOP:1: B:84:0x0066\-\>B:89:0x007c\l|java.lang.Object r1 = r11.values.get(r0)\l}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x006f|if ((r1 instanceof kotlinx.coroutines.debug.internal.Marked) == false) goto L21\l}"];
Node_88 [shape=record,color=red,label="{88\:\ 0x0076}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x007c|LOOP_END\lLOOP:1: B:84:0x0066\-\>B:89:0x007c\l|if (r11.values.compareAndSet(r0, r1, r13) == false) goto L19\l}"];
Node_105 [shape=record,color=red,label="{105\:\ 0x007e|SYNTHETIC\l}"];
Node_90 [shape=record,color=red,label="{90\:\ 0x007e|RETURN\l|return r1\l}"];
Node_55 [shape=record,color=red,label="{55\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_106 [shape=record,color=red,label="{106\:\ 0x0071|SYNTHETIC\l}"];
Node_86 [shape=record,color=red,label="{86\:\ 0x0071|kotlinx.coroutines.internal.Symbol r2 = kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.REHASH\l}"];
Node_87 [shape=record,color=red,label="{87\:\ 0x0075|RETURN\l|return r2\l}"];
Node_100 [shape=record,color=red,label="{100\:\ 0x0015|SYNTHETIC\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x0015}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x001b}"];
Node_107 [shape=record,color=red,label="{107\:\ 0x0035|SYNTHETIC\l}"];
Node_96 [shape=record,color=red,label="{96\:\ 0x0026|SYNTHETIC\l}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x0046|PHI: r2 \l  PHI: (r2v2 kotlinx.coroutines.debug.internal.HashedWeakRef\<K\>) = (r2v1 kotlinx.coroutines.debug.internal.HashedWeakRef\<K\>), (r2v3 kotlinx.coroutines.debug.internal.HashedWeakRef\<K\>) binds: [B:72:0x0038, B:73:0x003a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_97 [shape=record,color=red,label="{97\:\ 0x004e|SYNTHETIC\l}"];
Node_104 [shape=record,color=red,label="{104\:\ 0x000a|SYNTHETIC\l}"];
Node_99 [shape=record,color=red,label="{99\:\ 0x0018|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.putImpl((r11v0 'this' kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core A[IMMUTABLE_TYPE, THIS]), (r12v0 K A[D('key' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 V A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 kotlinx.coroutines.debug.internal.HashedWeakRef\<K\> A[D('weakKey0' kotlinx.coroutines.debug.internal.HashedWeakRef), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:67:0x002a \-\> B:55:?, CROSS_EDGE: B:87:0x0075 \-\> B:55:?, BACK_EDGE: B:89:0x007c \-\> B:84:0x0066, CROSS_EDGE: B:90:0x007e \-\> B:55:?, BACK_EDGE: B:75:0x004c \-\> B:57:0x000a, CROSS_EDGE: B:72:0x0038 \-\> B:74:0x0046, BACK_EDGE: B:69:0x0033 \-\> B:64:0x001d, CROSS_EDGE: B:62:0x0019 \-\> B:72:0x0038, CROSS_EDGE: B:82:0x0063 \-\> B:83:0x0065, CROSS_EDGE: B:80:0x005c \-\> B:82:0x0063, BACK_EDGE: B:95:0x0088 \-\> B:57:0x000a, CROSS_EDGE: B:93:0x0084 \-\> B:95:0x0088, CROSS_EDGE: B:91:0x007f \-\> B:93:0x0084\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lJadxCommentsAttr\{\l WARN: \l \-\> Code restructure failed: missing block: B:84:0x0066, code lost:\l    r1 = r11.values.get(r0);\l\l \-\> Code restructure failed: missing block: B:85:0x006f, code lost:\l    if ((r1 instanceof kotlinx.coroutines.debug.internal.Marked) == false) goto L21;\l\l \-\> Code restructure failed: missing block: B:89:0x007c, code lost:\l    if (r11.values.compareAndSet(r0, r1, r13) == false) goto L19;\l\l \-\> Code restructure failed: missing block: B:90:0x007e, code lost:\l    return r1;\l\l \-\> Code restructure failed: missing block: B:86:0x0071, code lost:\l    r2 = kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.REHASH;\l\l \-\> Code restructure failed: missing block: B:87:0x0075, code lost:\l    return r2;\l\}\lSIGNATURE: (TK;TV;Lkotlinx\/coroutines\/debug\/internal\/HashedWeakRef\<TK;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_54;Node_56 -> Node_57;
Node_57 -> Node_58;
Node_58 -> Node_98;
Node_58 -> Node_100[style=dashed];
Node_78 -> Node_79;
Node_79 -> Node_91[style=dashed];
Node_79 -> Node_101;
Node_80 -> Node_81;
Node_80 -> Node_82[style=dashed];
Node_81 -> Node_82;
Node_91 -> Node_92;
Node_91 -> Node_93[style=dashed];
Node_92 -> Node_93;
Node_93 -> Node_94;
Node_93 -> Node_95[style=dashed];
Node_94 -> Node_95;
Node_95 -> Node_103;
Node_60 -> Node_62[style=dashed];
Node_60 -> Node_99;
Node_61 -> Node_55;
Node_62 -> Node_63;
Node_62 -> Node_72[style=dashed];
Node_69 -> Node_64;
Node_69 -> Node_107[style=dashed];
Node_64 -> Node_65;
Node_65 -> Node_68[style=dashed];
Node_65 -> Node_96;
Node_66 -> Node_67;
Node_67 -> Node_55;
Node_68 -> Node_69;
Node_70 -> Node_72;
Node_72 -> Node_73;
Node_72 -> Node_74[style=dashed];
Node_73 -> Node_74;
Node_75 -> Node_97;
Node_75 -> Node_104[style=dashed];
Node_76 -> Node_83;
Node_54 -> Node_56;
Node_98 -> Node_78;
Node_103 -> Node_102;
Node_102 -> Node_57;
Node_101 -> Node_80;
Node_82 -> Node_83;
Node_83 -> Node_84;
Node_84 -> Node_85;
Node_85 -> Node_88;
Node_85 -> Node_106[style=dashed];
Node_88 -> Node_89;
Node_89 -> Node_84;
Node_89 -> Node_105[style=dashed];
Node_105 -> Node_90;
Node_90 -> Node_55;
Node_106 -> Node_86;
Node_86 -> Node_87;
Node_87 -> Node_55;
Node_100 -> Node_59;
Node_59 -> Node_60;
Node_63 -> Node_64;
Node_107 -> Node_70;
Node_96 -> Node_66;
Node_74 -> Node_75;
Node_97 -> Node_76;
Node_104 -> Node_102;
Node_99 -> Node_61;
}

