digraph "CFG forkotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.rehash()Lkotlinx\/coroutines\/debug\/internal\/ConcurrentWeakMap$Core;" {
Node_41 [shape=record,label="{41\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x0000|LOOP_START\lLOOP:0: B:43:0x0000\-\>B:75:0x0000\l|int r0 = java.lang.Integer.highestOneBit(kotlin.ranges.RangesKt.coerceAtLeast(kotlinx.coroutines.debug.internal.ConcurrentWeakMap.this.size(), 4)) * 4\lkotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core r1 = (kotlinx.coroutines.debug.internal.ConcurrentWeakMap\<K, V\>.Core) new kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core(r0)\lint r2 = r11.allocated\lr4 = 0\l}"];
Node_44 [shape=record,label="{44\:\ 0x001d|LOOP_START\lLOOP:1: B:44:0x001d\-\>B:76:0x001d\lPHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:43:0x0000, B:76:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \>= r2) goto L37\l}"];
Node_45 [shape=record,label="{45\:\ 0x001f|r5 = r4\lint r4 = r4 + 1\lkotlinx.coroutines.debug.internal.HashedWeakRef r6 = (kotlinx.coroutines.debug.internal.HashedWeakRef) r11.keys.get(r5)\l}"];
Node_46 [shape=record,label="{46\:\ 0x002a|if (r6 != null) goto L36\l}"];
Node_47 [shape=record,label="{47\:\ 0x002c|r7 = null\l}"];
Node_49 [shape=record,label="{49\:\ 0x0032|PHI: r7 \l  PHI: (r7v1 'k' java.lang.Object) = (r7v0 'k' java.lang.Object), (r7v2 'k' java.lang.Object) binds: [B:48:0x002e, B:47:0x002c] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 == null) goto L9\l}"];
Node_50 [shape=record,label="{50\:\ 0x0034|if (r7 != null) goto L9\l}"];
Node_51 [shape=record,label="{51\:\ 0x0036|removeCleanedAt(r5)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0039}"];
Node_53 [shape=record,label="{53\:\ 0x003a|LOOP_START\lLOOP:2: B:53:0x003a\-\>B:57:0x0055\l|java.lang.Object r8 = r11.values.get(r5)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0043|if ((r8 instanceof kotlinx.coroutines.debug.internal.Marked) == false) goto L12\l}"];
Node_56 [shape=record,label="{56\:\ 0x004b|java.util.concurrent.atomic.AtomicReferenceArray r9 = r11.values\lkotlinx.coroutines.debug.internal.Marked r10 = kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.mark(r8)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0055|LOOP_END\lLOOP:2: B:53:0x003a\-\>B:57:0x0055\l|if (r9.compareAndSet(r5, r8, r10) == false) goto L10\l}"];
Node_81 [shape=record,label="{81\:\ 0x0057|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x0057|PHI: r8 \l  PHI: (r8v3 'value' java.lang.Object) = (r8v2 'value' java.lang.Object), (r8v1 'value' java.lang.Object) binds: [B:55:0x0045, B:81:0x0057] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 == null) goto L33\l}"];
Node_73 [shape=record,label="{73\:\ 0x0059|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x0059|if (r8 == null) goto L32\l}"];
Node_74 [shape=record,label="{74\:\ 0x005b|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x005b|java.lang.Object r9 = r1.putImpl(r7, r8, r6)\lkotlinx.coroutines.internal.Symbol r10 = kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.REHASH\l}"];
Node_61 [shape=record,label="{61\:\ 0x0063|if (r9 != r10) goto L21\l}"];
Node_63 [shape=record,label="{63\:\ 0x0066|if (r9 != null) goto L30\l}"];
Node_64 [shape=record,label="{64\:\ 0x0068|r10 = true\l}"];
Node_66 [shape=record,label="{66\:\ 0x006b|PHI: r10 \l  PHI: (r10v2 boolean) = (r10v1 boolean), (r10v3 boolean) binds: [B:65:0x006a, B:64:0x0068] A[DONT_GENERATE, DONT_INLINE]\l|if (r10 == false) goto L24\l}"];
Node_71 [shape=record,label="{71\:\ 0x006e|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x006e}"];
Node_69 [shape=record,label="{69\:\ 0x0075|throw new java.lang.AssertionError(\"Assertion failed\")\l}"];
Node_42 [shape=record,label="{42\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_79 [shape=record,label="{79\:\ 0x001d|SYNTHETIC\l}"];
Node_76 [shape=record,label="{76\:\ 0x001d|LOOP_END\lSYNTHETIC\lLOOP:1: B:44:0x001d\-\>B:76:0x001d\l}"];
Node_65 [shape=record,label="{65\:\ 0x006a|r10 = false\l}"];
Node_75 [shape=record,label="{75\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:43:0x0000\-\>B:75:0x0000\l}"];
Node_78 [shape=record,label="{78\:\ 0x001d|SYNTHETIC\l}"];
Node_77 [shape=record,label="{77\:\ 0x001d|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ 0x0045|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0045|java.lang.Object r8 = ((kotlinx.coroutines.debug.internal.Marked) r8).ref\l}"];
Node_48 [shape=record,label="{48\:\ 0x002e|java.lang.Object r7 = r6.get()\l}"];
Node_72 [shape=record,label="{72\:\ 0x0076|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x0076|RETURN\l|return r1\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.debug.internal.ConcurrentWeakMap\<K, V\>$Core kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.rehash((r11v0 'this' kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:58:0x0057 \-\> B:44:0x001d, BACK_EDGE: B:59:0x0059 \-\> B:44:0x001d, BACK_EDGE: B:66:0x006b \-\> B:44:0x001d, CROSS_EDGE: B:65:0x006a \-\> B:66:0x006b, BACK_EDGE: B:61:0x0063 \-\> B:43:0x0000, BACK_EDGE: B:57:0x0055 \-\> B:53:0x003a, CROSS_EDGE: B:57:0x0055 \-\> B:58:0x0057, CROSS_EDGE: B:50:0x0034 \-\> B:52:0x0039, CROSS_EDGE: B:49:0x0032 \-\> B:52:0x0039, CROSS_EDGE: B:48:0x002e \-\> B:49:0x0032, CROSS_EDGE: B:70:0x0076 \-\> B:42:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: ()Lkotlinx\/coroutines\/debug\/internal\/ConcurrentWeakMap\<TK;TV;\>.Core;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r1v1, resolved type: kotlinx.coroutines.debug.internal.ConcurrentWeakMap\<K, V\>$Core\}\l}"];
MethodNode -> Node_41;Node_41 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_72;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_52;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_56;
Node_54 -> Node_80[style=dashed];
Node_56 -> Node_57;
Node_57 -> Node_53;
Node_57 -> Node_81[style=dashed];
Node_81 -> Node_58;
Node_58 -> Node_73[style=dashed];
Node_58 -> Node_77;
Node_73 -> Node_59;
Node_59 -> Node_74[style=dashed];
Node_59 -> Node_78;
Node_74 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_63;
Node_61 -> Node_75[style=dashed];
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_66;
Node_66 -> Node_71;
Node_66 -> Node_79[style=dashed];
Node_71 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_42;
Node_79 -> Node_76;
Node_76 -> Node_44;
Node_65 -> Node_66;
Node_75 -> Node_43;
Node_78 -> Node_76;
Node_77 -> Node_76;
Node_80 -> Node_55;
Node_55 -> Node_58;
Node_48 -> Node_49;
Node_72 -> Node_70;
Node_70 -> Node_42;
}

