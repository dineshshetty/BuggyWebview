digraph "CFG forkotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.cleanWeakRef(Lkotlinx\/coroutines\/debug\/internal\/HashedWeakRef;)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r3 I:kotlinx.coroutines.debug.internal.HashedWeakRef A[D('weakRef' kotlinx.coroutines.debug.internal.HashedWeakRef)]) kotlinx.coroutines.debug.internal.HashedWeakRef.hash int  (LINE:196)\l0x0002: INVOKE  (r0 I:int) = (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core), (r0 I:int) type: DIRECT call: kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.index(int):int A[MD:(int):int (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|LOOP_START\lLOOP:0: B:19:0x0006\-\>B:27:0x001c\l|0x0007: IGET  (r1 I:java.util.concurrent.atomic.AtomicReferenceArray) = (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.keys java.util.concurrent.atomic.AtomicReferenceArray  (LINE:198)\l0x0009: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.concurrent.atomic.AtomicReferenceArray), (r0 I:int A[D('index' int)]) type: VIRTUAL call: java.util.concurrent.atomic.AtomicReferenceArray.get(int):java.lang.Object A[MD:(int):E (c)]\l0x000d: CHECK_CAST (r1 I:kotlinx.coroutines.debug.internal.HashedWeakRef) = (kotlinx.coroutines.debug.internal.HashedWeakRef) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0012 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('w' kotlinx.coroutines.debug.internal.HashedWeakRef)]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('weakRef' kotlinx.coroutines.debug.internal.HashedWeakRef)])  \-\> B:25:0x0018  (LINE:199)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|0x0018: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x001c  (LINE:203)\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|0x001a: IGET  (r0 I:int A[D('index' int)]) = (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.allocated int \l}"];
Node_30 [shape=record,label="{30\:\ 0x001c|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|LOOP_END\lLOOP:0: B:19:0x0006\-\>B:27:0x001c\l|0x001c: ARITH  (r0 I:int) = (r0 I:int A[D('index' int)]) + (\-1 int)  (LINE:204)\l}"];
Node_31 [shape=record,label="{31\:\ 0x001c|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0014|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|0x0014: INVOKE  (r2 I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core), (r0 I:int A[D('index' int)]) type: DIRECT call: kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.removeCleanedAt(int):void A[MD:(int):void (m)] (LINE:200)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|RETURN\l|0x0017: RETURN    (LINE:201)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0011|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|RETURN\l|0x0011: RETURN   \l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.cleanWeakRef((r2 'this' I:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlinx.coroutines.debug.internal.HashedWeakRef\<?\> A[D('weakRef' kotlinx.coroutines.debug.internal.HashedWeakRef), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0017 \-\> B:17:?, BACK_EDGE: B:27:0x001c \-\> B:19:0x0006, CROSS_EDGE: B:25:0x0018 \-\> B:27:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x001e: r1 'w' Lkotlinx\/coroutines\/debug\/internal\/HashedWeakRef;\l  0x0006\-0x001e: r0 'index' I\l  \-1 \-0x001e: r3 'weakRef' Lkotlinx\/coroutines\/debug\/internal\/HashedWeakRef;\lSIGNATURE: (Lkotlinx\/coroutines\/debug\/internal\/HashedWeakRef\<*\>;)V\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_29[style=dashed];
Node_22 -> Node_25;
Node_22 -> Node_28[style=dashed];
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_30;
Node_30 -> Node_27;
Node_27 -> Node_19;
Node_31 -> Node_27;
Node_28 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_17;
Node_29 -> Node_21;
Node_21 -> Node_17;
}

