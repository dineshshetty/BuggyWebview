digraph "CFG forkotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.getImpl(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|int r0 = index(r6.hashCode())\l}"];
Node_27 [shape=record,label="{27\:\ 0x0008|LOOP_START\lLOOP:0: B:27:0x0008\-\>B:42:0x003a\lPHI: r0 \l  PHI: (r0v2 'index' int) = (r0v1 'index' int), (r0v4 'index' int) binds: [B:26:0x0000, B:42:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.debug.internal.HashedWeakRef r1 = (kotlinx.coroutines.debug.internal.HashedWeakRef) r5.keys.get(r0)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0011|if (r1 != null) goto L4\l}"];
Node_31 [shape=record,label="{31\:\ 0x0015|java.lang.Object r2 = r1.get()\l}"];
Node_32 [shape=record,label="{32\:\ 0x001d|if (kotlin.jvm.internal.Intrinsics.areEqual(r6, r2) == false) goto L6\l}"];
Node_38 [shape=record,label="{38\:\ 0x0031|if (r2 != null) goto L8\l}"];
Node_39 [shape=record,label="{39\:\ 0x0033|removeCleanedAt(r0)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0036|if (r0 != 0) goto L12\l}"];
Node_41 [shape=record,label="{41\:\ 0x0038|int r0 = r5.allocated\l}"];
Node_45 [shape=record,label="{45\:\ 0x003a|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x003a|LOOP_END\lLOOP:0: B:27:0x0008\-\>B:42:0x003a\lPHI: r0 \l  PHI: (r0v3 'index' int) = (r0v2 'index' int), (r0v5 'index' int) binds: [B:46:0x003a, B:45:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = r0 + (\-1)\l}"];
Node_46 [shape=record,label="{46\:\ 0x003a|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x001f|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x001f|java.lang.Object r3 = (V) r5.values.get(r0)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0027|if ((r3 instanceof kotlinx.coroutines.debug.internal.Marked) == false) goto L19\l}"];
Node_35 [shape=record,label="{35\:\ 0x0029}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|return (V) ((kotlinx.coroutines.debug.internal.Marked) r3).ref\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x002f}"];
Node_37 [shape=record,label="{37\:\ 0x0030|RETURN\lORIG_RETURN\l|return r3\l}"];
Node_43 [shape=record,label="{43\:\ 0x0013|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0013|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public final V kotlinx.coroutines.debug.internal.ConcurrentWeakMap.Core.getImpl((r5v0 'this' kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core A[IMMUTABLE_TYPE, THIS]), (r6v0 K A[D('key' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x0030 \-\> B:25:?, CROSS_EDGE: B:36:0x002f \-\> B:37:0x0030, BACK_EDGE: B:42:0x003a \-\> B:27:0x0008, CROSS_EDGE: B:40:0x0036 \-\> B:42:0x003a, CROSS_EDGE: B:38:0x0031 \-\> B:40:0x0036\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: (TK;)TV;\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_31;
Node_28 -> Node_43[style=dashed];
Node_31 -> Node_32;
Node_32 -> Node_38;
Node_32 -> Node_44[style=dashed];
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_46;
Node_41 -> Node_45;
Node_45 -> Node_42;
Node_42 -> Node_27;
Node_46 -> Node_42;
Node_44 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_47;
Node_47 -> Node_25;
Node_36 -> Node_37;
Node_37 -> Node_25;
Node_43 -> Node_29;
Node_29 -> Node_25;
}

