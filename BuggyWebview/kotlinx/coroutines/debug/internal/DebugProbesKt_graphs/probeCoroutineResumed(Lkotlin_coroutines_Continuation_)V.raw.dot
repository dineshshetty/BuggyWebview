digraph "CFG forkotlinx.coroutines.debug.internal.DebugProbesKt.probeCoroutineResumed(Lkotlin\/coroutines\/Continuation;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.debug.internal.DebugProbesImpl) =  kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE kotlinx.coroutines.debug.internal.DebugProbesImpl  (LINE:18)\l0x0002: INVOKE  \l  (r0 I:kotlinx.coroutines.debug.internal.DebugProbesImpl)\l  (r1 I:kotlin.coroutines.Continuation A[D('frame' kotlin.coroutines.Continuation)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugProbesImpl.probeCoroutineResumed$kotlinx_coroutines_core(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<?\>):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|RETURN\l|0x0005: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.debug.internal.DebugProbesKt.probeCoroutineResumed((r1 I:kotlin.coroutines.Continuation\<?\> A[D('frame' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0005: r1 'frame' Lkotlin\/coroutines\/Continuation;\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<*\>;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

