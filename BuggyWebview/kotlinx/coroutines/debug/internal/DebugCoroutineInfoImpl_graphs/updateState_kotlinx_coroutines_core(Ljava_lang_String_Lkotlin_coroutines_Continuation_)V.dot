digraph "CFG forkotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.updateState$kotlinx_coroutines_core(Ljava\/lang\/String;Lkotlin\/coroutines\/Continuation;)V" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000}"];
Node_22 [shape=record,label="{22\:\ 0x0006|if (kotlin.jvm.internal.Intrinsics.areEqual(r2._state, r3) == false) goto L9\l}"];
Node_23 [shape=record,label="{23\:\ 0x0008}"];
Node_24 [shape=record,label="{24\:\ 0x000e|if (kotlin.jvm.internal.Intrinsics.areEqual(r3, kotlinx.coroutines.debug.internal.DebugCoroutineInfoImplKt.SUSPENDED) == false) goto L9\l}"];
Node_25 [shape=record,label="{25\:\ 0x0010}"];
Node_26 [shape=record,label="{26\:\ 0x0014|if (getLastObservedFrame$kotlinx_coroutines_core() == null) goto L9\l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|r2._state = r3\lr1 = null\l}"];
Node_29 [shape=record,label="{29\:\ 0x001c|if ((r4 instanceof kotlin.coroutines.jvm.internal.CoroutineStackFrame) == false) goto L18\l}"];
Node_30 [shape=record,label="{30\:\ 0x001e|kotlin.coroutines.jvm.internal.CoroutineStackFrame r0 = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) r4\l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|PHI: r0 \l  PHI: (r0v4 kotlin.coroutines.jvm.internal.CoroutineStackFrame) = (r0v3 kotlin.coroutines.jvm.internal.CoroutineStackFrame), (r0v10 kotlin.coroutines.jvm.internal.CoroutineStackFrame) binds: [B:31:0x0022, B:30:0x001e] A[DONT_GENERATE, DONT_INLINE]\l|setLastObservedFrame$kotlinx_coroutines_core(r0)\l}"];
Node_33 [shape=record,label="{33\:\ 0x002c|if (kotlin.jvm.internal.Intrinsics.areEqual(r3, kotlinx.coroutines.debug.internal.DebugCoroutineInfoImplKt.RUNNING) == false) goto L17\l}"];
Node_34 [shape=record,label="{34\:\ 0x002e|java.lang.Thread r1 = java.lang.Thread.currentThread()\l}"];
Node_36 [shape=record,label="{36\:\ 0x0036|PHI: r1 \l  PHI: (r1v1 java.lang.Thread) = (r1v0 java.lang.Thread), (r1v2 java.lang.Thread) binds: [B:35:0x0033, B:34:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|r2.lastObservedThread = r1\l}"];
Node_37 [shape=record,label="{37\:\ 0x0038|RETURN\l|return\l}"];
Node_35 [shape=record,label="{35\:\ 0x0033}"];
Node_31 [shape=record,label="{31\:\ 0x0022|r0 = null\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.updateState$kotlinx_coroutines_core((r2v0 'this' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[IMMUTABLE_TYPE, THIS]), (r3v0 'state' java.lang.String A[D('state' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.coroutines.Continuation\<?\> A[D('frame' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x0038 \-\> B:20:?, CROSS_EDGE: B:35:0x0033 \-\> B:36:0x0036, CROSS_EDGE: B:31:0x0022 \-\> B:32:0x0023, CROSS_EDGE: B:24:0x000e \-\> B:28:0x0017, CROSS_EDGE: B:22:0x0006 \-\> B:28:0x0017\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/lang\/String;Lkotlin\/coroutines\/Continuation\<*\>;)V\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_20;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_35 -> Node_36;
Node_31 -> Node_32;
}

