digraph "CFG forkotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.creationStackTrace()Ljava\/util\/List;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlinx.coroutines.debug.internal.StackTraceFrame r0 = r3.creationStackBottom\l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|if (r0 != null) goto L6\l}"];
Node_12 [shape=record,label="{12\:\ 0x0004}"];
Node_13 [shape=record,label="{13\:\ 0x0008|RETURN\l|return kotlin.collections.CollectionsKt.emptyList()\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0009}"];
Node_15 [shape=record,label="{15\:\ 0x0019|RETURN\l|return kotlin.sequences.SequencesKt.toList(kotlin.sequences.SequencesKt.sequence(new kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1(r3, r0, null)))\l}"];
MethodNode[shape=record,label="{private final java.util.List\<java.lang.StackTraceElement\> kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.creationStackTrace((r3v0 'this' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0019 \-\> B:9:?\lINLINE_NOT_NEEDED\lSIGNATURE: ()Ljava\/util\/List\<Ljava\/lang\/StackTraceElement;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

