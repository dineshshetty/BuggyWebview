digraph "CFG forkotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.access$yieldFrames(Lkotlinx\/coroutines\/debug\/internal\/DebugCoroutineInfoImpl;Lkotlin\/sequences\/SequenceScope;Lkotlin\/coroutines\/jvm\/internal\/CoroutineStackFrame;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('$this' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)])\l  (r2 I:kotlin.sequences.SequenceScope A[D('$receiver' kotlin.sequences.SequenceScope)])\l  (r3 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame A[D('frame' kotlin.coroutines.jvm.internal.CoroutineStackFrame)])\l  (r4 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.yieldFrames(kotlin.sequences.SequenceScope, kotlin.coroutines.jvm.internal.CoroutineStackFrame, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlin.sequences.SequenceScope\<? super java.lang.StackTraceElement\>, kotlin.coroutines.jvm.internal.CoroutineStackFrame, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)] (LINE:18)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:java.lang.Object) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ java.lang.Object kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.access$yieldFrames((r1 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('$this' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.sequences.SequenceScope A[D('$receiver' kotlin.sequences.SequenceScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame A[D('frame' kotlin.coroutines.jvm.internal.CoroutineStackFrame), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  \l  (r1 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('$this' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)])\l  (r2 I:kotlin.sequences.SequenceScope A[D('$receiver' kotlin.sequences.SequenceScope)])\l  (r3 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame A[D('frame' kotlin.coroutines.jvm.internal.CoroutineStackFrame)])\l  (r4 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.yieldFrames(kotlin.sequences.SequenceScope, kotlin.coroutines.jvm.internal.CoroutineStackFrame, kotlin.coroutines.Continuation):java.lang.Object\lDebug Info:\l  \-1 \-0x0004: r1 '$this' Lkotlinx\/coroutines\/debug\/internal\/DebugCoroutineInfoImpl;\l  \-1 \-0x0004: r2 '$receiver' Lkotlin\/sequences\/SequenceScope;\l  \-1 \-0x0004: r3 'frame' Lkotlin\/coroutines\/jvm\/internal\/CoroutineStackFrame;\l  \-1 \-0x0004: r4 '$completion' Lkotlin\/coroutines\/Continuation;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

