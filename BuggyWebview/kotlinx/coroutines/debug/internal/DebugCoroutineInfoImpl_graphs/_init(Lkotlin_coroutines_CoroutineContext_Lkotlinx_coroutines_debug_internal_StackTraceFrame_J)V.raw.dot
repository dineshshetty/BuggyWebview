digraph "CFG forkotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.\<init\>(Lkotlin\/coroutines\/CoroutineContext;Lkotlinx\/coroutines\/debug\/internal\/StackTraceFrame;J)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r1 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:18)\l0x0003: IPUT  \l  (r3 I:kotlinx.coroutines.debug.internal.StackTraceFrame A[D('creationStackBottom' kotlinx.coroutines.debug.internal.StackTraceFrame)])\l  (r1 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)\l kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.creationStackBottom kotlinx.coroutines.debug.internal.StackTraceFrame  (LINE:24)\l0x0005: IPUT  (r4 I:long A[D('sequenceNumber' long)]), (r1 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl) kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.sequenceNumber long  (LINE:25)\l0x0007: NEW_INSTANCE  (r0 I:java.lang.ref.WeakReference) =  java.lang.ref.WeakReference  (LINE:32)\l0x0009: INVOKE  (r0 I:java.lang.ref.WeakReference), (r2 I:java.lang.Object A[D('context' kotlin.coroutines.CoroutineContext)]) type: DIRECT call: java.lang.ref.WeakReference.\<init\>(java.lang.Object):void A[MD:(T):void (c)]\l0x000c: IPUT  \l  (r0 I:java.lang.ref.WeakReference\<kotlin.coroutines.CoroutineContext\>)\l  (r1 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)\l kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl._context java.lang.ref.WeakReference \l0x000e: CONST_STR  (r0 I:java.lang.String) =  \"CREATED\"  (LINE:43)\l0x0010: IPUT  (r0 I:java.lang.String), (r1 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl) kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl._state java.lang.String \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|RETURN\l|0x0012: RETURN    (LINE:18)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.\<init\>((r1 'this' I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlinx.coroutines.debug.internal.StackTraceFrame A[D('creationStackBottom' kotlinx.coroutines.debug.internal.StackTraceFrame), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('sequenceNumber' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0012: r2 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x0012: r3 'creationStackBottom' Lkotlinx\/coroutines\/debug\/internal\/StackTraceFrame;\l  \-1 \-0x0012: r4 'sequenceNumber' J\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

