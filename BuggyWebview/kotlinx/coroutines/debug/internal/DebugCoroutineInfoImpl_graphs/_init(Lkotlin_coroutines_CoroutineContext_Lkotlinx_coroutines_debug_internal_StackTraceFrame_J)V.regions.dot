digraph "CFG forkotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.\<init\>(Lkotlin\/coroutines\/CoroutineContext;Lkotlinx\/coroutines\/debug\/internal\/StackTraceFrame;J)V" {
subgraph cluster_Region_1058176767 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0000|r1.creationStackBottom = r3\lr1.sequenceNumber = r4\lr1._context = new java.lang.ref.WeakReference\<\>(r2)\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0012}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.\<init\>((r1v0 'this' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[IMMUTABLE_TYPE, THIS]), (r2v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'creationStackBottom' kotlinx.coroutines.debug.internal.StackTraceFrame A[D('creationStackBottom' kotlinx.coroutines.debug.internal.StackTraceFrame), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'sequenceNumber' long A[D('sequenceNumber' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_6 -> Node_7;
Node_4 -> Node_6;
Node_7 -> Node_5;
}

