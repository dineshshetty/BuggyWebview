digraph "CFG forkotlinx.coroutines.debug.internal.DebugCoroutineInfo.\<init\>(Lkotlinx\/coroutines\/debug\/internal\/DebugCoroutineInfoImpl;Lkotlin\/coroutines\/CoroutineContext;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r2 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:16)\l0x0003: IPUT  \l  (r4 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r2 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo)\l kotlinx.coroutines.debug.internal.DebugCoroutineInfo.context kotlin.coroutines.CoroutineContext  (LINE:20)\l0x0005: INVOKE  (r0 I:kotlinx.coroutines.debug.internal.StackTraceFrame) = \l  (r3 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.getCreationStackBottom():kotlinx.coroutines.debug.internal.StackTraceFrame A[MD:():kotlinx.coroutines.debug.internal.StackTraceFrame (m)] (LINE:22)\l0x0009: CHECK_CAST (r0 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame) = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) (r0 I:??[OBJECT, ARRAY]) \l0x000b: IPUT  (r0 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame), (r2 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo) kotlinx.coroutines.debug.internal.DebugCoroutineInfo.creationStackBottom kotlin.coroutines.jvm.internal.CoroutineStackFrame \l0x000d: IGET  (r0 I:long) = \l  (r3 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)])\l kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.sequenceNumber long  (LINE:23)\l0x000f: IPUT  (r0 I:long), (r2 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo) kotlinx.coroutines.debug.internal.DebugCoroutineInfo.sequenceNumber long \l0x0011: INVOKE  (r0 I:java.util.List) = \l  (r3 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.getCreationStackTrace():java.util.List A[MD:():java.util.List\<java.lang.StackTraceElement\> (m)] (LINE:24)\l0x0015: IPUT  (r0 I:java.util.List\<java.lang.StackTraceElement\>), (r2 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo) kotlinx.coroutines.debug.internal.DebugCoroutineInfo.creationStackTrace java.util.List \l0x0017: INVOKE  (r0 I:java.lang.String) = \l  (r3 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.getState():java.lang.String A[MD:():java.lang.String (m)] (LINE:25)\l0x001b: IPUT  (r0 I:java.lang.String), (r2 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo) kotlinx.coroutines.debug.internal.DebugCoroutineInfo.state java.lang.String \l0x001d: IGET  (r0 I:java.lang.Thread) = \l  (r3 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)])\l kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.lastObservedThread java.lang.Thread  (LINE:26)\l0x001f: IPUT  (r0 I:java.lang.Thread), (r2 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo) kotlinx.coroutines.debug.internal.DebugCoroutineInfo.lastObservedThread java.lang.Thread \l0x0021: INVOKE  (r0 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame) = \l  (r3 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.getLastObservedFrame$kotlinx_coroutines_core():kotlin.coroutines.jvm.internal.CoroutineStackFrame A[MD:():kotlin.coroutines.jvm.internal.CoroutineStackFrame (m)] (LINE:27)\l0x0025: IPUT  (r0 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame), (r2 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo) kotlinx.coroutines.debug.internal.DebugCoroutineInfo.lastObservedFrame kotlin.coroutines.jvm.internal.CoroutineStackFrame \l0x0027: INVOKE  (r0 I:java.util.List) = \l  (r3 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)])\l type: VIRTUAL call: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.lastObservedStackTrace():java.util.List A[MD:():java.util.List\<java.lang.StackTraceElement\> (m)] (LINE:29)\l0x002b: IPUT  (r0 I:java.util.List\<java.lang.StackTraceElement\>), (r2 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo) kotlinx.coroutines.debug.internal.DebugCoroutineInfo.lastObservedStackTrace java.util.List \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|RETURN\l|0x002d: RETURN    (LINE:18)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.debug.internal.DebugCoroutineInfo.\<init\>((r2 'this' I:kotlinx.coroutines.debug.internal.DebugCoroutineInfo A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl A[D('source' kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002d: r3 'source' Lkotlinx\/coroutines\/debug\/internal\/DebugCoroutineInfoImpl;\l  \-1 \-0x002d: r4 'context' Lkotlin\/coroutines\/CoroutineContext;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

