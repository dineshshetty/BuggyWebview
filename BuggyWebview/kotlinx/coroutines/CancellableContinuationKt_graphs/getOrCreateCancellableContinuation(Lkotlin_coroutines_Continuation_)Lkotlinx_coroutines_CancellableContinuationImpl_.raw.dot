digraph "CFG forkotlinx.coroutines.CancellableContinuationKt.getOrCreateCancellableContinuation(Lkotlin\/coroutines\/Continuation;)Lkotlinx\/coroutines\/CancellableContinuationImpl;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('delegate' kotlin.coroutines.Continuation)]) kotlinx.coroutines.internal.DispatchedContinuation  (LINE:340)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x000b \l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:kotlinx.coroutines.CancellableContinuationImpl) =  kotlinx.coroutines.CancellableContinuationImpl  (LINE:341)\l0x0006: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0007: INVOKE  \l  (r0 I:kotlinx.coroutines.CancellableContinuationImpl)\l  (r4 I:kotlin.coroutines.Continuation A[D('delegate' kotlin.coroutines.Continuation)])\l  (r1 I:int)\l type: DIRECT call: kotlinx.coroutines.CancellableContinuationImpl.\<init\>(kotlin.coroutines.Continuation, int):void A[MD:(kotlin.coroutines.Continuation\<? super T\>, int):void (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:kotlinx.coroutines.CancellableContinuationImpl\<T\>) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|0x000b: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('delegate' kotlin.coroutines.Continuation)])  (LINE:357)\l0x000c: CHECK_CAST (r0 I:kotlinx.coroutines.internal.DispatchedContinuation) = (kotlinx.coroutines.internal.DispatchedContinuation) (r0 I:??[OBJECT, ARRAY]) \l0x000e: INVOKE  (r0 I:kotlinx.coroutines.CancellableContinuationImpl) = (r0 I:kotlinx.coroutines.internal.DispatchedContinuation) type: VIRTUAL call: kotlinx.coroutines.internal.DispatchedContinuation.claimReusableCancellableContinuation():kotlinx.coroutines.CancellableContinuationImpl A[MD:():kotlinx.coroutines.CancellableContinuationImpl\<T\> (m)]\l0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0017 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|0x0015: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x001f|0x001f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0028 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|0x0021: NEW_INSTANCE  (r0 I:kotlinx.coroutines.CancellableContinuationImpl) =  kotlinx.coroutines.CancellableContinuationImpl  (LINE:358)\l0x0023: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0024: INVOKE  \l  (r0 I:kotlinx.coroutines.CancellableContinuationImpl)\l  (r4 I:kotlin.coroutines.Continuation A[D('delegate' kotlin.coroutines.Continuation)])\l  (r1 I:int)\l type: DIRECT call: kotlinx.coroutines.CancellableContinuationImpl.\<init\>(kotlin.coroutines.Continuation, int):void A[MD:(kotlin.coroutines.Continuation\<? super T\>, int):void (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0027|RETURN\l|0x0027: RETURN  (r0 I:kotlinx.coroutines.CancellableContinuationImpl\<T\>) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0028|RETURN\l|0x0028: RETURN  (r0 I:kotlinx.coroutines.CancellableContinuationImpl\<T\>)  (LINE:357)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|0x0017: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0018: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:394)\l0x0019: INVOKE  (r2 I:boolean A[D('it' kotlinx.coroutines.CancellableContinuationImpl)]) = (r2 I:kotlinx.coroutines.CancellableContinuationImpl A[D('it' kotlinx.coroutines.CancellableContinuationImpl)]) type: VIRTUAL call: kotlinx.coroutines.CancellableContinuationImpl.resetStateReusable():boolean A[MD:():boolean (m)] (LINE:357)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001d|0x001d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' kotlinx.coroutines.CancellableContinuationImpl)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0015 \l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.CancellableContinuationImpl\<T\> kotlinx.coroutines.CancellableContinuationKt.getOrCreateCancellableContinuation((r4 I:kotlin.coroutines.Continuation\<? super T\> A[D('delegate' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0027 \-\> B:16:?, CROSS_EDGE: B:29:0x0028 \-\> B:16:?, CROSS_EDGE: B:25:0x001d \-\> B:23:0x0015, CROSS_EDGE: B:25:0x001d \-\> B:26:0x001f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0018\-0x001d: r2 'it' Lkotlinx\/coroutines\/CancellableContinuationImpl;\l  0x0019\-0x001d: r3 '$i$a$\-takeIf\-CancellableContinuationKt$getOrCreateCancellableContinuation$1' I\l  \-1 \-0x0028: r4 'delegate' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/coroutines\/Continuation\<\-TT;\>;)Lkotlinx\/coroutines\/CancellableContinuationImpl\<TT;\>;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_16;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_16;
Node_29 -> Node_16;
Node_24 -> Node_25;
Node_25 -> Node_23;
Node_25 -> Node_26[style=dashed];
}

