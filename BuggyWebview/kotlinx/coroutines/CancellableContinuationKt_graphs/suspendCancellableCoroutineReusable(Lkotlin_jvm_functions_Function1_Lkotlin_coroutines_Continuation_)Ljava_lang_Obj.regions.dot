digraph "CFG forkotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable(Lkotlin\/jvm\/functions\/Function1;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_702381327 {
label = "R(3:1|(1:3)|4)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0000|kotlinx.coroutines.CancellableContinuationImpl kotlinx.coroutines.CancellableContinuationImpl r3 = getOrCreateCancellableContinuation(kotlin.coroutines.intrinsics.IntrinsicsKt.intercepted(r5))\lr4.invoke(r3)\ljava.lang.Object java.lang.Object r1 = r3.getResult()\l}"];
subgraph cluster_IfRegion_1501116181 {
label = "IF [B:9:0x0016] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0016|if (r1 == kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()) goto L3\l}"];
subgraph cluster_Region_1639187919 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0018|kotlin.coroutines.jvm.internal.DebugProbes.probeCoroutineSuspended(r5)\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x001b|RETURN\l|return r1\l}"];
}
Node_6 [shape=record,color=red,label="{6\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable((r4v0 kotlin.jvm.functions.Function1\<? super kotlinx.coroutines.CancellableContinuation\<? super T\>, kotlin.Unit\> A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.coroutines.Continuation\<? super T\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0016 \-\> B:11:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/jvm\/functions\/Function1\<\-Lkotlinx\/coroutines\/CancellableContinuation\<\-TT;\>;Lkotlin\/Unit;\>;Lkotlin\/coroutines\/Continuation\<\-TT;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_6;Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_7;
Node_6 -> Node_8;
}

