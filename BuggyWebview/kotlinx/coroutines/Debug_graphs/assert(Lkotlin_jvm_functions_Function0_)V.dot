digraph "CFG forkotlinx.coroutines.DebugKt.assert(Lkotlin\/jvm\/functions\/Function0;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000}"];
Node_14 [shape=record,label="{14\:\ 0x0004|if (getASSERTIONS_ENABLED() == false) goto L9\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006}"];
Node_16 [shape=record,label="{16\:\ 0x0010|if (r1.invoke().booleanValue() == false) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x0013}"];
Node_19 [shape=record,label="{19\:\ 0x0018|throw new java.lang.AssertionError()\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ 0x0019|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{private static final void kotlinx.coroutines.DebugKt.assert((r1v0 kotlin.jvm.functions.Function0\<java.lang.Boolean\> A[D('value' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0019 \-\> B:12:?, CROSS_EDGE: B:14:0x0004 \-\> B:20:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlin\/jvm\/functions\/Function0\<Ljava\/lang\/Boolean;\>;)V\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_21[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_21 -> Node_12;
Node_20 -> Node_12;
}

