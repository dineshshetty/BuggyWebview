digraph "CFG forkotlinx.coroutines.test.TimedRunnableObsolete.\<init\>(Ljava\/lang\/Runnable;JJILkotlin\/jvm\/internal\/DefaultConstructorMarker;)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: ARITH  (r15 I:??[int, boolean]) = (r14 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char])  (LINE:229)\l0x0002: CONST  (r0 I:??[long, double]) = (0 ??[long, double]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0008 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: MOVE  (r4 I:??[long, double]) = (r0 I:??[long, double])  (LINE:231)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: ARITH  (r10 I:??[int, boolean]) = (r14 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|0x000b: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x000f \l}"];
Node_20 [shape=record,label="{20\:\ 0x000d|0x000d: MOVE  (r6 I:??[long, double]) = (r0 I:??[long, double])  (LINE:232)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|0x0010: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x0011: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r2 I:kotlinx.coroutines.test.TimedRunnableObsolete), (r3 I:java.lang.Runnable), (r4 I:long), (r6 I:long) type: DIRECT call: kotlinx.coroutines.test.TimedRunnableObsolete.\<init\>(java.lang.Runnable, long, long):void A[MD:(java.lang.Runnable, long, long):void (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|RETURN\l|0x0015: RETURN    (LINE:246)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|0x000f: MOVE  (r6 I:??[long, double]) = (r12 I:??[long, double])  (LINE:229)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: MOVE  (r4 I:??[long, double]) = (r10 I:??[long, double])  (LINE:229)\l}"];
MethodNode[shape=record,label="{public \/* synthetic *\/ void kotlinx.coroutines.test.TimedRunnableObsolete.\<init\>((r8 'this' I:kotlinx.coroutines.test.TimedRunnableObsolete A[IMMUTABLE_TYPE, THIS]), (r9 I:java.lang.Runnable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:kotlin.jvm.internal.DefaultConstructorMarker A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:21:0x000f \-\> B:22:0x0010, CROSS_EDGE: B:17:0x0008 \-\> B:18:0x0009\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_22;
Node_17 -> Node_18;
}

