digraph "CFG forkotlinx.coroutines.test.TestCoroutineContext.toString()Ljava\/lang\/String;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.String) = (r2 I:kotlinx.coroutines.test.TestCoroutineContext) kotlinx.coroutines.test.TestCoroutineContext.name java.lang.String  (LINE:194)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:? \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|0x0004: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.DebugStringsKt.getHexAddress(java.lang.Object):java.lang.String A[MD:(java.lang.Object):java.lang.String (m)]\l0x0008: CONST_STR  (r1 I:java.lang.String) =  \"TestCoroutineContext@\" \l0x000a: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.String), (r0 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|RETURN\lORIG_RETURN\l|0x000e: RETURN  (r0 I:java.lang.String) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|0x000e: RETURN  (r0 I:java.lang.String) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public java.lang.String kotlinx.coroutines.test.TestCoroutineContext.toString((r2 'this' I:kotlinx.coroutines.test.TestCoroutineContext A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0002 \-\> B:19:0x000e\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_15;
Node_20 -> Node_15;
}

