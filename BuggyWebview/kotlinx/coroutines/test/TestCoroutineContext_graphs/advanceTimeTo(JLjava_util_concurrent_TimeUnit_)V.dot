digraph "CFG forkotlinx.coroutines.test.TestCoroutineContext.advanceTimeTo(JLjava\/util\/concurrent\/TimeUnit;)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|long r0 = r8.toNanos(r6)\ltriggerActions(r0)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|if ((r0 \> r5.time ? 1 : (r0 == r5.time ? 0 : \-1)) \<= 0) goto L6\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|r5.time = r0\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|RETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.test.TestCoroutineContext.advanceTimeTo((r5v0 'this' kotlinx.coroutines.test.TestCoroutineContext A[IMMUTABLE_TYPE, THIS]), (r6v0 'targetTime' long A[D('targetTime' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'unit' java.util.concurrent.TimeUnit A[D('unit' java.util.concurrent.TimeUnit), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000b \-\> B:19:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_15;
Node_20 -> Node_15;
}

