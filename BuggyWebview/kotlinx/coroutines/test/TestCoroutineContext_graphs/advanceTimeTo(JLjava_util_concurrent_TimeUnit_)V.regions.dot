digraph "CFG forkotlinx.coroutines.test.TestCoroutineContext.advanceTimeTo(JLjava\/util\/concurrent\/TimeUnit;)V" {
subgraph cluster_Region_1379252425 {
label = "R(2:1|(1:(1:3)))";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0000|long long r0 = r8.toNanos(r6)\ltriggerActions(r0)\l}"];
subgraph cluster_Region_1243374952 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_288398518 {
label = "IF [B:17:0x000b] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000b|if (r0 \> r5.time) goto L3\l}"];
subgraph cluster_Region_1274652676 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000d|r5.time = r0\l}"];
}
}
}
}
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000f|ORIG_RETURN\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.test.TestCoroutineContext.advanceTimeTo((r5v0 'this' kotlinx.coroutines.test.TestCoroutineContext A[IMMUTABLE_TYPE, THIS]), (r6v0 'targetTime' long A[D('targetTime' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'unit' java.util.concurrent.TimeUnit A[D('unit' java.util.concurrent.TimeUnit), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000b \-\> B:19:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_20[style=dashed];
Node_18 -> Node_19;
Node_14 -> Node_16;
Node_19 -> Node_15;
Node_20 -> Node_15;
}

