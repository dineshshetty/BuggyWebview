digraph "CFG forkotlinx.coroutines.test.TestCoroutineContext.access$processNextEvent(Lkotlinx\/coroutines\/test\/TestCoroutineContext;)J" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:long) = (r2 I:kotlinx.coroutines.test.TestCoroutineContext A[D('$this' kotlinx.coroutines.test.TestCoroutineContext)]) type: DIRECT call: kotlinx.coroutines.test.TestCoroutineContext.processNextEvent():long A[MD:():long (m)] (LINE:14)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:long) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ long kotlinx.coroutines.test.TestCoroutineContext.access$processNextEvent((r2 I:kotlinx.coroutines.test.TestCoroutineContext A[D('$this' kotlinx.coroutines.test.TestCoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  (r2 I:kotlinx.coroutines.test.TestCoroutineContext A[D('$this' kotlinx.coroutines.test.TestCoroutineContext)]) type: DIRECT call: kotlinx.coroutines.test.TestCoroutineContext.processNextEvent():long\lDebug Info:\l  \-1 \-0x0004: r2 '$this' Lkotlinx\/coroutines\/test\/TestCoroutineContext;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

