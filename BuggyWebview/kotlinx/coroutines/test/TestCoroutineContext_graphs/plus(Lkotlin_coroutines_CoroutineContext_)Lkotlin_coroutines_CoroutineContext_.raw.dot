digraph "CFG forkotlinx.coroutines.test.TestCoroutineContext.plus(Lkotlin\/coroutines\/CoroutineContext;)Lkotlin\/coroutines\/CoroutineContext;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY])  (LINE:14)\l0x0001: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext) = (kotlin.coroutines.CoroutineContext) (r0 I:??[OBJECT, ARRAY]) \l0x0003: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext) = \l  (r0 I:kotlin.coroutines.CoroutineContext)\l  (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l type: STATIC call: kotlin.coroutines.CoroutineContext.DefaultImpls.plus(kotlin.coroutines.CoroutineContext, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext A[MD:(kotlin.coroutines.CoroutineContext, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:kotlin.coroutines.CoroutineContext) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlin.coroutines.CoroutineContext kotlinx.coroutines.test.TestCoroutineContext.plus((r1 'this' I:kotlinx.coroutines.test.TestCoroutineContext A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r2 'context' Lkotlin\/coroutines\/CoroutineContext;\lMETHOD_OVERRIDE: [kotlin.coroutines.CoroutineContext.plus(kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

