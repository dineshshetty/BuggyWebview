digraph "CFG forkotlinx.coroutines.test.TestCoroutineContext.access$enqueue(Lkotlinx\/coroutines\/test\/TestCoroutineContext;Ljava\/lang\/Runnable;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|r0.enqueue(r1)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0003|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ void kotlinx.coroutines.test.TestCoroutineContext.access$enqueue((r0v0 '$this' kotlinx.coroutines.test.TestCoroutineContext A[D('$this' kotlinx.coroutines.test.TestCoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 'block' java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  \l  (r0 I:kotlinx.coroutines.test.TestCoroutineContext A[D('$this' kotlinx.coroutines.test.TestCoroutineContext)])\l  (r1 I:java.lang.Runnable A[D('block' java.lang.Runnable)])\l type: DIRECT call: kotlinx.coroutines.test.TestCoroutineContext.enqueue(java.lang.Runnable):void\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

