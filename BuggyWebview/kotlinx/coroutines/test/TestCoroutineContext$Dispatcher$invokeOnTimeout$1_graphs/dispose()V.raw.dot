digraph "CFG forkotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1.dispose()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.test.TestCoroutineContext) = (r2 I:kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1) kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1.this$0 kotlinx.coroutines.test.TestCoroutineContext  (LINE:218)\l0x0002: INVOKE  (r0 I:kotlinx.coroutines.internal.ThreadSafeHeap) = (r0 I:kotlinx.coroutines.test.TestCoroutineContext) type: STATIC call: kotlinx.coroutines.test.TestCoroutineContext.access$getQueue$p(kotlinx.coroutines.test.TestCoroutineContext):kotlinx.coroutines.internal.ThreadSafeHeap A[MD:(kotlinx.coroutines.test.TestCoroutineContext):kotlinx.coroutines.internal.ThreadSafeHeap (m)]\l0x0006: IGET  (r1 I:kotlinx.coroutines.test.TimedRunnableObsolete) = (r2 I:kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1) kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1.$node kotlinx.coroutines.test.TimedRunnableObsolete \l0x0008: CHECK_CAST (r1 I:kotlinx.coroutines.internal.ThreadSafeHeapNode) = (kotlinx.coroutines.internal.ThreadSafeHeapNode) (r1 I:??[OBJECT, ARRAY]) \l0x000a: INVOKE  (r0 I:kotlinx.coroutines.internal.ThreadSafeHeap), (r1 I:kotlinx.coroutines.internal.ThreadSafeHeapNode) type: VIRTUAL call: kotlinx.coroutines.internal.ThreadSafeHeap.remove(kotlinx.coroutines.internal.ThreadSafeHeapNode):boolean A[MD:(T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>):boolean (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|RETURN\l|0x000d: RETURN    (LINE:219)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1.dispose((r2 'this' I:kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1 A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lMETHOD_OVERRIDE: [kotlinx.coroutines.DisposableHandle.dispose():void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

