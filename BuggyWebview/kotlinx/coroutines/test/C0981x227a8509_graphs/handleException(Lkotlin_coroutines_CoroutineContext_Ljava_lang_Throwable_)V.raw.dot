digraph "CFG forkotlinx.coroutines.test.TestCoroutineContext$special$$inlined$CoroutineExceptionHandler$1.handleException(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Throwable;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('context' kotlin.coroutines.CoroutineContext)])  (LINE:51)\l0x0001: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('exception' java.lang.Throwable)]) \l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: IGET  (r3 I:kotlinx.coroutines.test.TestCoroutineContext) = (r4 I:kotlinx.coroutines.test.TestCoroutineContext$special$$inlined$CoroutineExceptionHandler$1) kotlinx.coroutines.test.TestCoroutineContext$special$$inlined$CoroutineExceptionHandler$1.this$0 kotlinx.coroutines.test.TestCoroutineContext  (LINE:111)\l0x0005: INVOKE  (r3 I:java.util.List) = (r3 I:kotlinx.coroutines.test.TestCoroutineContext) type: STATIC call: kotlinx.coroutines.test.TestCoroutineContext.access$getUncaughtExceptions$p(kotlinx.coroutines.test.TestCoroutineContext):java.util.List A[MD:(kotlinx.coroutines.test.TestCoroutineContext):java.util.List (m)]\l0x0009: CHECK_CAST (r3 I:java.util.Collection) = (java.util.Collection) (r3 I:??[OBJECT, ARRAY]) \l0x000b: INVOKE  (r3 I:java.util.Collection), (r1 I:java.lang.Object A[D('exception' java.lang.Throwable)]) type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|0x000f: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.test.TestCoroutineContext$special$$inlined$CoroutineExceptionHandler$1.handleException((r4 'this' I:kotlinx.coroutines.test.TestCoroutineContext$special$$inlined$CoroutineExceptionHandler$1 A[IMMUTABLE_TYPE, THIS]), (r5 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  0x0001\-0x000f: r0 '$noName_0' Lkotlin\/coroutines\/CoroutineContext;\l  0x0002\-0x000f: r1 'exception' Ljava\/lang\/Throwable;\l  0x0003\-0x000f: r2 '$i$a$\-CoroutineExceptionHandler\-TestCoroutineContext$ctxHandler$1' I\l  \-1 \-0x000f: r5 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x000f: r6 'exception' Ljava\/lang\/Throwable;\lMETHOD_OVERRIDE: [kotlinx.coroutines.CoroutineExceptionHandler.handleException(kotlin.coroutines.CoroutineContext, java.lang.Throwable):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

