digraph "CFG forkotlinx.coroutines.test.TestCoroutineContext$special$$inlined$CoroutineExceptionHandler$1.handleException(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Throwable;)V" {
subgraph cluster_Region_375046600 {
label = "R(1:1) | DECL_VAR: java.util.List null\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|java.util.List r3 = r4.this$0.uncaughtExceptions\lr3.add(r6)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000f}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.test.TestCoroutineContext$special$$inlined$CoroutineExceptionHandler$1.handleException((r4v0 'this' kotlinx.coroutines.test.TestCoroutineContext$special$$inlined$CoroutineExceptionHandler$1 A[IMMUTABLE_TYPE, THIS]), (r5v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'exception' java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.CoroutineExceptionHandler.handleException(kotlin.coroutines.CoroutineContext, java.lang.Throwable):void]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_0 -> Node_2;
Node_3 -> Node_1;
}

