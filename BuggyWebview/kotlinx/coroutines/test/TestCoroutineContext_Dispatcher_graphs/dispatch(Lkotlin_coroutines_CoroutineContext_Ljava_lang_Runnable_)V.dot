digraph "CFG forkotlinx.coroutines.test.TestCoroutineContext.Dispatcher.dispatch(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Runnable;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlinx.coroutines.test.TestCoroutineContext.this.enqueue(r3)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0005|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.test.TestCoroutineContext.Dispatcher.dispatch((r1v0 'this' kotlinx.coroutines.test.TestCoroutineContext$Dispatcher A[IMMUTABLE_TYPE, THIS]), (r2v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'block' java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlinx.coroutines.CoroutineDispatcher.dispatch(kotlin.coroutines.CoroutineContext, java.lang.Runnable):void]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

