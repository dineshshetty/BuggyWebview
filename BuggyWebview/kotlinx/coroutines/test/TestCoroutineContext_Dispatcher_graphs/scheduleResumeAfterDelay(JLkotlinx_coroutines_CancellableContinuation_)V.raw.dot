digraph "CFG forkotlinx.coroutines.test.TestCoroutineContext.Dispatcher.scheduleResumeAfterDelay(JLkotlinx\/coroutines\/CancellableContinuation;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.test.TestCoroutineContext) = (r3 I:kotlinx.coroutines.test.TestCoroutineContext$Dispatcher) kotlinx.coroutines.test.TestCoroutineContext.Dispatcher.this$0 kotlinx.coroutines.test.TestCoroutineContext  (LINE:209)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: NEW_INSTANCE  (r2 I:kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$scheduleResumeAfterDelay$$inlined$Runnable$1) =  kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$scheduleResumeAfterDelay$$inlined$Runnable$1  (LINE:262)\l0x0005: INVOKE  \l  (r2 I:kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$scheduleResumeAfterDelay$$inlined$Runnable$1)\l  (r6 I:kotlinx.coroutines.CancellableContinuation A[D('continuation' kotlinx.coroutines.CancellableContinuation)])\l  (r3 I:kotlinx.coroutines.test.TestCoroutineContext$Dispatcher)\l type: DIRECT call: kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$scheduleResumeAfterDelay$$inlined$Runnable$1.\<init\>(kotlinx.coroutines.CancellableContinuation, kotlinx.coroutines.test.TestCoroutineContext$Dispatcher):void A[MD:(kotlinx.coroutines.CancellableContinuation, kotlinx.coroutines.test.TestCoroutineContext$Dispatcher):void (m)]\l0x0008: CHECK_CAST (r2 I:java.lang.Runnable) = (java.lang.Runnable) (r2 I:??[OBJECT, ARRAY]) \l0x000b: INVOKE  (r0 I:kotlinx.coroutines.test.TestCoroutineContext), (r2 I:java.lang.Runnable), (r4 I:long A[D('timeMillis' long)]) type: STATIC call: kotlinx.coroutines.test.TestCoroutineContext.access$postDelayed(kotlinx.coroutines.test.TestCoroutineContext, java.lang.Runnable, long):kotlinx.coroutines.test.TimedRunnableObsolete A[MD:(kotlinx.coroutines.test.TestCoroutineContext, java.lang.Runnable, long):kotlinx.coroutines.test.TimedRunnableObsolete (m)] (LINE:209)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000e|RETURN\l|0x000e: RETURN    (LINE:212)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.test.TestCoroutineContext.Dispatcher.scheduleResumeAfterDelay((r3 'this' I:kotlinx.coroutines.test.TestCoroutineContext$Dispatcher A[IMMUTABLE_TYPE, THIS]), (r4 I:long A[D('timeMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlinx.coroutines.CancellableContinuation\<? super kotlin.Unit\> A[D('continuation' kotlinx.coroutines.CancellableContinuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0003\-0x000a: r1 '$i$f$Runnable' I\l  \-1 \-0x000e: r4 'timeMillis' J\l  \-1 \-0x000e: r6 'continuation' Lkotlinx\/coroutines\/CancellableContinuation;\lSIGNATURE: (JLkotlinx\/coroutines\/CancellableContinuation\<\-Lkotlin\/Unit;\>;)V\lMETHOD_OVERRIDE: [kotlinx.coroutines.Delay.scheduleResumeAfterDelay(long, kotlinx.coroutines.CancellableContinuation\<? super kotlin.Unit\>):void]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

