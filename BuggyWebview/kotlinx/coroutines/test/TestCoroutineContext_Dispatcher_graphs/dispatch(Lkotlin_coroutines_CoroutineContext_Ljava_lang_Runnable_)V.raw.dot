digraph "CFG forkotlinx.coroutines.test.TestCoroutineContext.Dispatcher.dispatch(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Runnable;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.test.TestCoroutineContext) = (r1 I:kotlinx.coroutines.test.TestCoroutineContext$Dispatcher) kotlinx.coroutines.test.TestCoroutineContext.Dispatcher.this$0 kotlinx.coroutines.test.TestCoroutineContext  (LINE:202)\l0x0002: INVOKE  (r0 I:kotlinx.coroutines.test.TestCoroutineContext), (r3 I:java.lang.Runnable A[D('block' java.lang.Runnable)]) type: STATIC call: kotlinx.coroutines.test.TestCoroutineContext.access$enqueue(kotlinx.coroutines.test.TestCoroutineContext, java.lang.Runnable):void A[MD:(kotlinx.coroutines.test.TestCoroutineContext, java.lang.Runnable):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0005|RETURN\l|0x0005: RETURN    (LINE:203)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.test.TestCoroutineContext.Dispatcher.dispatch((r1 'this' I:kotlinx.coroutines.test.TestCoroutineContext$Dispatcher A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0005: r2 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x0005: r3 'block' Ljava\/lang\/Runnable;\lMETHOD_OVERRIDE: [kotlinx.coroutines.CoroutineDispatcher.dispatch(kotlin.coroutines.CoroutineContext, java.lang.Runnable):void]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

