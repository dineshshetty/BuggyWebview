digraph "CFG forkotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1.invoke(Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/coroutines\/CoroutineContext$Element;)Lkotlin\/coroutines\/CoroutineContext;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000}"];
Node_19 [shape=record,label="{19\:\ 0x0002|if ((r6 instanceof kotlinx.coroutines.CopyableThreadContextElement) != false) goto L6\l}"];
Node_20 [shape=record,label="{20\:\ 0x0004}"];
Node_21 [shape=record,label="{21\:\ 0x000b|RETURN\l|return r5.plus(r6)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|kotlin.coroutines.CoroutineContext$Element r0 = r4.$leftoverContext.element.get(r6.getKey())\l}"];
Node_23 [shape=record,label="{23\:\ 0x001a|if (r0 != null) goto L14\l}"];
Node_24 [shape=record,label="{24\:\ 0x001c}"];
Node_25 [shape=record,label="{25\:\ 0x001e|if (r4.$isNewCoroutine == false) goto L13\l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|kotlinx.coroutines.CopyableThreadContextElement r1 = ((kotlinx.coroutines.CopyableThreadContextElement) r6).copyForChild()\l}"];
Node_28 [shape=record,label="{28\:\ 0x002b|PHI: r1 \l  PHI: (r1v9 kotlinx.coroutines.CopyableThreadContextElement) = (r1v8 kotlinx.coroutines.CopyableThreadContextElement), (r1v14 kotlinx.coroutines.CopyableThreadContextElement) binds: [B:27:0x0028, B:26:0x0020] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0031|RETURN\l|return r5.plus(r1)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0028|kotlinx.coroutines.CopyableThreadContextElement r1 = (kotlinx.coroutines.CopyableThreadContextElement) r6\l}"];
Node_30 [shape=record,label="{30\:\ 0x0032|kotlin.jvm.internal.Ref$ObjectRef\<kotlin.coroutines.CoroutineContext\> r1 = r4.$leftoverContext\lr1.element = r1.element.minusKey(r6.getKey())\l}"];
Node_31 [shape=record,label="{31\:\ 0x004d|RETURN\l|return r5.plus(((kotlinx.coroutines.CopyableThreadContextElement) r6).mergeForChild(r0))\l}"];
MethodNode[shape=record,label="{public final kotlin.coroutines.CoroutineContext kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1.invoke((r4v0 'this' kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1 A[IMMUTABLE_TYPE, THIS]), (r5v0 'result' kotlin.coroutines.CoroutineContext A[D('result' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'element' kotlin.coroutines.CoroutineContext$Element A[D('element' kotlin.coroutines.CoroutineContext$Element), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0031 \-\> B:17:?, CROSS_EDGE: B:27:0x0028 \-\> B:28:0x002b, CROSS_EDGE: B:31:0x004d \-\> B:17:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lREPLACED_BY: kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1.invoke(kotlin.coroutines.CoroutineContext, kotlin.coroutines.CoroutineContext$Element):kotlin.coroutines.CoroutineContext\lBRIDGED_BY: kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1.invoke(kotlin.coroutines.CoroutineContext, kotlin.coroutines.CoroutineContext$Element):kotlin.coroutines.CoroutineContext\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r2v2, types: [T, kotlin.coroutines.CoroutineContext]\}\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function2.invoke(P1, P2):R]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_30;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_17;
Node_27 -> Node_28;
Node_30 -> Node_31;
Node_31 -> Node_17;
}

