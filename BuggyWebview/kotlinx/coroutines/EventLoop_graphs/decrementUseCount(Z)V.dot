digraph "CFG forkotlinx.coroutines.EventLoop.decrementUseCount(Z)V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|long r0 = r6.useCount \- delta(r7)\lr6.useCount = r0\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|if ((r0 \> 0 ? 1 : (r0 == 0 ? 0 : \-1)) \<= 0) goto L5\l}"];
Node_24 [shape=record,label="{24\:\ 0x000f|RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0010}"];
Node_26 [shape=record,label="{26\:\ 0x0014|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L14\l}"];
Node_27 [shape=record,label="{27\:\ 0x0016}"];
Node_28 [shape=record,label="{28\:\ 0x001b|if ((r6.useCount \> 0 ? 1 : (r6.useCount == 0 ? 0 : \-1)) != 0) goto L13\l}"];
Node_29 [shape=record,label="{29\:\ 0x001d|r1 = true\l}"];
Node_31 [shape=record,label="{31\:\ 0x0020|PHI: r1 \l  PHI: (r1v2 boolean) = (r1v1 boolean), (r1v3 boolean) binds: [B:30:0x001f, B:29:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L11\l}"];
Node_33 [shape=record,label="{33\:\ 0x0023}"];
Node_34 [shape=record,label="{34\:\ 0x0028|throw new java.lang.AssertionError()\l}"];
Node_30 [shape=record,label="{30\:\ 0x001f|r1 = false\l}"];
Node_35 [shape=record,label="{35\:\ 0x0029}"];
Node_36 [shape=record,label="{36\:\ 0x002b|if (r6.shared == false) goto L18\l}"];
Node_37 [shape=record,label="{37\:\ 0x002d|shutdown()\l}"];
Node_38 [shape=record,label="{38\:\ 0x0030|RETURN\lORIG_RETURN\l|return\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.EventLoop.decrementUseCount((r6v0 'this' kotlinx.coroutines.EventLoop A[IMMUTABLE_TYPE, THIS]), (r7v0 'unconfined' boolean A[D('unconfined' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0028 \-\> B:21:?, CROSS_EDGE: B:38:0x0030 \-\> B:21:?, CROSS_EDGE: B:36:0x002b \-\> B:38:0x0030, CROSS_EDGE: B:30:0x001f \-\> B:31:0x0020, CROSS_EDGE: B:26:0x0014 \-\> B:35:0x0029\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_21;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_35;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_33;
Node_31 -> Node_35[style=dashed];
Node_33 -> Node_34;
Node_34 -> Node_21;
Node_30 -> Node_31;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_39;
Node_37 -> Node_38;
Node_38 -> Node_21;
Node_39 -> Node_21;
}

