digraph "CFG forkotlinx.coroutines.EventLoop.dispatchUnconfined(Lkotlinx\/coroutines\/DispatchedTask;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.internal.ArrayQueue\<kotlinx.coroutines.DispatchedTask\<?\>\>) = (r3 I:kotlinx.coroutines.EventLoop) kotlinx.coroutines.EventLoop.unconfinedQueue kotlinx.coroutines.internal.ArrayQueue  (LINE:85)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x000d \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:kotlinx.coroutines.internal.ArrayQueue) =  kotlinx.coroutines.internal.ArrayQueue  (LINE:86)\l0x0006: INVOKE  (r0 I:kotlinx.coroutines.internal.ArrayQueue) type: DIRECT call: kotlinx.coroutines.internal.ArrayQueue.\<init\>():void A[MD:():void (m)]\l0x0009: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:545)\l0x000b: IPUT  \l  (r1 I:kotlinx.coroutines.internal.ArrayQueue\<kotlinx.coroutines.DispatchedTask\<?\>\> A[D('it' kotlinx.coroutines.internal.ArrayQueue)])\l  (r3 I:kotlinx.coroutines.EventLoop)\l kotlinx.coroutines.EventLoop.unconfinedQueue kotlinx.coroutines.internal.ArrayQueue  (LINE:86)\l}"];
Node_12 [shape=record,label="{12\:\ 0x000d|0x000e: INVOKE  \l  (r0 I:kotlinx.coroutines.internal.ArrayQueue A[D('queue' kotlinx.coroutines.internal.ArrayQueue)])\l  (r4 I:java.lang.Object A[D('task' kotlinx.coroutines.DispatchedTask)])\l type: VIRTUAL call: kotlinx.coroutines.internal.ArrayQueue.addLast(java.lang.Object):void A[MD:(T):void (m)] (LINE:87)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0011|RETURN\l|0x0011: RETURN    (LINE:88)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.EventLoop.dispatchUnconfined((r3 'this' I:kotlinx.coroutines.EventLoop A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlinx.coroutines.DispatchedTask\<?\> A[D('task' kotlinx.coroutines.DispatchedTask), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0002 \-\> B:12:0x000d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x000d: r1 'it' Lkotlinx\/coroutines\/internal\/ArrayQueue;\l  0x000b\-0x000d: r2 '$i$a$\-also\-EventLoop$dispatchUnconfined$queue$1' I\l  0x000e\-0x0011: r0 'queue' Lkotlinx\/coroutines\/internal\/ArrayQueue;\l  \-1 \-0x0011: r4 'task' Lkotlinx\/coroutines\/DispatchedTask;\lSIGNATURE: (Lkotlinx\/coroutines\/DispatchedTask\<*\>;)V\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

