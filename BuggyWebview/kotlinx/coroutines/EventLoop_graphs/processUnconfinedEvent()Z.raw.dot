digraph "CFG forkotlinx.coroutines.EventLoop.processUnconfinedEvent()Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.internal.ArrayQueue\<kotlinx.coroutines.DispatchedTask\<?\>\>) = (r3 I:kotlinx.coroutines.EventLoop) kotlinx.coroutines.EventLoop.unconfinedQueue kotlinx.coroutines.internal.ArrayQueue  (LINE:67)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0006 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0005|RETURN\l|0x0005: RETURN  (r1 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: INVOKE  (r2 I:java.lang.Object) = (r0 I:kotlinx.coroutines.internal.ArrayQueue A[D('queue' kotlinx.coroutines.internal.ArrayQueue)]) type: VIRTUAL call: kotlinx.coroutines.internal.ArrayQueue.removeFirstOrNull():java.lang.Object A[MD:():T (m)] (LINE:68)\l0x000a: CHECK_CAST (r2 I:kotlinx.coroutines.DispatchedTask) = (kotlinx.coroutines.DispatchedTask) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|0x000c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000f \l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|RETURN\l|0x000e: RETURN  (r1 I:boolean) \l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|0x000f: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x0010: INVOKE  (r1 I:kotlinx.coroutines.DispatchedTask A[D('task' kotlinx.coroutines.DispatchedTask)]) type: VIRTUAL call: kotlinx.coroutines.DispatchedTask.run():void A[MD:():void (m)] (LINE:69)\l0x0013: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:70)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|RETURN\l|0x0014: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public final boolean kotlinx.coroutines.EventLoop.processUnconfinedEvent((r3 'this' I:kotlinx.coroutines.EventLoop A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000e \-\> B:11:?, CROSS_EDGE: B:19:0x0014 \-\> B:11:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0014: r0 'queue' Lkotlinx\/coroutines\/internal\/ArrayQueue;\l  0x0010\-0x0014: r1 'task' Lkotlinx\/coroutines\/DispatchedTask;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

