digraph "CFG forkotlinx.coroutines.AwaitAll.AwaitAllNode.invoke(Ljava\/lang\/Throwable;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cause' java.lang.Throwable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001a  (LINE:112)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IGET  (r0 I:kotlinx.coroutines.CancellableContinuation\<java.util.List\<? extends T\>\>) = (r11 I:kotlinx.coroutines.AwaitAll$AwaitAllNode) kotlinx.coroutines.AwaitAll.AwaitAllNode.continuation kotlinx.coroutines.CancellableContinuation  (LINE:113)\l0x0004: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlinx.coroutines.CancellableContinuation), (r12 I:java.lang.Throwable A[D('cause' java.lang.Throwable)]) type: INTERFACE call: kotlinx.coroutines.CancellableContinuation.tryResumeWithException(java.lang.Throwable):java.lang.Object A[MD:(java.lang.Throwable):java.lang.Object (m)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('token' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:?  (LINE:114)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IGET  (r1 I:kotlinx.coroutines.CancellableContinuation\<java.util.List\<? extends T\>\>) = (r11 I:kotlinx.coroutines.AwaitAll$AwaitAllNode) kotlinx.coroutines.AwaitAll.AwaitAllNode.continuation kotlinx.coroutines.CancellableContinuation  (LINE:115)\l0x000c: INVOKE  (r1 I:kotlinx.coroutines.CancellableContinuation), (r0 I:java.lang.Object A[D('token' java.lang.Object)]) type: INTERFACE call: kotlinx.coroutines.CancellableContinuation.completeResume(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x000f: INVOKE  (r1 I:kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel) = (r11 I:kotlinx.coroutines.AwaitAll$AwaitAllNode) type: VIRTUAL call: kotlinx.coroutines.AwaitAll.AwaitAllNode.getDisposer():kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel A[MD:():kotlinx.coroutines.AwaitAll\<T\>$DisposeHandlersOnCancel (m)] (LINE:118)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0016 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: INVOKE  (r1 I:kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel) type: VIRTUAL call: kotlinx.coroutines.AwaitAll.DisposeHandlersOnCancel.disposeAll():void A[MD:():void (m)]\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|0x0058: RETURN   A[SYNTHETIC] (LINE:124)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|0x0058: RETURN   A[SYNTHETIC] (LINE:124)\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|0x0058: RETURN   A[SYNTHETIC] (LINE:124)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: IGET  (r0 I:kotlinx.coroutines.AwaitAll\<T\>) = (r11 I:kotlinx.coroutines.AwaitAll$AwaitAllNode) kotlinx.coroutines.AwaitAll.AwaitAllNode.this$0 kotlinx.coroutines.AwaitAll  (LINE:120)\l0x001c: SGET  (r1 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater) =  kotlinx.coroutines.AwaitAll.notCompletedCount$FU java.util.concurrent.atomic.AtomicIntegerFieldUpdater \l0x001e: INVOKE  (r0 I:int) = (r1 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater), (r0 I:java.lang.Object) type: VIRTUAL call: java.util.concurrent.atomic.AtomicIntegerFieldUpdater.decrementAndGet(java.lang.Object):int A[MD:(T):int (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|0x0024: IGET  (r0 I:kotlinx.coroutines.CancellableContinuation\<java.util.List\<? extends T\>\>) = (r11 I:kotlinx.coroutines.AwaitAll$AwaitAllNode) kotlinx.coroutines.AwaitAll.AwaitAllNode.continuation kotlinx.coroutines.CancellableContinuation  (LINE:121)\l0x0026: CHECK_CAST (r0 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r0 I:??[OBJECT, ARRAY]) \l0x0028: SGET  (r1 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion \l0x002a: IGET  (r1 I:kotlinx.coroutines.AwaitAll\<T\>) = (r11 I:kotlinx.coroutines.AwaitAll$AwaitAllNode) kotlinx.coroutines.AwaitAll.AwaitAllNode.this$0 kotlinx.coroutines.AwaitAll \l0x002c: INVOKE  (r1 I:kotlinx.coroutines.Deferred[]) = (r1 I:kotlinx.coroutines.AwaitAll) type: STATIC call: kotlinx.coroutines.AwaitAll.access$getDeferreds$p(kotlinx.coroutines.AwaitAll):kotlinx.coroutines.Deferred[] A[MD:(kotlinx.coroutines.AwaitAll):kotlinx.coroutines.Deferred[] (m)]\l0x0030: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0031: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:128)\l0x0033: ARRAY_LENGTH  (r4 I:int) = (r1 I:??[] A[D('$this$map$iv' java.lang.Object[])]) \l0x0034: INVOKE  (r3 I:java.util.ArrayList), (r4 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0037: CHECK_CAST (r3 I:java.util.Collection) = (java.util.Collection) (r3 I:??[OBJECT, ARRAY]) \l0x0039: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$map$iv' java.lang.Object[])]) \l0x003a: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x003b: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:129)\l0x003c: ARRAY_LENGTH  (r7 I:int) = (r4 I:??[] A[D('$this$mapTo$iv$iv' java.lang.Object[])]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x003d|LOOP_START\lLOOP:0: B:12:0x003d\-\>B:13:0x003f\l|0x003d: IF  (r6 I:??[int, byte, short, char]) \>= (r7 I:??[int, byte, short, char])  \-\> B:16:0x004d \l}"];
Node_13 [shape=record,label="{13\:\ 0x003f|LOOP_END\lLOOP:0: B:12:0x003d\-\>B:13:0x003f\l|0x003f: AGET  (r8 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][] A[D('$this$mapTo$iv$iv' java.lang.Object[])]), (r6 I:??[int, short, byte, char]) \l0x0041: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l0x0043: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('item$iv$iv' java.lang.Object)])  (LINE:130)\l0x0044: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0045: INVOKE  (r9 I:java.lang.Object A[D('it' kotlinx.coroutines.Deferred)]) = (r9 I:kotlinx.coroutines.Deferred A[D('it' kotlinx.coroutines.Deferred)]) type: INTERFACE call: kotlinx.coroutines.Deferred.getCompleted():java.lang.Object A[MD:():T (m)] (LINE:121)\l0x0049: INVOKE  \l  (r3 I:java.util.Collection A[D('destination$iv$iv' java.util.Collection)])\l  (r9 I:java.lang.Object A[D('it' kotlinx.coroutines.Deferred)])\l type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x004d|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x004d|0x004e: CHECK_CAST (r3 I:java.util.List) = (java.util.List) (r3 I:??[OBJECT, ARRAY] A[D('destination$iv$iv' java.util.Collection)]) \l0x0051: INVOKE  (r1 I:java.lang.Object) = (r3 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[MD:\<T\>:(java.lang.Object):java.lang.Object (m)]\l0x0055: INVOKE  (r0 I:kotlin.coroutines.Continuation), (r1 I:java.lang.Object) type: INTERFACE call: kotlin.coroutines.Continuation.resumeWith(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0058|RETURN\lORIG_RETURN\l|0x0058: RETURN    (LINE:124)\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0058: RETURN   A[SYNTHETIC] (LINE:124)\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.AwaitAll.AwaitAllNode.invoke((r11 'this' I:kotlinx.coroutines.AwaitAll$AwaitAllNode A[IMMUTABLE_TYPE, THIS]), (r12 I:java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lMETHOD_OVERRIDE: [kotlinx.coroutines.CompletionHandlerBase.invoke(java.lang.Throwable):void]\lCROSS_EDGE: B:6:0x0013 \-\> B:15:0x0058, CROSS_EDGE: B:4:0x0008 \-\> B:15:0x0058, BACK_EDGE: B:13:0x003f \-\> B:12:0x003d, CROSS_EDGE: B:14:0x004d \-\> B:15:0x0058, CROSS_EDGE: B:10:0x0022 \-\> B:15:0x0058\lDebug Info:\l  0x0008\-0x0019: r0 'token' Ljava\/lang\/Object;\l  0x0044\-0x0049: r9 'it' Lkotlinx\/coroutines\/Deferred;\l  0x0045\-0x0049: r10 '$i$a$\-map\-AwaitAll$AwaitAllNode$invoke$1' I\l  0x0041\-0x004d: r8 'item$iv$iv' Ljava\/lang\/Object;\l  0x0039\-0x004e: r3 'destination$iv$iv' Ljava\/util\/Collection;\l  0x003a\-0x004e: r4 '$this$mapTo$iv$iv' [Ljava\/lang\/Object;\l  0x003b\-0x004e: r5 '$i$f$mapTo' I\l  0x0030\-0x0051: r1 '$this$map$iv' [Ljava\/lang\/Object;\l  0x0031\-0x0051: r2 '$i$f$map' I\l  \-1 \-0x0058: r12 'cause' Ljava\/lang\/Throwable;\lBRIDGED_BY: kotlinx.coroutines.AwaitAll.AwaitAllNode.invoke(java.lang.Throwable):kotlin.Unit\lRENAME_REASON:avoid collision after fix types in other method\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_20[style=dashed];
Node_8 -> Node_18;
Node_18 -> Node_1;
Node_20 -> Node_1;
Node_17 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_19;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_12;
Node_16 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_19 -> Node_1;
}

