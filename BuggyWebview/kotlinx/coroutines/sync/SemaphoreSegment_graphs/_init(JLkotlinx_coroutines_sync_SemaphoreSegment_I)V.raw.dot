digraph "CFG forkotlinx.coroutines.sync.SemaphoreSegment.\<init\>(JLkotlinx\/coroutines\/sync\/SemaphoreSegment;I)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('prev' kotlinx.coroutines.sync.SemaphoreSegment)])  (LINE:263)\l0x0001: CHECK_CAST (r0 I:kotlinx.coroutines.internal.Segment) = (kotlinx.coroutines.internal.Segment) (r0 I:??[OBJECT, ARRAY]) \l0x0003: INVOKE  \l  (r2 I:kotlinx.coroutines.internal.Segment)\l  (r3 I:long A[D('id' long)])\l  (r0 I:kotlinx.coroutines.internal.Segment)\l  (r6 I:int A[D('pointers' int)])\l type: DIRECT call: kotlinx.coroutines.internal.Segment.\<init\>(long, kotlinx.coroutines.internal.Segment, int):void A[MD:(long, S extends kotlinx.coroutines.internal.Segment\<S\>, int):void (m)]\l0x0006: NEW_INSTANCE  (r0 I:java.util.concurrent.atomic.AtomicReferenceArray) =  java.util.concurrent.atomic.AtomicReferenceArray  (LINE:264)\l0x0008: INVOKE  (r1 I:int) =  type: STATIC call: kotlinx.coroutines.sync.SemaphoreKt.access$getSEGMENT_SIZE$p():int A[MD:():int (m)]\l0x000c: INVOKE  (r0 I:java.util.concurrent.atomic.AtomicReferenceArray), (r1 I:int) type: DIRECT call: java.util.concurrent.atomic.AtomicReferenceArray.\<init\>(int):void A[MD:(int):void (c)]\l0x000f: IPUT  (r0 I:java.util.concurrent.atomic.AtomicReferenceArray), (r2 I:kotlinx.coroutines.sync.SemaphoreSegment) kotlinx.coroutines.sync.SemaphoreSegment.acquirers java.util.concurrent.atomic.AtomicReferenceArray \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|0x0011: RETURN    (LINE:263)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.sync.SemaphoreSegment.\<init\>((r2 'this' I:kotlinx.coroutines.sync.SemaphoreSegment A[IMMUTABLE_TYPE, THIS]), (r3 I:long A[D('id' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlinx.coroutines.sync.SemaphoreSegment A[D('prev' kotlinx.coroutines.sync.SemaphoreSegment), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('pointers' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0011: r3 'id' J\l  \-1 \-0x0011: r5 'prev' Lkotlinx\/coroutines\/sync\/SemaphoreSegment;\l  \-1 \-0x0011: r6 'pointers' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

