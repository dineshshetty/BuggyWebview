digraph "CFG forkotlinx.coroutines.sync.MutexImpl.TryLockDesc.PrepareOp.\<init\>(Lkotlinx\/coroutines\/sync\/MutexImpl$TryLockDesc;Lkotlinx\/coroutines\/internal\/AtomicOp;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IPUT  \l  (r1 I:kotlinx.coroutines.sync.MutexImpl$TryLockDesc A[D('this$0' kotlinx.coroutines.sync.MutexImpl$TryLockDesc)])\l  (r0 I:kotlinx.coroutines.sync.MutexImpl$TryLockDesc$PrepareOp)\l kotlinx.coroutines.sync.MutexImpl.TryLockDesc.PrepareOp.this$0 kotlinx.coroutines.sync.MutexImpl$TryLockDesc  (LINE:290)\l0x0002: INVOKE  (r0 I:kotlinx.coroutines.internal.OpDescriptor) type: DIRECT call: kotlinx.coroutines.internal.OpDescriptor.\<init\>():void A[MD:():void (m)]\l0x0005: IPUT  \l  (r2 I:kotlinx.coroutines.internal.AtomicOp\<?\> A[D('atomicOp' kotlinx.coroutines.internal.AtomicOp)])\l  (r0 I:kotlinx.coroutines.sync.MutexImpl$TryLockDesc$PrepareOp)\l kotlinx.coroutines.sync.MutexImpl.TryLockDesc.PrepareOp.atomicOp kotlinx.coroutines.internal.AtomicOp \l}"];
Node_7 [shape=record,label="{7\:\ 0x0007|RETURN\l|0x0007: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.sync.MutexImpl.TryLockDesc.PrepareOp.\<init\>((r0 'this' I:kotlinx.coroutines.sync.MutexImpl$TryLockDesc$PrepareOp A[IMMUTABLE_TYPE, THIS]), (r1 I:kotlinx.coroutines.sync.MutexImpl$TryLockDesc A[D('this$0' kotlinx.coroutines.sync.MutexImpl$TryLockDesc), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlinx.coroutines.internal.AtomicOp\<?\> A[D('atomicOp' kotlinx.coroutines.internal.AtomicOp), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | SKIP_FIRST_ARG\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r1 'this$0' Lkotlinx\/coroutines\/sync\/MutexImpl$TryLockDesc;\l  \-1 \-0x0007: r2 'atomicOp' Lkotlinx\/coroutines\/internal\/AtomicOp;\lSIGNATURE: (Lkotlinx\/coroutines\/internal\/AtomicOp\<*\>;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

