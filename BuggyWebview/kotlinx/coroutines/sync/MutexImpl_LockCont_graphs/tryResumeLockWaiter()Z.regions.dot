digraph "CFG forkotlinx.coroutines.sync.MutexImpl.LockCont.tryResumeLockWaiter()Z" {
subgraph cluster_Region_1498693069 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0005|RETURN\l|return take() && r6.cont.tryResume(kotlin.Unit.INSTANCE, null, new kotlinx.coroutines.sync.MutexImpl$LockCont$tryResumeLockWaiter$1(kotlinx.coroutines.sync.MutexImpl.this, r6)) != null\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0007|RETURN\lADDED_TO_REGION\l|return false\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0008}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x001a|REMOVE\lADDED_TO_REGION\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x001c|ORIG_RETURN\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.sync.MutexImpl.LockCont.tryResumeLockWaiter((r6v0 'this' kotlinx.coroutines.sync.MutexImpl$LockCont A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x001d \-\> B:11:?, CROSS_EDGE: B:16:0x001a \-\> B:18:0x001d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.sync.MutexImpl.LockWaiter.tryResumeLockWaiter():boolean]\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_15;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_19;
Node_17 -> Node_11;
Node_19 -> Node_11;
}

