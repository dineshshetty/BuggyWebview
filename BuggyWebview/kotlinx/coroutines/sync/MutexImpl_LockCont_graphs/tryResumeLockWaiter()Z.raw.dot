digraph "CFG forkotlinx.coroutines.sync.MutexImpl.LockCont.tryResumeLockWaiter()Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r6 I:kotlinx.coroutines.sync.MutexImpl$LockCont) type: VIRTUAL call: kotlinx.coroutines.sync.MutexImpl.LockCont.take():boolean A[MD:():boolean (m)] (LINE:385)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0008 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|0x0008: IGET  (r0 I:kotlinx.coroutines.CancellableContinuation\<kotlin.Unit\>) = (r6 I:kotlinx.coroutines.sync.MutexImpl$LockCont) kotlinx.coroutines.sync.MutexImpl.LockCont.cont kotlinx.coroutines.CancellableContinuation  (LINE:386)\l0x000a: SGET  (r2 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l0x000c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: NEW_INSTANCE  (r4 I:kotlinx.coroutines.sync.MutexImpl$LockCont$tryResumeLockWaiter$1) =  kotlinx.coroutines.sync.MutexImpl$LockCont$tryResumeLockWaiter$1 \l0x000f: IGET  (r5 I:kotlinx.coroutines.sync.MutexImpl) = (r6 I:kotlinx.coroutines.sync.MutexImpl$LockCont) kotlinx.coroutines.sync.MutexImpl.LockCont.this$0 kotlinx.coroutines.sync.MutexImpl \l0x0011: INVOKE  \l  (r4 I:kotlinx.coroutines.sync.MutexImpl$LockCont$tryResumeLockWaiter$1)\l  (r5 I:kotlinx.coroutines.sync.MutexImpl)\l  (r6 I:kotlinx.coroutines.sync.MutexImpl$LockCont)\l type: DIRECT call: kotlinx.coroutines.sync.MutexImpl$LockCont$tryResumeLockWaiter$1.\<init\>(kotlinx.coroutines.sync.MutexImpl, kotlinx.coroutines.sync.MutexImpl$LockCont):void A[MD:(kotlinx.coroutines.sync.MutexImpl, kotlinx.coroutines.sync.MutexImpl$LockCont):void (m)]\l0x0014: CHECK_CAST (r4 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r4 I:??[OBJECT, ARRAY]) \l0x0016: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.CancellableContinuation)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l  (r4 I:kotlin.jvm.functions.Function1)\l type: INTERFACE call: kotlinx.coroutines.CancellableContinuation.tryResume(java.lang.Object, java.lang.Object, kotlin.jvm.functions.Function1):java.lang.Object A[MD:(T, java.lang.Object, kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x001a|0x001a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x001c|RETURN\lORIG_RETURN\l|0x001c: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001d: RETURN  (r1 I:boolean) \l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x001d: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.sync.MutexImpl.LockCont.tryResumeLockWaiter((r6 'this' I:kotlinx.coroutines.sync.MutexImpl$LockCont A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x001d \-\> B:11:?, CROSS_EDGE: B:16:0x001a \-\> B:18:0x001d\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlinx.coroutines.sync.MutexImpl.LockWaiter.tryResumeLockWaiter():boolean]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_11;
Node_19 -> Node_11;
}

