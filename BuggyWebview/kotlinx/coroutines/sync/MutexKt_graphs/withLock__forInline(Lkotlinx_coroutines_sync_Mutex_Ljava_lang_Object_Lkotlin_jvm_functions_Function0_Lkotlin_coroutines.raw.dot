digraph "CFG forkotlinx.coroutines.sync.MutexKt.withLock$$forInline(Lkotlinx\/coroutines\/sync\/Mutex;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function0;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:112)\l0x0003: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x0006: INVOKE  \l  (r3 I:kotlinx.coroutines.sync.Mutex A[D('$this$withLock' kotlinx.coroutines.sync.Mutex)])\l  (r4 I:java.lang.Object A[D('owner' java.lang.Object)])\l  (r6 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.sync.Mutex.lock(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(java.lang.Object, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l0x0009: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000a: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x000e|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x000e|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x001c, blocks: (B:14:0x000e), top: B:20:0x000e \}\lCatch: all \-\> 0x001c\l|0x000e: INVOKE  (r2 I:java.lang.Object) = (r5 I:kotlin.jvm.functions.Function0 A[D('action' kotlin.jvm.functions.Function0)]) type: INTERFACE call: kotlin.jvm.functions.Function0.invoke():java.lang.Object A[Catch: all \-\> 0x001c, MD:():R (m), TRY_ENTER, TRY_LEAVE] (LINE:114)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0012|0x0012: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0015: INVOKE  \l  (r3 I:kotlinx.coroutines.sync.Mutex A[D('$this$withLock' kotlinx.coroutines.sync.Mutex)])\l  (r4 I:java.lang.Object A[D('owner' java.lang.Object)])\l type: INTERFACE call: kotlinx.coroutines.sync.Mutex.unlock(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:116)\l0x0018: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x001b|RETURN\l|0x001b: RETURN  (r2 I:java.lang.Object)  (LINE:114)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x001c|ExcHandler: all \-\> 0x001c\l|0x001c: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x001c] (LINE:115)\l}"];
Node_18 [shape=record,label="{18\:\ 0x001d|0x001d: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0020: INVOKE  \l  (r3 I:kotlinx.coroutines.sync.Mutex A[D('$this$withLock' kotlinx.coroutines.sync.Mutex)])\l  (r4 I:java.lang.Object A[D('owner' java.lang.Object)])\l type: INTERFACE call: kotlinx.coroutines.sync.Mutex.unlock(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:116)\l0x0023: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0026|0x0026: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static final java.lang.Object kotlinx.coroutines.sync.MutexKt.withLock$$forInline((r3 I:kotlinx.coroutines.sync.Mutex A[D('$this$withLock' kotlinx.coroutines.sync.Mutex), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[D('owner' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function0\<? extends T\> A[D('action' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.coroutines.Continuation\<? super T\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:19:0x0026 \-\> B:12:?, CROSS_EDGE: B:20:0x000e \-\> B:17:0x001c\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x001c, blocks: (B:14:0x000e), top: B:20:0x000e \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/sync\/Mutex;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function0\<+TT;\>;Lkotlin\/coroutines\/Continuation\<\-TT;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x0001\-0x0026: r0 '$i$f$withLock' I\l  \-1 \-0x0026: r3 '$this$withLock' Lkotlinx\/coroutines\/sync\/Mutex;\l  \-1 \-0x0026: r4 'owner' Ljava\/lang\/Object;\l  \-1 \-0x0026: r5 'action' Lkotlin\/jvm\/functions\/Function0;\l  \-1 \-0x0026: r6 '$completion' Lkotlin\/coroutines\/Continuation;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_20;
Node_20 -> Node_14;
Node_20 -> Node_17;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_21 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_12;
}

