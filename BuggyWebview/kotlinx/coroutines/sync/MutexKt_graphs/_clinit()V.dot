digraph "CFG forkotlinx.coroutines.sync.MutexKt.\<clinit\>()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlinx.coroutines.sync.MutexKt.LOCK_FAIL = new kotlinx.coroutines.internal.Symbol(\"LOCK_FAIL\")\lkotlinx.coroutines.sync.MutexKt.UNLOCK_FAIL = new kotlinx.coroutines.internal.Symbol(\"UNLOCK_FAIL\")\lkotlinx.coroutines.internal.Symbol r0 = new kotlinx.coroutines.internal.Symbol(\"LOCKED\")\lkotlinx.coroutines.sync.MutexKt.LOCKED = r0\lkotlinx.coroutines.internal.Symbol r1 = new kotlinx.coroutines.internal.Symbol(\"UNLOCKED\")\lkotlinx.coroutines.sync.MutexKt.UNLOCKED = r1\lkotlinx.coroutines.sync.MutexKt.EMPTY_LOCKED = new kotlinx.coroutines.sync.Empty(r0)\lkotlinx.coroutines.sync.MutexKt.EMPTY_UNLOCKED = new kotlinx.coroutines.sync.Empty(r1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlinx.coroutines.sync.MutexKt.\<clinit\>()  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

