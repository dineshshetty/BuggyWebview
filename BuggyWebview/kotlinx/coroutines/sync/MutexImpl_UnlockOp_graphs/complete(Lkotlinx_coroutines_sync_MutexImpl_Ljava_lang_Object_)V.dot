digraph "CFG forkotlinx.coroutines.sync.MutexImpl.UnlockOp.complete(Lkotlinx\/coroutines\/sync\/MutexImpl;Ljava\/lang\/Object;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|if (r4 != null) goto L6\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|kotlinx.coroutines.sync.Empty r0 = kotlinx.coroutines.sync.MutexKt.EMPTY_UNLOCKED\l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|PHI: r0 \l  PHI: (r0v1 'update' java.lang.Object) = (r0v0 'update' java.lang.Object), (r0v2 'update' java.lang.Object) binds: [B:11:0x0007, B:10:0x0002] A[DONT_GENERATE, DONT_INLINE]\l|androidx.concurrent.futures.C0125xc40028dd.m112m(kotlinx.coroutines.sync.MutexImpl._state$FU, r3, r2, r0)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000e|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0007|kotlinx.coroutines.sync.MutexImpl$LockedQueue r0 = r2.queue\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.sync.MutexImpl.UnlockOp.complete((r2v0 'this' kotlinx.coroutines.sync.MutexImpl$UnlockOp A[IMMUTABLE_TYPE, THIS]), (r3v0 'affected' kotlinx.coroutines.sync.MutexImpl A[D('affected' kotlinx.coroutines.sync.MutexImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'failure' java.lang.Object A[D('failure' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0007 \-\> B:12:0x0009\lINLINE_NOT_NEEDED\lREPLACED_BY: kotlinx.coroutines.sync.MutexImpl.UnlockOp.complete(kotlinx.coroutines.sync.MutexImpl, java.lang.Object):void\lBRIDGED_BY: kotlinx.coroutines.sync.MutexImpl.UnlockOp.complete(kotlinx.coroutines.sync.MutexImpl, java.lang.Object):void\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.AtomicOp.complete(T, java.lang.Object):void]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
Node_11 -> Node_12;
}

