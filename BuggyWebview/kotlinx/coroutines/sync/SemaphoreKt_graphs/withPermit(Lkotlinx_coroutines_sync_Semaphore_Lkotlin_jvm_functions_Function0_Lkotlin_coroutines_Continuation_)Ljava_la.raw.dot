digraph "CFG forkotlinx.coroutines.sync.SemaphoreKt.withPermit(Lkotlinx\/coroutines\/sync\/Semaphore;Lkotlin\/jvm\/functions\/Function0;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r7 I:??[OBJECT, ARRAY]) kotlinx.coroutines.sync.SemaphoreKt$withPermit$1 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0014 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.sync.SemaphoreKt$withPermit$1) = (kotlinx.coroutines.sync.SemaphoreKt$withPermit$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.sync.SemaphoreKt$withPermit$1) kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0014 \l}"];
Node_32 [shape=record,label="{32\:\ 0x000e|0x000e: IGET  (r7 I:int) = (r0 I:kotlinx.coroutines.sync.SemaphoreKt$withPermit$1) kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.label int \l0x0010: ARITH  (r7 I:int) = (r7 I:int) \- (r2 I:int) \l0x0011: IPUT  (r7 I:int), (r0 I:kotlinx.coroutines.sync.SemaphoreKt$withPermit$1) kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.label int \l}"];
Node_34 [shape=record,label="{34\:\ 0x0019|0x0019: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r0 I:java.lang.Object) = (r7 I:kotlinx.coroutines.sync.SemaphoreKt$withPermit$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.result java.lang.Object \l0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0020: IGET  (r2 I:int) = (r7 I:kotlinx.coroutines.sync.SemaphoreKt$withPermit$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.label int  (LINE:80)\l0x0022: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0023|0x0023: SWITCH  (r2 I:??)\l case 0: goto B:39:0x003b\l case 1: goto B:38:0x002e\l default: goto B:36:0x0026 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0026|0x0026: NEW_INSTANCE  (r5 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:89)\l0x0028: CONST_STR  (r6 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x002a: INVOKE  (r5 I:java.lang.IllegalStateException), (r6 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x002d|0x002d: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x002e|0x002e: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:80)\l0x002f: IGET  (r6 I:java.lang.Object) = (r7 I:kotlinx.coroutines.sync.SemaphoreKt$withPermit$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.L$1 java.lang.Object \l0x0031: CHECK_CAST (r6 I:kotlin.jvm.functions.Function0) = (kotlin.jvm.functions.Function0) (r6 I:??[OBJECT, ARRAY]) \l0x0033: IGET  (r1 I:java.lang.Object) = (r7 I:kotlinx.coroutines.sync.SemaphoreKt$withPermit$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.L$0 java.lang.Object \l0x0035: CHECK_CAST (r1 I:kotlinx.coroutines.sync.Semaphore) = (kotlinx.coroutines.sync.Semaphore) (r1 I:??[OBJECT, ARRAY]) \l0x0037: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_50 [shape=record,label="{50\:\ 0x0050|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_44 [shape=record,label="{44\:\ 0x0050|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x005e, blocks: (B:44:0x0050), top: B:50:0x0050 \}\lCatch: all \-\> 0x005e\l|0x0050: INVOKE  (r2 I:java.lang.Object) = (r6 I:kotlin.jvm.functions.Function0 A[D('action' kotlin.jvm.functions.Function0)]) type: INTERFACE call: kotlin.jvm.functions.Function0.invoke():java.lang.Object A[Catch: all \-\> 0x005e, MD:():R (m), TRY_ENTER, TRY_LEAVE] (LINE:87)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0054|0x0054: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0057: INVOKE  (r1 I:kotlinx.coroutines.sync.Semaphore A[D('$this$withPermit' kotlinx.coroutines.sync.Semaphore)]) type: INTERFACE call: kotlinx.coroutines.sync.Semaphore.release():void A[MD:():void (m)] (LINE:89)\l0x005a: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x005d|RETURN\l|0x005d: RETURN  (r2 I:java.lang.Object)  (LINE:87)\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_47 [shape=record,label="{47\:\ 0x005e|ExcHandler: all \-\> 0x005e\l|0x005e: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x005e] (LINE:88)\l}"];
Node_48 [shape=record,label="{48\:\ 0x005f|0x005f: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0062: INVOKE  (r1 I:kotlinx.coroutines.sync.Semaphore A[D('$this$withPermit' kotlinx.coroutines.sync.Semaphore)]) type: INTERFACE call: kotlinx.coroutines.sync.Semaphore.release():void A[MD:():void (m)] (LINE:89)\l0x0065: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x0068|0x0068: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_39 [shape=record,label="{39\:\ 0x003b|0x003b: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x003e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0040: IPUT  \l  (r5 I:java.lang.Object A[D('$this$withPermit' kotlinx.coroutines.sync.Semaphore)])\l  (r7 I:kotlinx.coroutines.sync.SemaphoreKt$withPermit$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.L$0 java.lang.Object  (LINE:85)\l0x0042: IPUT  \l  (r6 I:java.lang.Object A[D('action' kotlin.jvm.functions.Function0)])\l  (r7 I:kotlinx.coroutines.sync.SemaphoreKt$withPermit$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.L$1 java.lang.Object \l0x0044: IPUT  \l  (r3 I:int)\l  (r7 I:kotlinx.coroutines.sync.SemaphoreKt$withPermit$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.label int \l0x0046: INVOKE  (r4 I:java.lang.Object) = \l  (r5 I:kotlinx.coroutines.sync.Semaphore A[D('$this$withPermit' kotlinx.coroutines.sync.Semaphore)])\l  (r7 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.sync.Semaphore.acquire(kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x004a|0x004a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x004d \l}"];
Node_41 [shape=record,label="{41\:\ 0x004c|RETURN\l|0x004c: RETURN  (r1 I:java.lang.Object)  (LINE:80)\l}"];
Node_42 [shape=record,label="{42\:\ 0x004d|0x004d: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('$this$withPermit' kotlinx.coroutines.sync.Semaphore)])  (LINE:85)\l0x004e: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$this$withPermit' kotlinx.coroutines.sync.Semaphore)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$f$withPermit' int)]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.sync.SemaphoreKt$withPermit$1) =  kotlinx.coroutines.sync.SemaphoreKt$withPermit$1 \l0x0016: INVOKE  (r0 I:kotlinx.coroutines.sync.SemaphoreKt$withPermit$1), (r7 I:kotlin.coroutines.Continuation) type: DIRECT call: kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.\<init\>(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<? super kotlinx.coroutines.sync.SemaphoreKt$withPermit$1\>):void (m)]\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.sync.SemaphoreKt.withPermit((r5 I:kotlinx.coroutines.sync.Semaphore A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function0\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.coroutines.Continuation\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:46:0x005d \-\> B:27:?, CROSS_EDGE: B:49:0x0068 \-\> B:27:?, CROSS_EDGE: B:50:0x0050 \-\> B:47:0x005e, CROSS_EDGE: B:41:0x004c \-\> B:27:?, CROSS_EDGE: B:42:0x004d \-\> B:50:0x0050, CROSS_EDGE: B:33:0x0014 \-\> B:34:0x0019, CROSS_EDGE: B:29:0x0002 \-\> B:33:0x0014\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x005e, blocks: (B:44:0x0050), top: B:50:0x0050 \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/sync\/Semaphore;Lkotlin\/jvm\/functions\/Function0\<+TT;\>;Lkotlin\/coroutines\/Continuation\<\-TT;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x001c\-0x0026: r0 '$result' Ljava\/lang\/Object;\l  0x001a\-0x0026: r7 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x0037\-0x003b: r1 '$this$withPermit' Lkotlinx\/coroutines\/sync\/Semaphore;\l  0x002f\-0x003b: r5 '$i$f$withPermit' I\l  0x0033\-0x003b: r6 'action' Lkotlin\/jvm\/functions\/Function0;\l  0x003f\-0x004f: r2 '$i$f$withPermit' I\l  0x003e\-0x004f: r5 '$this$withPermit' Lkotlinx\/coroutines\/sync\/Semaphore;\l  0x002e\-0x0071: r0 '$result' Ljava\/lang\/Object;\l  0x004f\-0x0071: r1 '$this$withPermit' Lkotlinx\/coroutines\/sync\/Semaphore;\l  0x004f\-0x0071: r5 '$i$f$withPermit' I\l  0x003e\-0x0071: r6 'action' Lkotlin\/jvm\/functions\/Function0;\l  0x002e\-0x0071: r7 '$continuation' Lkotlin\/coroutines\/Continuation;\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_38;
Node_35 -> Node_39;
Node_36 -> Node_37;
Node_37 -> Node_27;
Node_38 -> Node_50;
Node_50 -> Node_44;
Node_50 -> Node_47;
Node_44 -> Node_45;
Node_44 -> Node_51;
Node_45 -> Node_46;
Node_46 -> Node_27;
Node_51 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_27;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_27;
Node_42 -> Node_50;
Node_33 -> Node_34;
}

