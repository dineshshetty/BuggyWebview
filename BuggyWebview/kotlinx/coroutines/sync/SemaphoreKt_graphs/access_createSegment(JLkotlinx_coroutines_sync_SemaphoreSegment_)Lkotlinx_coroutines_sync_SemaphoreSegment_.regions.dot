digraph "CFG forkotlinx.coroutines.sync.SemaphoreKt.access$createSegment(JLkotlinx\/coroutines\/sync\/SemaphoreSegment;)Lkotlinx\/coroutines\/sync\/SemaphoreSegment;" {
subgraph cluster_Region_366446117 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|return createSegment(r1, r3)\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlinx.coroutines.sync.SemaphoreSegment kotlinx.coroutines.sync.SemaphoreKt.access$createSegment((r1v0 'id' long A[D('id' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'prev' kotlinx.coroutines.sync.SemaphoreSegment A[D('prev' kotlinx.coroutines.sync.SemaphoreSegment), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  \l  (r1 I:long A[D('id' long)])\l  (r3 I:kotlinx.coroutines.sync.SemaphoreSegment A[D('prev' kotlinx.coroutines.sync.SemaphoreSegment)])\l type: STATIC call: kotlinx.coroutines.sync.SemaphoreKt.createSegment(long, kotlinx.coroutines.sync.SemaphoreSegment):kotlinx.coroutines.sync.SemaphoreSegment\l}"];
MethodNode -> Node_4;Node_7 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
}

