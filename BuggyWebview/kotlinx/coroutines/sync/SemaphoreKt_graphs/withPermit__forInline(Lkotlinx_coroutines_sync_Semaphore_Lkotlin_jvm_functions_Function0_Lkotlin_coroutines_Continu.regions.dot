digraph "CFG forkotlinx.coroutines.sync.SemaphoreKt.withPermit$$forInline(Lkotlinx\/coroutines\/sync\/Semaphore;Lkotlin\/jvm\/functions\/Function0;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1438879314 {
label = "R(2:1|(1:5))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0000|kotlin.jvm.internal.InlineMarker.mark(0)\lr3.acquire(r5)\lint r1 = 1\lkotlin.jvm.internal.InlineMarker.mark(1)\l}"];
subgraph cluster_TryCatchRegion_1820951397 {
label = "Try: R(1:5) finally: R(3:8|9|10)";
node [shape=record,color=blue];
subgraph cluster_Region_532314007 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x001b|RETURN\l|return r4.invoke()\l}"];
}
subgraph cluster_Region_215141513 {
label = "R(3:8|9|10) | ExcHandler: all \-\> 0x001c\l";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x001c|ExcHandler: all \-\> 0x001c\l}"];
Node_18 [shape=record,label="{18\:\ 0x001d|FINALLY_INSNS\l|kotlin.jvm.internal.InlineMarker.finallyStart(1)\lr3.release()\lkotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0026|throw r2\l}"];
}
}
}
subgraph cluster_Region_215141513 {
label = "R(3:8|9|10) | ExcHandler: all \-\> 0x001c\l";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x001c|ExcHandler: all \-\> 0x001c\l}"];
Node_18 [shape=record,label="{18\:\ 0x001d|FINALLY_INSNS\l|kotlin.jvm.internal.InlineMarker.finallyStart(1)\lr3.release()\lkotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0026|throw r2\l}"];
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000e|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000e|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x001c, blocks: (B:14:0x000e), top: B:20:0x000e \}\lCatch: all \-\> 0x001c\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0012|DONT_GENERATE\l|kotlin.jvm.internal.InlineMarker.finallyStart(r1)\lr3.release()\lkotlin.jvm.internal.InlineMarker.finallyEnd(r1)\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
MethodNode[shape=record,label="{private static final java.lang.Object kotlinx.coroutines.sync.SemaphoreKt.withPermit$$forInline((r3v0 '$this$withPermit' kotlinx.coroutines.sync.Semaphore A[D('$this$withPermit' kotlinx.coroutines.sync.Semaphore), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.jvm.functions.Function0\<? extends T\> A[D('action' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.coroutines.Continuation\<? super T\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:19:0x0026 \-\> B:12:?, CROSS_EDGE: B:20:0x000e \-\> B:17:0x001c\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x001c, blocks: (B:14:0x000e), top: B:20:0x000e \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/sync\/Semaphore;Lkotlin\/jvm\/functions\/Function0\<+TT;\>;Lkotlin\/coroutines\/Continuation\<\-TT;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_11;Node_13 -> Node_20;
Node_16 -> Node_12;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_11 -> Node_13;
Node_20 -> Node_14;
Node_20 -> Node_17;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_21 -> Node_17;
}

