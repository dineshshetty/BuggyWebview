digraph "CFG forkotlinx.coroutines.sync.SemaphoreKt.createSegment(JLkotlinx\/coroutines\/sync\/SemaphoreSegment;)Lkotlinx\/coroutines\/sync\/SemaphoreSegment;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.sync.SemaphoreSegment) =  kotlinx.coroutines.sync.SemaphoreSegment  (LINE:261)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: INVOKE  \l  (r0 I:kotlinx.coroutines.sync.SemaphoreSegment)\l  (r2 I:long A[D('id' long)])\l  (r4 I:kotlinx.coroutines.sync.SemaphoreSegment A[D('prev' kotlinx.coroutines.sync.SemaphoreSegment)])\l  (r1 I:int)\l type: DIRECT call: kotlinx.coroutines.sync.SemaphoreSegment.\<init\>(long, kotlinx.coroutines.sync.SemaphoreSegment, int):void A[MD:(long, kotlinx.coroutines.sync.SemaphoreSegment, int):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:kotlinx.coroutines.sync.SemaphoreSegment) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.sync.SemaphoreSegment kotlinx.coroutines.sync.SemaphoreKt.createSegment((r2 I:long A[D('id' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlinx.coroutines.sync.SemaphoreSegment A[D('prev' kotlinx.coroutines.sync.SemaphoreSegment), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0006: r2 'id' J\l  \-1 \-0x0006: r4 'prev' Lkotlinx\/coroutines\/sync\/SemaphoreSegment;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

