digraph "CFG forkotlinx.coroutines.sync.SemaphoreKt.access$createSegment(JLkotlinx\/coroutines\/sync\/SemaphoreSegment;)Lkotlinx\/coroutines\/sync\/SemaphoreSegment;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.sync.SemaphoreSegment) = \l  (r1 I:long A[D('id' long)])\l  (r3 I:kotlinx.coroutines.sync.SemaphoreSegment A[D('prev' kotlinx.coroutines.sync.SemaphoreSegment)])\l type: STATIC call: kotlinx.coroutines.sync.SemaphoreKt.createSegment(long, kotlinx.coroutines.sync.SemaphoreSegment):kotlinx.coroutines.sync.SemaphoreSegment A[MD:(long, kotlinx.coroutines.sync.SemaphoreSegment):kotlinx.coroutines.sync.SemaphoreSegment (m)] (LINE:1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:kotlinx.coroutines.sync.SemaphoreSegment) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlinx.coroutines.sync.SemaphoreSegment kotlinx.coroutines.sync.SemaphoreKt.access$createSegment((r1 I:long A[D('id' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlinx.coroutines.sync.SemaphoreSegment A[D('prev' kotlinx.coroutines.sync.SemaphoreSegment), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  \l  (r1 I:long A[D('id' long)])\l  (r3 I:kotlinx.coroutines.sync.SemaphoreSegment A[D('prev' kotlinx.coroutines.sync.SemaphoreSegment)])\l type: STATIC call: kotlinx.coroutines.sync.SemaphoreKt.createSegment(long, kotlinx.coroutines.sync.SemaphoreSegment):kotlinx.coroutines.sync.SemaphoreSegment\lDebug Info:\l  \-1 \-0x0004: r1 'id' J\l  \-1 \-0x0004: r3 'prev' Lkotlinx\/coroutines\/sync\/SemaphoreSegment;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

