digraph "CFG forkotlinx.coroutines.sync.MutexImpl.isLockedEmptyQueueState$kotlinx_coroutines_core()Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object) = (r2 I:kotlinx.coroutines.sync.MutexImpl) kotlinx.coroutines.sync.MutexImpl._state java.lang.Object  (LINE:158)\l0x0002: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.sync.MutexImpl$LockedQueue  (LINE:159)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|0x0004: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0011 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) \l0x0007: CHECK_CAST (r1 I:kotlinx.coroutines.sync.MutexImpl$LockedQueue) = (kotlinx.coroutines.sync.MutexImpl$LockedQueue) (r1 I:??[OBJECT, ARRAY]) \l0x0009: INVOKE  (r1 I:boolean) = (r1 I:kotlinx.coroutines.sync.MutexImpl$LockedQueue) type: VIRTUAL call: kotlinx.coroutines.sync.MutexImpl.LockedQueue.isEmpty():boolean A[MD:():boolean (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0011 \l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|SYNTHETIC\lRETURN\l|0x000f: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0012: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|RETURN\lORIG_RETURN\l|0x0011: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public final boolean kotlinx.coroutines.sync.MutexImpl.isLockedEmptyQueueState$kotlinx_coroutines_core((r2 'this' I:kotlinx.coroutines.sync.MutexImpl A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0011 \-\> B:18:0x0012, CROSS_EDGE: B:13:0x0004 \-\> B:17:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x0012: r0 'state' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

