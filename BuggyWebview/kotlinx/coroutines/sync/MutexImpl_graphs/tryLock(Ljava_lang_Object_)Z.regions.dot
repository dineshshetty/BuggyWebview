digraph "CFG forkotlinx.coroutines.sync.MutexImpl.tryLock(Ljava\/lang\/Object;)Z" {
subgraph cluster_Region_824357085 {
label = "R(1:(2:2|(2:25|(2:(1:36)|(2:(1:28)(1:34)|(1:(1:32)))))(1:(1:(2:(1:21)|(1:23)))(1:(1:14)(1:9))))) | DECL_VAR: kotlinx.coroutines.internal.Symbol null, kotlinx.coroutines.sync.Empty update\l";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_880457521 {
label = "LOOP:0: (2:2|(2:25|(2:(1:36)|(2:(1:28)(1:34)|(1:(1:32)))))(1:(1:(2:(1:21)|(1:23)))(1:(1:14)(1:9))))";
node [shape=record,color=blue];
subgraph cluster_Region_1390166819 {
label = "R(2:2|(2:25|(2:(1:36)|(2:(1:28)(1:34)|(1:(1:32)))))(1:(1:(2:(1:21)|(1:23)))(1:(1:14)(1:9))))";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0002|LOOP_START\lLOOP:0: B:42:0x0002\-\>B:75:0x0002\l|java.lang.Object java.lang.Object r2 = r8._state\l}"];
subgraph cluster_IfRegion_34952970 {
label = "IF [B:43:0x000b] THEN: R(2:25|(2:(1:36)|(2:(1:28)(1:34)|(1:(1:32))))) ELSE: R(1:(1:(2:(1:21)|(1:23)))(1:(1:14)(1:9)))";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x000b|if ((r2 instanceof kotlinx.coroutines.sync.Empty) != false) goto L24\l}"];
subgraph cluster_Region_1879845783 {
label = "R(2:25|(2:(1:36)|(2:(1:28)(1:34)|(1:(1:32)))))";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x000d|java.lang.Object java.lang.Object r4 = ((kotlinx.coroutines.sync.Empty) r2).locked\lkotlinx.coroutines.internal.Symbol r7 = kotlinx.coroutines.sync.MutexKt.UNLOCKED\l}"];
subgraph cluster_Region_1676809709 {
label = "R(2:(1:36)|(2:(1:28)(1:34)|(1:(1:32))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_621574629 {
label = "IF [B:45:0x0016] THEN: R(1:36) ELSE: null";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0016|if (r4 != r7) goto L35\l}"];
subgraph cluster_Region_985334880 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0018|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_507244466 {
label = "R(2:(1:28)(1:34)|(1:(1:32)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2132344955 {
label = "IF [B:47:0x0019] THEN: R(1:28) ELSE: R(1:34)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x0019|if (r9 == null) goto L28\l}"];
subgraph cluster_Region_848489403 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x001b|kotlinx.coroutines.sync.Empty r4 = kotlinx.coroutines.sync.MutexKt.EMPTY_LOCKED\l}"];
}
subgraph cluster_Region_374363618 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0020|kotlinx.coroutines.sync.Empty r4 = new kotlinx.coroutines.sync.Empty(r9)\l}"];
}
}
subgraph cluster_Region_204943112 {
label = "R(1:(1:32))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_472202900 {
label = "IF [B:51:0x002c] THEN: R(1:32) ELSE: null";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x002c|if (androidx.concurrent.futures.C0125xc40028dd.m112m(kotlinx.coroutines.sync.MutexImpl._state$FU, r8, r2, r4) != false) goto L31\l}"];
subgraph cluster_Region_1858974442 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x002e|RETURN\l|return true\l}"];
}
}
}
}
}
}
subgraph cluster_Region_801801982 {
label = "R(1:(1:(2:(1:21)|(1:23)))(1:(1:14)(1:9))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_743486312 {
label = "IF [B:54:0x0031] THEN: R(1:(2:(1:21)|(1:23))) ELSE: R(1:(1:14)(1:9)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0031|if ((r2 instanceof kotlinx.coroutines.sync.MutexImpl.LockedQueue) != false) goto L16\l}"];
subgraph cluster_Region_409420196 {
label = "R(1:(2:(1:21)|(1:23)))";
node [shape=record,color=blue];
subgraph cluster_Region_765293263 {
label = "R(2:(1:21)|(1:23))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_72686831 {
label = "IF [B:59:0x003c] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x003c|PHI: r5 \l  PHI: (r5v1 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|if ((((kotlinx.coroutines.sync.MutexImpl.LockedQueue) r2).owner != r9) == true) goto L21\l}"];
subgraph cluster_Region_784650100 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x003e|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1430405412 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x004f|throw new java.lang.IllegalStateException(kotlin.jvm.internal.Intrinsics.stringPlus(\"Already locked by \", r9).toString())\l}"];
}
}
}
subgraph cluster_Region_2005549129 {
label = "R(1:(1:14)(1:9)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_362073953 {
label = "IF [B:64:0x0052] THEN: R(1:14) ELSE: R(1:9) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x0052|if ((r2 instanceof kotlinx.coroutines.internal.OpDescriptor) != true) goto L12\l}"];
subgraph cluster_Region_552633049 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x006b|throw new java.lang.IllegalStateException(kotlin.jvm.internal.Intrinsics.stringPlus(\"Illegal state \", r2).toString())\l}"];
}
subgraph cluster_Region_160607836 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x0054|((kotlinx.coroutines.internal.OpDescriptor) r2).perform(r8)\l}"];
}
}
}
}
}
}
}
}
}
Node_39 [shape=record,color=red,label="{39\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0000}"];
Node_70 [shape=record,color=red,label="{70\:\ 0x002f|SYNTHETIC\l}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x002f}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0050}"];
Node_76 [shape=record,color=red,label="{76\:\ 0x0002|SYNTHETIC\l}"];
Node_75 [shape=record,color=red,label="{75\:\ 0x0002|LOOP_END\lSYNTHETIC\lLOOP:0: B:42:0x0002\-\>B:75:0x0002\l}"];
Node_73 [shape=record,color=red,label="{73\:\ 0x005c|SYNTHETIC\l}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x005c}"];
Node_40 [shape=record,color=red,label="{40\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_72 [shape=record,color=red,label="{72\:\ 0x0033|SYNTHETIC\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x0033}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x0038}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x003b}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x003f}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x000d|SYNTHETIC\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0026|PHI: r4 \l  PHI: (r4v5 'update' kotlinx.coroutines.sync.Empty) = (r4v4 'update' kotlinx.coroutines.sync.Empty), (r4v6 'update' kotlinx.coroutines.sync.Empty) binds: [B:49:0x0020, B:48:0x001b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_71 [shape=record,color=red,label="{71\:\ 0x002e|SYNTHETIC\l}"];
Node_77 [shape=record,color=red,label="{77\:\ 0x0002|SYNTHETIC\l}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x0018|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.sync.MutexImpl.tryLock((r8v0 'this' kotlinx.coroutines.sync.MutexImpl A[IMMUTABLE_TYPE, THIS]), (r9v0 'owner' java.lang.Object A[D('owner' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:52:0x002e \-\> B:40:?, BACK_EDGE: B:51:0x002c \-\> B:42:0x0002, CROSS_EDGE: B:49:0x0020 \-\> B:50:0x0026, CROSS_EDGE: B:60:0x003e \-\> B:40:?, CROSS_EDGE: B:62:0x004f \-\> B:40:?, CROSS_EDGE: B:56:0x0038 \-\> B:59:0x003c, BACK_EDGE: B:65:0x0054 \-\> B:42:0x0002, CROSS_EDGE: B:68:0x006b \-\> B:40:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.sync.Mutex.tryLock(java.lang.Object):boolean]\l}"];
MethodNode -> Node_39;Node_42 -> Node_43;
Node_43 -> Node_70[style=dashed];
Node_43 -> Node_74;
Node_44 -> Node_45;
Node_45 -> Node_47[style=dashed];
Node_45 -> Node_69;
Node_46 -> Node_40;
Node_47 -> Node_48;
Node_47 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_51 -> Node_71;
Node_51 -> Node_77[style=dashed];
Node_52 -> Node_40;
Node_54 -> Node_63[style=dashed];
Node_54 -> Node_72;
Node_59 -> Node_60;
Node_59 -> Node_61[style=dashed];
Node_60 -> Node_40;
Node_62 -> Node_40;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_73;
Node_68 -> Node_40;
Node_65 -> Node_76;
Node_39 -> Node_41;
Node_41 -> Node_42;
Node_70 -> Node_53;
Node_53 -> Node_54;
Node_63 -> Node_64;
Node_76 -> Node_75;
Node_75 -> Node_42;
Node_73 -> Node_67;
Node_67 -> Node_68;
Node_72 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_58;
Node_56 -> Node_59;
Node_58 -> Node_59;
Node_61 -> Node_62;
Node_74 -> Node_44;
Node_50 -> Node_51;
Node_71 -> Node_52;
Node_77 -> Node_75;
Node_69 -> Node_46;
}

