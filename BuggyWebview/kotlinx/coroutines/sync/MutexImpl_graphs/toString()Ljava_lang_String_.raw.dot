digraph "CFG forkotlinx.coroutines.sync.MutexImpl.toString()Ljava\/lang\/String;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY])  (LINE:353)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0002|LOOP_START\lLOOP:0: B:21:0x0002\-\>B:27:0x002b\l|0x0003: IGET  (r2 I:java.lang.Object) = (r0 I:kotlinx.coroutines.sync.MutexImpl A[D('$this$loop$iv' kotlinx.coroutines.sync.MutexImpl)]) kotlinx.coroutines.sync.MutexImpl._state java.lang.Object  (LINE:440)\l0x0005: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: INSTANCE_OF  (r4 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.sync.Empty  (LINE:355)\l0x0009: CONST  (r5 I:??[int, float, short, byte, char]) = (93 ??[int, float, short, byte, char]) \l0x000b: CONST_STR  (r6 I:java.lang.String) =  \"Mutex[\" \l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|0x000d: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0027 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0027|0x0027: INSTANCE_OF  (r4 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.internal.OpDescriptor  (LINE:356)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0029|0x0029: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0033 \l}"];
Node_27 [shape=record,label="{27\:\ 0x002b|LOOP_END\lLOOP:0: B:21:0x0002\-\>B:27:0x002b\l|0x002b: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) \l0x002c: CHECK_CAST (r4 I:kotlinx.coroutines.internal.OpDescriptor) = (kotlinx.coroutines.internal.OpDescriptor) (r4 I:??[OBJECT, ARRAY]) \l0x002e: INVOKE  (r4 I:kotlinx.coroutines.internal.OpDescriptor), (r7 I:java.lang.Object) type: VIRTUAL call: kotlinx.coroutines.internal.OpDescriptor.perform(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):java.lang.Object (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0033|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0033|0x0033: INSTANCE_OF  (r4 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.sync.MutexImpl$LockedQueue  (LINE:357)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0035|0x0035: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x004f \l}"];
Node_30 [shape=record,label="{30\:\ 0x0037|0x0037: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0039: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x003c: INVOKE  (r4 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003f: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) \l0x0040: CHECK_CAST (r6 I:kotlinx.coroutines.sync.MutexImpl$LockedQueue) = (kotlinx.coroutines.sync.MutexImpl$LockedQueue) (r6 I:??[OBJECT, ARRAY]) \l0x0042: IGET  (r6 I:java.lang.Object) = (r6 I:kotlinx.coroutines.sync.MutexImpl$LockedQueue) kotlinx.coroutines.sync.MutexImpl.LockedQueue.owner java.lang.Object \l0x0044: INVOKE  (r4 I:java.lang.StringBuilder), (r6 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0047: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x004a: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x004e|RETURN\l|0x004e: RETURN  (r4 I:java.lang.String) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x004f|0x004f: NEW_INSTANCE  (r4 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0051: CONST_STR  (r5 I:java.lang.String) =  \"Illegal state \"  (LINE:358)\l0x0053: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.String), (r2 I:java.lang.Object A[D('state' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x0057: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x005b: INVOKE  (r4 I:java.lang.IllegalStateException), (r5 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x005e|0x005e: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_35 [shape=record,label="{35\:\ 0x000f|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|0x000f: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0011: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0014: INVOKE  (r4 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0017: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) \l0x0018: CHECK_CAST (r6 I:kotlinx.coroutines.sync.Empty) = (kotlinx.coroutines.sync.Empty) (r6 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r6 I:java.lang.Object) = (r6 I:kotlinx.coroutines.sync.Empty) kotlinx.coroutines.sync.Empty.locked java.lang.Object \l0x001c: INVOKE  (r4 I:java.lang.StringBuilder), (r6 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x001f: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0022: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0026|RETURN\l|0x0026: RETURN  (r4 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String kotlinx.coroutines.sync.MutexImpl.toString((r7 'this' I:kotlinx.coroutines.sync.MutexImpl A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x002b \-\> B:21:0x0002, CROSS_EDGE: B:31:0x004e \-\> B:19:?, CROSS_EDGE: B:33:0x005e \-\> B:19:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0032: r2 'state' Ljava\/lang\/Object;\l  0x0006\-0x0032: r3 '$i$a$\-loop\-MutexImpl$toString$1' I\l  0x0001\-0x005e: r0 '$this$loop$iv' Lkotlinx\/coroutines\/sync\/MutexImpl;\l  0x0002\-0x005e: r1 '$i$f$loop' I\l  0x0033\-0x005e: r2 'state' Ljava\/lang\/Object;\l  0x0033\-0x005e: r3 '$i$a$\-loop\-MutexImpl$toString$1' I\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_25;
Node_22 -> Node_35[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_34;
Node_27 -> Node_21;
Node_34 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_19;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_35 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_19;
}

