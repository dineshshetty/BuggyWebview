digraph "CFG forkotlinx.coroutines.sync.MutexImpl.holdsLock(Ljava\/lang\/Object;)Z" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|java.lang.Object r0 = r5._state\l}"];
Node_24 [shape=record,label="{24\:\ 0x0008|if ((r0 instanceof kotlinx.coroutines.sync.Empty) == false) goto L8\l}"];
Node_25 [shape=record,label="{25\:\ 0x000a}"];
Node_26 [shape=record,label="{26\:\ 0x000f|if (((kotlinx.coroutines.sync.Empty) r0).locked != r6) goto L5\l}"];
Node_28 [shape=record,label="{28\:\ 0x0012|SYNTHETIC\lRETURN\l|return false\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_29 [shape=record,label="{29\:\ 0x0014}"];
Node_30 [shape=record,label="{30\:\ 0x0016|if ((r0 instanceof kotlinx.coroutines.sync.MutexImpl.LockedQueue) == false) goto L14\l}"];
Node_31 [shape=record,label="{31\:\ 0x0018}"];
Node_32 [shape=record,label="{32\:\ 0x001d|if (((kotlinx.coroutines.sync.MutexImpl.LockedQueue) r0).owner != r6) goto L12\l}"];
Node_34 [shape=record,label="{34\:\ 0x0020|SYNTHETIC\lRETURN\l|return false\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_35 [shape=record,label="{35\:\ 0x0022|RETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.sync.MutexImpl.holdsLock((r5v0 'this' kotlinx.coroutines.sync.MutexImpl A[IMMUTABLE_TYPE, THIS]), (r6v0 'owner' java.lang.Object A[D('owner' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x000f \-\> B:37:0x0025, CROSS_EDGE: B:34:0x0020 \-\> B:37:0x0025, CROSS_EDGE: B:32:0x001d \-\> B:37:0x0025, CROSS_EDGE: B:35:0x0022 \-\> B:37:0x0025\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlinx.coroutines.sync.Mutex.holdsLock(java.lang.Object):boolean]\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_29;
Node_25 -> Node_26;
Node_26 -> Node_28;
Node_26 -> Node_40[style=dashed];
Node_28 -> Node_22;
Node_40 -> Node_22;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_35;
Node_31 -> Node_32;
Node_32 -> Node_34;
Node_32 -> Node_41[style=dashed];
Node_34 -> Node_22;
Node_41 -> Node_22;
Node_35 -> Node_22;
}

