digraph "CFG forkotlinx.coroutines.sync.MutexImpl.holdsLock(Ljava\/lang\/Object;)Z" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object) = (r5 I:kotlinx.coroutines.sync.MutexImpl) kotlinx.coroutines.sync.MutexImpl._state java.lang.Object  (LINE:313)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: INSTANCE_OF  (r2 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.sync.Empty  (LINE:315)\l0x0006: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0007: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0008|0x0008: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0014 \l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|0x000a: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) \l0x000b: CHECK_CAST (r2 I:kotlinx.coroutines.sync.Empty) = (kotlinx.coroutines.sync.Empty) (r2 I:??[OBJECT, ARRAY]) \l0x000d: IGET  (r2 I:java.lang.Object) = (r2 I:kotlinx.coroutines.sync.Empty) kotlinx.coroutines.sync.Empty.locked java.lang.Object \l}"];
Node_26 [shape=record,label="{26\:\ 0x000f|0x000f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('owner' java.lang.Object)])  \-\> B:28:0x0012 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0012|SYNTHETIC\lRETURN\l|0x0012: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0025: RETURN  (r3 I:boolean) A[SYNTHETIC] (LINE:319)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|0x0025: RETURN  (r3 I:boolean) A[SYNTHETIC] (LINE:319)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0014|0x0014: INSTANCE_OF  (r2 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.sync.MutexImpl$LockedQueue  (LINE:316)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|0x0016: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0022 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0018|0x0018: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) \l0x0019: CHECK_CAST (r2 I:kotlinx.coroutines.sync.MutexImpl$LockedQueue) = (kotlinx.coroutines.sync.MutexImpl$LockedQueue) (r2 I:??[OBJECT, ARRAY]) \l0x001b: IGET  (r2 I:java.lang.Object) = (r2 I:kotlinx.coroutines.sync.MutexImpl$LockedQueue) kotlinx.coroutines.sync.MutexImpl.LockedQueue.owner java.lang.Object \l}"];
Node_32 [shape=record,label="{32\:\ 0x001d|0x001d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('owner' java.lang.Object)])  \-\> B:34:0x0020 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0020|SYNTHETIC\lRETURN\l|0x0020: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0025: RETURN  (r3 I:boolean) A[SYNTHETIC] (LINE:319)\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|0x0025: RETURN  (r3 I:boolean) A[SYNTHETIC] (LINE:319)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:317)\l0x0025: RETURN  (r3 I:boolean)  (LINE:319)\l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.sync.MutexImpl.holdsLock((r5 'this' I:kotlinx.coroutines.sync.MutexImpl A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Object A[D('owner' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x000f \-\> B:37:0x0025, CROSS_EDGE: B:34:0x0020 \-\> B:37:0x0025, CROSS_EDGE: B:32:0x001d \-\> B:37:0x0025, CROSS_EDGE: B:35:0x0022 \-\> B:37:0x0025\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x0024: r0 'state' Ljava\/lang\/Object;\l  0x0003\-0x0024: r1 '$i$a$\-let\-MutexImpl$holdsLock$1' I\l  \-1 \-0x0025: r6 'owner' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.sync.Mutex.holdsLock(java.lang.Object):boolean]\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_29;
Node_25 -> Node_26;
Node_26 -> Node_28;
Node_26 -> Node_40[style=dashed];
Node_28 -> Node_22;
Node_40 -> Node_22;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_35;
Node_31 -> Node_32;
Node_32 -> Node_34;
Node_32 -> Node_41[style=dashed];
Node_34 -> Node_22;
Node_41 -> Node_22;
Node_35 -> Node_22;
}

