digraph "CFG forkotlinx.coroutines.sync.Mutex.DefaultImpls.lock$default(Lkotlinx\/coroutines\/sync\/Mutex;Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;ILjava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000c  (LINE:62)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0007 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|0x0007: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlinx.coroutines.sync.Mutex), (r1 I:java.lang.Object), (r2 I:kotlin.coroutines.Continuation) type: INTERFACE call: kotlinx.coroutines.sync.Mutex.lock(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(java.lang.Object, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|RETURN\l|0x000b: RETURN  (r0 I:java.lang.Object) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:java.lang.UnsupportedOperationException) =  java.lang.UnsupportedOperationException \l0x000e: CONST_STR  (r1 I:java.lang.String) =  \"Super calls with default arguments not supported in this target, function: lock\" \l0x0010: INVOKE  (r0 I:java.lang.UnsupportedOperationException), (r1 I:java.lang.String) type: DIRECT call: java.lang.UnsupportedOperationException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|0x0013: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ java.lang.Object kotlinx.coroutines.sync.Mutex.DefaultImpls.lock$default((r0 I:kotlinx.coroutines.sync.Mutex A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.coroutines.Continuation A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:14:0x0004 \-\> B:16:0x0007, CROSS_EDGE: B:19:0x0013 \-\> B:11:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_18;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

