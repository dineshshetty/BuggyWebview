digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.TryPollDesc.onPrepare(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;)Ljava\/lang\/Object;" {
subgraph cluster_Region_61138864 {
label = "R(2:1|(2:(1:4)|(1:(2:(1:9)|(1:(2:(1:(2:(1:18)|(1:17)))|(1:20)))))))";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x0000|kotlinx.coroutines.channels.Send kotlinx.coroutines.channels.Send r0 = (kotlinx.coroutines.channels.Send) r5.affected\lkotlinx.coroutines.internal.Symbol kotlinx.coroutines.internal.Symbol r1 = r0.tryResumeSend(r5)\l}"];
subgraph cluster_Region_196340724 {
label = "R(2:(1:4)|(1:(2:(1:9)|(1:(2:(1:(2:(1:18)|(1:17)))|(1:20))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_143014204 {
label = "IF [B:49:0x0008] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0008|if (r1 == null) goto L3\l}"];
subgraph cluster_Region_1808490009 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x000c|RETURN\l|return kotlinx.coroutines.internal.LockFreeLinkedList_commonKt.REMOVE_PREPARED\l}"];
}
}
subgraph cluster_Region_72555725 {
label = "R(1:(2:(1:9)|(1:(2:(1:(2:(1:18)|(1:17)))|(1:20)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1407877912 {
label = "R(2:(1:9)|(1:(2:(1:(2:(1:18)|(1:17)))|(1:20))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_46563748 {
label = "IF [B:53:0x000f] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x000f|if (r1 == kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC) goto L8\l}"];
subgraph cluster_Region_1200762586 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x0013|RETURN\l|return kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC\l}"];
}
}
subgraph cluster_Region_1989712807 {
label = "R(1:(2:(1:(2:(1:18)|(1:17)))|(1:20)))";
node [shape=record,color=blue];
subgraph cluster_Region_1790002381 {
label = "R(2:(1:(2:(1:18)|(1:17)))|(1:20))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1833236672 {
label = "IF [B:57:0x0018] THEN: R(1:(2:(1:18)|(1:17))) ELSE: null";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0018|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() != false) goto L12\l}"];
subgraph cluster_Region_1006038860 {
label = "R(1:(2:(1:18)|(1:17)))";
node [shape=record,color=blue];
subgraph cluster_Region_159452726 {
label = "R(2:(1:18)|(1:17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_981015363 {
label = "IF [B:62:0x0022] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x0022|PHI: r3 \l  PHI: (r3v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r1 == kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN) == true) goto L18\l}"];
subgraph cluster_Region_1777775847 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
subgraph cluster_Region_591320033 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x002a|throw new java.lang.AssertionError()\l}"];
}
}
}
}
subgraph cluster_Region_792642629 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_66 [shape=record,label="{66\:\ 0x002b|RETURN\lORIG_RETURN\l|return null\l}"];
}
}
}
}
}
}
}
Node_46 [shape=record,color=red,label="{46\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x000a}"];
Node_47 [shape=record,color=red,label="{47\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x000d}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x0011}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x0014}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x001a}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x001d}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x001f}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0025}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x0021}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.AbstractChannel.TryPollDesc.onPrepare((r4v0 'this' kotlinx.coroutines.channels.AbstractChannel$TryPollDesc\<E\> A[IMMUTABLE_TYPE, THIS]), (r5v0 'prepareOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('prepareOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:55:0x0013 \-\> B:47:?, CROSS_EDGE: B:65:0x002a \-\> B:47:?, CROSS_EDGE: B:67:0x002c \-\> B:47:?, CROSS_EDGE: B:61:0x0021 \-\> B:62:0x0022, CROSS_EDGE: B:57:0x0018 \-\> B:66:0x002b\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.LockFreeLinkedListNode.AbstractAtomicDesc.onPrepare(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):java.lang.Object]\l}"];
MethodNode -> Node_46;Node_48 -> Node_49;
Node_49 -> Node_50;
Node_49 -> Node_52[style=dashed];
Node_51 -> Node_47;
Node_53 -> Node_54;
Node_53 -> Node_56[style=dashed];
Node_55 -> Node_47;
Node_57 -> Node_58;
Node_57 -> Node_66[style=dashed];
Node_62 -> Node_64[style=dashed];
Node_62 -> Node_68;
Node_68 -> Node_47;
Node_65 -> Node_47;
Node_66 -> Node_47;
Node_46 -> Node_48;
Node_50 -> Node_51;
Node_52 -> Node_53;
Node_54 -> Node_55;
Node_56 -> Node_57;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_59 -> Node_61;
Node_60 -> Node_62;
Node_64 -> Node_65;
Node_61 -> Node_62;
}

