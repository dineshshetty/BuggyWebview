digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.TryPollDesc.failure(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;)Ljava\/lang\/Object;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0001|0x0001: INSTANCE_OF  (r0 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('affected' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) kotlinx.coroutines.channels.Closed  (LINE:713)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0007 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0005|0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('affected' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) \l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|0x000f: RETURN  (r0 I:java.lang.Object) A[SYNTHETIC] (LINE:716)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0007|0x0007: INSTANCE_OF  (r0 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('affected' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) kotlinx.coroutines.channels.Send  (LINE:714)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x000e \l}"];
Node_31 [shape=record,label="{31\:\ 0x000b|0x000b: SGET  (r0 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED kotlinx.coroutines.internal.Symbol \l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x000f: RETURN  (r0 I:java.lang.Object) A[SYNTHETIC] (LINE:716)\l}"];
Node_32 [shape=record,label="{32\:\ 0x000e|RETURN\lORIG_RETURN\l|0x000e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:715)\l0x000f: RETURN  (r0 I:java.lang.Object)  (LINE:716)\l}"];
MethodNode[shape=record,label="{protected java.lang.Object kotlinx.coroutines.channels.AbstractChannel.TryPollDesc.failure((r1 'this' I:kotlinx.coroutines.channels.AbstractChannel$TryPollDesc\<E\> A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('affected' kotlinx.coroutines.internal.LockFreeLinkedListNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x000b \-\> B:33:0x000f, CROSS_EDGE: B:32:0x000e \-\> B:33:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000f: r2 'affected' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.LockFreeLinkedListNode.AbstractAtomicDesc.failure(kotlinx.coroutines.internal.LockFreeLinkedListNode):java.lang.Object]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_34;
Node_34 -> Node_25;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_35;
Node_35 -> Node_25;
Node_32 -> Node_25;
}

