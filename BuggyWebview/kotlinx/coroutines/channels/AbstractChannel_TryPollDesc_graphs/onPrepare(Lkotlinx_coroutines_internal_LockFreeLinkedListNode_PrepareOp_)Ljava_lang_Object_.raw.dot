digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.TryPollDesc.onPrepare(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;)Ljava\/lang\/Object;" {
Node_46 [shape=record,label="{46\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_48 [shape=record,label="{48\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = \l  (r5 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('prepareOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)])\l kotlinx.coroutines.internal.LockFreeLinkedListNode.PrepareOp.affected kotlinx.coroutines.internal.LockFreeLinkedListNode  (LINE:720)\l0x0002: CHECK_CAST (r0 I:kotlinx.coroutines.channels.Send) = (kotlinx.coroutines.channels.Send) (r0 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  (r1 I:kotlinx.coroutines.internal.Symbol) = \l  (r0 I:kotlinx.coroutines.channels.Send A[D('affected' kotlinx.coroutines.channels.Send)])\l  (r5 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('prepareOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)])\l type: VIRTUAL call: kotlinx.coroutines.channels.Send.tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol A[MD:(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol (m)] (LINE:721)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x000d \l}"];
Node_50 [shape=record,label="{50\:\ 0x000a|0x000a: SGET  (r1 I:java.lang.Object) =  kotlinx.coroutines.internal.LockFreeLinkedList_commonKt.REMOVE_PREPARED java.lang.Object \l}"];
Node_51 [shape=record,label="{51\:\ 0x000c|RETURN\l|0x000c: RETURN  (r1 I:java.lang.Object) \l}"];
Node_47 [shape=record,label="{47\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_52 [shape=record,label="{52\:\ 0x000d|0x000d: SGET  (r2 I:java.lang.Object) =  kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC java.lang.Object  (LINE:722)\l}"];
Node_53 [shape=record,label="{53\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('token' kotlinx.coroutines.internal.Symbol)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0014 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0011|0x0011: SGET  (r2 I:java.lang.Object) =  kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC java.lang.Object \l}"];
Node_55 [shape=record,label="{55\:\ 0x0013|RETURN\l|0x0013: RETURN  (r2 I:java.lang.Object) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0014|0x0014: INVOKE  (r2 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:723)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0018|0x0018: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x002b \l}"];
Node_58 [shape=record,label="{58\:\ 0x001a|0x001a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1133)\l0x001b: SGET  (r3 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN kotlinx.coroutines.internal.Symbol  (LINE:723)\l}"];
Node_59 [shape=record,label="{59\:\ 0x001d|0x001d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('token' kotlinx.coroutines.internal.Symbol)]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x0021 \l}"];
Node_60 [shape=record,label="{60\:\ 0x001f|0x001f: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x0022|0x0022: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0025 \l}"];
Node_64 [shape=record,label="{64\:\ 0x0025|0x0025: NEW_INSTANCE  (r2 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0027: INVOKE  (r2 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_65 [shape=record,label="{65\:\ 0x002a|0x002a: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_68 [shape=record,label="{68\:\ ?|SYNTHETIC\lRETURN\l|0x002b: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:724)\l0x002c: RETURN  (r2 I:java.lang.Object) A[SYNTHETIC]\l}"];
Node_61 [shape=record,label="{61\:\ 0x0021|0x0021: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_66 [shape=record,label="{66\:\ 0x002b|RETURN\lORIG_RETURN\l|0x002b: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:724)\l0x002c: RETURN  (r2 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.AbstractChannel.TryPollDesc.onPrepare((r4 'this' I:kotlinx.coroutines.channels.AbstractChannel$TryPollDesc\<E\> A[IMMUTABLE_TYPE, THIS]), (r5 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('prepareOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:55:0x0013 \-\> B:47:?, CROSS_EDGE: B:65:0x002a \-\> B:47:?, CROSS_EDGE: B:67:0x002c \-\> B:47:?, CROSS_EDGE: B:61:0x0021 \-\> B:62:0x0022, CROSS_EDGE: B:57:0x0018 \-\> B:66:0x002b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x0022: r2 '$i$a$\-assert\-AbstractChannel$TryPollDesc$onPrepare$1' I\l  0x0004\-0x002c: r0 'affected' Lkotlinx\/coroutines\/channels\/Send;\l  0x000d\-0x002c: r1 'token' Lkotlinx\/coroutines\/internal\/Symbol;\l  \-1 \-0x002c: r5 'prepareOp' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.LockFreeLinkedListNode.AbstractAtomicDesc.onPrepare(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):java.lang.Object]\l}"];
MethodNode -> Node_46;Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_52;
Node_50 -> Node_51;
Node_51 -> Node_47;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_56;
Node_54 -> Node_55;
Node_55 -> Node_47;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_66;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_62;
Node_62 -> Node_64;
Node_62 -> Node_68[style=dashed];
Node_64 -> Node_65;
Node_65 -> Node_47;
Node_68 -> Node_47;
Node_61 -> Node_62;
Node_66 -> Node_47;
}

