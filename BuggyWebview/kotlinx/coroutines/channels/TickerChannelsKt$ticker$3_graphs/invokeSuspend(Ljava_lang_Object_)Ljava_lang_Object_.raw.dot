digraph "CFG forkotlinx.coroutines.channels.TickerChannelsKt$ticker$3.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r10 I:kotlinx.coroutines.channels.TickerChannelsKt$ticker$3) kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.label int  (LINE:70)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:8:0x001b\l case 1: goto B:7:0x0016\l case 2: goto B:6:0x0011\l default: goto B:4:0x0009 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: NEW_INSTANCE  (r11 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:75)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r11 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: THROW  (r11 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY])  (LINE:70)\l0x0012: INVOKE  (r11 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0047|0x0047: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)]) = (r0 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0060|0x0060: SGET  (r0 I:kotlin.Unit A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)]) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:75)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0062|RETURN\l|0x0062: RETURN  (r0 I:java.lang.Object) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)]) = (r10 I:??[OBJECT, ARRAY]) \l0x0017: INVOKE  (r11 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x005f|0x005f: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)]) = (r0 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: INVOKE  (r11 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x001e: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l0x001f: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)])\l kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.L$0 java.lang.Object \l0x0021: CHECK_CAST (r2 I:kotlinx.coroutines.channels.ProducerScope) = (kotlinx.coroutines.channels.ProducerScope) (r2 I:??[OBJECT, ARRAY]) \l0x0023: IGET  (r3 I:kotlinx.coroutines.channels.TickerMode) = \l  (r1 I:kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)])\l kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.$mode kotlinx.coroutines.channels.TickerMode  (LINE:71)\l0x0025: SGET  (r4 I:int[]) =  kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.WhenMappings.$EnumSwitchMapping$0 int[] \l0x0027: INVOKE  (r3 I:int) = (r3 I:kotlinx.coroutines.channels.TickerMode) type: VIRTUAL call: kotlinx.coroutines.channels.TickerMode.ordinal():int A[MD:():int (c)]\l0x002b: AGET  (r3 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][]), (r3 I:??[int, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: SWITCH  (r3 I:??)\l case 1: goto B:16:0x0049\l case 2: goto B:11:0x0031\l default: goto B:21:0x0060 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: IGET  (r4 I:long) = \l  (r1 I:kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)])\l kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.$delayMillis long  (LINE:73)\l0x0033: IGET  (r6 I:long) = \l  (r1 I:kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)])\l kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.$initialDelayMillis long \l0x0035: INVOKE  (r8 I:kotlinx.coroutines.channels.SendChannel) = (r2 I:kotlinx.coroutines.channels.ProducerScope A[D('$this$produce' kotlinx.coroutines.channels.ProducerScope)]) type: INTERFACE call: kotlinx.coroutines.channels.ProducerScope.getChannel():kotlinx.coroutines.channels.SendChannel A[MD:():kotlinx.coroutines.channels.SendChannel\<E\> (m)]\l0x0039: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)]) \l0x003a: CHECK_CAST (r9 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r9 I:??[OBJECT, ARRAY]) \l0x003c: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x003d: IPUT  \l  (r3 I:int)\l  (r1 I:kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)])\l kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.label int \l0x003f: INVOKE  (r2 I:java.lang.Object A[D('$this$produce' kotlinx.coroutines.channels.ProducerScope)]) = (r4 I:long), (r6 I:long), (r8 I:kotlinx.coroutines.channels.SendChannel), (r9 I:kotlin.coroutines.Continuation) type: STATIC call: kotlinx.coroutines.channels.TickerChannelsKt.access$fixedDelayTicker(long, long, kotlinx.coroutines.channels.SendChannel, kotlin.coroutines.Continuation):java.lang.Object A[MD:(long, long, kotlinx.coroutines.channels.SendChannel, kotlin.coroutines.Continuation):java.lang.Object (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|0x0043: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$produce' kotlinx.coroutines.channels.ProducerScope)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0046 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|RETURN\l|0x0045: RETURN  (r0 I:java.lang.Object)  (LINE:70)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|0x0046: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)])  (LINE:73)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|0x0049: IGET  (r3 I:long) = \l  (r1 I:kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)])\l kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.$delayMillis long  (LINE:72)\l0x004b: IGET  (r5 I:long) = \l  (r1 I:kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)])\l kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.$initialDelayMillis long \l0x004d: INVOKE  (r7 I:kotlinx.coroutines.channels.SendChannel) = (r2 I:kotlinx.coroutines.channels.ProducerScope A[D('$this$produce' kotlinx.coroutines.channels.ProducerScope)]) type: INTERFACE call: kotlinx.coroutines.channels.ProducerScope.getChannel():kotlinx.coroutines.channels.SendChannel A[MD:():kotlinx.coroutines.channels.SendChannel\<E\> (m)]\l0x0051: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)]) \l0x0052: CHECK_CAST (r8 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r8 I:??[OBJECT, ARRAY]) \l0x0054: CONST  (r9 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0055: IPUT  \l  (r9 I:int)\l  (r1 I:kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)])\l kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.label int \l0x0057: INVOKE  (r2 I:java.lang.Object A[D('$this$produce' kotlinx.coroutines.channels.ProducerScope)]) = (r3 I:long), (r5 I:long), (r7 I:kotlinx.coroutines.channels.SendChannel), (r8 I:kotlin.coroutines.Continuation) type: STATIC call: kotlinx.coroutines.channels.TickerChannelsKt.access$fixedPeriodTicker(long, long, kotlinx.coroutines.channels.SendChannel, kotlin.coroutines.Continuation):java.lang.Object A[MD:(long, long, kotlinx.coroutines.channels.SendChannel, kotlin.coroutines.Continuation):java.lang.Object (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x005b|0x005b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$produce' kotlinx.coroutines.channels.ProducerScope)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x005e \l}"];
Node_18 [shape=record,label="{18\:\ 0x005d|RETURN\l|0x005d: RETURN  (r0 I:java.lang.Object)  (LINE:70)\l}"];
Node_19 [shape=record,label="{19\:\ 0x005e|0x005e: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)])  (LINE:72)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.invokeSuspend((r10 'this' I:kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 A[IMMUTABLE_TYPE, THIS]), (r11 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:22:0x0062 \-\> B:1:?, CROSS_EDGE: B:20:0x005f \-\> B:21:0x0060, CROSS_EDGE: B:13:0x0045 \-\> B:1:?, CROSS_EDGE: B:14:0x0046 \-\> B:15:0x0047, CROSS_EDGE: B:18:0x005d \-\> B:1:?, CROSS_EDGE: B:19:0x005e \-\> B:20:0x005f, CROSS_EDGE: B:9:0x002d \-\> B:21:0x0060\lDebug Info:\l  0x0012\-0x0016: r0 'this' Lkotlinx\/coroutines\/channels\/TickerChannelsKt$ticker$3;\l  0x0012\-0x0016: r11 '$result' Ljava\/lang\/Object;\l  0x0017\-0x001b: r0 'this' Lkotlinx\/coroutines\/channels\/TickerChannelsKt$ticker$3;\l  0x0017\-0x001b: r11 '$result' Ljava\/lang\/Object;\l  0x0023\-0x0043: r2 '$this$produce' Lkotlinx\/coroutines\/channels\/ProducerScope;\l  0x001f\-0x0047: r1 'this' Lkotlinx\/coroutines\/channels\/TickerChannelsKt$ticker$3;\l  0x0047\-0x0049: r0 'this' Lkotlinx\/coroutines\/channels\/TickerChannelsKt$ticker$3;\l  0x0049\-0x005b: r2 '$this$produce' Lkotlinx\/coroutines\/channels\/ProducerScope;\l  0x0049\-0x005f: r1 'this' Lkotlinx\/coroutines\/channels\/TickerChannelsKt$ticker$3;\l  0x005f\-0x0060: r0 'this' Lkotlinx\/coroutines\/channels\/TickerChannelsKt$ticker$3;\l  0x0060\-0x0075: r1 'this' Lkotlinx\/coroutines\/channels\/TickerChannelsKt$ticker$3;\l  0x001f\-0x0075: r11 '$result' Ljava\/lang\/Object;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [70=4]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_3 -> Node_7;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_15;
Node_15 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_1;
Node_7 -> Node_20;
Node_20 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_16;
Node_9 -> Node_21;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_1;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_1;
Node_19 -> Node_20;
}

