digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.Itr.hasNext(Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_793209599 {
label = "R(1:(2:(1:4)|(2:6|7)))";
node [shape=record,color=blue];
subgraph cluster_Region_26382799 {
label = "R(2:(1:4)|(2:6|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_94719108 {
label = "IF [B:27:0x0006] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0006|if (getResult() != kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED) goto L3\l}"];
subgraph cluster_Region_1720537183 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0014|RETURN\l|return kotlin.coroutines.jvm.internal.boxing.boxBoolean(hasNextResult(getResult()))\l}"];
}
}
subgraph cluster_Region_1921638115 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0015|setResult(r2.channel.pollInternal())\l}"];
Node_31 [shape=record,label="{31\:\ 0x0024|RETURN\l|return getResult() != kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED ? kotlin.coroutines.jvm.internal.boxing.boxBoolean(hasNextResult(getResult())) : hasNextSuspend(r3)\l}"];
}
}
}
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0000}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0008}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0026}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0032}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0033}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0037}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.AbstractChannel.Itr.hasNext((r2v0 'this' kotlinx.coroutines.channels.AbstractChannel$Itr\<E\> A[IMMUTABLE_TYPE, THIS]), (r3v0 kotlin.coroutines.Continuation\<? super java.lang.Boolean\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0032 \-\> B:25:?, CROSS_EDGE: B:35:0x0037 \-\> B:25:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<\-Ljava\/lang\/Boolean;\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.ChannelIterator.hasNext(kotlin.coroutines.Continuation\<? super java.lang.Boolean\>):java.lang.Object]\l}"];
MethodNode -> Node_24;Node_27 -> Node_28;
Node_27 -> Node_30[style=dashed];
Node_29 -> Node_25;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_34;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_32 -> Node_33;
Node_33 -> Node_25;
Node_34 -> Node_35;
Node_35 -> Node_25;
}

