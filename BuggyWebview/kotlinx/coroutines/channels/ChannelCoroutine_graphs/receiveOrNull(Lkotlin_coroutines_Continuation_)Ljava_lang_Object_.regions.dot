digraph "CFG forkotlinx.coroutines.channels.ChannelCoroutine.receiveOrNull(Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_598585387 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0006|RETURN\l|return r1._channel.receiveOrNull(r2)\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.ChannelCoroutine.receiveOrNull((r1v0 'this' kotlinx.coroutines.channels.ChannelCoroutine\<E\> A[IMMUTABLE_TYPE, THIS]), (r2v0 kotlin.coroutines.Continuation\<? super E\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | \{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>ERROR:Lkotlin\/DeprecationLevel;\}, message=Deprecated in favor of 'receiveCatching'. Please note that the provided replacement does not rethrow channel's close cause as 'receiveOrNull' did, for the detailed replacement please refer to the 'receiveOrNull' documentation, replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=receiveCatching().getOrNull(), imports=[[]]\}\}\}\}\}\}\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<\-TE;\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.ReceiveChannel.receiveOrNull(kotlin.coroutines.Continuation\<? super E\>):java.lang.Object]\l}"];
MethodNode -> Node_4;Node_7 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
}

