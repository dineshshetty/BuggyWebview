digraph "CFG forkotlinx.coroutines.channels.ChannelIterator.DefaultImpls.next(Lkotlinx\/coroutines\/channels\/ChannelIterator;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY]) kotlinx.coroutines.channels.ChannelIterator$next0$1 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0014 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.channels.ChannelIterator$next0$1) = (kotlinx.coroutines.channels.ChannelIterator$next0$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.channels.ChannelIterator$next0$1) kotlinx.coroutines.channels.ChannelIterator$next0$1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0014 \l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|0x000e: IGET  (r4 I:int) = (r0 I:kotlinx.coroutines.channels.ChannelIterator$next0$1) kotlinx.coroutines.channels.ChannelIterator$next0$1.label int \l0x0010: ARITH  (r4 I:int) = (r4 I:int) \- (r2 I:int) \l0x0011: IPUT  (r4 I:int), (r0 I:kotlinx.coroutines.channels.ChannelIterator$next0$1) kotlinx.coroutines.channels.ChannelIterator$next0$1.label int \l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|0x0019: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r0 I:java.lang.Object) = (r4 I:kotlinx.coroutines.channels.ChannelIterator$next0$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.channels.ChannelIterator$next0$1.result java.lang.Object \l0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0020: IGET  (r2 I:int) = (r4 I:kotlinx.coroutines.channels.ChannelIterator$next0$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.channels.ChannelIterator$next0$1.label int  (LINE:578)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|0x0022: SWITCH  (r2 I:??)\l case 0: goto B:35:0x0036\l case 1: goto B:34:0x002d\l default: goto B:32:0x0025 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0025|0x0025: NEW_INSTANCE  (r3 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:585)\l0x0027: CONST_STR  (r4 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x0029: INVOKE  (r3 I:java.lang.IllegalStateException), (r4 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x002c|0x002c: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x002d|0x002d: IGET  (r3 I:java.lang.Object) = (r4 I:kotlinx.coroutines.channels.ChannelIterator$next0$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.channels.ChannelIterator$next0$1.L$0 java.lang.Object  (LINE:578)\l0x002f: CHECK_CAST (r3 I:kotlinx.coroutines.channels.ChannelIterator) = (kotlinx.coroutines.channels.ChannelIterator) (r3 I:??[OBJECT, ARRAY]) \l0x0031: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0034: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0045|0x0045: CHECK_CAST (r2 I:java.lang.Boolean) = (java.lang.Boolean) (r2 I:??[OBJECT, ARRAY])  (LINE:584)\l0x0047: INVOKE  (r1 I:boolean) = (r2 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x004b|0x004b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0052 \l}"];
Node_40 [shape=record,label="{40\:\ 0x004d|0x004d: INVOKE  (r1 I:java.lang.Object) = (r3 I:kotlinx.coroutines.channels.ChannelIterator A[D('this' kotlinx.coroutines.channels.ChannelIterator)]) type: INTERFACE call: kotlinx.coroutines.channels.ChannelIterator.next():java.lang.Object A[MD:():E (m)] (LINE:585)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0051|RETURN\l|0x0051: RETURN  (r1 I:java.lang.Object) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0052|0x0052: NEW_INSTANCE  (r1 I:kotlinx.coroutines.channels.ClosedReceiveChannelException) =  kotlinx.coroutines.channels.ClosedReceiveChannelException  (LINE:584)\l0x0054: CONST_STR  (r2 I:java.lang.String) =  \"Channel was closed\" \l0x0056: INVOKE  (r1 I:kotlinx.coroutines.channels.ClosedReceiveChannelException), (r2 I:java.lang.String) type: DIRECT call: kotlinx.coroutines.channels.ClosedReceiveChannelException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (m)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0059|0x0059: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0036|0x0036: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0039: IPUT  \l  (r3 I:java.lang.Object A[D('this' kotlinx.coroutines.channels.ChannelIterator)])\l  (r4 I:kotlinx.coroutines.channels.ChannelIterator$next0$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.ChannelIterator$next0$1.L$0 java.lang.Object  (LINE:584)\l0x003b: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x003c: IPUT  \l  (r2 I:int)\l  (r4 I:kotlinx.coroutines.channels.ChannelIterator$next0$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.ChannelIterator$next0$1.label int \l0x003e: INVOKE  (r2 I:java.lang.Object) = \l  (r3 I:kotlinx.coroutines.channels.ChannelIterator A[D('this' kotlinx.coroutines.channels.ChannelIterator)])\l  (r4 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.channels.ChannelIterator.hasNext(kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlin.coroutines.Continuation\<? super java.lang.Boolean\>):java.lang.Object (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0042|0x0042: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0045 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0044|RETURN\l|0x0044: RETURN  (r1 I:java.lang.Object)  (LINE:578)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.channels.ChannelIterator$next0$1) =  kotlinx.coroutines.channels.ChannelIterator$next0$1 \l0x0016: INVOKE  (r0 I:kotlinx.coroutines.channels.ChannelIterator$next0$1), (r4 I:kotlin.coroutines.Continuation) type: DIRECT call: kotlinx.coroutines.channels.ChannelIterator$next0$1.\<init\>(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<? super kotlinx.coroutines.channels.ChannelIterator$next0$1\>):void (m)]\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ java.lang.Object kotlinx.coroutines.channels.ChannelIterator.DefaultImpls.next((r3 I:kotlinx.coroutines.channels.ChannelIterator A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.Continuation A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>HIDDEN:Lkotlin\/DeprecationLevel;\}, message=Since 1.3.0, binary compatibility with versions \<= 1.2.x\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x0025: r0 '$result' Ljava\/lang\/Object;\l  0x001a\-0x0025: r4 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x0031\-0x0036: r3 'this' Lkotlinx\/coroutines\/channels\/ChannelIterator;\l  0x002d\-0x0061: r0 '$result' Ljava\/lang\/Object;\l  0x0039\-0x0061: r3 'this' Lkotlinx\/coroutines\/channels\/ChannelIterator;\l  0x002d\-0x0061: r4 '$continuation' Lkotlin\/coroutines\/Continuation;\lCROSS_EDGE: B:41:0x0051 \-\> B:23:?, CROSS_EDGE: B:43:0x0059 \-\> B:23:?, CROSS_EDGE: B:37:0x0044 \-\> B:23:?, CROSS_EDGE: B:36:0x0042 \-\> B:38:0x0045, CROSS_EDGE: B:29:0x0014 \-\> B:30:0x0019, CROSS_EDGE: B:25:0x0002 \-\> B:29:0x0014\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_34;
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_23;
Node_34 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_41;
Node_41 -> Node_23;
Node_42 -> Node_43;
Node_43 -> Node_23;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_23;
Node_29 -> Node_30;
}

