digraph "CFG forkotlinx.coroutines.channels.ChannelIterator.DefaultImpls.next(Lkotlinx\/coroutines\/channels\/ChannelIterator;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000}"];
Node_25 [shape=record,label="{25\:\ 0x0002|if ((r4 instanceof kotlinx.coroutines.channels.ChannelIterator$next0$1) == false) goto L21\l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|kotlinx.coroutines.channels.ChannelIterator$next0$1 r0 = (kotlinx.coroutines.channels.ChannelIterator$next0$1) r4\l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) == 0) goto L21\l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|r0.label = r0.label \- Integer.MIN_VALUE\l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.channels.ChannelIterator$next0$1) = (r0v1 kotlinx.coroutines.channels.ChannelIterator$next0$1), (r0v5 kotlinx.coroutines.channels.ChannelIterator$next0$1) binds: [B:29:0x0014, B:28:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r4 = r0\ljava.lang.Object r0 = r4.result\ljava.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|switch(r4.label) \{\l    case 0: goto L18;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
Node_32 [shape=record,label="{32\:\ 0x0025}"];
Node_33 [shape=record,label="{33\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x002d|kotlinx.coroutines.channels.ChannelIterator r3 = (kotlinx.coroutines.channels.ChannelIterator) r4.L$0\lkotlin.ResultKt.throwOnFailure(r0)\lr2 = r0\l}"];
Node_38 [shape=record,label="{38\:\ 0x0045|PHI: r2 r3 \l  PHI: (r2v3 java.lang.Object) = (r2v2 java.lang.Object), (r2v6 java.lang.Object) binds: [B:36:0x0042, B:34:0x002d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 kotlinx.coroutines.channels.ChannelIterator) = (r3v0 kotlinx.coroutines.channels.ChannelIterator), (r3v3 kotlinx.coroutines.channels.ChannelIterator) binds: [B:36:0x0042, B:34:0x002d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_39 [shape=record,label="{39\:\ 0x004b|if (((java.lang.Boolean) r2).booleanValue() == false) goto L16\l}"];
Node_40 [shape=record,label="{40\:\ 0x004d}"];
Node_41 [shape=record,label="{41\:\ 0x0051|RETURN\l|return r3.next()\l}"];
Node_42 [shape=record,label="{42\:\ 0x0052}"];
Node_43 [shape=record,label="{43\:\ 0x0059|throw new kotlinx.coroutines.channels.ClosedReceiveChannelException(kotlinx.coroutines.channels.ChannelsKt.DEFAULT_CLOSE_MESSAGE)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0036|kotlin.ResultKt.throwOnFailure(r0)\lr4.L$0 = r3\lr4.label = 1\ljava.lang.Object r2 = r3.hasNext(r4)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0042|if (r2 != r1) goto L12\l}"];
Node_37 [shape=record,label="{37\:\ 0x0044|RETURN\l|return r1\l}"];
Node_29 [shape=record,label="{29\:\ 0x0014|kotlinx.coroutines.channels.ChannelIterator$next0$1 r0 = new kotlinx.coroutines.channels.ChannelIterator$next0$1(r4)\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ java.lang.Object kotlinx.coroutines.channels.ChannelIterator.DefaultImpls.next((r3v0 kotlinx.coroutines.channels.ChannelIterator A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.coroutines.Continuation A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>HIDDEN:Lkotlin\/DeprecationLevel;\}, message=Since 1.3.0, binary compatibility with versions \<= 1.2.x\}\}\}\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:41:0x0051 \-\> B:23:?, CROSS_EDGE: B:43:0x0059 \-\> B:23:?, CROSS_EDGE: B:37:0x0044 \-\> B:23:?, CROSS_EDGE: B:36:0x0042 \-\> B:38:0x0045, CROSS_EDGE: B:29:0x0014 \-\> B:30:0x0019, CROSS_EDGE: B:25:0x0002 \-\> B:29:0x0014\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_34;
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_23;
Node_34 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_41;
Node_41 -> Node_23;
Node_42 -> Node_43;
Node_43 -> Node_23;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_23;
Node_29 -> Node_30;
}

