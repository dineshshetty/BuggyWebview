digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.trySend\-JP2dKIU(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) = (r4 I:kotlinx.coroutines.channels.AbstractSendChannel), (r5 I:java.lang.Object A[D('element' java.lang.Object)]) type: VIRTUAL call: kotlinx.coroutines.channels.AbstractSendChannel.offerInternal(java.lang.Object):java.lang.Object A[MD:(E):java.lang.Object (m)] (LINE:155)\l0x0005: SGET  (r1 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS kotlinx.coroutines.internal.Symbol  (LINE:157)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0012 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|0x0009: SGET  (r1 I:kotlinx.coroutines.channels.ChannelResult$Companion) =  kotlinx.coroutines.channels.ChannelResult.Companion kotlinx.coroutines.channels.ChannelResult$Companion \l0x000b: SGET  (r2 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l0x000d: INVOKE  (r1 I:java.lang.Object) = (r1 I:kotlinx.coroutines.channels.ChannelResult$Companion), (r2 I:java.lang.Object) type: VIRTUAL call: kotlinx.coroutines.channels.ChannelResult.Companion.success\-JP2dKIU(java.lang.Object):java.lang.Object A[MD:\<E\>:(E):java.lang.Object (m)]\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|0x003f: RETURN  (r1 I:java.lang.Object) A[SYNTHETIC] (LINE:156)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0012|0x0012: SGET  (r1 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED kotlinx.coroutines.internal.Symbol  (LINE:158)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x002e \l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|0x0016: INVOKE  (r1 I:kotlinx.coroutines.channels.Closed) = (r4 I:kotlinx.coroutines.channels.AbstractSendChannel) type: VIRTUAL call: kotlinx.coroutines.channels.AbstractSendChannel.getClosedForSend():kotlinx.coroutines.channels.Closed A[MD:():kotlinx.coroutines.channels.Closed\<?\> (m)] (LINE:162)\l}"];
Node_28 [shape=record,label="{28\:\ 0x001a|0x001a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0023 \l}"];
Node_29 [shape=record,label="{29\:\ 0x001c|0x001c: SGET  (r1 I:kotlinx.coroutines.channels.ChannelResult$Companion) =  kotlinx.coroutines.channels.ChannelResult.Companion kotlinx.coroutines.channels.ChannelResult$Companion \l0x001e: INVOKE  (r1 I:java.lang.Object) = (r1 I:kotlinx.coroutines.channels.ChannelResult$Companion) type: VIRTUAL call: kotlinx.coroutines.channels.ChannelResult.Companion.failure\-PtdJZtk():java.lang.Object A[MD:\<E\>:():java.lang.Object (m)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0022|RETURN\l|0x0022: RETURN  (r1 I:java.lang.Object) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0023|0x0023: SGET  (r2 I:kotlinx.coroutines.channels.ChannelResult$Companion) =  kotlinx.coroutines.channels.ChannelResult.Companion kotlinx.coroutines.channels.ChannelResult$Companion  (LINE:163)\l0x0025: INVOKE  (r3 I:java.lang.Throwable) = \l  (r4 I:kotlinx.coroutines.channels.AbstractSendChannel)\l  (r1 I:kotlinx.coroutines.channels.Closed A[D('closedForSend' kotlinx.coroutines.channels.Closed)])\l type: DIRECT call: kotlinx.coroutines.channels.AbstractSendChannel.helpCloseAndGetSendException(kotlinx.coroutines.channels.Closed):java.lang.Throwable A[MD:(kotlinx.coroutines.channels.Closed\<?\>):java.lang.Throwable (m)]\l0x0029: INVOKE  (r1 I:java.lang.Object A[D('closedForSend' kotlinx.coroutines.channels.Closed)]) = (r2 I:kotlinx.coroutines.channels.ChannelResult$Companion), (r3 I:java.lang.Throwable) type: VIRTUAL call: kotlinx.coroutines.channels.ChannelResult.Companion.closed\-JP2dKIU(java.lang.Throwable):java.lang.Object A[MD:\<E\>:(java.lang.Throwable):java.lang.Object (m)]\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x003f: RETURN  (r1 I:java.lang.Object) A[SYNTHETIC] (LINE:156)\l}"];
Node_32 [shape=record,label="{32\:\ 0x002e|0x002e: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) kotlinx.coroutines.channels.Closed  (LINE:165)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0030|0x0030: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0040 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0032|0x0032: SGET  (r1 I:kotlinx.coroutines.channels.ChannelResult$Companion) =  kotlinx.coroutines.channels.ChannelResult.Companion kotlinx.coroutines.channels.ChannelResult$Companion  (LINE:166)\l0x0034: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) \l0x0035: CHECK_CAST (r2 I:kotlinx.coroutines.channels.Closed) = (kotlinx.coroutines.channels.Closed) (r2 I:??[OBJECT, ARRAY]) \l0x0037: INVOKE  (r2 I:java.lang.Throwable) = (r4 I:kotlinx.coroutines.channels.AbstractSendChannel), (r2 I:kotlinx.coroutines.channels.Closed) type: DIRECT call: kotlinx.coroutines.channels.AbstractSendChannel.helpCloseAndGetSendException(kotlinx.coroutines.channels.Closed):java.lang.Throwable A[MD:(kotlinx.coroutines.channels.Closed\<?\>):java.lang.Throwable (m)]\l0x003b: INVOKE  (r1 I:java.lang.Object) = (r1 I:kotlinx.coroutines.channels.ChannelResult$Companion), (r2 I:java.lang.Throwable) type: VIRTUAL call: kotlinx.coroutines.channels.ChannelResult.Companion.closed\-JP2dKIU(java.lang.Throwable):java.lang.Object A[MD:\<E\>:(java.lang.Throwable):java.lang.Object (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x003f|RETURN\lORIG_RETURN\l|0x003f: RETURN  (r1 I:java.lang.Object)  (LINE:156)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0040|0x0040: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:166)\l0x0042: CONST_STR  (r2 I:java.lang.String) =  \"trySend returned \"  (LINE:168)\l0x0044: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String), (r0 I:java.lang.Object A[D('result' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x0048: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004c: INVOKE  (r1 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x004f|0x004f: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.channels.AbstractSendChannel.trySend\-JP2dKIU((r4 'this' I:kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r5 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0022 \-\> B:21:?, CROSS_EDGE: B:31:0x0023 \-\> B:35:0x003f, CROSS_EDGE: B:34:0x0032 \-\> B:35:0x003f, CROSS_EDGE: B:37:0x004f \-\> B:21:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (TE;)Ljava\/lang\/Object;\lDebug Info:\l  0x0023\-0x002d: r1 'closedForSend' Lkotlinx\/coroutines\/channels\/Closed;\l  0x0004\-0x004f: r0 'result' Ljava\/lang\/Object;\l  \-1 \-0x004f: r5 'element' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.SendChannel.trySend\-JP2dKIU(E):java.lang.Object]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_38;
Node_38 -> Node_21;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_32;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_21;
Node_31 -> Node_39;
Node_39 -> Node_21;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_35 -> Node_21;
Node_36 -> Node_37;
Node_37 -> Node_21;
}

