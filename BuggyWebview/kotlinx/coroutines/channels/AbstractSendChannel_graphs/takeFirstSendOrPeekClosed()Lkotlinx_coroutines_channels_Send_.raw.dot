digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.takeFirstSendOrPeekClosed()Lkotlinx\/coroutines\/channels\/Send;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) = (r5 I:kotlinx.coroutines.channels.AbstractSendChannel) kotlinx.coroutines.channels.AbstractSendChannel.queue kotlinx.coroutines.internal.LockFreeLinkedListHead  (LINE:96)\l0x0002: CHECK_CAST (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r0 I:??[OBJECT, ARRAY]) \l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0005|LOOP_START\lLOOP:0: B:26:0x0005\-\>B:41:0x002f\l|0x0006: INVOKE  (r2 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('this_$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.getNext():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:1135)\l0x000a: CHECK_CAST (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r2 I:??[OBJECT, ARRAY]) \l0x000c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1136)\l}"];
Node_27 [shape=record,label="{27\:\ 0x000d|0x000d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('first$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('this_$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])  \-\> B:29:0x0011 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0011|0x0011: INSTANCE_OF  (r4 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('first$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) kotlinx.coroutines.channels.Send  (LINE:1137)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0013|0x0013: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0017 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0017|0x0017: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('first$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])  (LINE:1138)\l0x0018: CHECK_CAST (r3 I:kotlinx.coroutines.channels.Send) = (kotlinx.coroutines.channels.Send) (r3 I:??[OBJECT, ARRAY]) \l0x001a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001b: INSTANCE_OF  (r3 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('it' kotlinx.coroutines.channels.Send)]) kotlinx.coroutines.channels.Closed  (LINE:96)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001d|0x001d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' kotlinx.coroutines.channels.Send)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0026 \l}"];
Node_34 [shape=record,label="{34\:\ 0x001f|0x001f: INVOKE  (r3 I:boolean) = \l  (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('first$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.isRemoved():boolean A[MD:():boolean (m)] (LINE:1140)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0023|0x0023: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0026 \l}"];
Node_43 [shape=record,label="{43\:\ 0x002c|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x002c|0x002c: CHECK_CAST (r2 I:kotlinx.coroutines.channels.Send) = (kotlinx.coroutines.channels.Send) (r2 I:??[OBJECT, ARRAY] A[D('first$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])  (LINE:1145)\l}"];
Node_40 [shape=record,label="{40\:\ 0x002e|RETURN\l|0x002e: RETURN  (r2 I:kotlinx.coroutines.channels.Send)  (LINE:96)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0026|0x0026: INVOKE  (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = \l  (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('first$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.removeOrNext():kotlinx.coroutines.internal.LockFreeLinkedListNode A[MD:():kotlinx.coroutines.internal.LockFreeLinkedListNode (m)] (LINE:1142)\l}"];
Node_38 [shape=record,label="{38\:\ 0x002a|0x002a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('next$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x002f  (LINE:1143)\l}"];
Node_41 [shape=record,label="{41\:\ 0x002f|LOOP_END\lLOOP:0: B:26:0x0005\-\>B:41:0x002f\l|0x002f: INVOKE  \l  (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('next$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.helpRemovePrev():void A[MD:():void (m)] (LINE:1145)\l}"];
Node_44 [shape=record,label="{44\:\ 0x002c|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0015|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0015|0x0015: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('first$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) = (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x000f|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x000f|0x000f: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('first$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) = (r3 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.channels.Send kotlinx.coroutines.channels.AbstractSendChannel.takeFirstSendOrPeekClosed((r5 'this' I:kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0015 \-\> B:39:0x002c, CROSS_EDGE: B:38:0x002a \-\> B:39:0x002c, BACK_EDGE: B:41:0x002f \-\> B:26:0x0005, CROSS_EDGE: B:35:0x0023 \-\> B:39:0x002c, CROSS_EDGE: B:33:0x001d \-\> B:37:0x0026\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x001d: r3 'it' Lkotlinx\/coroutines\/channels\/Send;\l  0x001b\-0x001d: r4 '$i$a$\-removeFirstIfIsInstanceOfOrPeekIf\-AbstractSendChannel$takeFirstSendOrPeekClosed$1' I\l  0x0004\-0x002c: r0 'this_$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x0005\-0x002c: r1 '$i$f$removeFirstIfIsInstanceOfOrPeekIf' I\l  0x000c\-0x002c: r2 'first$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x002a\-0x002c: r3 'next$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x002f\-0x0032: r2 'first$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x002f\-0x0032: r3 'next$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x002f\-0x0032: r0 'this_$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x002f\-0x0032: r1 '$i$f$removeFirstIfIsInstanceOfOrPeekIf' I\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_45[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_32;
Node_30 -> Node_42[style=dashed];
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_43[style=dashed];
Node_43 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_24;
Node_37 -> Node_38;
Node_38 -> Node_41;
Node_38 -> Node_44[style=dashed];
Node_41 -> Node_26;
Node_44 -> Node_39;
Node_42 -> Node_31;
Node_31 -> Node_39;
Node_45 -> Node_28;
Node_28 -> Node_39;
}

