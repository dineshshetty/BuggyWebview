digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.offerSelectInternal(Ljava\/lang\/Object;Lkotlinx\/coroutines\/selects\/SelectInstance;)Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc) = (r4 I:kotlinx.coroutines.channels.AbstractSendChannel), (r5 I:java.lang.Object A[D('element' java.lang.Object)]) type: VIRTUAL call: kotlinx.coroutines.channels.AbstractSendChannel.describeTryOffer(java.lang.Object):kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc A[MD:(E):kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc\<E\> (m)] (LINE:69)\l0x0004: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('offerOp' kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc)])  (LINE:70)\l0x0005: CHECK_CAST (r1 I:kotlinx.coroutines.internal.AtomicDesc) = (kotlinx.coroutines.internal.AtomicDesc) (r1 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r1 I:java.lang.Object) = \l  (r6 I:kotlinx.coroutines.selects.SelectInstance A[D('select' kotlinx.coroutines.selects.SelectInstance)])\l  (r1 I:kotlinx.coroutines.internal.AtomicDesc)\l type: INTERFACE call: kotlinx.coroutines.selects.SelectInstance.performAtomicTrySelect(kotlinx.coroutines.internal.AtomicDesc):java.lang.Object A[MD:(kotlinx.coroutines.internal.AtomicDesc):java.lang.Object (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('failure' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x000e  (LINE:71)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000d|RETURN\l|0x000d: RETURN  (r1 I:java.lang.Object A[D('failure' java.lang.Object)]) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x000e|0x000e: INVOKE  (r2 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc A[D('offerOp' kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc)])\l type: VIRTUAL call: kotlinx.coroutines.channels.AbstractSendChannel.TryOfferDesc.getResult():java.lang.Object A[MD:():T (m)] (LINE:72)\l0x0012: CHECK_CAST (r2 I:kotlinx.coroutines.channels.ReceiveOrClosed) = (kotlinx.coroutines.channels.ReceiveOrClosed) (r2 I:??[OBJECT, ARRAY]) \l0x0014: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.ReceiveOrClosed A[D('receive' kotlinx.coroutines.channels.ReceiveOrClosed)])\l  (r5 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.completeResumeReceive(java.lang.Object):void A[MD:(E):void (m)] (LINE:73)\l0x0017: INVOKE  (r3 I:java.lang.Object) = (r2 I:kotlinx.coroutines.channels.ReceiveOrClosed A[D('receive' kotlinx.coroutines.channels.ReceiveOrClosed)]) type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.getOfferResult():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:74)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|RETURN\l|0x001b: RETURN  (r3 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.AbstractSendChannel.offerSelectInternal((r4 'this' I:kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r5 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlinx.coroutines.selects.SelectInstance\<?\> A[D('select' kotlinx.coroutines.selects.SelectInstance), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001b \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (TE;Lkotlinx\/coroutines\/selects\/SelectInstance\<*\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x0004\-0x001b: r0 'offerOp' Lkotlinx\/coroutines\/channels\/AbstractSendChannel$TryOfferDesc;\l  0x000b\-0x001b: r1 'failure' Ljava\/lang\/Object;\l  0x0014\-0x001b: r2 'receive' Lkotlinx\/coroutines\/channels\/ReceiveOrClosed;\l  \-1 \-0x001b: r5 'element' Ljava\/lang\/Object;\l  \-1 \-0x001b: r6 'select' Lkotlinx\/coroutines\/selects\/SelectInstance;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractSendChannel.offerSelectInternal(E, kotlinx.coroutines.selects.SelectInstance\<?\>):java.lang.Object]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

