digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.getClosedForReceive()Lkotlinx\/coroutines\/channels\/Closed;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|kotlinx.coroutines.internal.LockFreeLinkedListNode r0 = r3.queue.getNextNode()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|if ((r0 instanceof kotlinx.coroutines.channels.Closed) == false) goto L9\l}"];
Node_15 [shape=record,label="{15\:\ 0x000b|kotlinx.coroutines.channels.Closed r0 = (kotlinx.coroutines.channels.Closed) r0\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|PHI: r0 \l  PHI: (r0v3 kotlinx.coroutines.channels.Closed) = (r0v2 kotlinx.coroutines.channels.Closed), (r0v4 kotlinx.coroutines.channels.Closed) binds: [B:16:0x000e, B:15:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != null) goto L5\l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|r1 = r0\lhelpClose(r1)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0018|RETURN\lORIG_RETURN\l|return r0\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_16 [shape=record,label="{16\:\ 0x000e|r0 = null\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.channels.Closed\<?\> kotlinx.coroutines.channels.AbstractSendChannel.getClosedForReceive((r3v0 'this' kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000f \-\> B:20:0x0018, CROSS_EDGE: B:16:0x000e \-\> B:17:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: ()Lkotlinx\/coroutines\/channels\/Closed\<*\>;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_21[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

