digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.helpClose(Lkotlinx\/coroutines\/channels\/Closed;)V" {
Node_35 [shape=record,label="{35\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:324)\l0x0001: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0002: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.lang.Object), (r1 I:int), (r0 I:kotlin.jvm.internal.DefaultConstructorMarker) type: STATIC call: kotlinx.coroutines.internal.InlineList.constructor\-impl$default(java.lang.Object, int, kotlin.jvm.internal.DefaultConstructorMarker):java.lang.Object A[MD:(java.lang.Object, int, kotlin.jvm.internal.DefaultConstructorMarker):java.lang.Object (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0006|LOOP_START\lLOOP:0: B:38:0x0006\-\>B:66:0x0006\l|0x0007: INVOKE  (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (r8 I:kotlinx.coroutines.channels.Closed A[D('closed' kotlinx.coroutines.channels.Closed)]) type: VIRTUAL call: kotlinx.coroutines.channels.Closed.getPrevNode():kotlinx.coroutines.internal.LockFreeLinkedListNode A[MD:():kotlinx.coroutines.internal.LockFreeLinkedListNode (m)] (LINE:328)\l0x000b: INSTANCE_OF  (r4 I:boolean) = (r3 I:??[OBJECT, ARRAY]) kotlinx.coroutines.channels.Receive \l}"];
Node_39 [shape=record,label="{39\:\ 0x000d|0x000d: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0012 \l}"];
Node_40 [shape=record,label="{40\:\ 0x000f|0x000f: CHECK_CAST (r3 I:kotlinx.coroutines.channels.Receive) = (kotlinx.coroutines.channels.Receive) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0013|0x0013: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0051 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0051|0x0052: INVOKE  (r4 I:boolean) = (r3 I:kotlinx.coroutines.channels.Receive A[D('previous' kotlinx.coroutines.channels.Receive)]) type: VIRTUAL call: kotlinx.coroutines.channels.Receive.remove():boolean A[MD:():boolean (m)] (LINE:329)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0056|0x0056: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x005c \l}"];
Node_64 [shape=record,label="{64\:\ 0x005c|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x005c|0x005c: INVOKE  (r2 I:java.lang.Object A[D('closedList' java.lang.Object)]) = \l  (r2 I:java.lang.Object A[D('closedList' java.lang.Object)])\l  (r3 I:java.lang.Object A[D('previous' kotlinx.coroutines.channels.Receive)])\l type: STATIC call: kotlinx.coroutines.internal.InlineList.plus\-FjFbRPM(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(java.lang.Object, E):java.lang.Object (m)] (LINE:336)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0006|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:38:0x0006\-\>B:66:0x0006\l}"];
Node_65 [shape=record,label="{65\:\ 0x0058|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0058|0x0058: INVOKE  (r3 I:kotlinx.coroutines.channels.Receive A[D('previous' kotlinx.coroutines.channels.Receive)]) type: VIRTUAL call: kotlinx.coroutines.channels.Receive.helpRemove():void A[MD:():void (m)] (LINE:332)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0006|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x0015|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0015|0x0015: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:342)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0017|0x0017: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('closedList' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x001a  (LINE:1174)\l}"];
Node_46 [shape=record,label="{46\:\ 0x001a|0x001a: INSTANCE_OF  (r3 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('closedList' java.lang.Object)]) java.util.ArrayList  (LINE:1175)\l}"];
Node_47 [shape=record,label="{47\:\ 0x001c|0x001c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0026 \l}"];
Node_48 [shape=record,label="{48\:\ 0x001e|0x001e: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('closedList' java.lang.Object)]) \l0x001f: CHECK_CAST (r1 I:kotlinx.coroutines.channels.Receive) = (kotlinx.coroutines.channels.Receive) (r1 I:??[OBJECT, ARRAY]) \l0x0021: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0022: INVOKE  \l  (r1 I:kotlinx.coroutines.channels.Receive A[D('it' kotlinx.coroutines.channels.Receive)])\l  (r8 I:kotlinx.coroutines.channels.Closed A[D('closed' kotlinx.coroutines.channels.Closed)])\l type: VIRTUAL call: kotlinx.coroutines.channels.Receive.resumeReceiveClosed(kotlinx.coroutines.channels.Closed):void A[MD:(kotlinx.coroutines.channels.Closed\<?\>):void (m)] (LINE:342)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0026|0x0026: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('closedList' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0049  (LINE:1177)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0028|0x0028: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('closedList' java.lang.Object)]) \l0x0029: CHECK_CAST (r3 I:java.util.ArrayList) = (java.util.ArrayList) (r3 I:??[OBJECT, ARRAY]) \l0x002b: INVOKE  (r4 I:int) = (r3 I:java.util.ArrayList A[D('list$iv' java.util.ArrayList)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)] (LINE:1178)\l0x002f: ARITH  (r4 I:int) = (r4 I:int) \- (r1 I:int) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0030|0x0030: IF  (r4 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:55:0x0042 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0032|LOOP_START\lLOOP:1: B:52:0x0032\-\>B:53:0x003f\l|0x0032: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0033: ARITH  (r4 I:int) = (r4 I:int) + (\-1 int) \l0x0035: INVOKE  (r5 I:java.lang.Object) = (r3 I:java.util.ArrayList A[D('list$iv' java.util.ArrayList)]), (r1 I:int A[D('i$iv' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:1179)\l0x0039: CHECK_CAST (r5 I:kotlinx.coroutines.channels.Receive) = (kotlinx.coroutines.channels.Receive) (r5 I:??[OBJECT, ARRAY]) \l0x003b: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x003c: INVOKE  \l  (r5 I:kotlinx.coroutines.channels.Receive A[D('it' kotlinx.coroutines.channels.Receive)])\l  (r8 I:kotlinx.coroutines.channels.Closed A[D('closed' kotlinx.coroutines.channels.Closed)])\l type: VIRTUAL call: kotlinx.coroutines.channels.Receive.resumeReceiveClosed(kotlinx.coroutines.channels.Closed):void A[MD:(kotlinx.coroutines.channels.Closed\<?\>):void (m)] (LINE:342)\l}"];
Node_53 [shape=record,label="{53\:\ 0x003f|LOOP_END\lLOOP:1: B:52:0x0032\-\>B:53:0x003f\l|0x003f: IF  (r4 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:52:0x0032  (LINE:1178)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0042|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0049|0x0049: NEW_INSTANCE  (r1 I:java.lang.NullPointerException) =  java.lang.NullPointerException  (LINE:1177)\l0x004b: CONST_STR  (r3 I:java.lang.String) =  \"null cannot be cast to non\-null type java.util.ArrayList\<E of kotlinx.coroutines.internal.InlineList\>\{ kotlin.collections.TypeAliasesKt.ArrayList\<E of kotlinx.coroutines.internal.InlineList\> \}\" \l0x004d: INVOKE  (r1 I:java.lang.NullPointerException), (r3 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0050|0x0050: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_36 [shape=record,label="{36\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_55 [shape=record,label="{55\:\ 0x0042|0x0042: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('$i$f$forEachReversed\-impl' int)]) = (r8 I:??[OBJECT, ARRAY] A[D('closed' kotlinx.coroutines.channels.Closed)])  (LINE:344)\l0x0043: CHECK_CAST (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r0 I:??[OBJECT, ARRAY]) \l0x0045: INVOKE  (r7 I:kotlinx.coroutines.channels.AbstractSendChannel), (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) type: VIRTUAL call: kotlinx.coroutines.channels.AbstractSendChannel.onClosedIdempotent(kotlinx.coroutines.internal.LockFreeLinkedListNode):void A[MD:(kotlinx.coroutines.internal.LockFreeLinkedListNode):void (m)]\l}"];
Node_56 [shape=record,label="{56\:\ 0x0048|RETURN\l|0x0048: RETURN    (LINE:345)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0012|0x0012: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.channels.AbstractSendChannel.helpClose((r7 'this' I:kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r8 I:kotlinx.coroutines.channels.Closed\<?\> A[D('closed' kotlinx.coroutines.channels.Closed), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:53:0x003f \-\> B:52:0x0032, CROSS_EDGE: B:53:0x003f \-\> B:55:0x0042, CROSS_EDGE: B:51:0x0030 \-\> B:55:0x0042, CROSS_EDGE: B:58:0x0050 \-\> B:36:?, CROSS_EDGE: B:44:0x0017 \-\> B:55:0x0042, BACK_EDGE: B:61:0x0058 \-\> B:38:0x0006, BACK_EDGE: B:62:0x005c \-\> B:38:0x0006, CROSS_EDGE: B:41:0x0012 \-\> B:42:0x0013\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x0025: r1 'it' Lkotlinx\/coroutines\/channels\/Receive;\l  0x0022\-0x0025: r3 '$i$a$\-forEachReversed\-impl\-AbstractSendChannel$helpClose$1' I\l  0x003b\-0x003f: r5 'it' Lkotlinx\/coroutines\/channels\/Receive;\l  0x003c\-0x003f: r6 '$i$a$\-forEachReversed\-impl\-AbstractSendChannel$helpClose$1' I\l  0x0033\-0x0041: r1 'i$iv' I\l  0x002b\-0x0041: r3 'list$iv' Ljava\/util\/ArrayList;\l  0x0016\-0x0042: r0 '$i$f$forEachReversed\-impl' I\l  0x0049\-0x0051: r0 '$i$f$forEachReversed\-impl' I\l  0x0052\-0x0060: r3 'previous' Lkotlinx\/coroutines\/channels\/Receive;\l  0x0006\-0x0060: r2 'closedList' Ljava\/lang\/Object;\l  \-1 \-0x0060: r8 'closed' Lkotlinx\/coroutines\/channels\/Closed;\lTYPE_VARS: [E]\lSIGNATURE: (Lkotlinx\/coroutines\/channels\/Closed\<*\>;)V\l}"];
MethodNode -> Node_35;Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_42;
Node_42 -> Node_59;
Node_42 -> Node_63[style=dashed];
Node_59 -> Node_60;
Node_60 -> Node_64;
Node_60 -> Node_65[style=dashed];
Node_64 -> Node_62;
Node_62 -> Node_67;
Node_67 -> Node_66;
Node_66 -> Node_38;
Node_65 -> Node_61;
Node_61 -> Node_68;
Node_68 -> Node_66;
Node_63 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_46;
Node_44 -> Node_55[style=dashed];
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_55;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_57;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_55;
Node_52 -> Node_53;
Node_53 -> Node_52;
Node_53 -> Node_69[style=dashed];
Node_69 -> Node_55;
Node_57 -> Node_58;
Node_58 -> Node_36;
Node_55 -> Node_56;
Node_56 -> Node_36;
Node_41 -> Node_42;
}

