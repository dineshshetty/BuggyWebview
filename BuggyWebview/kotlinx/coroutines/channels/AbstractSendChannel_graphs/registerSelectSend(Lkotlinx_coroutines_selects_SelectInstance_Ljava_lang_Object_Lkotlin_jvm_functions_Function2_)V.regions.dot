digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.registerSelectSend(Lkotlinx\/coroutines\/selects\/SelectInstance;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2;)V" {
subgraph cluster_Region_53333267 {
label = "R(1:(3:(2:5|(2:21|22)(1:(1:19)(1:(2:14|15))))|23|(2:(1:45)|(1:(1:(1:(2:33|34)(1:(1:40)(1:38))))))))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_974623155 {
label = "LOOP:0: (3:(2:5|(2:21|22)(1:(1:19)(1:(2:14|15))))|23|(2:(1:45)|(1:(1:(1:(2:33|34)(1:(1:40)(1:38)))))))";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x0005|if (r6.isSelected() == false) goto L3\l}"];
subgraph cluster_Region_1316768302 {
label = "R(3:(2:5|(2:21|22)(1:(1:19)(1:(2:14|15))))|23|(2:(1:45)|(1:(1:(1:(2:33|34)(1:(1:40)(1:38)))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1427712747 {
label = "IF [B:58:0x000c] THEN: R(2:5|(2:21|22)(1:(1:19)(1:(2:14|15)))) ELSE: null";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x000c|if (isFullImpl() != false) goto L5\l}"];
subgraph cluster_Region_1918545060 {
label = "R(2:5|(2:21|22)(1:(1:19)(1:(2:14|15))))";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x000e|kotlinx.coroutines.channels.AbstractSendChannel$SendSelect kotlinx.coroutines.channels.AbstractSendChannel.SendSelect r0 = new kotlinx.coroutines.channels.AbstractSendChannel.SendSelect(r7, r5, r6, r8)\ljava.lang.Object java.lang.Object r1 = enqueueSend(r0)\l}"];
subgraph cluster_IfRegion_172136441 {
label = "IF [B:60:0x001b] THEN: R(2:21|22) ELSE: R(1:(1:19)(1:(2:14|15)))";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x001b|if (r1 == null) goto L20\l}"];
subgraph cluster_Region_239799528 {
label = "R(2:21|22)";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x001d|r6.disposeOnSelect(r0)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0023|RETURN\l|return\l}"];
}
subgraph cluster_Region_1604858776 {
label = "R(1:(1:19)(1:(2:14|15))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1229086446 {
label = "IF [B:64:0x0026] THEN: R(1:19) ELSE: R(1:(2:14|15)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x0026|if ((r1 instanceof kotlinx.coroutines.channels.Closed) != false) goto L17\l}"];
subgraph cluster_Region_1851450606 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x005d|throw kotlinx.coroutines.internal.StackTraceRecovery.recoverStackTrace(helpCloseAndGetSendException(r7, (kotlinx.coroutines.channels.Closed) r1))\l}"];
}
subgraph cluster_Region_847259691 {
label = "R(1:(2:14|15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_950045057 {
label = "IF [B:66:0x002a, B:69:0x002f] THEN: R(2:14|15) ELSE: null";
node [shape=record,color=blue];
Node_66 [shape=record,label="{66\:\ 0x002a|if (r1 != kotlinx.coroutines.channels.AbstractChannelKt.ENQUEUE_FAILED) goto L11\l}"];
Node_69 [shape=record,label="{69\:\ 0x002f|ADDED_TO_REGION\l|if ((r1 instanceof kotlinx.coroutines.channels.Receive) == false) goto L13\l}"];
subgraph cluster_Region_641940531 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x0032}"];
Node_72 [shape=record,label="{72\:\ 0x0051|throw new java.lang.IllegalStateException((\"enqueueSend returned \" + r1 + ' ').toString())\l}"];
}
}
}
}
}
}
}
}
Node_75 [shape=record,label="{75\:\ 0x005e|java.lang.Object java.lang.Object r0 = offerSelectInternal(r7, r6)\l}"];
subgraph cluster_Region_874298817 {
label = "R(2:(1:45)|(1:(1:(1:(2:33|34)(1:(1:40)(1:38))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_492577817 {
label = "IF [B:76:0x0067] THEN: R(1:45) ELSE: null";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x0067|if (r0 == kotlinx.coroutines.selects.SelectKt.getALREADY_SELECTED()) goto L44\l}"];
subgraph cluster_Region_684623835 {
label = "R(1:45)";
node [shape=record,color=blue];
Node_77 [shape=record,label="{77\:\ 0x0069|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_920933801 {
label = "R(1:(1:(1:(2:33|34)(1:(1:40)(1:38)))))";
node [shape=record,color=blue];
subgraph cluster_Region_85389870 {
label = "R(1:(1:(2:33|34)(1:(1:40)(1:38))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1390174317 {
label = "IF [B:79:0x006c, B:82:0x0071] THEN: R(1:(2:33|34)(1:(1:40)(1:38))) ELSE: null";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x006c|if (r0 != kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED) goto L27\l}"];
Node_82 [shape=record,label="{82\:\ 0x0071|ADDED_TO_REGION\l|if (r0 != kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC) goto L30\l}"];
subgraph cluster_Region_1412802040 {
label = "R(1:(2:33|34)(1:(1:40)(1:38)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1274183102 {
label = "IF [B:85:0x0076] THEN: R(2:33|34) ELSE: R(1:(1:40)(1:38))";
node [shape=record,color=blue];
Node_85 [shape=record,label="{85\:\ 0x0076|if (r0 == kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS) goto L33\l}"];
subgraph cluster_Region_135856378 {
label = "R(2:33|34)";
node [shape=record,color=blue];
Node_86 [shape=record,label="{86\:\ 0x0078|kotlinx.coroutines.intrinsics.Undispatched.startCoroutineUnintercepted(r8, r5, r6.getCompletion())\l}"];
Node_87 [shape=record,label="{87\:\ 0x007f|RETURN\l|return\l}"];
}
subgraph cluster_Region_482624845 {
label = "R(1:(1:40)(1:38)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1744008148 {
label = "IF [B:89:0x0082] THEN: R(1:40) ELSE: R(1:38) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_89 [shape=record,label="{89\:\ 0x0082|if ((r0 instanceof kotlinx.coroutines.channels.Closed) != true) goto L39\l}"];
subgraph cluster_Region_460586975 {
label = "R(1:40)";
node [shape=record,color=blue];
Node_93 [shape=record,label="{93\:\ 0x009f|throw new java.lang.IllegalStateException(kotlin.jvm.internal.Intrinsics.stringPlus(\"offerSelectInternal returned \", r0).toString())\l}"];
}
subgraph cluster_Region_706554836 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_91 [shape=record,label="{91\:\ 0x008f|throw kotlinx.coroutines.internal.StackTraceRecovery.recoverStackTrace(helpCloseAndGetSendException(r7, (kotlinx.coroutines.channels.Closed) r0))\l}"];
}
}
}
}
}
}
}
}
}
}
}
}
Node_52 [shape=record,color=red,label="{52\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x0000|LOOP_START\lLOOP:0: B:54:0x0000\-\>B:101:0x0000\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x0008}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0024}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x0028}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x002d}"];
Node_98 [shape=record,color=red,label="{98\:\ 0x0032|SYNTHETIC\l}"];
Node_53 [shape=record,color=red,label="{53\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_95 [shape=record,color=red,label="{95\:\ 0x0052|SYNTHETIC\l}"];
Node_73 [shape=record,color=red,label="{73\:\ 0x0052}"];
Node_99 [shape=record,color=red,label="{99\:\ 0x001d|SYNTHETIC\l}"];
Node_78 [shape=record,color=red,label="{78\:\ 0x006a}"];
Node_97 [shape=record,color=red,label="{97\:\ 0x006f|SYNTHETIC\l}"];
Node_81 [shape=record,color=red,label="{81\:\ 0x006f}"];
Node_100 [shape=record,color=red,label="{100\:\ 0x0074|SYNTHETIC\l}"];
Node_84 [shape=record,color=red,label="{84\:\ 0x0074}"];
Node_88 [shape=record,color=red,label="{88\:\ 0x0080}"];
Node_90 [shape=record,color=red,label="{90\:\ 0x0084}"];
Node_92 [shape=record,color=red,label="{92\:\ 0x0090}"];
Node_103 [shape=record,color=red,label="{103\:\ 0x0000|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_101 [shape=record,color=red,label="{101\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:54:0x0000\-\>B:101:0x0000\l}"];
Node_102 [shape=record,color=red,label="{102\:\ 0x0000|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_96 [shape=record,color=red,label="{96\:\ 0x0069|SYNTHETIC\l}"];
Node_94 [shape=record,color=red,label="{94\:\ 0x0007|SYNTHETIC\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x0007}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.channels.AbstractSendChannel.registerSelectSend((r5v0 'this' kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r6v0 kotlinx.coroutines.selects.SelectInstance\<? super R\> A[D('select' kotlinx.coroutines.selects.SelectInstance), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.channels.SendChannel\<? super E\>, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\> A[D('block' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:62:0x0023 \-\> B:53:?, CROSS_EDGE: B:72:0x0051 \-\> B:53:?, CROSS_EDGE: B:77:0x0069 \-\> B:53:?, CROSS_EDGE: B:87:0x007f \-\> B:53:?, CROSS_EDGE: B:91:0x008f \-\> B:53:?, CROSS_EDGE: B:93:0x009f \-\> B:53:?, BACK_EDGE: B:82:0x0071 \-\> B:54:0x0000, BACK_EDGE: B:79:0x006c \-\> B:54:0x0000, CROSS_EDGE: B:66:0x002a \-\> B:75:0x005e, CROSS_EDGE: B:74:0x005d \-\> B:53:?, CROSS_EDGE: B:58:0x000c \-\> B:75:0x005e\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, E]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/selects\/SelectInstance\<\-TR;\>;TE;Lkotlin\/jvm\/functions\/Function2\<\-Lkotlinx\/coroutines\/channels\/SendChannel\<\-TE;\>;\-Lkotlin\/coroutines\/Continuation\<\-TR;\>;+Ljava\/lang\/Object;\>;)V\l}"];
MethodNode -> Node_52;Node_55 -> Node_57;
Node_55 -> Node_94[style=dashed];
Node_58 -> Node_59;
Node_58 -> Node_75[style=dashed];
Node_59 -> Node_60;
Node_60 -> Node_63[style=dashed];
Node_60 -> Node_99;
Node_61 -> Node_62;
Node_62 -> Node_53;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_95;
Node_74 -> Node_53;
Node_66 -> Node_68;
Node_66 -> Node_75[style=dashed];
Node_69 -> Node_75[style=dashed];
Node_69 -> Node_98;
Node_71 -> Node_72;
Node_72 -> Node_53;
Node_75 -> Node_76;
Node_76 -> Node_78[style=dashed];
Node_76 -> Node_96;
Node_77 -> Node_53;
Node_79 -> Node_97;
Node_79 -> Node_102[style=dashed];
Node_82 -> Node_100;
Node_82 -> Node_103[style=dashed];
Node_85 -> Node_86;
Node_85 -> Node_88[style=dashed];
Node_86 -> Node_87;
Node_87 -> Node_53;
Node_89 -> Node_90[style=dashed];
Node_89 -> Node_92;
Node_93 -> Node_53;
Node_91 -> Node_53;
Node_52 -> Node_54;
Node_54 -> Node_55;
Node_57 -> Node_58;
Node_63 -> Node_64;
Node_65 -> Node_66;
Node_68 -> Node_69;
Node_98 -> Node_71;
Node_95 -> Node_73;
Node_73 -> Node_74;
Node_99 -> Node_61;
Node_78 -> Node_79;
Node_97 -> Node_81;
Node_81 -> Node_82;
Node_100 -> Node_84;
Node_84 -> Node_85;
Node_88 -> Node_89;
Node_90 -> Node_91;
Node_92 -> Node_93;
Node_103 -> Node_101;
Node_101 -> Node_54;
Node_102 -> Node_101;
Node_96 -> Node_77;
Node_94 -> Node_56;
Node_56 -> Node_53;
}

