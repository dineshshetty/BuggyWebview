digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.offerInternal(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|LOOP_START\lLOOP:0: B:25:0x0000\-\>B:30:0x000f\l|0x0001: INVOKE  (r0 I:kotlinx.coroutines.channels.ReceiveOrClosed) = (r4 I:kotlinx.coroutines.channels.AbstractSendChannel) type: VIRTUAL call: kotlinx.coroutines.channels.AbstractSendChannel.takeFirstReceiveOrPeekClosed():kotlinx.coroutines.channels.ReceiveOrClosed A[MD:():kotlinx.coroutines.channels.ReceiveOrClosed\<E\> (m)] (LINE:52)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x000a \l}"];
Node_29 [shape=record,label="{29\:\ 0x000a|0x000a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:53)\l0x000b: INVOKE  (r1 I:kotlinx.coroutines.internal.Symbol) = \l  (r0 I:kotlinx.coroutines.channels.ReceiveOrClosed A[D('receive' kotlinx.coroutines.channels.ReceiveOrClosed)])\l  (r5 I:java.lang.Object A[D('element' java.lang.Object)])\l  (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)\l type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.tryResumeReceive(java.lang.Object, kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol A[MD:(E, kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol (m)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x000f|LOOP_END\lLOOP:0: B:25:0x0000\-\>B:30:0x000f\l|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('token' kotlinx.coroutines.internal.Symbol)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0000  (LINE:54)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0011|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0011|0x0011: INVOKE  (r2 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:55)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0015|0x0015: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0028 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0017|0x0017: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1133)\l0x0018: SGET  (r3 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN kotlinx.coroutines.internal.Symbol  (LINE:55)\l}"];
Node_34 [shape=record,label="{34\:\ 0x001a|0x001a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('token' kotlinx.coroutines.internal.Symbol)]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x001e \l}"];
Node_35 [shape=record,label="{35\:\ 0x001c|0x001c: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x001f|0x001f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0022 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0022|0x0022: NEW_INSTANCE  (r2 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0024: INVOKE  (r2 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0027|0x0027: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x001e|0x001e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0028|0x0028: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.ReceiveOrClosed A[D('receive' kotlinx.coroutines.channels.ReceiveOrClosed)])\l  (r5 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.completeResumeReceive(java.lang.Object):void A[MD:(E):void (m)] (LINE:56)\l0x002b: INVOKE  (r2 I:java.lang.Object) = (r0 I:kotlinx.coroutines.channels.ReceiveOrClosed A[D('receive' kotlinx.coroutines.channels.ReceiveOrClosed)]) type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.getOfferResult():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:57)\l}"];
Node_42 [shape=record,label="{42\:\ 0x002f|RETURN\l|0x002f: RETURN  (r2 I:java.lang.Object) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0007|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0007|0x0007: SGET  (r0 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED kotlinx.coroutines.internal.Symbol \l}"];
Node_28 [shape=record,label="{28\:\ 0x0009|RETURN\l|0x0009: RETURN  (r0 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.AbstractSendChannel.offerInternal((r4 'this' I:kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r5 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:40:0x0027 \-\> B:24:?, CROSS_EDGE: B:42:0x002f \-\> B:24:?, CROSS_EDGE: B:36:0x001e \-\> B:37:0x001f, CROSS_EDGE: B:32:0x0015 \-\> B:41:0x0028, BACK_EDGE: B:30:0x000f \-\> B:25:0x0000\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (TE;)Ljava\/lang\/Object;\lDebug Info:\l  0x0018\-0x001f: r2 '$i$a$\-assert\-AbstractSendChannel$offerInternal$1' I\l  0x000a\-0x0030: r0 'receive' Lkotlinx\/coroutines\/channels\/ReceiveOrClosed;\l  0x000f\-0x0030: r1 'token' Lkotlinx\/coroutines\/internal\/Symbol;\l  \-1 \-0x0030: r5 'element' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractSendChannel.offerInternal(E):java.lang.Object]\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_29;
Node_26 -> Node_44[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_25;
Node_30 -> Node_45[style=dashed];
Node_45 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_41;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_37;
Node_37 -> Node_39;
Node_37 -> Node_41[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_24;
Node_36 -> Node_37;
Node_41 -> Node_42;
Node_42 -> Node_24;
Node_44 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_24;
}

