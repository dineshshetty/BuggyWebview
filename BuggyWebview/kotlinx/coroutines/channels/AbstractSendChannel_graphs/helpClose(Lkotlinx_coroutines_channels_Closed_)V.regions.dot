digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.helpClose(Lkotlinx\/coroutines\/channels\/Closed;)V" {
subgraph cluster_Region_216232482 {
label = "R(4:1|(3:2|3|(1:15)(1:(1:13)(1:9)))|(1:(1:20)(1:(1:28)(2:22|(1:(1:24)))))|30)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0000|java.lang.Object java.lang.Object r2 = kotlinx.coroutines.internal.InlineList.m1670constructorimpl$default(null, 1, null)\l}"];
subgraph cluster_LoopRegion_321552958 {
label = "LOOP:0: (3:2|3|(1:15)(1:(1:13)(1:9)))";
node [shape=record,color=blue];
subgraph cluster_Region_2142098408 {
label = "R(3:2|3|(1:15)(1:(1:13)(1:9)))";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0006|LOOP_START\lLOOP:0: B:38:0x0006\-\>B:66:0x0006\lPHI: r2 \l  PHI: (r2v1 'closedList' java.lang.Object) = (r2v0 'closedList' java.lang.Object), (r2v2 'closedList' java.lang.Object) binds: [B:37:0x0000, B:66:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.internal.LockFreeLinkedListNode kotlinx.coroutines.internal.LockFreeLinkedListNode r3 = r8.getPrevNode()\l}"];
Node_39 [shape=record,label="{39\:\ 0x000d|kotlinx.coroutines.channels.Receive r3 = r3 instanceof kotlinx.coroutines.channels.Receive ? (kotlinx.coroutines.channels.Receive) r3 : null\l}"];
subgraph cluster_IfRegion_1736625486 {
label = "IF [B:42:0x0013] THEN: R(1:15) ELSE: R(1:(1:13)(1:9))";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0013|PHI: r3 \l  PHI: (r3v2 'previous' kotlinx.coroutines.channels.Receive) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == null) goto L15\l}"];
subgraph cluster_Region_1355458467 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x0015|SYNTHETIC\lEDGE_INSN: B:63:0x0015\-\>B:43:0x0015 ?: BREAK  \l|break\l}"];
}
subgraph cluster_Region_999053951 {
label = "R(1:(1:13)(1:9)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_656272671 {
label = "IF [B:60:0x0056] THEN: R(1:13) ELSE: R(1:9) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x0056|if (r3.remove() == false) goto L12\l}"];
subgraph cluster_Region_1387801948 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x0058|r3.helpRemove()\l}"];
}
subgraph cluster_Region_1339524131 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x005c|java.lang.Object r2 = kotlinx.coroutines.internal.InlineList.m1675plusFjFbRPM(r2, r3)\l}"];
}
}
}
}
}
}
subgraph cluster_IfRegion_1974255991 {
label = "IF [B:44:0x0017] THEN: R(1:(1:20)(1:(1:28)(2:22|(1:(1:24))))) ELSE: null";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0017|if (r2 != null) goto L18\l}"];
subgraph cluster_Region_446677685 {
label = "R(1:(1:20)(1:(1:28)(2:22|(1:(1:24)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_799083473 {
label = "IF [B:47:0x001c] THEN: R(1:20) ELSE: R(1:(1:28)(2:22|(1:(1:24))))";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x001c|if ((r2 instanceof java.util.ArrayList) == false) goto L20\l}"];
subgraph cluster_Region_952376933 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x001e|kotlinx.coroutines.channels.Receive kotlinx.coroutines.channels.Receive r1 = (kotlinx.coroutines.channels.Receive) r2\lr1.resumeReceiveClosed(r8)\l}"];
}
subgraph cluster_Region_1566808234 {
label = "R(1:(1:28)(2:22|(1:(1:24)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1270969282 {
label = "IF [B:49:0x0026] THEN: R(1:28) ELSE: R(2:22|(1:(1:24))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0026|if (r2 == null) goto L27\l}"];
subgraph cluster_Region_1477565210 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0050|throw new java.lang.NullPointerException(\"null cannot be cast to non\-null type java.util.ArrayList\<E of kotlinx.coroutines.internal.InlineList\>\{ kotlin.collections.TypeAliasesKt.ArrayList\<E of kotlinx.coroutines.internal.InlineList\> \}\")\l}"];
}
subgraph cluster_Region_1484108980 {
label = "R(2:22|(1:(1:24)))";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0028|java.util.ArrayList java.util.ArrayList r3 = (java.util.ArrayList) r2\lint int r4 = r3.size() \- 1\l}"];
subgraph cluster_IfRegion_839044064 {
label = "IF [B:51:0x0030] THEN: R(1:(1:24)) ELSE: null";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0030|if (r4 \>= 0) goto L24\l}"];
subgraph cluster_Region_26688965 {
label = "R(1:(1:24))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_2059382186 {
label = "LOOP:1: (1:24)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x003f|LOOP_END\lLOOP:1: B:52:0x0032\-\>B:53:0x003f\l|if (r4 \>= 0) goto L24\l}"];
subgraph cluster_Region_1125877360 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x0032|LOOP_START\lLOOP:1: B:52:0x0032\-\>B:53:0x003f\lPHI: r4 \l  PHI: (r4v3 int) = (r4v2 int), (r4v4 int) binds: [B:51:0x0030, B:53:0x003f] A[DONT_GENERATE, DONT_INLINE]\l|int r1 = r4\lr4\-\-\lkotlinx.coroutines.channels.Receive kotlinx.coroutines.channels.Receive r5 = (kotlinx.coroutines.channels.Receive) r3.get(r1)\lr5.resumeReceiveClosed(r8)\l}"];
}
}
}
}
}
}
}
}
}
}
Node_55 [shape=record,label="{55\:\ 0x0042|onClosedIdempotent(r8)\l}"];
}
Node_35 [shape=record,color=red,label="{35\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x000f}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x0051}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x005c|SYNTHETIC\l}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x0006|SYNTHETIC\l}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:38:0x0006\-\>B:66:0x0006\lPHI: r2 \l  PHI: (r2v2 'closedList' java.lang.Object) = (r2v1 'closedList' java.lang.Object), (r2v3 'closedList' java.lang.Object) binds: [B:68:0x0006, B:67:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x0058|SYNTHETIC\l}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x0006|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0015|EDGE_INSN: B:63:0x0015\-\>B:43:0x0015 ?: BREAK  \l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x001a}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x0042|SYNTHETIC\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x0049}"];
Node_36 [shape=record,color=red,label="{36\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x0048}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0012}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.channels.AbstractSendChannel.helpClose((r7v0 'this' kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r8v0 kotlinx.coroutines.channels.Closed\<?\> A[D('closed' kotlinx.coroutines.channels.Closed), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:53:0x003f \-\> B:52:0x0032, CROSS_EDGE: B:53:0x003f \-\> B:55:0x0042, CROSS_EDGE: B:51:0x0030 \-\> B:55:0x0042, CROSS_EDGE: B:58:0x0050 \-\> B:36:?, CROSS_EDGE: B:44:0x0017 \-\> B:55:0x0042, BACK_EDGE: B:61:0x0058 \-\> B:38:0x0006, BACK_EDGE: B:62:0x005c \-\> B:38:0x0006, CROSS_EDGE: B:41:0x0012 \-\> B:42:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (Lkotlinx\/coroutines\/channels\/Closed\<*\>;)V\l}"];
MethodNode -> Node_35;Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_41;
Node_42 -> Node_59[style=dashed];
Node_42 -> Node_63;
Node_63 -> Node_43;
Node_60 -> Node_64[style=dashed];
Node_60 -> Node_65;
Node_61 -> Node_68;
Node_62 -> Node_67;
Node_44 -> Node_46;
Node_44 -> Node_55[style=dashed];
Node_47 -> Node_48;
Node_47 -> Node_49[style=dashed];
Node_48 -> Node_55;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_57;
Node_58 -> Node_36;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_51 -> Node_55[style=dashed];
Node_53 -> Node_52;
Node_53 -> Node_69[style=dashed];
Node_52 -> Node_53;
Node_55 -> Node_56;
Node_35 -> Node_37;
Node_40 -> Node_42;
Node_59 -> Node_60;
Node_64 -> Node_62;
Node_67 -> Node_66;
Node_66 -> Node_38;
Node_65 -> Node_61;
Node_68 -> Node_66;
Node_43 -> Node_44;
Node_46 -> Node_47;
Node_69 -> Node_55;
Node_57 -> Node_58;
Node_56 -> Node_36;
Node_41 -> Node_42;
}

