digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.getQueueDebugStateString()Ljava\/lang\/String;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) = (r5 I:kotlinx.coroutines.channels.AbstractSendChannel) kotlinx.coroutines.channels.AbstractSendChannel.queue kotlinx.coroutines.internal.LockFreeLinkedListHead  (LINE:437)\l0x0002: INVOKE  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListHead.getNextNode():kotlinx.coroutines.internal.LockFreeLinkedListNode A[MD:():kotlinx.coroutines.internal.LockFreeLinkedListNode (m)]\l0x0006: IGET  (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) = (r5 I:kotlinx.coroutines.channels.AbstractSendChannel) kotlinx.coroutines.channels.AbstractSendChannel.queue kotlinx.coroutines.internal.LockFreeLinkedListHead  (LINE:438)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('head' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x000d \l}"];
Node_28 [shape=record,label="{28\:\ 0x000a|RETURN\l|0x000a: CONST_STR  (r1 I:java.lang.String) =  \"EmptyQueue\" \l0x000c: RETURN  (r1 I:java.lang.String) \l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x000d|0x000e: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('head' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) kotlinx.coroutines.channels.Closed  (LINE:440)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0017 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0012|0x0012: INVOKE  (r1 I:java.lang.String) = \l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('head' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.toString():java.lang.String A[MD:():java.lang.String (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x002b|0x002c: IGET  (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) = (r5 I:kotlinx.coroutines.channels.AbstractSendChannel) kotlinx.coroutines.channels.AbstractSendChannel.queue kotlinx.coroutines.internal.LockFreeLinkedListHead  (LINE:445)\l0x002e: INVOKE  (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListHead.getPrevNode():kotlinx.coroutines.internal.LockFreeLinkedListNode A[MD:():kotlinx.coroutines.internal.LockFreeLinkedListNode (m)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0032|0x0032: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tail' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) == (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('head' kotlinx.coroutines.internal.LockFreeLinkedListNode)])  \-\> B:46:?  (LINE:446)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0034|0x0034: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:447)\l0x0036: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0039: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:java.lang.String A[D('result' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003c: CONST_STR  (r4 I:java.lang.String) =  \",queueSize=\" \l0x003e: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0041: INVOKE  (r4 I:int) = (r5 I:kotlinx.coroutines.channels.AbstractSendChannel) type: DIRECT call: kotlinx.coroutines.channels.AbstractSendChannel.countQueueSize():int A[MD:():int (m)]\l0x0045: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0048: INVOKE  (r1 I:java.lang.String A[D('result' java.lang.String)]) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004c: INSTANCE_OF  (r3 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('tail' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) kotlinx.coroutines.channels.Closed  (LINE:448)\l}"];
Node_43 [shape=record,label="{43\:\ 0x004e|0x004e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:? \l}"];
Node_44 [shape=record,label="{44\:\ 0x0050|0x0050: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0052: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0055: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:java.lang.String A[D('result' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0058: CONST_STR  (r4 I:java.lang.String) =  \",closedForSend=\" \l0x005a: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x005d: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:java.lang.Object A[D('tail' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0060: INVOKE  (r1 I:java.lang.String A[D('result' java.lang.String)]) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0064|RETURN\lORIG_RETURN\l|0x0064: RETURN  (r1 I:java.lang.String A[D('result' java.lang.String)])  (LINE:450)\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|0x0064: RETURN  (r1 I:java.lang.String A[D('result' java.lang.String)]) A[SYNTHETIC] (LINE:450)\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|0x0064: RETURN  (r1 I:java.lang.String A[D('result' java.lang.String)]) A[SYNTHETIC] (LINE:450)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0017|0x0017: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('head' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) kotlinx.coroutines.channels.Receive  (LINE:441)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0019|0x0019: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x001e \l}"];
Node_35 [shape=record,label="{35\:\ 0x001b|0x001b: CONST_STR  (r1 I:java.lang.String) =  \"ReceiveQueued\" \l}"];
Node_36 [shape=record,label="{36\:\ 0x001e|0x001e: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('head' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) kotlinx.coroutines.channels.Send  (LINE:442)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0020|0x0020: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0025 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0022|0x0022: CONST_STR  (r1 I:java.lang.String) =  \"SendQueued\" \l}"];
Node_39 [shape=record,label="{39\:\ 0x0025|0x0025: CONST_STR  (r1 I:java.lang.String) =  \"UNEXPECTED:\"  (LINE:443)\l0x0027: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.String), (r0 I:java.lang.Object A[D('head' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l}"];
MethodNode[shape=record,label="{private final java.lang.String kotlinx.coroutines.channels.AbstractSendChannel.getQueueDebugStateString((r5 'this' I:kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:45:0x0064 \-\> B:25:?, CROSS_EDGE: B:43:0x004e \-\> B:45:0x0064, CROSS_EDGE: B:41:0x0032 \-\> B:45:0x0064, CROSS_EDGE: B:35:0x001b \-\> B:40:0x002b, CROSS_EDGE: B:38:0x0022 \-\> B:40:0x002b, CROSS_EDGE: B:39:0x0025 \-\> B:40:0x002b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0064: r0 'head' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x002c\-0x0064: r1 'result' Ljava\/lang\/String;\l  0x0032\-0x0064: r2 'tail' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_25;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_46;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_47;
Node_44 -> Node_45;
Node_45 -> Node_25;
Node_47 -> Node_25;
Node_46 -> Node_25;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_40;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_39 -> Node_40;
}

