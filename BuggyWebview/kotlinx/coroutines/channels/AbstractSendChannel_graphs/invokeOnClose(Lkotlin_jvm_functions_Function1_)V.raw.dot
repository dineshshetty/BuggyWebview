digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.invokeOnClose(Lkotlin\/jvm\/functions\/Function1;)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: SGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.channels.AbstractSendChannel.onCloseHandler$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:288)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: INVOKE  (r1 I:boolean) = \l  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r3 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l  (r4 I:java.lang.Object A[D('handler' kotlin.jvm.functions.Function1)])\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0023 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|0x0009: IGET  (r0 I:java.lang.Object) = (r3 I:kotlinx.coroutines.channels.AbstractSendChannel) kotlinx.coroutines.channels.AbstractSendChannel.onCloseHandler java.lang.Object  (LINE:289)\l0x000b: SGET  (r1 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.HANDLER_INVOKED kotlinx.coroutines.internal.Symbol  (LINE:290)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0017 \l}"];
Node_24 [shape=record,label="{24\:\ 0x000f|0x000f: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:291)\l0x0011: CONST_STR  (r2 I:java.lang.String) =  \"Another handler was already registered and successfully invoked\" \l0x0013: INVOKE  (r1 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0016|0x0016: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0017|0x0017: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:294)\l0x0019: CONST_STR  (r2 I:java.lang.String) =  \"Another handler was already registered: \" \l0x001b: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String), (r0 I:java.lang.Object A[D('value' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x001f: INVOKE  (r1 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0022|0x0022: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0023|0x0023: INVOKE  (r1 I:kotlinx.coroutines.channels.Closed) = (r3 I:kotlinx.coroutines.channels.AbstractSendChannel) type: VIRTUAL call: kotlinx.coroutines.channels.AbstractSendChannel.getClosedForSend():kotlinx.coroutines.channels.Closed A[MD:():kotlinx.coroutines.channels.Closed\<?\> (m)] (LINE:296)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0027|0x0027: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('closedToken' kotlinx.coroutines.channels.Closed)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:?  (LINE:297)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0029|0x0029: SGET  (r2 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.HANDLER_INVOKED kotlinx.coroutines.internal.Symbol \l0x002b: INVOKE  (r0 I:boolean) = \l  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object A[D('handler' kotlin.jvm.functions.Function1)])\l  (r2 I:java.lang.Object)\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x002f|0x002f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:? \l}"];
Node_32 [shape=record,label="{32\:\ 0x0031|0x0031: IGET  (r0 I:java.lang.Throwable) = (r1 I:kotlinx.coroutines.channels.Closed A[D('closedToken' kotlinx.coroutines.channels.Closed)]) kotlinx.coroutines.channels.Closed.closeCause java.lang.Throwable  (LINE:299)\l0x0033: INVOKE  (r4 I:kotlin.jvm.functions.Function1 A[D('handler' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0036|RETURN\lORIG_RETURN\l|0x0036: RETURN    (LINE:302)\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0036: RETURN   A[SYNTHETIC] (LINE:302)\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|0x0036: RETURN   A[SYNTHETIC] (LINE:302)\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.channels.AbstractSendChannel.invokeOnClose((r3 'this' I:kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\> A[D('handler' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0022 \-\> B:19:?, CROSS_EDGE: B:33:0x0036 \-\> B:19:?, CROSS_EDGE: B:31:0x002f \-\> B:33:0x0036, CROSS_EDGE: B:29:0x0027 \-\> B:33:0x0036\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Throwable;Lkotlin\/Unit;\>;)V\lDebug Info:\l  0x000b\-0x0023: r0 'value' Ljava\/lang\/Object;\l  0x0027\-0x0036: r1 'closedToken' Lkotlinx\/coroutines\/channels\/Closed;\l  \-1 \-0x0036: r4 'handler' Lkotlin\/jvm\/functions\/Function1;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.SendChannel.invokeOnClose(kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\>):void]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_28;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_19;
Node_26 -> Node_27;
Node_27 -> Node_19;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_34;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_35 -> Node_19;
Node_34 -> Node_19;
}

