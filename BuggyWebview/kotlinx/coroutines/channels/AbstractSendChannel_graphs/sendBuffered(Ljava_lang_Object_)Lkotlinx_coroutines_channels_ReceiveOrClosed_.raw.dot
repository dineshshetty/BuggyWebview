digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.sendBuffered(Ljava\/lang\/Object;)Lkotlinx\/coroutines\/channels\/ReceiveOrClosed;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) = (r7 I:kotlinx.coroutines.channels.AbstractSendChannel) kotlinx.coroutines.channels.AbstractSendChannel.queue kotlinx.coroutines.internal.LockFreeLinkedListHead  (LINE:104)\l0x0002: CHECK_CAST (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r0 I:??[OBJECT, ARRAY]) \l0x0004: NEW_INSTANCE  (r1 I:kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered) =  kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered \l0x0006: INVOKE  \l  (r1 I:kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered)\l  (r8 I:java.lang.Object A[D('element' java.lang.Object)])\l type: DIRECT call: kotlinx.coroutines.channels.AbstractSendChannel.SendBuffered.\<init\>(java.lang.Object):void A[MD:(E):void (m)]\l0x0009: CHECK_CAST (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r1 I:??[OBJECT, ARRAY]) \l0x000b: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|LOOP_START\lLOOP:0: B:16:0x000c\-\>B:21:0x0020\l|0x000d: INVOKE  (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = \l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('this_$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.getPrevNode():kotlinx.coroutines.internal.LockFreeLinkedListNode A[MD:():kotlinx.coroutines.internal.LockFreeLinkedListNode (m)] (LINE:1147)\l0x0011: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('prev$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])  (LINE:1148)\l0x0012: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: INSTANCE_OF  (r6 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('prev' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) kotlinx.coroutines.channels.ReceiveOrClosed  (LINE:105)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|0x0015: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x001b \l}"];
Node_20 [shape=record,label="{20\:\ 0x001b|0x001c: INVOKE  (r4 I:boolean) = \l  (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('prev$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l  (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('node$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('this_$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.addNext(kotlinx.coroutines.internal.LockFreeLinkedListNode, kotlinx.coroutines.internal.LockFreeLinkedListNode):boolean A[MD:(kotlinx.coroutines.internal.LockFreeLinkedListNode, kotlinx.coroutines.internal.LockFreeLinkedListNode):boolean (m)] (LINE:1149)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0020|LOOP_END\lLOOP:0: B:16:0x000c\-\>B:21:0x0020\l|0x0020: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x000c \l}"];
Node_24 [shape=record,label="{24\:\ 0x0022|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0022|RETURN\l|0x0022: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('this_$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:108)\l0x0023: RETURN  (r0 I:kotlinx.coroutines.channels.ReceiveOrClosed\<?\>) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|0x0017: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('prev' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) \l0x0018: CHECK_CAST (r6 I:kotlinx.coroutines.channels.ReceiveOrClosed) = (kotlinx.coroutines.channels.ReceiveOrClosed) (r6 I:??[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x001a|RETURN\l|0x001a: RETURN  (r6 I:kotlinx.coroutines.channels.ReceiveOrClosed\<?\>) \l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.channels.ReceiveOrClosed\<?\> kotlinx.coroutines.channels.AbstractSendChannel.sendBuffered((r7 'this' I:kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r8 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0020 \-\> B:16:0x000c, CROSS_EDGE: B:23:0x0023 \-\> B:14:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x001c: r4 'prev' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x0013\-0x001c: r5 '$i$a$\-addLastIfPrev\-AbstractSendChannel$sendBuffered$1' I\l  0x0004\-0x0022: r0 'this_$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x000b\-0x0022: r1 'node$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x000c\-0x0022: r2 '$i$f$addLastIfPrev' I\l  0x0011\-0x0022: r3 'prev$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  \-1 \-0x0023: r8 'element' Ljava\/lang\/Object;\lTYPE_VARS: [E]\lSIGNATURE: (TE;)Lkotlinx\/coroutines\/channels\/ReceiveOrClosed\<*\>;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_20;
Node_17 -> Node_25[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_16;
Node_21 -> Node_24[style=dashed];
Node_24 -> Node_22;
Node_22 -> Node_14;
Node_25 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_14;
}

