digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.takeFirstSendOrPeekClosed()Lkotlinx\/coroutines\/channels\/Send;" {
subgraph cluster_Region_1666825012 {
label = "R(3:1|(2:2|(2:21|1)(1:(2:19|1)(2:6|(2:(1:17)|(1:16)))))|12) | DECL_VAR: kotlinx.coroutines.internal.LockFreeLinkedListNode first$iv, kotlinx.coroutines.internal.LockFreeLinkedListNode next$iv\l";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0000|kotlinx.coroutines.internal.LockFreeLinkedListNode kotlinx.coroutines.internal.LockFreeLinkedListNode r0 = r5.queue\l}"];
subgraph cluster_LoopRegion_1258814954 {
label = "LOOP:0: (2:2|(2:21|1)(1:(2:19|1)(2:6|(2:(1:17)|(1:16)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1443716866 {
label = "R(2:2|(2:21|1)(1:(2:19|1)(2:6|(2:(1:17)|(1:16)))))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0005|LOOP_START\lLOOP:0: B:26:0x0005\-\>B:41:0x002f\l|kotlinx.coroutines.internal.LockFreeLinkedListNode r2 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) r0.getNext()\l}"];
subgraph cluster_IfRegion_1331317606 {
label = "IF [B:27:0x000d] THEN: R(2:21|1) ELSE: R(1:(2:19|1)(2:6|(2:(1:17)|(1:16))))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x000d|if (r2 == r0) goto L20\l}"];
subgraph cluster_Region_1894381497 {
label = "R(2:21|1)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x000f|EDGE_INSN: B:28:0x000f\-\>B:39:0x002c ?: BREAK  \l|r2 = null\l}"];
Node_InsnContainer_1783779548 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_966367130 {
label = "R(1:(2:19|1)(2:6|(2:(1:17)|(1:16)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1645134622 {
label = "IF [B:30:0x0013] THEN: R(2:19|1) ELSE: R(2:6|(2:(1:17)|(1:16))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0013|if ((r2 instanceof kotlinx.coroutines.channels.Send) == false) goto L18\l}"];
subgraph cluster_Region_1590125195 {
label = "R(2:19|1)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0015|EDGE_INSN: B:31:0x0015\-\>B:39:0x002c ?: BREAK  \l|r2 = null\l}"];
Node_InsnContainer_217292046 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_2140316994 {
label = "R(2:6|(2:(1:17)|(1:16)))";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0017|kotlinx.coroutines.channels.Send kotlinx.coroutines.channels.Send r3 = (kotlinx.coroutines.channels.Send) r2\l}"];
subgraph cluster_Region_2028984791 {
label = "R(2:(1:17)|(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1090109750 {
label = "IF [B:33:0x001d, B:35:0x0023, B:38:0x002a] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x001d|if ((r3 instanceof kotlinx.coroutines.channels.Closed) == true) goto L8\l}"];
Node_35 [shape=record,label="{35\:\ 0x0023|ADDED_TO_REGION\l|if (r2.isRemoved() != true) goto L10\l}"];
Node_38 [shape=record,label="{38\:\ 0x002a|ADDED_TO_REGION\l|if ((r3 = r2.removeOrNext()) == null) goto L17\l}"];
subgraph cluster_Region_4432550 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x002c|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:44:0x002c\-\>B:39:0x002c ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1964232819 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x002f|LOOP_END\lLOOP:0: B:26:0x0005\-\>B:41:0x002f\l|r3.helpRemovePrev()\l}"];
}
}
}
}
}
}
}
}
Node_40 [shape=record,label="{40\:\ 0x002e|RETURN\l|return (kotlinx.coroutines.channels.Send) r2\l}"];
}
Node_23 [shape=record,color=red,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0011}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x001f}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x002c|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:43:0x002c\-\>B:39:0x002c ?: BREAK  \l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x002c|EDGE_INSN: B:31:0x0015\-\>B:39:0x002c ?: BREAK  , EDGE_INSN: B:43:0x002c\-\>B:39:0x002c ?: BREAK  , EDGE_INSN: B:44:0x002c\-\>B:39:0x002c ?: BREAK  , EDGE_INSN: B:28:0x000f\-\>B:39:0x002c ?: BREAK  \lPHI: r2 \l  PHI: (r2v3 'first$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode) = (r2v2 'first$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode), (r2v5 'first$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode), (r2v1 'first$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode), (r2v1 'first$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode) binds: [B:28:0x000f, B:31:0x0015, B:44:0x002c, B:43:0x002c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0026}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0015|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x000f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.channels.Send kotlinx.coroutines.channels.AbstractSendChannel.takeFirstSendOrPeekClosed((r5v0 'this' kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0015 \-\> B:39:0x002c, CROSS_EDGE: B:38:0x002a \-\> B:39:0x002c, BACK_EDGE: B:41:0x002f \-\> B:26:0x0005, CROSS_EDGE: B:35:0x0023 \-\> B:39:0x002c, CROSS_EDGE: B:33:0x001d \-\> B:37:0x0026\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_23;Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_29[style=dashed];
Node_27 -> Node_45;
Node_28 -> Node_39;
Node_30 -> Node_32[style=dashed];
Node_30 -> Node_42;
Node_31 -> Node_39;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_37[style=dashed];
Node_35 -> Node_37[style=dashed];
Node_35 -> Node_43;
Node_38 -> Node_41[style=dashed];
Node_38 -> Node_44;
Node_44 -> Node_39;
Node_41 -> Node_26;
Node_40 -> Node_24;
Node_23 -> Node_25;
Node_29 -> Node_30;
Node_34 -> Node_35;
Node_43 -> Node_39;
Node_39 -> Node_40;
Node_37 -> Node_38;
Node_42 -> Node_31;
Node_45 -> Node_28;
}

