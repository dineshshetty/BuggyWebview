digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.enqueueSend(Lkotlinx\/coroutines\/channels\/Send;)Ljava\/lang\/Object;" {
Node_31 [shape=record,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0000}"];
Node_34 [shape=record,label="{34\:\ 0x0004|if (isBufferAlwaysFull() == false) goto L13\l}"];
Node_35 [shape=record,label="{35\:\ 0x0006|kotlinx.coroutines.internal.LockFreeLinkedListNode r0 = r7.queue\l}"];
Node_36 [shape=record,label="{36\:\ 0x000b|LOOP_START\lLOOP:0: B:36:0x000b\-\>B:40:0x001f\l|kotlinx.coroutines.internal.LockFreeLinkedListNode r2 = r0.getPrevNode()\l}"];
Node_37 [shape=record,label="{37\:\ 0x0014|if ((r2 instanceof kotlinx.coroutines.channels.ReceiveOrClosed) == false) goto L6\l}"];
Node_39 [shape=record,label="{39\:\ 0x0017}"];
Node_40 [shape=record,label="{40\:\ 0x001f|LOOP_END\lLOOP:0: B:36:0x000b\-\>B:40:0x001f\l|if (r2.addNext(r8, r0) == false) goto L4\l}"];
Node_57 [shape=record,label="{57\:\ 0x0055|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_56 [shape=record,label="{56\:\ 0x0016|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0016|RETURN\l|return r2\l}"];
Node_42 [shape=record,label="{42\:\ 0x0022|kotlinx.coroutines.internal.LockFreeLinkedListNode r0 = r7.queue\lkotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp r4 = new kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1(r7)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0035|LOOP_START\lLOOP:1: B:43:0x0035\-\>B:47:0x0049\l|kotlinx.coroutines.internal.LockFreeLinkedListNode r3 = r0.getPrevNode()\l}"];
Node_44 [shape=record,label="{44\:\ 0x003e|if ((r3 instanceof kotlinx.coroutines.channels.ReceiveOrClosed) == false) goto L16\l}"];
Node_46 [shape=record,label="{46\:\ 0x0041}"];
Node_47 [shape=record,label="{47\:\ 0x0049|LOOP_END\lLOOP:1: B:43:0x0035\-\>B:47:0x0049\l|switch(r3.tryCondAddNext(r8, r0, r4)) \{\l    case 1: goto L24;\l    case 2: goto L18;\l    default: goto L14;\l\}\l}"];
Node_58 [shape=record,label="{58\:\ 0x004d|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x004d|r4 = false\l}"];
Node_51 [shape=record,label="{51\:\ 0x0050|PHI: r4 \l  PHI: (r4v7 boolean) = (r4v6 boolean), (r4v8 boolean) binds: [B:50:0x004f, B:49:0x004d] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 != false) goto L23\l}"];
Node_52 [shape=record,label="{52\:\ 0x0052}"];
Node_53 [shape=record,label="{53\:\ 0x0054|RETURN\l|return kotlinx.coroutines.channels.AbstractChannelKt.ENQUEUE_FAILED\l}"];
Node_54 [shape=record,label="{54\:\ 0x0055|RETURN\lORIG_RETURN\l|return null\l}"];
Node_59 [shape=record,label="{59\:\ 0x004f|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x004f|r4 = true\l}"];
Node_60 [shape=record,label="{60\:\ 0x0040|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0040|RETURN\l|return r3\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.AbstractSendChannel.enqueueSend((r7v0 'this' kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r8v0 'send' kotlinx.coroutines.channels.Send A[D('send' kotlinx.coroutines.channels.Send), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lBACK_EDGE: B:40:0x001f \-\> B:36:0x000b, CROSS_EDGE: B:55:0x0056 \-\> B:32:?, CROSS_EDGE: B:45:0x0040 \-\> B:32:?, CROSS_EDGE: B:53:0x0054 \-\> B:32:?, CROSS_EDGE: B:51:0x0050 \-\> B:54:0x0055, CROSS_EDGE: B:50:0x004f \-\> B:51:0x0050, BACK_EDGE: B:47:0x0049 \-\> B:43:0x0035\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractSendChannel.enqueueSend(kotlinx.coroutines.channels.Send):java.lang.Object]\l}"];
MethodNode -> Node_31;Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_42;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_39;
Node_37 -> Node_56[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_36;
Node_40 -> Node_57[style=dashed];
Node_57 -> Node_61;
Node_61 -> Node_32;
Node_56 -> Node_38;
Node_38 -> Node_32;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_46;
Node_44 -> Node_60[style=dashed];
Node_46 -> Node_47;
Node_47 -> Node_43;
Node_47 -> Node_58;
Node_47 -> Node_59;
Node_58 -> Node_49;
Node_49 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_54;
Node_52 -> Node_53;
Node_53 -> Node_32;
Node_54 -> Node_32;
Node_59 -> Node_50;
Node_50 -> Node_51;
Node_60 -> Node_45;
Node_45 -> Node_32;
}

