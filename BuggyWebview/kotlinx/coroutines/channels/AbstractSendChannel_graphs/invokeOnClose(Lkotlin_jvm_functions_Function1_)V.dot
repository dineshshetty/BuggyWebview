digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.invokeOnClose(Lkotlin\/jvm\/functions\/Function1;)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|java.util.concurrent.atomic.AtomicReferenceFieldUpdater r0 = kotlinx.coroutines.channels.AbstractSendChannel.onCloseHandler$FU\l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|if (androidx.concurrent.futures.C0125xc40028dd.m112m(r0, r3, null, r4) != false) goto L10\l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|java.lang.Object r0 = r3.onCloseHandler\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|if (r0 != kotlinx.coroutines.channels.AbstractChannelKt.HANDLER_INVOKED) goto L8\l}"];
Node_24 [shape=record,label="{24\:\ 0x000f}"];
Node_25 [shape=record,label="{25\:\ 0x0016|throw new java.lang.IllegalStateException(\"Another handler was already registered and successfully invoked\")\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0017}"];
Node_27 [shape=record,label="{27\:\ 0x0022|throw new java.lang.IllegalStateException(kotlin.jvm.internal.Intrinsics.stringPlus(\"Another handler was already registered: \", r0))\l}"];
Node_28 [shape=record,label="{28\:\ 0x0023|kotlinx.coroutines.channels.Closed r1 = getClosedForSend()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0027|if (r1 == null) goto L17\l}"];
Node_30 [shape=record,label="{30\:\ 0x0029}"];
Node_31 [shape=record,label="{31\:\ 0x002f|if (androidx.concurrent.futures.C0125xc40028dd.m112m(r0, r3, r4, kotlinx.coroutines.channels.AbstractChannelKt.HANDLER_INVOKED) == false) goto L16\l}"];
Node_32 [shape=record,label="{32\:\ 0x0031|r4.invoke(r1.closeCause)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0036|RETURN\lORIG_RETURN\l|return\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.channels.AbstractSendChannel.invokeOnClose((r3v0 'this' kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r4v0 kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\> A[D('handler' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0022 \-\> B:19:?, CROSS_EDGE: B:33:0x0036 \-\> B:19:?, CROSS_EDGE: B:31:0x002f \-\> B:33:0x0036, CROSS_EDGE: B:29:0x0027 \-\> B:33:0x0036\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Throwable;Lkotlin\/Unit;\>;)V\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.SendChannel.invokeOnClose(kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\>):void]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_28;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_19;
Node_26 -> Node_27;
Node_27 -> Node_19;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_34;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_35 -> Node_19;
Node_34 -> Node_19;
}

