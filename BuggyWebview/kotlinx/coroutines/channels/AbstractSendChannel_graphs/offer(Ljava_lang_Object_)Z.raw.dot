digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.offer(Ljava\/lang\/Object;)Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0002|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x000a, blocks: (B:17:0x0002), top: B:28:0x0002 \}\lCatch: all \-\> 0x000a\l|0x0002: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) A[TRY_ENTER] (LINE:143)\l0x0003: CHECK_CAST (r0 I:kotlinx.coroutines.channels.SendChannel) = (kotlinx.coroutines.channels.SendChannel) (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x000a]\l0x0005: INVOKE  (r0 I:boolean) = (r0 I:kotlinx.coroutines.channels.SendChannel), (r5 I:java.lang.Object A[D('element' java.lang.Object)]) type: STATIC call: kotlinx.coroutines.channels.SendChannel.DefaultImpls.offer(kotlinx.coroutines.channels.SendChannel, java.lang.Object):boolean A[Catch: all \-\> 0x000a, MD:\<E\>:(kotlinx.coroutines.channels.SendChannel\<? super E\>, E):boolean (m), TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|RETURN\l|0x0009: RETURN  (r0 I:boolean) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|ExcHandler: all \-\> 0x000a\l|0x000a: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x000a] (LINE:144)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|0x000b: IGET  (r1 I:kotlin.jvm.functions.Function1\<E, kotlin.Unit\>) = (r4 I:kotlinx.coroutines.channels.AbstractSendChannel) kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement kotlin.jvm.functions.Function1  (LINE:145)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0020 \l}"];
Node_22 [shape=record,label="{22\:\ 0x000f|0x000f: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0010: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0011: INVOKE  (r1 I:kotlinx.coroutines.internal.UndeliveredElementException) = \l  (r1 I:kotlin.jvm.functions.Function1)\l  (r5 I:java.lang.Object A[D('element' java.lang.Object)])\l  (r3 I:kotlinx.coroutines.internal.UndeliveredElementException)\l  (r2 I:int)\l  (r3 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.internal.OnUndeliveredElementKt.callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1, java.lang.Object, kotlinx.coroutines.internal.UndeliveredElementException, int, java.lang.Object):kotlinx.coroutines.internal.UndeliveredElementException A[MD:(kotlin.jvm.functions.Function1, java.lang.Object, kotlinx.coroutines.internal.UndeliveredElementException, int, java.lang.Object):kotlinx.coroutines.internal.UndeliveredElementException (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|0x0015: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0018 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|0x0018: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('it' kotlinx.coroutines.internal.UndeliveredElementException)])  (LINE:147)\l0x001a: CHECK_CAST (r3 I:java.lang.Throwable) = (java.lang.Throwable) (r3 I:??[OBJECT, ARRAY]) \l0x001c: INVOKE  (r3 I:java.lang.Throwable), (r0 I:java.lang.Throwable A[D('e' java.lang.Throwable)]) type: STATIC call: kotlin.ExceptionsKt.addSuppressed(java.lang.Throwable, java.lang.Throwable):void A[MD:(java.lang.Throwable, java.lang.Throwable):void (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x001f|0x001f: THROW  (r1 I:java.lang.Throwable A[D('it' kotlinx.coroutines.internal.UndeliveredElementException)])  (LINE:148)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0020|0x0020: THROW  (r0 I:java.lang.Throwable A[D('e' java.lang.Throwable)])  (LINE:150)\l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.channels.AbstractSendChannel.offer((r4 'this' I:kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r5 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x001f \-\> B:16:?, CROSS_EDGE: B:27:0x0020 \-\> B:16:?, CROSS_EDGE: B:21:0x000d \-\> B:27:0x0020, CROSS_EDGE: B:28:0x0002 \-\> B:19:0x000a\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x000a, blocks: (B:17:0x0002), top: B:28:0x0002 \}\lTYPE_VARS: [E]\lSIGNATURE: (TE;)Z\lDebug Info:\l  0x0018\-0x0020: r1 'it' Lkotlinx\/coroutines\/internal\/UndeliveredElementException;\l  0x0019\-0x0020: r2 '$i$a$\-let\-AbstractSendChannel$offer$1' I\l  0x000b\-0x0020: r0 'e' Ljava\/lang\/Throwable;\l  \-1 \-0x0020: r5 'element' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.SendChannel.offer(E):boolean]\l}"];
MethodNode -> Node_15;Node_15 -> Node_28;
Node_28 -> Node_17;
Node_28 -> Node_19;
Node_17 -> Node_18;
Node_17 -> Node_29;
Node_18 -> Node_16;
Node_29 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_27[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_16;
Node_27 -> Node_16;
}

