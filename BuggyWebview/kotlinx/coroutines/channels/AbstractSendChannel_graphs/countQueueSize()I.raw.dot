digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.countQueueSize()I" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:454)\l0x0001: IGET  (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) = (r6 I:kotlinx.coroutines.channels.AbstractSendChannel) kotlinx.coroutines.channels.AbstractSendChannel.queue kotlinx.coroutines.internal.LockFreeLinkedListHead  (LINE:455)\l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: INVOKE  (r3 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListHead A[D('this_$iv' kotlinx.coroutines.internal.LockFreeLinkedListHead)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListHead.getNext():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:1196)\l0x0008: CHECK_CAST (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|LOOP_START\lLOOP:0: B:17:0x000a\-\>B:22:0x0018\l|0x000a: INVOKE  (r4 I:boolean) = \l  (r3 I:java.lang.Object A[D('cur$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l  (r1 I:java.lang.Object A[D('this_$iv' kotlinx.coroutines.internal.LockFreeLinkedListHead)])\l type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)] (LINE:1197)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|0x000e: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001e \l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: INSTANCE_OF  (r4 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('cur$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) kotlinx.coroutines.internal.LockFreeLinkedListNode  (LINE:1198)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|0x0012: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0018 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0014|0x0014: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('cur$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) \l0x0015: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0016: ARITH  (r0 I:int) = (r0 I:int A[D('size' int)]) + (1 int)  (LINE:455)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0018|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|LOOP_END\lLOOP:0: B:17:0x000a\-\>B:22:0x0018\l|0x0018: INVOKE  (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('cur$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) = \l  (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('cur$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.getNextNode():kotlinx.coroutines.internal.LockFreeLinkedListNode A[MD:():kotlinx.coroutines.internal.LockFreeLinkedListNode (m)] (LINE:1199)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0018|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x001e|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x001e|RETURN\l|0x001e: RETURN  (r0 I:int A[D('size' int)])  (LINE:456)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final int kotlinx.coroutines.channels.AbstractSendChannel.countQueueSize((r6 'this' I:kotlinx.coroutines.channels.AbstractSendChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:22:0x0018 \-\> B:17:0x000a, CROSS_EDGE: B:20:0x0012 \-\> B:22:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x0018: r4 'it' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x0016\-0x0018: r5 '$i$a$\-forEach\-AbstractSendChannel$countQueueSize$1' I\l  0x0003\-0x001e: r1 'this_$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListHead;\l  0x0004\-0x001e: r2 '$i$f$forEach' I\l  0x000a\-0x001e: r3 'cur$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x0001\-0x001e: r0 'size' I\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_21 -> Node_26;
Node_26 -> Node_22;
Node_22 -> Node_17;
Node_27 -> Node_22;
Node_25 -> Node_24;
Node_24 -> Node_15;
}

