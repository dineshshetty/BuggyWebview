digraph "CFG forkotlinx.coroutines.channels.ConflatedChannel.pollInternal()Ljava\/lang\/Object;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:95)\l0x0001: IGET  (r1 I:java.util.concurrent.locks.ReentrantLock) = (r7 I:kotlinx.coroutines.channels.ConflatedChannel) kotlinx.coroutines.channels.ConflatedChannel.lock java.util.concurrent.locks.ReentrantLock  (LINE:96)\l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$withLock$iv' java.util.concurrent.locks.ReentrantLock)])  (LINE:149)\l0x0005: CHECK_CAST (r3 I:java.util.concurrent.locks.Lock) = (java.util.concurrent.locks.Lock) (r3 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l0x000a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|TRY_ENTER\lTryCatch #0 \{all \-\> 0x002c, blocks: (B:20:0x000b, B:22:0x0011, B:24:0x0017, B:27:0x001d), top: B:33:0x000b \}\lCatch: all \-\> 0x002c\l|0x000b: IGET  (r5 I:java.lang.Object) = (r7 I:kotlinx.coroutines.channels.ConflatedChannel) kotlinx.coroutines.channels.ConflatedChannel.value java.lang.Object A[Catch: all \-\> 0x002c, TRY_ENTER] (LINE:97)\l0x000d: SGET  (r6 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.EMPTY kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x002c]\l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|0x000f: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x001d \l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|TryCatch #0 \{all \-\> 0x002c, blocks: (B:20:0x000b, B:22:0x0011, B:24:0x0017, B:27:0x001d), top: B:33:0x000b \}\lCatch: all \-\> 0x002c\l|0x0011: INVOKE  (r5 I:kotlinx.coroutines.channels.Closed) = (r7 I:kotlinx.coroutines.channels.ConflatedChannel) type: VIRTUAL call: kotlinx.coroutines.channels.ConflatedChannel.getClosedForSend():kotlinx.coroutines.channels.Closed A[Catch: all \-\> 0x002c, MD:():kotlinx.coroutines.channels.Closed\<?\> (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|0x0015: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0019 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x002c, blocks: (B:20:0x000b, B:22:0x0011, B:24:0x0017, B:27:0x001d), top: B:33:0x000b \}\lCatch: all \-\> 0x002c\l|0x0017: SGET  (r5 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x002c, TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0019|0x0019: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x001c|RETURN\l|0x001c: RETURN  (r5 I:java.lang.Object) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x001d|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x002c, blocks: (B:20:0x000b, B:22:0x0011, B:24:0x0017, B:27:0x001d), top: B:33:0x000b \}\lCatch: all \-\> 0x002c\l|0x001d: IGET  (r5 I:java.lang.Object) = (r7 I:kotlinx.coroutines.channels.ConflatedChannel) kotlinx.coroutines.channels.ConflatedChannel.value java.lang.Object A[Catch: all \-\> 0x002c, TRY_ENTER] (LINE:98)\l0x001f: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) = (r5 I:??[OBJECT, ARRAY]) \l0x0020: SGET  (r5 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.EMPTY kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x002c] (LINE:99)\l0x0022: IPUT  (r5 I:java.lang.Object), (r7 I:kotlinx.coroutines.channels.ConflatedChannel) kotlinx.coroutines.channels.ConflatedChannel.value java.lang.Object A[Catch: all \-\> 0x002c]\l0x0025: SGET  (r4 I:kotlin.Unit A[D('$i$a$\-withLock\-ConflatedChannel$pollInternal$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x002c, TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0027|0x0027: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x002b|RETURN\l|0x002b: RETURN  (r0 I:java.lang.Object A[D('result' java.lang.Object)])  (LINE:101)\l}"];
Node_30 [shape=record,label="{30\:\ 0x002c|ExcHandler: all \-\> 0x002c\l|0x002c: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x002c] (LINE:100)\l}"];
Node_31 [shape=record,label="{31\:\ 0x002d|0x002d: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0030|0x0030: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected java.lang.Object kotlinx.coroutines.channels.ConflatedChannel.pollInternal((r7 'this' I:kotlinx.coroutines.channels.ConflatedChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0015 \-\> B:25:0x0019, CROSS_EDGE: B:29:0x002b \-\> B:18:?, CROSS_EDGE: B:32:0x0030 \-\> B:18:?\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x002c, blocks: (B:20:0x000b, B:22:0x0011, B:24:0x0017, B:27:0x001d), top: B:33:0x000b \}\lTYPE_VARS: [E]\lDebug Info:\l  0x0003\-0x0019: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0004\-0x0019: r2 '$i$f$withLock' I\l  0x000b\-0x0019: r4 '$i$a$\-withLock\-ConflatedChannel$pollInternal$1' I\l  0x001d\-0x0025: r4 '$i$a$\-withLock\-ConflatedChannel$pollInternal$1' I\l  0x001d\-0x002b: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x001d\-0x002b: r2 '$i$f$withLock' I\l  0x0001\-0x0030: r0 'result' Ljava\/lang\/Object;\l  0x002c\-0x0030: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x002c\-0x0030: r2 '$i$f$withLock' I\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractChannel.pollInternal():java.lang.Object]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_33;
Node_33 -> Node_20;
Node_33 -> Node_30;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_18;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_18;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_18;
}

