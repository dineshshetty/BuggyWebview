digraph "CFG forkotlinx.coroutines.channels.ConflatedChannel.offerSelectInternal(Ljava\/lang\/Object;Lkotlinx\/coroutines\/selects\/SelectInstance;)Ljava\/lang\/Object;" {
Node_49 [shape=record,label="{49\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:62)\l0x0001: IGET  (r1 I:java.util.concurrent.locks.ReentrantLock) = (r9 I:kotlinx.coroutines.channels.ConflatedChannel) kotlinx.coroutines.channels.ConflatedChannel.lock java.util.concurrent.locks.ReentrantLock  (LINE:63)\l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$withLock$iv' java.util.concurrent.locks.ReentrantLock)])  (LINE:148)\l0x0005: CHECK_CAST (r3 I:java.util.concurrent.locks.Lock) = (java.util.concurrent.locks.Lock) (r3 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l0x000a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_94 [shape=record,label="{94\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_52 [shape=record,label="{52\:\ 0x000b|TRY_ENTER\lTryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lCatch: all \-\> 0x008f\l|0x000b: INVOKE  (r5 I:kotlinx.coroutines.channels.Closed) = (r9 I:kotlinx.coroutines.channels.ConflatedChannel) type: VIRTUAL call: kotlinx.coroutines.channels.ConflatedChannel.getClosedForSend():kotlinx.coroutines.channels.Closed A[Catch: all \-\> 0x008f, MD:():kotlinx.coroutines.channels.Closed\<?\> (m), TRY_ENTER] (LINE:64)\l}"];
Node_53 [shape=record,label="{53\:\ 0x000f|0x000f: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x0089 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0011|TryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lCatch: all \-\> 0x008f\l|0x0011: IGET  (r5 I:java.lang.Object) = (r9 I:kotlinx.coroutines.channels.ConflatedChannel) kotlinx.coroutines.channels.ConflatedChannel.value java.lang.Object A[Catch: all \-\> 0x008f] (LINE:65)\l0x0013: SGET  (r6 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.EMPTY kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x008f]\l}"];
Node_55 [shape=record,label="{55\:\ 0x0015|0x0015: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:77:0x006c \l}"];
Node_57 [shape=record,label="{57\:\ 0x0018|LOOP_START\lTryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lLOOP:0: B:57:0x0018\-\>B:67:0x004c\lCatch: all \-\> 0x008f\l|0x0018: INVOKE  (r5 I:kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc) = (r9 I:kotlinx.coroutines.channels.ConflatedChannel), (r10 I:java.lang.Object A[D('element' java.lang.Object)]) type: VIRTUAL call: kotlinx.coroutines.channels.ConflatedChannel.describeTryOffer(java.lang.Object):kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc A[Catch: all \-\> 0x008f, MD:(E):kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc\<E\> (m)] (LINE:67)\l0x001c: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('offerOp' kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc)])  (LINE:68)\l0x001d: CHECK_CAST (r6 I:kotlinx.coroutines.internal.AtomicDesc) = (kotlinx.coroutines.internal.AtomicDesc) (r6 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x008f]\l0x001f: INVOKE  (r6 I:java.lang.Object) = \l  (r11 I:kotlinx.coroutines.selects.SelectInstance A[D('select' kotlinx.coroutines.selects.SelectInstance)])\l  (r6 I:kotlinx.coroutines.internal.AtomicDesc)\l type: INTERFACE call: kotlinx.coroutines.selects.SelectInstance.performAtomicTrySelect(kotlinx.coroutines.internal.AtomicDesc):java.lang.Object A[Catch: all \-\> 0x008f, MD:(kotlinx.coroutines.internal.AtomicDesc):java.lang.Object (m)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0024|0x0024: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('failure' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x0043  (LINE:70)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0043|TRY_ENTER\lTryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lCatch: all \-\> 0x008f\l|0x0043: SGET  (r7 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x008f, TRY_ENTER] (LINE:74)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0045|0x0045: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('failure' java.lang.Object)]) != (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x0048 \l}"];
Node_65 [shape=record,label="{65\:\ 0x0048|TryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lCatch: all \-\> 0x008f\l|0x0048: SGET  (r7 I:java.lang.Object) =  kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC java.lang.Object A[Catch: all \-\> 0x008f] (LINE:75)\l}"];
Node_66 [shape=record,label="{66\:\ 0x004a|0x004a: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('failure' java.lang.Object)]) != (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:97:0x004d \l}"];
Node_67 [shape=record,label="{67\:\ 0x004c|LOOP_END\lLOOP:0: B:57:0x0018\-\>B:67:0x004c\l|0x004c: GOTO  \-\> 0x0017 \l}"];
Node_97 [shape=record,label="{97\:\ 0x004d|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x004d|TryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lCatch: all \-\> 0x008f\l|0x004d: INVOKE  (r7 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.getALREADY_SELECTED():java.lang.Object A[Catch: all \-\> 0x008f, MD:():java.lang.Object (m)] (LINE:76)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0051|0x0051: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('failure' java.lang.Object)]) == (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x0068 \l}"];
Node_70 [shape=record,label="{70\:\ 0x0053|TryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lCatch: all \-\> 0x008f\l|0x0053: INSTANCE_OF  (r7 I:boolean) = (r6 I:??[OBJECT, ARRAY] A[D('failure' java.lang.Object)]) kotlinx.coroutines.channels.Closed A[Catch: all \-\> 0x008f]\l}"];
Node_71 [shape=record,label="{71\:\ 0x0055|0x0055: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:73:0x0058 \l}"];
Node_72 [shape=record,label="{72\:\ 0x0057|0x0057: GOTO  \-\> 0x0068 \l}"];
Node_73 [shape=record,label="{73\:\ 0x0058|TryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lCatch: all \-\> 0x008f\l|0x0058: NEW_INSTANCE  (r7 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch: all \-\> 0x008f]\l0x005a: CONST_STR  (r8 I:java.lang.String) =  \"performAtomicTrySelect(describeTryOffer) returned \"  (LINE:77)\l0x005c: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.String), (r6 I:java.lang.Object A[D('failure' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[Catch: all \-\> 0x008f, MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x0060: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[Catch: all \-\> 0x008f, MD:():java.lang.String (c)]\l0x0064: INVOKE  (r7 I:java.lang.IllegalStateException), (r8 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[Catch: all \-\> 0x008f, MD:(java.lang.String):void (c)]\l}"];
Node_74 [shape=record,label="{74\:\ 0x0067|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lCatch: all \-\> 0x008f\l|0x0067: THROW  (r7 I:java.lang.Throwable) A[Catch: all \-\> 0x008f, TRY_LEAVE]\l}"];
Node_50 [shape=record,label="{50\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_75 [shape=record,label="{75\:\ 0x0068|0x0068: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)] (LINE:76)\l}"];
Node_76 [shape=record,label="{76\:\ 0x006b|RETURN\l|0x006b: RETURN  (r6 I:java.lang.Object) \l}"];
Node_96 [shape=record,label="{96\:\ 0x0047|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x0047|0x0047: GOTO  \-\> 0x006c \l}"];
Node_95 [shape=record,label="{95\:\ 0x0026|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x0026|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lCatch: all \-\> 0x008f\l|0x0026: INVOKE  (r7 I:java.lang.Object) = \l  (r5 I:kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc A[D('offerOp' kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc)])\l type: VIRTUAL call: kotlinx.coroutines.channels.AbstractSendChannel.TryOfferDesc.getResult():java.lang.Object A[Catch: all \-\> 0x008f, MD:():T (m)] (LINE:71)\l0x002a: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('receive' java.lang.Object)]) = (r7 I:??[OBJECT, ARRAY]) \l0x002c: SGET  (r4 I:kotlin.Unit A[D('$i$a$\-withLock\-ConflatedChannel$offerSelectInternal$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x008f, TRY_LEAVE] (LINE:86)\l}"];
Node_60 [shape=record,label="{60\:\ 0x002e|0x002e: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l0x0032: INVOKE  (r0 I:java.lang.Object A[D('receive' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:89)\l0x0035: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('receive' java.lang.Object)]) \l0x0036: CHECK_CAST (r1 I:kotlinx.coroutines.channels.ReceiveOrClosed) = (kotlinx.coroutines.channels.ReceiveOrClosed) (r1 I:??[OBJECT, ARRAY]) \l0x0038: INVOKE  (r1 I:kotlinx.coroutines.channels.ReceiveOrClosed), (r10 I:java.lang.Object A[D('element' java.lang.Object)]) type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.completeResumeReceive(java.lang.Object):void A[MD:(E):void (m)]\l0x003b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('receive' java.lang.Object)])  (LINE:90)\l0x003c: CHECK_CAST (r1 I:kotlinx.coroutines.channels.ReceiveOrClosed) = (kotlinx.coroutines.channels.ReceiveOrClosed) (r1 I:??[OBJECT, ARRAY]) \l0x003e: INVOKE  (r1 I:java.lang.Object) = (r1 I:kotlinx.coroutines.channels.ReceiveOrClosed) type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.getOfferResult():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_61 [shape=record,label="{61\:\ 0x0042|RETURN\l|0x0042: RETURN  (r1 I:java.lang.Object) \l}"];
Node_77 [shape=record,label="{77\:\ 0x006c|TRY_ENTER\lTryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lCatch: all \-\> 0x008f\l|0x006c: INVOKE  (r5 I:boolean) = (r11 I:kotlinx.coroutines.selects.SelectInstance A[D('select' kotlinx.coroutines.selects.SelectInstance)]) type: INTERFACE call: kotlinx.coroutines.selects.SelectInstance.trySelect():boolean A[Catch: all \-\> 0x008f, MD:():boolean (m), TRY_ENTER] (LINE:82)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0070|0x0070: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:82:0x007a \l}"];
Node_79 [shape=record,label="{79\:\ 0x0072|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lCatch: all \-\> 0x008f\l|0x0072: INVOKE  (r5 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.getALREADY_SELECTED():java.lang.Object A[Catch: all \-\> 0x008f, MD:():java.lang.Object (m), TRY_LEAVE] (LINE:83)\l}"];
Node_80 [shape=record,label="{80\:\ 0x0076|0x0076: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_81 [shape=record,label="{81\:\ 0x0079|RETURN\l|0x0079: RETURN  (r5 I:java.lang.Object) \l}"];
Node_82 [shape=record,label="{82\:\ 0x007a|TRY_ENTER\lTryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lCatch: all \-\> 0x008f\l|0x007a: INVOKE  (r5 I:kotlinx.coroutines.internal.UndeliveredElementException) = (r9 I:kotlinx.coroutines.channels.ConflatedChannel), (r10 I:java.lang.Object A[D('element' java.lang.Object)]) type: DIRECT call: kotlinx.coroutines.channels.ConflatedChannel.updateValueLocked(java.lang.Object):kotlinx.coroutines.internal.UndeliveredElementException A[Catch: all \-\> 0x008f, MD:(java.lang.Object):kotlinx.coroutines.internal.UndeliveredElementException (m), TRY_ENTER] (LINE:85)\l}"];
Node_83 [shape=record,label="{83\:\ 0x007e|0x007e: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x0086 \l}"];
Node_84 [shape=record,label="{84\:\ 0x0080|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lCatch: all \-\> 0x008f\l|0x0080: SGET  (r5 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x008f, TRY_LEAVE] (LINE:86)\l}"];
Node_85 [shape=record,label="{85\:\ 0x0082|0x0082: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_86 [shape=record,label="{86\:\ 0x0085|RETURN\l|0x0085: RETURN  (r5 I:java.lang.Object) \l}"];
Node_87 [shape=record,label="{87\:\ 0x0086|0x0086: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:147)\l}"];
Node_88 [shape=record,label="{88\:\ 0x0088|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lCatch: all \-\> 0x008f\l|0x0088: THROW  (r5 I:java.lang.Throwable A[D('it' kotlinx.coroutines.internal.UndeliveredElementException)]) A[Catch: all \-\> 0x008f, TRY_ENTER, TRY_LEAVE]\l}"];
Node_89 [shape=record,label="{89\:\ 0x0089|0x0089: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$a$\-let\-ConflatedChannel$offerSelectInternal$1$2' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:147)\l0x008b: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_90 [shape=record,label="{90\:\ 0x008e|RETURN\l|0x008e: RETURN  (r5 I:java.lang.Object) \l}"];
Node_91 [shape=record,label="{91\:\ 0x008f|ExcHandler: all \-\> 0x008f\l|0x008f: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x008f] (LINE:86)\l}"];
Node_92 [shape=record,label="{92\:\ 0x0090|0x0090: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_93 [shape=record,label="{93\:\ 0x0093|0x0093: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.ConflatedChannel.offerSelectInternal((r9 'this' I:kotlinx.coroutines.channels.ConflatedChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r10 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlinx.coroutines.selects.SelectInstance\<?\> A[D('select' kotlinx.coroutines.selects.SelectInstance), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:81:0x0079 \-\> B:50:?, CROSS_EDGE: B:86:0x0085 \-\> B:50:?, CROSS_EDGE: B:88:0x0088 \-\> B:50:?, BACK_EDGE: B:67:0x004c \-\> B:57:0x0018, CROSS_EDGE: B:76:0x006b \-\> B:50:?, CROSS_EDGE: B:74:0x0067 \-\> B:50:?, CROSS_EDGE: B:69:0x0051 \-\> B:75:0x0068, CROSS_EDGE: B:55:0x0015 \-\> B:77:0x006c, CROSS_EDGE: B:90:0x008e \-\> B:50:?, CROSS_EDGE: B:93:0x0093 \-\> B:50:?\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x008f, blocks: (B:52:0x000b, B:54:0x0011, B:57:0x0018, B:59:0x0026, B:62:0x0043, B:65:0x0048, B:68:0x004d, B:70:0x0053, B:73:0x0058, B:74:0x0067, B:77:0x006c, B:79:0x0072, B:82:0x007a, B:84:0x0080, B:88:0x0088), top: B:94:0x000b \}\lTYPE_VARS: [E]\lSIGNATURE: (TE;Lkotlinx\/coroutines\/selects\/SelectInstance\<*\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x000b\-0x002c: r4 '$i$a$\-withLock\-ConflatedChannel$offerSelectInternal$1' I\l  0x001c\-0x002c: r5 'offerOp' Lkotlinx\/coroutines\/channels\/AbstractSendChannel$TryOfferDesc;\l  0x0023\-0x002c: r6 'failure' Ljava\/lang\/Object;\l  0x0003\-0x0032: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0004\-0x0032: r2 '$i$f$withLock' I\l  0x0001\-0x0067: r0 'receive' Ljava\/lang\/Object;\l  0x0043\-0x0067: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0043\-0x0067: r2 '$i$f$withLock' I\l  \-1 \-0x0067: r10 'element' Ljava\/lang\/Object;\l  \-1 \-0x0067: r11 'select' Lkotlinx\/coroutines\/selects\/SelectInstance;\l  0x0043\-0x0068: r4 '$i$a$\-withLock\-ConflatedChannel$offerSelectInternal$1' I\l  0x0043\-0x0068: r5 'offerOp' Lkotlinx\/coroutines\/channels\/AbstractSendChannel$TryOfferDesc;\l  0x0043\-0x0068: r6 'failure' Ljava\/lang\/Object;\l  0x006c\-0x0076: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x006c\-0x0076: r2 '$i$f$withLock' I\l  0x006c\-0x0076: r4 '$i$a$\-withLock\-ConflatedChannel$offerSelectInternal$1' I\l  0x007a\-0x0082: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x007a\-0x0082: r2 '$i$f$withLock' I\l  0x007a\-0x0082: r4 '$i$a$\-withLock\-ConflatedChannel$offerSelectInternal$1' I\l  0x0068\-0x0088: r0 'receive' Ljava\/lang\/Object;\l  0x0086\-0x0088: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0086\-0x0088: r2 '$i$f$withLock' I\l  0x0068\-0x0088: r10 'element' Ljava\/lang\/Object;\l  0x0068\-0x0088: r11 'select' Lkotlinx\/coroutines\/selects\/SelectInstance;\l  0x0087\-0x0089: r6 '$i$a$\-let\-ConflatedChannel$offerSelectInternal$1$2' I\l  0x0086\-0x0089: r5 'it' Lkotlinx\/coroutines\/internal\/UndeliveredElementException;\l  0x0089\-0x008b: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0089\-0x008b: r2 '$i$f$withLock' I\l  0x0086\-0x008b: r4 '$i$a$\-withLock\-ConflatedChannel$offerSelectInternal$1' I\l  0x0089\-0x008b: r5 'it' Lkotlinx\/coroutines\/channels\/Closed;\l  0x008a\-0x008b: r6 '$i$a$\-let\-ConflatedChannel$offerSelectInternal$1$1' I\l  0x0089\-0x0093: r0 'receive' Ljava\/lang\/Object;\l  0x008f\-0x0093: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x008f\-0x0093: r2 '$i$f$withLock' I\l  0x0089\-0x0093: r10 'element' Ljava\/lang\/Object;\l  0x0089\-0x0093: r11 'select' Lkotlinx\/coroutines\/selects\/SelectInstance;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractSendChannel.offerSelectInternal(E, kotlinx.coroutines.selects.SelectInstance\<?\>):java.lang.Object]\l}"];
MethodNode -> Node_49;Node_49 -> Node_51;
Node_51 -> Node_94;
Node_94 -> Node_52;
Node_94 -> Node_91;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_89;
Node_54 -> Node_55;
Node_55 -> Node_57[style=dashed];
Node_55 -> Node_77;
Node_57 -> Node_58;
Node_58 -> Node_62;
Node_58 -> Node_95[style=dashed];
Node_62 -> Node_63;
Node_63 -> Node_65;
Node_63 -> Node_96[style=dashed];
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_97;
Node_67 -> Node_57;
Node_97 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_75;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_73;
Node_72 -> Node_75;
Node_73 -> Node_74;
Node_74 -> Node_50;
Node_75 -> Node_76;
Node_76 -> Node_50;
Node_96 -> Node_64;
Node_64 -> Node_77;
Node_95 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_50;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_82;
Node_79 -> Node_80;
Node_80 -> Node_81;
Node_81 -> Node_50;
Node_82 -> Node_83;
Node_83 -> Node_84[style=dashed];
Node_83 -> Node_87;
Node_84 -> Node_85;
Node_85 -> Node_86;
Node_86 -> Node_50;
Node_87 -> Node_88;
Node_88 -> Node_50;
Node_89 -> Node_90;
Node_90 -> Node_50;
Node_91 -> Node_92;
Node_92 -> Node_93;
Node_93 -> Node_50;
}

