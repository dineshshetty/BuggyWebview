digraph "CFG forkotlinx.coroutines.channels.ConflatedChannel.pollSelectInternal(Lkotlinx\/coroutines\/selects\/SelectInstance;)Ljava\/lang\/Object;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:106)\l0x0001: IGET  (r1 I:java.util.concurrent.locks.ReentrantLock) = (r7 I:kotlinx.coroutines.channels.ConflatedChannel) kotlinx.coroutines.channels.ConflatedChannel.lock java.util.concurrent.locks.ReentrantLock  (LINE:107)\l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$withLock$iv' java.util.concurrent.locks.ReentrantLock)])  (LINE:150)\l0x0005: CHECK_CAST (r3 I:java.util.concurrent.locks.Lock) = (java.util.concurrent.locks.Lock) (r3 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l0x000a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_25 [shape=record,label="{25\:\ 0x000b|TRY_ENTER\lTryCatch #0 \{all \-\> 0x003a, blocks: (B:25:0x000b, B:27:0x0011, B:29:0x0017, B:32:0x001d, B:34:0x0023, B:37:0x002b), top: B:43:0x000b \}\lCatch: all \-\> 0x003a\l|0x000b: IGET  (r5 I:java.lang.Object) = (r7 I:kotlinx.coroutines.channels.ConflatedChannel) kotlinx.coroutines.channels.ConflatedChannel.value java.lang.Object A[Catch: all \-\> 0x003a, TRY_ENTER] (LINE:108)\l0x000d: SGET  (r6 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.EMPTY kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x003a]\l}"];
Node_26 [shape=record,label="{26\:\ 0x000f|0x000f: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x001d \l}"];
Node_27 [shape=record,label="{27\:\ 0x0011|TryCatch #0 \{all \-\> 0x003a, blocks: (B:25:0x000b, B:27:0x0011, B:29:0x0017, B:32:0x001d, B:34:0x0023, B:37:0x002b), top: B:43:0x000b \}\lCatch: all \-\> 0x003a\l|0x0011: INVOKE  (r5 I:kotlinx.coroutines.channels.Closed) = (r7 I:kotlinx.coroutines.channels.ConflatedChannel) type: VIRTUAL call: kotlinx.coroutines.channels.ConflatedChannel.getClosedForSend():kotlinx.coroutines.channels.Closed A[Catch: all \-\> 0x003a, MD:():kotlinx.coroutines.channels.Closed\<?\> (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0015|0x0015: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0019 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x003a, blocks: (B:25:0x000b, B:27:0x0011, B:29:0x0017, B:32:0x001d, B:34:0x0023, B:37:0x002b), top: B:43:0x000b \}\lCatch: all \-\> 0x003a\l|0x0017: SGET  (r5 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x003a, TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|0x0019: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x001c|RETURN\l|0x001c: RETURN  (r5 I:java.lang.Object) \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x001d|TRY_ENTER\lTryCatch #0 \{all \-\> 0x003a, blocks: (B:25:0x000b, B:27:0x0011, B:29:0x0017, B:32:0x001d, B:34:0x0023, B:37:0x002b), top: B:43:0x000b \}\lCatch: all \-\> 0x003a\l|0x001d: INVOKE  (r5 I:boolean) = (r8 I:kotlinx.coroutines.selects.SelectInstance A[D('select' kotlinx.coroutines.selects.SelectInstance)]) type: INTERFACE call: kotlinx.coroutines.selects.SelectInstance.trySelect():boolean A[Catch: all \-\> 0x003a, MD:():boolean (m), TRY_ENTER] (LINE:109)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0021|0x0021: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x002b \l}"];
Node_34 [shape=record,label="{34\:\ 0x0023|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x003a, blocks: (B:25:0x000b, B:27:0x0011, B:29:0x0017, B:32:0x001d, B:34:0x0023, B:37:0x002b), top: B:43:0x000b \}\lCatch: all \-\> 0x003a\l|0x0023: INVOKE  (r5 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.getALREADY_SELECTED():java.lang.Object A[Catch: all \-\> 0x003a, MD:():java.lang.Object (m), TRY_LEAVE] (LINE:110)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0027|0x0027: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x002a|RETURN\l|0x002a: RETURN  (r5 I:java.lang.Object) \l}"];
Node_37 [shape=record,label="{37\:\ 0x002b|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x003a, blocks: (B:25:0x000b, B:27:0x0011, B:29:0x0017, B:32:0x001d, B:34:0x0023, B:37:0x002b), top: B:43:0x000b \}\lCatch: all \-\> 0x003a\l|0x002b: IGET  (r5 I:java.lang.Object) = (r7 I:kotlinx.coroutines.channels.ConflatedChannel) kotlinx.coroutines.channels.ConflatedChannel.value java.lang.Object A[Catch: all \-\> 0x003a, TRY_ENTER] (LINE:111)\l0x002d: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) = (r5 I:??[OBJECT, ARRAY]) \l0x002e: SGET  (r5 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.EMPTY kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x003a] (LINE:112)\l0x0030: IPUT  (r5 I:java.lang.Object), (r7 I:kotlinx.coroutines.channels.ConflatedChannel) kotlinx.coroutines.channels.ConflatedChannel.value java.lang.Object A[Catch: all \-\> 0x003a]\l0x0033: SGET  (r4 I:kotlin.Unit A[D('$i$a$\-withLock\-ConflatedChannel$pollSelectInternal$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x003a, TRY_LEAVE]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0035|0x0035: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0039|RETURN\l|0x0039: RETURN  (r0 I:java.lang.Object A[D('result' java.lang.Object)])  (LINE:114)\l}"];
Node_40 [shape=record,label="{40\:\ 0x003a|ExcHandler: all \-\> 0x003a\l|0x003a: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x003a] (LINE:113)\l}"];
Node_41 [shape=record,label="{41\:\ 0x003b|0x003b: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x003e|0x003e: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected java.lang.Object kotlinx.coroutines.channels.ConflatedChannel.pollSelectInternal((r7 'this' I:kotlinx.coroutines.channels.ConflatedChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r8 I:kotlinx.coroutines.selects.SelectInstance\<?\> A[D('select' kotlinx.coroutines.selects.SelectInstance), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0015 \-\> B:30:0x0019, CROSS_EDGE: B:36:0x002a \-\> B:23:?, CROSS_EDGE: B:39:0x0039 \-\> B:23:?, CROSS_EDGE: B:42:0x003e \-\> B:23:?\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x003a, blocks: (B:25:0x000b, B:27:0x0011, B:29:0x0017, B:32:0x001d, B:34:0x0023, B:37:0x002b), top: B:43:0x000b \}\lTYPE_VARS: [E]\lSIGNATURE: (Lkotlinx\/coroutines\/selects\/SelectInstance\<*\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x0003\-0x0019: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0004\-0x0019: r2 '$i$f$withLock' I\l  0x000b\-0x0019: r4 '$i$a$\-withLock\-ConflatedChannel$pollSelectInternal$1' I\l  0x001d\-0x0027: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x001d\-0x0027: r2 '$i$f$withLock' I\l  0x001d\-0x0027: r4 '$i$a$\-withLock\-ConflatedChannel$pollSelectInternal$1' I\l  0x002b\-0x0033: r4 '$i$a$\-withLock\-ConflatedChannel$pollSelectInternal$1' I\l  0x002b\-0x0039: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x002b\-0x0039: r2 '$i$f$withLock' I\l  0x0001\-0x003e: r0 'result' Ljava\/lang\/Object;\l  0x003a\-0x003e: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x003a\-0x003e: r2 '$i$f$withLock' I\l  \-1 \-0x003e: r8 'select' Lkotlinx\/coroutines\/selects\/SelectInstance;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractChannel.pollSelectInternal(kotlinx.coroutines.selects.SelectInstance\<?\>):java.lang.Object]\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_43;
Node_43 -> Node_25;
Node_43 -> Node_40;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_32;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_23;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_23;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_23;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_23;
}

