digraph "CFG forkotlinx.coroutines.channels.ConflatedChannel.onCancelIdempotent(Z)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0001|0x0001: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:123)\l0x0002: IGET  (r1 I:java.util.concurrent.locks.ReentrantLock) = (r6 I:kotlinx.coroutines.channels.ConflatedChannel) kotlinx.coroutines.channels.ConflatedChannel.lock java.util.concurrent.locks.ReentrantLock  (LINE:119)\l0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$withLock$iv' java.util.concurrent.locks.ReentrantLock)])  (LINE:151)\l0x0006: CHECK_CAST (r3 I:java.util.concurrent.locks.Lock) = (java.util.concurrent.locks.Lock) (r3 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l0x000b: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0023, blocks: (B:17:0x000c), top: B:26:0x000c \}\lCatch: all \-\> 0x0023\l|0x000c: SGET  (r5 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.EMPTY kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x0023, TRY_ENTER] (LINE:120)\l0x000e: INVOKE  (r5 I:kotlinx.coroutines.internal.UndeliveredElementException) = (r6 I:kotlinx.coroutines.channels.ConflatedChannel), (r5 I:java.lang.Object) type: DIRECT call: kotlinx.coroutines.channels.ConflatedChannel.updateValueLocked(java.lang.Object):kotlinx.coroutines.internal.UndeliveredElementException A[Catch: all \-\> 0x0023, MD:(java.lang.Object):kotlinx.coroutines.internal.UndeliveredElementException (m)]\l0x0012: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('undeliveredElementException' java.lang.Object)]) = (r5 I:??[OBJECT, ARRAY]) \l0x0014: SGET  (r4 I:kotlin.Unit A[D('$i$a$\-withLock\-ConflatedChannel$onCancelIdempotent$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x0023, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0016|0x0016: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l0x001a: INVOKE  (r6 I:kotlinx.coroutines.channels.AbstractChannel), (r7 I:boolean A[D('wasClosed' boolean)]) type: SUPER call: kotlinx.coroutines.channels.AbstractChannel.onCancelIdempotent(boolean):void A[MD:(boolean):void (m)] (LINE:122)\l}"];
Node_19 [shape=record,label="{19\:\ 0x001d|0x001d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('undeliveredElementException' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0020  (LINE:123)\l}"];
Node_20 [shape=record,label="{20\:\ 0x001f|RETURN\l|0x001f: RETURN    (LINE:124)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0020|0x0020: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('undeliveredElementException' java.lang.Object)])  (LINE:123)\l0x0021: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:147)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0022|0x0022: THROW  (r1 I:java.lang.Throwable A[D('it' kotlinx.coroutines.internal.UndeliveredElementException)])  (LINE:123)\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x0023|ExcHandler: all \-\> 0x0023\l|0x0023: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0023] (LINE:121)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0024|0x0024: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0027|0x0027: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.channels.ConflatedChannel.onCancelIdempotent((r6 'this' I:kotlinx.coroutines.channels.ConflatedChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r7 I:boolean A[D('wasClosed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:22:0x0022 \-\> B:15:?, CROSS_EDGE: B:25:0x0027 \-\> B:15:?, CROSS_EDGE: B:26:0x000c \-\> B:23:0x0023\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0023, blocks: (B:17:0x000c), top: B:26:0x000c \}\lTYPE_VARS: [E]\lDebug Info:\l  0x000c\-0x0014: r4 '$i$a$\-withLock\-ConflatedChannel$onCancelIdempotent$1' I\l  0x0004\-0x001a: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0005\-0x001a: r2 '$i$f$withLock' I\l  0x0021\-0x0023: r1 'it' Lkotlinx\/coroutines\/internal\/UndeliveredElementException;\l  0x0022\-0x0023: r2 '$i$a$\-let\-ConflatedChannel$onCancelIdempotent$2' I\l  0x0002\-0x0027: r0 'undeliveredElementException' Ljava\/lang\/Object;\l  0x0023\-0x0027: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0023\-0x0027: r2 '$i$f$withLock' I\l  \-1 \-0x0027: r7 'wasClosed' Z\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [123=4]\}\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractChannel.onCancelIdempotent(boolean):void]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_26;
Node_26 -> Node_17;
Node_26 -> Node_23;
Node_17 -> Node_18;
Node_17 -> Node_27;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_15;
Node_21 -> Node_22;
Node_22 -> Node_15;
Node_27 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_15;
}

