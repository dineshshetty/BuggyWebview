digraph "CFG forkotlinx.coroutines.channels.ChannelKt.Channel(ILkotlinx\/coroutines\/channels\/BufferOverflow;Lkotlin\/jvm\/functions\/Function1;)Lkotlinx\/coroutines\/channels\/Channel;" {
Node_66 [shape=record,label="{66\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_68 [shape=record,label="{68\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:773)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0001|0x0001: SWITCH  (r3 I:?? A[D('capacity' int)])\l case \-2: goto B:88:0x004f\l case \-1: goto B:80:0x0031\l case 0: goto B:75:0x001a\l case 2147483647: goto B:74:0x0012\l default: goto B:70:0x0004 \l}"];
Node_70 [shape=record,label="{70\:\ 0x0004|0x0004: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('capacity' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:92:0x0063  (LINE:792)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0006|0x0006: SGET  (r0 I:kotlinx.coroutines.channels.BufferOverflow) =  kotlinx.coroutines.channels.BufferOverflow.DROP_OLDEST kotlinx.coroutines.channels.BufferOverflow \l}"];
Node_72 [shape=record,label="{72\:\ 0x0008|0x0008: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:92:0x0063 \l}"];
Node_73 [shape=record,label="{73\:\ 0x000a|0x000a: NEW_INSTANCE  (r0 I:kotlinx.coroutines.channels.ConflatedChannel) =  kotlinx.coroutines.channels.ConflatedChannel  (LINE:793)\l0x000c: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.ConflatedChannel)\l  (r5 I:kotlin.jvm.functions.Function1 A[D('onUndeliveredElement' kotlin.jvm.functions.Function1)])\l type: DIRECT call: kotlinx.coroutines.channels.ConflatedChannel.\<init\>(kotlin.jvm.functions.Function1):void A[MD:(kotlin.jvm.functions.Function1\<? super E, kotlin.Unit\>):void (m)]\l0x000f: CHECK_CAST (r0 I:kotlinx.coroutines.channels.AbstractChannel) = (kotlinx.coroutines.channels.AbstractChannel) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_93 [shape=record,label="{93\:\ 0x006a|0x006a: CHECK_CAST (r0 I:kotlinx.coroutines.channels.Channel) = (kotlinx.coroutines.channels.Channel) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_94 [shape=record,label="{94\:\ 0x006c|RETURN\lORIG_RETURN\l|0x006c: RETURN  (r0 I:kotlinx.coroutines.channels.Channel\<E\>)  (LINE:797)\l}"];
Node_67 [shape=record,label="{67\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_92 [shape=record,label="{92\:\ 0x0063|0x0063: NEW_INSTANCE  (r0 I:kotlinx.coroutines.channels.ArrayChannel) =  kotlinx.coroutines.channels.ArrayChannel  (LINE:795)\l0x0065: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.ArrayChannel)\l  (r3 I:int A[D('capacity' int)])\l  (r4 I:kotlinx.coroutines.channels.BufferOverflow A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow)])\l  (r5 I:kotlin.jvm.functions.Function1 A[D('onUndeliveredElement' kotlin.jvm.functions.Function1)])\l type: DIRECT call: kotlinx.coroutines.channels.ArrayChannel.\<init\>(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1):void A[MD:(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1\<? super E, kotlin.Unit\>):void (m)]\l0x0068: CHECK_CAST (r0 I:kotlinx.coroutines.channels.AbstractChannel) = (kotlinx.coroutines.channels.AbstractChannel) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_74 [shape=record,label="{74\:\ 0x0012|0x0012: NEW_INSTANCE  (r0 I:kotlinx.coroutines.channels.LinkedListChannel) =  kotlinx.coroutines.channels.LinkedListChannel  (LINE:786)\l0x0014: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.LinkedListChannel)\l  (r5 I:kotlin.jvm.functions.Function1 A[D('onUndeliveredElement' kotlin.jvm.functions.Function1)])\l type: DIRECT call: kotlinx.coroutines.channels.LinkedListChannel.\<init\>(kotlin.jvm.functions.Function1):void A[MD:(kotlin.jvm.functions.Function1\<? super E, kotlin.Unit\>):void (m)]\l0x0017: CHECK_CAST (r0 I:kotlinx.coroutines.channels.Channel) = (kotlinx.coroutines.channels.Channel) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_95 [shape=record,label="{95\:\ ?|SYNTHETIC\lRETURN\l|0x006c: RETURN  (r0 I:kotlinx.coroutines.channels.Channel\<E\>) A[SYNTHETIC] (LINE:797)\l}"];
Node_75 [shape=record,label="{75\:\ 0x001a|0x001a: SGET  (r1 I:kotlinx.coroutines.channels.BufferOverflow) =  kotlinx.coroutines.channels.BufferOverflow.SUSPEND kotlinx.coroutines.channels.BufferOverflow  (LINE:775)\l}"];
Node_76 [shape=record,label="{76\:\ 0x001c|0x001c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:78:0x0026 \l}"];
Node_77 [shape=record,label="{77\:\ 0x001e|0x001e: NEW_INSTANCE  (r0 I:kotlinx.coroutines.channels.RendezvousChannel) =  kotlinx.coroutines.channels.RendezvousChannel  (LINE:776)\l0x0020: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.RendezvousChannel)\l  (r5 I:kotlin.jvm.functions.Function1 A[D('onUndeliveredElement' kotlin.jvm.functions.Function1)])\l type: DIRECT call: kotlinx.coroutines.channels.RendezvousChannel.\<init\>(kotlin.jvm.functions.Function1):void A[MD:(kotlin.jvm.functions.Function1\<? super E, kotlin.Unit\>):void (m)]\l0x0023: CHECK_CAST (r0 I:kotlinx.coroutines.channels.AbstractChannel) = (kotlinx.coroutines.channels.AbstractChannel) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_79 [shape=record,label="{79\:\ 0x002e|0x002e: CHECK_CAST (r0 I:kotlinx.coroutines.channels.Channel) = (kotlinx.coroutines.channels.Channel) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_96 [shape=record,label="{96\:\ ?|SYNTHETIC\lRETURN\l|0x006c: RETURN  (r0 I:kotlinx.coroutines.channels.Channel\<E\>) A[SYNTHETIC] (LINE:797)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0026|0x0026: NEW_INSTANCE  (r1 I:kotlinx.coroutines.channels.ArrayChannel) =  kotlinx.coroutines.channels.ArrayChannel  (LINE:778)\l0x0028: INVOKE  \l  (r1 I:kotlinx.coroutines.channels.ArrayChannel)\l  (r0 I:int)\l  (r4 I:kotlinx.coroutines.channels.BufferOverflow A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow)])\l  (r5 I:kotlin.jvm.functions.Function1 A[D('onUndeliveredElement' kotlin.jvm.functions.Function1)])\l type: DIRECT call: kotlinx.coroutines.channels.ArrayChannel.\<init\>(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1):void A[MD:(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1\<? super E, kotlin.Unit\>):void (m)]\l0x002b: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x002c: CHECK_CAST (r0 I:kotlinx.coroutines.channels.AbstractChannel) = (kotlinx.coroutines.channels.AbstractChannel) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_80 [shape=record,label="{80\:\ 0x0031|0x0031: SGET  (r1 I:kotlinx.coroutines.channels.BufferOverflow) =  kotlinx.coroutines.channels.BufferOverflow.SUSPEND kotlinx.coroutines.channels.BufferOverflow  (LINE:781)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0033|0x0033: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:83:0x0036 \l}"];
Node_83 [shape=record,label="{83\:\ 0x0036|0x0036: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_84 [shape=record,label="{84\:\ 0x0037|0x0037: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:86:0x0041 \l}"];
Node_85 [shape=record,label="{85\:\ 0x0039|0x0039: NEW_INSTANCE  (r0 I:kotlinx.coroutines.channels.ConflatedChannel) =  kotlinx.coroutines.channels.ConflatedChannel  (LINE:784)\l0x003b: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.ConflatedChannel)\l  (r5 I:kotlin.jvm.functions.Function1 A[D('onUndeliveredElement' kotlin.jvm.functions.Function1)])\l type: DIRECT call: kotlinx.coroutines.channels.ConflatedChannel.\<init\>(kotlin.jvm.functions.Function1):void A[MD:(kotlin.jvm.functions.Function1\<? super E, kotlin.Unit\>):void (m)]\l0x003e: CHECK_CAST (r0 I:kotlinx.coroutines.channels.Channel) = (kotlinx.coroutines.channels.Channel) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_97 [shape=record,label="{97\:\ ?|SYNTHETIC\lRETURN\l|0x006c: RETURN  (r0 I:kotlinx.coroutines.channels.Channel\<E\>) A[SYNTHETIC] (LINE:797)\l}"];
Node_86 [shape=record,label="{86\:\ 0x0041|0x0041: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:781)\l0x0043: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException A[D('$i$a$\-require\-ChannelKt$Channel$1' int)]) =  java.lang.IllegalArgumentException  (LINE:781)\l0x0045: CONST_STR  (r1 I:java.lang.String) =  \"CONFLATED capacity cannot be used with non\-default onBufferOverflow\" \l0x0047: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004b: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_87 [shape=record,label="{87\:\ 0x004e|0x004e: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_88 [shape=record,label="{88\:\ 0x004f|0x004f: NEW_INSTANCE  (r1 I:kotlinx.coroutines.channels.ArrayChannel) =  kotlinx.coroutines.channels.ArrayChannel  (LINE:787)\l0x0051: SGET  (r2 I:kotlinx.coroutines.channels.BufferOverflow) =  kotlinx.coroutines.channels.BufferOverflow.SUSPEND kotlinx.coroutines.channels.BufferOverflow  (LINE:788)\l}"];
Node_89 [shape=record,label="{89\:\ 0x0053|0x0053: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:91:0x005b \l}"];
Node_90 [shape=record,label="{90\:\ 0x0055|0x0055: SGET  (r0 I:kotlinx.coroutines.channels.Channel$Factory) =  kotlinx.coroutines.channels.Channel.Factory kotlinx.coroutines.channels.Channel$Factory \l0x0057: INVOKE  (r0 I:int) = (r0 I:kotlinx.coroutines.channels.Channel$Factory) type: VIRTUAL call: kotlinx.coroutines.channels.Channel.Factory.getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core():int A[MD:():int (m)]\l}"];
Node_91 [shape=record,label="{91\:\ 0x005b|0x005c: INVOKE  \l  (r1 I:kotlinx.coroutines.channels.ArrayChannel)\l  (r0 I:int)\l  (r4 I:kotlinx.coroutines.channels.BufferOverflow A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow)])\l  (r5 I:kotlin.jvm.functions.Function1 A[D('onUndeliveredElement' kotlin.jvm.functions.Function1)])\l type: DIRECT call: kotlinx.coroutines.channels.ArrayChannel.\<init\>(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1):void A[MD:(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1\<? super E, kotlin.Unit\>):void (m)] (LINE:787)\l0x005f: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0060: CHECK_CAST (r0 I:kotlinx.coroutines.channels.Channel) = (kotlinx.coroutines.channels.Channel) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_98 [shape=record,label="{98\:\ ?|SYNTHETIC\lRETURN\l|0x006c: RETURN  (r0 I:kotlinx.coroutines.channels.Channel\<E\>) A[SYNTHETIC] (LINE:797)\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.channels.Channel\<E\> kotlinx.coroutines.channels.ChannelKt.Channel((r3 I:int A[D('capacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlinx.coroutines.channels.BufferOverflow A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function1\<? super E, kotlin.Unit\> A[D('onUndeliveredElement' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:92:0x0063 \-\> B:93:0x006a, CROSS_EDGE: B:70:0x0004 \-\> B:92:0x0063, CROSS_EDGE: B:74:0x0012 \-\> B:94:0x006c, CROSS_EDGE: B:79:0x002e \-\> B:94:0x006c, CROSS_EDGE: B:78:0x0026 \-\> B:79:0x002e, CROSS_EDGE: B:85:0x0039 \-\> B:94:0x006c, CROSS_EDGE: B:87:0x004e \-\> B:67:?, CROSS_EDGE: B:81:0x0033 \-\> B:84:0x0037, CROSS_EDGE: B:91:0x005b \-\> B:94:0x006c, CROSS_EDGE: B:89:0x0053 \-\> B:91:0x005b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0042\-0x0043: r0 '$i$a$\-require\-ChannelKt$Channel$1' I\l  \-1 \-0x007f: r3 'capacity' I\l  \-1 \-0x007f: r4 'onBufferOverflow' Lkotlinx\/coroutines\/channels\/BufferOverflow;\l  \-1 \-0x007f: r5 'onUndeliveredElement' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [E]\lSIGNATURE: \<E:Ljava\/lang\/Object;\>(ILkotlinx\/coroutines\/channels\/BufferOverflow;Lkotlin\/jvm\/functions\/Function1\<\-TE;Lkotlin\/Unit;\>;)Lkotlinx\/coroutines\/channels\/Channel\<TE;\>;\l}"];
MethodNode -> Node_66;Node_66 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_69 -> Node_74;
Node_69 -> Node_75;
Node_69 -> Node_80;
Node_69 -> Node_88;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_92;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_92;
Node_73 -> Node_93;
Node_93 -> Node_94;
Node_94 -> Node_67;
Node_92 -> Node_93;
Node_74 -> Node_95;
Node_95 -> Node_67;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_78;
Node_77 -> Node_79;
Node_79 -> Node_96;
Node_96 -> Node_67;
Node_78 -> Node_79;
Node_80 -> Node_81;
Node_81 -> Node_83;
Node_81 -> Node_84[style=dashed];
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_86;
Node_85 -> Node_97;
Node_97 -> Node_67;
Node_86 -> Node_87;
Node_87 -> Node_67;
Node_88 -> Node_89;
Node_89 -> Node_90[style=dashed];
Node_89 -> Node_91;
Node_90 -> Node_91;
Node_91 -> Node_98;
Node_98 -> Node_67;
}

