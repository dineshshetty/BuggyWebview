digraph "CFG forkotlinx.coroutines.channels.LinkedListChannel.offerSelectInternal(Ljava\/lang\/Object;Lkotlinx\/coroutines\/selects\/SelectInstance;)Ljava\/lang\/Object;" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|LOOP_START\lLOOP:0: B:36:0x0000\-\>B:65:0x0000\l|0x0001: INVOKE  (r0 I:boolean) = (r3 I:kotlinx.coroutines.channels.LinkedListChannel) type: VIRTUAL call: kotlinx.coroutines.channels.LinkedListChannel.getHasReceiveOrClosed():boolean A[MD:():boolean (m)] (LINE:48)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x000c \l}"];
Node_38 [shape=record,label="{38\:\ 0x0007|0x0007: INVOKE  (r0 I:java.lang.Object) = \l  (r3 I:kotlinx.coroutines.channels.AbstractChannel)\l  (r4 I:java.lang.Object A[D('element' java.lang.Object)])\l  (r5 I:kotlinx.coroutines.selects.SelectInstance A[D('select' kotlinx.coroutines.selects.SelectInstance)])\l type: SUPER call: kotlinx.coroutines.channels.AbstractChannel.offerSelectInternal(java.lang.Object, kotlinx.coroutines.selects.SelectInstance):java.lang.Object A[MD:(E, kotlinx.coroutines.selects.SelectInstance\<?\>):java.lang.Object (m)] (LINE:49)\l}"];
Node_42 [shape=record,label="{42\:\ 0x001a|0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.getALREADY_SELECTED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:52)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0020|0x0020: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0027 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0027|0x0027: SGET  (r1 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS kotlinx.coroutines.internal.Symbol  (LINE:53)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0029|0x0029: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x002e \l}"];
Node_50 [shape=record,label="{50\:\ 0x002e|0x002e: SGET  (r1 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED kotlinx.coroutines.internal.Symbol  (LINE:54)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0030|0x0030: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x0033 \l}"];
Node_61 [shape=record,label="{61\:\ 0x0033|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0033|0x0033: SGET  (r1 I:java.lang.Object) =  kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC java.lang.Object  (LINE:55)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0035|0x0035: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0038 \l}"];
Node_64 [shape=record,label="{64\:\ 0x0038|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x0038|0x0038: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) kotlinx.coroutines.channels.Closed  (LINE:56)\l}"];
Node_57 [shape=record,label="{57\:\ 0x003a|0x003a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x003d \l}"];
Node_58 [shape=record,label="{58\:\ 0x003c|RETURN\l|0x003c: RETURN  (r0 I:java.lang.Object A[D('result' java.lang.Object)]) \l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_59 [shape=record,label="{59\:\ 0x003d|0x003d: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x003f: CONST_STR  (r2 I:java.lang.String) =  \"Invalid result \"  (LINE:57)\l0x0041: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String), (r0 I:java.lang.Object A[D('result' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x0045: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0049: INVOKE  (r1 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_60 [shape=record,label="{60\:\ 0x004c|0x004c: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_67 [shape=record,label="{67\:\ 0x0000|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:36:0x0000\-\>B:65:0x0000\l}"];
Node_66 [shape=record,label="{66\:\ 0x0000|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x002b|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x002b|0x002b: SGET  (r1 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS kotlinx.coroutines.internal.Symbol \l}"];
Node_49 [shape=record,label="{49\:\ 0x002d|RETURN\l|0x002d: RETURN  (r1 I:java.lang.Object) \l}"];
Node_62 [shape=record,label="{62\:\ 0x0022|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0022|0x0022: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.getALREADY_SELECTED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0026|RETURN\l|0x0026: RETURN  (r1 I:java.lang.Object) \l}"];
Node_39 [shape=record,label="{39\:\ 0x000c|0x000c: INVOKE  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc) = (r3 I:kotlinx.coroutines.channels.LinkedListChannel), (r4 I:java.lang.Object A[D('element' java.lang.Object)]) type: VIRTUAL call: kotlinx.coroutines.channels.LinkedListChannel.describeSendBuffered(java.lang.Object):kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc A[MD:(E):kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc\<?\> (m)] (LINE:50)\l0x0010: CHECK_CAST (r0 I:kotlinx.coroutines.internal.AtomicDesc) = (kotlinx.coroutines.internal.AtomicDesc) (r0 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r0 I:java.lang.Object) = \l  (r5 I:kotlinx.coroutines.selects.SelectInstance A[D('select' kotlinx.coroutines.selects.SelectInstance)])\l  (r0 I:kotlinx.coroutines.internal.AtomicDesc)\l type: INTERFACE call: kotlinx.coroutines.selects.SelectInstance.performAtomicTrySelect(kotlinx.coroutines.internal.AtomicDesc):java.lang.Object A[MD:(kotlinx.coroutines.internal.AtomicDesc):java.lang.Object (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x001a \l}"];
Node_41 [shape=record,label="{41\:\ 0x0018|0x0018: SGET  (r0 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS kotlinx.coroutines.internal.Symbol \l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.LinkedListChannel.offerSelectInternal((r3 'this' I:kotlinx.coroutines.channels.LinkedListChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r4 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlinx.coroutines.selects.SelectInstance\<?\> A[D('select' kotlinx.coroutines.selects.SelectInstance), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:49:0x002d \-\> B:35:?, CROSS_EDGE: B:58:0x003c \-\> B:35:?, CROSS_EDGE: B:60:0x004c \-\> B:35:?, BACK_EDGE: B:54:0x0035 \-\> B:36:0x0000, BACK_EDGE: B:51:0x0030 \-\> B:36:0x0000, CROSS_EDGE: B:41:0x0018 \-\> B:42:0x001a, CROSS_EDGE: B:40:0x0016 \-\> B:42:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (TE;Lkotlinx\/coroutines\/selects\/SelectInstance\<*\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x001b\-0x004c: r0 'result' Ljava\/lang\/Object;\l  \-1 \-0x004c: r4 'element' Ljava\/lang\/Object;\l  \-1 \-0x004c: r5 'select' Lkotlinx\/coroutines\/selects\/SelectInstance;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractSendChannel.offerSelectInternal(E, kotlinx.coroutines.selects.SelectInstance\<?\>):java.lang.Object]\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_46;
Node_43 -> Node_62[style=dashed];
Node_46 -> Node_47;
Node_47 -> Node_50;
Node_47 -> Node_63[style=dashed];
Node_50 -> Node_51;
Node_51 -> Node_61;
Node_51 -> Node_66[style=dashed];
Node_61 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_64;
Node_54 -> Node_67[style=dashed];
Node_64 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_35;
Node_59 -> Node_60;
Node_60 -> Node_35;
Node_67 -> Node_65;
Node_65 -> Node_36;
Node_66 -> Node_65;
Node_63 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_35;
Node_62 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_35;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
}

