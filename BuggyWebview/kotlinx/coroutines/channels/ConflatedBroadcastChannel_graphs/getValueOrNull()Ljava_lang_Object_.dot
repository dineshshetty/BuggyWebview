digraph "CFG forkotlinx.coroutines.channels.ConflatedBroadcastChannel.getValueOrNull()Ljava\/lang\/Object;" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|java.lang.Object r0 = r5._state\l}"];
Node_35 [shape=record,label="{35\:\ 0x0005|if ((r0 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel.Closed) == false) goto L3\l}"];
Node_37 [shape=record,label="{37\:\ 0x0008}"];
Node_38 [shape=record,label="{38\:\ 0x000a|if ((r0 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel.State) == false) goto L11\l}"];
Node_39 [shape=record,label="{39\:\ 0x000c|kotlinx.coroutines.internal.Symbol r1 = kotlinx.coroutines.channels.ConflatedBroadcastChannel.UNDEFINED\ljava.lang.Object r3 = (E) ((kotlinx.coroutines.channels.ConflatedBroadcastChannel.State) r0).value\l}"];
Node_40 [shape=record,label="{40\:\ 0x0014|if (r3 != r1) goto L7\l}"];
Node_42 [shape=record,label="{42\:\ 0x0017}"];
Node_43 [shape=record,label="{43\:\ 0x0018|RETURN\lORIG_RETURN\l|return r3\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_44 [shape=record,label="{44\:\ 0x0019}"];
Node_45 [shape=record,label="{45\:\ 0x0028|throw new java.lang.IllegalStateException(kotlin.jvm.internal.Intrinsics.stringPlus(\"Invalid state \", r0).toString())\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
MethodNode[shape=record,label="{public final E kotlinx.coroutines.channels.ConflatedBroadcastChannel.getValueOrNull((r5v0 'this' kotlinx.coroutines.channels.ConflatedBroadcastChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:40:0x0014 \-\> B:43:0x0018, CROSS_EDGE: B:45:0x0028 \-\> B:33:?, CROSS_EDGE: B:35:0x0005 \-\> B:43:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: ()TE;\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_46[style=dashed];
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_44;
Node_39 -> Node_40;
Node_40 -> Node_42;
Node_40 -> Node_47[style=dashed];
Node_42 -> Node_43;
Node_43 -> Node_33;
Node_47 -> Node_33;
Node_44 -> Node_45;
Node_45 -> Node_33;
Node_46 -> Node_33;
}

