digraph "CFG forkotlinx.coroutines.channels.ConflatedBroadcastChannel.openSubscription()Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_44 [shape=record,label="{44\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x0000|kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber r0 = new kotlinx.coroutines.channels.ConflatedBroadcastChannel.Subscriber(r8)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0007|LOOP_START\lLOOP:0: B:47:0x0007\-\>B:57:0x004a\l|java.lang.Object r3 = r8._state\l}"];
Node_48 [shape=record,label="{48\:\ 0x000e|if ((r3 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel.Closed) == false) goto L4\l}"];
Node_51 [shape=record,label="{51\:\ 0x001c}"];
Node_52 [shape=record,label="{52\:\ 0x001e|if ((r3 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel.State) == false) goto L15\l}"];
Node_53 [shape=record,label="{53\:\ 0x0020}"];
Node_54 [shape=record,label="{54\:\ 0x0027|if (((kotlinx.coroutines.channels.ConflatedBroadcastChannel.State) r3).value == kotlinx.coroutines.channels.ConflatedBroadcastChannel.UNDEFINED) goto L9\l}"];
Node_55 [shape=record,label="{55\:\ 0x0029|r0.offerInternal(((kotlinx.coroutines.channels.ConflatedBroadcastChannel.State) r3).value)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0031|kotlinx.coroutines.channels.ConflatedBroadcastChannel$State r5 = new kotlinx.coroutines.channels.ConflatedBroadcastChannel.State(((kotlinx.coroutines.channels.ConflatedBroadcastChannel.State) r3).value, addSubscriber(((kotlinx.coroutines.channels.ConflatedBroadcastChannel.State) r3).subscribers, r0))\l}"];
Node_57 [shape=record,label="{57\:\ 0x004a|LOOP_END\lLOOP:0: B:47:0x0007\-\>B:57:0x004a\l|if (androidx.concurrent.futures.C0125xc40028dd.m112m(kotlinx.coroutines.channels.ConflatedBroadcastChannel._state$FU, r8, r3, r5) == false) goto L2\l}"];
Node_63 [shape=record,label="{63\:\ 0x004c|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x004c}"];
Node_59 [shape=record,label="{59\:\ 0x004f|RETURN\l|return r0\l}"];
Node_45 [shape=record,label="{45\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_64 [shape=record,label="{64\:\ 0x0052|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0052}"];
Node_62 [shape=record,label="{62\:\ 0x0061|throw new java.lang.IllegalStateException(kotlin.jvm.internal.Intrinsics.stringPlus(\"Invalid state \", r3).toString())\l}"];
Node_65 [shape=record,label="{65\:\ 0x0010|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0010|r0.close(((kotlinx.coroutines.channels.ConflatedBroadcastChannel.Closed) r3).closeCause)\l}"];
Node_50 [shape=record,label="{50\:\ 0x001b|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.channels.ReceiveChannel\<E\> kotlinx.coroutines.channels.ConflatedBroadcastChannel.openSubscription((r8v0 'this' kotlinx.coroutines.channels.ConflatedBroadcastChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:59:0x004f \-\> B:45:?, BACK_EDGE: B:57:0x004a \-\> B:47:0x0007, CROSS_EDGE: B:54:0x0027 \-\> B:56:0x0031, CROSS_EDGE: B:62:0x0061 \-\> B:45:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: ()Lkotlinx\/coroutines\/channels\/ReceiveChannel\<TE;\>;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r8v0, resolved type: kotlinx.coroutines.channels.ConflatedBroadcastChannel\<E\>\l \-\> Multi\-variable search result rejected for r0v0, resolved type: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber\}\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.BroadcastChannel.openSubscription():kotlinx.coroutines.channels.ReceiveChannel\<E\>]\l}"];
MethodNode -> Node_44;Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_51;
Node_48 -> Node_65[style=dashed];
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_64;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_47;
Node_57 -> Node_63[style=dashed];
Node_63 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_45;
Node_64 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_45;
Node_65 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_45;
}

