digraph "CFG forkotlinx.coroutines.channels.ConflatedBroadcastChannel.openSubscription()Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_44 [shape=record,label="{44\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber) =  kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber  (LINE:100)\l0x0002: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)\l  (r8 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel)\l type: DIRECT call: kotlinx.coroutines.channels.ConflatedBroadcastChannel.Subscriber.\<init\>(kotlinx.coroutines.channels.ConflatedBroadcastChannel):void A[MD:(kotlinx.coroutines.channels.ConflatedBroadcastChannel\<E\>):void (m)]\l0x0005: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY])  (LINE:101)\l0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0007|LOOP_START\lLOOP:0: B:47:0x0007\-\>B:57:0x004a\l|0x0008: IGET  (r3 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel A[D('$this$loop$iv' kotlinx.coroutines.channels.ConflatedBroadcastChannel)])\l kotlinx.coroutines.channels.ConflatedBroadcastChannel._state java.lang.Object  (LINE:300)\l0x000a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: INSTANCE_OF  (r5 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed  (LINE:103)\l}"];
Node_48 [shape=record,label="{48\:\ 0x000e|0x000e: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x001c \l}"];
Node_51 [shape=record,label="{51\:\ 0x001c|0x001c: INSTANCE_OF  (r5 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.channels.ConflatedBroadcastChannel$State  (LINE:107)\l}"];
Node_52 [shape=record,label="{52\:\ 0x001e|0x001e: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0052 \l}"];
Node_53 [shape=record,label="{53\:\ 0x0020|0x0020: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)])  (LINE:108)\l0x0021: CHECK_CAST (r5 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) (r5 I:??[OBJECT, ARRAY]) \l0x0023: IGET  (r5 I:java.lang.Object) = (r5 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) kotlinx.coroutines.channels.ConflatedBroadcastChannel.State.value java.lang.Object \l0x0025: SGET  (r6 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.ConflatedBroadcastChannel.UNDEFINED kotlinx.coroutines.internal.Symbol \l}"];
Node_54 [shape=record,label="{54\:\ 0x0027|0x0027: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0031 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0029|0x0029: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)])  (LINE:109)\l0x002a: CHECK_CAST (r5 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) (r5 I:??[OBJECT, ARRAY]) \l0x002c: IGET  (r5 I:java.lang.Object) = (r5 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) kotlinx.coroutines.channels.ConflatedBroadcastChannel.State.value java.lang.Object \l0x002e: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber A[D('subscriber' kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)])\l  (r5 I:java.lang.Object)\l type: VIRTUAL call: kotlinx.coroutines.channels.ConflatedBroadcastChannel.Subscriber.offerInternal(java.lang.Object):java.lang.Object A[MD:(E):java.lang.Object (m)]\l}"];
Node_56 [shape=record,label="{56\:\ 0x0031|0x0031: NEW_INSTANCE  (r5 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) =  kotlinx.coroutines.channels.ConflatedBroadcastChannel$State  (LINE:110)\l0x0033: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) \l0x0034: CHECK_CAST (r6 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) (r6 I:??[OBJECT, ARRAY]) \l0x0036: IGET  (r6 I:java.lang.Object) = (r6 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) kotlinx.coroutines.channels.ConflatedBroadcastChannel.State.value java.lang.Object \l0x0038: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) \l0x0039: CHECK_CAST (r7 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) (r7 I:??[OBJECT, ARRAY]) \l0x003b: IGET  (r7 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber\<E\>[]) = (r7 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) kotlinx.coroutines.channels.ConflatedBroadcastChannel.State.subscribers kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] \l0x003d: INVOKE  (r7 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[]) = \l  (r8 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel)\l  (r7 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[])\l  (r0 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber A[D('subscriber' kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)])\l type: DIRECT call: kotlinx.coroutines.channels.ConflatedBroadcastChannel.addSubscriber(kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[], kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber):kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] A[MD:(kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber\<E\>[], kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber\<E\>):kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber\<E\>[] (m)]\l0x0041: INVOKE  \l  (r5 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$State)\l  (r6 I:java.lang.Object)\l  (r7 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[])\l type: DIRECT call: kotlinx.coroutines.channels.ConflatedBroadcastChannel.State.\<init\>(java.lang.Object, kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[]):void A[MD:(java.lang.Object, kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber\<E\>[]):void (m)]\l0x0044: SGET  (r6 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.channels.ConflatedBroadcastChannel._state$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:111)\l0x0046: INVOKE  (r6 I:boolean) = \l  (r6 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r8 I:java.lang.Object)\l  (r3 I:java.lang.Object A[D('state' java.lang.Object)])\l  (r5 I:java.lang.Object A[D('update' kotlinx.coroutines.channels.ConflatedBroadcastChannel$State)])\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x004a|LOOP_END\lLOOP:0: B:47:0x0007\-\>B:57:0x004a\l|0x004a: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0007 \l}"];
Node_63 [shape=record,label="{63\:\ 0x004c|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x004c|0x004c: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('subscriber' kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)])  (LINE:112)\l0x004d: CHECK_CAST (r6 I:kotlinx.coroutines.channels.ReceiveChannel) = (kotlinx.coroutines.channels.ReceiveChannel) (r6 I:??[OBJECT, ARRAY]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x004f|RETURN\l|0x004f: RETURN  (r6 I:kotlinx.coroutines.channels.ReceiveChannel\<E\>) \l}"];
Node_45 [shape=record,label="{45\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_64 [shape=record,label="{64\:\ 0x0052|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0052|0x0052: NEW_INSTANCE  (r5 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:112)\l0x0054: CONST_STR  (r6 I:java.lang.String) =  \"Invalid state \"  (LINE:114)\l0x0056: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.String), (r3 I:java.lang.Object A[D('state' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x005a: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x005e: INVOKE  (r5 I:java.lang.IllegalStateException), (r6 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x0061|0x0061: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_65 [shape=record,label="{65\:\ 0x0010|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0010|0x0010: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)])  (LINE:104)\l0x0011: CHECK_CAST (r5 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed) = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed) (r5 I:??[OBJECT, ARRAY]) \l0x0013: IGET  (r5 I:java.lang.Throwable) = (r5 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed) kotlinx.coroutines.channels.ConflatedBroadcastChannel.Closed.closeCause java.lang.Throwable \l0x0015: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber A[D('subscriber' kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)])\l  (r5 I:java.lang.Throwable)\l type: VIRTUAL call: kotlinx.coroutines.channels.ConflatedBroadcastChannel.Subscriber.close(java.lang.Throwable):boolean A[MD:(java.lang.Throwable):boolean (m)]\l0x0018: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('subscriber' kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)])  (LINE:105)\l0x0019: CHECK_CAST (r5 I:kotlinx.coroutines.channels.ReceiveChannel) = (kotlinx.coroutines.channels.ReceiveChannel) (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x001b|RETURN\l|0x001b: RETURN  (r5 I:kotlinx.coroutines.channels.ReceiveChannel\<E\>) \l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.channels.ReceiveChannel\<E\> kotlinx.coroutines.channels.ConflatedBroadcastChannel.openSubscription((r8 'this' I:kotlinx.coroutines.channels.ConflatedBroadcastChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:59:0x004f \-\> B:45:?, BACK_EDGE: B:57:0x004a \-\> B:47:0x0007, CROSS_EDGE: B:54:0x0027 \-\> B:56:0x0031, CROSS_EDGE: B:62:0x0061 \-\> B:45:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: ()Lkotlinx\/coroutines\/channels\/ReceiveChannel\<TE;\>;\lDebug Info:\l  0x0044\-0x0050: r5 'update' Lkotlinx\/coroutines\/channels\/ConflatedBroadcastChannel$State;\l  0x000a\-0x0051: r3 'state' Ljava\/lang\/Object;\l  0x000b\-0x0051: r4 '$i$a$\-loop\-ConflatedBroadcastChannel$openSubscription$1' I\l  0x0005\-0x0061: r0 'subscriber' Lkotlinx\/coroutines\/channels\/ConflatedBroadcastChannel$Subscriber;\l  0x0006\-0x0061: r1 '$this$loop$iv' Lkotlinx\/coroutines\/channels\/ConflatedBroadcastChannel;\l  0x0007\-0x0061: r2 '$i$f$loop' I\l  0x0052\-0x0061: r3 'state' Ljava\/lang\/Object;\l  0x0052\-0x0061: r4 '$i$a$\-loop\-ConflatedBroadcastChannel$openSubscription$1' I\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.BroadcastChannel.openSubscription():kotlinx.coroutines.channels.ReceiveChannel\<E\>]\l}"];
MethodNode -> Node_44;Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_51;
Node_48 -> Node_65[style=dashed];
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_64;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_47;
Node_57 -> Node_63[style=dashed];
Node_63 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_45;
Node_64 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_45;
Node_65 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_45;
}

