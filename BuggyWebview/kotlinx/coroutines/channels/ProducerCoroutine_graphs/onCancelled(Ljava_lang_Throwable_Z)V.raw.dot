digraph "CFG forkotlinx.coroutines.channels.ProducerCoroutine.onCancelled(Ljava\/lang\/Throwable;Z)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.channels.Channel) = (r2 I:kotlinx.coroutines.channels.ProducerCoroutine) type: VIRTUAL call: kotlinx.coroutines.channels.ProducerCoroutine.get_channel():kotlinx.coroutines.channels.Channel A[MD:():kotlinx.coroutines.channels.Channel\<E\> (m)] (LINE:147)\l0x0004: INVOKE  (r0 I:boolean) = (r0 I:kotlinx.coroutines.channels.Channel), (r3 I:java.lang.Throwable A[D('cause' java.lang.Throwable)]) type: INTERFACE call: kotlinx.coroutines.channels.Channel.close(java.lang.Throwable):boolean A[MD:(java.lang.Throwable):boolean (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('processed' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:?  (LINE:148)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('handled' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:? \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext) = (r2 I:kotlinx.coroutines.channels.ProducerCoroutine) type: VIRTUAL call: kotlinx.coroutines.channels.ProducerCoroutine.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)]\l0x0010: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext), (r3 I:java.lang.Throwable A[D('cause' java.lang.Throwable)]) type: STATIC call: kotlinx.coroutines.CoroutineExceptionHandlerKt.handleCoroutineException(kotlin.coroutines.CoroutineContext, java.lang.Throwable):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Throwable):void (m)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|RETURN\lORIG_RETURN\l|0x0013: RETURN    (LINE:149)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|0x0013: RETURN   A[SYNTHETIC] (LINE:149)\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|0x0013: RETURN   A[SYNTHETIC] (LINE:149)\l}"];
MethodNode[shape=record,label="{protected void kotlinx.coroutines.channels.ProducerCoroutine.onCancelled((r2 'this' I:kotlinx.coroutines.channels.ProducerCoroutine\<E\> A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('handled' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:4:0x000a \-\> B:6:0x0013, CROSS_EDGE: B:3:0x0008 \-\> B:6:0x0013\lDebug Info:\l  0x0008\-0x0013: r0 'processed' Z\l  \-1 \-0x0013: r3 'cause' Ljava\/lang\/Throwable;\l  \-1 \-0x0013: r4 'handled' Z\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.AbstractCoroutine.onCancelled(java.lang.Throwable, boolean):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_8 -> Node_1;
Node_7 -> Node_1;
}

