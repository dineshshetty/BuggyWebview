digraph "CFG forkotlinx.coroutines.channels.ProducerCoroutine.getChannel()Lkotlinx\/coroutines\/channels\/SendChannel;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0006|RETURN\l|return getChannel()\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ kotlinx.coroutines.channels.SendChannel kotlinx.coroutines.channels.ProducerCoroutine.getChannel((r1v0 'this' kotlinx.coroutines.channels.ProducerCoroutine\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.ChannelCoroutine.getChannel():kotlinx.coroutines.channels.Channel\<E\>, kotlinx.coroutines.channels.ProducerScope.getChannel():kotlinx.coroutines.channels.SendChannel\<E\>]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

