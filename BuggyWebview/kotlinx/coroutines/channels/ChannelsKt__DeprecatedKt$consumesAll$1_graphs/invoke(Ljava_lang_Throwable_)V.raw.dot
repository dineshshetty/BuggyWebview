digraph "CFG forkotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1.invoke(Ljava\/lang\/Throwable;)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:18)\l0x0001: IGET  (r1 I:kotlinx.coroutines.channels.ReceiveChannel\<?\>[]) = (r8 I:kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1) kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1.$channels kotlinx.coroutines.channels.ReceiveChannel[]  (LINE:19)\l0x0003: ARRAY_LENGTH  (r2 I:int) = (r1 I:??[]) \l0x0004: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0005|LOOP_START\lLOOP:0: B:27:0x0005\-\>B:44:0x0005\l|0x0005: IF  (r3 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:41:0x001b \l}"];
Node_28 [shape=record,label="{28\:\ 0x0007|0x0007: AGET  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x0009: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_39 [shape=record,label="{39\:\ 0x000c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x000c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0010, blocks: (B:29:0x000c), top: B:39:0x000c \}\lCatch: all \-\> 0x0010\l|0x000c: INVOKE  \l  (r4 I:kotlinx.coroutines.channels.ReceiveChannel A[D('channel' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r9 I:java.lang.Throwable A[D('cause' java.lang.Throwable)])\l type: STATIC call: kotlinx.coroutines.channels.ChannelsKt.cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel, java.lang.Throwable):void A[Catch: all \-\> 0x0010, MD:(kotlinx.coroutines.channels.ReceiveChannel\<?\>, java.lang.Throwable):void (m), TRY_ENTER, TRY_LEAVE] (LINE:21)\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_45 [shape=record,label="{45\:\ 0x0005|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0005|LOOP_END\lSYNTHETIC\lLOOP:0: B:27:0x0005\-\>B:44:0x0005\l}"];
Node_31 [shape=record,label="{31\:\ 0x0010|ExcHandler: all \-\> 0x0010\l|0x0010: MOVE_EXCEPTION  (r5 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0010] (LINE:22)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('exception' java.lang.Throwable)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0015  (LINE:23)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0015|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0015|0x0015: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('exception' java.lang.Throwable)])  (LINE:26)\l0x0016: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: INVOKE  \l  (r6 I:java.lang.Throwable A[D('$this$addSuppressedThrowable$iv' java.lang.Throwable)])\l  (r5 I:java.lang.Throwable A[D('e' java.lang.Throwable)])\l type: STATIC call: kotlin.ExceptionsKt.addSuppressed(java.lang.Throwable, java.lang.Throwable):void A[MD:(java.lang.Throwable, java.lang.Throwable):void (m)] (LINE:480)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0005|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0013|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0013|0x0013: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('exception' java.lang.Throwable)]) = (r5 I:??[OBJECT, ARRAY] A[D('e' java.lang.Throwable)])  (LINE:24)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0005|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x001b|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('exception' java.lang.Throwable)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x001e  (LINE:29)\l}"];
Node_36 [shape=record,label="{36\:\ 0x001d|RETURN\l|0x001d: RETURN    (LINE:30)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x001e|0x001e: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('exception' java.lang.Throwable)])  (LINE:29)\l0x001f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:481)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0020|0x0020: THROW  (r1 I:java.lang.Throwable A[D('it' java.lang.Throwable)])  (LINE:29)\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1.invoke((r8 'this' I:kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1 A[IMMUTABLE_TYPE, THIS]), (r9 I:java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x000c \-\> B:27:0x0005, BACK_EDGE: B:33:0x0013 \-\> B:27:0x0005, BACK_EDGE: B:34:0x0015 \-\> B:27:0x0005, CROSS_EDGE: B:39:0x000c \-\> B:31:0x0010, CROSS_EDGE: B:38:0x0020 \-\> B:25:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x001a: r5 'e' Ljava\/lang\/Throwable;\l  0x0016\-0x001a: r6 '$this$addSuppressedThrowable$iv' Ljava\/lang\/Throwable;\l  0x0017\-0x001a: r7 '$i$f$addSuppressedThrowable' I\l  0x0009\-0x001b: r4 'channel' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l  0x0001\-0x0020: r0 'exception' Ljava\/lang\/Throwable;\l  0x001f\-0x0020: r1 'it' Ljava\/lang\/Throwable;\l  0x0020\-0x0020: r2 '$i$a$\-let\-ChannelsKt__DeprecatedKt$consumesAll$1$1' I\l  \-1 \-0x0020: r9 'cause' Ljava\/lang\/Throwable;\lTryCatch #0 \{all \-\> 0x0010, blocks: (B:29:0x000c), top: B:39:0x000c \}\lBRIDGED_BY: kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1.invoke(java.lang.Throwable):kotlin.Unit\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_41;
Node_28 -> Node_39;
Node_39 -> Node_29;
Node_39 -> Node_31;
Node_29 -> Node_40;
Node_29 -> Node_45;
Node_40 -> Node_31;
Node_45 -> Node_44;
Node_44 -> Node_27;
Node_31 -> Node_32;
Node_32 -> Node_42;
Node_32 -> Node_43[style=dashed];
Node_42 -> Node_34;
Node_34 -> Node_46;
Node_46 -> Node_44;
Node_43 -> Node_33;
Node_33 -> Node_47;
Node_47 -> Node_44;
Node_41 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_25;
Node_37 -> Node_38;
Node_38 -> Node_25;
}

