digraph "CFG forkotlinx.coroutines.channels.BroadcastKt.broadcast$default(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/CoroutineStart;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function2;ILjava\/lang\/Object;)Lkotlinx\/coroutines\/channels\/BroadcastChannel;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r13 I:??[int, boolean]) = (r12 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:114)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: SGET  (r7 I:kotlin.coroutines.EmptyCoroutineContext) =  kotlin.coroutines.EmptyCoroutineContext.INSTANCE kotlin.coroutines.EmptyCoroutineContext  (LINE:115)\l0x0006: CHECK_CAST (r7 I:kotlin.coroutines.CoroutineContext) = (kotlin.coroutines.CoroutineContext) (r7 I:??[OBJECT, ARRAY]) \l0x0008: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: ARITH  (r7 I:??[int, boolean]) = (r12 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0012 \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:116)\l0x0010: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|0x0013: ARITH  (r7 I:??[int, boolean]) = (r12 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|0x0015: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|0x0017: SGET  (r9 I:kotlinx.coroutines.CoroutineStart) =  kotlinx.coroutines.CoroutineStart.LAZY kotlinx.coroutines.CoroutineStart  (LINE:117)\l0x0019: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x001c|0x001c: ARITH  (r7 I:??[int, boolean]) = (r12 I:??[int, boolean, short, byte, char]) & (8 ??[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|0x001e: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0023 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0020|0x0020: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:118)\l0x0021: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0024|0x0024: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0025: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY]) \l0x0026: INVOKE  (r6 I:kotlinx.coroutines.channels.BroadcastChannel) = \l  (r0 I:kotlinx.coroutines.CoroutineScope)\l  (r1 I:kotlin.coroutines.CoroutineContext)\l  (r2 I:int)\l  (r3 I:kotlinx.coroutines.CoroutineStart)\l  (r4 I:kotlin.jvm.functions.Function1)\l  (r5 I:kotlin.jvm.functions.Function2)\l type: STATIC call: kotlinx.coroutines.channels.BroadcastKt.broadcast(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2):kotlinx.coroutines.channels.BroadcastChannel A[MD:\<E\>:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\>, kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.channels.ProducerScope\<? super E\>, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>):kotlinx.coroutines.channels.BroadcastChannel\<E\> (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x002a|RETURN\l|0x002a: RETURN  (r6 I:kotlinx.coroutines.channels.BroadcastChannel) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0023|0x0023: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY])  (LINE:114)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|0x001b: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY])  (LINE:114)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:114)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY])  (LINE:114)\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ kotlinx.coroutines.channels.BroadcastChannel kotlinx.coroutines.channels.BroadcastKt.broadcast$default((r6 I:kotlinx.coroutines.CoroutineScope A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.coroutines.CoroutineContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlinx.coroutines.CoroutineStart A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function1 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlin.jvm.functions.Function2 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:17:0x0023 \-\> B:18:0x0024, CROSS_EDGE: B:13:0x001b \-\> B:14:0x001c, CROSS_EDGE: B:9:0x0012 \-\> B:10:0x0013, CROSS_EDGE: B:5:0x000a \-\> B:6:0x000b\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [114=5]\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_1;
Node_17 -> Node_18;
Node_13 -> Node_14;
Node_9 -> Node_10;
Node_5 -> Node_6;
}

