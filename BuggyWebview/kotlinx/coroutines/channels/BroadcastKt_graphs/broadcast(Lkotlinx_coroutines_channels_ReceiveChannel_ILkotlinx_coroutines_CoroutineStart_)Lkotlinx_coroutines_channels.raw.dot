digraph "CFG forkotlinx.coroutines.channels.BroadcastKt.broadcast(Lkotlinx\/coroutines\/channels\/ReceiveChannel;ILkotlinx\/coroutines\/CoroutineStart;)Lkotlinx\/coroutines\/channels\/BroadcastChannel;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.GlobalScope) =  kotlinx.coroutines.GlobalScope.INSTANCE kotlinx.coroutines.GlobalScope  (LINE:49)\l0x0002: CHECK_CAST (r0 I:kotlinx.coroutines.CoroutineScope) = (kotlinx.coroutines.CoroutineScope) (r0 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  (r1 I:kotlinx.coroutines.CoroutineDispatcher) =  type: STATIC call: kotlinx.coroutines.Dispatchers.getUnconfined():kotlinx.coroutines.CoroutineDispatcher A[MD:():kotlinx.coroutines.CoroutineDispatcher (m)]\l0x0008: CHECK_CAST (r1 I:kotlin.coroutines.CoroutineContext) = (kotlin.coroutines.CoroutineContext) (r1 I:??[OBJECT, ARRAY]) \l0x000a: INVOKE  (r0 I:kotlinx.coroutines.CoroutineScope) = (r0 I:kotlinx.coroutines.CoroutineScope), (r1 I:kotlin.coroutines.CoroutineContext) type: STATIC call: kotlinx.coroutines.CoroutineScopeKt.plus(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.CoroutineScope A[MD:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.CoroutineScope (m)]\l0x000e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: SGET  (r2 I:kotlinx.coroutines.CoroutineExceptionHandler$Key) =  kotlinx.coroutines.CoroutineExceptionHandler.Key kotlinx.coroutines.CoroutineExceptionHandler$Key  (LINE:200)\l0x0011: NEW_INSTANCE  (r3 I:kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1) =  kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1 \l0x0013: INVOKE  \l  (r3 I:kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1)\l  (r2 I:kotlinx.coroutines.CoroutineExceptionHandler$Key)\l type: DIRECT call: kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1.\<init\>(kotlinx.coroutines.CoroutineExceptionHandler$Key):void A[MD:(kotlinx.coroutines.CoroutineExceptionHandler$Key):void (m)]\l0x0016: CHECK_CAST (r3 I:kotlinx.coroutines.CoroutineExceptionHandler) = (kotlinx.coroutines.CoroutineExceptionHandler) (r3 I:??[OBJECT, ARRAY]) \l0x0019: CHECK_CAST (r3 I:kotlin.coroutines.CoroutineContext) = (kotlin.coroutines.CoroutineContext) (r3 I:??[OBJECT, ARRAY]) \l0x001b: INVOKE  (r0 I:kotlinx.coroutines.CoroutineScope) = (r0 I:kotlinx.coroutines.CoroutineScope), (r3 I:kotlin.coroutines.CoroutineContext) type: STATIC call: kotlinx.coroutines.CoroutineScopeKt.plus(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.CoroutineScope A[MD:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.CoroutineScope (m)] (LINE:49)\l0x001f: NEW_INSTANCE  (r1 I:kotlinx.coroutines.channels.BroadcastKt$broadcast$1) =  kotlinx.coroutines.channels.BroadcastKt$broadcast$1  (LINE:52)\l0x0021: INVOKE  \l  (r1 I:kotlinx.coroutines.channels.BroadcastKt$broadcast$1)\l  (r12 I:kotlinx.coroutines.channels.ReceiveChannel A[D('$this$broadcast' kotlinx.coroutines.channels.ReceiveChannel)])\l type: DIRECT call: kotlinx.coroutines.channels.BroadcastKt$broadcast$1.\<init\>(kotlinx.coroutines.channels.ReceiveChannel):void A[MD:(kotlinx.coroutines.channels.ReceiveChannel\<? extends E\>):void (m)]\l0x0024: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0025: CHECK_CAST (r8 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r8 I:??[OBJECT, ARRAY]) \l0x0027: NEW_INSTANCE  (r1 I:kotlinx.coroutines.channels.BroadcastKt$broadcast$2) =  kotlinx.coroutines.channels.BroadcastKt$broadcast$2 \l0x0029: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002a: INVOKE  \l  (r1 I:kotlinx.coroutines.channels.BroadcastKt$broadcast$2)\l  (r12 I:kotlinx.coroutines.channels.ReceiveChannel A[D('$this$broadcast' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r2 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.channels.BroadcastKt$broadcast$2.\<init\>(kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.channels.ReceiveChannel\<? extends E\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.channels.BroadcastKt$broadcast$2\>):void (m)]\l0x002d: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x002e: CHECK_CAST (r9 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r9 I:??[OBJECT, ARRAY]) \l0x0030: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0031: CONST  (r10 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0032: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0033: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('scope' kotlinx.coroutines.CoroutineScope)]) \l0x0034: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('capacity' int)]) \l0x0035: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY] A[D('start' kotlinx.coroutines.CoroutineStart)]) \l0x0036: INVOKE  (r1 I:kotlinx.coroutines.channels.BroadcastChannel) = \l  (r4 I:kotlinx.coroutines.CoroutineScope)\l  (r5 I:kotlin.coroutines.CoroutineContext)\l  (r6 I:int)\l  (r7 I:kotlinx.coroutines.CoroutineStart)\l  (r8 I:kotlin.jvm.functions.Function1)\l  (r9 I:kotlin.jvm.functions.Function2)\l  (r10 I:int)\l  (r11 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.channels.BroadcastKt.broadcast$default(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, int, java.lang.Object):kotlinx.coroutines.channels.BroadcastChannel A[MD:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, int, java.lang.Object):kotlinx.coroutines.channels.BroadcastChannel (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x003a|RETURN\l|0x003a: RETURN  (r1 I:kotlinx.coroutines.channels.BroadcastChannel\<E\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.channels.BroadcastChannel\<E\> kotlinx.coroutines.channels.BroadcastKt.broadcast((r12 I:kotlinx.coroutines.channels.ReceiveChannel\<? extends E\> A[D('$this$broadcast' kotlinx.coroutines.channels.ReceiveChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('capacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:kotlinx.coroutines.CoroutineStart A[D('start' kotlinx.coroutines.CoroutineStart), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  0x000f\-0x0019: r1 '$i$f$CoroutineExceptionHandler' I\l  0x001f\-0x003a: r0 'scope' Lkotlinx\/coroutines\/CoroutineScope;\l  \-1 \-0x003a: r12 '$this$broadcast' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l  \-1 \-0x003a: r13 'capacity' I\l  \-1 \-0x003a: r14 'start' Lkotlinx\/coroutines\/CoroutineStart;\lTYPE_VARS: [E]\lSIGNATURE: \<E:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/channels\/ReceiveChannel\<+TE;\>;ILkotlinx\/coroutines\/CoroutineStart;)Lkotlinx\/coroutines\/channels\/BroadcastChannel\<TE;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

