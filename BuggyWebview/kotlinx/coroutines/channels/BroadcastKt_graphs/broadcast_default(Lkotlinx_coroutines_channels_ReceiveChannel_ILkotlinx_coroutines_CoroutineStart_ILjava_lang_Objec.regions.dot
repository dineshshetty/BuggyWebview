digraph "CFG forkotlinx.coroutines.channels.BroadcastKt.broadcast$default(Lkotlinx\/coroutines\/channels\/ReceiveChannel;ILkotlinx\/coroutines\/CoroutineStart;ILjava\/lang\/Object;)Lkotlinx\/coroutines\/channels\/BroadcastChannel;" {
subgraph cluster_Region_1123438968 {
label = "R(3:(1:3)|(1:6)|8)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1915177235 {
label = "IF [B:3:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if ((r3 & 1) != 0) goto L3\l}"];
subgraph cluster_Region_191142064 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0004|r1 = 1\l}"];
}
}
subgraph cluster_IfRegion_974520162 {
label = "IF [B:6:0x0007] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0007|if ((r3 & 2) != 0) goto L6\l}"];
subgraph cluster_Region_1251476681 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0009|kotlinx.coroutines.CoroutineStart r2 = kotlinx.coroutines.CoroutineStart.LAZY\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x000f|RETURN\l|return broadcast(r0, r1, r2)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0005|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:3:0x0002, B:4:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000b|PHI: r2 \l  PHI: (r2v1 kotlinx.coroutines.CoroutineStart) = (r2v0 kotlinx.coroutines.CoroutineStart), (r2v2 kotlinx.coroutines.CoroutineStart) binds: [B:6:0x0007, B:7:0x0009] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ kotlinx.coroutines.channels.BroadcastChannel kotlinx.coroutines.channels.BroadcastKt.broadcast$default((r0v0 kotlinx.coroutines.channels.ReceiveChannel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 kotlinx.coroutines.CoroutineStart A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:6:0x0007 \-\> B:8:0x000b, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0005\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_8 -> Node_9;
}

