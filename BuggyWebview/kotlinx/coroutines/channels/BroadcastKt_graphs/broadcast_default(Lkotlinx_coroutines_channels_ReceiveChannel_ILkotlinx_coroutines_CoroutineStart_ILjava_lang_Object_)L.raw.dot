digraph "CFG forkotlinx.coroutines.channels.BroadcastKt.broadcast$default(Lkotlinx\/coroutines\/channels\/ReceiveChannel;ILkotlinx\/coroutines\/CoroutineStart;ILjava\/lang\/Object;)Lkotlinx\/coroutines\/channels\/BroadcastChannel;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r4 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:45)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0005 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:46)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|0x0005: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char])  (LINE:45)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|0x0007: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000b \l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|0x0009: SGET  (r2 I:kotlinx.coroutines.CoroutineStart) =  kotlinx.coroutines.CoroutineStart.LAZY kotlinx.coroutines.CoroutineStart  (LINE:47)\l}"];
Node_8 [shape=record,label="{8\:\ 0x000b|0x000b: INVOKE  (r0 I:kotlinx.coroutines.channels.BroadcastChannel) = (r0 I:kotlinx.coroutines.channels.ReceiveChannel), (r1 I:int), (r2 I:kotlinx.coroutines.CoroutineStart) type: STATIC call: kotlinx.coroutines.channels.BroadcastKt.broadcast(kotlinx.coroutines.channels.ReceiveChannel, int, kotlinx.coroutines.CoroutineStart):kotlinx.coroutines.channels.BroadcastChannel A[MD:\<E\>:(kotlinx.coroutines.channels.ReceiveChannel\<? extends E\>, int, kotlinx.coroutines.CoroutineStart):kotlinx.coroutines.channels.BroadcastChannel\<E\> (m)] (LINE:45)\l}"];
Node_9 [shape=record,label="{9\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:kotlinx.coroutines.channels.BroadcastChannel) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ kotlinx.coroutines.channels.BroadcastChannel kotlinx.coroutines.channels.BroadcastKt.broadcast$default((r0 I:kotlinx.coroutines.channels.ReceiveChannel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlinx.coroutines.CoroutineStart A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:6:0x0007 \-\> B:8:0x000b, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0005\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

