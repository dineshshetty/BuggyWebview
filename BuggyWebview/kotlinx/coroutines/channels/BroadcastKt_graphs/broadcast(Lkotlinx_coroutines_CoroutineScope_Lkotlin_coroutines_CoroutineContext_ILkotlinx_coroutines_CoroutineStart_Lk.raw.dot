digraph "CFG forkotlinx.coroutines.channels.BroadcastKt.broadcast(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/CoroutineStart;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function2;)Lkotlinx\/coroutines\/channels\/BroadcastChannel;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext) = \l  (r4 I:kotlinx.coroutines.CoroutineScope A[D('$this$broadcast' kotlinx.coroutines.CoroutineScope)])\l  (r5 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l type: STATIC call: kotlinx.coroutines.CoroutineContextKt.newCoroutineContext(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext A[MD:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext (m)] (LINE:121)\l0x0004: INVOKE  (r1 I:kotlinx.coroutines.channels.BroadcastChannel) = (r6 I:int A[D('capacity' int)]) type: STATIC call: kotlinx.coroutines.channels.BroadcastChannelKt.BroadcastChannel(int):kotlinx.coroutines.channels.BroadcastChannel A[MD:\<E\>:(int):kotlinx.coroutines.channels.BroadcastChannel\<E\> (m)] (LINE:122)\l0x0008: INVOKE  (r2 I:boolean) = (r7 I:kotlinx.coroutines.CoroutineStart A[D('start' kotlinx.coroutines.CoroutineStart)]) type: VIRTUAL call: kotlinx.coroutines.CoroutineStart.isLazy():boolean A[MD:():boolean (m)] (LINE:123)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: NEW_INSTANCE  (r2 I:kotlinx.coroutines.channels.LazyBroadcastCoroutine) =  kotlinx.coroutines.channels.LazyBroadcastCoroutine  (LINE:124)\l0x0010: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.LazyBroadcastCoroutine)\l  (r0 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r1 I:kotlinx.coroutines.channels.BroadcastChannel A[D('channel' kotlinx.coroutines.channels.BroadcastChannel)])\l  (r9 I:kotlin.jvm.functions.Function2 A[D('block' kotlin.jvm.functions.Function2)])\l type: DIRECT call: kotlinx.coroutines.channels.LazyBroadcastCoroutine.\<init\>(kotlin.coroutines.CoroutineContext, kotlinx.coroutines.channels.BroadcastChannel, kotlin.jvm.functions.Function2):void A[MD:(kotlin.coroutines.CoroutineContext, kotlinx.coroutines.channels.BroadcastChannel\<E\>, kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.channels.ProducerScope\<? super E\>, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>):void (m)]\l0x0013: CHECK_CAST (r2 I:kotlinx.coroutines.channels.BroadcastCoroutine) = (kotlinx.coroutines.channels.BroadcastCoroutine) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('onCompletion' kotlin.jvm.functions.Function1)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0022  (LINE:126)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.BroadcastCoroutine A[D('coroutine' kotlinx.coroutines.channels.BroadcastCoroutine)])\l  (r8 I:kotlin.jvm.functions.Function1 A[D('onCompletion' kotlin.jvm.functions.Function1)])\l type: VIRTUAL call: kotlinx.coroutines.channels.BroadcastCoroutine.invokeOnCompletion(kotlin.jvm.functions.Function1):kotlinx.coroutines.DisposableHandle A[MD:(kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\>):kotlinx.coroutines.DisposableHandle (m)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.BroadcastCoroutine A[D('coroutine' kotlinx.coroutines.channels.BroadcastCoroutine)])\l  (r7 I:kotlinx.coroutines.CoroutineStart A[D('start' kotlinx.coroutines.CoroutineStart)])\l  (r2 I:java.lang.Object A[D('coroutine' kotlinx.coroutines.channels.BroadcastCoroutine)])\l  (r9 I:kotlin.jvm.functions.Function2 A[D('block' kotlin.jvm.functions.Function2)])\l type: VIRTUAL call: kotlinx.coroutines.channels.BroadcastCoroutine.start(kotlinx.coroutines.CoroutineStart, java.lang.Object, kotlin.jvm.functions.Function2):void A[MD:\<R\>:(kotlinx.coroutines.CoroutineStart, R, kotlin.jvm.functions.Function2\<? super R, ? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\>):void (m)] (LINE:127)\l0x0025: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('coroutine' kotlinx.coroutines.channels.BroadcastCoroutine)])  (LINE:128)\l0x0026: CHECK_CAST (r3 I:kotlinx.coroutines.channels.BroadcastChannel) = (kotlinx.coroutines.channels.BroadcastChannel) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|RETURN\l|0x0028: RETURN  (r3 I:kotlinx.coroutines.channels.BroadcastChannel\<E\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: NEW_INSTANCE  (r2 I:kotlinx.coroutines.channels.BroadcastCoroutine) =  kotlinx.coroutines.channels.BroadcastCoroutine  (LINE:125)\l0x0018: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0019: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.BroadcastCoroutine)\l  (r0 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r1 I:kotlinx.coroutines.channels.BroadcastChannel A[D('channel' kotlinx.coroutines.channels.BroadcastChannel)])\l  (r3 I:boolean)\l type: DIRECT call: kotlinx.coroutines.channels.BroadcastCoroutine.\<init\>(kotlin.coroutines.CoroutineContext, kotlinx.coroutines.channels.BroadcastChannel, boolean):void A[MD:(kotlin.coroutines.CoroutineContext, kotlinx.coroutines.channels.BroadcastChannel\<E\>, boolean):void (m)]\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.channels.BroadcastChannel\<E\> kotlinx.coroutines.channels.BroadcastKt.broadcast((r4 I:kotlinx.coroutines.CoroutineScope A[D('$this$broadcast' kotlinx.coroutines.CoroutineScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('capacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlinx.coroutines.CoroutineStart A[D('start' kotlinx.coroutines.CoroutineStart), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\> A[D('onCompletion' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.channels.ProducerScope\<? super E\>, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\> A[D('block' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x001d \-\> B:9:0x0022, CROSS_EDGE: B:5:0x0016 \-\> B:7:0x001d\lDebug Info:\l  0x0004\-0x0028: r0 'newContext' Lkotlin\/coroutines\/CoroutineContext;\l  0x0008\-0x0028: r1 'channel' Lkotlinx\/coroutines\/channels\/BroadcastChannel;\l  0x001d\-0x0028: r2 'coroutine' Lkotlinx\/coroutines\/channels\/BroadcastCoroutine;\l  \-1 \-0x0028: r4 '$this$broadcast' Lkotlinx\/coroutines\/CoroutineScope;\l  \-1 \-0x0028: r5 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x0028: r6 'capacity' I\l  \-1 \-0x0028: r7 'start' Lkotlinx\/coroutines\/CoroutineStart;\l  \-1 \-0x0028: r8 'onCompletion' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x0028: r9 'block' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [E]\lSIGNATURE: \<E:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/CoroutineStart;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Throwable;Lkotlin\/Unit;\>;Lkotlin\/jvm\/functions\/Function2\<\-Lkotlinx\/coroutines\/channels\/ProducerScope\<\-TE;\>;\-Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;+Ljava\/lang\/Object;\>;)Lkotlinx\/coroutines\/channels\/BroadcastChannel\<TE;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_5 -> Node_7;
}

