digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.ReceiveHasNext.tryResumeReceive(Ljava\/lang\/Object;Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;)Lkotlinx\/coroutines\/internal\/Symbol;" {
subgraph cluster_Region_622306092 {
label = "R(2:4|(2:(1:6)|(3:(1:(1:15))|(1:17)|19)))";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x000e|PHI: r4 \l  PHI: (r4v1 kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Object java.lang.Object r0 = r6.cont.tryResume(true, r8 == null ? null : r8.desc, resumeOnCancellationFun(r7))\l}"];
subgraph cluster_Region_1921935704 {
label = "R(2:(1:6)|(3:(1:(1:15))|(1:17)|19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_936188495 {
label = "IF [B:55:0x0016] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x0016|if (r0 == null) goto L6\l}"];
subgraph cluster_Region_527903525 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x0018|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1661109336 {
label = "R(3:(1:(1:15))|(1:17)|19)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_157046860 {
label = "IF [B:58:0x001d] THEN: R(1:(1:15)) ELSE: null";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x001d|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() != false) goto L10\l}"];
subgraph cluster_Region_144258198 {
label = "R(1:(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_711775024 {
label = "IF [B:63:0x0026] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x0026|PHI: r1 \l  PHI: (r1v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|if ((r0 == kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN) == false) goto L14\l}"];
subgraph cluster_Region_772872355 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_66 [shape=record,label="{66\:\ 0x002e|throw new java.lang.AssertionError()\l}"];
}
}
}
}
subgraph cluster_IfRegion_1497786749 {
label = "IF [B:67:0x002f] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ 0x002f|if (r8 != null) goto L17\l}"];
subgraph cluster_Region_842257441 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x0032|r8.finishPrepare()\l}"];
}
}
Node_71 [shape=record,label="{71\:\ 0x0037|RETURN\l|return kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN\l}"];
}
}
}
Node_48 [shape=record,color=red,label="{48\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0000}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0008}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x000a}"];
Node_49 [shape=record,color=red,label="{49\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x0019}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x001f}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x0022}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x0025}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x0029}"];
Node_70 [shape=record,color=red,label="{70\:\ 0x0035}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x000c}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.internal.Symbol kotlinx.coroutines.channels.AbstractChannel.ReceiveHasNext.tryResumeReceive((r6v0 'this' kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext\<E\> A[IMMUTABLE_TYPE, THIS]), (r7v0 E A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'otherOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('otherOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:66:0x002e \-\> B:49:?, CROSS_EDGE: B:71:0x0037 \-\> B:49:?, CROSS_EDGE: B:67:0x002f \-\> B:70:0x0035, CROSS_EDGE: B:60:0x0022 \-\> B:63:0x0026, CROSS_EDGE: B:58:0x001d \-\> B:67:0x002f, CROSS_EDGE: B:53:0x000c \-\> B:54:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (TE;Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;)Lkotlinx\/coroutines\/internal\/Symbol;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.ReceiveOrClosed.tryResumeReceive(E, kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol]\l}"];
MethodNode -> Node_48;Node_54 -> Node_55;
Node_55 -> Node_56;
Node_55 -> Node_57[style=dashed];
Node_56 -> Node_49;
Node_58 -> Node_59;
Node_58 -> Node_67[style=dashed];
Node_63 -> Node_65;
Node_63 -> Node_67[style=dashed];
Node_66 -> Node_49;
Node_67 -> Node_69;
Node_67 -> Node_70[style=dashed];
Node_69 -> Node_70;
Node_71 -> Node_49;
Node_48 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_51 -> Node_53;
Node_52 -> Node_54;
Node_57 -> Node_58;
Node_59 -> Node_60;
Node_60 -> Node_62;
Node_60 -> Node_63;
Node_62 -> Node_63;
Node_65 -> Node_66;
Node_70 -> Node_71;
Node_53 -> Node_54;
}

