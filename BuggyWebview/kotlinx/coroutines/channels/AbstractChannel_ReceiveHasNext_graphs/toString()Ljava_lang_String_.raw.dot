digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.ReceiveHasNext.toString()Ljava\/lang\/String;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.DebugStringsKt.getHexAddress(java.lang.Object):java.lang.String A[MD:(java.lang.Object):java.lang.String (m)] (LINE:965)\l0x0004: CONST_STR  (r1 I:java.lang.String) =  \"ReceiveHasNext@\" \l0x0006: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.String), (r0 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:java.lang.String) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.String kotlinx.coroutines.channels.AbstractChannel.ReceiveHasNext.toString((r2 'this' I:kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.LockFreeLinkedListNode.toString():java.lang.String]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

