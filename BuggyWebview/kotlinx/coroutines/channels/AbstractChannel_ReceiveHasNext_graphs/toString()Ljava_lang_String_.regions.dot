digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.ReceiveHasNext.toString()Ljava\/lang\/String;" {
subgraph cluster_Region_1762682000 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000a|RETURN\l|return kotlin.jvm.internal.Intrinsics.stringPlus(\"ReceiveHasNext@\", kotlinx.coroutines.DebugStrings.getHexAddress(r2))\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.String kotlinx.coroutines.channels.AbstractChannel.ReceiveHasNext.toString((r2v0 'this' kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.LockFreeLinkedListNode.toString():java.lang.String]\l}"];
MethodNode -> Node_8;Node_11 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
}

