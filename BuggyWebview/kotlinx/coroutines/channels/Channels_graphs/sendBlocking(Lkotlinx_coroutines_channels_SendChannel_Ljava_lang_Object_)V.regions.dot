digraph "CFG forkotlinx.coroutines.channels.ChannelsKt__ChannelsKt.sendBlocking(Lkotlinx\/coroutines\/channels\/SendChannel;Ljava\/lang\/Object;)V" {
subgraph cluster_Region_390214423 {
label = "R(1:(2:(1:3)|(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_454377719 {
label = "R(2:(1:3)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_747939546 {
label = "IF [B:3:0x0008] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|if (kotlinx.coroutines.channels.ChannelResult.m1648isSuccessimpl(r3.mo1633trySendJP2dKIU(r4)) != false) goto L3\l}"];
subgraph cluster_Region_654567505 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_559922477 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000b|kotlinx.coroutines.BuildersKt.runBlocking$default(null, new kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1(r3, r4, null), 1, null)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0017}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.channels.ChannelsKt__ChannelsKt.sendBlocking((r3v0 kotlinx.coroutines.channels.SendChannel\<? super E\> A[D('$this$sendBlocking' kotlinx.coroutines.channels.SendChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>ERROR:Lkotlin\/DeprecationLevel;\}, message=Deprecated in the favour of 'trySendBlocking'. Consider handling the result of 'trySendBlocking' explicitly and rethrow exception if necessary, replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=trySendBlocking(element), imports=[[]]\}\}\}\}\}\}\lCROSS_EDGE: B:6:0x0017 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: \<E:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/channels\/SendChannel\<\-TE;\>;TE;)V\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r4v0, resolved type: E\}\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_6 -> Node_1;
}

