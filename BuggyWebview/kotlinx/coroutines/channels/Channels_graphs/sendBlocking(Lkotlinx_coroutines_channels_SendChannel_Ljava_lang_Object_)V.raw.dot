digraph "CFG forkotlinx.coroutines.channels.ChannelsKt__ChannelsKt.sendBlocking(Lkotlinx\/coroutines\/channels\/SendChannel;Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) = \l  (r3 I:kotlinx.coroutines.channels.SendChannel A[D('$this$sendBlocking' kotlinx.coroutines.channels.SendChannel)])\l  (r4 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlinx.coroutines.channels.SendChannel.trySend\-JP2dKIU(java.lang.Object):java.lang.Object A[MD:(E):java.lang.Object (m)] (LINE:54)\l0x0004: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.channels.ChannelResult.isSuccess\-impl(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000b \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:55)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1) =  kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1  (LINE:57)\l0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1)\l  (r3 I:kotlinx.coroutines.channels.SendChannel A[D('$this$sendBlocking' kotlinx.coroutines.channels.SendChannel)])\l  (r4 I:java.lang.Object A[D('element' java.lang.Object)])\l  (r1 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1.\<init\>(kotlinx.coroutines.channels.SendChannel, java.lang.Object, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.channels.SendChannel\<? super E\>, E, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1\>):void (m)]\l0x0011: CHECK_CAST (r0 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r0 I:??[OBJECT, ARRAY]) \l0x0013: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0014: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext), (r0 I:kotlin.jvm.functions.Function2), (r2 I:int), (r1 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.BuildersKt.runBlocking$default(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, int, java.lang.Object):java.lang.Object A[MD:(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, int, java.lang.Object):java.lang.Object throws java.lang.InterruptedException (m)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|RETURN\l|0x0017: RETURN    (LINE:60)\l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.channels.ChannelsKt__ChannelsKt.sendBlocking((r3 I:kotlinx.coroutines.channels.SendChannel\<? super E\> A[D('$this$sendBlocking' kotlinx.coroutines.channels.SendChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>ERROR:Lkotlin\/DeprecationLevel;\}, message=Deprecated in the favour of 'trySendBlocking'. Consider handling the result of 'trySendBlocking' explicitly and rethrow exception if necessary, replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=trySendBlocking(element), imports=[[]]\}\}\}\}\}\}\lCROSS_EDGE: B:6:0x0017 \-\> B:1:?\lDebug Info:\l  \-1 \-0x0017: r3 '$this$sendBlocking' Lkotlinx\/coroutines\/channels\/SendChannel;\l  \-1 \-0x0017: r4 'element' Ljava\/lang\/Object;\lTYPE_VARS: [E]\lSIGNATURE: \<E:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/channels\/SendChannel\<\-TE;\>;TE;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

