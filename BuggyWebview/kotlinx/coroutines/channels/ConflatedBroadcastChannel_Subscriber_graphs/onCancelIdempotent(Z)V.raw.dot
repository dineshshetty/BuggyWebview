digraph "CFG forkotlinx.coroutines.channels.ConflatedBroadcastChannel.Subscriber.onCancelIdempotent(Z)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('wasClosed' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:?  (LINE:287)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|0x0002: IGET  (r0 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel\<E\>) = (r1 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber) kotlinx.coroutines.channels.ConflatedBroadcastChannel.Subscriber.broadcastChannel kotlinx.coroutines.channels.ConflatedBroadcastChannel  (LINE:288)\l0x0004: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel)\l  (r1 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)\l type: STATIC call: kotlinx.coroutines.channels.ConflatedBroadcastChannel.access$closeSubscriber(kotlinx.coroutines.channels.ConflatedBroadcastChannel, kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber):void A[MD:(kotlinx.coroutines.channels.ConflatedBroadcastChannel, kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber):void (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|RETURN\lORIG_RETURN\l|0x0007: RETURN    (LINE:290)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|0x0007: RETURN   A[SYNTHETIC] (LINE:290)\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.channels.ConflatedBroadcastChannel.Subscriber.onCancelIdempotent((r1 'this' I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber\<E\> A[IMMUTABLE_TYPE, THIS]), (r2 I:boolean A[D('wasClosed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x0000 \-\> B:16:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r2 'wasClosed' Z\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractChannel.onCancelIdempotent(boolean):void]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_13;
Node_17 -> Node_13;
}

