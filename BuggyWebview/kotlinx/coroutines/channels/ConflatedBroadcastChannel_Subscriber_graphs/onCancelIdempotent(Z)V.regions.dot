digraph "CFG forkotlinx.coroutines.channels.ConflatedBroadcastChannel.Subscriber.onCancelIdempotent(Z)V" {
subgraph cluster_Region_817162876 {
label = "R(1:(1:(1:2)))";
node [shape=record,color=blue];
subgraph cluster_Region_1202535236 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1660423739 {
label = "IF [B:14:0x0000] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|if (r2 != false) goto L2\l}"];
subgraph cluster_Region_1631979813 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0002|r1.broadcastChannel.closeSubscriber(r1)\l}"];
}
}
}
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0007|ORIG_RETURN\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.channels.ConflatedBroadcastChannel.Subscriber.onCancelIdempotent((r1v0 'this' kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber\<E\> A[IMMUTABLE_TYPE, THIS]), (r2v0 'wasClosed' boolean A[D('wasClosed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x0000 \-\> B:16:0x0007\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractChannel.onCancelIdempotent(boolean):void]\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_14 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_12 -> Node_14;
Node_16 -> Node_13;
Node_17 -> Node_13;
}

