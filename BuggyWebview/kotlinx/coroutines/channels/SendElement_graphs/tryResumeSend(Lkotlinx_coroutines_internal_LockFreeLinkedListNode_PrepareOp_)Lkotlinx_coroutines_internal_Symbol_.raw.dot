digraph "CFG forkotlinx.coroutines.channels.SendElement.tryResumeSend(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;)Lkotlinx\/coroutines\/internal\/Symbol;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.CancellableContinuation\<kotlin.Unit\>) = (r4 I:kotlinx.coroutines.channels.SendElement) kotlinx.coroutines.channels.SendElement.cont kotlinx.coroutines.CancellableContinuation  (LINE:1072)\l0x0002: SGET  (r1 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0005|0x0005: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('otherOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0009 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0007|0x0007: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x000b|0x000b: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlinx.coroutines.CancellableContinuation), (r1 I:java.lang.Object), (r3 I:java.lang.Object) type: INTERFACE call: kotlinx.coroutines.CancellableContinuation.tryResume(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(T, java.lang.Object):java.lang.Object (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0012 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0011|RETURN\l|0x0011: RETURN  (r2 I:kotlinx.coroutines.internal.Symbol) \l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0012|0x0012: INVOKE  (r1 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:1073)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0016|0x0016: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0029 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0018|0x0018: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1133)\l0x0019: SGET  (r2 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN kotlinx.coroutines.internal.Symbol  (LINE:1073)\l}"];
Node_36 [shape=record,label="{36\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('token' java.lang.Object)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x001f \l}"];
Node_37 [shape=record,label="{37\:\ 0x001d|0x001d: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0020|0x0020: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0023 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0023|0x0023: NEW_INSTANCE  (r1 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0025: INVOKE  (r1 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0028|0x0028: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_38 [shape=record,label="{38\:\ 0x001f|0x001f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0029|0x0029: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('otherOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x002c  (LINE:1075)\l}"];
Node_45 [shape=record,label="{45\:\ 0x002c|0x002c: INVOKE  \l  (r5 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('otherOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.PrepareOp.finishPrepare():void A[MD:():void (m)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x002f|0x002f: SGET  (r1 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN kotlinx.coroutines.internal.Symbol  (LINE:1076)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0031|RETURN\l|0x0031: RETURN  (r1 I:kotlinx.coroutines.internal.Symbol) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0009|0x0009: IGET  (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc) = \l  (r5 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('otherOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)])\l kotlinx.coroutines.internal.LockFreeLinkedListNode.PrepareOp.desc kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc \l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.internal.Symbol kotlinx.coroutines.channels.SendElement.tryResumeSend((r4 'this' I:kotlinx.coroutines.channels.SendElement\<E\> A[IMMUTABLE_TYPE, THIS]), (r5 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('otherOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:42:0x0028 \-\> B:25:?, CROSS_EDGE: B:47:0x0031 \-\> B:25:?, CROSS_EDGE: B:43:0x0029 \-\> B:46:0x002f, CROSS_EDGE: B:38:0x001f \-\> B:39:0x0020, CROSS_EDGE: B:34:0x0016 \-\> B:43:0x0029, CROSS_EDGE: B:29:0x0009 \-\> B:30:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0019\-0x0020: r1 '$i$a$\-assert\-SendElement$tryResumeSend$1' I\l  0x0012\-0x0031: r0 'token' Ljava\/lang\/Object;\l  \-1 \-0x0031: r5 'otherOp' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.Send.tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_25;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_43;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_39;
Node_39 -> Node_41;
Node_39 -> Node_43[style=dashed];
Node_41 -> Node_42;
Node_42 -> Node_25;
Node_38 -> Node_39;
Node_43 -> Node_45;
Node_43 -> Node_46[style=dashed];
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_25;
Node_29 -> Node_30;
}

