digraph "CFG forkotlinx.coroutines.channels.SendElement.tryResumeSend(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;)Lkotlinx\/coroutines\/internal\/Symbol;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|kotlinx.coroutines.CancellableContinuation\<kotlin.Unit\> r0 = r4.cont\lkotlin.Unit r1 = kotlin.Unit.INSTANCE\l}"];
Node_27 [shape=record,label="{27\:\ 0x0005|if (r5 != null) goto L21\l}"];
Node_28 [shape=record,label="{28\:\ 0x0007|r3 = null\l}"];
Node_30 [shape=record,label="{30\:\ 0x000b|PHI: r3 \l  PHI: (r3v1 kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc) = (r3v0 kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc), (r3v2 kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc) binds: [B:29:0x0009, B:28:0x0007] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Object r0 = r0.tryResume(r1, r3)\l}"];
Node_31 [shape=record,label="{31\:\ 0x000f|if (r0 != null) goto L8\l}"];
Node_32 [shape=record,label="{32\:\ 0x0011|RETURN\l|return null\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0012}"];
Node_34 [shape=record,label="{34\:\ 0x0016|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L17\l}"];
Node_35 [shape=record,label="{35\:\ 0x0018}"];
Node_36 [shape=record,label="{36\:\ 0x001b|if (r0 != kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN) goto L16\l}"];
Node_37 [shape=record,label="{37\:\ 0x001d|r2 = true\l}"];
Node_39 [shape=record,label="{39\:\ 0x0020|PHI: r2 \l  PHI: (r2v3 boolean) = (r2v2 boolean), (r2v4 boolean) binds: [B:38:0x001f, B:37:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == false) goto L14\l}"];
Node_41 [shape=record,label="{41\:\ 0x0023}"];
Node_42 [shape=record,label="{42\:\ 0x0028|throw new java.lang.AssertionError()\l}"];
Node_38 [shape=record,label="{38\:\ 0x001f|r2 = false\l}"];
Node_43 [shape=record,label="{43\:\ 0x0029|if (r5 != null) goto L18\l}"];
Node_45 [shape=record,label="{45\:\ 0x002c|r5.finishPrepare()\l}"];
Node_46 [shape=record,label="{46\:\ 0x002f}"];
Node_47 [shape=record,label="{47\:\ 0x0031|RETURN\l|return kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN\l}"];
Node_29 [shape=record,label="{29\:\ 0x0009|kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc r3 = r5.desc\l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.internal.Symbol kotlinx.coroutines.channels.SendElement.tryResumeSend((r4v0 'this' kotlinx.coroutines.channels.SendElement\<E\> A[IMMUTABLE_TYPE, THIS]), (r5v0 'otherOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('otherOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:42:0x0028 \-\> B:25:?, CROSS_EDGE: B:47:0x0031 \-\> B:25:?, CROSS_EDGE: B:43:0x0029 \-\> B:46:0x002f, CROSS_EDGE: B:38:0x001f \-\> B:39:0x0020, CROSS_EDGE: B:34:0x0016 \-\> B:43:0x0029, CROSS_EDGE: B:29:0x0009 \-\> B:30:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.Send.tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_25;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_43;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_39;
Node_39 -> Node_41;
Node_39 -> Node_43[style=dashed];
Node_41 -> Node_42;
Node_42 -> Node_25;
Node_38 -> Node_39;
Node_43 -> Node_45;
Node_43 -> Node_46[style=dashed];
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_25;
Node_29 -> Node_30;
}

