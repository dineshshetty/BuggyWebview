digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.ReceiveSelect.tryResumeReceive(Ljava\/lang\/Object;Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;)Lkotlinx\/coroutines\/internal\/Symbol;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.selects.SelectInstance\<R\>) = (r1 I:kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect) kotlinx.coroutines.channels.AbstractChannel.ReceiveSelect.select kotlinx.coroutines.selects.SelectInstance  (LINE:975)\l0x0002: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.selects.SelectInstance)\l  (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('otherOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)])\l type: INTERFACE call: kotlinx.coroutines.selects.SelectInstance.trySelectOther(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):java.lang.Object A[MD:(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):java.lang.Object (m)]\l0x0006: CHECK_CAST (r0 I:kotlinx.coroutines.internal.Symbol) = (kotlinx.coroutines.internal.Symbol) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:kotlinx.coroutines.internal.Symbol) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.internal.Symbol kotlinx.coroutines.channels.AbstractChannel.ReceiveSelect.tryResumeReceive((r1 'this' I:kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect\<R, E\> A[IMMUTABLE_TYPE, THIS]), (r2 I:E A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('otherOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r2 'value' Ljava\/lang\/Object;\l  \-1 \-0x0008: r3 'otherOp' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;\lTYPE_VARS: [R, E]\lSIGNATURE: (TE;Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;)Lkotlinx\/coroutines\/internal\/Symbol;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.ReceiveOrClosed.tryResumeReceive(E, kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

