digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.ReceiveSelect.resumeReceiveClosed(Lkotlinx\/coroutines\/channels\/Closed;)V" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000}"];
Node_29 [shape=record,label="{29\:\ 0x0006|if (r7.select.trySelect() != false) goto L5\l}"];
Node_30 [shape=record,label="{30\:\ 0x0008|RETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0009}"];
Node_32 [shape=record,label="{32\:\ 0x000b|switch(r7.receiveMode) \{\l    case 0: goto L9;\l    case 1: goto L7;\l    default: goto L11;\l\}\l}"];
Node_34 [shape=record,label="{34\:\ 0x000f|kotlinx.coroutines.intrinsics.Cancellable.startCoroutineCancellable$default(r7.block, kotlinx.coroutines.channels.ChannelResult.m1638boximpl(kotlinx.coroutines.channels.ChannelResult.Companion.m1651closedJP2dKIU(r8.closeCause)), r7.select.getCompletion(), null, 4, null)\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_35 [shape=record,label="{35\:\ 0x002a|r7.select.resumeSelectWithException(r8.getReceiveException())\l}"];
Node_36 [shape=record,label="{36\:\ 0x0033|RETURN\lORIG_RETURN\l|return\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.channels.AbstractChannel.ReceiveSelect.resumeReceiveClosed((r7v0 'this' kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect\<R, E\> A[IMMUTABLE_TYPE, THIS]), (r8v0 kotlinx.coroutines.channels.Closed\<?\> A[D('closed' kotlinx.coroutines.channels.Closed), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x0033 \-\> B:27:?, CROSS_EDGE: B:35:0x002a \-\> B:36:0x0033, CROSS_EDGE: B:32:0x000b \-\> B:36:0x0033\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, E]\lSIGNATURE: (Lkotlinx\/coroutines\/channels\/Closed\<*\>;)V\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.Receive.resumeReceiveClosed(kotlinx.coroutines.channels.Closed\<?\>):void]\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_27;
Node_31 -> Node_32;
Node_32 -> Node_34;
Node_32 -> Node_35;
Node_32 -> Node_38;
Node_34 -> Node_37;
Node_37 -> Node_27;
Node_35 -> Node_36;
Node_36 -> Node_27;
Node_38 -> Node_27;
}

