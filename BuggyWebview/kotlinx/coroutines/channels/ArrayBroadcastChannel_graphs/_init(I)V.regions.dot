digraph "CFG forkotlinx.coroutines.channels.ArrayBroadcastChannel.\<init\>(I)V" {
subgraph cluster_Region_627199931 {
label = "R(2:1|(2:(2:8|9)|(1:5)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0000|super(null)\lr3.capacity = r4\l}"];
subgraph cluster_Region_1015000363 {
label = "R(2:(2:8|9)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1179383706 {
label = "IF [B:17:0x000d] THEN: R(2:8|9) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000d|PHI: r1 \l  PHI: (r1v1 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|if ((r4 \>= 1) == false) goto L8\l}"];
subgraph cluster_Region_1613017262 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x002a}"];
Node_21 [shape=record,label="{21\:\ 0x004e|throw new java.lang.IllegalArgumentException((\"ArrayBroadcastChannel capacity must be at least 1, but \" + getCapacity() + \" was specified\").toString())\l}"];
}
}
subgraph cluster_Region_1468802182 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0010|r3.bufferLock = new java.util.concurrent.locks.ReentrantLock()\lr3.buffer = new java.lang.Object[r4]\lr3._head = 0L\lr3._tail = 0L\lr3._size = 0\lr3.subscribers = kotlinx.coroutines.internal.Concurrent.subscriberList()\l}"];
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0009}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000c}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0029}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.channels.ArrayBroadcastChannel.\<init\>((r3v0 'this' kotlinx.coroutines.channels.ArrayBroadcastChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r4v0 'capacity' int A[D('capacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x004e \-\> B:12:?, CROSS_EDGE: B:14:0x0009 \-\> B:17:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_11;Node_13 -> Node_14;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_18 -> Node_19;
Node_11 -> Node_13;
Node_14 -> Node_16;
Node_14 -> Node_17;
Node_16 -> Node_17;
Node_19 -> Node_12;
}

