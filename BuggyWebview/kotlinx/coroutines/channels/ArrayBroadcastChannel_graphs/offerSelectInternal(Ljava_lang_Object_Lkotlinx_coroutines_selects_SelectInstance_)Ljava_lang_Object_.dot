digraph "CFG forkotlinx.coroutines.channels.ArrayBroadcastChannel.offerSelectInternal(Ljava\/lang\/Object;Lkotlinx\/coroutines\/selects\/SelectInstance;)Ljava\/lang\/Object;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|java.util.concurrent.locks.ReentrantLock r0 = r10.bufferLock\ljava.util.concurrent.locks.Lock r2 = r0\lr2.lock()\l}"];
Node_47 [shape=record,label="{47\:\ 0x000a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x000a|TRY_ENTER\lTryCatch #0 \{all \-\> 0x005c, blocks: (B:27:0x000a, B:29:0x0010, B:31:0x001a, B:34:0x0020, B:36:0x0026, B:39:0x002e), top: B:47:0x000a \}\lCatch: all \-\> 0x005c\l|kotlinx.coroutines.channels.Closed r4 = getClosedForSend()     \/\/ Catch: java.lang.Throwable \-\> L5c\l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|if (r4 != null) goto L19\l}"];
Node_29 [shape=record,label="{29\:\ 0x0010|TryCatch #0 \{all \-\> 0x005c, blocks: (B:27:0x000a, B:29:0x0010, B:31:0x001a, B:34:0x0020, B:36:0x0026, B:39:0x002e), top: B:47:0x000a \}\lCatch: all \-\> 0x005c\l|int r4 = getSize()     \/\/ Catch: java.lang.Throwable \-\> L5c\l}"];
Node_30 [shape=record,label="{30\:\ 0x0018|if (r4 \< getCapacity()) goto L11\l}"];
Node_31 [shape=record,label="{31\:\ 0x001a|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x005c, blocks: (B:27:0x000a, B:29:0x0010, B:31:0x001a, B:34:0x0020, B:36:0x0026, B:39:0x002e), top: B:47:0x000a \}\lCatch: all \-\> 0x005c\l}"];
Node_32 [shape=record,label="{32\:\ 0x001c|DONT_GENERATE\l|r2.unlock()\l}"];
Node_33 [shape=record,label="{33\:\ 0x001f|RETURN\l|return kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0020|TRY_ENTER\lTryCatch #0 \{all \-\> 0x005c, blocks: (B:27:0x000a, B:29:0x0010, B:31:0x001a, B:34:0x0020, B:36:0x0026, B:39:0x002e), top: B:47:0x000a \}\lCatch: all \-\> 0x005c\l}"];
Node_35 [shape=record,label="{35\:\ 0x0024|if (r12.trySelect() != false) goto L16\l}"];
Node_36 [shape=record,label="{36\:\ 0x0026|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x005c, blocks: (B:27:0x000a, B:29:0x0010, B:31:0x001a, B:34:0x0020, B:36:0x0026, B:39:0x002e), top: B:47:0x000a \}\lCatch: all \-\> 0x005c\l}"];
Node_37 [shape=record,label="{37\:\ 0x002a|DONT_GENERATE\l|r2.unlock()\l}"];
Node_38 [shape=record,label="{38\:\ 0x002d|RETURN\l|return kotlinx.coroutines.selects.SelectKt.getALREADY_SELECTED()\l}"];
Node_39 [shape=record,label="{39\:\ 0x002e|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x005c, blocks: (B:27:0x000a, B:29:0x0010, B:31:0x001a, B:34:0x0020, B:36:0x0026, B:39:0x002e), top: B:47:0x000a \}\lCatch: all \-\> 0x005c\l|long r5 = getTail()     \/\/ Catch: java.lang.Throwable \-\> L5c\lr10.buffer[(int) (r5 % ((long) getCapacity()))] = r11     \/\/ Catch: java.lang.Throwable \-\> L5c\lsetSize(r4 + 1)     \/\/ Catch: java.lang.Throwable \-\> L5c\lsetTail(1 + r5)     \/\/ Catch: java.lang.Throwable \-\> L5c\lkotlin.Unit r3 = kotlin.Unit.INSTANCE     \/\/ Catch: java.lang.Throwable \-\> L5c\l}"];
Node_40 [shape=record,label="{40\:\ 0x004c|r2.unlock()\lcheckSubOffers()\l}"];
Node_41 [shape=record,label="{41\:\ 0x0055|RETURN\l|return kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS\l}"];
Node_42 [shape=record,label="{42\:\ 0x0056|r2.unlock()\l}"];
Node_43 [shape=record,label="{43\:\ 0x005b|RETURN\l|return r4\l}"];
Node_44 [shape=record,label="{44\:\ 0x005c|ExcHandler: all \-\> 0x005c\l|java.lang.Throwable r3 = move\-exception\l}"];
Node_45 [shape=record,label="{45\:\ 0x005d|FINALLY_INSNS\l|r2.unlock()\l}"];
Node_46 [shape=record,label="{46\:\ 0x0060|throw r3\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.ArrayBroadcastChannel.offerSelectInternal((r10v0 'this' kotlinx.coroutines.channels.ArrayBroadcastChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r11v0 E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 kotlinx.coroutines.selects.SelectInstance\<?\> A[D('select' kotlinx.coroutines.selects.SelectInstance), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x002d \-\> B:25:?, CROSS_EDGE: B:41:0x0055 \-\> B:25:?, CROSS_EDGE: B:43:0x005b \-\> B:25:?, CROSS_EDGE: B:46:0x0060 \-\> B:25:?\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x005c, blocks: (B:27:0x000a, B:29:0x0010, B:31:0x001a, B:34:0x0020, B:36:0x0026, B:39:0x002e), top: B:47:0x000a \}\lTYPE_VARS: [E]\lSIGNATURE: (TE;Lkotlinx\/coroutines\/selects\/SelectInstance\<*\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractSendChannel.offerSelectInternal(E, kotlinx.coroutines.selects.SelectInstance\<?\>):java.lang.Object]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_47;
Node_47 -> Node_27;
Node_47 -> Node_44;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_42;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_25;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_39;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_25;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_25;
Node_42 -> Node_43;
Node_43 -> Node_25;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_25;
}

