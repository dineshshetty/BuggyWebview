digraph "CFG forkotlinx.coroutines.channels.ArrayBroadcastChannel.offerSelectInternal(Ljava\/lang\/Object;Lkotlinx\/coroutines\/selects\/SelectInstance;)Ljava\/lang\/Object;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: IGET  (r0 I:java.util.concurrent.locks.ReentrantLock) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) kotlinx.coroutines.channels.ArrayBroadcastChannel.bufferLock java.util.concurrent.locks.ReentrantLock  (LINE:117)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('$this$withLock$iv' java.util.concurrent.locks.ReentrantLock)])  (LINE:388)\l0x0004: CHECK_CAST (r2 I:java.util.concurrent.locks.Lock) = (java.util.concurrent.locks.Lock) (r2 I:??[OBJECT, ARRAY]) \l0x0006: INVOKE  (r2 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l0x0009: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x000a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x000a|TRY_ENTER\lTryCatch #0 \{all \-\> 0x005c, blocks: (B:27:0x000a, B:29:0x0010, B:31:0x001a, B:34:0x0020, B:36:0x0026, B:39:0x002e), top: B:47:0x000a \}\lCatch: all \-\> 0x005c\l|0x000a: INVOKE  (r4 I:kotlinx.coroutines.channels.Closed) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.getClosedForSend():kotlinx.coroutines.channels.Closed A[Catch: all \-\> 0x005c, MD:():kotlinx.coroutines.channels.Closed\<?\> (m), TRY_ENTER] (LINE:119)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|0x000e: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0056 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0010|TryCatch #0 \{all \-\> 0x005c, blocks: (B:27:0x000a, B:29:0x0010, B:31:0x001a, B:34:0x0020, B:36:0x0026, B:39:0x002e), top: B:47:0x000a \}\lCatch: all \-\> 0x005c\l|0x0010: INVOKE  (r4 I:int) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) type: DIRECT call: kotlinx.coroutines.channels.ArrayBroadcastChannel.getSize():int A[Catch: all \-\> 0x005c, MD:():int (m)] (LINE:120)\l0x0014: INVOKE  (r5 I:int) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.getCapacity():int A[Catch: all \-\> 0x005c, MD:():int (m)] (LINE:121)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0018|0x0018: IF  (r4 I:??[int, byte, short, char] A[D('size' int)]) \< (r5 I:??[int, byte, short, char])  \-\> B:34:0x0020 \l}"];
Node_31 [shape=record,label="{31\:\ 0x001a|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x005c, blocks: (B:27:0x000a, B:29:0x0010, B:31:0x001a, B:34:0x0020, B:36:0x0026, B:39:0x002e), top: B:47:0x000a \}\lCatch: all \-\> 0x005c\l|0x001a: SGET  (r5 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x005c, TRY_LEAVE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x001c|0x001c: INVOKE  (r2 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x001f|RETURN\l|0x001f: RETURN  (r5 I:java.lang.Object) \l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0020|TRY_ENTER\lTryCatch #0 \{all \-\> 0x005c, blocks: (B:27:0x000a, B:29:0x0010, B:31:0x001a, B:34:0x0020, B:36:0x0026, B:39:0x002e), top: B:47:0x000a \}\lCatch: all \-\> 0x005c\l|0x0020: INVOKE  (r5 I:boolean) = (r12 I:kotlinx.coroutines.selects.SelectInstance A[D('select' kotlinx.coroutines.selects.SelectInstance)]) type: INTERFACE call: kotlinx.coroutines.selects.SelectInstance.trySelect():boolean A[Catch: all \-\> 0x005c, MD:():boolean (m), TRY_ENTER] (LINE:123)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0024|0x0024: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x002e \l}"];
Node_36 [shape=record,label="{36\:\ 0x0026|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x005c, blocks: (B:27:0x000a, B:29:0x0010, B:31:0x001a, B:34:0x0020, B:36:0x0026, B:39:0x002e), top: B:47:0x000a \}\lCatch: all \-\> 0x005c\l|0x0026: INVOKE  (r5 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.getALREADY_SELECTED():java.lang.Object A[Catch: all \-\> 0x005c, MD:():java.lang.Object (m), TRY_LEAVE] (LINE:124)\l}"];
Node_37 [shape=record,label="{37\:\ 0x002a|0x002a: INVOKE  (r2 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x002d|RETURN\l|0x002d: RETURN  (r5 I:java.lang.Object) \l}"];
Node_39 [shape=record,label="{39\:\ 0x002e|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x005c, blocks: (B:27:0x000a, B:29:0x0010, B:31:0x001a, B:34:0x0020, B:36:0x0026, B:39:0x002e), top: B:47:0x000a \}\lCatch: all \-\> 0x005c\l|0x002e: INVOKE  (r5 I:long) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) type: DIRECT call: kotlinx.coroutines.channels.ArrayBroadcastChannel.getTail():long A[Catch: all \-\> 0x005c, MD:():long (m), TRY_ENTER] (LINE:126)\l0x0032: IGET  (r7 I:java.lang.Object[]) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) kotlinx.coroutines.channels.ArrayBroadcastChannel.buffer java.lang.Object[] A[Catch: all \-\> 0x005c] (LINE:127)\l0x0034: INVOKE  (r8 I:int) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.getCapacity():int A[Catch: all \-\> 0x005c, MD:():int (m)]\l0x0038: CAST (r8 I:long) = (long) (r8 I:int) A[Catch: all \-\> 0x005c]\l0x0039: ARITH  (r8 I:long) = (r5 I:long A[D('tail' long)]) % (r8 I:long) A[Catch: all \-\> 0x005c]\l0x003b: CAST (r9 I:int) = (int) (r8 I:long) A[Catch: all \-\> 0x005c]\l0x003c: APUT  \l  (r7 I:??[OBJECT, ARRAY][])\l  (r9 I:??[int, short, byte, char])\l  (r11 I:??[OBJECT, ARRAY] A[D('element' java.lang.Object)])\l A[Catch: all \-\> 0x005c]\l0x003e: ARITH  (r7 I:int) = (r4 I:int A[D('size' int)]) + (1 int) A[Catch: all \-\> 0x005c] (LINE:128)\l0x0040: INVOKE  (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel), (r7 I:int) type: DIRECT call: kotlinx.coroutines.channels.ArrayBroadcastChannel.setSize(int):void A[Catch: all \-\> 0x005c, MD:(int):void (m)]\l0x0043: CONST  (r7 I:??[long, double]) = (1 ??[long, double])  (LINE:129)\l0x0045: ARITH  (r7 I:long) = (r7 I:long) + (r5 I:long A[D('tail' long)]) A[Catch: all \-\> 0x005c]\l0x0046: INVOKE  (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel), (r7 I:long) type: DIRECT call: kotlinx.coroutines.channels.ArrayBroadcastChannel.setTail(long):void A[Catch: all \-\> 0x005c, MD:(long):void (m)]\l0x004a: SGET  (r3 I:kotlin.Unit A[D('$i$a$\-withLock\-ArrayBroadcastChannel$offerSelectInternal$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x005c, TRY_LEAVE]\l}"];
Node_40 [shape=record,label="{40\:\ 0x004c|0x004c: INVOKE  (r2 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l0x0050: INVOKE  (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) type: DIRECT call: kotlinx.coroutines.channels.ArrayBroadcastChannel.checkSubOffers():void A[MD:():void (m)] (LINE:132)\l0x0053: SGET  (r0 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS kotlinx.coroutines.internal.Symbol  (LINE:133)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0055|RETURN\l|0x0055: RETURN  (r0 I:java.lang.Object) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0056|0x0056: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:386)\l0x0058: INVOKE  (r2 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x005b|RETURN\l|0x005b: RETURN  (r4 I:java.lang.Object) \l}"];
Node_44 [shape=record,label="{44\:\ 0x005c|ExcHandler: all \-\> 0x005c\l|0x005c: MOVE_EXCEPTION  (r3 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x005c] (LINE:130)\l}"];
Node_45 [shape=record,label="{45\:\ 0x005d|0x005d: INVOKE  (r2 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0060|0x0060: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.ArrayBroadcastChannel.offerSelectInternal((r10 'this' I:kotlinx.coroutines.channels.ArrayBroadcastChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r11 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlinx.coroutines.selects.SelectInstance\<?\> A[D('select' kotlinx.coroutines.selects.SelectInstance), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x002d \-\> B:25:?, CROSS_EDGE: B:41:0x0055 \-\> B:25:?, CROSS_EDGE: B:43:0x005b \-\> B:25:?, CROSS_EDGE: B:46:0x0060 \-\> B:25:?\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x005c, blocks: (B:27:0x000a, B:29:0x0010, B:31:0x001a, B:34:0x0020, B:36:0x0026, B:39:0x002e), top: B:47:0x000a \}\lTYPE_VARS: [E]\lSIGNATURE: (TE;Lkotlinx\/coroutines\/selects\/SelectInstance\<*\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x0002\-0x001c: r0 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0003\-0x001c: r1 '$i$f$withLock' I\l  0x000a\-0x001c: r3 '$i$a$\-withLock\-ArrayBroadcastChannel$offerSelectInternal$1' I\l  0x0014\-0x001c: r4 'size' I\l  0x0020\-0x002a: r0 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0020\-0x002a: r1 '$i$f$withLock' I\l  0x0020\-0x002a: r3 '$i$a$\-withLock\-ArrayBroadcastChannel$offerSelectInternal$1' I\l  0x0020\-0x002a: r4 'size' I\l  0x002e\-0x004a: r3 '$i$a$\-withLock\-ArrayBroadcastChannel$offerSelectInternal$1' I\l  0x002e\-0x004a: r4 'size' I\l  0x0032\-0x004a: r5 'tail' J\l  0x002e\-0x0050: r0 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x002e\-0x0050: r1 '$i$f$withLock' I\l  0x0056\-0x0058: r0 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0056\-0x0058: r1 '$i$f$withLock' I\l  0x0056\-0x0058: r3 '$i$a$\-withLock\-ArrayBroadcastChannel$offerSelectInternal$1' I\l  0x0056\-0x0058: r4 'it' Lkotlinx\/coroutines\/channels\/Closed;\l  0x0057\-0x0058: r5 '$i$a$\-let\-ArrayBroadcastChannel$offerSelectInternal$1$1' I\l  0x005c\-0x0060: r0 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x005c\-0x0060: r1 '$i$f$withLock' I\l  \-1 \-0x0060: r11 'element' Ljava\/lang\/Object;\l  \-1 \-0x0060: r12 'select' Lkotlinx\/coroutines\/selects\/SelectInstance;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractSendChannel.offerSelectInternal(E, kotlinx.coroutines.selects.SelectInstance\<?\>):java.lang.Object]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_47;
Node_47 -> Node_27;
Node_47 -> Node_44;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_42;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_25;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_39;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_25;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_25;
Node_42 -> Node_43;
Node_43 -> Node_25;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_25;
}

