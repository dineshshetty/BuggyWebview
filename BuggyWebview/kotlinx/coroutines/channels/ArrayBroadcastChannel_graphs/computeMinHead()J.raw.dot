digraph "CFG forkotlinx.coroutines.channels.ArrayBroadcastChannel.computeMinHead()J" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST  (r0 I:??[long, double]) = (9223372036854775807(0x7fffffffffffffff, double:NaN) ??[long, double])  (LINE:205)\l0x0005: IGET  (r2 I:java.util.List\<kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber\<E\>\>) = (r6 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) kotlinx.coroutines.channels.ArrayBroadcastChannel.subscribers java.util.List  (LINE:206)\l0x0007: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.List) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x000b|LOOP_START\lLOOP:0: B:11:0x000b\-\>B:13:0x0011\l|0x000b: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x000f|0x000f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0020 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0011|LOOP_END\lLOOP:0: B:11:0x000b\-\>B:13:0x0011\l|0x0011: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0015: CHECK_CAST (r3 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) = (kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) (r3 I:??[OBJECT, ARRAY]) \l0x0017: INVOKE  (r4 I:long) = \l  (r3 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber A[D('sub' kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber)])\l type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.getSubHead():long A[MD:():long (m)] (LINE:207)\l0x001b: INVOKE  (r0 I:long A[D('minHead' long)]) = (r0 I:long A[D('minHead' long)]), (r4 I:long) type: STATIC call: kotlin.ranges.RangesKt.coerceAtMost(long, long):long A[MD:(long, long):long (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0020|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|RETURN\l|0x0020: RETURN  (r0 I:long A[D('minHead' long)])  (LINE:208)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final long kotlinx.coroutines.channels.ArrayBroadcastChannel.computeMinHead((r6 'this' I:kotlinx.coroutines.channels.ArrayBroadcastChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x0011 \-\> B:11:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0017\-0x001f: r3 'sub' Lkotlinx\/coroutines\/channels\/ArrayBroadcastChannel$Subscriber;\l  0x0005\-0x0020: r0 'minHead' J\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_11;
Node_15 -> Node_14;
Node_14 -> Node_9;
}

