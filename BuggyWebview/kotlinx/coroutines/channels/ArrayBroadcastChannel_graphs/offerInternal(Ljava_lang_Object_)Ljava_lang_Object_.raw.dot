digraph "CFG forkotlinx.coroutines.channels.ArrayBroadcastChannel.offerInternal(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: IGET  (r0 I:java.util.concurrent.locks.ReentrantLock) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) kotlinx.coroutines.channels.ArrayBroadcastChannel.bufferLock java.util.concurrent.locks.ReentrantLock  (LINE:100)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('$this$withLock$iv' java.util.concurrent.locks.ReentrantLock)])  (LINE:387)\l0x0004: CHECK_CAST (r2 I:java.util.concurrent.locks.Lock) = (java.util.concurrent.locks.Lock) (r2 I:??[OBJECT, ARRAY]) \l0x0006: INVOKE  (r2 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l0x0009: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x000a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|TRY_ENTER\lTryCatch #0 \{all \-\> 0x004e, blocks: (B:22:0x000a, B:24:0x0010, B:26:0x001a, B:29:0x0020), top: B:37:0x000a \}\lCatch: all \-\> 0x004e\l|0x000a: INVOKE  (r4 I:kotlinx.coroutines.channels.Closed) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.getClosedForSend():kotlinx.coroutines.channels.Closed A[Catch: all \-\> 0x004e, MD:():kotlinx.coroutines.channels.Closed\<?\> (m), TRY_ENTER] (LINE:102)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|0x000e: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0048 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0010|TryCatch #0 \{all \-\> 0x004e, blocks: (B:22:0x000a, B:24:0x0010, B:26:0x001a, B:29:0x0020), top: B:37:0x000a \}\lCatch: all \-\> 0x004e\l|0x0010: INVOKE  (r4 I:int) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) type: DIRECT call: kotlinx.coroutines.channels.ArrayBroadcastChannel.getSize():int A[Catch: all \-\> 0x004e, MD:():int (m)] (LINE:103)\l0x0014: INVOKE  (r5 I:int) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.getCapacity():int A[Catch: all \-\> 0x004e, MD:():int (m)] (LINE:104)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|0x0018: IF  (r4 I:??[int, byte, short, char] A[D('size' int)]) \< (r5 I:??[int, byte, short, char])  \-\> B:29:0x0020 \l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x004e, blocks: (B:22:0x000a, B:24:0x0010, B:26:0x001a, B:29:0x0020), top: B:37:0x000a \}\lCatch: all \-\> 0x004e\l|0x001a: SGET  (r5 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x004e, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|0x001c: INVOKE  (r2 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x001f|RETURN\l|0x001f: RETURN  (r5 I:java.lang.Object) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0020|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x004e, blocks: (B:22:0x000a, B:24:0x0010, B:26:0x001a, B:29:0x0020), top: B:37:0x000a \}\lCatch: all \-\> 0x004e\l|0x0020: INVOKE  (r5 I:long) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) type: DIRECT call: kotlinx.coroutines.channels.ArrayBroadcastChannel.getTail():long A[Catch: all \-\> 0x004e, MD:():long (m), TRY_ENTER] (LINE:105)\l0x0024: IGET  (r7 I:java.lang.Object[]) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) kotlinx.coroutines.channels.ArrayBroadcastChannel.buffer java.lang.Object[] A[Catch: all \-\> 0x004e] (LINE:106)\l0x0026: INVOKE  (r8 I:int) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.getCapacity():int A[Catch: all \-\> 0x004e, MD:():int (m)]\l0x002a: CAST (r8 I:long) = (long) (r8 I:int) A[Catch: all \-\> 0x004e]\l0x002b: ARITH  (r8 I:long) = (r5 I:long A[D('tail' long)]) % (r8 I:long) A[Catch: all \-\> 0x004e]\l0x002d: CAST (r9 I:int) = (int) (r8 I:long) A[Catch: all \-\> 0x004e]\l0x002e: APUT  \l  (r7 I:??[OBJECT, ARRAY][])\l  (r9 I:??[int, short, byte, char])\l  (r11 I:??[OBJECT, ARRAY] A[D('element' java.lang.Object)])\l A[Catch: all \-\> 0x004e]\l0x0030: ARITH  (r7 I:int) = (r4 I:int A[D('size' int)]) + (1 int) A[Catch: all \-\> 0x004e] (LINE:107)\l0x0032: INVOKE  (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel), (r7 I:int) type: DIRECT call: kotlinx.coroutines.channels.ArrayBroadcastChannel.setSize(int):void A[Catch: all \-\> 0x004e, MD:(int):void (m)]\l0x0035: CONST  (r7 I:??[long, double]) = (1 ??[long, double])  (LINE:108)\l0x0037: ARITH  (r7 I:long) = (r7 I:long) + (r5 I:long A[D('tail' long)]) A[Catch: all \-\> 0x004e]\l0x0038: INVOKE  (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel), (r7 I:long) type: DIRECT call: kotlinx.coroutines.channels.ArrayBroadcastChannel.setTail(long):void A[Catch: all \-\> 0x004e, MD:(long):void (m)]\l0x003c: SGET  (r3 I:kotlin.Unit A[D('$i$a$\-withLock\-ArrayBroadcastChannel$offerInternal$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x004e, TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x003e|0x003e: INVOKE  (r2 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l0x0042: INVOKE  (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) type: DIRECT call: kotlinx.coroutines.channels.ArrayBroadcastChannel.checkSubOffers():void A[MD:():void (m)] (LINE:111)\l0x0045: SGET  (r0 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS kotlinx.coroutines.internal.Symbol  (LINE:112)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0047|RETURN\l|0x0047: RETURN  (r0 I:java.lang.Object) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0048|0x0048: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:386)\l0x004a: INVOKE  (r2 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x004d|RETURN\l|0x004d: RETURN  (r4 I:java.lang.Object) \l}"];
Node_34 [shape=record,label="{34\:\ 0x004e|ExcHandler: all \-\> 0x004e\l|0x004e: MOVE_EXCEPTION  (r3 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x004e] (LINE:109)\l}"];
Node_35 [shape=record,label="{35\:\ 0x004f|0x004f: INVOKE  (r2 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0052|0x0052: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.ArrayBroadcastChannel.offerInternal((r10 'this' I:kotlinx.coroutines.channels.ArrayBroadcastChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r11 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0047 \-\> B:20:?, CROSS_EDGE: B:33:0x004d \-\> B:20:?, CROSS_EDGE: B:36:0x0052 \-\> B:20:?\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x004e, blocks: (B:22:0x000a, B:24:0x0010, B:26:0x001a, B:29:0x0020), top: B:37:0x000a \}\lTYPE_VARS: [E]\lSIGNATURE: (TE;)Ljava\/lang\/Object;\lDebug Info:\l  0x0002\-0x001c: r0 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0003\-0x001c: r1 '$i$f$withLock' I\l  0x000a\-0x001c: r3 '$i$a$\-withLock\-ArrayBroadcastChannel$offerInternal$1' I\l  0x0014\-0x001c: r4 'size' I\l  0x0020\-0x003c: r3 '$i$a$\-withLock\-ArrayBroadcastChannel$offerInternal$1' I\l  0x0020\-0x003c: r4 'size' I\l  0x0024\-0x003c: r5 'tail' J\l  0x0020\-0x0042: r0 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0020\-0x0042: r1 '$i$f$withLock' I\l  0x0048\-0x004a: r0 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0048\-0x004a: r1 '$i$f$withLock' I\l  0x0048\-0x004a: r3 '$i$a$\-withLock\-ArrayBroadcastChannel$offerInternal$1' I\l  0x0048\-0x004a: r4 'it' Lkotlinx\/coroutines\/channels\/Closed;\l  0x0049\-0x004a: r5 '$i$a$\-let\-ArrayBroadcastChannel$offerInternal$1$1' I\l  0x004e\-0x0052: r0 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x004e\-0x0052: r1 '$i$f$withLock' I\l  \-1 \-0x0052: r11 'element' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractSendChannel.offerInternal(E):java.lang.Object]\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_37;
Node_37 -> Node_22;
Node_37 -> Node_34;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_20;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_20;
Node_32 -> Node_33;
Node_33 -> Node_20;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_20;
}

