digraph "CFG forkotlinx.coroutines.channels.ArrayBroadcastChannel.openSubscription()Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) =  kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber  (LINE:75)\l0x0002: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber)\l  (r5 I:kotlinx.coroutines.channels.ArrayBroadcastChannel)\l type: DIRECT call: kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.\<init\>(kotlinx.coroutines.channels.ArrayBroadcastChannel):void A[MD:(kotlinx.coroutines.channels.ArrayBroadcastChannel\<E\>):void (m)]\l0x0005: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:76)\l0x0008: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0009: INVOKE  \l  (r5 I:kotlinx.coroutines.channels.ArrayBroadcastChannel)\l  (r1 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber A[D('it' kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber)])\l  (r3 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber)\l  (r4 I:int)\l  (r3 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.channels.ArrayBroadcastChannel.updateHead$default(kotlinx.coroutines.channels.ArrayBroadcastChannel, kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber, kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber, int, java.lang.Object):void A[MD:(kotlinx.coroutines.channels.ArrayBroadcastChannel, kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber, kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber, int, java.lang.Object):void (m)]\l0x000d: CHECK_CAST (r0 I:kotlinx.coroutines.channels.ReceiveChannel) = (kotlinx.coroutines.channels.ReceiveChannel) (r0 I:??[OBJECT, ARRAY])  (LINE:75)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:kotlinx.coroutines.channels.ReceiveChannel\<E\>)  (LINE:77)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.channels.ReceiveChannel\<E\> kotlinx.coroutines.channels.ArrayBroadcastChannel.openSubscription((r5 'this' I:kotlinx.coroutines.channels.ArrayBroadcastChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x000d: r1 'it' Lkotlinx\/coroutines\/channels\/ArrayBroadcastChannel$Subscriber;\l  0x0007\-0x000d: r2 '$i$a$\-also\-ArrayBroadcastChannel$openSubscription$1' I\lTYPE_VARS: [E]\lSIGNATURE: ()Lkotlinx\/coroutines\/channels\/ReceiveChannel\<TE;\>;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.BroadcastChannel.openSubscription():kotlinx.coroutines.channels.ReceiveChannel\<E\>]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

