digraph "CFG forkotlinx.coroutines.channels.ArrayBroadcastChannel.\<init\>(I)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:31)\l0x0001: INVOKE  (r3 I:kotlinx.coroutines.channels.AbstractSendChannel), (r0 I:kotlin.jvm.functions.Function1) type: DIRECT call: kotlinx.coroutines.channels.AbstractSendChannel.\<init\>(kotlin.jvm.functions.Function1):void A[MD:(kotlin.jvm.functions.Function1\<? super E, kotlin.Unit\>):void (m)]\l0x0004: IPUT  (r4 I:int A[D('capacity' int)]), (r3 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) kotlinx.coroutines.channels.ArrayBroadcastChannel.capacity int  (LINE:30)\l0x0007: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:33)\l0x0008: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|0x0009: IF  (r4 I:??[int, byte, short, char] A[D('capacity' int)]) \< (r1 I:??[int, byte, short, char])  \-\> B:16:0x000c \l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|0x000c: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x002a \l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|0x0010: NEW_INSTANCE  (r1 I:java.util.concurrent.locks.ReentrantLock) =  java.util.concurrent.locks.ReentrantLock  (LINE:47)\l0x0012: INVOKE  (r1 I:java.util.concurrent.locks.ReentrantLock) type: DIRECT call: java.util.concurrent.locks.ReentrantLock.\<init\>():void A[MD:():void (c)]\l0x0015: IPUT  (r1 I:java.util.concurrent.locks.ReentrantLock), (r3 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) kotlinx.coroutines.channels.ArrayBroadcastChannel.bufferLock java.util.concurrent.locks.ReentrantLock \l0x0017: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r4 I:int A[D('capacity' int), IMMUTABLE_TYPE]) type: java.lang.Object[]  (LINE:48)\l0x0019: IPUT  (r1 I:java.lang.Object[]), (r3 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) kotlinx.coroutines.channels.ArrayBroadcastChannel.buffer java.lang.Object[] \l0x001b: CONST  (r1 I:??[long, double]) = (0 ??[long, double])  (LINE:53)\l0x001d: IPUT  (r1 I:long), (r3 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) kotlinx.coroutines.channels.ArrayBroadcastChannel._head long \l0x001f: IPUT  (r1 I:long), (r3 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) kotlinx.coroutines.channels.ArrayBroadcastChannel._tail long  (LINE:58)\l0x0021: IPUT  (r0 I:int), (r3 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) kotlinx.coroutines.channels.ArrayBroadcastChannel._size int  (LINE:63)\l0x0023: INVOKE  (r0 I:java.util.List) =  type: STATIC call: kotlinx.coroutines.internal.ConcurrentKt.subscriberList():java.util.List A[MD:\<E\>:():java.util.List\<E\> (m)] (LINE:69)\l0x0027: IPUT  \l  (r0 I:java.util.List\<kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber\<E\>\>)\l  (r3 I:kotlinx.coroutines.channels.ArrayBroadcastChannel)\l kotlinx.coroutines.channels.ArrayBroadcastChannel.subscribers java.util.List \l}"];
Node_19 [shape=record,label="{19\:\ 0x0029|RETURN\l|0x0029: RETURN    (LINE:26)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x002a|0x002a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:386)\l0x002b: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:33)\l0x002d: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0030: CONST_STR  (r2 I:java.lang.String) =  \"ArrayBroadcastChannel capacity must be at least 1, but \" \l0x0032: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0035: INVOKE  (r2 I:int) = (r3 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.getCapacity():int A[MD:():int (m)]\l0x0039: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x003c: CONST_STR  (r2 I:java.lang.String) =  \" was specified\" \l0x003e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0041: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-ArrayBroadcastChannel$1' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0045: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0047: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004b: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x004e|0x004e: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.channels.ArrayBroadcastChannel.\<init\>((r3 'this' I:kotlinx.coroutines.channels.ArrayBroadcastChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('capacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x004e \-\> B:12:?, CROSS_EDGE: B:14:0x0009 \-\> B:17:0x000d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002b\-0x0045: r0 '$i$a$\-require\-ArrayBroadcastChannel$1' I\l  \-1 \-0x004e: r4 'capacity' I\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_17[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

