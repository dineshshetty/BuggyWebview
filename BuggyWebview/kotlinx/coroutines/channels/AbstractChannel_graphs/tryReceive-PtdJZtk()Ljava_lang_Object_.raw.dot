digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.tryReceive\-PtdJZtk()Ljava\/lang\/Object;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) = (r3 I:kotlinx.coroutines.channels.AbstractChannel) type: VIRTUAL call: kotlinx.coroutines.channels.AbstractChannel.pollInternal():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:638)\l0x0004: SGET  (r1 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED kotlinx.coroutines.internal.Symbol  (LINE:639)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x000f \l}"];
Node_28 [shape=record,label="{28\:\ 0x0008|0x0008: SGET  (r1 I:kotlinx.coroutines.channels.ChannelResult$Companion) =  kotlinx.coroutines.channels.ChannelResult.Companion kotlinx.coroutines.channels.ChannelResult$Companion \l0x000a: INVOKE  (r1 I:java.lang.Object) = (r1 I:kotlinx.coroutines.channels.ChannelResult$Companion) type: VIRTUAL call: kotlinx.coroutines.channels.ChannelResult.Companion.failure\-PtdJZtk():java.lang.Object A[MD:\<E\>:():java.lang.Object (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x000e|RETURN\l|0x000e: RETURN  (r1 I:java.lang.Object) \l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x000f|0x000f: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) kotlinx.coroutines.channels.Closed  (LINE:640)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x001f \l}"];
Node_32 [shape=record,label="{32\:\ 0x0013|0x0013: SGET  (r1 I:kotlinx.coroutines.channels.ChannelResult$Companion) =  kotlinx.coroutines.channels.ChannelResult.Companion kotlinx.coroutines.channels.ChannelResult$Companion \l0x0015: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) \l0x0016: CHECK_CAST (r2 I:kotlinx.coroutines.channels.Closed) = (kotlinx.coroutines.channels.Closed) (r2 I:??[OBJECT, ARRAY]) \l0x0018: IGET  (r2 I:java.lang.Throwable) = (r2 I:kotlinx.coroutines.channels.Closed) kotlinx.coroutines.channels.Closed.closeCause java.lang.Throwable \l0x001a: INVOKE  (r1 I:java.lang.Object) = (r1 I:kotlinx.coroutines.channels.ChannelResult$Companion), (r2 I:java.lang.Throwable) type: VIRTUAL call: kotlinx.coroutines.channels.ChannelResult.Companion.closed\-JP2dKIU(java.lang.Throwable):java.lang.Object A[MD:\<E\>:(java.lang.Throwable):java.lang.Object (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x001e|RETURN\l|0x001e: RETURN  (r1 I:java.lang.Object) \l}"];
Node_34 [shape=record,label="{34\:\ 0x001f|0x001f: SGET  (r1 I:kotlinx.coroutines.channels.ChannelResult$Companion) =  kotlinx.coroutines.channels.ChannelResult.Companion kotlinx.coroutines.channels.ChannelResult$Companion  (LINE:641)\l0x0021: INVOKE  (r1 I:java.lang.Object) = (r1 I:kotlinx.coroutines.channels.ChannelResult$Companion), (r0 I:java.lang.Object A[D('result' java.lang.Object)]) type: VIRTUAL call: kotlinx.coroutines.channels.ChannelResult.Companion.success\-JP2dKIU(java.lang.Object):java.lang.Object A[MD:\<E\>:(E):java.lang.Object (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0025|RETURN\l|0x0025: RETURN  (r1 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.channels.AbstractChannel.tryReceive\-PtdJZtk((r3 'this' I:kotlinx.coroutines.channels.AbstractChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x001e \-\> B:25:?, CROSS_EDGE: B:35:0x0025 \-\> B:25:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lDebug Info:\l  0x0004\-0x0025: r0 'result' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.ReceiveChannel.tryReceive\-PtdJZtk():java.lang.Object]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_25;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_25;
Node_34 -> Node_35;
Node_35 -> Node_25;
}

