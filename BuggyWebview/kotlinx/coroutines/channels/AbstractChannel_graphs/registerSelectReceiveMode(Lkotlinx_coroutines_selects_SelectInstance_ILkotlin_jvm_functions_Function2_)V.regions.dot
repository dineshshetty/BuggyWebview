digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.registerSelectReceiveMode(Lkotlinx\/coroutines\/selects\/SelectInstance;ILkotlin\/jvm\/functions\/Function2;)V" {
subgraph cluster_Region_2047155168 {
label = "R(1:(1:(1:(1:(1:26)))(2:6|(2:(1:20)|(1:(1:14))))))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1575696082 {
label = "LOOP:0: (1:(1:(1:(1:26)))(2:6|(2:(1:20)|(1:(1:14)))))";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ 0x0005|if (r3.isSelected() == false) goto L3\l}"];
subgraph cluster_Region_1892186065 {
label = "R(1:(1:(1:(1:26)))(2:6|(2:(1:20)|(1:(1:14)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1007861366 {
label = "IF [B:70:0x000c] THEN: R(1:(1:(1:26))) ELSE: R(2:6|(2:(1:20)|(1:(1:14))))";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x000c|if (isEmptyImpl() != false) goto L22\l}"];
subgraph cluster_Region_1855617039 {
label = "R(1:(1:(1:26)))";
node [shape=record,color=blue];
subgraph cluster_Region_1791200936 {
label = "R(1:(1:26))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1493568222 {
label = "IF [B:72:0x0012] THEN: R(1:26) ELSE: null";
node [shape=record,color=blue];
Node_72 [shape=record,label="{72\:\ 0x0012|if (enqueueReceiveSelect(r3, r5, r4) != false) goto L25\l}"];
subgraph cluster_Region_1884225158 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x0014|RETURN\l|return\l}"];
}
}
}
}
subgraph cluster_Region_1252586613 {
label = "R(2:6|(2:(1:20)|(1:(1:14))))";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x0015|java.lang.Object java.lang.Object r0 = pollSelectInternal(r3)\l}"];
subgraph cluster_Region_1302964864 {
label = "R(2:(1:20)|(1:(1:14)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1035886263 {
label = "IF [B:75:0x001e] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_75 [shape=record,label="{75\:\ 0x001e|if (r0 == kotlinx.coroutines.selects.SelectKt.getALREADY_SELECTED()) goto L19\l}"];
subgraph cluster_Region_996789075 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x0020|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1389393434 {
label = "R(1:(1:14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1333550579 {
label = "IF [B:78:0x0023, B:81:0x0028] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x0023|if (r0 != kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED) goto L10\l}"];
Node_81 [shape=record,label="{81\:\ 0x0028|ADDED_TO_REGION\l|if (r0 != kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC) goto L13\l}"];
subgraph cluster_Region_2068362310 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_83 [shape=record,label="{83\:\ 0x002b|tryStartBlockUnintercepted(r5, r3, r4, r0)\l}"];
}
}
}
}
}
}
}
}
}
Node_64 [shape=record,color=red,label="{64\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0000|LOOP_START\lLOOP:0: B:66:0x0000\-\>B:91:0x0000\l}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x0008}"];
Node_86 [shape=record,color=red,label="{86\:\ 0x0015|SYNTHETIC\l}"];
Node_77 [shape=record,color=red,label="{77\:\ 0x0021}"];
Node_87 [shape=record,color=red,label="{87\:\ 0x0026|SYNTHETIC\l}"];
Node_80 [shape=record,color=red,label="{80\:\ 0x0026}"];
Node_90 [shape=record,color=red,label="{90\:\ 0x002b|SYNTHETIC\l}"];
Node_94 [shape=record,color=red,label="{94\:\ 0x0000|SYNTHETIC\l}"];
Node_91 [shape=record,color=red,label="{91\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:66:0x0000\-\>B:91:0x0000\l}"];
Node_93 [shape=record,color=red,label="{93\:\ 0x0000|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_92 [shape=record,color=red,label="{92\:\ 0x0000|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x0020|SYNTHETIC\l}"];
Node_65 [shape=record,color=red,label="{65\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_88 [shape=record,color=red,label="{88\:\ 0x000e|SYNTHETIC\l}"];
Node_71 [shape=record,color=red,label="{71\:\ 0x000e}"];
Node_84 [shape=record,color=red,label="{84\:\ 0x0014|SYNTHETIC\l}"];
Node_95 [shape=record,color=red,label="{95\:\ 0x0000|SYNTHETIC\l}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x0007|SYNTHETIC\l}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x0007}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.channels.AbstractChannel.registerSelectReceiveMode((r2v0 'this' kotlinx.coroutines.channels.AbstractChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r3v0 kotlinx.coroutines.selects.SelectInstance\<? super R\> A[D('select' kotlinx.coroutines.selects.SelectInstance), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'receiveMode' int A[D('receiveMode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.jvm.functions.Function2\<java.lang.Object, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\> A[D('block' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:72:0x0012 \-\> B:66:0x0000, CROSS_EDGE: B:73:0x0014 \-\> B:65:?, CROSS_EDGE: B:76:0x0020 \-\> B:65:?, BACK_EDGE: B:83:0x002b \-\> B:66:0x0000, BACK_EDGE: B:81:0x0028 \-\> B:66:0x0000, BACK_EDGE: B:78:0x0023 \-\> B:66:0x0000\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, E]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/selects\/SelectInstance\<\-TR;\>;ILkotlin\/jvm\/functions\/Function2\<Ljava\/lang\/Object;\-Lkotlin\/coroutines\/Continuation\<\-TR;\>;+Ljava\/lang\/Object;\>;)V\l}"];
MethodNode -> Node_64;Node_67 -> Node_69;
Node_67 -> Node_85[style=dashed];
Node_70 -> Node_86[style=dashed];
Node_70 -> Node_88;
Node_72 -> Node_84;
Node_72 -> Node_95[style=dashed];
Node_73 -> Node_65;
Node_74 -> Node_75;
Node_75 -> Node_77[style=dashed];
Node_75 -> Node_89;
Node_76 -> Node_65;
Node_78 -> Node_87;
Node_78 -> Node_92[style=dashed];
Node_81 -> Node_90;
Node_81 -> Node_93[style=dashed];
Node_83 -> Node_94;
Node_64 -> Node_66;
Node_66 -> Node_67;
Node_69 -> Node_70;
Node_86 -> Node_74;
Node_77 -> Node_78;
Node_87 -> Node_80;
Node_80 -> Node_81;
Node_90 -> Node_83;
Node_94 -> Node_91;
Node_91 -> Node_66;
Node_93 -> Node_91;
Node_92 -> Node_91;
Node_89 -> Node_76;
Node_88 -> Node_71;
Node_71 -> Node_72;
Node_84 -> Node_73;
Node_95 -> Node_91;
Node_85 -> Node_68;
Node_68 -> Node_65;
}

