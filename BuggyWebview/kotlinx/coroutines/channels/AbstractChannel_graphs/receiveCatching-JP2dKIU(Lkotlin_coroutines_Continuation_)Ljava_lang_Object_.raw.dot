digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.receiveCatching\-JP2dKIU(Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_52 [shape=record,label="{52\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_54 [shape=record,label="{54\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r6 I:??[OBJECT, ARRAY]) kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0014 \l}"];
Node_56 [shape=record,label="{56\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1) = (kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1) kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0014 \l}"];
Node_58 [shape=record,label="{58\:\ 0x000e|0x000e: IGET  (r6 I:int) = (r0 I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1) kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.label int \l0x0010: ARITH  (r6 I:int) = (r6 I:int) \- (r2 I:int) \l0x0011: IPUT  (r6 I:int), (r0 I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1) kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.label int \l}"];
Node_60 [shape=record,label="{60\:\ 0x0019|0x0019: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r0 I:java.lang.Object) = \l  (r6 I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.result java.lang.Object \l0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0020: IGET  (r2 I:int) = \l  (r6 I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.label int  (LINE:628)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0022|0x0022: SWITCH  (r2 I:??)\l case 0: goto B:65:0x0032\l case 1: goto B:64:0x002d\l default: goto B:62:0x0025 \l}"];
Node_62 [shape=record,label="{62\:\ 0x0025|0x0025: NEW_INSTANCE  (r6 I:java.lang.IllegalStateException A[D('$continuation' kotlin.coroutines.Continuation)]) =  java.lang.IllegalStateException  (LINE:633)\l0x0027: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x0029: INVOKE  (r6 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_63 [shape=record,label="{63\:\ 0x002c|0x002c: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_53 [shape=record,label="{53\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_64 [shape=record,label="{64\:\ 0x002d|0x002d: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:628)\l0x0030: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) \l}"];
Node_75 [shape=record,label="{75\:\ 0x0061|0x0061: CHECK_CAST (r2 I:kotlinx.coroutines.channels.ChannelResult) = (kotlinx.coroutines.channels.ChannelResult) (r2 I:??[OBJECT, ARRAY])  (LINE:633)\l0x0063: INVOKE  (r1 I:java.lang.Object) = (r2 I:kotlinx.coroutines.channels.ChannelResult) type: VIRTUAL call: kotlinx.coroutines.channels.ChannelResult.unbox\-impl():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_76 [shape=record,label="{76\:\ 0x0067|RETURN\l|0x0067: RETURN  (r1 I:java.lang.Object) \l}"];
Node_65 [shape=record,label="{65\:\ 0x0032|0x0032: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0035: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY]) \l0x0036: INVOKE  (r3 I:java.lang.Object) = (r2 I:kotlinx.coroutines.channels.AbstractChannel A[D('this' kotlinx.coroutines.channels.AbstractChannel)]) type: VIRTUAL call: kotlinx.coroutines.channels.AbstractChannel.pollInternal():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:630)\l0x003a: SGET  (r4 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED kotlinx.coroutines.internal.Symbol  (LINE:631)\l}"];
Node_66 [shape=record,label="{66\:\ 0x003c|0x003c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0057 \l}"];
Node_67 [shape=record,label="{67\:\ 0x003e|0x003e: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) \l0x003f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('this' kotlinx.coroutines.channels.AbstractChannel)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0040: INSTANCE_OF  (r3 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('$this$toResult$iv' java.lang.Object)]) kotlinx.coroutines.channels.Closed  (LINE:1153)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0042|0x0042: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x0050 \l}"];
Node_69 [shape=record,label="{69\:\ 0x0044|0x0044: SGET  (r3 I:kotlinx.coroutines.channels.ChannelResult$Companion) =  kotlinx.coroutines.channels.ChannelResult.Companion kotlinx.coroutines.channels.ChannelResult$Companion \l0x0046: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$toResult$iv' java.lang.Object)]) \l0x0047: CHECK_CAST (r4 I:kotlinx.coroutines.channels.Closed) = (kotlinx.coroutines.channels.Closed) (r4 I:??[OBJECT, ARRAY]) \l0x0049: IGET  (r4 I:java.lang.Throwable) = (r4 I:kotlinx.coroutines.channels.Closed) kotlinx.coroutines.channels.Closed.closeCause java.lang.Throwable \l0x004b: INVOKE  (r3 I:java.lang.Object) = (r3 I:kotlinx.coroutines.channels.ChannelResult$Companion), (r4 I:java.lang.Throwable) type: VIRTUAL call: kotlinx.coroutines.channels.ChannelResult.Companion.closed\-JP2dKIU(java.lang.Throwable):java.lang.Object A[MD:\<E\>:(java.lang.Throwable):java.lang.Object (m)]\l}"];
Node_77 [shape=record,label="{77\:\ ?|SYNTHETIC\lRETURN\l|0x0056: RETURN  (r3 I:java.lang.Object) A[SYNTHETIC] (LINE:631)\l}"];
Node_70 [shape=record,label="{70\:\ 0x0050|0x0050: SGET  (r3 I:kotlinx.coroutines.channels.ChannelResult$Companion) =  kotlinx.coroutines.channels.ChannelResult.Companion kotlinx.coroutines.channels.ChannelResult$Companion \l0x0052: INVOKE  (r3 I:java.lang.Object) = \l  (r3 I:kotlinx.coroutines.channels.ChannelResult$Companion)\l  (r1 I:java.lang.Object A[D('$this$toResult$iv' java.lang.Object)])\l type: VIRTUAL call: kotlinx.coroutines.channels.ChannelResult.Companion.success\-JP2dKIU(java.lang.Object):java.lang.Object A[MD:\<E\>:(E):java.lang.Object (m)]\l}"];
Node_71 [shape=record,label="{71\:\ 0x0056|RETURN\lORIG_RETURN\l|0x0056: RETURN  (r3 I:java.lang.Object)  (LINE:631)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0057|0x0057: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:633)\l0x0058: IPUT  \l  (r3 I:int)\l  (r6 I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.label int \l0x005a: INVOKE  (r2 I:java.lang.Object A[D('this' kotlinx.coroutines.channels.AbstractChannel)]) = \l  (r2 I:kotlinx.coroutines.channels.AbstractChannel A[D('this' kotlinx.coroutines.channels.AbstractChannel)])\l  (r3 I:int)\l  (r6 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.channels.AbstractChannel.receiveSuspend(int, kotlin.coroutines.Continuation):java.lang.Object A[MD:\<R\>:(int, kotlin.coroutines.Continuation\<? super R\>):java.lang.Object (m)]\l}"];
Node_73 [shape=record,label="{73\:\ 0x005e|0x005e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('this' kotlinx.coroutines.channels.AbstractChannel)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x0061 \l}"];
Node_74 [shape=record,label="{74\:\ 0x0060|RETURN\l|0x0060: RETURN  (r1 I:java.lang.Object)  (LINE:628)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1) =  kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1 \l0x0016: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1)\l  (r5 I:kotlinx.coroutines.channels.AbstractChannel)\l  (r6 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.\<init\>(kotlinx.coroutines.channels.AbstractChannel, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.channels.AbstractChannel\<E\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1\>):void (m)]\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.channels.AbstractChannel.receiveCatching\-JP2dKIU((r5 'this' I:kotlinx.coroutines.channels.AbstractChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r6 I:kotlin.coroutines.Continuation\<? super kotlinx.coroutines.channels.ChannelResult\<? extends E\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:76:0x0067 \-\> B:53:?, CROSS_EDGE: B:71:0x0056 \-\> B:53:?, CROSS_EDGE: B:70:0x0050 \-\> B:71:0x0056, CROSS_EDGE: B:74:0x0060 \-\> B:53:?, CROSS_EDGE: B:73:0x005e \-\> B:75:0x0061, CROSS_EDGE: B:59:0x0014 \-\> B:60:0x0019, CROSS_EDGE: B:55:0x0002 \-\> B:59:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<\-Lkotlinx\/coroutines\/channels\/ChannelResult\<+TE;\>;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x001c\-0x0025: r0 '$result' Ljava\/lang\/Object;\l  0x001a\-0x0025: r6 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x0036\-0x003f: r2 'this' Lkotlinx\/coroutines\/channels\/AbstractChannel;\l  0x003a\-0x003f: r3 'result' Ljava\/lang\/Object;\l  0x003f\-0x0056: r1 '$this$toResult$iv' Ljava\/lang\/Object;\l  0x0040\-0x0056: r2 '$i$f$toResult' I\l  0x0057\-0x005e: r2 'this' Lkotlinx\/coroutines\/channels\/AbstractChannel;\l  0x002d\-0x006f: r0 '$result' Ljava\/lang\/Object;\l  0x002d\-0x006f: r6 '$continuation' Lkotlin\/coroutines\/Continuation;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.ReceiveChannel.receiveCatching\-JP2dKIU(kotlin.coroutines.Continuation\<? super kotlinx.coroutines.channels.ChannelResult\<? extends E\>\>):java.lang.Object]\l}"];
MethodNode -> Node_52;Node_52 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_59;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62;
Node_61 -> Node_64;
Node_61 -> Node_65;
Node_62 -> Node_63;
Node_63 -> Node_53;
Node_64 -> Node_75;
Node_75 -> Node_76;
Node_76 -> Node_53;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_72;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_77;
Node_77 -> Node_53;
Node_70 -> Node_71;
Node_71 -> Node_53;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_75;
Node_74 -> Node_53;
Node_59 -> Node_60;
}

