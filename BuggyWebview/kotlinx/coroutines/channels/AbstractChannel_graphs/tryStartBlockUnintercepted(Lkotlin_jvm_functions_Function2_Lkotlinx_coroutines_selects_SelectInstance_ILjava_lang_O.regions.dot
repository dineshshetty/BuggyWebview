digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.tryStartBlockUnintercepted(Lkotlin\/jvm\/functions\/Function2;Lkotlinx\/coroutines\/selects\/SelectInstance;ILjava\/lang\/Object;)V" {
subgraph cluster_Region_1433208840 {
label = "R(1:(1:3)(1:(1:21)(1:18)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1427133839 {
label = "IF [B:53:0x0003] THEN: R(1:3) ELSE: R(1:(1:21)(1:18))";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0003|if ((r8 instanceof kotlinx.coroutines.channels.Closed) != false) goto L3\l}"];
subgraph cluster_Region_550907693 {
label = "R(1:3)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_1902636427 {
label = "Switch: 3
 case 0 -> R(1:11)
 case 1 -> R(1:(2:(2:8|9)|(1:6)))
 case default -> R(1:12)";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0005|switch(r7) \{\l    case 0: goto L10;\l    case 1: goto L4;\l    default: goto L12;\l\}\l}"];
subgraph cluster_Region_1282905831 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x0032|throw kotlinx.coroutines.internal.StackTraceRecovery.recoverStackTrace(((kotlinx.coroutines.channels.Closed) r8).getReceiveException())\l}"];
}
subgraph cluster_Region_463216331 {
label = "R(1:(2:(2:8|9)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_178447826 {
label = "R(2:(2:8|9)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1147624120 {
label = "IF [B:57:0x000d] THEN: R(2:8|9) ELSE: null";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x000d|if (r6.trySelect() == true) goto L8\l}"];
subgraph cluster_Region_886516861 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x0010|kotlinx.coroutines.intrinsics.Undispatched.startCoroutineUnintercepted(r5, kotlinx.coroutines.channels.ChannelResult.m1638boximpl(kotlinx.coroutines.channels.ChannelResult.Companion.m1651closedJP2dKIU(((kotlinx.coroutines.channels.Closed) r8).closeCause)), r6.getCompletion())\l}"];
Node_73 [shape=record,label="{73\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_1338381930 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x000f|RETURN\l|return\l}"];
}
}
}
subgraph cluster_Region_1381496373 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
subgraph cluster_Region_740017245 {
label = "R(1:(1:21)(1:18)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_564310375 {
label = "IF [B:64:0x0035] THEN: R(1:21) ELSE: R(1:18) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x0035|if (r7 != 1) goto L21\l}"];
subgraph cluster_Region_1579714175 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x005b|kotlinx.coroutines.intrinsics.Undispatched.startCoroutineUnintercepted(r5, r8, r6.getCompletion())\l}"];
}
subgraph cluster_Region_1514245239 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x004f|PHI: r2 \l  PHI: (r2v3 java.lang.Object A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.channels.ChannelResult java.lang.Object r0 = kotlinx.coroutines.channels.ChannelResult.m1638boximpl(r8 instanceof kotlinx.coroutines.channels.Closed ? kotlinx.coroutines.channels.ChannelResult.Companion.m1651closedJP2dKIU(((kotlinx.coroutines.channels.Closed) r8).closeCause) : kotlinx.coroutines.channels.ChannelResult.Companion.m1653successJP2dKIU(r8))\lkotlinx.coroutines.intrinsics.Undispatched.startCoroutineUnintercepted(r5, r0, r6.getCompletion())\l}"];
}
}
}
}
}
Node_50 [shape=record,color=red,label="{50\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0001}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x0009}"];
Node_51 [shape=record,color=red,label="{51\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x0027}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0034}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x0037}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x003b}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x003d}"];
Node_72 [shape=record,color=red,label="{72\:\ ?|SYNTHETIC\l}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x0049}"];
Node_71 [shape=record,color=red,label="{71\:\ 0x0062|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.channels.AbstractChannel.tryStartBlockUnintercepted((r4v0 'this' kotlinx.coroutines.channels.AbstractChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r5v0 kotlin.jvm.functions.Function2\<java.lang.Object, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\> A[D('$this$tryStartBlockUnintercepted' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlinx.coroutines.selects.SelectInstance\<? super R\> A[D('select' kotlinx.coroutines.selects.SelectInstance), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'receiveMode' int A[D('receiveMode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'value' java.lang.Object A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:71:0x0062 \-\> B:51:?, CROSS_EDGE: B:61:0x0032 \-\> B:51:?, CROSS_EDGE: B:54:0x0005 \-\> B:71:0x0062, CROSS_EDGE: B:69:0x004f \-\> B:71:0x0062, CROSS_EDGE: B:68:0x0049 \-\> B:69:0x004f, CROSS_EDGE: B:70:0x005b \-\> B:71:0x0062\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, E]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Lkotlin\/jvm\/functions\/Function2\<Ljava\/lang\/Object;\-Lkotlin\/coroutines\/Continuation\<\-TR;\>;+Ljava\/lang\/Object;\>;Lkotlinx\/coroutines\/selects\/SelectInstance\<\-TR;\>;ILjava\/lang\/Object;)V\l}"];
MethodNode -> Node_50;Node_53 -> Node_54;
Node_53 -> Node_63[style=dashed];
Node_54 -> Node_56;
Node_54 -> Node_60;
Node_54 -> Node_74;
Node_61 -> Node_51;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_59 -> Node_73;
Node_73 -> Node_51;
Node_58 -> Node_51;
Node_74 -> Node_51;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_70;
Node_70 -> Node_71;
Node_69 -> Node_72;
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_56 -> Node_57;
Node_60 -> Node_61;
Node_63 -> Node_64;
Node_65 -> Node_66;
Node_66 -> Node_67;
Node_66 -> Node_68;
Node_67 -> Node_69;
Node_72 -> Node_51;
Node_68 -> Node_69;
Node_71 -> Node_51;
}

