digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.tryReceive\-PtdJZtk()Ljava\/lang\/Object;" {
subgraph cluster_Region_515747780 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0000|java.lang.Object java.lang.Object r0 = pollInternal()\l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|RETURN\l|return r0 == kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED ? kotlinx.coroutines.channels.ChannelResult.Companion.m1652failurePtdJZtk() : r0 instanceof kotlinx.coroutines.channels.Closed ? kotlinx.coroutines.channels.ChannelResult.Companion.m1651closedJP2dKIU(((kotlinx.coroutines.channels.Closed) r0).closeCause) : kotlinx.coroutines.channels.ChannelResult.Companion.m1653successJP2dKIU(r0)\l}"];
}
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0008}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x000e}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x000f}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0011}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0013}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x001e}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x001f}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0025}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.channels.AbstractChannel.tryReceive\-PtdJZtk((r3v0 'this' kotlinx.coroutines.channels.AbstractChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x001e \-\> B:25:?, CROSS_EDGE: B:35:0x0025 \-\> B:25:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r1v2, resolved type: kotlinx.coroutines.channels.ChannelResult$Companion\}\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.ReceiveChannel.tryReceive\-PtdJZtk():java.lang.Object]\l}"];
MethodNode -> Node_24;Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_30;
Node_24 -> Node_26;
Node_28 -> Node_29;
Node_29 -> Node_25;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_25;
Node_34 -> Node_35;
Node_35 -> Node_25;
}

