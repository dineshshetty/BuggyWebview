digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.registerSelectReceiveMode(Lkotlinx\/coroutines\/selects\/SelectInstance;ILkotlin\/jvm\/functions\/Function2;)V" {
Node_64 [shape=record,label="{64\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_66 [shape=record,label="{66\:\ 0x0000|LOOP_START\lLOOP:0: B:66:0x0000\-\>B:91:0x0000\l|0x0001: INVOKE  (r0 I:boolean) = (r3 I:kotlinx.coroutines.selects.SelectInstance A[D('select' kotlinx.coroutines.selects.SelectInstance)]) type: INTERFACE call: kotlinx.coroutines.selects.SelectInstance.isSelected():boolean A[MD:():boolean (m)] (LINE:751)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0008 \l}"];
Node_69 [shape=record,label="{69\:\ 0x0008|0x0008: INVOKE  (r0 I:boolean) = (r2 I:kotlinx.coroutines.channels.AbstractChannel) type: VIRTUAL call: kotlinx.coroutines.channels.AbstractChannel.isEmptyImpl():boolean A[MD:():boolean (m)] (LINE:752)\l}"];
Node_70 [shape=record,label="{70\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:86:0x0015 \l}"];
Node_86 [shape=record,label="{86\:\ 0x0015|SYNTHETIC\l}"];
Node_74 [shape=record,label="{74\:\ 0x0015|0x0015: INVOKE  (r0 I:java.lang.Object) = \l  (r2 I:kotlinx.coroutines.channels.AbstractChannel)\l  (r3 I:kotlinx.coroutines.selects.SelectInstance A[D('select' kotlinx.coroutines.selects.SelectInstance)])\l type: VIRTUAL call: kotlinx.coroutines.channels.AbstractChannel.pollSelectInternal(kotlinx.coroutines.selects.SelectInstance):java.lang.Object A[MD:(kotlinx.coroutines.selects.SelectInstance\<?\>):java.lang.Object (m)] (LINE:755)\l0x001a: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.getALREADY_SELECTED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:757)\l}"];
Node_75 [shape=record,label="{75\:\ 0x001e|0x001e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pollResult' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:77:0x0021 \l}"];
Node_77 [shape=record,label="{77\:\ 0x0021|0x0021: SGET  (r1 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED kotlinx.coroutines.internal.Symbol  (LINE:758)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0023|0x0023: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pollResult' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x0026 \l}"];
Node_87 [shape=record,label="{87\:\ 0x0026|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ 0x0026|0x0026: SGET  (r1 I:java.lang.Object) =  kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC java.lang.Object  (LINE:759)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0028|0x0028: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pollResult' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:90:0x002b \l}"];
Node_90 [shape=record,label="{90\:\ 0x002b|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x002b|0x002b: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.AbstractChannel)\l  (r5 I:kotlin.jvm.functions.Function2 A[D('block' kotlin.jvm.functions.Function2)])\l  (r3 I:kotlinx.coroutines.selects.SelectInstance A[D('select' kotlinx.coroutines.selects.SelectInstance)])\l  (r4 I:int A[D('receiveMode' int)])\l  (r0 I:java.lang.Object A[D('pollResult' java.lang.Object)])\l type: DIRECT call: kotlinx.coroutines.channels.AbstractChannel.tryStartBlockUnintercepted(kotlin.jvm.functions.Function2, kotlinx.coroutines.selects.SelectInstance, int, java.lang.Object):void A[MD:\<R\>:(kotlin.jvm.functions.Function2\<java.lang.Object, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\>, kotlinx.coroutines.selects.SelectInstance\<? super R\>, int, java.lang.Object):void (m)] (LINE:760)\l}"];
Node_94 [shape=record,label="{94\:\ 0x0000|SYNTHETIC\l}"];
Node_91 [shape=record,label="{91\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:66:0x0000\-\>B:91:0x0000\l}"];
Node_93 [shape=record,label="{93\:\ 0x0000|SYNTHETIC\l}"];
Node_92 [shape=record,label="{92\:\ 0x0000|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x0020|SYNTHETIC\l}"];
Node_76 [shape=record,label="{76\:\ 0x0020|RETURN\l|0x0020: RETURN   \l}"];
Node_65 [shape=record,label="{65\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_88 [shape=record,label="{88\:\ 0x000e|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ 0x000e|0x000e: INVOKE  (r0 I:boolean) = \l  (r2 I:kotlinx.coroutines.channels.AbstractChannel)\l  (r3 I:kotlinx.coroutines.selects.SelectInstance A[D('select' kotlinx.coroutines.selects.SelectInstance)])\l  (r5 I:kotlin.jvm.functions.Function2 A[D('block' kotlin.jvm.functions.Function2)])\l  (r4 I:int A[D('receiveMode' int)])\l type: DIRECT call: kotlinx.coroutines.channels.AbstractChannel.enqueueReceiveSelect(kotlinx.coroutines.selects.SelectInstance, kotlin.jvm.functions.Function2, int):boolean A[MD:\<R\>:(kotlinx.coroutines.selects.SelectInstance\<? super R\>, kotlin.jvm.functions.Function2\<java.lang.Object, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\>, int):boolean (m)] (LINE:753)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:95:0x0000 \l}"];
Node_84 [shape=record,label="{84\:\ 0x0014|SYNTHETIC\l}"];
Node_73 [shape=record,label="{73\:\ 0x0014|RETURN\l|0x0014: RETURN   \l}"];
Node_95 [shape=record,label="{95\:\ 0x0000|SYNTHETIC\l}"];
Node_85 [shape=record,label="{85\:\ 0x0007|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x0007|RETURN\l|0x0007: RETURN   \l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.channels.AbstractChannel.registerSelectReceiveMode((r2 'this' I:kotlinx.coroutines.channels.AbstractChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlinx.coroutines.selects.SelectInstance\<? super R\> A[D('select' kotlinx.coroutines.selects.SelectInstance), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('receiveMode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function2\<java.lang.Object, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\> A[D('block' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:72:0x0012 \-\> B:66:0x0000, CROSS_EDGE: B:73:0x0014 \-\> B:65:?, CROSS_EDGE: B:76:0x0020 \-\> B:65:?, BACK_EDGE: B:83:0x002b \-\> B:66:0x0000, BACK_EDGE: B:81:0x0028 \-\> B:66:0x0000, BACK_EDGE: B:78:0x0023 \-\> B:66:0x0000\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0019\-0x002e: r0 'pollResult' Ljava\/lang\/Object;\l  \-1 \-0x002e: r3 'select' Lkotlinx\/coroutines\/selects\/SelectInstance;\l  \-1 \-0x002e: r4 'receiveMode' I\l  \-1 \-0x002e: r5 'block' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [R, E]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/selects\/SelectInstance\<\-TR;\>;ILkotlin\/jvm\/functions\/Function2\<Ljava\/lang\/Object;\-Lkotlin\/coroutines\/Continuation\<\-TR;\>;+Ljava\/lang\/Object;\>;)V\l}"];
MethodNode -> Node_64;Node_64 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_69;
Node_67 -> Node_85[style=dashed];
Node_69 -> Node_70;
Node_70 -> Node_86;
Node_70 -> Node_88[style=dashed];
Node_86 -> Node_74;
Node_74 -> Node_75;
Node_75 -> Node_77;
Node_75 -> Node_89[style=dashed];
Node_77 -> Node_78;
Node_78 -> Node_87;
Node_78 -> Node_92[style=dashed];
Node_87 -> Node_80;
Node_80 -> Node_81;
Node_81 -> Node_90;
Node_81 -> Node_93[style=dashed];
Node_90 -> Node_83;
Node_83 -> Node_94;
Node_94 -> Node_91;
Node_91 -> Node_66;
Node_93 -> Node_91;
Node_92 -> Node_91;
Node_89 -> Node_76;
Node_76 -> Node_65;
Node_88 -> Node_71;
Node_71 -> Node_72;
Node_72 -> Node_84[style=dashed];
Node_72 -> Node_95;
Node_84 -> Node_73;
Node_73 -> Node_65;
Node_95 -> Node_91;
Node_85 -> Node_68;
Node_68 -> Node_65;
}

