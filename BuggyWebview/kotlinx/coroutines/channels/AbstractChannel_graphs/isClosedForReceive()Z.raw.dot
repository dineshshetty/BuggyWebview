digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.isClosedForReceive()Z" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.channels.Closed) = (r1 I:kotlinx.coroutines.channels.AbstractChannel) type: VIRTUAL call: kotlinx.coroutines.channels.AbstractChannel.getClosedForReceive():kotlinx.coroutines.channels.Closed A[MD:():kotlinx.coroutines.channels.Closed\<?\> (m)] (LINE:578)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x000e \l}"];
Node_24 [shape=record,label="{24\:\ 0x0006|0x0006: INVOKE  (r0 I:boolean) = (r1 I:kotlinx.coroutines.channels.AbstractChannel) type: VIRTUAL call: kotlinx.coroutines.channels.AbstractChannel.isBufferEmpty():boolean A[MD:():boolean (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x000e \l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|SYNTHETIC\lRETURN\l|0x000c: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000f: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|RETURN\lORIG_RETURN\l|0x000e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.channels.AbstractChannel.isClosedForReceive((r1 'this' I:kotlinx.coroutines.channels.AbstractChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x000e \-\> B:28:0x000f, CROSS_EDGE: B:23:0x0004 \-\> B:27:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.ReceiveChannel.isClosedForReceive():boolean]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_21;
Node_27 -> Node_21;
}

