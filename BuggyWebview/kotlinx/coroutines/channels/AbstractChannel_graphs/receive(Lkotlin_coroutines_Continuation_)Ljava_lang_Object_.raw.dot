digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.receive(Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) = (r2 I:kotlinx.coroutines.channels.AbstractChannel) type: VIRTUAL call: kotlinx.coroutines.channels.AbstractChannel.pollInternal():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:584)\l0x0004: SGET  (r1 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED kotlinx.coroutines.internal.Symbol  (LINE:591)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x000d \l}"];
Node_22 [shape=record,label="{22\:\ 0x0008|0x0008: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) kotlinx.coroutines.channels.Closed \l}"];
Node_23 [shape=record,label="{23\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x000d \l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:java.lang.Object A[D('result' java.lang.Object)]) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x000d|0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:593)\l0x000e: INVOKE  (r1 I:java.lang.Object) = \l  (r2 I:kotlinx.coroutines.channels.AbstractChannel)\l  (r1 I:int)\l  (r3 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.channels.AbstractChannel.receiveSuspend(int, kotlin.coroutines.Continuation):java.lang.Object A[MD:\<R\>:(int, kotlin.coroutines.Continuation\<? super R\>):java.lang.Object (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0012|RETURN\l|0x0012: RETURN  (r1 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.channels.AbstractChannel.receive((r2 'this' I:kotlinx.coroutines.channels.AbstractChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlin.coroutines.Continuation\<? super E\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0012 \-\> B:19:?, CROSS_EDGE: B:21:0x0006 \-\> B:25:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<\-TE;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x0004\-0x0012: r0 'result' Ljava\/lang\/Object;\l  \-1 \-0x0012: r3 '$completion' Lkotlin\/coroutines\/Continuation;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.ReceiveChannel.receive(kotlin.coroutines.Continuation\<? super E\>):java.lang.Object]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_19;
Node_25 -> Node_26;
Node_26 -> Node_19;
}

