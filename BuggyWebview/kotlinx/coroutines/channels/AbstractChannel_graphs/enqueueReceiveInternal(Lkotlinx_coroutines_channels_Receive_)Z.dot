digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.enqueueReceiveInternal(Lkotlinx\/coroutines\/channels\/Receive;)Z" {
Node_60 [shape=record,label="{60\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_62 [shape=record,label="{62\:\ 0x0000}"];
Node_63 [shape=record,label="{63\:\ 0x0006|if (isBufferAlwaysEmpty() == false) goto L13\l}"];
Node_64 [shape=record,label="{64\:\ 0x0008|kotlinx.coroutines.internal.LockFreeLinkedListNode r0 = getQueue()\l}"];
Node_65 [shape=record,label="{65\:\ 0x000f|LOOP_START\lLOOP:0: B:65:0x000f\-\>B:69:0x0024\l|kotlinx.coroutines.internal.LockFreeLinkedListNode r4 = r0.getPrevNode()\l}"];
Node_66 [shape=record,label="{66\:\ 0x001a|if (((r4 instanceof kotlinx.coroutines.channels.Send) ^ true) != false) goto L6\l}"];
Node_68 [shape=record,label="{68\:\ 0x001d}"];
Node_69 [shape=record,label="{69\:\ 0x0024|LOOP_END\lLOOP:0: B:65:0x000f\-\>B:69:0x0024\l|if (r4.addNext(r10, r0) == false) goto L4\l}"];
Node_81 [shape=record,label="{81\:\ 0x0026|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x0026|SYNTHETIC\lRETURN\l|return true\l}"];
Node_61 [shape=record,label="{61\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_82 [shape=record,label="{82\:\ 0x0058|SYNTHETIC\l}"];
Node_87 [shape=record,label="{87\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_71 [shape=record,label="{71\:\ 0x0028|kotlinx.coroutines.internal.LockFreeLinkedListNode r0 = getQueue()\lkotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp r6 = new kotlinx.coroutines.channels.C0885x75f916ce(r9)\l}"];
Node_72 [shape=record,label="{72\:\ 0x003d|LOOP_START\lLOOP:1: B:72:0x003d\-\>B:76:0x0052\l|kotlinx.coroutines.internal.LockFreeLinkedListNode r5 = r0.getPrevNode()\l}"];
Node_73 [shape=record,label="{73\:\ 0x0048|if (((r5 instanceof kotlinx.coroutines.channels.Send) ^ true) != false) goto L16\l}"];
Node_75 [shape=record,label="{75\:\ 0x004b}"];
Node_76 [shape=record,label="{76\:\ 0x0052|LOOP_END\lLOOP:1: B:72:0x003d\-\>B:76:0x0052\l|switch(r5.tryCondAddNext(r10, r0, r6)) \{\l    case 1: goto L18;\l    case 2: goto L20;\l    default: goto L14;\l\}\l}"];
Node_83 [shape=record,label="{83\:\ 0x0057|SYNTHETIC\l}"];
Node_79 [shape=record,label="{79\:\ 0x0057|RETURN\lORIG_RETURN\l|return true\l}"];
Node_84 [shape=record,label="{84\:\ 0x0058|SYNTHETIC\l}"];
Node_88 [shape=record,label="{88\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_85 [shape=record,label="{85\:\ 0x0058|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.channels.AbstractChannel.enqueueReceiveInternal((r9v0 'this' kotlinx.coroutines.channels.AbstractChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r10v0 kotlinx.coroutines.channels.Receive\<? super E\> A[D('receive' kotlinx.coroutines.channels.Receive), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:69:0x0024 \-\> B:65:0x000f, CROSS_EDGE: B:66:0x001a \-\> B:80:0x0058, CROSS_EDGE: B:79:0x0057 \-\> B:80:0x0058, BACK_EDGE: B:76:0x0052 \-\> B:72:0x003d, CROSS_EDGE: B:76:0x0052 \-\> B:80:0x0058, CROSS_EDGE: B:73:0x0048 \-\> B:80:0x0058\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (Lkotlinx\/coroutines\/channels\/Receive\<\-TE;\>;)Z\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractChannel.enqueueReceiveInternal(kotlinx.coroutines.channels.Receive\<? super E\>):boolean]\l}"];
MethodNode -> Node_60;Node_60 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_71;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_68;
Node_66 -> Node_82[style=dashed];
Node_68 -> Node_69;
Node_69 -> Node_65;
Node_69 -> Node_81[style=dashed];
Node_81 -> Node_70;
Node_70 -> Node_61;
Node_82 -> Node_87;
Node_87 -> Node_61;
Node_71 -> Node_72;
Node_72 -> Node_73;
Node_73 -> Node_75;
Node_73 -> Node_85[style=dashed];
Node_75 -> Node_76;
Node_76 -> Node_72;
Node_76 -> Node_83;
Node_76 -> Node_84;
Node_83 -> Node_79;
Node_79 -> Node_61;
Node_84 -> Node_88;
Node_88 -> Node_61;
Node_85 -> Node_89;
Node_89 -> Node_61;
}

