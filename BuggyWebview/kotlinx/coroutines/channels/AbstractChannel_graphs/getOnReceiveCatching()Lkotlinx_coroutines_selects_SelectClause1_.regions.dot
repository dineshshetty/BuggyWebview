digraph "CFG forkotlinx.coroutines.channels.AbstractChannel.getOnReceiveCatching()Lkotlinx\/coroutines\/selects\/SelectClause1;" {
subgraph cluster_Region_1954586668 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0007|RETURN\l|return (kotlinx.coroutines.selects.SelectClause1) ((kotlinx.coroutines.selects.SelectClause1\<kotlinx.coroutines.channels.ChannelResult\<? extends E\>\>) new kotlinx.coroutines.channels.AbstractChannel$onReceiveCatching$1(r1))\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.selects.SelectClause1\<kotlinx.coroutines.channels.ChannelResult\<E\>\> kotlinx.coroutines.channels.AbstractChannel.getOnReceiveCatching((r1v0 'this' kotlinx.coroutines.channels.AbstractChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: ()Lkotlinx\/coroutines\/selects\/SelectClause1\<Lkotlinx\/coroutines\/channels\/ChannelResult\<TE;\>;\>;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.ReceiveChannel.getOnReceiveCatching():kotlinx.coroutines.selects.SelectClause1\<kotlinx.coroutines.channels.ChannelResult\<E\>\>]\l}"];
MethodNode -> Node_8;Node_11 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
}

