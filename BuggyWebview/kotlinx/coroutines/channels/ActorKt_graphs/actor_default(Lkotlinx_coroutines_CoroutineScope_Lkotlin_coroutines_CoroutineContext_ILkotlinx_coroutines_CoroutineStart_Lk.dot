digraph "CFG forkotlinx.coroutines.channels.ActorKt.actor$default(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/CoroutineStart;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function2;ILjava\/lang\/Object;)Lkotlinx\/coroutines\/channels\/SendChannel;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if ((r12 & 1) == 0) goto L19\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|r1 = kotlin.coroutines.EmptyCoroutineContext.INSTANCE\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|PHI: r1 \l  PHI: (r1v1 kotlin.coroutines.CoroutineContext) = (r1v0 kotlin.coroutines.CoroutineContext), (r1v2 kotlin.coroutines.EmptyCoroutineContext) binds: [B:5:0x000a, B:4:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|if ((r12 & 2) == 0) goto L18\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|r2 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:9:0x0012, B:8:0x000f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|if ((r12 & 4) == 0) goto L17\l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|r3 = kotlinx.coroutines.CoroutineStart.DEFAULT\l}"];
Node_14 [shape=record,label="{14\:\ 0x001c|PHI: r3 \l  PHI: (r3v1 kotlinx.coroutines.CoroutineStart) = (r3v0 kotlinx.coroutines.CoroutineStart), (r3v2 kotlinx.coroutines.CoroutineStart) binds: [B:13:0x001b, B:12:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|if ((r12 & 8) == 0) goto L16\l}"];
Node_16 [shape=record,label="{16\:\ 0x0020|r4 = null\l}"];
Node_18 [shape=record,label="{18\:\ 0x0024|PHI: r4 \l  PHI: (r4v1 kotlin.jvm.functions.Function1) = (r4v0 kotlin.jvm.functions.Function1), (r4v2 kotlin.jvm.functions.Function1) binds: [B:17:0x0023, B:16:0x0020] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x002a|RETURN\l|return actor(r6, r1, r2, r3, r4, r11)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0023|r4 = r10\l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|r3 = r9\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|r2 = r8\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|r1 = r7\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ kotlinx.coroutines.channels.SendChannel kotlinx.coroutines.channels.ActorKt.actor$default((r6v0 kotlinx.coroutines.CoroutineScope A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.coroutines.CoroutineContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 kotlinx.coroutines.CoroutineStart A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 kotlin.jvm.functions.Function1 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 kotlin.jvm.functions.Function2 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:17:0x0023 \-\> B:18:0x0024, CROSS_EDGE: B:13:0x001b \-\> B:14:0x001c, CROSS_EDGE: B:9:0x0012 \-\> B:10:0x0013, CROSS_EDGE: B:5:0x000a \-\> B:6:0x000b\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [109=5]\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_1;
Node_17 -> Node_18;
Node_13 -> Node_14;
Node_9 -> Node_10;
Node_5 -> Node_6;
}

