digraph "CFG forkotlinx.coroutines.channels.ActorKt.actor(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/CoroutineStart;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function2;)Lkotlinx\/coroutines\/channels\/SendChannel;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext) = \l  (r4 I:kotlinx.coroutines.CoroutineScope A[D('$this$actor' kotlinx.coroutines.CoroutineScope)])\l  (r5 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l type: STATIC call: kotlinx.coroutines.CoroutineContextKt.newCoroutineContext(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext A[MD:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext (m)] (LINE:116)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:117)\l0x0005: CONST  (r2 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l0x0006: INVOKE  (r1 I:kotlinx.coroutines.channels.Channel) = \l  (r6 I:int A[D('capacity' int)])\l  (r1 I:kotlinx.coroutines.channels.BufferOverflow)\l  (r1 I:kotlin.jvm.functions.Function1)\l  (r2 I:int)\l  (r1 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.channels.ChannelKt.Channel$default(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1, int, java.lang.Object):kotlinx.coroutines.channels.Channel A[MD:(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1, int, java.lang.Object):kotlinx.coroutines.channels.Channel (m)]\l0x000a: INVOKE  (r2 I:boolean) = (r7 I:kotlinx.coroutines.CoroutineStart A[D('start' kotlinx.coroutines.CoroutineStart)]) type: VIRTUAL call: kotlinx.coroutines.CoroutineStart.isLazy():boolean A[MD:():boolean (m)] (LINE:118)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0018 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: NEW_INSTANCE  (r2 I:kotlinx.coroutines.channels.LazyActorCoroutine) =  kotlinx.coroutines.channels.LazyActorCoroutine  (LINE:119)\l0x0012: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.LazyActorCoroutine)\l  (r0 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r1 I:kotlinx.coroutines.channels.Channel A[D('channel' kotlinx.coroutines.channels.Channel)])\l  (r9 I:kotlin.jvm.functions.Function2 A[D('block' kotlin.jvm.functions.Function2)])\l type: DIRECT call: kotlinx.coroutines.channels.LazyActorCoroutine.\<init\>(kotlin.coroutines.CoroutineContext, kotlinx.coroutines.channels.Channel, kotlin.jvm.functions.Function2):void A[MD:(kotlin.coroutines.CoroutineContext, kotlinx.coroutines.channels.Channel\<E\>, kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.channels.ActorScope\<E\>, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>):void (m)]\l0x0015: CHECK_CAST (r2 I:kotlinx.coroutines.channels.ActorCoroutine) = (kotlinx.coroutines.channels.ActorCoroutine) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('onCompletion' kotlin.jvm.functions.Function1)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0024  (LINE:121)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.ActorCoroutine A[D('coroutine' kotlinx.coroutines.channels.ActorCoroutine)])\l  (r8 I:kotlin.jvm.functions.Function1 A[D('onCompletion' kotlin.jvm.functions.Function1)])\l type: VIRTUAL call: kotlinx.coroutines.channels.ActorCoroutine.invokeOnCompletion(kotlin.jvm.functions.Function1):kotlinx.coroutines.DisposableHandle A[MD:(kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\>):kotlinx.coroutines.DisposableHandle (m)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.ActorCoroutine A[D('coroutine' kotlinx.coroutines.channels.ActorCoroutine)])\l  (r7 I:kotlinx.coroutines.CoroutineStart A[D('start' kotlinx.coroutines.CoroutineStart)])\l  (r2 I:java.lang.Object A[D('coroutine' kotlinx.coroutines.channels.ActorCoroutine)])\l  (r9 I:kotlin.jvm.functions.Function2 A[D('block' kotlin.jvm.functions.Function2)])\l type: VIRTUAL call: kotlinx.coroutines.channels.ActorCoroutine.start(kotlinx.coroutines.CoroutineStart, java.lang.Object, kotlin.jvm.functions.Function2):void A[MD:\<R\>:(kotlinx.coroutines.CoroutineStart, R, kotlin.jvm.functions.Function2\<? super R, ? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\>):void (m)] (LINE:122)\l0x0027: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('coroutine' kotlinx.coroutines.channels.ActorCoroutine)])  (LINE:123)\l0x0028: CHECK_CAST (r3 I:kotlinx.coroutines.channels.SendChannel) = (kotlinx.coroutines.channels.SendChannel) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|RETURN\l|0x002a: RETURN  (r3 I:kotlinx.coroutines.channels.SendChannel\<E\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: NEW_INSTANCE  (r2 I:kotlinx.coroutines.channels.ActorCoroutine) =  kotlinx.coroutines.channels.ActorCoroutine  (LINE:120)\l0x001a: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001b: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.ActorCoroutine)\l  (r0 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r1 I:kotlinx.coroutines.channels.Channel A[D('channel' kotlinx.coroutines.channels.Channel)])\l  (r3 I:boolean)\l type: DIRECT call: kotlinx.coroutines.channels.ActorCoroutine.\<init\>(kotlin.coroutines.CoroutineContext, kotlinx.coroutines.channels.Channel, boolean):void A[MD:(kotlin.coroutines.CoroutineContext, kotlinx.coroutines.channels.Channel\<E\>, boolean):void (m)]\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.channels.SendChannel\<E\> kotlinx.coroutines.channels.ActorKt.actor((r4 I:kotlinx.coroutines.CoroutineScope A[D('$this$actor' kotlinx.coroutines.CoroutineScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('capacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlinx.coroutines.CoroutineStart A[D('start' kotlinx.coroutines.CoroutineStart), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\> A[D('onCompletion' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.channels.ActorScope\<E\>, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\> A[D('block' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x001f \-\> B:9:0x0024, CROSS_EDGE: B:5:0x0018 \-\> B:7:0x001f\lDebug Info:\l  0x0004\-0x002a: r0 'newContext' Lkotlin\/coroutines\/CoroutineContext;\l  0x000a\-0x002a: r1 'channel' Lkotlinx\/coroutines\/channels\/Channel;\l  0x001f\-0x002a: r2 'coroutine' Lkotlinx\/coroutines\/channels\/ActorCoroutine;\l  \-1 \-0x002a: r4 '$this$actor' Lkotlinx\/coroutines\/CoroutineScope;\l  \-1 \-0x002a: r5 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x002a: r6 'capacity' I\l  \-1 \-0x002a: r7 'start' Lkotlinx\/coroutines\/CoroutineStart;\l  \-1 \-0x002a: r8 'onCompletion' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x002a: r9 'block' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [E]\lSIGNATURE: \<E:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/CoroutineStart;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Throwable;Lkotlin\/Unit;\>;Lkotlin\/jvm\/functions\/Function2\<\-Lkotlinx\/coroutines\/channels\/ActorScope\<TE;\>;\-Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;+Ljava\/lang\/Object;\>;)Lkotlinx\/coroutines\/channels\/SendChannel\<TE;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_5 -> Node_7;
}

