digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.SendSelect.resumeSendClosed(Lkotlinx\/coroutines\/channels\/Closed;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.selects.SelectInstance\<R\>) = (r2 I:kotlinx.coroutines.channels.AbstractSendChannel$SendSelect) kotlinx.coroutines.channels.AbstractSendChannel.SendSelect.select kotlinx.coroutines.selects.SelectInstance  (LINE:483)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:kotlinx.coroutines.selects.SelectInstance) type: INTERFACE call: kotlinx.coroutines.selects.SelectInstance.trySelect():boolean A[MD:():boolean (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0008|0x0008: IGET  (r0 I:kotlinx.coroutines.selects.SelectInstance\<R\>) = (r2 I:kotlinx.coroutines.channels.AbstractSendChannel$SendSelect) kotlinx.coroutines.channels.AbstractSendChannel.SendSelect.select kotlinx.coroutines.selects.SelectInstance  (LINE:484)\l0x000a: INVOKE  (r1 I:java.lang.Throwable) = (r3 I:kotlinx.coroutines.channels.Closed A[D('closed' kotlinx.coroutines.channels.Closed)]) type: VIRTUAL call: kotlinx.coroutines.channels.Closed.getSendException():java.lang.Throwable A[MD:():java.lang.Throwable (m)]\l0x000e: INVOKE  (r0 I:kotlinx.coroutines.selects.SelectInstance), (r1 I:java.lang.Throwable) type: INTERFACE call: kotlinx.coroutines.selects.SelectInstance.resumeSelectWithException(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0011|RETURN\lORIG_RETURN\l|0x0011: RETURN    (LINE:485)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0011: RETURN   A[SYNTHETIC] (LINE:485)\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.channels.AbstractSendChannel.SendSelect.resumeSendClosed((r2 'this' I:kotlinx.coroutines.channels.AbstractSendChannel$SendSelect\<E, R\> A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlinx.coroutines.channels.Closed\<?\> A[D('closed' kotlinx.coroutines.channels.Closed), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0006 \-\> B:12:0x0011\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, E]\lSIGNATURE: (Lkotlinx\/coroutines\/channels\/Closed\<*\>;)V\lDebug Info:\l  \-1 \-0x0011: r3 'closed' Lkotlinx\/coroutines\/channels\/Closed;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.Send.resumeSendClosed(kotlinx.coroutines.channels.Closed\<?\>):void]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

