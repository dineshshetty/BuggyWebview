digraph "CFG forkotlinx.coroutines.channels.ChannelsKt.zip(Lkotlinx\/coroutines\/channels\/ReceiveChannel;Lkotlinx\/coroutines\/channels\/ReceiveChannel;Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/jvm\/functions\/Function2;)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
subgraph cluster_Region_1936116476 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|return kotlinx.coroutines.channels.Deprecated.zip(r1, r2, r3, r4)\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.channels.ReceiveChannel\<V\> kotlinx.coroutines.channels.ChannelsKt.zip((r1v0 kotlinx.coroutines.channels.ReceiveChannel\<? extends E\> A[D('$this$zip' kotlinx.coroutines.channels.ReceiveChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 kotlinx.coroutines.channels.ReceiveChannel\<? extends R\> A[D('other' kotlinx.coroutines.channels.ReceiveChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.jvm.functions.Function2\<? super E, ? super R, ? extends V\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, E, V]\lSIGNATURE: \<E:Ljava\/lang\/Object;R:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/channels\/ReceiveChannel\<+TE;\>;Lkotlinx\/coroutines\/channels\/ReceiveChannel\<+TR;\>;Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/jvm\/functions\/Function2\<\-TE;\-TR;+TV;\>;)Lkotlinx\/coroutines\/channels\/ReceiveChannel\<TV;\>;\l}"];
MethodNode -> Node_4;Node_7 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
}

