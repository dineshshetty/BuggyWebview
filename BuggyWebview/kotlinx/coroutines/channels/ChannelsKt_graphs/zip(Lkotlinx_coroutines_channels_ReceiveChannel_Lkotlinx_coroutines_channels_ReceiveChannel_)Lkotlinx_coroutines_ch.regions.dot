digraph "CFG forkotlinx.coroutines.channels.ChannelsKt.zip(Lkotlinx\/coroutines\/channels\/ReceiveChannel;Lkotlinx\/coroutines\/channels\/ReceiveChannel;)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
subgraph cluster_Region_1804092755 {
label = "R(2:1|2) | DECL_VAR: kotlinx.coroutines.channels.ReceiveChannel null\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlinx.coroutines.channels.ReceiveChannel r0 = kotlinx.coroutines.channels.Deprecated.zip$default(r1, r2, null, kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1.INSTANCE, 2, null)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|return r0\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlinx.coroutines.channels.ReceiveChannel kotlinx.coroutines.channels.ChannelsKt.zip((r1v0 '$this$zip' kotlinx.coroutines.channels.ReceiveChannel A[D('$this$zip' kotlinx.coroutines.channels.ReceiveChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'other' kotlinx.coroutines.channels.ReceiveChannel A[D('other' kotlinx.coroutines.channels.ReceiveChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>HIDDEN:Lkotlin\/DeprecationLevel;\}, message=Binary compatibility\}\}\}\lINLINE: 0x0000: INVOKE  \l  (r1 I:kotlinx.coroutines.channels.ReceiveChannel A[D('$this$zip' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r2 I:kotlinx.coroutines.channels.ReceiveChannel A[D('other' kotlinx.coroutines.channels.ReceiveChannel)])\l type: STATIC call: kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt.zip(kotlinx.coroutines.channels.ReceiveChannel, kotlinx.coroutines.channels.ReceiveChannel):kotlinx.coroutines.channels.ReceiveChannel\l}"];
MethodNode -> Node_4;Node_6 -> Node_7;
Node_7 -> Node_5;
Node_4 -> Node_6;
}

