digraph "CFG forkotlinx.coroutines.channels.ConflatedBroadcastChannel.Closed.getValueException()Ljava\/lang\/Throwable;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Throwable) = (r2 I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed) kotlinx.coroutines.channels.ConflatedBroadcastChannel.Closed.closeCause java.lang.Throwable  (LINE:62)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:? \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0006: CONST_STR  (r1 I:java.lang.String) =  \"Channel was closed\" \l0x0008: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x000b: CHECK_CAST (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|RETURN\lORIG_RETURN\l|0x000d: RETURN  (r0 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|0x000d: RETURN  (r0 I:java.lang.Throwable) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public final java.lang.Throwable kotlinx.coroutines.channels.ConflatedBroadcastChannel.Closed.getValueException((r2 'this' I:kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0002 \-\> B:19:0x000d\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_15;
Node_20 -> Node_15;
}

