digraph "CFG forkotlinx.coroutines.channels.AbstractSendChannel.TryOfferDesc.onPrepare(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;)Ljava\/lang\/Object;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = \l  (r5 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('prepareOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)])\l kotlinx.coroutines.internal.LockFreeLinkedListNode.PrepareOp.affected kotlinx.coroutines.internal.LockFreeLinkedListNode  (LINE:382)\l0x0002: CHECK_CAST (r0 I:kotlinx.coroutines.channels.ReceiveOrClosed) = (kotlinx.coroutines.channels.ReceiveOrClosed) (r0 I:??[OBJECT, ARRAY]) \l0x0004: IGET  (r1 I:E) = (r4 I:kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc) kotlinx.coroutines.channels.AbstractSendChannel.TryOfferDesc.element java.lang.Object  (LINE:383)\l0x0006: INVOKE  (r1 I:kotlinx.coroutines.internal.Symbol) = \l  (r0 I:kotlinx.coroutines.channels.ReceiveOrClosed A[D('affected' kotlinx.coroutines.channels.ReceiveOrClosed)])\l  (r1 I:java.lang.Object)\l  (r5 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('prepareOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)])\l type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.tryResumeReceive(java.lang.Object, kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol A[MD:(E, kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x000f \l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|0x000c: SGET  (r1 I:java.lang.Object) =  kotlinx.coroutines.internal.LockFreeLinkedList_commonKt.REMOVE_PREPARED java.lang.Object \l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|RETURN\l|0x000e: RETURN  (r1 I:java.lang.Object) \l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x000f|0x000f: SGET  (r2 I:java.lang.Object) =  kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC java.lang.Object  (LINE:384)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('token' kotlinx.coroutines.internal.Symbol)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0016 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0013|0x0013: SGET  (r2 I:java.lang.Object) =  kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC java.lang.Object \l}"];
Node_32 [shape=record,label="{32\:\ 0x0015|RETURN\l|0x0015: RETURN  (r2 I:java.lang.Object) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0016|0x0016: INVOKE  (r2 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:385)\l}"];
Node_34 [shape=record,label="{34\:\ 0x001a|0x001a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x002d \l}"];
Node_35 [shape=record,label="{35\:\ 0x001c|0x001c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1133)\l0x001d: SGET  (r3 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN kotlinx.coroutines.internal.Symbol  (LINE:385)\l}"];
Node_36 [shape=record,label="{36\:\ 0x001f|0x001f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('token' kotlinx.coroutines.internal.Symbol)]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0023 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0021|0x0021: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0024|0x0024: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0027 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0027|0x0027: NEW_INSTANCE  (r2 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0029: INVOKE  (r2 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x002c|0x002c: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|0x002d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:386)\l0x002e: RETURN  (r2 I:java.lang.Object) A[SYNTHETIC]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0023|0x0023: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x002d|RETURN\lORIG_RETURN\l|0x002d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:386)\l0x002e: RETURN  (r2 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.AbstractSendChannel.TryOfferDesc.onPrepare((r4 'this' I:kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc\<E\> A[IMMUTABLE_TYPE, THIS]), (r5 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('prepareOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x0015 \-\> B:24:?, CROSS_EDGE: B:42:0x002c \-\> B:24:?, CROSS_EDGE: B:44:0x002e \-\> B:24:?, CROSS_EDGE: B:38:0x0023 \-\> B:39:0x0024, CROSS_EDGE: B:34:0x001a \-\> B:43:0x002d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001d\-0x0024: r2 '$i$a$\-assert\-AbstractSendChannel$TryOfferDesc$onPrepare$1' I\l  0x0004\-0x002e: r0 'affected' Lkotlinx\/coroutines\/channels\/ReceiveOrClosed;\l  0x000f\-0x002e: r1 'token' Lkotlinx\/coroutines\/internal\/Symbol;\l  \-1 \-0x002e: r5 'prepareOp' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.LockFreeLinkedListNode.AbstractAtomicDesc.onPrepare(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):java.lang.Object]\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_24;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_24;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_43;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_39;
Node_39 -> Node_41;
Node_39 -> Node_45[style=dashed];
Node_41 -> Node_42;
Node_42 -> Node_24;
Node_45 -> Node_24;
Node_38 -> Node_39;
Node_43 -> Node_24;
}

