digraph "CFG forkotlinx.coroutines.channels.LazyBroadcastCoroutine.openSubscription()Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.channels.BroadcastChannel) = (r1 I:kotlinx.coroutines.channels.LazyBroadcastCoroutine) type: VIRTUAL call: kotlinx.coroutines.channels.LazyBroadcastCoroutine.get_channel():kotlinx.coroutines.channels.BroadcastChannel A[MD:():kotlinx.coroutines.channels.BroadcastChannel\<E\> (m)] (LINE:189)\l0x0004: INVOKE  (r0 I:kotlinx.coroutines.channels.ReceiveChannel) = (r0 I:kotlinx.coroutines.channels.BroadcastChannel) type: INTERFACE call: kotlinx.coroutines.channels.BroadcastChannel.openSubscription():kotlinx.coroutines.channels.ReceiveChannel A[MD:():kotlinx.coroutines.channels.ReceiveChannel\<E\> (m)]\l0x0008: INVOKE  (r1 I:kotlinx.coroutines.channels.LazyBroadcastCoroutine) type: VIRTUAL call: kotlinx.coroutines.channels.LazyBroadcastCoroutine.start():boolean A[MD:():boolean (m)] (LINE:191)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|RETURN\l|0x000b: RETURN  (r0 I:kotlinx.coroutines.channels.ReceiveChannel\<E\> A[D('subscription' kotlinx.coroutines.channels.ReceiveChannel)])  (LINE:192)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.channels.ReceiveChannel\<E\> kotlinx.coroutines.channels.LazyBroadcastCoroutine.openSubscription((r1 'this' I:kotlinx.coroutines.channels.LazyBroadcastCoroutine\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x000b: r0 'subscription' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\lTYPE_VARS: [E]\lSIGNATURE: ()Lkotlinx\/coroutines\/channels\/ReceiveChannel\<TE;\>;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.BroadcastChannel.openSubscription():kotlinx.coroutines.channels.ReceiveChannel\<E\>]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

