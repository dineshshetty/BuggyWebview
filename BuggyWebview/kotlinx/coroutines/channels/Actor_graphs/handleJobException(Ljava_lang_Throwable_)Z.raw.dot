digraph "CFG forkotlinx.coroutines.channels.ActorCoroutine.handleJobException(Ljava\/lang\/Throwable;)Z" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext) = (r1 I:kotlinx.coroutines.channels.ActorCoroutine) type: VIRTUAL call: kotlinx.coroutines.channels.ActorCoroutine.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)] (LINE:143)\l0x0004: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext), (r2 I:java.lang.Throwable A[D('exception' java.lang.Throwable)]) type: STATIC call: kotlinx.coroutines.CoroutineExceptionHandlerKt.handleCoroutineException(kotlin.coroutines.CoroutineContext, java.lang.Throwable):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Throwable):void (m)]\l0x0007: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:144)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected boolean kotlinx.coroutines.channels.ActorCoroutine.handleJobException((r1 'this' I:kotlinx.coroutines.channels.ActorCoroutine\<E\> A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r2 'exception' Ljava\/lang\/Throwable;\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.JobSupport.handleJobException(java.lang.Throwable):boolean]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

