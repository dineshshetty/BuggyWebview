digraph "CFG forkotlinx.coroutines.channels.ChannelsKt__DeprecatedKt.filterNot(Lkotlinx\/coroutines\/channels\/ReceiveChannel;Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/jvm\/functions\/Function2;)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000}"];
Node_7 [shape=record,label="{7\:\ 0x000c|RETURN\l|return kotlinx.coroutines.channels.ChannelsKt.filter(r2, r3, new kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1(r4, null))\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlinx.coroutines.channels.ReceiveChannel kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt.filterNot((r2v0 '$this$filterNot' kotlinx.coroutines.channels.ReceiveChannel A[D('$this$filterNot' kotlinx.coroutines.channels.ReceiveChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'predicate' kotlin.jvm.functions.Function2 A[D('predicate' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>HIDDEN:Lkotlin\/DeprecationLevel;\}, message=Binary compatibility\}\}\}\lINLINE: 0x0008: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.ReceiveChannel A[D('$this$filterNot' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r3 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (wrap: kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1 : 0x0003: CONSTRUCTOR  \l  (r4 I:kotlin.jvm.functions.Function2 A[D('predicate' kotlin.jvm.functions.Function2)])\l  (null kotlin.coroutines.Continuation)\l call: kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1.\<init\>(kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation):void type: CONSTRUCTOR)\l type: STATIC call: kotlinx.coroutines.channels.ChannelsKt.filter(kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2):kotlinx.coroutines.channels.ReceiveChannel\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

