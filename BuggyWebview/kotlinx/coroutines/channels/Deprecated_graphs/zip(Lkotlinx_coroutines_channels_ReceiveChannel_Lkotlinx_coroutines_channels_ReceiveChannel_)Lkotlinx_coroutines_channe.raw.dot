digraph "CFG forkotlinx.coroutines.channels.ChannelsKt__DeprecatedKt.zip(Lkotlinx\/coroutines\/channels\/ReceiveChannel;Lkotlinx\/coroutines\/channels\/ReceiveChannel;)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1) =  kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1.INSTANCE kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1  (LINE:458)\l0x0002: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0003: CHECK_CAST (r4 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r4 I:??[OBJECT, ARRAY]) \l0x0005: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: CONST  (r5 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0007: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$zip' kotlinx.coroutines.channels.ReceiveChannel)]) \l0x0009: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('other' kotlinx.coroutines.channels.ReceiveChannel)]) \l0x000a: INVOKE  (r0 I:kotlinx.coroutines.channels.ReceiveChannel) = \l  (r1 I:kotlinx.coroutines.channels.ReceiveChannel)\l  (r2 I:kotlinx.coroutines.channels.ReceiveChannel)\l  (r3 I:kotlin.coroutines.CoroutineContext)\l  (r4 I:kotlin.jvm.functions.Function2)\l  (r5 I:int)\l  (r6 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.channels.ChannelsKt.zip$default(kotlinx.coroutines.channels.ReceiveChannel, kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, int, java.lang.Object):kotlinx.coroutines.channels.ReceiveChannel A[MD:(kotlinx.coroutines.channels.ReceiveChannel, kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, int, java.lang.Object):kotlinx.coroutines.channels.ReceiveChannel (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:kotlinx.coroutines.channels.ReceiveChannel) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlinx.coroutines.channels.ReceiveChannel kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt.zip((r7 I:kotlinx.coroutines.channels.ReceiveChannel A[D('$this$zip' kotlinx.coroutines.channels.ReceiveChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlinx.coroutines.channels.ReceiveChannel A[D('other' kotlinx.coroutines.channels.ReceiveChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>HIDDEN:Lkotlin\/DeprecationLevel;\}, message=Binary compatibility\}\}\}\lINLINE: 0x000a: INVOKE  \l  (r7 I:kotlinx.coroutines.channels.ReceiveChannel A[D('$this$zip' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r8 I:kotlinx.coroutines.channels.ReceiveChannel A[D('other' kotlinx.coroutines.channels.ReceiveChannel)])\l  (null kotlin.coroutines.CoroutineContext)\l  (wrap: kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1 : 0x0000: SGET   kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1.INSTANCE kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1)\l  (2 int)\l  (null java.lang.Object)\l type: STATIC call: kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt.zip$default(kotlinx.coroutines.channels.ReceiveChannel, kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, int, java.lang.Object):kotlinx.coroutines.channels.ReceiveChannel\lDebug Info:\l  \-1 \-0x000e: r7 '$this$zip' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l  \-1 \-0x000e: r8 'other' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

