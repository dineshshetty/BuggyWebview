digraph "CFG forkotlinx.coroutines.channels.ChannelsKt__DeprecatedKt.requireNoNulls(Lkotlinx\/coroutines\/channels\/ReceiveChannel;)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1) =  kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1  (LINE:453)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1)\l  (r3 I:kotlinx.coroutines.channels.ReceiveChannel A[D('$this$requireNoNulls' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r1 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1.\<init\>(kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.channels.ReceiveChannel\<? extends E\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1\>):void (m)]\l0x0006: CHECK_CAST (r0 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r0 I:??[OBJECT, ARRAY]) \l0x0008: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0009: INVOKE  (r0 I:kotlinx.coroutines.channels.ReceiveChannel) = \l  (r3 I:kotlinx.coroutines.channels.ReceiveChannel A[D('$this$requireNoNulls' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r1 I:kotlin.coroutines.CoroutineContext)\l  (r0 I:kotlin.jvm.functions.Function2)\l  (r2 I:int)\l  (r1 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.channels.ChannelsKt.map$default(kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, int, java.lang.Object):kotlinx.coroutines.channels.ReceiveChannel A[MD:(kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, int, java.lang.Object):kotlinx.coroutines.channels.ReceiveChannel (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|RETURN\l|0x000d: RETURN  (r0 I:kotlinx.coroutines.channels.ReceiveChannel) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlinx.coroutines.channels.ReceiveChannel kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt.requireNoNulls((r3 I:kotlinx.coroutines.channels.ReceiveChannel A[D('$this$requireNoNulls' kotlinx.coroutines.channels.ReceiveChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>HIDDEN:Lkotlin\/DeprecationLevel;\}, message=Left for binary compatibility\}\}\}\lINLINE: 0x0009: INVOKE  \l  (r3 I:kotlinx.coroutines.channels.ReceiveChannel A[D('$this$requireNoNulls' kotlinx.coroutines.channels.ReceiveChannel)])\l  (null kotlin.coroutines.CoroutineContext)\l  (wrap: kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1 : 0x0003: CONSTRUCTOR  \l  (r3 I:kotlinx.coroutines.channels.ReceiveChannel A[D('$this$requireNoNulls' kotlinx.coroutines.channels.ReceiveChannel)])\l  (null kotlin.coroutines.Continuation)\l call: kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1.\<init\>(kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.Continuation):void type: CONSTRUCTOR)\l  (1 int)\l  (null java.lang.Object)\l type: STATIC call: kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt.map$default(kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, int, java.lang.Object):kotlinx.coroutines.channels.ReceiveChannel\lDebug Info:\l  \-1 \-0x000d: r3 '$this$requireNoNulls' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

