digraph "CFG forkotlinx.coroutines.channels.ChannelsKt__DeprecatedKt.filter(Lkotlinx\/coroutines\/channels\/ReceiveChannel;Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/jvm\/functions\/Function2;)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlin.jvm.functions.Function1 r5 = kotlinx.coroutines.channels.ChannelsKt.consumes(r9)\lkotlinx.coroutines.channels.ReceiveChannel r0 = kotlinx.coroutines.channels.Produce.produce(kotlinx.coroutines.GlobalScope.INSTANCE, (r12 & 1) != 0 ? kotlin.coroutines.EmptyCoroutineContext.INSTANCE : r10, (r12 & 2) != 0 ? 0 : 0, (r12 & 4) != 0 ? kotlinx.coroutines.CoroutineStart.DEFAULT : null, (r12 & 8) != 0 ? null : r5, new kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1(r9, r11, null))\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|RETURN\l|return r0\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.channels.ReceiveChannel\<E\> kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt.filter((r9v0 kotlinx.coroutines.channels.ReceiveChannel\<? extends E\> A[D('$this$filter' kotlinx.coroutines.channels.ReceiveChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 kotlin.jvm.functions.Function2\<? super E, ? super kotlin.coroutines.Continuation\<? super java.lang.Boolean\>, ? extends java.lang.Object\> A[D('predicate' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: \<E:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/channels\/ReceiveChannel\<+TE;\>;Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/jvm\/functions\/Function2\<\-TE;\-Lkotlin\/coroutines\/Continuation\<\-Ljava\/lang\/Boolean;\>;+Ljava\/lang\/Object;\>;)Lkotlinx\/coroutines\/channels\/ReceiveChannel\<TE;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

