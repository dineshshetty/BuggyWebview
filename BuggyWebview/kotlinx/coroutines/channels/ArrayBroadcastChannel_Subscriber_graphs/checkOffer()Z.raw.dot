digraph "CFG forkotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.checkOffer()Z" {
Node_58 [shape=record,label="{58\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_60 [shape=record,label="{60\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:244)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:245)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0002|LOOP_START\lLOOP:0: B:61:0x0002\-\>B:113:0x0002\l|0x0002: INVOKE  (r2 I:boolean) = (r9 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) type: DIRECT call: kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.needsToCheckOfferWithoutLock():boolean A[MD:():boolean (m)] (LINE:247)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0006|0x0006: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:104:0x007d \l}"];
Node_63 [shape=record,label="{63\:\ 0x0008|0x0008: IGET  (r2 I:java.util.concurrent.locks.ReentrantLock) = (r9 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.subLock java.util.concurrent.locks.ReentrantLock  (LINE:250)\l0x000a: INVOKE  (r2 I:boolean) = (r2 I:java.util.concurrent.locks.ReentrantLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantLock.tryLock():boolean A[MD:():boolean (c)]\l}"];
Node_64 [shape=record,label="{64\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x0012 \l}"];
Node_66 [shape=record,label="{66\:\ 0x0012|0x0012: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_103 [shape=record,label="{103\:\ 0x0015|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_67 [shape=record,label="{67\:\ 0x0015|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|0x0015: INVOKE  (r4 I:java.lang.Object) = (r9 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) type: DIRECT call: kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.peekUnderLock():java.lang.Object A[Catch: all \-\> 0x0076, MD:():java.lang.Object (m), TRY_ENTER] (LINE:254)\l0x0019: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) = (r4 I:??[OBJECT, ARRAY]) \l0x001b: SGET  (r4 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x0076, TRY_LEAVE] (LINE:256)\l}"];
Node_68 [shape=record,label="{68\:\ 0x001d|0x001d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x0025 \l}"];
Node_70 [shape=record,label="{70\:\ 0x0025|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|0x0025: INSTANCE_OF  (r4 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) kotlinx.coroutines.channels.Closed A[Catch: all \-\> 0x0076, TRY_ENTER] (LINE:257)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0027|0x0027: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x0034 \l}"];
Node_75 [shape=record,label="{75\:\ 0x0034|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|0x0034: INVOKE  (r4 I:kotlinx.coroutines.channels.ReceiveOrClosed) = (r9 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.takeFirstReceiveOrPeekClosed():kotlinx.coroutines.channels.ReceiveOrClosed A[Catch: all \-\> 0x0076, MD:():kotlinx.coroutines.channels.ReceiveOrClosed\<E\> (m), TRY_ENTER] (LINE:263)\l}"];
Node_76 [shape=record,label="{76\:\ 0x0038|0x0038: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:78:0x003b \l}"];
Node_78 [shape=record,label="{78\:\ 0x003b|TryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|0x003b: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('receive' kotlinx.coroutines.channels.ReceiveOrClosed)]) = (r4 I:??[OBJECT, ARRAY])  (LINE:263)\l0x003d: INSTANCE_OF  (r4 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('receive' kotlinx.coroutines.channels.ReceiveOrClosed)]) kotlinx.coroutines.channels.Closed A[Catch: all \-\> 0x0076]\l}"];
Node_79 [shape=record,label="{79\:\ 0x003f|0x003f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x0042 \l}"];
Node_81 [shape=record,label="{81\:\ 0x0042|TryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|0x0042: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:265)\l0x0043: INVOKE  (r4 I:kotlinx.coroutines.internal.Symbol) = \l  (r2 I:kotlinx.coroutines.channels.ReceiveOrClosed A[D('receive' kotlinx.coroutines.channels.ReceiveOrClosed)])\l  (r3 I:java.lang.Object A[D('result' java.lang.Object)])\l  (r4 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)\l type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.tryResumeReceive(java.lang.Object, kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x0076, MD:(E, kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol (m)]\l}"];
Node_82 [shape=record,label="{82\:\ 0x0047|0x0047: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:105:0x004a \l}"];
Node_105 [shape=record,label="{105\:\ 0x004a|SYNTHETIC\l}"];
Node_84 [shape=record,label="{84\:\ 0x004a|TryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|0x004a: INVOKE  (r5 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[Catch: all \-\> 0x0076, MD:():boolean (m)] (LINE:266)\l}"];
Node_85 [shape=record,label="{85\:\ 0x004e|0x004e: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:94:0x0061 \l}"];
Node_86 [shape=record,label="{86\:\ 0x0050|TryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|0x0050: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:387)\l0x0051: SGET  (r6 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x0076] (LINE:266)\l}"];
Node_87 [shape=record,label="{87\:\ 0x0053|0x0053: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('token' kotlinx.coroutines.internal.Symbol)]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x0057 \l}"];
Node_88 [shape=record,label="{88\:\ 0x0055|0x0055: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0056: GOTO  \-\> 0x0058 \l}"];
Node_90 [shape=record,label="{90\:\ 0x0058|0x0058: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:111:0x005b \l}"];
Node_91 [shape=record,label="{91\:\ 0x005a|0x005a: GOTO  \-\> 0x0061 \l}"];
Node_111 [shape=record,label="{111\:\ 0x005b|SYNTHETIC\l}"];
Node_92 [shape=record,label="{92\:\ 0x005b|TryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|0x005b: NEW_INSTANCE  (r5 I:java.lang.AssertionError) =  java.lang.AssertionError A[Catch: all \-\> 0x0076]\l0x005d: INVOKE  (r5 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[Catch: all \-\> 0x0076, MD:():void (c)]\l}"];
Node_93 [shape=record,label="{93\:\ 0x0060|TryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|0x0060: THROW  (r5 I:java.lang.Throwable) A[Catch: all \-\> 0x0076]\l}"];
Node_59 [shape=record,label="{59\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_89 [shape=record,label="{89\:\ 0x0057|0x0057: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_94 [shape=record,label="{94\:\ 0x0061|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|0x0061: INVOKE  (r5 I:long) = (r9 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.getSubHead():long A[Catch: all \-\> 0x0076, MD:():long (m)] (LINE:267)\l0x0065: CONST  (r7 I:??[long, double]) = (1 ??[long, double])  (LINE:268)\l0x0067: ARITH  (r7 I:long) = (r7 I:long) + (r5 I:long A[D('subHead' long)]) A[Catch: all \-\> 0x0076]\l0x0068: INVOKE  (r9 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber), (r7 I:long) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.setSubHead(long):void A[Catch: all \-\> 0x0076, MD:(long):void (m), TRY_LEAVE]\l}"];
Node_95 [shape=record,label="{95\:\ 0x006b|0x006b: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('updated' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:269)\l0x006c: IGET  (r4 I:java.util.concurrent.locks.ReentrantLock A[D('token' kotlinx.coroutines.internal.Symbol)]) = (r9 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.subLock java.util.concurrent.locks.ReentrantLock  (LINE:271)\l0x006e: INVOKE  (r4 I:java.util.concurrent.locks.ReentrantLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantLock.unlock():void A[MD:():void (c)]\l0x0072: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.ReceiveOrClosed A[D('receive' kotlinx.coroutines.channels.ReceiveOrClosed)])\l  (r3 I:java.lang.Object A[D('result' java.lang.Object)])\l type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.completeResumeReceive(java.lang.Object):void A[MD:(E):void (m)] (LINE:273)\l}"];
Node_114 [shape=record,label="{114\:\ 0x0002|SYNTHETIC\l}"];
Node_113 [shape=record,label="{113\:\ 0x0002|LOOP_END\lSYNTHETIC\lLOOP:0: B:61:0x0002\-\>B:113:0x0002\l}"];
Node_110 [shape=record,label="{110\:\ 0x0049|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x0049|0x0049: GOTO  \-\> 0x001f  (LINE:271)\l}"];
Node_69 [shape=record,label="{69\:\ 0x001f|0x001f: IGET  (r4 I:java.util.concurrent.locks.ReentrantLock) = (r9 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.subLock java.util.concurrent.locks.ReentrantLock  (LINE:271)\l0x0021: INVOKE  (r4 I:java.util.concurrent.locks.ReentrantLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantLock.unlock():void A[MD:():void (c)]\l}"];
Node_115 [shape=record,label="{115\:\ 0x0002|SYNTHETIC\l}"];
Node_109 [shape=record,label="{109\:\ 0x0041|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ 0x0041|0x0041: GOTO  \-\> 0x003a  (LINE:271)\l}"];
Node_77 [shape=record,label="{77\:\ 0x003a|0x003a: GOTO  \-\> 0x002e  (LINE:271)\l}"];
Node_74 [shape=record,label="{74\:\ 0x002e|0x002e: IGET  (r4 I:java.util.concurrent.locks.ReentrantLock) = (r9 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.subLock java.util.concurrent.locks.ReentrantLock  (LINE:271)\l0x0030: INVOKE  (r4 I:java.util.concurrent.locks.ReentrantLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantLock.unlock():void A[MD:():void (c)]\l}"];
Node_99 [shape=record,label="{99\:\ 0x007d|0x007d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('closed' kotlinx.coroutines.channels.Closed)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:101:0x0080  (LINE:276)\l}"];
Node_101 [shape=record,label="{101\:\ 0x0080|0x0080: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('closed' kotlinx.coroutines.channels.Closed)]) \l0x0081: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:387)\l0x0082: IGET  (r4 I:java.lang.Throwable) = (r2 I:kotlinx.coroutines.channels.Closed A[D('it' kotlinx.coroutines.channels.Closed)]) kotlinx.coroutines.channels.Closed.closeCause java.lang.Throwable  (LINE:276)\l0x0084: INVOKE  (r9 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber), (r4 I:java.lang.Throwable) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.close(java.lang.Throwable):boolean A[MD:(java.lang.Throwable):boolean (m)]\l}"];
Node_102 [shape=record,label="{102\:\ 0x0087|RETURN\l|0x0087: RETURN  (r0 I:boolean A[D('updated' boolean)])  (LINE:277)\l}"];
Node_108 [shape=record,label="{108\:\ 0x003a|SYNTHETIC\l}"];
Node_106 [shape=record,label="{106\:\ 0x0029|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x0029|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|0x0029: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)])  (LINE:258)\l0x002a: CHECK_CAST (r4 I:kotlinx.coroutines.channels.Closed) = (kotlinx.coroutines.channels.Closed) (r4 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0076, TRY_LEAVE]\l}"];
Node_73 [shape=record,label="{73\:\ 0x002c|0x002c: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('closed' kotlinx.coroutines.channels.Closed)]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_112 [shape=record,label="{112\:\ 0x001f|SYNTHETIC\l}"];
Node_96 [shape=record,label="{96\:\ 0x0076|ExcHandler: all \-\> 0x0076\l|0x0076: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0076] (LINE:270)\l}"];
Node_97 [shape=record,label="{97\:\ 0x0077|0x0077: IGET  (r5 I:java.util.concurrent.locks.ReentrantLock) = (r9 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.subLock java.util.concurrent.locks.ReentrantLock  (LINE:271)\l0x0079: INVOKE  (r5 I:java.util.concurrent.locks.ReentrantLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantLock.unlock():void A[MD:():void (c)]\l}"];
Node_98 [shape=record,label="{98\:\ 0x007c|0x007c: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_107 [shape=record,label="{107\:\ 0x007d|SYNTHETIC\l}"];
Node_104 [shape=record,label="{104\:\ 0x007d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final boolean kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.checkOffer((r9 'this' I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber\<E\> A[IMMUTABLE_TYPE, THIS]))  | BACK_EDGE: B:69:0x001f \-\> B:61:0x0002, CROSS_EDGE: B:99:0x007d \-\> B:102:0x0087, CROSS_EDGE: B:77:0x003a \-\> B:74:0x002e, CROSS_EDGE: B:80:0x0041 \-\> B:77:0x003a, CROSS_EDGE: B:83:0x0049 \-\> B:69:0x001f, BACK_EDGE: B:95:0x006b \-\> B:61:0x0002, CROSS_EDGE: B:93:0x0060 \-\> B:59:?, CROSS_EDGE: B:89:0x0057 \-\> B:90:0x0058, CROSS_EDGE: B:85:0x004e \-\> B:94:0x0061, CROSS_EDGE: B:98:0x007c \-\> B:59:?, CROSS_EDGE: B:64:0x000e \-\> B:99:0x007d, CROSS_EDGE: B:62:0x0006 \-\> B:99:0x007d\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lTYPE_VARS: [E]\lDebug Info:\l  0x0051\-0x0058: r5 '$i$a$\-assert\-ArrayBroadcastChannel$Subscriber$checkOffer$1' I\l  0x0001\-0x0060: r0 'updated' Z\l  0x0002\-0x0060: r1 'closed' Lkotlinx\/coroutines\/channels\/Closed;\l  0x0013\-0x0060: r2 'receive' Lkotlinx\/coroutines\/channels\/ReceiveOrClosed;\l  0x0014\-0x0060: r3 'result' Ljava\/lang\/Object;\l  0x004a\-0x006c: r4 'token' Lkotlinx\/coroutines\/internal\/Symbol;\l  0x0065\-0x006c: r5 'subHead' J\l  0x0061\-0x0075: r2 'receive' Lkotlinx\/coroutines\/channels\/ReceiveOrClosed;\l  0x0061\-0x0075: r3 'result' Ljava\/lang\/Object;\l  0x0076\-0x007d: r2 'receive' Lkotlinx\/coroutines\/channels\/ReceiveOrClosed;\l  0x0076\-0x007d: r3 'result' Ljava\/lang\/Object;\l  0x0081\-0x0087: r2 'it' Lkotlinx\/coroutines\/channels\/Closed;\l  0x0082\-0x0087: r3 '$i$a$\-also\-ArrayBroadcastChannel$Subscriber$checkOffer$2' I\l  0x0061\-0x0087: r0 'updated' Z\l  0x0061\-0x0087: r1 'closed' Lkotlinx\/coroutines\/channels\/Closed;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [271=7]\}\l}"];
MethodNode -> Node_58;Node_58 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_104;
Node_63 -> Node_64;
Node_64 -> Node_66;
Node_64 -> Node_107[style=dashed];
Node_66 -> Node_103;
Node_103 -> Node_67;
Node_103 -> Node_96;
Node_67 -> Node_68;
Node_68 -> Node_70;
Node_68 -> Node_112[style=dashed];
Node_70 -> Node_71;
Node_71 -> Node_75;
Node_71 -> Node_106[style=dashed];
Node_75 -> Node_76;
Node_76 -> Node_78;
Node_76 -> Node_108[style=dashed];
Node_78 -> Node_79;
Node_79 -> Node_81;
Node_79 -> Node_109[style=dashed];
Node_81 -> Node_82;
Node_82 -> Node_105;
Node_82 -> Node_110[style=dashed];
Node_105 -> Node_84;
Node_84 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_94;
Node_86 -> Node_87;
Node_87 -> Node_88[style=dashed];
Node_87 -> Node_89;
Node_88 -> Node_90;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_111;
Node_91 -> Node_94;
Node_111 -> Node_92;
Node_92 -> Node_93;
Node_93 -> Node_59;
Node_89 -> Node_90;
Node_94 -> Node_95;
Node_95 -> Node_114;
Node_114 -> Node_113;
Node_113 -> Node_61;
Node_110 -> Node_83;
Node_83 -> Node_69;
Node_69 -> Node_115;
Node_115 -> Node_113;
Node_109 -> Node_80;
Node_80 -> Node_77;
Node_77 -> Node_74;
Node_74 -> Node_99;
Node_99 -> Node_101;
Node_99 -> Node_102[style=dashed];
Node_101 -> Node_102;
Node_102 -> Node_59;
Node_108 -> Node_77;
Node_106 -> Node_72;
Node_72 -> Node_73;
Node_73 -> Node_74;
Node_112 -> Node_69;
Node_96 -> Node_97;
Node_97 -> Node_98;
Node_98 -> Node_59;
Node_107 -> Node_99;
Node_104 -> Node_99;
}

