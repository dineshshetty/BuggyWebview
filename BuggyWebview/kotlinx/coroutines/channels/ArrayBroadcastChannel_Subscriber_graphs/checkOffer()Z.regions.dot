digraph "CFG forkotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.checkOffer()Z" {
subgraph cluster_Region_1637042214 {
label = "R(4:1|(1:(2:8|(1:(2:(1:49)(2:12|(2:16|(3:(1:(1:(1:28)))|31|32)(0)))|1))))|(1:44)|45)";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x0000|boolean r0 = false\lkotlinx.coroutines.channels.Closed r1 = null\l}"];
subgraph cluster_LoopRegion_1210333666 {
label = "LOOP:0: (1:(2:8|(1:(2:(1:49)(2:12|(2:16|(3:(1:(1:(1:28)))|31|32)(0)))|1))))";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x0006|if (needsToCheckOfferWithoutLock() != false) goto L4\l}"];
Node_64 [shape=record,label="{64\:\ 0x000e|ADDED_TO_REGION\l|if (r9.subLock.tryLock() != false) goto L6\l}"];
subgraph cluster_Region_406769735 {
label = "R(1:(2:8|(1:(2:(1:49)(2:12|(2:16|(3:(1:(1:(1:28)))|31|32)(0)))|1))))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1373969520 {
label = "Try: R(2:8|(1:(2:(1:49)(2:12|(2:16|(3:(1:(1:(1:28)))|31|32)(0)))|1))) finally: R(3:51|52|53)";
node [shape=record,color=blue];
subgraph cluster_Region_2068762129 {
label = "R(2:8|(1:(2:(1:49)(2:12|(2:16|(3:(1:(1:(1:28)))|31|32)(0)))|1)))";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ 0x0015|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|java.lang.Object E r4 = (E) peekUnderLock()\l}"];
subgraph cluster_Region_1996654622 {
label = "R(1:(2:(1:49)(2:12|(2:16|(3:(1:(1:(1:28)))|31|32)(0)))|1))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_744009365 {
label = "IF [B:68:0x001d] THEN: R(2:(1:49)(2:12|(2:16|(3:(1:(1:(1:28)))|31|32)(0)))|1) ELSE: null";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x001d|if (r4 != kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED) goto L10\l}"];
subgraph cluster_Region_503333941 {
label = "R(2:(1:49)(2:12|(2:16|(3:(1:(1:(1:28)))|31|32)(0)))|1)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1727964188 {
label = "IF [B:71:0x0027] THEN: R(1:49) ELSE: R(2:12|(2:16|(3:(1:(1:(1:28)))|31|32)(0)))";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x0027|if ((r4 instanceof kotlinx.coroutines.channels.Closed) == true) goto L47\l}"];
subgraph cluster_Region_1249097283 {
label = "R(1:49)";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x002c|r1 = (kotlinx.coroutines.channels.Closed) r4     \/\/ Catch: java.lang.Throwable \-\> L76\l}"];
}
subgraph cluster_Region_393713366 {
label = "R(2:12|(2:16|(3:(1:(1:(1:28)))|31|32)(0)))";
node [shape=record,color=blue];
Node_75 [shape=record,label="{75\:\ 0x0034|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|kotlinx.coroutines.channels.ReceiveOrClosed kotlinx.coroutines.channels.ReceiveOrClosed r4 = takeFirstReceiveOrPeekClosed()     \/\/ Catch: java.lang.Throwable \-\> L76\l}"];
subgraph cluster_IfRegion_2117250731 {
label = "IF [B:76:0x0038, B:79:0x003f] THEN: R(2:16|(3:(1:(1:(1:28)))|31|32)(0)) ELSE: null";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x0038|if (r4 != null) goto L14\l}"];
Node_79 [shape=record,label="{79\:\ 0x003f|ADDED_TO_REGION\l|if ((r4 instanceof kotlinx.coroutines.channels.Closed) == false) goto L16\l}"];
subgraph cluster_Region_440729033 {
label = "R(2:16|(3:(1:(1:(1:28)))|31|32)(0))";
node [shape=record,color=blue];
Node_81 [shape=record,label="{81\:\ 0x0042|TryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|kotlinx.coroutines.internal.Symbol kotlinx.coroutines.internal.Symbol r4 = r4.tryResumeReceive(r4, null)     \/\/ Catch: java.lang.Throwable \-\> L76\l}"];
subgraph cluster_IfRegion_1845439285 {
label = "IF [B:82:0x0047] THEN: R(3:(1:(1:(1:28)))|31|32) ELSE: R(0)";
node [shape=record,color=blue];
Node_82 [shape=record,label="{82\:\ 0x0047|if (r4 != null) goto L18\l}"];
subgraph cluster_Region_237757918 {
label = "R(3:(1:(1:(1:28)))|31|32)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1892811610 {
label = "IF [B:85:0x004e] THEN: R(1:(1:(1:28))) ELSE: null";
node [shape=record,color=blue];
Node_85 [shape=record,label="{85\:\ 0x004e|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() != false) goto L21\l}"];
subgraph cluster_Region_153978796 {
label = "R(1:(1:(1:28)))";
node [shape=record,color=blue];
subgraph cluster_Region_1779219695 {
label = "R(1:(1:28))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1357392374 {
label = "IF [B:90:0x0058] THEN: R(1:28) ELSE: null";
node [shape=record,color=blue];
Node_90 [shape=record,label="{90\:\ 0x0058|PHI: r6 \l  PHI: (r6v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r4 == kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN) == false) goto L26\l}"];
subgraph cluster_Region_1991343223 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_93 [shape=record,label="{93\:\ 0x0060|TryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|throw new java.lang.AssertionError()     \/\/ Catch: java.lang.Throwable \-\> L76\l}"];
}
}
}
}
}
Node_94 [shape=record,label="{94\:\ 0x0061|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l|long long r5 = getSubHead()     \/\/ Catch: java.lang.Throwable \-\> L76\lsetSubHead(1 + r5)     \/\/ Catch: java.lang.Throwable \-\> L76\l}"];
Node_95 [shape=record,label="{95\:\ 0x006b|r0 = true\lr9.subLock.unlock()\lr4.completeResumeReceive(r4)\l}"];
}
subgraph cluster_Region_370768168 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
Node_InsnContainer_1936497824 [shape=record,label="{|break\l}"];
}
}
}
}
subgraph cluster_Region_2089332198 {
label = "R(3:51|52|53) | ExcHandler: all \-\> 0x0076\l";
node [shape=record,color=blue];
Node_96 [shape=record,label="{96\:\ 0x0076|ExcHandler: all \-\> 0x0076\l}"];
Node_97 [shape=record,label="{97\:\ 0x0077|FINALLY_INSNS\l|r9.subLock.unlock()\l}"];
Node_98 [shape=record,label="{98\:\ 0x007c|throw r4\l}"];
}
}
}
}
subgraph cluster_IfRegion_1362328561 {
label = "IF [B:99:0x007d] THEN: R(1:44) ELSE: null";
node [shape=record,color=blue];
Node_99 [shape=record,label="{99\:\ 0x007d|EDGE_INSN: B:74:0x002e\-\>B:99:0x007d ?: BREAK  \lPHI: r1 \l  PHI: (r1v1 'closed' kotlinx.coroutines.channels.Closed) = (r1v0 'closed' kotlinx.coroutines.channels.Closed), (r1v0 'closed' kotlinx.coroutines.channels.Closed), (r1v3 'closed' kotlinx.coroutines.channels.Closed) binds: [B:104:0x007d, B:107:0x007d, B:74:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != null) goto L44\l}"];
subgraph cluster_Region_714787721 {
label = "R(1:44)";
node [shape=record,color=blue];
Node_101 [shape=record,label="{101\:\ 0x0080|kotlinx.coroutines.channels.Closed r2 = r1\lclose(r2.closeCause)\l}"];
}
}
Node_102 [shape=record,label="{102\:\ 0x0087|RETURN\l|return r0\l}"];
}
subgraph cluster_Region_2089332198 {
label = "R(3:51|52|53) | ExcHandler: all \-\> 0x0076\l";
node [shape=record,color=blue];
Node_96 [shape=record,label="{96\:\ 0x0076|ExcHandler: all \-\> 0x0076\l}"];
Node_97 [shape=record,label="{97\:\ 0x0077|FINALLY_INSNS\l|r9.subLock.unlock()\l}"];
Node_98 [shape=record,label="{98\:\ 0x007c|throw r4\l}"];
}
Node_58 [shape=record,color=red,label="{58\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x0002|LOOP_START\lLOOP:0: B:61:0x0002\-\>B:113:0x0002\lPHI: r0 \l  PHI: (r0v1 'updated' boolean) = (r0v0 'updated' boolean), (r0v2 'updated' boolean) binds: [B:60:0x0000, B:113:0x0002] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0008}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0012}"];
Node_103 [shape=record,color=red,label="{103\:\ 0x0015|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_70 [shape=record,color=red,label="{70\:\ 0x0025|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l}"];
Node_78 [shape=record,color=red,label="{78\:\ 0x003b|TryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l}"];
Node_105 [shape=record,color=red,label="{105\:\ 0x004a|SYNTHETIC\l}"];
Node_84 [shape=record,color=red,label="{84\:\ 0x004a|TryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l}"];
Node_86 [shape=record,color=red,label="{86\:\ 0x0050|TryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l}"];
Node_87 [shape=record,color=red,label="{87\:\ 0x0053}"];
Node_88 [shape=record,color=red,label="{88\:\ 0x0055}"];
Node_91 [shape=record,color=red,label="{91\:\ 0x005a}"];
Node_111 [shape=record,color=red,label="{111\:\ 0x005b|SYNTHETIC\l}"];
Node_92 [shape=record,color=red,label="{92\:\ 0x005b|TryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l}"];
Node_59 [shape=record,color=red,label="{59\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x0057}"];
Node_114 [shape=record,color=red,label="{114\:\ 0x0002|SYNTHETIC\l}"];
Node_113 [shape=record,color=red,label="{113\:\ 0x0002|LOOP_END\lSYNTHETIC\lLOOP:0: B:61:0x0002\-\>B:113:0x0002\lPHI: r0 \l  PHI: (r0v2 'updated' boolean) = (r0v1 'updated' boolean), (r0v3 'updated' boolean) binds: [B:115:0x0002, B:114:0x0002] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_110 [shape=record,color=red,label="{110\:\ 0x0049|SYNTHETIC\l}"];
Node_83 [shape=record,color=red,label="{83\:\ 0x0049}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x001f|DONT_GENERATE\l|java.util.concurrent.locks.ReentrantLock r4 = r9.subLock\lr4.unlock()\l}"];
Node_115 [shape=record,color=red,label="{115\:\ 0x0002|SYNTHETIC\l}"];
Node_109 [shape=record,color=red,label="{109\:\ 0x0041|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_80 [shape=record,color=red,label="{80\:\ 0x0041|ADDED_TO_REGION\l}"];
Node_77 [shape=record,color=red,label="{77\:\ 0x003a}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x002e|DONT_GENERATE\lEDGE_INSN: B:74:0x002e\-\>B:99:0x007d ?: BREAK  \lPHI: r1 \l  PHI: (r1v3 'closed' kotlinx.coroutines.channels.Closed) = (r1v2 'closed' kotlinx.coroutines.channels.Closed), (r1v0 'closed' kotlinx.coroutines.channels.Closed) binds: [B:73:0x002c, B:77:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|java.util.concurrent.locks.ReentrantLock r4 = r9.subLock\lr4.unlock()\l}"];
Node_108 [shape=record,color=red,label="{108\:\ 0x003a|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_106 [shape=record,color=red,label="{106\:\ 0x0029|SYNTHETIC\l}"];
Node_72 [shape=record,color=red,label="{72\:\ 0x0029|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lCatch: all \-\> 0x0076\l}"];
Node_112 [shape=record,color=red,label="{112\:\ 0x001f|SYNTHETIC\l}"];
Node_107 [shape=record,color=red,label="{107\:\ 0x007d|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_104 [shape=record,color=red,label="{104\:\ 0x007d|SYNTHETIC\lADDED_TO_REGION\l}"];
MethodNode[shape=record,label="{public final boolean kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.checkOffer((r9v0 'this' kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber\<E\> A[IMMUTABLE_TYPE, THIS]))  | BACK_EDGE: B:69:0x001f \-\> B:61:0x0002, CROSS_EDGE: B:99:0x007d \-\> B:102:0x0087, CROSS_EDGE: B:77:0x003a \-\> B:74:0x002e, CROSS_EDGE: B:80:0x0041 \-\> B:77:0x003a, CROSS_EDGE: B:83:0x0049 \-\> B:69:0x001f, BACK_EDGE: B:95:0x006b \-\> B:61:0x0002, CROSS_EDGE: B:93:0x0060 \-\> B:59:?, CROSS_EDGE: B:89:0x0057 \-\> B:90:0x0058, CROSS_EDGE: B:85:0x004e \-\> B:94:0x0061, CROSS_EDGE: B:98:0x007c \-\> B:59:?, CROSS_EDGE: B:64:0x000e \-\> B:99:0x007d, CROSS_EDGE: B:62:0x0006 \-\> B:99:0x007d\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0076, blocks: (B:67:0x0015, B:70:0x0025, B:72:0x0029, B:75:0x0034, B:78:0x003b, B:81:0x0042, B:84:0x004a, B:86:0x0050, B:92:0x005b, B:93:0x0060, B:94:0x0061), top: B:103:0x0015 \}\lTYPE_VARS: [E]\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [271=7]\l \-\> Another duplicated slice has different insns count: \{[IGET, INVOKE, INVOKE]\}, finally: \{[IGET, INVOKE] complete\}\}\l}"];
MethodNode -> Node_58;Node_60 -> Node_61;
Node_62 -> Node_63;
Node_62 -> Node_104[style=dashed];
Node_64 -> Node_66;
Node_64 -> Node_107[style=dashed];
Node_67 -> Node_68;
Node_68 -> Node_70;
Node_68 -> Node_112[style=dashed];
Node_71 -> Node_75[style=dashed];
Node_71 -> Node_106;
Node_73 -> Node_74;
Node_75 -> Node_76;
Node_76 -> Node_78;
Node_76 -> Node_108[style=dashed];
Node_79 -> Node_81;
Node_79 -> Node_109[style=dashed];
Node_81 -> Node_82;
Node_82 -> Node_105;
Node_82 -> Node_110[style=dashed];
Node_85 -> Node_86;
Node_85 -> Node_94[style=dashed];
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_111;
Node_93 -> Node_59;
Node_94 -> Node_95;
Node_95 -> Node_114;
Node_96 -> Node_97;
Node_97 -> Node_98;
Node_98 -> Node_59;
Node_99 -> Node_101;
Node_99 -> Node_102[style=dashed];
Node_101 -> Node_102;
Node_102 -> Node_59;
Node_96 -> Node_97;
Node_97 -> Node_98;
Node_98 -> Node_59;
Node_58 -> Node_60;
Node_61 -> Node_62;
Node_63 -> Node_64;
Node_66 -> Node_103;
Node_103 -> Node_67;
Node_103 -> Node_96;
Node_70 -> Node_71;
Node_78 -> Node_79;
Node_105 -> Node_84;
Node_84 -> Node_85;
Node_86 -> Node_87;
Node_87 -> Node_88;
Node_87 -> Node_89;
Node_88 -> Node_90;
Node_91 -> Node_94;
Node_111 -> Node_92;
Node_92 -> Node_93;
Node_89 -> Node_90;
Node_114 -> Node_113;
Node_113 -> Node_61;
Node_110 -> Node_83;
Node_83 -> Node_69;
Node_69 -> Node_115;
Node_115 -> Node_113;
Node_109 -> Node_80;
Node_80 -> Node_77;
Node_77 -> Node_74;
Node_74 -> Node_99;
Node_108 -> Node_77;
Node_106 -> Node_72;
Node_72 -> Node_73;
Node_112 -> Node_69;
Node_107 -> Node_99;
Node_104 -> Node_99;
}

