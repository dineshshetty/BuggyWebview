digraph "CFG forkotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.peekUnderLock()Ljava\/lang\/Object;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|long r0 = getSubHead()\lkotlinx.coroutines.channels.Closed r2 = r7.broadcastChannel.getClosedForReceive()\llong r3 = r7.broadcastChannel.getTail()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|if ((r0 \> r3 ? 1 : (r0 == r3 ? 0 : \-1)) \< 0) goto L11\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|if (r2 != null) goto L10\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|kotlinx.coroutines.channels.Closed r5 = getClosedForReceive()\l}"];
Node_22 [shape=record,label="{22\:\ 0x001c|PHI: r5 \l  PHI: (r5v4 kotlinx.coroutines.channels.Closed) = (r5v3 kotlinx.coroutines.channels.Closed), (r5v6 kotlinx.coroutines.channels.Closed) binds: [B:21:0x001b, B:20:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 != null) goto L9\l}"];
Node_23 [shape=record,label="{23\:\ 0x001e}"];
Node_24 [shape=record,label="{24\:\ 0x0020|RETURN\lORIG_RETURN\l|return kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return r5\l}"];
Node_21 [shape=record,label="{21\:\ 0x001b|r5 = r2\l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|java.lang.Object r5 = r7.broadcastChannel.elementAt(r0)\lkotlinx.coroutines.channels.Closed r6 = getClosedForReceive()\l}"];
Node_26 [shape=record,label="{26\:\ 0x002b|if (r6 == null) goto L14\l}"];
Node_27 [shape=record,label="{27\:\ 0x002d|RETURN\l|return r6\l}"];
Node_28 [shape=record,label="{28\:\ 0x002e|RETURN\l|return r5\l}"];
MethodNode[shape=record,label="{private final java.lang.Object kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.peekUnderLock((r7v0 'this' kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x001c \-\> B:24:0x0020, CROSS_EDGE: B:21:0x001b \-\> B:22:0x001c, CROSS_EDGE: B:27:0x002d \-\> B:16:?, CROSS_EDGE: B:28:0x002e \-\> B:16:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_29;
Node_23 -> Node_24;
Node_24 -> Node_16;
Node_29 -> Node_16;
Node_21 -> Node_22;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_16;
Node_28 -> Node_16;
}

