digraph "CFG forkotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.close(Ljava\/lang\/Throwable;)Z" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r7 I:kotlinx.coroutines.channels.AbstractChannel), (r8 I:java.lang.Throwable A[D('cause' java.lang.Throwable)]) type: SUPER call: kotlinx.coroutines.channels.AbstractChannel.close(java.lang.Throwable):boolean A[MD:(java.lang.Throwable):boolean (m)] (LINE:230)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('wasClosed' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x002c  (LINE:231)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|0x0006: IGET  (r1 I:kotlinx.coroutines.channels.ArrayBroadcastChannel\<E\>) = (r7 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.broadcastChannel kotlinx.coroutines.channels.ArrayBroadcastChannel  (LINE:232)\l0x0008: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0009: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: INVOKE  \l  (r1 I:kotlinx.coroutines.channels.ArrayBroadcastChannel)\l  (r3 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber)\l  (r7 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber)\l  (r2 I:int)\l  (r3 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.channels.ArrayBroadcastChannel.updateHead$default(kotlinx.coroutines.channels.ArrayBroadcastChannel, kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber, kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber, int, java.lang.Object):void A[MD:(kotlinx.coroutines.channels.ArrayBroadcastChannel, kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber, kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber, int, java.lang.Object):void (m)]\l0x000d: IGET  (r1 I:java.util.concurrent.locks.ReentrantLock) = (r7 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.subLock java.util.concurrent.locks.ReentrantLock  (LINE:233)\l0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$withLock$iv' java.util.concurrent.locks.ReentrantLock)])  (LINE:386)\l0x0011: CHECK_CAST (r3 I:java.util.concurrent.locks.Lock) = (java.util.concurrent.locks.Lock) (r3 I:??[OBJECT, ARRAY]) \l0x0013: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l0x0016: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0027, blocks: (B:18:0x0017), top: B:24:0x0017 \}\lCatch: all \-\> 0x0027\l|0x0017: IGET  (r5 I:kotlinx.coroutines.channels.ArrayBroadcastChannel\<E\>) = (r7 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.broadcastChannel kotlinx.coroutines.channels.ArrayBroadcastChannel A[Catch: all \-\> 0x0027, TRY_ENTER] (LINE:234)\l0x0019: INVOKE  (r5 I:long) = (r5 I:kotlinx.coroutines.channels.ArrayBroadcastChannel) type: STATIC call: kotlinx.coroutines.channels.ArrayBroadcastChannel.access$getTail(kotlinx.coroutines.channels.ArrayBroadcastChannel):long A[Catch: all \-\> 0x0027, MD:(kotlinx.coroutines.channels.ArrayBroadcastChannel):long (m)]\l0x001d: INVOKE  (r7 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber), (r5 I:long) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.setSubHead(long):void A[Catch: all \-\> 0x0027, MD:(long):void (m)]\l0x0021: SGET  (r4 I:kotlin.Unit A[D('$i$a$\-withLock\-ArrayBroadcastChannel$Subscriber$close$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x0027, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0023|0x0023: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_20 [shape=record,label="{20\:\ 0x0027|ExcHandler: all \-\> 0x0027\l|0x0027: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0027] (LINE:235)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0028|0x0028: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x002b|0x002b: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x002c|RETURN\l|0x002c: RETURN  (r0 I:boolean A[D('wasClosed' boolean)])  (LINE:237)\l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.close((r7 'this' I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber\<E\> A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x002b \-\> B:14:?, CROSS_EDGE: B:24:0x0017 \-\> B:20:0x0027, CROSS_EDGE: B:16:0x0004 \-\> B:23:0x002c\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0027, blocks: (B:18:0x0017), top: B:24:0x0017 \}\lTYPE_VARS: [E]\lDebug Info:\l  0x0017\-0x0021: r4 '$i$a$\-withLock\-ArrayBroadcastChannel$Subscriber$close$1' I\l  0x000f\-0x002c: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0010\-0x002c: r2 '$i$f$withLock' I\l  0x0004\-0x002c: r0 'wasClosed' Z\l  \-1 \-0x002c: r8 'cause' Ljava\/lang\/Throwable;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.SendChannel.close(java.lang.Throwable):boolean]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_24;
Node_24 -> Node_18;
Node_24 -> Node_20;
Node_18 -> Node_19;
Node_18 -> Node_25;
Node_19 -> Node_23;
Node_25 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_14;
Node_23 -> Node_14;
}

