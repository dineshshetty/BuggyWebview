digraph "CFG forkotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.pollSelectInternal(Lkotlinx\/coroutines\/selects\/SelectInstance;)Ljava\/lang\/Object;" {
Node_31 [shape=record,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:311)\l0x0001: IGET  (r1 I:java.util.concurrent.locks.ReentrantLock) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.subLock java.util.concurrent.locks.ReentrantLock  (LINE:312)\l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$withLock$iv' java.util.concurrent.locks.ReentrantLock)])  (LINE:389)\l0x0005: CHECK_CAST (r3 I:java.util.concurrent.locks.Lock) = (java.util.concurrent.locks.Lock) (r3 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l0x000a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_61 [shape=record,label="{61\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_34 [shape=record,label="{34\:\ 0x000b|TRY_ENTER\lTryCatch #0 \{all \-\> 0x005a, blocks: (B:34:0x000b, B:37:0x0015, B:40:0x001a, B:42:0x0020, B:43:0x0026), top: B:61:0x000b \}\lCatch: all \-\> 0x005a\l|0x000b: INVOKE  (r5 I:java.lang.Object) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) type: DIRECT call: kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.peekUnderLock():java.lang.Object A[Catch: all \-\> 0x005a, MD:():java.lang.Object (m), TRY_ENTER] (LINE:313)\l0x0010: INSTANCE_OF  (r6 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) kotlinx.coroutines.channels.Closed A[Catch: all \-\> 0x005a] (LINE:315)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0012|0x0012: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0015 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0014|0x0014: GOTO  \-\> 0x0031 \l}"];
Node_45 [shape=record,label="{45\:\ 0x0031|0x0032: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l0x0036: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('$this$withLock$iv' java.util.concurrent.locks.ReentrantLock)]) = (r5 I:??[OBJECT, ARRAY])  (LINE:312)\l0x0037: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) kotlinx.coroutines.channels.Closed  (LINE:332)\l0x0039: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x003a|0x003a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0040 \l}"];
Node_47 [shape=record,label="{47\:\ 0x003c|0x003c: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) \l0x003d: CHECK_CAST (r2 I:kotlinx.coroutines.channels.Closed) = (kotlinx.coroutines.channels.Closed) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0041|0x0041: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0044 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0044|0x0044: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:387)\l0x0045: IGET  (r5 I:java.lang.Throwable) = (r2 I:kotlinx.coroutines.channels.Closed A[D('it' kotlinx.coroutines.channels.Closed)]) kotlinx.coroutines.channels.Closed.closeCause java.lang.Throwable  (LINE:332)\l0x0047: INVOKE  (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber), (r5 I:java.lang.Throwable) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.close(java.lang.Throwable):boolean A[MD:(java.lang.Throwable):boolean (m)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x004a|0x004a: INVOKE  (r2 I:boolean) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.checkOffer():boolean A[MD:():boolean (m)] (LINE:335)\l}"];
Node_53 [shape=record,label="{53\:\ 0x004e|0x004e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0051 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0050|0x0050: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('updated' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:336)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0051|0x0051: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('updated' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0059  (LINE:338)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0053|0x0053: IGET  (r2 I:kotlinx.coroutines.channels.ArrayBroadcastChannel\<E\>) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.broadcastChannel kotlinx.coroutines.channels.ArrayBroadcastChannel  (LINE:339)\l0x0055: CONST  (r4 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0056: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.ArrayBroadcastChannel)\l  (r3 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber)\l  (r3 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber)\l  (r4 I:int)\l  (r3 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.channels.ArrayBroadcastChannel.updateHead$default(kotlinx.coroutines.channels.ArrayBroadcastChannel, kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber, kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber, int, java.lang.Object):void A[MD:(kotlinx.coroutines.channels.ArrayBroadcastChannel, kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber, kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber, int, java.lang.Object):void (m)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0059|RETURN\l|0x0059: RETURN  (r1 I:java.lang.Object A[D('result' java.lang.Object)])  (LINE:340)\l}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_48 [shape=record,label="{48\:\ 0x0040|0x0040: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0015|TryCatch #0 \{all \-\> 0x005a, blocks: (B:34:0x000b, B:37:0x0015, B:40:0x001a, B:42:0x0020, B:43:0x0026), top: B:61:0x000b \}\lCatch: all \-\> 0x005a\l|0x0015: SGET  (r6 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x005a] (LINE:316)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0017|0x0017: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x001a \l}"];
Node_39 [shape=record,label="{39\:\ 0x0019|0x0019: GOTO  \-\> 0x0031 \l}"];
Node_40 [shape=record,label="{40\:\ 0x001a|TryCatch #0 \{all \-\> 0x005a, blocks: (B:34:0x000b, B:37:0x0015, B:40:0x001a, B:42:0x0020, B:43:0x0026), top: B:61:0x000b \}\lCatch: all \-\> 0x005a\l|0x001a: INVOKE  (r6 I:boolean) = (r11 I:kotlinx.coroutines.selects.SelectInstance A[D('select' kotlinx.coroutines.selects.SelectInstance)]) type: INTERFACE call: kotlinx.coroutines.selects.SelectInstance.trySelect():boolean A[Catch: all \-\> 0x005a, MD:():boolean (m)] (LINE:319)\l}"];
Node_41 [shape=record,label="{41\:\ 0x001e|0x001e: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0026 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0020|TryCatch #0 \{all \-\> 0x005a, blocks: (B:34:0x000b, B:37:0x0015, B:40:0x001a, B:42:0x0020, B:43:0x0026), top: B:61:0x000b \}\lCatch: all \-\> 0x005a\l|0x0020: INVOKE  (r6 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.getALREADY_SELECTED():java.lang.Object A[Catch: all \-\> 0x005a, MD:():java.lang.Object (m)] (LINE:320)\l0x0024: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) = (r6 I:??[OBJECT, ARRAY]) \l0x0025: GOTO  \-\> 0x0031 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0026|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x005a, blocks: (B:34:0x000b, B:37:0x0015, B:40:0x001a, B:42:0x0020, B:43:0x0026), top: B:61:0x000b \}\lCatch: all \-\> 0x005a\l|0x0026: INVOKE  (r6 I:long) = (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.getSubHead():long A[Catch: all \-\> 0x005a, MD:():long (m)] (LINE:323)\l0x002a: CONST  (r8 I:??[long, double]) = (1 ??[long, double])  (LINE:324)\l0x002c: ARITH  (r8 I:long) = (r8 I:long) + (r6 I:long A[D('subHead' long)]) A[Catch: all \-\> 0x005a]\l0x002d: INVOKE  (r10 I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber), (r8 I:long) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.setSubHead(long):void A[Catch: all \-\> 0x005a, MD:(long):void (m), TRY_LEAVE]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0030|0x0030: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('updated' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:325)\l}"];
Node_58 [shape=record,label="{58\:\ 0x005a|ExcHandler: all \-\> 0x005a\l|0x005a: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x005a] (LINE:329)\l}"];
Node_59 [shape=record,label="{59\:\ 0x005b|0x005b: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_60 [shape=record,label="{60\:\ 0x005e|0x005e: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected java.lang.Object kotlinx.coroutines.channels.ArrayBroadcastChannel.Subscriber.pollSelectInternal((r10 'this' I:kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber\<E\> A[IMMUTABLE_TYPE, THIS]), (r11 I:kotlinx.coroutines.selects.SelectInstance\<?\> A[D('select' kotlinx.coroutines.selects.SelectInstance), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:55:0x0051 \-\> B:57:0x0059, CROSS_EDGE: B:53:0x004e \-\> B:55:0x0051, CROSS_EDGE: B:49:0x0041 \-\> B:52:0x004a, CROSS_EDGE: B:48:0x0040 \-\> B:49:0x0041, CROSS_EDGE: B:39:0x0019 \-\> B:45:0x0031, CROSS_EDGE: B:42:0x0020 \-\> B:45:0x0031, CROSS_EDGE: B:44:0x0030 \-\> B:45:0x0031, CROSS_EDGE: B:60:0x005e \-\> B:32:?\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x005a, blocks: (B:34:0x000b, B:37:0x0015, B:40:0x001a, B:42:0x0020, B:43:0x0026), top: B:61:0x000b \}\lTYPE_VARS: [E]\lSIGNATURE: (Lkotlinx\/coroutines\/selects\/SelectInstance\<*\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x002a\-0x0031: r6 'subHead' J\l  0x000b\-0x0032: r4 '$i$a$\-withLock\-ArrayBroadcastChannel$Subscriber$pollSelectInternal$result$1' I\l  0x000f\-0x0032: r5 'result' Ljava\/lang\/Object;\l  0x0003\-0x0036: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0004\-0x0036: r2 '$i$f$withLock' I\l  0x0044\-0x004a: r2 'it' Lkotlinx\/coroutines\/channels\/Closed;\l  0x0045\-0x004a: r4 '$i$a$\-also\-ArrayBroadcastChannel$Subscriber$pollSelectInternal$1' I\l  0x0037\-0x005a: r1 'result' Ljava\/lang\/Object;\l  0x0001\-0x005e: r0 'updated' Z\l  0x005a\-0x005e: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x005a\-0x005e: r2 '$i$f$withLock' I\l  \-1 \-0x005e: r11 'select' Lkotlinx\/coroutines\/selects\/SelectInstance;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractChannel.pollSelectInternal(kotlinx.coroutines.selects.SelectInstance\<?\>):java.lang.Object]\l}"];
MethodNode -> Node_31;Node_31 -> Node_33;
Node_33 -> Node_61;
Node_61 -> Node_34;
Node_61 -> Node_58;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_49;
Node_49 -> Node_51;
Node_49 -> Node_52[style=dashed];
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_57;
Node_57 -> Node_32;
Node_48 -> Node_49;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_45;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_45;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_32;
}

