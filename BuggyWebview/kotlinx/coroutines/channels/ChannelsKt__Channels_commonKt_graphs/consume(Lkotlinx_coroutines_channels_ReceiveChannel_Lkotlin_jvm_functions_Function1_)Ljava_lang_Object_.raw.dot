digraph "CFG forkotlinx.coroutines.channels.ChannelsKt__Channels_commonKt.consume(Lkotlinx\/coroutines\/channels\/ReceiveChannel;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:83)\l0x0004: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:85)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0005|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0013, blocks: (B:19:0x0005), top: B:28:0x0005 \}\lCatch: all \-\> 0x0013\l|0x0005: INVOKE  (r3 I:java.lang.Object) = \l  (r5 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)])\l  (r4 I:java.lang.Object A[D('$this$consume' kotlinx.coroutines.channels.ReceiveChannel)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0013, MD:(P1):R (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x000c: INVOKE  \l  (r4 I:kotlinx.coroutines.channels.ReceiveChannel A[D('$this$consume' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r1 I:java.lang.Throwable A[D('cause' java.lang.Throwable)])\l type: STATIC call: kotlinx.coroutines.channels.ChannelsKt.cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel, java.lang.Throwable):void A[MD:(kotlinx.coroutines.channels.ReceiveChannel\<?\>, java.lang.Throwable):void (m)] (LINE:90)\l0x000f: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0012|RETURN\l|0x0012: RETURN  (r3 I:R)  (LINE:85)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x0013|ExcHandler: all \-\> 0x0013\l|0x0013: MOVE_EXCEPTION  (r3 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0013] (LINE:86)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|0x0014: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Throwable)]) = (r3 I:??[OBJECT, ARRAY] A[D('e' java.lang.Throwable)])  (LINE:87)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x0017, blocks: (B:24:0x0016), top: B:30:0x0016 \}\lCatch: all \-\> 0x0017\l|0x0016: THROW  (r3 I:java.lang.Throwable A[D('e' java.lang.Throwable)]) A[Catch: all \-\> 0x0017, TRY_ENTER, TRY_LEAVE]\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|ExcHandler: all \-\> 0x0017\l|0x0017: MOVE_EXCEPTION  (r3 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0017] (LINE:89)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0018|0x0018: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x001b: INVOKE  \l  (r4 I:kotlinx.coroutines.channels.ReceiveChannel A[D('$this$consume' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r1 I:java.lang.Throwable A[D('cause' java.lang.Throwable)])\l type: STATIC call: kotlinx.coroutines.channels.ChannelsKt.cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel, java.lang.Throwable):void A[MD:(kotlinx.coroutines.channels.ReceiveChannel\<?\>, java.lang.Throwable):void (m)] (LINE:90)\l0x001e: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|0x0021: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final R kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt.consume((r4 I:kotlinx.coroutines.channels.ReceiveChannel\<? extends E\> A[D('$this$consume' kotlinx.coroutines.channels.ReceiveChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function1\<? super kotlinx.coroutines.channels.ReceiveChannel\<? extends E\>, ? extends R\> A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0016 \-\> B:17:?, CROSS_EDGE: B:27:0x0021 \-\> B:17:?, CROSS_EDGE: B:30:0x0016 \-\> B:25:0x0017, CROSS_EDGE: B:28:0x0005 \-\> B:22:0x0013\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0013, blocks: (B:19:0x0005), top: B:28:0x0005 \}, TryCatch #1 \{all \-\> 0x0017, blocks: (B:24:0x0016), top: B:30:0x0016 \}\lTYPE_VARS: [R, E]\lSIGNATURE: \<E:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/channels\/ReceiveChannel\<+TE;\>;Lkotlin\/jvm\/functions\/Function1\<\-Lkotlinx\/coroutines\/channels\/ReceiveChannel\<+TE;\>;+TR;\>;)TR;\lDebug Info:\l  0x0001\-0x0016: r0 '$i$f$consume' I\l  0x0003\-0x0016: r1 'cause' Ljava\/lang\/Throwable;\l  \-1 \-0x0016: r4 '$this$consume' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l  \-1 \-0x0016: r5 'block' Lkotlin\/jvm\/functions\/Function1;\l  0x0014\-0x0017: r3 'e' Ljava\/lang\/Throwable;\l  0x0017\-0x0021: r0 '$i$f$consume' I\l  0x0017\-0x0021: r1 'cause' Ljava\/lang\/Throwable;\l  0x0017\-0x0021: r4 '$this$consume' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l  0x0017\-0x0021: r5 'block' Lkotlin\/jvm\/functions\/Function1;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_28;
Node_28 -> Node_19;
Node_28 -> Node_22;
Node_19 -> Node_20;
Node_19 -> Node_29;
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_29 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_30;
Node_30 -> Node_24;
Node_30 -> Node_25;
Node_24 -> Node_17;
Node_24 -> Node_31;
Node_31 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_17;
}

