digraph "CFG forkotlinx.coroutines.channels.ChannelsKt__Channels_commonKt.consumeEach$$forInline(Lkotlinx\/coroutines\/channels\/BroadcastChannel;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('$this$consumeEach' kotlinx.coroutines.channels.BroadcastChannel)])  (LINE:128)\l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: INVOKE  (r3 I:kotlinx.coroutines.channels.ReceiveChannel) = \l  (r1 I:kotlinx.coroutines.channels.BroadcastChannel A[D('$this$consume$iv' kotlinx.coroutines.channels.BroadcastChannel)])\l type: INTERFACE call: kotlinx.coroutines.channels.BroadcastChannel.openSubscription():kotlinx.coroutines.channels.ReceiveChannel A[MD:():kotlinx.coroutines.channels.ReceiveChannel\<E\> (m)] (LINE:166)\l0x0008: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('channel$iv' kotlinx.coroutines.channels.ReceiveChannel)])  (LINE:168)\l0x0009: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:129)\l0x000b: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x000c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x000c|TRY_ENTER\lTryCatch #0 \{all \-\> 0x003f, blocks: (B:19:0x000c, B:20:0x0010, B:22:0x0027, B:23:0x002f), top: B:29:0x000c \}\lCatch: all \-\> 0x003f\l|0x000c: INVOKE  (r8 I:kotlinx.coroutines.channels.ChannelIterator) = \l  (r4 I:kotlinx.coroutines.channels.ReceiveChannel A[D('$this$consumeEach_u24lambda_u2d4' kotlinx.coroutines.channels.ReceiveChannel)])\l type: INTERFACE call: kotlinx.coroutines.channels.ReceiveChannel.iterator():kotlinx.coroutines.channels.ChannelIterator A[Catch: all \-\> 0x003f, MD:():kotlinx.coroutines.channels.ChannelIterator\<E\> (m), TRY_ENTER]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|LOOP_START\lTryCatch #0 \{all \-\> 0x003f, blocks: (B:19:0x000c, B:20:0x0010, B:22:0x0027, B:23:0x002f), top: B:29:0x000c \}\lLOOP:0: B:20:0x0010\-\>B:22:0x0027\lCatch: all \-\> 0x003f\l|0x0010: CONST  (r9 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0011: INVOKE  (r9 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[Catch: all \-\> 0x003f, MD:(int):void (m)]\l0x0014: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: INVOKE  (r9 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[Catch: all \-\> 0x003f, MD:(int):void (m)]\l0x0018: INVOKE  (r9 I:java.lang.Object) = (r8 I:kotlinx.coroutines.channels.ChannelIterator), (r6 I:kotlin.coroutines.Continuation) type: INTERFACE call: kotlinx.coroutines.channels.ChannelIterator.hasNext(kotlin.coroutines.Continuation):java.lang.Object A[Catch: all \-\> 0x003f, MD:(kotlin.coroutines.Continuation\<? super java.lang.Boolean\>):java.lang.Object (m)]\l0x001c: INVOKE  (r7 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[Catch: all \-\> 0x003f, MD:(int):void (m)]\l0x001f: CHECK_CAST (r9 I:java.lang.Boolean) = (java.lang.Boolean) (r9 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x003f]\l0x0021: INVOKE  (r9 I:boolean) = (r9 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[Catch: all \-\> 0x003f, MD:():boolean (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0025|0x0025: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x002f \l}"];
Node_22 [shape=record,label="{22\:\ 0x0027|LOOP_END\lTryCatch #0 \{all \-\> 0x003f, blocks: (B:19:0x000c, B:20:0x0010, B:22:0x0027, B:23:0x002f), top: B:29:0x000c \}\lLOOP:0: B:20:0x0010\-\>B:22:0x0027\lCatch: all \-\> 0x003f\l|0x0027: INVOKE  (r9 I:java.lang.Object) = (r8 I:kotlinx.coroutines.channels.ChannelIterator) type: INTERFACE call: kotlinx.coroutines.channels.ChannelIterator.next():java.lang.Object A[Catch: all \-\> 0x003f, MD:():E (m)]\l0x002b: INVOKE  \l  (r11 I:kotlin.jvm.functions.Function1 A[D('action' kotlin.jvm.functions.Function1)])\l  (r9 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x003f, MD:(P1):R (m)]\l0x002e: GOTO  \-\> 0x0010 \l}"];
Node_31 [shape=record,label="{31\:\ 0x002f|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x002f|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x003f, blocks: (B:19:0x000c, B:20:0x0010, B:22:0x0027, B:23:0x002f), top: B:29:0x000c \}\lCatch: all \-\> 0x003f\l|0x0030: SGET  (r4 I:kotlin.Unit A[D('$this$consumeEach_u24lambda_u2d4' kotlinx.coroutines.channels.ReceiveChannel)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x003f, TRY_LEAVE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0032|0x0032: INVOKE  (r7 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0035: INVOKE  \l  (r3 I:kotlinx.coroutines.channels.ReceiveChannel A[D('channel$iv' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r6 I:java.util.concurrent.CancellationException)\l  (r7 I:int)\l  (r6 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.channels.ReceiveChannel.DefaultImpls.cancel$default(kotlinx.coroutines.channels.ReceiveChannel, java.util.concurrent.CancellationException, int, java.lang.Object):void A[MD:(kotlinx.coroutines.channels.ReceiveChannel, java.util.concurrent.CancellationException, int, java.lang.Object):void (m)] (LINE:170)\l0x0038: INVOKE  (r7 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l0x003c: SGET  (r1 I:kotlin.Unit A[D('$this$consume$iv' kotlinx.coroutines.channels.BroadcastChannel)]) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:170)\l}"];
Node_25 [shape=record,label="{25\:\ 0x003e|RETURN\l|0x003e: RETURN  (r1 I:java.lang.Object)  (LINE:130)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_26 [shape=record,label="{26\:\ 0x003f|ExcHandler: all \-\> 0x003f\l|0x003f: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x003f] (LINE:169)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0040|0x0040: INVOKE  (r7 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0043: INVOKE  \l  (r3 I:kotlinx.coroutines.channels.ReceiveChannel A[D('channel$iv' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r6 I:java.util.concurrent.CancellationException)\l  (r7 I:int)\l  (r6 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.channels.ReceiveChannel.DefaultImpls.cancel$default(kotlinx.coroutines.channels.ReceiveChannel, java.util.concurrent.CancellationException, int, java.lang.Object):void A[MD:(kotlinx.coroutines.channels.ReceiveChannel, java.util.concurrent.CancellationException, int, java.lang.Object):void (m)] (LINE:170)\l0x0046: INVOKE  (r7 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0049|0x0049: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static final java.lang.Object kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt.consumeEach$$forInline((r10 I:kotlinx.coroutines.channels.BroadcastChannel\<E\> A[D('$this$consumeEach' kotlinx.coroutines.channels.BroadcastChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlin.jvm.functions.Function1\<? super E, kotlin.Unit\> A[D('action' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lBACK_EDGE: B:22:0x0027 \-\> B:20:0x0010, CROSS_EDGE: B:28:0x0049 \-\> B:17:?, CROSS_EDGE: B:29:0x000c \-\> B:26:0x003f\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x003f, blocks: (B:19:0x000c, B:20:0x0010, B:22:0x0027, B:23:0x002f), top: B:29:0x000c \}\lTYPE_VARS: [E]\lSIGNATURE: \<E:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/channels\/BroadcastChannel\<TE;\>;Lkotlin\/jvm\/functions\/Function1\<\-TE;Lkotlin\/Unit;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x002b\-0x002f: r9 'element' Ljava\/lang\/Object;\l  0x0009\-0x0030: r4 '$this$consumeEach_u24lambda_u2d4' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l  0x000a\-0x0030: r5 '$i$a$\-consume\-ChannelsKt__Channels_commonKt$consumeEach$4' I\l  0x0002\-0x003c: r1 '$this$consume$iv' Lkotlinx\/coroutines\/channels\/BroadcastChannel;\l  0x0003\-0x003c: r2 '$i$f$consume' I\l  0x0007\-0x003c: r3 'channel$iv' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l  0x0001\-0x0049: r0 '$i$f$consumeEach' I\l  0x003f\-0x0049: r1 '$this$consume$iv' Lkotlinx\/coroutines\/channels\/BroadcastChannel;\l  0x003f\-0x0049: r2 '$i$f$consume' I\l  0x003f\-0x0049: r3 'channel$iv' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l  \-1 \-0x0049: r10 '$this$consumeEach' Lkotlinx\/coroutines\/channels\/BroadcastChannel;\l  \-1 \-0x0049: r11 'action' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x0049: r12 '$completion' Lkotlin\/coroutines\/Continuation;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_29;
Node_29 -> Node_19;
Node_29 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_31;
Node_22 -> Node_20;
Node_31 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_30;
Node_24 -> Node_25;
Node_25 -> Node_17;
Node_30 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_17;
}

