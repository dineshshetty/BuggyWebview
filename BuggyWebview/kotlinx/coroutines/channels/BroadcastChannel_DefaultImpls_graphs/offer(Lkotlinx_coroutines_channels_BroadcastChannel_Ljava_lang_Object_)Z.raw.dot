digraph "CFG forkotlinx.coroutines.channels.BroadcastChannel.DefaultImpls.offer(Lkotlinx\/coroutines\/channels\/BroadcastChannel;Ljava\/lang\/Object;)Z" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.channels.BroadcastChannel)])  (LINE:27)\l0x0001: CHECK_CAST (r0 I:kotlinx.coroutines.channels.SendChannel) = (kotlinx.coroutines.channels.SendChannel) (r0 I:??[OBJECT, ARRAY]) \l0x0003: INVOKE  (r0 I:boolean) = (r0 I:kotlinx.coroutines.channels.SendChannel), (r2 I:java.lang.Object A[D('element' java.lang.Object)]) type: STATIC call: kotlinx.coroutines.channels.SendChannel.DefaultImpls.offer(kotlinx.coroutines.channels.SendChannel, java.lang.Object):boolean A[MD:\<E\>:(kotlinx.coroutines.channels.SendChannel\<? super E\>, E):boolean (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:boolean)  (LINE:50)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static boolean kotlinx.coroutines.channels.BroadcastChannel.DefaultImpls.offer((r1 I:kotlinx.coroutines.channels.BroadcastChannel\<E\> A[D('this' kotlinx.coroutines.channels.BroadcastChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>ERROR:Lkotlin\/DeprecationLevel;\}, message=Deprecated in the favour of 'trySend' method, replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=trySend(element).isSuccess, imports=[[]]\}\}\}\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r1 'this' Lkotlinx\/coroutines\/channels\/BroadcastChannel;\l  \-1 \-0x0007: r2 'element' Ljava\/lang\/Object;\lTYPE_VARS: [E]\lSIGNATURE: \<E:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/channels\/BroadcastChannel\<TE;\>;TE;)Z\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

