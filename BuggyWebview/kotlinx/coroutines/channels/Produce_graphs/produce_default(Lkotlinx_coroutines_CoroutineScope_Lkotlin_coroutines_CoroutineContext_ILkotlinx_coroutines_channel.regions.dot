digraph "CFG forkotlinx.coroutines.channels.ProduceKt.produce$default(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/channels\/BufferOverflow;Lkotlinx\/coroutines\/CoroutineStart;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function2;ILjava\/lang\/Object;)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
subgraph cluster_Region_1384851150 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x0033|RETURN\l|return produce(r7, (r14 & 1) != 0 ? kotlin.coroutines.EmptyCoroutineContext.INSTANCE : r8, (r14 & 2) != 0 ? 0 : r9, (r14 & 4) != 0 ? kotlinx.coroutines.channels.BufferOverflow.SUSPEND : r10, (r14 & 8) != 0 ? kotlinx.coroutines.CoroutineStart.DEFAULT : r11, (r14 & 16) != 0 ? null : r12, r13)\l}"];
}
Node_48 [shape=record,color=red,label="{48\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0000}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0002}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0004}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x000b|PHI: r1 \l  PHI: (r1v1 kotlin.coroutines.CoroutineContext A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x000d}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x000f}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x0013|PHI: r2 \l  PHI: (r2v1 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x0015}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x0017}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x001c|PHI: r3 \l  PHI: (r3v1 kotlinx.coroutines.channels.BufferOverflow A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x001e}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0020}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0025|PHI: r4 \l  PHI: (r4v1 kotlinx.coroutines.CoroutineStart A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x0027}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x0029}"];
Node_70 [shape=record,color=red,label="{70\:\ 0x002d|PHI: r5 \l  PHI: (r5v1 kotlin.jvm.functions.Function1 A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_49 [shape=record,color=red,label="{49\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x002c}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x0024}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x001b}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x0012}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x000a}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ kotlinx.coroutines.channels.ReceiveChannel kotlinx.coroutines.channels.ProduceKt.produce$default((r7v0 kotlinx.coroutines.CoroutineScope A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlin.coroutines.CoroutineContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 kotlinx.coroutines.channels.BufferOverflow A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 kotlinx.coroutines.CoroutineStart A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 kotlin.jvm.functions.Function1 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 kotlin.jvm.functions.Function2 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:69:0x002c \-\> B:70:0x002d, CROSS_EDGE: B:65:0x0024 \-\> B:66:0x0025, CROSS_EDGE: B:61:0x001b \-\> B:62:0x001c, CROSS_EDGE: B:57:0x0012 \-\> B:58:0x0013, CROSS_EDGE: B:53:0x000a \-\> B:54:0x000b\lINLINE: 0x002f: INVOKE  \l  (r7 I:kotlinx.coroutines.CoroutineScope)\l  (wrap: kotlin.coroutines.CoroutineContext : ?: TERNARYnull = ((wrap: int : 0x0000: ARITH  (r15v1 int A[REMOVE]) = (r14v0 int) & (1 int)) != (0 int)) ? (wrap: kotlin.coroutines.EmptyCoroutineContext : 0x0008: SGET   kotlin.coroutines.EmptyCoroutineContext.INSTANCE kotlin.coroutines.EmptyCoroutineContext) : (r8 I:??[OBJECT, ARRAY]))\l  (wrap: int : ?: TERNARYnull = ((wrap: int : 0x000b: ARITH  (r8v1 int A[REMOVE]) = (r14v0 int) & (2 int)) != (0 int)) ? (0 int) : (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]))\l  (wrap: kotlinx.coroutines.channels.BufferOverflow : ?: TERNARYnull = ((wrap: int : 0x0013: ARITH  (r8v2 int A[REMOVE]) = (r14v0 int) & (4 int)) != (0 int)) ? (wrap: kotlinx.coroutines.channels.BufferOverflow : 0x0019: SGET   kotlinx.coroutines.channels.BufferOverflow.SUSPEND kotlinx.coroutines.channels.BufferOverflow) : (r10 I:??[OBJECT, ARRAY]))\l  (wrap: kotlinx.coroutines.CoroutineStart : ?: TERNARYnull = ((wrap: int : 0x001c: ARITH  (r8v3 int A[REMOVE]) = (r14v0 int) & (8 int)) != (0 int)) ? (wrap: kotlinx.coroutines.CoroutineStart : 0x0022: SGET   kotlinx.coroutines.CoroutineStart.DEFAULT kotlinx.coroutines.CoroutineStart) : (r11 I:??[OBJECT, ARRAY]))\l  (wrap: kotlin.jvm.functions.Function1 : ?: TERNARYnull = ((wrap: int : 0x0025: ARITH  (r8v4 int A[REMOVE]) = (r14v0 int) & (16 int)) != (0 int)) ? (null kotlin.jvm.functions.Function1) : (r12 I:??[OBJECT, ARRAY]))\l  (r13 I:kotlin.jvm.functions.Function2)\l type: STATIC call: kotlinx.coroutines.channels.ProduceKt.produce(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.channels.BufferOverflow, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2):kotlinx.coroutines.channels.ReceiveChannel\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [120=6]\}\l}"];
MethodNode -> Node_48;Node_71 -> Node_49;
Node_48 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_51 -> Node_53;
Node_52 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_55 -> Node_57;
Node_56 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_59 -> Node_61;
Node_60 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_63 -> Node_65;
Node_64 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_67 -> Node_69;
Node_68 -> Node_70;
Node_70 -> Node_71;
Node_69 -> Node_70;
Node_65 -> Node_66;
Node_61 -> Node_62;
Node_57 -> Node_58;
Node_53 -> Node_54;
}

