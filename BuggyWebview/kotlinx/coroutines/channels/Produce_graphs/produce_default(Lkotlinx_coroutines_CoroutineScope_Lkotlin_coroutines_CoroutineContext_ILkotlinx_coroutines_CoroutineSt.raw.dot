digraph "CFG forkotlinx.coroutines.channels.ProduceKt.produce$default(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/CoroutineStart;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function2;ILjava\/lang\/Object;)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_40 [shape=record,label="{40\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0000|0x0000: ARITH  (r13 I:??[int, boolean]) = (r12 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:110)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0002|0x0002: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x000a \l}"];
Node_44 [shape=record,label="{44\:\ 0x0004|0x0004: SGET  (r7 I:kotlin.coroutines.EmptyCoroutineContext) =  kotlin.coroutines.EmptyCoroutineContext.INSTANCE kotlin.coroutines.EmptyCoroutineContext  (LINE:111)\l0x0006: CHECK_CAST (r7 I:kotlin.coroutines.CoroutineContext) = (kotlin.coroutines.CoroutineContext) (r7 I:??[OBJECT, ARRAY]) \l0x0008: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x000b|0x000b: ARITH  (r7 I:??[int, boolean]) = (r12 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x000d|0x000d: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0012 \l}"];
Node_48 [shape=record,label="{48\:\ 0x000f|0x000f: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:112)\l0x0010: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0013|0x0013: ARITH  (r7 I:??[int, boolean]) = (r12 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0015|0x0015: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x001b \l}"];
Node_52 [shape=record,label="{52\:\ 0x0017|0x0017: SGET  (r9 I:kotlinx.coroutines.CoroutineStart) =  kotlinx.coroutines.CoroutineStart.DEFAULT kotlinx.coroutines.CoroutineStart  (LINE:113)\l0x0019: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x001c|0x001c: ARITH  (r7 I:??[int, boolean]) = (r12 I:??[int, boolean, short, byte, char]) & (8 ??[int, float, short, byte, char]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x001e|0x001e: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0023 \l}"];
Node_56 [shape=record,label="{56\:\ 0x0020|0x0020: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:114)\l0x0021: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l}"];
Node_58 [shape=record,label="{58\:\ 0x0024|0x0024: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0025: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY]) \l0x0026: INVOKE  (r6 I:kotlinx.coroutines.channels.ReceiveChannel) = \l  (r0 I:kotlinx.coroutines.CoroutineScope)\l  (r1 I:kotlin.coroutines.CoroutineContext)\l  (r2 I:int)\l  (r3 I:kotlinx.coroutines.CoroutineStart)\l  (r4 I:kotlin.jvm.functions.Function1)\l  (r5 I:kotlin.jvm.functions.Function2)\l type: STATIC call: kotlinx.coroutines.channels.ProduceKt.produce(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2):kotlinx.coroutines.channels.ReceiveChannel A[MD:\<E\>:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\>, kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.channels.ProducerScope\<? super E\>, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>):kotlinx.coroutines.channels.ReceiveChannel\<E\> (m)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x002a|RETURN\l|0x002a: RETURN  (r6 I:kotlinx.coroutines.channels.ReceiveChannel) \l}"];
Node_41 [shape=record,label="{41\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_57 [shape=record,label="{57\:\ 0x0023|0x0023: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY])  (LINE:110)\l}"];
Node_53 [shape=record,label="{53\:\ 0x001b|0x001b: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY])  (LINE:110)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0012|0x0012: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:110)\l}"];
Node_45 [shape=record,label="{45\:\ 0x000a|0x000a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY])  (LINE:110)\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ kotlinx.coroutines.channels.ReceiveChannel kotlinx.coroutines.channels.ProduceKt.produce$default((r6 I:kotlinx.coroutines.CoroutineScope A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.coroutines.CoroutineContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlinx.coroutines.CoroutineStart A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function1 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlin.jvm.functions.Function2 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:57:0x0023 \-\> B:58:0x0024, CROSS_EDGE: B:53:0x001b \-\> B:54:0x001c, CROSS_EDGE: B:49:0x0012 \-\> B:50:0x0013, CROSS_EDGE: B:45:0x000a \-\> B:46:0x000b\lINLINE: 0x0026: INVOKE  \l  (r6 I:kotlinx.coroutines.CoroutineScope)\l  (wrap: kotlin.coroutines.CoroutineContext : ?: TERNARYnull = ((wrap: int : 0x0000: ARITH  (r13v1 int A[REMOVE]) = (r12v0 int) & (1 int)) != (0 int)) ? (wrap: kotlin.coroutines.EmptyCoroutineContext : 0x0008: SGET   kotlin.coroutines.EmptyCoroutineContext.INSTANCE kotlin.coroutines.EmptyCoroutineContext) : (r7 I:??[OBJECT, ARRAY]))\l  (wrap: int : ?: TERNARYnull = ((wrap: int : 0x000b: ARITH  (r7v1 int A[REMOVE]) = (r12v0 int) & (2 int)) != (0 int)) ? (0 int) : (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]))\l  (wrap: kotlinx.coroutines.CoroutineStart : ?: TERNARYnull = ((wrap: int : 0x0013: ARITH  (r7v2 int A[REMOVE]) = (r12v0 int) & (4 int)) != (0 int)) ? (wrap: kotlinx.coroutines.CoroutineStart : 0x0019: SGET   kotlinx.coroutines.CoroutineStart.DEFAULT kotlinx.coroutines.CoroutineStart) : (r9 I:??[OBJECT, ARRAY]))\l  (wrap: kotlin.jvm.functions.Function1 : ?: TERNARYnull = ((wrap: int : 0x001c: ARITH  (r7v3 int A[REMOVE]) = (r12v0 int) & (8 int)) != (0 int)) ? (null kotlin.jvm.functions.Function1) : (r10 I:??[OBJECT, ARRAY]))\l  (r11 I:kotlin.jvm.functions.Function2)\l type: STATIC call: kotlinx.coroutines.channels.ProduceKt.produce(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2):kotlinx.coroutines.channels.ReceiveChannel\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [110=5]\}\l}"];
MethodNode -> Node_40;Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_41;
Node_57 -> Node_58;
Node_53 -> Node_54;
Node_49 -> Node_50;
Node_45 -> Node_46;
}

