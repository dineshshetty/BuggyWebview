digraph "CFG forkotlinx.coroutines.channels.ProduceKt.produce(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/channels\/BufferOverflow;Lkotlinx\/coroutines\/CoroutineStart;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function2;)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:128)\l0x0001: CONST  (r1 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0002: INVOKE  (r0 I:kotlinx.coroutines.channels.Channel) = \l  (r6 I:int A[D('capacity' int)])\l  (r7 I:kotlinx.coroutines.channels.BufferOverflow A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow)])\l  (r0 I:kotlin.jvm.functions.Function1)\l  (r1 I:int)\l  (r0 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.channels.ChannelKt.Channel$default(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1, int, java.lang.Object):kotlinx.coroutines.channels.Channel A[MD:(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1, int, java.lang.Object):kotlinx.coroutines.channels.Channel (m)]\l0x0006: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext) = \l  (r4 I:kotlinx.coroutines.CoroutineScope A[D('$this$produce' kotlinx.coroutines.CoroutineScope)])\l  (r5 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l type: STATIC call: kotlinx.coroutines.CoroutineContextKt.newCoroutineContext(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext A[MD:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext (m)] (LINE:129)\l0x000a: NEW_INSTANCE  (r2 I:kotlinx.coroutines.channels.ProducerCoroutine) =  kotlinx.coroutines.channels.ProducerCoroutine  (LINE:130)\l0x000c: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.ProducerCoroutine)\l  (r1 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlinx.coroutines.channels.Channel A[D('channel' kotlinx.coroutines.channels.Channel)])\l type: DIRECT call: kotlinx.coroutines.channels.ProducerCoroutine.\<init\>(kotlin.coroutines.CoroutineContext, kotlinx.coroutines.channels.Channel):void A[MD:(kotlin.coroutines.CoroutineContext, kotlinx.coroutines.channels.Channel\<E\>):void (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|0x000f: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('onCompletion' kotlin.jvm.functions.Function1)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0014  (LINE:131)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|0x0011: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.ProducerCoroutine A[D('coroutine' kotlinx.coroutines.channels.ProducerCoroutine)])\l  (r9 I:kotlin.jvm.functions.Function1 A[D('onCompletion' kotlin.jvm.functions.Function1)])\l type: VIRTUAL call: kotlinx.coroutines.channels.ProducerCoroutine.invokeOnCompletion(kotlin.jvm.functions.Function1):kotlinx.coroutines.DisposableHandle A[MD:(kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\>):kotlinx.coroutines.DisposableHandle (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|0x0014: INVOKE  \l  (r2 I:kotlinx.coroutines.channels.ProducerCoroutine A[D('coroutine' kotlinx.coroutines.channels.ProducerCoroutine)])\l  (r8 I:kotlinx.coroutines.CoroutineStart A[D('start' kotlinx.coroutines.CoroutineStart)])\l  (r2 I:java.lang.Object A[D('coroutine' kotlinx.coroutines.channels.ProducerCoroutine)])\l  (r10 I:kotlin.jvm.functions.Function2 A[D('block' kotlin.jvm.functions.Function2)])\l type: VIRTUAL call: kotlinx.coroutines.channels.ProducerCoroutine.start(kotlinx.coroutines.CoroutineStart, java.lang.Object, kotlin.jvm.functions.Function2):void A[MD:\<R\>:(kotlinx.coroutines.CoroutineStart, R, kotlin.jvm.functions.Function2\<? super R, ? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\>):void (m)] (LINE:132)\l0x0017: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('coroutine' kotlinx.coroutines.channels.ProducerCoroutine)])  (LINE:133)\l0x0018: CHECK_CAST (r3 I:kotlinx.coroutines.channels.ReceiveChannel) = (kotlinx.coroutines.channels.ReceiveChannel) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|RETURN\l|0x001a: RETURN  (r3 I:kotlinx.coroutines.channels.ReceiveChannel\<E\>) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.channels.ReceiveChannel\<E\> kotlinx.coroutines.channels.ProduceKt.produce((r4 I:kotlinx.coroutines.CoroutineScope A[D('$this$produce' kotlinx.coroutines.CoroutineScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('capacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlinx.coroutines.channels.BufferOverflow A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlinx.coroutines.CoroutineStart A[D('start' kotlinx.coroutines.CoroutineStart), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\> A[D('onCompletion' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.channels.ProducerScope\<? super E\>, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\> A[D('block' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000f \-\> B:19:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x001a: r0 'channel' Lkotlinx\/coroutines\/channels\/Channel;\l  0x000a\-0x001a: r1 'newContext' Lkotlin\/coroutines\/CoroutineContext;\l  0x000f\-0x001a: r2 'coroutine' Lkotlinx\/coroutines\/channels\/ProducerCoroutine;\l  \-1 \-0x001a: r4 '$this$produce' Lkotlinx\/coroutines\/CoroutineScope;\l  \-1 \-0x001a: r5 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x001a: r6 'capacity' I\l  \-1 \-0x001a: r7 'onBufferOverflow' Lkotlinx\/coroutines\/channels\/BufferOverflow;\l  \-1 \-0x001a: r8 'start' Lkotlinx\/coroutines\/CoroutineStart;\l  \-1 \-0x001a: r9 'onCompletion' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x001a: r10 'block' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [E]\lSIGNATURE: \<E:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/channels\/BufferOverflow;Lkotlinx\/coroutines\/CoroutineStart;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Throwable;Lkotlin\/Unit;\>;Lkotlin\/jvm\/functions\/Function2\<\-Lkotlinx\/coroutines\/channels\/ProducerScope\<\-TE;\>;\-Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;+Ljava\/lang\/Object;\>;)Lkotlinx\/coroutines\/channels\/ReceiveChannel\<TE;\>;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_15;
}

