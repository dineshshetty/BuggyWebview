digraph "CFG forkotlinx.coroutines.channels.ProduceKt.produce$default(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/channels\/BufferOverflow;Lkotlinx\/coroutines\/CoroutineStart;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function2;ILjava\/lang\/Object;)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_48 [shape=record,label="{48\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_50 [shape=record,label="{50\:\ 0x0000|0x0000: ARITH  (r15 I:??[int, boolean]) = (r14 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:120)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0002|0x0002: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x000a \l}"];
Node_52 [shape=record,label="{52\:\ 0x0004|0x0004: SGET  (r8 I:kotlin.coroutines.EmptyCoroutineContext) =  kotlin.coroutines.EmptyCoroutineContext.INSTANCE kotlin.coroutines.EmptyCoroutineContext  (LINE:121)\l0x0006: CHECK_CAST (r8 I:kotlin.coroutines.CoroutineContext) = (kotlin.coroutines.CoroutineContext) (r8 I:??[OBJECT, ARRAY]) \l0x0008: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x000b|0x000b: ARITH  (r8 I:??[int, boolean]) = (r14 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x000d|0x000d: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0012 \l}"];
Node_56 [shape=record,label="{56\:\ 0x000f|0x000f: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:122)\l0x0010: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_58 [shape=record,label="{58\:\ 0x0013|0x0013: ARITH  (r8 I:??[int, boolean]) = (r14 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x0015|0x0015: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x001b \l}"];
Node_60 [shape=record,label="{60\:\ 0x0017|0x0017: SGET  (r10 I:kotlinx.coroutines.channels.BufferOverflow) =  kotlinx.coroutines.channels.BufferOverflow.SUSPEND kotlinx.coroutines.channels.BufferOverflow  (LINE:123)\l0x0019: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x001c|0x001c: ARITH  (r8 I:??[int, boolean]) = (r14 I:??[int, boolean, short, byte, char]) & (8 ??[int, float, short, byte, char]) \l}"];
Node_63 [shape=record,label="{63\:\ 0x001e|0x001e: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x0024 \l}"];
Node_64 [shape=record,label="{64\:\ 0x0020|0x0020: SGET  (r11 I:kotlinx.coroutines.CoroutineStart) =  kotlinx.coroutines.CoroutineStart.DEFAULT kotlinx.coroutines.CoroutineStart  (LINE:124)\l0x0022: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY]) \l}"];
Node_66 [shape=record,label="{66\:\ 0x0025|0x0025: ARITH  (r8 I:??[int, boolean]) = (r14 I:??[int, boolean, short, byte, char]) & (16 ??[int, float, short, byte, char]) \l}"];
Node_67 [shape=record,label="{67\:\ 0x0027|0x0027: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x002c \l}"];
Node_68 [shape=record,label="{68\:\ 0x0029|0x0029: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:125)\l0x002a: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY]) \l}"];
Node_70 [shape=record,label="{70\:\ 0x002d|0x002d: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x002e: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY]) \l0x002f: INVOKE  (r7 I:kotlinx.coroutines.channels.ReceiveChannel) = \l  (r0 I:kotlinx.coroutines.CoroutineScope)\l  (r1 I:kotlin.coroutines.CoroutineContext)\l  (r2 I:int)\l  (r3 I:kotlinx.coroutines.channels.BufferOverflow)\l  (r4 I:kotlinx.coroutines.CoroutineStart)\l  (r5 I:kotlin.jvm.functions.Function1)\l  (r6 I:kotlin.jvm.functions.Function2)\l type: STATIC call: kotlinx.coroutines.channels.ProduceKt.produce(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.channels.BufferOverflow, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2):kotlinx.coroutines.channels.ReceiveChannel A[MD:\<E\>:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.channels.BufferOverflow, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\>, kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.channels.ProducerScope\<? super E\>, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>):kotlinx.coroutines.channels.ReceiveChannel\<E\> (m)]\l}"];
Node_71 [shape=record,label="{71\:\ 0x0033|RETURN\l|0x0033: RETURN  (r7 I:kotlinx.coroutines.channels.ReceiveChannel) \l}"];
Node_49 [shape=record,label="{49\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_69 [shape=record,label="{69\:\ 0x002c|0x002c: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY])  (LINE:120)\l}"];
Node_65 [shape=record,label="{65\:\ 0x0024|0x0024: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY])  (LINE:120)\l}"];
Node_61 [shape=record,label="{61\:\ 0x001b|0x001b: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY])  (LINE:120)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0012|0x0012: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:120)\l}"];
Node_53 [shape=record,label="{53\:\ 0x000a|0x000a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY])  (LINE:120)\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ kotlinx.coroutines.channels.ReceiveChannel kotlinx.coroutines.channels.ProduceKt.produce$default((r7 I:kotlinx.coroutines.CoroutineScope A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.coroutines.CoroutineContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlinx.coroutines.channels.BufferOverflow A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlinx.coroutines.CoroutineStart A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlin.jvm.functions.Function1 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:kotlin.jvm.functions.Function2 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:69:0x002c \-\> B:70:0x002d, CROSS_EDGE: B:65:0x0024 \-\> B:66:0x0025, CROSS_EDGE: B:61:0x001b \-\> B:62:0x001c, CROSS_EDGE: B:57:0x0012 \-\> B:58:0x0013, CROSS_EDGE: B:53:0x000a \-\> B:54:0x000b\lINLINE: 0x002f: INVOKE  \l  (r7 I:kotlinx.coroutines.CoroutineScope)\l  (wrap: kotlin.coroutines.CoroutineContext : ?: TERNARYnull = ((wrap: int : 0x0000: ARITH  (r15v1 int A[REMOVE]) = (r14v0 int) & (1 int)) != (0 int)) ? (wrap: kotlin.coroutines.EmptyCoroutineContext : 0x0008: SGET   kotlin.coroutines.EmptyCoroutineContext.INSTANCE kotlin.coroutines.EmptyCoroutineContext) : (r8 I:??[OBJECT, ARRAY]))\l  (wrap: int : ?: TERNARYnull = ((wrap: int : 0x000b: ARITH  (r8v1 int A[REMOVE]) = (r14v0 int) & (2 int)) != (0 int)) ? (0 int) : (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]))\l  (wrap: kotlinx.coroutines.channels.BufferOverflow : ?: TERNARYnull = ((wrap: int : 0x0013: ARITH  (r8v2 int A[REMOVE]) = (r14v0 int) & (4 int)) != (0 int)) ? (wrap: kotlinx.coroutines.channels.BufferOverflow : 0x0019: SGET   kotlinx.coroutines.channels.BufferOverflow.SUSPEND kotlinx.coroutines.channels.BufferOverflow) : (r10 I:??[OBJECT, ARRAY]))\l  (wrap: kotlinx.coroutines.CoroutineStart : ?: TERNARYnull = ((wrap: int : 0x001c: ARITH  (r8v3 int A[REMOVE]) = (r14v0 int) & (8 int)) != (0 int)) ? (wrap: kotlinx.coroutines.CoroutineStart : 0x0022: SGET   kotlinx.coroutines.CoroutineStart.DEFAULT kotlinx.coroutines.CoroutineStart) : (r11 I:??[OBJECT, ARRAY]))\l  (wrap: kotlin.jvm.functions.Function1 : ?: TERNARYnull = ((wrap: int : 0x0025: ARITH  (r8v4 int A[REMOVE]) = (r14v0 int) & (16 int)) != (0 int)) ? (null kotlin.jvm.functions.Function1) : (r12 I:??[OBJECT, ARRAY]))\l  (r13 I:kotlin.jvm.functions.Function2)\l type: STATIC call: kotlinx.coroutines.channels.ProduceKt.produce(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.channels.BufferOverflow, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2):kotlinx.coroutines.channels.ReceiveChannel\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [120=6]\}\l}"];
MethodNode -> Node_48;Node_48 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_69;
Node_68 -> Node_70;
Node_70 -> Node_71;
Node_71 -> Node_49;
Node_69 -> Node_70;
Node_65 -> Node_66;
Node_61 -> Node_62;
Node_57 -> Node_58;
Node_53 -> Node_54;
}

