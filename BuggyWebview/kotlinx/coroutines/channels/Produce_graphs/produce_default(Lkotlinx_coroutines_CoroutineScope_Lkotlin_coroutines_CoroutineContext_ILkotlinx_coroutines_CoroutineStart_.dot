digraph "CFG forkotlinx.coroutines.channels.ProduceKt.produce$default(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/CoroutineStart;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function2;ILjava\/lang\/Object;)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_40 [shape=record,label="{40\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0000}"];
Node_43 [shape=record,label="{43\:\ 0x0002|if ((r12 & 1) == 0) goto L19\l}"];
Node_44 [shape=record,label="{44\:\ 0x0004|r1 = kotlin.coroutines.EmptyCoroutineContext.INSTANCE\l}"];
Node_46 [shape=record,label="{46\:\ 0x000b|PHI: r1 \l  PHI: (r1v1 kotlin.coroutines.CoroutineContext) = (r1v0 kotlin.coroutines.CoroutineContext), (r1v2 kotlin.coroutines.EmptyCoroutineContext) binds: [B:45:0x000a, B:44:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_47 [shape=record,label="{47\:\ 0x000d|if ((r12 & 2) == 0) goto L18\l}"];
Node_48 [shape=record,label="{48\:\ 0x000f|r2 = 0\l}"];
Node_50 [shape=record,label="{50\:\ 0x0013|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:49:0x0012, B:48:0x000f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_51 [shape=record,label="{51\:\ 0x0015|if ((r12 & 4) == 0) goto L17\l}"];
Node_52 [shape=record,label="{52\:\ 0x0017|r3 = kotlinx.coroutines.CoroutineStart.DEFAULT\l}"];
Node_54 [shape=record,label="{54\:\ 0x001c|PHI: r3 \l  PHI: (r3v1 kotlinx.coroutines.CoroutineStart) = (r3v0 kotlinx.coroutines.CoroutineStart), (r3v2 kotlinx.coroutines.CoroutineStart) binds: [B:53:0x001b, B:52:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_55 [shape=record,label="{55\:\ 0x001e|if ((r12 & 8) == 0) goto L16\l}"];
Node_56 [shape=record,label="{56\:\ 0x0020|r4 = null\l}"];
Node_58 [shape=record,label="{58\:\ 0x0024|PHI: r4 \l  PHI: (r4v1 kotlin.jvm.functions.Function1) = (r4v0 kotlin.jvm.functions.Function1), (r4v2 kotlin.jvm.functions.Function1) binds: [B:57:0x0023, B:56:0x0020] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_59 [shape=record,label="{59\:\ 0x002a|RETURN\l|return produce(r6, r1, r2, r3, r4, r11)\l}"];
Node_41 [shape=record,label="{41\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_57 [shape=record,label="{57\:\ 0x0023|r4 = r10\l}"];
Node_53 [shape=record,label="{53\:\ 0x001b|r3 = r9\l}"];
Node_49 [shape=record,label="{49\:\ 0x0012|r2 = r8\l}"];
Node_45 [shape=record,label="{45\:\ 0x000a|r1 = r7\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ kotlinx.coroutines.channels.ReceiveChannel kotlinx.coroutines.channels.ProduceKt.produce$default((r6v0 kotlinx.coroutines.CoroutineScope A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.coroutines.CoroutineContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 kotlinx.coroutines.CoroutineStart A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 kotlin.jvm.functions.Function1 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 kotlin.jvm.functions.Function2 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:57:0x0023 \-\> B:58:0x0024, CROSS_EDGE: B:53:0x001b \-\> B:54:0x001c, CROSS_EDGE: B:49:0x0012 \-\> B:50:0x0013, CROSS_EDGE: B:45:0x000a \-\> B:46:0x000b\lINLINE: 0x0026: INVOKE  \l  (r6 I:kotlinx.coroutines.CoroutineScope)\l  (wrap: kotlin.coroutines.CoroutineContext : ?: TERNARYnull = ((wrap: int : 0x0000: ARITH  (r13v1 int A[REMOVE]) = (r12v0 int) & (1 int)) != (0 int)) ? (wrap: kotlin.coroutines.EmptyCoroutineContext : 0x0008: SGET   kotlin.coroutines.EmptyCoroutineContext.INSTANCE kotlin.coroutines.EmptyCoroutineContext) : (r7 I:??[OBJECT, ARRAY]))\l  (wrap: int : ?: TERNARYnull = ((wrap: int : 0x000b: ARITH  (r7v1 int A[REMOVE]) = (r12v0 int) & (2 int)) != (0 int)) ? (0 int) : (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]))\l  (wrap: kotlinx.coroutines.CoroutineStart : ?: TERNARYnull = ((wrap: int : 0x0013: ARITH  (r7v2 int A[REMOVE]) = (r12v0 int) & (4 int)) != (0 int)) ? (wrap: kotlinx.coroutines.CoroutineStart : 0x0019: SGET   kotlinx.coroutines.CoroutineStart.DEFAULT kotlinx.coroutines.CoroutineStart) : (r9 I:??[OBJECT, ARRAY]))\l  (wrap: kotlin.jvm.functions.Function1 : ?: TERNARYnull = ((wrap: int : 0x001c: ARITH  (r7v3 int A[REMOVE]) = (r12v0 int) & (8 int)) != (0 int)) ? (null kotlin.jvm.functions.Function1) : (r10 I:??[OBJECT, ARRAY]))\l  (r11 I:kotlin.jvm.functions.Function2)\l type: STATIC call: kotlinx.coroutines.channels.ProduceKt.produce(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2):kotlinx.coroutines.channels.ReceiveChannel\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [110=5]\}\l}"];
MethodNode -> Node_40;Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_41;
Node_57 -> Node_58;
Node_53 -> Node_54;
Node_49 -> Node_50;
Node_45 -> Node_46;
}

