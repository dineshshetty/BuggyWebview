digraph "CFG forkotlinx.coroutines.channels.ArrayChannel.ensureCapacity(I)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object[]) = (r8 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.buffer java.lang.Object[]  (LINE:164)\l0x0002: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0003|0x0003: IF  (r9 I:??[int, byte, short, char] A[D('currentSize' int)]) \< (r1 I:??[int, byte, short, char])  \-\> B:21:? \l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|0x0005: ARRAY_LENGTH  (r0 I:int) = (r0 I:??[])  (LINE:165)\l0x0006: ARITH  (r0 I:int) = (r0 I:int) * (2 int) \l0x0008: IGET  (r1 I:int) = (r8 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.capacity int \l0x000a: INVOKE  (r0 I:int) = (r0 I:int), (r1 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x000e: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r0 I:int A[D('newSize' int), IMMUTABLE_TYPE]) type: java.lang.Object[]  (LINE:166)\l0x0010: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:167)\l0x0011: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|LOOP_START\lLOOP:0: B:16:0x0012\-\>B:17:0x0014\l|0x0012: IF  (r3 I:??[int, byte, short, char]) \>= (r9 I:??[int, byte, short, char] A[D('currentSize' int)])  \-\> B:20:0x0023 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0014|LOOP_END\lLOOP:0: B:16:0x0012\-\>B:17:0x0014\l|0x0014: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l0x0017: IGET  (r5 I:java.lang.Object[]) = (r8 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.buffer java.lang.Object[]  (LINE:168)\l0x0019: IGET  (r6 I:int) = (r8 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.head int \l0x001b: ARITH  (r6 I:int) = (r6 I:int) + (r4 I:int A[D('i' int)]) \l0x001c: ARRAY_LENGTH  (r7 I:int) = (r5 I:??[]) \l0x001d: ARITH  (r6 I:int) = (r6 I:int) % (r7 I:int) \l0x001e: AGET  (r5 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]) \l0x0020: APUT  \l  (r1 I:??[OBJECT, ARRAY][] A[D('newBuffer' java.lang.Object[])])\l  (r4 I:??[int, short, byte, char] A[D('i' int)])\l  (r5 I:??[OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0023|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0023|0x0023: SGET  (r3 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.EMPTY kotlinx.coroutines.internal.Symbol  (LINE:170)\l0x0025: INVOKE  \l  (r1 I:java.lang.Object[] A[D('newBuffer' java.lang.Object[])])\l  (r3 I:java.lang.Object)\l  (r9 I:int A[D('currentSize' int)])\l  (r0 I:int A[D('newSize' int)])\l type: STATIC call: kotlin.collections.ArraysKt.fill(java.lang.Object[], java.lang.Object, int, int):void A[MD:\<T\>:(T[], T, int, int):void (m)]\l0x0028: IPUT  (r1 I:java.lang.Object[] A[D('newBuffer' java.lang.Object[])]), (r8 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.buffer java.lang.Object[]  (LINE:171)\l0x002a: IPUT  (r2 I:int), (r8 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.head int  (LINE:172)\l}"];
Node_19 [shape=record,label="{19\:\ 0x002c|RETURN\lORIG_RETURN\l|0x002c: RETURN    (LINE:174)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x002c: RETURN   A[SYNTHETIC] (LINE:174)\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.channels.ArrayChannel.ensureCapacity((r8 'this' I:kotlinx.coroutines.channels.ArrayChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[D('currentSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:17:0x0014 \-\> B:16:0x0012, CROSS_EDGE: B:14:0x0003 \-\> B:19:0x002c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x0023: r4 'i' I\l  0x000e\-0x002c: r0 'newSize' I\l  0x0010\-0x002c: r1 'newBuffer' [Ljava\/lang\/Object;\l  \-1 \-0x002c: r9 'currentSize' I\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_16;
Node_20 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_21 -> Node_12;
}

