digraph "CFG forkotlinx.coroutines.channels.ArrayChannel.offerSelectInternal(Ljava\/lang\/Object;Lkotlinx\/coroutines\/selects\/SelectInstance;)Ljava\/lang\/Object;" {
Node_49 [shape=record,label="{49\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:89)\l0x0001: IGET  (r1 I:java.util.concurrent.locks.ReentrantLock) = (r10 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.lock java.util.concurrent.locks.ReentrantLock  (LINE:90)\l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$withLock$iv' java.util.concurrent.locks.ReentrantLock)])  (LINE:313)\l0x0005: CHECK_CAST (r3 I:java.util.concurrent.locks.Lock) = (java.util.concurrent.locks.Lock) (r3 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l0x000a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_94 [shape=record,label="{94\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_52 [shape=record,label="{52\:\ 0x000b|TRY_ENTER\lTryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lCatch: all \-\> 0x009a\l|0x000b: IGET  (r5 I:int) = (r10 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.size int A[Catch: all \-\> 0x009a, TRY_ENTER] (LINE:91)\l0x000d: INVOKE  (r6 I:kotlinx.coroutines.channels.Closed) = (r10 I:kotlinx.coroutines.channels.ArrayChannel) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayChannel.getClosedForSend():kotlinx.coroutines.channels.Closed A[Catch: all \-\> 0x009a, MD:():kotlinx.coroutines.channels.Closed\<?\> (m)] (LINE:92)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0011|0x0011: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x0094 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0013|TryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lCatch: all \-\> 0x009a\l|0x0013: INVOKE  (r6 I:kotlinx.coroutines.internal.Symbol) = (r10 I:kotlinx.coroutines.channels.ArrayChannel), (r5 I:int A[D('size' int)]) type: DIRECT call: kotlinx.coroutines.channels.ArrayChannel.updateBufferSize(int):kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x009a, MD:(int):kotlinx.coroutines.internal.Symbol (m)] (LINE:94)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0017|0x0017: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x008e \l}"];
Node_56 [shape=record,label="{56\:\ 0x0019|0x0019: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('size' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:0x0075  (LINE:96)\l}"];
Node_58 [shape=record,label="{58\:\ 0x001c|LOOP_START\lTryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lLOOP:0: B:58:0x001c\-\>B:68:0x0052\lCatch: all \-\> 0x009a\l|0x001c: INVOKE  (r6 I:kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc) = (r10 I:kotlinx.coroutines.channels.ArrayChannel), (r11 I:java.lang.Object A[D('element' java.lang.Object)]) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayChannel.describeTryOffer(java.lang.Object):kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc A[Catch: all \-\> 0x009a, MD:(E):kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc\<E\> (m)] (LINE:98)\l0x0020: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('offerOp' kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc)])  (LINE:99)\l0x0021: CHECK_CAST (r7 I:kotlinx.coroutines.internal.AtomicDesc) = (kotlinx.coroutines.internal.AtomicDesc) (r7 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x009a]\l0x0023: INVOKE  (r7 I:java.lang.Object) = \l  (r12 I:kotlinx.coroutines.selects.SelectInstance A[D('select' kotlinx.coroutines.selects.SelectInstance)])\l  (r7 I:kotlinx.coroutines.internal.AtomicDesc)\l type: INTERFACE call: kotlinx.coroutines.selects.SelectInstance.performAtomicTrySelect(kotlinx.coroutines.internal.AtomicDesc):java.lang.Object A[Catch: all \-\> 0x009a, MD:(kotlinx.coroutines.internal.AtomicDesc):java.lang.Object (m)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x0028|0x0028: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('failure' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x0049  (LINE:101)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0049|TRY_ENTER\lTryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lCatch: all \-\> 0x009a\l|0x0049: SGET  (r8 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x009a, TRY_ENTER] (LINE:106)\l}"];
Node_64 [shape=record,label="{64\:\ 0x004b|0x004b: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('failure' java.lang.Object)]) != (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x004e \l}"];
Node_66 [shape=record,label="{66\:\ 0x004e|TryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lCatch: all \-\> 0x009a\l|0x004e: SGET  (r8 I:java.lang.Object) =  kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC java.lang.Object A[Catch: all \-\> 0x009a] (LINE:107)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0050|0x0050: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('failure' java.lang.Object)]) != (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:95:0x0053 \l}"];
Node_68 [shape=record,label="{68\:\ 0x0052|LOOP_END\lLOOP:0: B:58:0x001c\-\>B:68:0x0052\l|0x0052: GOTO  \-\> 0x001b \l}"];
Node_95 [shape=record,label="{95\:\ 0x0053|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x0053|TryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lCatch: all \-\> 0x009a\l|0x0053: INVOKE  (r8 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.getALREADY_SELECTED():java.lang.Object A[Catch: all \-\> 0x009a, MD:():java.lang.Object (m)] (LINE:108)\l}"];
Node_70 [shape=record,label="{70\:\ 0x0057|0x0057: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('failure' java.lang.Object)]) == (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:76:0x006e \l}"];
Node_71 [shape=record,label="{71\:\ 0x0059|TryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lCatch: all \-\> 0x009a\l|0x0059: INSTANCE_OF  (r8 I:boolean) = (r7 I:??[OBJECT, ARRAY] A[D('failure' java.lang.Object)]) kotlinx.coroutines.channels.Closed A[Catch: all \-\> 0x009a]\l}"];
Node_72 [shape=record,label="{72\:\ 0x005b|0x005b: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x005e \l}"];
Node_73 [shape=record,label="{73\:\ 0x005d|0x005d: GOTO  \-\> 0x006e \l}"];
Node_74 [shape=record,label="{74\:\ 0x005e|TryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lCatch: all \-\> 0x009a\l|0x005e: NEW_INSTANCE  (r8 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch: all \-\> 0x009a] (LINE:110)\l0x0060: CONST_STR  (r9 I:java.lang.String) =  \"performAtomicTrySelect(describeTryOffer) returned \"  (LINE:112)\l0x0062: INVOKE  (r9 I:java.lang.String) = (r9 I:java.lang.String), (r7 I:java.lang.Object A[D('failure' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[Catch: all \-\> 0x009a, MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x0066: INVOKE  (r9 I:java.lang.String) = (r9 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[Catch: all \-\> 0x009a, MD:():java.lang.String (c)]\l0x006a: INVOKE  (r8 I:java.lang.IllegalStateException), (r9 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[Catch: all \-\> 0x009a, MD:(java.lang.String):void (c)]\l}"];
Node_75 [shape=record,label="{75\:\ 0x006d|TryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lCatch: all \-\> 0x009a\l|0x006d: THROW  (r8 I:java.lang.Throwable) A[Catch: all \-\> 0x009a]\l}"];
Node_50 [shape=record,label="{50\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_76 [shape=record,label="{76\:\ 0x006e|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lCatch: all \-\> 0x009a\l|0x006e: IPUT  (r5 I:int A[D('size' int)]), (r10 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.size int A[Catch: all \-\> 0x009a, TRY_LEAVE] (LINE:109)\l}"];
Node_77 [shape=record,label="{77\:\ 0x0071|0x0071: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_78 [shape=record,label="{78\:\ 0x0074|RETURN\l|0x0074: RETURN  (r7 I:java.lang.Object) \l}"];
Node_97 [shape=record,label="{97\:\ 0x004d|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x004d|0x004d: GOTO  \-\> 0x0075 \l}"];
Node_96 [shape=record,label="{96\:\ 0x002a|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x002a|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lCatch: all \-\> 0x009a\l|0x002a: IPUT  (r5 I:int A[D('size' int)]), (r10 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.size int A[Catch: all \-\> 0x009a] (LINE:102)\l0x002c: INVOKE  (r8 I:java.lang.Object) = \l  (r6 I:kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc A[D('offerOp' kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc)])\l type: VIRTUAL call: kotlinx.coroutines.channels.AbstractSendChannel.TryOfferDesc.getResult():java.lang.Object A[Catch: all \-\> 0x009a, MD:():T (m)] (LINE:103)\l0x0030: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('receive' java.lang.Object)]) = (r8 I:??[OBJECT, ARRAY]) \l0x0032: SGET  (r4 I:kotlin.Unit A[D('$i$a$\-withLock\-ArrayChannel$offerSelectInternal$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x009a, TRY_LEAVE] (LINE:122)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0034|0x0034: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l0x0038: INVOKE  (r0 I:java.lang.Object A[D('receive' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:125)\l0x003b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('receive' java.lang.Object)]) \l0x003c: CHECK_CAST (r1 I:kotlinx.coroutines.channels.ReceiveOrClosed) = (kotlinx.coroutines.channels.ReceiveOrClosed) (r1 I:??[OBJECT, ARRAY]) \l0x003e: INVOKE  (r1 I:kotlinx.coroutines.channels.ReceiveOrClosed), (r11 I:java.lang.Object A[D('element' java.lang.Object)]) type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.completeResumeReceive(java.lang.Object):void A[MD:(E):void (m)]\l0x0041: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('receive' java.lang.Object)])  (LINE:126)\l0x0042: CHECK_CAST (r1 I:kotlinx.coroutines.channels.ReceiveOrClosed) = (kotlinx.coroutines.channels.ReceiveOrClosed) (r1 I:??[OBJECT, ARRAY]) \l0x0044: INVOKE  (r1 I:java.lang.Object) = (r1 I:kotlinx.coroutines.channels.ReceiveOrClosed) type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.getOfferResult():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x0048|RETURN\l|0x0048: RETURN  (r1 I:java.lang.Object) \l}"];
Node_79 [shape=record,label="{79\:\ 0x0075|TRY_ENTER\lTryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lCatch: all \-\> 0x009a\l|0x0075: INVOKE  (r6 I:boolean) = (r12 I:kotlinx.coroutines.selects.SelectInstance A[D('select' kotlinx.coroutines.selects.SelectInstance)]) type: INTERFACE call: kotlinx.coroutines.selects.SelectInstance.trySelect():boolean A[Catch: all \-\> 0x009a, MD:():boolean (m), TRY_ENTER] (LINE:117)\l}"];
Node_80 [shape=record,label="{80\:\ 0x0079|0x0079: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:0x0085 \l}"];
Node_81 [shape=record,label="{81\:\ 0x007b|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lCatch: all \-\> 0x009a\l|0x007b: IPUT  (r5 I:int A[D('size' int)]), (r10 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.size int A[Catch: all \-\> 0x009a] (LINE:118)\l0x007d: INVOKE  (r6 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.getALREADY_SELECTED():java.lang.Object A[Catch: all \-\> 0x009a, MD:():java.lang.Object (m), TRY_LEAVE] (LINE:119)\l}"];
Node_82 [shape=record,label="{82\:\ 0x0081|0x0081: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_83 [shape=record,label="{83\:\ 0x0084|RETURN\l|0x0084: RETURN  (r6 I:java.lang.Object) \l}"];
Node_84 [shape=record,label="{84\:\ 0x0085|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lCatch: all \-\> 0x009a\l|0x0085: INVOKE  \l  (r10 I:kotlinx.coroutines.channels.ArrayChannel)\l  (r5 I:int A[D('size' int)])\l  (r11 I:java.lang.Object A[D('element' java.lang.Object)])\l type: DIRECT call: kotlinx.coroutines.channels.ArrayChannel.enqueueElement(int, java.lang.Object):void A[Catch: all \-\> 0x009a, MD:(int, E):void (m), TRY_ENTER] (LINE:121)\l0x0088: SGET  (r6 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x009a, TRY_LEAVE] (LINE:122)\l}"];
Node_85 [shape=record,label="{85\:\ 0x008a|0x008a: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_86 [shape=record,label="{86\:\ 0x008d|RETURN\l|0x008d: RETURN  (r6 I:java.lang.Object) \l}"];
Node_87 [shape=record,label="{87\:\ 0x008e|0x008e: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:309)\l0x0090: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_88 [shape=record,label="{88\:\ 0x0093|RETURN\l|0x0093: RETURN  (r6 I:java.lang.Object) \l}"];
Node_89 [shape=record,label="{89\:\ 0x0094|0x0094: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:309)\l0x0096: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_90 [shape=record,label="{90\:\ 0x0099|RETURN\l|0x0099: RETURN  (r6 I:java.lang.Object) \l}"];
Node_91 [shape=record,label="{91\:\ 0x009a|ExcHandler: all \-\> 0x009a\l|0x009a: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x009a] (LINE:122)\l}"];
Node_92 [shape=record,label="{92\:\ 0x009b|0x009b: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_93 [shape=record,label="{93\:\ 0x009e|0x009e: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.ArrayChannel.offerSelectInternal((r10 'this' I:kotlinx.coroutines.channels.ArrayChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r11 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlinx.coroutines.selects.SelectInstance\<?\> A[D('select' kotlinx.coroutines.selects.SelectInstance), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:83:0x0084 \-\> B:50:?, CROSS_EDGE: B:86:0x008d \-\> B:50:?, BACK_EDGE: B:68:0x0052 \-\> B:58:0x001c, CROSS_EDGE: B:78:0x0074 \-\> B:50:?, CROSS_EDGE: B:75:0x006d \-\> B:50:?, CROSS_EDGE: B:70:0x0057 \-\> B:76:0x006e, CROSS_EDGE: B:56:0x0019 \-\> B:79:0x0075, CROSS_EDGE: B:88:0x0093 \-\> B:50:?, CROSS_EDGE: B:90:0x0099 \-\> B:50:?, CROSS_EDGE: B:93:0x009e \-\> B:50:?\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x009a, blocks: (B:52:0x000b, B:54:0x0013, B:58:0x001c, B:60:0x002a, B:63:0x0049, B:66:0x004e, B:69:0x0053, B:71:0x0059, B:74:0x005e, B:75:0x006d, B:76:0x006e, B:79:0x0075, B:81:0x007b, B:84:0x0085), top: B:94:0x000b \}\lTYPE_VARS: [E]\lSIGNATURE: (TE;Lkotlinx\/coroutines\/selects\/SelectInstance\<*\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x000b\-0x0032: r4 '$i$a$\-withLock\-ArrayChannel$offerSelectInternal$1' I\l  0x000d\-0x0032: r5 'size' I\l  0x0020\-0x0032: r6 'offerOp' Lkotlinx\/coroutines\/channels\/AbstractSendChannel$TryOfferDesc;\l  0x0027\-0x0032: r7 'failure' Ljava\/lang\/Object;\l  0x0003\-0x0038: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0004\-0x0038: r2 '$i$f$withLock' I\l  0x0001\-0x006d: r0 'receive' Ljava\/lang\/Object;\l  0x0049\-0x006d: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0049\-0x006d: r2 '$i$f$withLock' I\l  \-1 \-0x006d: r11 'element' Ljava\/lang\/Object;\l  \-1 \-0x006d: r12 'select' Lkotlinx\/coroutines\/selects\/SelectInstance;\l  0x006e\-0x0071: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x006e\-0x0071: r2 '$i$f$withLock' I\l  0x0049\-0x0071: r4 '$i$a$\-withLock\-ArrayChannel$offerSelectInternal$1' I\l  0x0049\-0x0071: r5 'size' I\l  0x0049\-0x0071: r6 'offerOp' Lkotlinx\/coroutines\/channels\/AbstractSendChannel$TryOfferDesc;\l  0x0049\-0x0071: r7 'failure' Ljava\/lang\/Object;\l  0x0075\-0x0081: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0075\-0x0081: r2 '$i$f$withLock' I\l  0x0075\-0x0081: r4 '$i$a$\-withLock\-ArrayChannel$offerSelectInternal$1' I\l  0x0075\-0x0081: r5 'size' I\l  0x0085\-0x008a: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0085\-0x008a: r2 '$i$f$withLock' I\l  0x0085\-0x008a: r4 '$i$a$\-withLock\-ArrayChannel$offerSelectInternal$1' I\l  0x0085\-0x008a: r5 'size' I\l  0x008e\-0x0090: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x008e\-0x0090: r2 '$i$f$withLock' I\l  0x008e\-0x0090: r4 '$i$a$\-withLock\-ArrayChannel$offerSelectInternal$1' I\l  0x008e\-0x0090: r5 'size' I\l  0x008e\-0x0090: r6 'it' Lkotlinx\/coroutines\/internal\/Symbol;\l  0x008f\-0x0090: r7 '$i$a$\-let\-ArrayChannel$offerSelectInternal$1$2' I\l  0x0094\-0x0096: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0094\-0x0096: r2 '$i$f$withLock' I\l  0x0094\-0x0096: r4 '$i$a$\-withLock\-ArrayChannel$offerSelectInternal$1' I\l  0x0094\-0x0096: r5 'size' I\l  0x0094\-0x0096: r6 'it' Lkotlinx\/coroutines\/channels\/Closed;\l  0x0095\-0x0096: r7 '$i$a$\-let\-ArrayChannel$offerSelectInternal$1$1' I\l  0x006e\-0x009e: r0 'receive' Ljava\/lang\/Object;\l  0x009a\-0x009e: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x009a\-0x009e: r2 '$i$f$withLock' I\l  0x006e\-0x009e: r11 'element' Ljava\/lang\/Object;\l  0x006e\-0x009e: r12 'select' Lkotlinx\/coroutines\/selects\/SelectInstance;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractSendChannel.offerSelectInternal(E, kotlinx.coroutines.selects.SelectInstance\<?\>):java.lang.Object]\l}"];
MethodNode -> Node_49;Node_49 -> Node_51;
Node_51 -> Node_94;
Node_94 -> Node_52;
Node_94 -> Node_91;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_89;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_87;
Node_56 -> Node_58[style=dashed];
Node_56 -> Node_79;
Node_58 -> Node_59;
Node_59 -> Node_63;
Node_59 -> Node_96[style=dashed];
Node_63 -> Node_64;
Node_64 -> Node_66;
Node_64 -> Node_97[style=dashed];
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_95;
Node_68 -> Node_58;
Node_95 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_76;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_74;
Node_73 -> Node_76;
Node_74 -> Node_75;
Node_75 -> Node_50;
Node_76 -> Node_77;
Node_77 -> Node_78;
Node_78 -> Node_50;
Node_97 -> Node_65;
Node_65 -> Node_79;
Node_96 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_50;
Node_79 -> Node_80;
Node_80 -> Node_81[style=dashed];
Node_80 -> Node_84;
Node_81 -> Node_82;
Node_82 -> Node_83;
Node_83 -> Node_50;
Node_84 -> Node_85;
Node_85 -> Node_86;
Node_86 -> Node_50;
Node_87 -> Node_88;
Node_88 -> Node_50;
Node_89 -> Node_90;
Node_90 -> Node_50;
Node_91 -> Node_92;
Node_92 -> Node_93;
Node_93 -> Node_50;
}

