digraph "CFG forkotlinx.coroutines.channels.ArrayChannel.onCancelIdempotent(Z)V" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY])  (LINE:284)\l0x0002: IGET  (r2 I:kotlin.jvm.functions.Function1\<E, kotlin.Unit\>) = (r1 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.onUndeliveredElement kotlin.jvm.functions.Function1 \l0x0004: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:285)\l0x0005: IGET  (r4 I:java.util.concurrent.locks.ReentrantLock) = (r1 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.lock java.util.concurrent.locks.ReentrantLock  (LINE:286)\l0x0007: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('$this$withLock$iv' java.util.concurrent.locks.ReentrantLock)])  (LINE:318)\l0x0009: CHECK_CAST (r6 I:java.util.concurrent.locks.Lock) = (java.util.concurrent.locks.Lock) (r6 I:??[OBJECT, ARRAY]) \l0x000b: INVOKE  (r6 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l0x000e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x000f|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x000f|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0050, blocks: (B:29:0x000f, B:31:0x0015, B:33:0x0020, B:35:0x0024, B:36:0x0029, B:37:0x003e), top: B:46:0x000f \}\lCatch: all \-\> 0x0050\l|0x000f: IGET  (r7 I:int) = (r1 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.size int A[Catch: all \-\> 0x0050, TRY_ENTER] (LINE:287)\l0x0011: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0013|LOOP_START\lLOOP:0: B:30:0x0013\-\>B:36:0x0029\l|0x0013: IF  (r9 I:??[int, byte, short, char]) \>= (r7 I:??[int, byte, short, char])  \-\> B:48:0x003e \l}"];
Node_31 [shape=record,label="{31\:\ 0x0015|TryCatch #0 \{all \-\> 0x0050, blocks: (B:29:0x000f, B:31:0x0015, B:33:0x0020, B:35:0x0024, B:36:0x0029, B:37:0x003e), top: B:46:0x000f \}\lCatch: all \-\> 0x0050\l|0x0015: ARITH  (r10 I:int) = (r9 I:int) + (1 int) A[Catch: all \-\> 0x0050]\l0x0017: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: IGET  (r12 I:java.lang.Object[]) = (r1 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.buffer java.lang.Object[] A[Catch: all \-\> 0x0050] (LINE:288)\l0x001a: IGET  (r13 I:int) = (r1 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.head int A[Catch: all \-\> 0x0050]\l0x001c: AGET  (r12 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY][]), (r13 I:??[int, short, byte, char]) A[Catch: all \-\> 0x0050]\l}"];
Node_32 [shape=record,label="{32\:\ 0x001e|0x001e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('onUndeliveredElement' kotlin.jvm.functions.Function1)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0029  (LINE:289)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0020|TryCatch #0 \{all \-\> 0x0050, blocks: (B:29:0x000f, B:31:0x0015, B:33:0x0020, B:35:0x0024, B:36:0x0029, B:37:0x003e), top: B:46:0x000f \}\lCatch: all \-\> 0x0050\l|0x0020: SGET  (r13 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.EMPTY kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x0050]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0022|0x0022: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' java.lang.Object)]) == (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0029 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0024|TryCatch #0 \{all \-\> 0x0050, blocks: (B:29:0x000f, B:31:0x0015, B:33:0x0020, B:35:0x0024, B:36:0x0029, B:37:0x003e), top: B:46:0x000f \}\lCatch: all \-\> 0x0050\l|0x0024: INVOKE  (r13 I:kotlinx.coroutines.internal.UndeliveredElementException) = \l  (r2 I:kotlin.jvm.functions.Function1 A[D('onUndeliveredElement' kotlin.jvm.functions.Function1)])\l  (r12 I:java.lang.Object A[D('value' java.lang.Object)])\l  (r3 I:kotlinx.coroutines.internal.UndeliveredElementException A[D('undeliveredElementException' java.lang.Object)])\l type: STATIC call: kotlinx.coroutines.internal.OnUndeliveredElementKt.callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1, java.lang.Object, kotlinx.coroutines.internal.UndeliveredElementException):kotlinx.coroutines.internal.UndeliveredElementException A[Catch: all \-\> 0x0050, MD:\<E\>:(kotlin.jvm.functions.Function1\<? super E, kotlin.Unit\>, E, kotlinx.coroutines.internal.UndeliveredElementException):kotlinx.coroutines.internal.UndeliveredElementException (m)] (LINE:291)\l0x0028: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('undeliveredElementException' java.lang.Object)]) = (r13 I:??[OBJECT, ARRAY]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0029|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0029|LOOP_END\lTryCatch #0 \{all \-\> 0x0050, blocks: (B:29:0x000f, B:31:0x0015, B:33:0x0020, B:35:0x0024, B:36:0x0029, B:37:0x003e), top: B:46:0x000f \}\lLOOP:0: B:30:0x0013\-\>B:36:0x0029\lCatch: all \-\> 0x0050\l|0x0029: IGET  (r13 I:java.lang.Object[]) = (r1 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.buffer java.lang.Object[] A[Catch: all \-\> 0x0050] (LINE:293)\l0x002b: IGET  (r14 I:int) = (r1 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.head int A[Catch: all \-\> 0x0050]\l0x002d: SGET  (r15 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.EMPTY kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x0050]\l0x002f: APUT  (r13 I:??[OBJECT, ARRAY][]), (r14 I:??[int, short, byte, char]), (r15 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0050]\l0x0031: IGET  (r13 I:int) = (r1 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.head int A[Catch: all \-\> 0x0050] (LINE:294)\l0x0033: ARITH  (r13 I:int) = (r13 I:int) + (1 int) A[Catch: all \-\> 0x0050]\l0x0035: IGET  (r14 I:java.lang.Object[]) = (r1 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.buffer java.lang.Object[] A[Catch: all \-\> 0x0050]\l0x0037: ARRAY_LENGTH  (r14 I:int) = (r14 I:??[]) A[Catch: all \-\> 0x0050]\l0x0038: ARITH  (r13 I:int) = (r13 I:int) % (r14 I:int) A[Catch: all \-\> 0x0050]\l0x0039: IPUT  (r13 I:int), (r1 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.head int A[Catch: all \-\> 0x0050]\l0x003c: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('it' int)]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:287)\l0x003d: GOTO  \-\> 0x0013 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0029|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0029|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x003e|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x003e|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0050, blocks: (B:29:0x000f, B:31:0x0015, B:33:0x0020, B:35:0x0024, B:36:0x0029, B:37:0x003e), top: B:46:0x000f \}\lCatch: all \-\> 0x0050\l|0x003e: IPUT  (r8 I:int), (r1 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.size int A[Catch: all \-\> 0x0050] (LINE:296)\l0x0041: SGET  (r0 I:kotlin.Unit A[D('$i$a$\-withLock\-ArrayChannel$onCancelIdempotent$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x0050, TRY_LEAVE]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0043|0x0043: INVOKE  (r6 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l0x0047: INVOKE  (r16 I:kotlinx.coroutines.channels.AbstractChannel), (r17 I:boolean A[D('wasClosed' boolean)]) type: SUPER call: kotlinx.coroutines.channels.AbstractChannel.onCancelIdempotent(boolean):void A[MD:(boolean):void (m)] (LINE:299)\l}"];
Node_39 [shape=record,label="{39\:\ 0x004a|0x004a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('undeliveredElementException' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x004d  (LINE:300)\l}"];
Node_40 [shape=record,label="{40\:\ 0x004c|RETURN\l|0x004c: RETURN    (LINE:301)\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x004d|0x004d: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('undeliveredElementException' java.lang.Object)])  (LINE:300)\l0x004e: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:309)\l}"];
Node_42 [shape=record,label="{42\:\ 0x004f|0x004f: THROW  (r0 I:java.lang.Throwable A[D('it' kotlinx.coroutines.internal.UndeliveredElementException)])  (LINE:300)\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_43 [shape=record,label="{43\:\ 0x0050|ExcHandler: all \-\> 0x0050\l|0x0050: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0050] (LINE:297)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0051|0x0051: INVOKE  (r6 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0054|0x0054: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.channels.ArrayChannel.onCancelIdempotent((r16 'this' I:kotlinx.coroutines.channels.ArrayChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r17 I:boolean A[D('wasClosed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:36:0x0029 \-\> B:30:0x0013, CROSS_EDGE: B:34:0x0022 \-\> B:36:0x0029, CROSS_EDGE: B:32:0x001e \-\> B:36:0x0029, CROSS_EDGE: B:42:0x004f \-\> B:27:?, CROSS_EDGE: B:45:0x0054 \-\> B:27:?, CROSS_EDGE: B:46:0x000f \-\> B:43:0x0050\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0050, blocks: (B:29:0x000f, B:31:0x0015, B:33:0x0020, B:35:0x0024, B:36:0x0029, B:37:0x003e), top: B:46:0x000f \}\lTYPE_VARS: [E]\lDebug Info:\l  0x0017\-0x003c: r9 'it' I\l  0x0018\-0x003c: r11 '$i$a$\-repeat\-ArrayChannel$onCancelIdempotent$1$1' I\l  0x001e\-0x003c: r12 'value' Ljava\/lang\/Object;\l  0x000f\-0x0041: r0 '$i$a$\-withLock\-ArrayChannel$onCancelIdempotent$1' I\l  0x0007\-0x0047: r4 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0008\-0x0047: r5 '$i$f$withLock' I\l  0x004e\-0x0050: r0 'it' Lkotlinx\/coroutines\/internal\/UndeliveredElementException;\l  0x004f\-0x0050: r4 '$i$a$\-let\-ArrayChannel$onCancelIdempotent$2' I\l  0x0004\-0x0054: r2 'onUndeliveredElement' Lkotlin\/jvm\/functions\/Function1;\l  0x0005\-0x0054: r3 'undeliveredElementException' Ljava\/lang\/Object;\l  0x0050\-0x0054: r4 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0050\-0x0054: r5 '$i$f$withLock' I\l  \-1 \-0x0054: r17 'wasClosed' Z\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractChannel.onCancelIdempotent(boolean):void]\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_46;
Node_46 -> Node_29;
Node_46 -> Node_43;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_48;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_50;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_51;
Node_35 -> Node_49;
Node_49 -> Node_36;
Node_36 -> Node_30;
Node_51 -> Node_36;
Node_50 -> Node_36;
Node_48 -> Node_37;
Node_37 -> Node_38;
Node_37 -> Node_47;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_27;
Node_41 -> Node_42;
Node_42 -> Node_27;
Node_47 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_27;
}

