digraph "CFG forkotlinx.coroutines.channels.ArrayChannel.offerInternal(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_47 [shape=record,label="{47\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:57)\l0x0001: IGET  (r1 I:java.util.concurrent.locks.ReentrantLock) = (r9 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.lock java.util.concurrent.locks.ReentrantLock  (LINE:58)\l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$withLock$iv' java.util.concurrent.locks.ReentrantLock)])  (LINE:312)\l0x0005: CHECK_CAST (r3 I:java.util.concurrent.locks.Lock) = (java.util.concurrent.locks.Lock) (r3 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l0x000a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_90 [shape=record,label="{90\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_50 [shape=record,label="{50\:\ 0x000b|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0074, blocks: (B:50:0x000b, B:52:0x0013, B:56:0x001c, B:59:0x0023, B:61:0x0029, B:65:0x0031, B:67:0x0037, B:69:0x003d, B:75:0x0048, B:76:0x004d, B:77:0x004e, B:80:0x005f), top: B:90:0x000b \}\lCatch: all \-\> 0x0074\l|0x000b: IGET  (r5 I:int) = (r9 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.size int A[Catch: all \-\> 0x0074, TRY_ENTER] (LINE:59)\l0x000d: INVOKE  (r6 I:kotlinx.coroutines.channels.Closed) = (r9 I:kotlinx.coroutines.channels.ArrayChannel) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayChannel.getClosedForSend():kotlinx.coroutines.channels.Closed A[Catch: all \-\> 0x0074, MD:():kotlinx.coroutines.channels.Closed\<?\> (m)] (LINE:60)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0011|0x0011: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:85:0x006e \l}"];
Node_52 [shape=record,label="{52\:\ 0x0013|TryCatch #0 \{all \-\> 0x0074, blocks: (B:50:0x000b, B:52:0x0013, B:56:0x001c, B:59:0x0023, B:61:0x0029, B:65:0x0031, B:67:0x0037, B:69:0x003d, B:75:0x0048, B:76:0x004d, B:77:0x004e, B:80:0x005f), top: B:90:0x000b \}\lCatch: all \-\> 0x0074\l|0x0013: INVOKE  (r6 I:kotlinx.coroutines.internal.Symbol) = (r9 I:kotlinx.coroutines.channels.ArrayChannel), (r5 I:int A[D('size' int)]) type: DIRECT call: kotlinx.coroutines.channels.ArrayChannel.updateBufferSize(int):kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x0074, MD:(int):kotlinx.coroutines.internal.Symbol (m)] (LINE:62)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0017|0x0017: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:83:0x0068 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0019|0x0019: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('size' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x005f  (LINE:64)\l}"];
Node_56 [shape=record,label="{56\:\ 0x001c|LOOP_START\lTryCatch #0 \{all \-\> 0x0074, blocks: (B:50:0x000b, B:52:0x0013, B:56:0x001c, B:59:0x0023, B:61:0x0029, B:65:0x0031, B:67:0x0037, B:69:0x003d, B:75:0x0048, B:76:0x004d, B:77:0x004e, B:80:0x005f), top: B:90:0x000b \}\lLOOP:0: B:56:0x001c\-\>B:66:0x0035\lCatch: all \-\> 0x0074\l|0x001c: INVOKE  (r6 I:kotlinx.coroutines.channels.ReceiveOrClosed) = (r9 I:kotlinx.coroutines.channels.ArrayChannel) type: VIRTUAL call: kotlinx.coroutines.channels.ArrayChannel.takeFirstReceiveOrPeekClosed():kotlinx.coroutines.channels.ReceiveOrClosed A[Catch: all \-\> 0x0074, MD:():kotlinx.coroutines.channels.ReceiveOrClosed\<E\> (m)] (LINE:66)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0020|0x0020: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0023 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0023|TryCatch #0 \{all \-\> 0x0074, blocks: (B:50:0x000b, B:52:0x0013, B:56:0x001c, B:59:0x0023, B:61:0x0029, B:65:0x0031, B:67:0x0037, B:69:0x003d, B:75:0x0048, B:76:0x004d, B:77:0x004e, B:80:0x005f), top: B:90:0x000b \}\lCatch: all \-\> 0x0074\l|0x0023: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('receive' java.lang.Object)]) = (r6 I:??[OBJECT, ARRAY]) \l0x0025: INSTANCE_OF  (r6 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('receive' java.lang.Object)]) kotlinx.coroutines.channels.Closed A[Catch: all \-\> 0x0074]\l}"];
Node_60 [shape=record,label="{60\:\ 0x0027|0x0027: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0030 \l}"];
Node_64 [shape=record,label="{64\:\ 0x0030|0x0030: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:71)\l}"];
Node_65 [shape=record,label="{65\:\ 0x0031|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0074, blocks: (B:50:0x000b, B:52:0x0013, B:56:0x001c, B:59:0x0023, B:61:0x0029, B:65:0x0031, B:67:0x0037, B:69:0x003d, B:75:0x0048, B:76:0x004d, B:77:0x004e, B:80:0x005f), top: B:90:0x000b \}\lCatch: all \-\> 0x0074\l|0x0031: INVOKE  (r6 I:kotlinx.coroutines.internal.Symbol) = \l  (r0 I:kotlinx.coroutines.channels.ReceiveOrClosed A[D('receive' java.lang.Object)])\l  (r10 I:java.lang.Object A[D('element' java.lang.Object)])\l  (r6 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)\l type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.tryResumeReceive(java.lang.Object, kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x0074, MD:(E, kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol (m), TRY_ENTER]\l}"];
Node_66 [shape=record,label="{66\:\ 0x0035|LOOP_END\lLOOP:0: B:56:0x001c\-\>B:66:0x0035\l|0x0035: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('token' kotlinx.coroutines.internal.Symbol)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x001c  (LINE:72)\l}"];
Node_92 [shape=record,label="{92\:\ 0x0037|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x0037|TryCatch #0 \{all \-\> 0x0074, blocks: (B:50:0x000b, B:52:0x0013, B:56:0x001c, B:59:0x0023, B:61:0x0029, B:65:0x0031, B:67:0x0037, B:69:0x003d, B:75:0x0048, B:76:0x004d, B:77:0x004e, B:80:0x005f), top: B:90:0x000b \}\lCatch: all \-\> 0x0074\l|0x0037: INVOKE  (r7 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[Catch: all \-\> 0x0074, MD:():boolean (m)] (LINE:73)\l}"];
Node_68 [shape=record,label="{68\:\ 0x003b|0x003b: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:77:0x004e \l}"];
Node_69 [shape=record,label="{69\:\ 0x003d|TryCatch #0 \{all \-\> 0x0074, blocks: (B:50:0x000b, B:52:0x0013, B:56:0x001c, B:59:0x0023, B:61:0x0029, B:65:0x0031, B:67:0x0037, B:69:0x003d, B:75:0x0048, B:76:0x004d, B:77:0x004e, B:80:0x005f), top: B:90:0x000b \}\lCatch: all \-\> 0x0074\l|0x003d: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:309)\l0x003e: SGET  (r8 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x0074] (LINE:73)\l}"];
Node_70 [shape=record,label="{70\:\ 0x0040|0x0040: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('token' kotlinx.coroutines.internal.Symbol)]) != (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0044 \l}"];
Node_71 [shape=record,label="{71\:\ 0x0042|0x0042: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0043: GOTO  \-\> 0x0045 \l}"];
Node_73 [shape=record,label="{73\:\ 0x0045|0x0045: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x0048 \l}"];
Node_74 [shape=record,label="{74\:\ 0x0047|0x0047: GOTO  \-\> 0x004e \l}"];
Node_75 [shape=record,label="{75\:\ 0x0048|TryCatch #0 \{all \-\> 0x0074, blocks: (B:50:0x000b, B:52:0x0013, B:56:0x001c, B:59:0x0023, B:61:0x0029, B:65:0x0031, B:67:0x0037, B:69:0x003d, B:75:0x0048, B:76:0x004d, B:77:0x004e, B:80:0x005f), top: B:90:0x000b \}\lCatch: all \-\> 0x0074\l|0x0048: NEW_INSTANCE  (r7 I:java.lang.AssertionError) =  java.lang.AssertionError A[Catch: all \-\> 0x0074]\l0x004a: INVOKE  (r7 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[Catch: all \-\> 0x0074, MD:():void (c)]\l}"];
Node_76 [shape=record,label="{76\:\ 0x004d|TryCatch #0 \{all \-\> 0x0074, blocks: (B:50:0x000b, B:52:0x0013, B:56:0x001c, B:59:0x0023, B:61:0x0029, B:65:0x0031, B:67:0x0037, B:69:0x003d, B:75:0x0048, B:76:0x004d, B:77:0x004e, B:80:0x005f), top: B:90:0x000b \}\lCatch: all \-\> 0x0074\l|0x004d: THROW  (r7 I:java.lang.Throwable) A[Catch: all \-\> 0x0074]\l}"];
Node_48 [shape=record,label="{48\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_72 [shape=record,label="{72\:\ 0x0044|0x0044: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_77 [shape=record,label="{77\:\ 0x004e|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0074, blocks: (B:50:0x000b, B:52:0x0013, B:56:0x001c, B:59:0x0023, B:61:0x0029, B:65:0x0031, B:67:0x0037, B:69:0x003d, B:75:0x0048, B:76:0x004d, B:77:0x004e, B:80:0x005f), top: B:90:0x000b \}\lCatch: all \-\> 0x0074\l|0x004e: IPUT  (r5 I:int A[D('size' int)]), (r9 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.size int A[Catch: all \-\> 0x0074] (LINE:74)\l0x0051: SGET  (r4 I:kotlin.Unit A[D('$i$a$\-withLock\-ArrayChannel$offerInternal$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x0074, TRY_LEAVE] (LINE:80)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0053|0x0053: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l0x0057: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.ReceiveOrClosed A[D('receive' java.lang.Object)])\l  (r10 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.completeResumeReceive(java.lang.Object):void A[MD:(E):void (m)] (LINE:83)\l0x005a: INVOKE  (r1 I:java.lang.Object) = (r0 I:kotlinx.coroutines.channels.ReceiveOrClosed A[D('receive' java.lang.Object)]) type: INTERFACE call: kotlinx.coroutines.channels.ReceiveOrClosed.getOfferResult():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:84)\l}"];
Node_79 [shape=record,label="{79\:\ 0x005e|RETURN\l|0x005e: RETURN  (r1 I:java.lang.Object) \l}"];
Node_93 [shape=record,label="{93\:\ 0x0029|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0029|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0074, blocks: (B:50:0x000b, B:52:0x0013, B:56:0x001c, B:59:0x0023, B:61:0x0029, B:65:0x0031, B:67:0x0037, B:69:0x003d, B:75:0x0048, B:76:0x004d, B:77:0x004e, B:80:0x005f), top: B:90:0x000b \}\lCatch: all \-\> 0x0074\l|0x0029: IPUT  (r5 I:int A[D('size' int)]), (r9 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.size int A[Catch: all \-\> 0x0074, TRY_LEAVE] (LINE:68)\l}"];
Node_62 [shape=record,label="{62\:\ 0x002c|0x002c: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_63 [shape=record,label="{63\:\ 0x002f|RETURN\l|0x002f: RETURN  (r0 I:java.lang.Object A[D('receive' java.lang.Object)]) \l}"];
Node_91 [shape=record,label="{91\:\ 0x0022|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x0022|0x0022: GOTO  \-\> 0x005f \l}"];
Node_80 [shape=record,label="{80\:\ 0x005f|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0074, blocks: (B:50:0x000b, B:52:0x0013, B:56:0x001c, B:59:0x0023, B:61:0x0029, B:65:0x0031, B:67:0x0037, B:69:0x003d, B:75:0x0048, B:76:0x004d, B:77:0x004e, B:80:0x005f), top: B:90:0x000b \}\lCatch: all \-\> 0x0074\l|0x005f: INVOKE  \l  (r9 I:kotlinx.coroutines.channels.ArrayChannel)\l  (r5 I:int A[D('size' int)])\l  (r10 I:java.lang.Object A[D('element' java.lang.Object)])\l type: DIRECT call: kotlinx.coroutines.channels.ArrayChannel.enqueueElement(int, java.lang.Object):void A[Catch: all \-\> 0x0074, MD:(int, E):void (m), TRY_ENTER] (LINE:79)\l0x0062: SGET  (r6 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x0074, TRY_LEAVE] (LINE:80)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0064|0x0064: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_82 [shape=record,label="{82\:\ 0x0067|RETURN\l|0x0067: RETURN  (r6 I:java.lang.Object) \l}"];
Node_83 [shape=record,label="{83\:\ 0x0068|0x0068: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:309)\l0x006a: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_84 [shape=record,label="{84\:\ 0x006d|RETURN\l|0x006d: RETURN  (r6 I:java.lang.Object) \l}"];
Node_85 [shape=record,label="{85\:\ 0x006e|0x006e: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:309)\l0x0070: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_86 [shape=record,label="{86\:\ 0x0073|RETURN\l|0x0073: RETURN  (r6 I:java.lang.Object) \l}"];
Node_87 [shape=record,label="{87\:\ 0x0074|ExcHandler: all \-\> 0x0074\l|0x0074: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0074] (LINE:80)\l}"];
Node_88 [shape=record,label="{88\:\ 0x0075|0x0075: INVOKE  (r3 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_89 [shape=record,label="{89\:\ 0x0078|0x0078: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.channels.ArrayChannel.offerInternal((r9 'this' I:kotlinx.coroutines.channels.ArrayChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r10 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:63:0x002f \-\> B:48:?, CROSS_EDGE: B:79:0x005e \-\> B:48:?, CROSS_EDGE: B:76:0x004d \-\> B:48:?, CROSS_EDGE: B:72:0x0044 \-\> B:73:0x0045, CROSS_EDGE: B:68:0x003b \-\> B:77:0x004e, BACK_EDGE: B:66:0x0035 \-\> B:56:0x001c, CROSS_EDGE: B:54:0x0019 \-\> B:80:0x005f, CROSS_EDGE: B:84:0x006d \-\> B:48:?, CROSS_EDGE: B:86:0x0073 \-\> B:48:?, CROSS_EDGE: B:89:0x0078 \-\> B:48:?\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0074, blocks: (B:50:0x000b, B:52:0x0013, B:56:0x001c, B:59:0x0023, B:61:0x0029, B:65:0x0031, B:67:0x0037, B:69:0x003d, B:75:0x0048, B:76:0x004d, B:77:0x004e, B:80:0x005f), top: B:90:0x000b \}\lTYPE_VARS: [E]\lSIGNATURE: (TE;)Ljava\/lang\/Object;\lDebug Info:\l  0x0003\-0x002c: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0004\-0x002c: r2 '$i$f$withLock' I\l  0x000b\-0x002c: r4 '$i$a$\-withLock\-ArrayChannel$offerInternal$1' I\l  0x000d\-0x002c: r5 'size' I\l  0x003e\-0x0045: r7 '$i$a$\-assert\-ArrayChannel$offerInternal$1$3' I\l  0x0001\-0x004d: r0 'receive' Ljava\/lang\/Object;\l  0x0030\-0x004d: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0030\-0x004d: r2 '$i$f$withLock' I\l  \-1 \-0x004d: r10 'element' Ljava\/lang\/Object;\l  0x0030\-0x0051: r4 '$i$a$\-withLock\-ArrayChannel$offerInternal$1' I\l  0x0030\-0x0051: r5 'size' I\l  0x0035\-0x0051: r6 'token' Lkotlinx\/coroutines\/internal\/Symbol;\l  0x004e\-0x0057: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x004e\-0x0057: r2 '$i$f$withLock' I\l  0x005f\-0x0064: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x005f\-0x0064: r2 '$i$f$withLock' I\l  0x005f\-0x0064: r4 '$i$a$\-withLock\-ArrayChannel$offerInternal$1' I\l  0x005f\-0x0064: r5 'size' I\l  0x0068\-0x006a: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0068\-0x006a: r2 '$i$f$withLock' I\l  0x0068\-0x006a: r4 '$i$a$\-withLock\-ArrayChannel$offerInternal$1' I\l  0x0068\-0x006a: r5 'size' I\l  0x0068\-0x006a: r6 'it' Lkotlinx\/coroutines\/internal\/Symbol;\l  0x0069\-0x006a: r7 '$i$a$\-let\-ArrayChannel$offerInternal$1$2' I\l  0x006e\-0x0070: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x006e\-0x0070: r2 '$i$f$withLock' I\l  0x006e\-0x0070: r4 '$i$a$\-withLock\-ArrayChannel$offerInternal$1' I\l  0x006e\-0x0070: r5 'size' I\l  0x006e\-0x0070: r6 'it' Lkotlinx\/coroutines\/channels\/Closed;\l  0x006f\-0x0070: r7 '$i$a$\-let\-ArrayChannel$offerInternal$1$1' I\l  0x004e\-0x0078: r0 'receive' Ljava\/lang\/Object;\l  0x0074\-0x0078: r1 '$this$withLock$iv' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  0x0074\-0x0078: r2 '$i$f$withLock' I\l  0x004e\-0x0078: r10 'element' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractSendChannel.offerInternal(E):java.lang.Object]\l}"];
MethodNode -> Node_47;Node_47 -> Node_49;
Node_49 -> Node_90;
Node_90 -> Node_50;
Node_90 -> Node_87;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_85;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_83;
Node_54 -> Node_56[style=dashed];
Node_54 -> Node_80;
Node_56 -> Node_57;
Node_57 -> Node_59;
Node_57 -> Node_91[style=dashed];
Node_59 -> Node_60;
Node_60 -> Node_64;
Node_60 -> Node_93[style=dashed];
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_56;
Node_66 -> Node_92[style=dashed];
Node_92 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_77;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_72;
Node_71 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_75;
Node_74 -> Node_77;
Node_75 -> Node_76;
Node_76 -> Node_48;
Node_72 -> Node_73;
Node_77 -> Node_78;
Node_78 -> Node_79;
Node_79 -> Node_48;
Node_93 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_48;
Node_91 -> Node_58;
Node_58 -> Node_80;
Node_80 -> Node_81;
Node_81 -> Node_82;
Node_82 -> Node_48;
Node_83 -> Node_84;
Node_84 -> Node_48;
Node_85 -> Node_86;
Node_86 -> Node_48;
Node_87 -> Node_88;
Node_88 -> Node_89;
Node_89 -> Node_48;
}

