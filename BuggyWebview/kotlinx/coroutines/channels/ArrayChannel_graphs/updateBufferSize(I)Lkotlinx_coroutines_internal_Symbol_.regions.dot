digraph "CFG forkotlinx.coroutines.channels.ArrayChannel.updateBufferSize(I)Lkotlinx\/coroutines\/internal\/Symbol;" {
subgraph cluster_Region_1779504525 {
label = "R(1:(2:(2:3|4)|(2:6|7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1312050972 {
label = "R(2:(2:3|4)|(2:6|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_726834198 {
label = "IF [B:19:0x0003] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0003|if (r4 \< r3.capacity) goto L3\l}"];
subgraph cluster_Region_1093213173 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0005|r3.size = r4 + 1\l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_603378464 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000a}"];
subgraph cluster_SwitchRegion_1331049709 {
label = "Switch: 4
 case 1 -> R(1:13)
 case 2 -> R(1:11)
 case 3 -> R(1:14)
 case default -> R(1:9)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0014|switch(kotlinx.coroutines.channels.ArrayChannel.WhenMappings.$EnumSwitchMapping$0[r3.onBufferOverflow.ordinal()]) \{\l    case 1: goto L12;\l    case 2: goto L10;\l    case 3: goto L14;\l    default: goto L8;\l\}\l}"];
subgraph cluster_Region_1893446461 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0023|RETURN\lORIG_RETURN\l|return kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED\l}"];
}
subgraph cluster_Region_2032461920 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS\l}"];
}
subgraph cluster_Region_1826507703 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
subgraph cluster_Region_307358621 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x001c|throw new kotlin.NoWhenBranchMatchedException()\l}"];
}
}
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0000}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0017}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x001e}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0021}"];
MethodNode[shape=record,label="{private final kotlinx.coroutines.internal.Symbol kotlinx.coroutines.channels.ArrayChannel.updateBufferSize((r3v0 'this' kotlinx.coroutines.channels.ArrayChannel\<E\> A[IMMUTABLE_TYPE, THIS]), (r4v0 'currentSize' int A[D('currentSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x001c \-\> B:17:?, CROSS_EDGE: B:29:0x0023 \-\> B:17:?, CROSS_EDGE: B:28:0x0021 \-\> B:29:0x0023, CROSS_EDGE: B:23:0x0014 \-\> B:29:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_16;Node_19 -> Node_20;
Node_19 -> Node_22[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_27;
Node_23 -> Node_28;
Node_23 -> Node_31;
Node_29 -> Node_17;
Node_30 -> Node_17;
Node_31 -> Node_17;
Node_25 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_24 -> Node_25;
Node_27 -> Node_30;
Node_28 -> Node_29;
}

