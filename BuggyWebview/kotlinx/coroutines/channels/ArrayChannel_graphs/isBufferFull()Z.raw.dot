digraph "CFG forkotlinx.coroutines.channels.ArrayChannel.isBufferFull()Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r2 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.size int  (LINE:50)\l0x0002: IGET  (r1 I:int) = (r2 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.capacity int \l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000e \l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: IGET  (r0 I:kotlinx.coroutines.channels.BufferOverflow) = (r2 I:kotlinx.coroutines.channels.ArrayChannel) kotlinx.coroutines.channels.ArrayChannel.onBufferOverflow kotlinx.coroutines.channels.BufferOverflow \l0x0008: SGET  (r1 I:kotlinx.coroutines.channels.BufferOverflow) =  kotlinx.coroutines.channels.BufferOverflow.SUSPEND kotlinx.coroutines.channels.BufferOverflow \l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000e \l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|SYNTHETIC\lRETURN\l|0x000c: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000f: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|RETURN\lORIG_RETURN\l|0x000e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public final boolean kotlinx.coroutines.channels.ArrayChannel.isBufferFull((r2 'this' I:kotlinx.coroutines.channels.ArrayChannel\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000e \-\> B:18:0x000f, CROSS_EDGE: B:13:0x0004 \-\> B:17:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.AbstractSendChannel.isBufferFull():boolean]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

