digraph "CFG forkotlinx.coroutines.channels.TickerChannelsKt.ticker(JJLkotlin\/coroutines\/CoroutineContext;Lkotlinx\/coroutines\/channels\/TickerMode;)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: MOVE  (r7 I:??[long, double]) = (r16 I:??[long, double] A[D('delayMillis' long)])  (LINE:68)\l0x0002: MOVE  (r9 I:??[long, double]) = (r18 I:??[long, double] A[D('initialDelayMillis' long)]) \l0x0004: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0005: CONST  (r1 I:??[long, double]) = (0 ??[long, double]) \l0x0007: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: CMP_L  (r3 I:int) = (r7 I:long), (r1 I:long) \l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|0x000a: IF  (r3 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:24:0x000e \l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|0x000c: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|0x000f: CONST_STR  (r4 I:java.lang.String) =  \" ms\" \l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|0x0011: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x005f \l}"];
Node_27 [shape=record,label="{27\:\ 0x0013|0x0013: CMP_L  (r3 I:int) = (r9 I:long), (r1 I:long)  (LINE:69)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0015|0x0015: IF  (r3 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:30:0x0018 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0018|0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0019|0x0019: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x003e \l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|0x001b: SGET  (r0 I:kotlinx.coroutines.GlobalScope) =  kotlinx.coroutines.GlobalScope.INSTANCE kotlinx.coroutines.GlobalScope  (LINE:70)\l0x001d: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001e: CHECK_CAST (r12 I:kotlinx.coroutines.CoroutineScope) = (kotlinx.coroutines.CoroutineScope) (r12 I:??[OBJECT, ARRAY]) \l0x0020: INVOKE  (r0 I:kotlinx.coroutines.CoroutineDispatcher) =  type: STATIC call: kotlinx.coroutines.Dispatchers.getUnconfined():kotlinx.coroutines.CoroutineDispatcher A[MD:():kotlinx.coroutines.CoroutineDispatcher (m)]\l0x0024: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('context' kotlin.coroutines.CoroutineContext)]) \l0x0026: INVOKE  (r14 I:kotlin.coroutines.CoroutineContext) = (r0 I:kotlinx.coroutines.CoroutineDispatcher), (r13 I:kotlin.coroutines.CoroutineContext) type: VIRTUAL call: kotlinx.coroutines.CoroutineDispatcher.plus(kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext A[MD:(kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext (m)]\l0x002a: NEW_INSTANCE  (r15 I:kotlinx.coroutines.channels.TickerChannelsKt$ticker$3) =  kotlinx.coroutines.channels.TickerChannelsKt$ticker$3 \l0x002c: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002d: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY]) \l0x002e: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r21 I:??[OBJECT, ARRAY] A[D('mode' kotlinx.coroutines.channels.TickerMode)]) \l0x0030: MOVE  (r2 I:??[long, double]) = (r16 I:??[long, double] A[D('delayMillis' long)]) \l0x0032: MOVE  (r4 I:??[long, double]) = (r18 I:??[long, double] A[D('initialDelayMillis' long)]) \l0x0034: INVOKE  \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$ticker$3)\l  (r1 I:kotlinx.coroutines.channels.TickerMode)\l  (r2 I:long)\l  (r4 I:long)\l  (r6 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.\<init\>(kotlinx.coroutines.channels.TickerMode, long, long, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.channels.TickerMode, long, long, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.channels.TickerChannelsKt$ticker$3\>):void (m)]\l0x0037: CHECK_CAST (r15 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r15 I:??[OBJECT, ARRAY]) \l0x0039: INVOKE  (r0 I:kotlinx.coroutines.channels.ReceiveChannel) = \l  (r12 I:kotlinx.coroutines.CoroutineScope)\l  (r14 I:kotlin.coroutines.CoroutineContext)\l  (r11 I:int)\l  (r15 I:kotlin.jvm.functions.Function2)\l type: STATIC call: kotlinx.coroutines.channels.ProduceKt.produce(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlin.jvm.functions.Function2):kotlinx.coroutines.channels.ReceiveChannel A[MD:\<E\>:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.channels.ProducerScope\<? super E\>, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>):kotlinx.coroutines.channels.ReceiveChannel\<E\> (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x003d|RETURN\l|0x003d: RETURN  (r0 I:kotlinx.coroutines.channels.ReceiveChannel\<kotlin.Unit\>) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x003e|0x003e: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('context' kotlin.coroutines.CoroutineContext)])  (LINE:113)\l0x0040: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0041: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:69)\l0x0043: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0046: CONST_STR  (r2 I:java.lang.String) =  \"Expected non\-negative initial delay, but has \" \l0x0048: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004b: INVOKE  (r1 I:java.lang.StringBuilder), (r9 I:long) type: VIRTUAL call: java.lang.StringBuilder.append(long):java.lang.StringBuilder A[MD:(long):java.lang.StringBuilder (c)]\l0x004e: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0051: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-TickerChannelsKt$ticker$2' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0055: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0057: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x005b: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x005e|0x005e: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_36 [shape=record,label="{36\:\ 0x005f|0x005f: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('context' kotlin.coroutines.CoroutineContext)])  (LINE:113)\l0x0061: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0062: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:68)\l0x0064: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0067: CONST_STR  (r2 I:java.lang.String) =  \"Expected non\-negative delay, but has \" \l0x0069: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x006c: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:long) type: VIRTUAL call: java.lang.StringBuilder.append(long):java.lang.StringBuilder A[MD:(long):java.lang.StringBuilder (c)]\l0x006f: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0072: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-TickerChannelsKt$ticker$1' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0076: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0078: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x007c: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x007f|0x007f: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|0x000e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.channels.ReceiveChannel\<kotlin.Unit\> kotlinx.coroutines.channels.TickerChannelsKt.ticker((r16 I:long A[D('delayMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:long A[D('initialDelayMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:kotlinx.coroutines.channels.TickerMode A[D('mode' kotlinx.coroutines.channels.TickerMode), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x005e \-\> B:20:?, CROSS_EDGE: B:28:0x0015 \-\> B:31:0x0019, CROSS_EDGE: B:37:0x007f \-\> B:20:?, CROSS_EDGE: B:24:0x000e \-\> B:25:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0041\-0x0055: r0 '$i$a$\-require\-TickerChannelsKt$ticker$2' I\l  0x0062\-0x0076: r0 '$i$a$\-require\-TickerChannelsKt$ticker$1' I\l  \-1 \-0x007f: r16 'delayMillis' J\l  \-1 \-0x007f: r18 'initialDelayMillis' J\l  \-1 \-0x007f: r20 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x007f: r21 'mode' Lkotlinx\/coroutines\/channels\/TickerMode;\lSIGNATURE: (JJLkotlin\/coroutines\/CoroutineContext;Lkotlinx\/coroutines\/channels\/TickerMode;)Lkotlinx\/coroutines\/channels\/ReceiveChannel\<Lkotlin\/Unit;\>;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_36;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_20;
Node_34 -> Node_35;
Node_35 -> Node_20;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_24 -> Node_25;
}

