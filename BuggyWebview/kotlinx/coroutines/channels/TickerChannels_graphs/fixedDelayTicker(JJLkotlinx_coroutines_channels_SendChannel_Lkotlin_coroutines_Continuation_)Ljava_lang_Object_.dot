digraph "CFG forkotlinx.coroutines.channels.TickerChannelsKt.fixedDelayTicker(JJLkotlinx\/coroutines\/channels\/SendChannel;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000}"];
Node_30 [shape=record,label="{30\:\ 0x0002|if ((r8 instanceof kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1) == false) goto L24\l}"];
Node_31 [shape=record,label="{31\:\ 0x0004|kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 r0 = (kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1) r8\l}"];
Node_32 [shape=record,label="{32\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) == 0) goto L24\l}"];
Node_33 [shape=record,label="{33\:\ 0x000e|r0.label = r0.label \- Integer.MIN_VALUE\l}"];
Node_35 [shape=record,label="{35\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1) = (r0v1 kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1), (r0v5 kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1) binds: [B:34:0x0014, B:33:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r8 = r0\ljava.lang.Object r0 = r8.result\ljava.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_36 [shape=record,label="{36\:\ 0x0022|switch(r8.label) \{\l    case 0: goto L20;\l    case 1: goto L19;\l    case 2: goto L18;\l    case 3: goto L11;\l    default: goto L8;\l\}\l}"];
Node_37 [shape=record,label="{37\:\ 0x0025}"];
Node_38 [shape=record,label="{38\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x002d|long r3 = r8.J$0\lkotlin.ResultKt.throwOnFailure(r0)\lr5 = (kotlinx.coroutines.channels.SendChannel) r8.L$0\l}"];
Node_47 [shape=record,label="{47\:\ 0x005e|PHI: r3 r5 \l  PHI: (r3v4 'delayMillis' long) = (r3v0 'delayMillis' long), (r3v1 'delayMillis' long), (r3v3 'delayMillis' long), (r3v5 'delayMillis' long) binds: [B:45:0x005c, B:41:0x0041, B:51:0x0079, B:39:0x002d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v8 'channel' kotlinx.coroutines.channels.SendChannel) = (r5v2 'channel' kotlinx.coroutines.channels.SendChannel), (r5v11 'channel' kotlinx.coroutines.channels.SendChannel), (r5v12 'channel' kotlinx.coroutines.channels.SendChannel), (r5v13 'channel' kotlinx.coroutines.channels.SendChannel) binds: [B:45:0x005c, B:41:0x0041, B:51:0x0079, B:39:0x002d] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.Unit r6 = kotlin.Unit.INSTANCE\lr8.L$0 = r5\lr8.J$0 = r3\lr8.label = 2\ljava.lang.Object r6 = r5.send(r6, r8)\lr5 = r5\l}"];
Node_48 [shape=record,label="{48\:\ 0x006b|if (r6 != r1) goto L15\l}"];
Node_49 [shape=record,label="{49\:\ 0x006d|RETURN\l|return r1\l}"];
Node_50 [shape=record,label="{50\:\ 0x006e|PHI: r3 r5 \l  PHI: (r3v3 'delayMillis' long) = (r3v2 'delayMillis' long), (r3v4 'delayMillis' long) binds: [B:40:0x0037, B:48:0x006b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v7 'channel' kotlinx.coroutines.channels.SendChannel) = (r5v14 'channel' kotlinx.coroutines.channels.SendChannel), (r5v15 'channel' kotlinx.coroutines.channels.SendChannel) binds: [B:40:0x0037, B:48:0x006b] A[DONT_GENERATE, DONT_INLINE]\l|r8.L$0 = r5\lr8.J$0 = r3\lr8.label = 3\lr5 = r5\l}"];
Node_51 [shape=record,label="{51\:\ 0x0079|if (kotlinx.coroutines.DelayKt.delay(r3, r8) != r1) goto L12\l}"];
Node_52 [shape=record,label="{52\:\ 0x007b|RETURN\l|return r1\l}"];
Node_40 [shape=record,label="{40\:\ 0x0037|long r3 = r8.J$0\lkotlin.ResultKt.throwOnFailure(r0)\lr5 = (kotlinx.coroutines.channels.SendChannel) r8.L$0\l}"];
Node_41 [shape=record,label="{41\:\ 0x0041|long r3 = r8.J$0\lkotlin.ResultKt.throwOnFailure(r0)\lr5 = (kotlinx.coroutines.channels.SendChannel) r8.L$0\l}"];
Node_42 [shape=record,label="{42\:\ 0x004b|kotlin.ResultKt.throwOnFailure(r0)\lr8.L$0 = r7\lr8.J$0 = r3\lr8.label = 1\l}"];
Node_43 [shape=record,label="{43\:\ 0x0059|if (kotlinx.coroutines.DelayKt.delay(r5, r8) != r1) goto L23\l}"];
Node_44 [shape=record,label="{44\:\ 0x005b|RETURN\l|return r1\l}"];
Node_45 [shape=record,label="{45\:\ 0x005c|r5 = r7\l}"];
Node_34 [shape=record,label="{34\:\ 0x0014|kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 r0 = new kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1(r8)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.channels.TickerChannelsKt.fixedDelayTicker((r3v0 'delayMillis' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'initialDelayMillis' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlinx.coroutines.channels.SendChannel\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:49:0x006d \-\> B:28:?, CROSS_EDGE: B:52:0x007b \-\> B:28:?, BACK_EDGE: B:51:0x0079 \-\> B:47:0x005e, CROSS_EDGE: B:40:0x0037 \-\> B:50:0x006e, CROSS_EDGE: B:41:0x0041 \-\> B:47:0x005e, CROSS_EDGE: B:44:0x005b \-\> B:28:?, CROSS_EDGE: B:45:0x005c \-\> B:47:0x005e, CROSS_EDGE: B:34:0x0014 \-\> B:35:0x0019, CROSS_EDGE: B:30:0x0002 \-\> B:34:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (JJLkotlinx\/coroutines\/channels\/SendChannel\<\-Lkotlin\/Unit;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lJadxCommentsAttr\{\l WARN: \l \-\> Unsupported multi\-entry loop pattern (BACK_EDGE: B:51:0x0079 \-\> B:47:0x005e). Please submit an issue!!!\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [101=5]\}\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_39;
Node_36 -> Node_40;
Node_36 -> Node_41;
Node_36 -> Node_42;
Node_37 -> Node_38;
Node_38 -> Node_28;
Node_39 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_28;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_47;
Node_52 -> Node_28;
Node_40 -> Node_50;
Node_41 -> Node_47;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_28;
Node_45 -> Node_47;
Node_34 -> Node_35;
}

