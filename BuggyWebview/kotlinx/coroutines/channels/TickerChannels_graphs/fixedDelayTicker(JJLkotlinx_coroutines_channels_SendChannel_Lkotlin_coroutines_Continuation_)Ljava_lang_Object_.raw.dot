digraph "CFG forkotlinx.coroutines.channels.TickerChannelsKt.fixedDelayTicker(JJLkotlinx\/coroutines\/channels\/SendChannel;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r8 I:??[OBJECT, ARRAY]) kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0014 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1) = (kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1) kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0014 \l}"];
Node_33 [shape=record,label="{33\:\ 0x000e|0x000e: IGET  (r8 I:int) = (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1) kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.label int \l0x0010: ARITH  (r8 I:int) = (r8 I:int) \- (r2 I:int) \l0x0011: IPUT  (r8 I:int), (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1) kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.label int \l}"];
Node_35 [shape=record,label="{35\:\ 0x0019|0x0019: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r0 I:java.lang.Object) = \l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.result java.lang.Object \l0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0020: IGET  (r2 I:int) = \l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.label int  (LINE:101)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0022|0x0022: SWITCH  (r2 I:??)\l case 0: goto B:42:0x004b\l case 1: goto B:41:0x0041\l case 2: goto B:40:0x0037\l case 3: goto B:39:0x002d\l default: goto B:37:0x0025 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0025|0x0025: NEW_INSTANCE  (r3 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:109)\l0x0027: CONST_STR  (r4 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x0029: INVOKE  (r3 I:java.lang.IllegalStateException), (r4 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x002c|0x002c: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x002d|0x002d: IGET  (r3 I:long) = \l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.J$0 long  (LINE:101)\l0x002f: IGET  (r5 I:java.lang.Object) = \l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.L$0 java.lang.Object \l0x0031: CHECK_CAST (r5 I:kotlinx.coroutines.channels.SendChannel) = (kotlinx.coroutines.channels.SendChannel) (r5 I:??[OBJECT, ARRAY]) \l0x0033: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x005e|0x005e: SGET  (r6 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:108)\l0x0060: IPUT  \l  (r5 I:java.lang.Object A[D('channel' kotlinx.coroutines.channels.SendChannel)])\l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.L$0 java.lang.Object \l0x0062: IPUT  \l  (r3 I:long A[D('delayMillis' long)])\l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.J$0 long \l0x0064: CONST  (r7 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0065: IPUT  \l  (r7 I:int)\l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.label int \l0x0067: INVOKE  (r6 I:java.lang.Object) = \l  (r5 I:kotlinx.coroutines.channels.SendChannel A[D('channel' kotlinx.coroutines.channels.SendChannel)])\l  (r6 I:java.lang.Object)\l  (r8 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.channels.SendChannel.send(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(E, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x006b|0x006b: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x006e \l}"];
Node_49 [shape=record,label="{49\:\ 0x006d|RETURN\l|0x006d: RETURN  (r1 I:java.lang.Object)  (LINE:101)\l}"];
Node_50 [shape=record,label="{50\:\ 0x006e|0x006e: IPUT  \l  (r5 I:java.lang.Object A[D('channel' kotlinx.coroutines.channels.SendChannel)])\l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.L$0 java.lang.Object  (LINE:109)\l0x0070: IPUT  \l  (r3 I:long A[D('delayMillis' long)])\l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.J$0 long \l0x0072: CONST  (r6 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0073: IPUT  \l  (r6 I:int)\l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.label int \l0x0075: INVOKE  (r6 I:java.lang.Object) = \l  (r3 I:long A[D('delayMillis' long)])\l  (r8 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: STATIC call: kotlinx.coroutines.DelayKt.delay(long, kotlin.coroutines.Continuation):java.lang.Object A[MD:(long, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x0079|0x0079: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x005e \l}"];
Node_52 [shape=record,label="{52\:\ 0x007b|RETURN\l|0x007b: RETURN  (r1 I:java.lang.Object)  (LINE:101)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0037|0x0037: IGET  (r3 I:long A[D('delayMillis' long)]) = \l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.J$0 long \l0x0039: IGET  (r5 I:java.lang.Object) = \l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.L$0 java.lang.Object \l0x003b: CHECK_CAST (r5 I:kotlinx.coroutines.channels.SendChannel) = (kotlinx.coroutines.channels.SendChannel) (r5 I:??[OBJECT, ARRAY]) \l0x003d: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0041|0x0041: IGET  (r3 I:long A[D('delayMillis' long)]) = \l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.J$0 long \l0x0043: IGET  (r5 I:java.lang.Object) = \l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.L$0 java.lang.Object \l0x0045: CHECK_CAST (r5 I:kotlinx.coroutines.channels.SendChannel) = (kotlinx.coroutines.channels.SendChannel) (r5 I:??[OBJECT, ARRAY]) \l0x0047: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x004b|0x004b: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x004e: IPUT  \l  (r7 I:java.lang.Object A[D('channel' kotlinx.coroutines.channels.SendChannel)])\l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.L$0 java.lang.Object  (LINE:106)\l0x0050: IPUT  \l  (r3 I:long A[D('delayMillis' long)])\l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.J$0 long \l0x0052: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0053: IPUT  \l  (r2 I:int)\l  (r8 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.label int \l0x0055: INVOKE  (r5 I:java.lang.Object A[D('initialDelayMillis' long)]) = \l  (r5 I:long A[D('initialDelayMillis' long)])\l  (r8 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: STATIC call: kotlinx.coroutines.DelayKt.delay(long, kotlin.coroutines.Continuation):java.lang.Object A[MD:(long, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0059|0x0059: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('initialDelayMillis' long)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x005c \l}"];
Node_44 [shape=record,label="{44\:\ 0x005b|RETURN\l|0x005b: RETURN  (r1 I:java.lang.Object)  (LINE:101)\l}"];
Node_45 [shape=record,label="{45\:\ 0x005c|0x005c: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('channel' kotlinx.coroutines.channels.SendChannel)])  (LINE:106)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1) =  kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1 \l0x0016: INVOKE  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1), (r8 I:kotlin.coroutines.Continuation) type: DIRECT call: kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1.\<init\>(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<? super kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1\>):void (m)]\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.channels.TickerChannelsKt.fixedDelayTicker((r3 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlinx.coroutines.channels.SendChannel\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:49:0x006d \-\> B:28:?, CROSS_EDGE: B:52:0x007b \-\> B:28:?, BACK_EDGE: B:51:0x0079 \-\> B:47:0x005e, CROSS_EDGE: B:40:0x0037 \-\> B:50:0x006e, CROSS_EDGE: B:41:0x0041 \-\> B:47:0x005e, CROSS_EDGE: B:44:0x005b \-\> B:28:?, CROSS_EDGE: B:45:0x005c \-\> B:47:0x005e, CROSS_EDGE: B:34:0x0014 \-\> B:35:0x0019, CROSS_EDGE: B:30:0x0002 \-\> B:34:0x0014\lINLINE_NOT_NEEDED\lSIGNATURE: (JJLkotlinx\/coroutines\/channels\/SendChannel\<\-Lkotlin\/Unit;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x001c\-0x0025: r0 '$result' Ljava\/lang\/Object;\l  0x001a\-0x0025: r8 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x002f\-0x0037: r3 'delayMillis' J\l  0x0033\-0x0037: r5 'channel' Lkotlinx\/coroutines\/channels\/SendChannel;\l  0x0039\-0x0041: r3 'delayMillis' J\l  0x003d\-0x0041: r5 'channel' Lkotlinx\/coroutines\/channels\/SendChannel;\l  0x0043\-0x004b: r3 'delayMillis' J\l  0x0047\-0x004b: r5 'channel' Lkotlinx\/coroutines\/channels\/SendChannel;\l  0x004e\-0x0059: r5 'initialDelayMillis' J\l  0x004e\-0x005d: r7 'channel' Lkotlinx\/coroutines\/channels\/SendChannel;\l  0x002d\-0x0089: r0 '$result' Ljava\/lang\/Object;\l  0x004e\-0x0089: r3 'delayMillis' J\l  0x005d\-0x0089: r5 'channel' Lkotlinx\/coroutines\/channels\/SendChannel;\l  0x002d\-0x0089: r8 '$continuation' Lkotlin\/coroutines\/Continuation;\lJadxCommentsAttr\{\l WARN: \l \-\> Unsupported multi\-entry loop pattern (BACK_EDGE: B:51:0x0079 \-\> B:47:0x005e). Please submit an issue!!!\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [101=5]\}\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_39;
Node_36 -> Node_40;
Node_36 -> Node_41;
Node_36 -> Node_42;
Node_37 -> Node_38;
Node_38 -> Node_28;
Node_39 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_28;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_47;
Node_52 -> Node_28;
Node_40 -> Node_50;
Node_41 -> Node_47;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_28;
Node_45 -> Node_47;
Node_34 -> Node_35;
}

