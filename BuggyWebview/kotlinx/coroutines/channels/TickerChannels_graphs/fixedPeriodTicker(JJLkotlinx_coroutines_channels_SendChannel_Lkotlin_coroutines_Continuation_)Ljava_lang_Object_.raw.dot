digraph "CFG forkotlinx.coroutines.channels.TickerChannelsKt.fixedPeriodTicker(JJLkotlinx\/coroutines\/channels\/SendChannel;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_53 [shape=record,label="{53\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_55 [shape=record,label="{55\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r23 I:??[OBJECT, ARRAY]) \l0x0002: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY]) kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 \l}"];
Node_56 [shape=record,label="{56\:\ 0x0004|0x0004: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0016 \l}"];
Node_57 [shape=record,label="{57\:\ 0x0006|0x0006: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0007: CHECK_CAST (r1 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1) = (kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1) (r1 I:??[OBJECT, ARRAY]) \l0x0009: IGET  (r2 I:int) = (r1 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1) kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.label int \l0x000b: CONST  (r3 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000d: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) & (r3 I:??[int, boolean, short, byte, char]) \l}"];
Node_58 [shape=record,label="{58\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0016 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0010|0x0010: IGET  (r0 I:int) = (r1 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1) kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.label int \l0x0012: ARITH  (r0 I:int) = (r0 I:int) \- (r3 I:int) \l0x0013: IPUT  (r0 I:int), (r1 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1) kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.label int \l}"];
Node_61 [shape=record,label="{61\:\ 0x001b|0x001b: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x001c: IGET  (r1 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.result java.lang.Object \l0x001e: INVOKE  (r2 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0022: IGET  (r3 I:int) = \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.label int  (LINE:78)\l0x0024: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x0025|0x0025: SWITCH  (r3 I:??)\l case 0: goto B:69:0x0066\l case 1: goto B:68:0x005a\l case 2: goto B:67:0x004e\l case 3: goto B:66:0x003f\l case 4: goto B:65:0x0030\l default: goto B:63:0x0028 \l}"];
Node_63 [shape=record,label="{63\:\ 0x0028|0x0028: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException A[D('$continuation' kotlin.coroutines.Continuation)]) =  java.lang.IllegalStateException  (LINE:96)\l0x002a: CONST_STR  (r1 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x002c: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_64 [shape=record,label="{64\:\ 0x002f|0x002f: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_54 [shape=record,label="{54\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_65 [shape=record,label="{65\:\ 0x0030|0x0030: IGET  (r5 I:long) = \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$1 long  (LINE:78)\l0x0032: IGET  (r7 I:long) = \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$0 long \l0x0034: IGET  (r3 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.L$0 java.lang.Object \l0x0036: CHECK_CAST (r3 I:kotlinx.coroutines.channels.SendChannel) = (kotlinx.coroutines.channels.SendChannel) (r3 I:??[OBJECT, ARRAY]) \l0x0038: INVOKE  (r1 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x003b: MOVE  (r9 I:??[long, double]) = (r5 I:??[long, double] A[D('delayNs' long)]) \l0x003c: MOVE  (r5 I:??[long, double] A[D('delayNs' long)]) = (r7 I:??[long, double] A[D('deadline' long)]) \l}"];
Node_81 [shape=record,label="{81\:\ 0x00a4|0x00a5: ARITH  (r5 I:long) = (r5 I:long A[D('deadline' long)]) + (r9 I:long A[D('delayNs' long)])  (LINE:87)\l0x00a6: SGET  (r7 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:88)\l0x00a8: IPUT  \l  (r3 I:java.lang.Object A[D('channel' kotlinx.coroutines.channels.SendChannel)])\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.L$0 java.lang.Object \l0x00aa: IPUT  \l  (r5 I:long A[D('deadline' long)])\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$0 long \l0x00ac: IPUT  \l  (r9 I:long A[D('delayNs' long)])\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$1 long \l0x00ae: CONST  (r8 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x00af: IPUT  \l  (r8 I:int)\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.label int \l0x00b1: INVOKE  (r7 I:java.lang.Object) = \l  (r3 I:kotlinx.coroutines.channels.SendChannel A[D('channel' kotlinx.coroutines.channels.SendChannel)])\l  (r7 I:java.lang.Object)\l  (r0 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.channels.SendChannel.send(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(E, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_82 [shape=record,label="{82\:\ 0x00b5|0x00b5: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:0x00b8 \l}"];
Node_83 [shape=record,label="{83\:\ 0x00b7|RETURN\l|0x00b7: RETURN  (r2 I:java.lang.Object)  (LINE:78)\l}"];
Node_84 [shape=record,label="{84\:\ 0x00b8|0x00b8: MOVE  (r7 I:??[long, double]) = (r5 I:??[long, double] A[D('deadline' long)])  (LINE:88)\l0x00b9: MOVE  (r5 I:??[long, double] A[D('deadline' long)]) = (r9 I:??[long, double] A[D('delayNs' long)]) \l}"];
Node_85 [shape=record,label="{85\:\ 0x00ba|0x00ba: INVOKE  (r9 I:kotlinx.coroutines.AbstractTimeSource) =  type: STATIC call: kotlinx.coroutines.AbstractTimeSourceKt.getTimeSource():kotlinx.coroutines.AbstractTimeSource A[MD:():kotlinx.coroutines.AbstractTimeSource (m)] (LINE:89)\l}"];
Node_86 [shape=record,label="{86\:\ 0x00be|0x00be: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:88:0x00c2 \l}"];
Node_87 [shape=record,label="{87\:\ 0x00c0|0x00c0: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_89 [shape=record,label="{89\:\ 0x00ca|0x00ca: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:91:0x00d1 \l}"];
Node_90 [shape=record,label="{90\:\ 0x00cc|0x00cc: INVOKE  (r9 I:long) =  type: STATIC call: java.lang.System.nanoTime():long A[MD:():long (c)]\l}"];
Node_92 [shape=record,label="{92\:\ 0x00d5|0x00d5: ARITH  (r11 I:long) = (r7 I:long A[D('deadline' long)]) \- (r9 I:long A[D('now' long)])  (LINE:90)\l0x00d7: CONST  (r13 I:??[long, double]) = (0 ??[long, double]) \l0x00d9: INVOKE  (r11 I:long) = (r11 I:long), (r13 I:long) type: STATIC call: kotlin.ranges.RangesKt.coerceAtLeast(long, long):long A[MD:(long, long):long (m)]\l0x00dd: CMP_L  (r15 I:int) = (r11 I:long A[D('nextDelay' long)]), (r13 I:long)  (LINE:91)\l}"];
Node_93 [shape=record,label="{93\:\ 0x00df|0x00df: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:101:0x0105 \l}"];
Node_94 [shape=record,label="{94\:\ 0x00e1|0x00e1: CMP_L  (r15 I:int) = (r5 I:long A[D('delayNs' long)]), (r13 I:long) \l}"];
Node_95 [shape=record,label="{95\:\ 0x00e3|0x00e3: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:101:0x0105 \l}"];
Node_96 [shape=record,label="{96\:\ 0x00e5|0x00e5: ARITH  (r11 I:long A[D('nextDelay' long)]) = (r9 I:long A[D('now' long)]) \- (r7 I:long A[D('deadline' long)])  (LINE:92)\l0x00e7: ARITH  (r11 I:long) = (r11 I:long) % (r5 I:long A[D('delayNs' long)]) \l0x00e8: ARITH  (r7 I:long A[D('deadline' long)]) = (r5 I:long A[D('delayNs' long)]) \- (r11 I:long) \l0x00ea: ARITH  (r9 I:long) = (r9 I:long A[D('now' long)]) + (r7 I:long A[D('adjustedDelay' long)])  (LINE:93)\l0x00eb: INVOKE  (r11 I:long) = (r7 I:long A[D('adjustedDelay' long)]) type: STATIC call: kotlinx.coroutines.EventLoop_commonKt.delayNanosToMillis(long):long A[MD:(long):long (m)] (LINE:94)\l0x00ef: IPUT  \l  (r3 I:java.lang.Object A[D('channel' kotlinx.coroutines.channels.SendChannel)])\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.L$0 java.lang.Object \l0x00f1: IPUT  \l  (r9 I:long A[D('deadline' long)])\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$0 long \l0x00f3: IPUT  \l  (r5 I:long A[D('delayNs' long)])\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$1 long \l0x00f5: CONST  (r13 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x00f6: IPUT  \l  (r13 I:int)\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.label int \l0x00f8: INVOKE  (r7 I:java.lang.Object A[D('adjustedDelay' long)]) = (r11 I:long), (r0 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)]) type: STATIC call: kotlinx.coroutines.DelayKt.delay(long, kotlin.coroutines.Continuation):java.lang.Object A[MD:(long, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_97 [shape=record,label="{97\:\ 0x00fc|0x00fc: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('adjustedDelay' long)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:99:0x00ff \l}"];
Node_98 [shape=record,label="{98\:\ 0x00fe|RETURN\l|0x00fe: RETURN  (r2 I:java.lang.Object)  (LINE:78)\l}"];
Node_99 [shape=record,label="{99\:\ 0x00ff|0x00ff: MOVE  (r16 I:??[long, double]) = (r5 I:??[long, double] A[D('delayNs' long)])  (LINE:94)\l0x0101: MOVE  (r5 I:??[long, double] A[D('delayNs' long)]) = (r9 I:??[long, double] A[D('deadline' long)]) \l0x0102: MOVE  (r9 I:??[long, double] A[D('deadline' long)]) = (r16 I:??[long, double]) \l}"];
Node_101 [shape=record,label="{101\:\ 0x0105|0x0105: INVOKE  (r9 I:long) = (r11 I:long A[D('nextDelay' long)]) type: STATIC call: kotlinx.coroutines.EventLoop_commonKt.delayNanosToMillis(long):long A[MD:(long):long (m)] (LINE:96)\l0x0109: IPUT  \l  (r3 I:java.lang.Object A[D('channel' kotlinx.coroutines.channels.SendChannel)])\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.L$0 java.lang.Object \l0x010b: IPUT  \l  (r7 I:long A[D('deadline' long)])\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$0 long \l0x010d: IPUT  \l  (r5 I:long A[D('delayNs' long)])\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$1 long \l0x010f: CONST  (r13 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0110: IPUT  \l  (r13 I:int)\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.label int \l0x0112: INVOKE  (r9 I:java.lang.Object) = (r9 I:long), (r0 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)]) type: STATIC call: kotlinx.coroutines.DelayKt.delay(long, kotlin.coroutines.Continuation):java.lang.Object A[MD:(long, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_102 [shape=record,label="{102\:\ 0x0116|0x0116: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:104:0x0119 \l}"];
Node_103 [shape=record,label="{103\:\ 0x0118|RETURN\l|0x0118: RETURN  (r2 I:java.lang.Object)  (LINE:78)\l}"];
Node_104 [shape=record,label="{104\:\ 0x0119|0x0119: MOVE  (r9 I:??[long, double]) = (r5 I:??[long, double] A[D('delayNs' long)])  (LINE:96)\l0x011a: MOVE  (r5 I:??[long, double] A[D('delayNs' long)]) = (r7 I:??[long, double] A[D('deadline' long)]) \l}"];
Node_91 [shape=record,label="{91\:\ 0x00d1|0x00d1: INVOKE  (r9 I:long) = (r9 I:java.lang.Long) type: VIRTUAL call: java.lang.Long.longValue():long A[MD:():long (c)]\l}"];
Node_88 [shape=record,label="{88\:\ 0x00c2|0x00c2: INVOKE  (r9 I:long) = (r9 I:kotlinx.coroutines.AbstractTimeSource) type: VIRTUAL call: kotlinx.coroutines.AbstractTimeSource.nanoTime():long A[MD:():long (m)]\l0x00c6: INVOKE  (r9 I:java.lang.Long) = (r9 I:long) type: STATIC call: kotlin.coroutines.jvm.internal.Boxing.boxLong(long):java.lang.Long A[MD:(long):java.lang.Long (m)]\l}"];
Node_66 [shape=record,label="{66\:\ 0x003f|0x003f: IGET  (r5 I:long A[D('delayNs' long)]) = \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$1 long \l0x0041: IGET  (r7 I:long) = \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$0 long \l0x0043: IGET  (r3 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.L$0 java.lang.Object \l0x0045: CHECK_CAST (r3 I:kotlinx.coroutines.channels.SendChannel) = (kotlinx.coroutines.channels.SendChannel) (r3 I:??[OBJECT, ARRAY]) \l0x0047: INVOKE  (r1 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x004a: MOVE  (r9 I:??[long, double]) = (r5 I:??[long, double] A[D('delayNs' long)]) \l0x004b: MOVE  (r5 I:??[long, double] A[D('delayNs' long)]) = (r7 I:??[long, double] A[D('deadline' long)]) \l}"];
Node_67 [shape=record,label="{67\:\ 0x004e|0x004e: IGET  (r5 I:long A[D('delayNs' long)]) = \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$1 long \l0x0050: IGET  (r7 I:long) = \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$0 long \l0x0052: IGET  (r3 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.L$0 java.lang.Object \l0x0054: CHECK_CAST (r3 I:kotlinx.coroutines.channels.SendChannel) = (kotlinx.coroutines.channels.SendChannel) (r3 I:??[OBJECT, ARRAY]) \l0x0056: INVOKE  (r1 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_68 [shape=record,label="{68\:\ 0x005a|0x005a: IGET  (r5 I:long A[D('delayNs' long)]) = \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$1 long \l0x005c: IGET  (r7 I:long) = \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$0 long \l0x005e: IGET  (r3 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.L$0 java.lang.Object \l0x0060: CHECK_CAST (r3 I:kotlinx.coroutines.channels.SendChannel) = (kotlinx.coroutines.channels.SendChannel) (r3 I:??[OBJECT, ARRAY]) \l0x0062: INVOKE  (r1 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_80 [shape=record,label="{80\:\ 0x00a0|0x00a0: INVOKE  (r9 I:long) = (r7 I:long A[D('delayMillis' long)]) type: STATIC call: kotlinx.coroutines.EventLoop_commonKt.delayToNanos(long):long A[MD:(long):long (m)] (LINE:85)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0066|0x0066: INVOKE  (r1 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0069: MOVE  (r7 I:??[long, double]) = (r18 I:??[long, double]) \l0x006b: MOVE  (r5 I:??[long, double]) = (r20 I:??[long, double]) \l0x006d: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r22 I:??[OBJECT, ARRAY]) \l0x006f: INVOKE  (r9 I:kotlinx.coroutines.AbstractTimeSource) =  type: STATIC call: kotlinx.coroutines.AbstractTimeSourceKt.getTimeSource():kotlinx.coroutines.AbstractTimeSource A[MD:():kotlinx.coroutines.AbstractTimeSource (m)] (LINE:83)\l}"];
Node_70 [shape=record,label="{70\:\ 0x0073|0x0073: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0077 \l}"];
Node_71 [shape=record,label="{71\:\ 0x0075|0x0075: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_73 [shape=record,label="{73\:\ 0x007f|0x007f: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x0086 \l}"];
Node_74 [shape=record,label="{74\:\ 0x0081|0x0081: INVOKE  (r9 I:long) =  type: STATIC call: java.lang.System.nanoTime():long A[MD:():long (c)]\l}"];
Node_76 [shape=record,label="{76\:\ 0x008a|0x008a: INVOKE  (r11 I:long) = (r5 I:long A[D('initialDelayMillis' long)]) type: STATIC call: kotlinx.coroutines.EventLoop_commonKt.delayToNanos(long):long A[MD:(long):long (m)]\l0x008e: ARITH  (r9 I:long) = (r9 I:long) + (r11 I:long) \l0x008f: IPUT  \l  (r3 I:java.lang.Object A[D('channel' kotlinx.coroutines.channels.SendChannel)])\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.L$0 java.lang.Object  (LINE:84)\l0x0091: IPUT  \l  (r7 I:long A[D('delayMillis' long)])\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$0 long \l0x0093: IPUT  \l  (r9 I:long A[D('deadline' long)])\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.J$1 long \l0x0095: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0096: IPUT  \l  (r11 I:int)\l  (r0 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.label int \l0x0098: INVOKE  (r5 I:java.lang.Object A[D('initialDelayMillis' long)]) = \l  (r5 I:long A[D('initialDelayMillis' long)])\l  (r0 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: STATIC call: kotlinx.coroutines.DelayKt.delay(long, kotlin.coroutines.Continuation):java.lang.Object A[MD:(long, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_77 [shape=record,label="{77\:\ 0x009c|0x009c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('initialDelayMillis' long)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:0x009f \l}"];
Node_78 [shape=record,label="{78\:\ 0x009e|RETURN\l|0x009e: RETURN  (r2 I:java.lang.Object)  (LINE:78)\l}"];
Node_79 [shape=record,label="{79\:\ 0x009f|0x009f: MOVE  (r5 I:??[long, double]) = (r9 I:??[long, double] A[D('deadline' long)])  (LINE:84)\l}"];
Node_75 [shape=record,label="{75\:\ 0x0086|0x0086: INVOKE  (r9 I:long) = (r9 I:java.lang.Long) type: VIRTUAL call: java.lang.Long.longValue():long A[MD:():long (c)]\l}"];
Node_72 [shape=record,label="{72\:\ 0x0077|0x0077: INVOKE  (r9 I:long) = (r9 I:kotlinx.coroutines.AbstractTimeSource) type: VIRTUAL call: kotlinx.coroutines.AbstractTimeSource.nanoTime():long A[MD:():long (m)]\l0x007b: INVOKE  (r9 I:java.lang.Long) = (r9 I:long) type: STATIC call: kotlin.coroutines.jvm.internal.Boxing.boxLong(long):java.lang.Long A[MD:(long):java.lang.Long (m)]\l}"];
Node_60 [shape=record,label="{60\:\ 0x0016|0x0016: NEW_INSTANCE  (r1 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1) =  kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1 \l0x0018: INVOKE  (r1 I:kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1), (r0 I:kotlin.coroutines.Continuation) type: DIRECT call: kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1.\<init\>(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<? super kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1\>):void (m)]\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.channels.TickerChannelsKt.fixedPeriodTicker((r18 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:kotlinx.coroutines.channels.SendChannel\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:83:0x00b7 \-\> B:54:?, CROSS_EDGE: B:98:0x00fe \-\> B:54:?, BACK_EDGE: B:99:0x00ff \-\> B:81:0x00a4, CROSS_EDGE: B:103:0x0118 \-\> B:54:?, BACK_EDGE: B:104:0x0119 \-\> B:81:0x00a4, CROSS_EDGE: B:93:0x00df \-\> B:101:0x0105, CROSS_EDGE: B:91:0x00d1 \-\> B:92:0x00d5, CROSS_EDGE: B:88:0x00c2 \-\> B:89:0x00ca, CROSS_EDGE: B:66:0x003f \-\> B:81:0x00a4, CROSS_EDGE: B:67:0x004e \-\> B:85:0x00ba, CROSS_EDGE: B:80:0x00a0 \-\> B:81:0x00a4, CROSS_EDGE: B:78:0x009e \-\> B:54:?, CROSS_EDGE: B:79:0x009f \-\> B:80:0x00a0, CROSS_EDGE: B:75:0x0086 \-\> B:76:0x008a, CROSS_EDGE: B:72:0x0077 \-\> B:73:0x007f, CROSS_EDGE: B:60:0x0016 \-\> B:61:0x001b, CROSS_EDGE: B:56:0x0004 \-\> B:60:0x0016\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x0028: r0 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x001e\-0x0028: r1 '$result' Ljava\/lang\/Object;\l  0x0038\-0x003f: r3 'channel' Lkotlinx\/coroutines\/channels\/SendChannel;\l  0x0032\-0x003f: r5 'delayNs' J\l  0x0034\-0x003f: r7 'deadline' J\l  0x0047\-0x004e: r3 'channel' Lkotlinx\/coroutines\/channels\/SendChannel;\l  0x0041\-0x004e: r5 'delayNs' J\l  0x0043\-0x004e: r7 'deadline' J\l  0x0056\-0x005a: r3 'channel' Lkotlinx\/coroutines\/channels\/SendChannel;\l  0x0050\-0x005a: r5 'delayNs' J\l  0x0052\-0x005a: r7 'deadline' J\l  0x0062\-0x0066: r3 'channel' Lkotlinx\/coroutines\/channels\/SendChannel;\l  0x005c\-0x0066: r5 'deadline' J\l  0x005e\-0x0066: r7 'delayMillis' J\l  0x006d\-0x009c: r5 'initialDelayMillis' J\l  0x008f\-0x00a0: r9 'deadline' J\l  0x006b\-0x00a4: r7 'delayMillis' J\l  0x00a4\-0x00ba: r9 'delayNs' J\l  0x00a0\-0x00ba: r5 'deadline' J\l  0x00dd\-0x00e5: r11 'nextDelay' J\l  0x00ba\-0x00ea: r7 'deadline' J\l  0x00d5\-0x00eb: r9 'now' J\l  0x00ea\-0x00fc: r7 'adjustedDelay' J\l  0x00ba\-0x0104: r5 'delayNs' J\l  0x00eb\-0x0104: r9 'deadline' J\l  0x0104\-0x0105: r9 'delayNs' J\l  0x0104\-0x0105: r5 'deadline' J\l  0x0105\-0x0116: r11 'nextDelay' J\l  0x0105\-0x011b: r7 'deadline' J\l  0x0105\-0x011b: r5 'delayNs' J\l  0x0030\-0x0129: r0 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x0030\-0x0129: r1 '$result' Ljava\/lang\/Object;\l  0x006f\-0x0129: r3 'channel' Lkotlinx\/coroutines\/channels\/SendChannel;\l  0x011b\-0x0129: r5 'deadline' J\l  0x011b\-0x0129: r9 'delayNs' J\lJadxCommentsAttr\{\l WARN: \l \-\> Unsupported multi\-entry loop pattern (BACK_EDGE: B:99:0x00ff \-\> B:81:0x00a4). Please submit an issue!!!\l \-\> Unsupported multi\-entry loop pattern (BACK_EDGE: B:104:0x0119 \-\> B:81:0x00a4). Please submit an issue!!!\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [78=6]\}\lSIGNATURE: (JJLkotlinx\/coroutines\/channels\/SendChannel\<\-Lkotlin\/Unit;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_53;Node_53 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_60;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_62 -> Node_65;
Node_62 -> Node_66;
Node_62 -> Node_67;
Node_62 -> Node_68;
Node_62 -> Node_69;
Node_63 -> Node_64;
Node_64 -> Node_54;
Node_65 -> Node_81;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_84;
Node_83 -> Node_54;
Node_84 -> Node_85;
Node_85 -> Node_86;
Node_86 -> Node_87[style=dashed];
Node_86 -> Node_88;
Node_87 -> Node_89;
Node_89 -> Node_90[style=dashed];
Node_89 -> Node_91;
Node_90 -> Node_92;
Node_92 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_101;
Node_94 -> Node_95;
Node_95 -> Node_96[style=dashed];
Node_95 -> Node_101;
Node_96 -> Node_97;
Node_97 -> Node_98[style=dashed];
Node_97 -> Node_99;
Node_98 -> Node_54;
Node_99 -> Node_81;
Node_101 -> Node_102;
Node_102 -> Node_103[style=dashed];
Node_102 -> Node_104;
Node_103 -> Node_54;
Node_104 -> Node_81;
Node_91 -> Node_92;
Node_88 -> Node_89;
Node_66 -> Node_81;
Node_67 -> Node_85;
Node_68 -> Node_80;
Node_80 -> Node_81;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_72;
Node_71 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_75;
Node_74 -> Node_76;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_79;
Node_78 -> Node_54;
Node_79 -> Node_80;
Node_75 -> Node_76;
Node_72 -> Node_73;
Node_60 -> Node_61;
}

