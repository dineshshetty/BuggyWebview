digraph "CFG forkotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000|java.lang.Object r0 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_39 [shape=record,label="{39\:\ 0x0007|switch(r10.label) \{\l    case 0: goto L25;\l    case 1: goto L24;\l    case 2: goto L6;\l    default: goto L3;\l\}\l}"];
Node_40 [shape=record,label="{40\:\ 0x000a}"];
Node_41 [shape=record,label="{41\:\ 0x0011|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0012|r1 = r10\lint r3 = r1.I$0\lkotlinx.coroutines.channels.ChannelIterator r4 = (kotlinx.coroutines.channels.ChannelIterator) r1.L$1\lkotlinx.coroutines.channels.ProducerScope r5 = (kotlinx.coroutines.channels.ProducerScope) r1.L$0\lkotlin.ResultKt.throwOnFailure(r11)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0092|PHI: r0 r1 r3 r4 r5 r11 \l  PHI: (r0v10 '$result' java.lang.Object) = (r0v7 '$result' java.lang.Object), (r0v0 '$result' java.lang.Object) binds: [B:62:0x008c, B:42:0x0012] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v8 kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1) = (r1v5 kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1), (r1v9 kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1) binds: [B:62:0x008c, B:42:0x0012] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v8 'remaining' int) = (r3v5 'remaining' int), (r3v11 'remaining' int) binds: [B:62:0x008c, B:42:0x0012] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v9 kotlinx.coroutines.channels.ChannelIterator) = (r4v7 kotlinx.coroutines.channels.ChannelIterator), (r4v12 kotlinx.coroutines.channels.ChannelIterator) binds: [B:62:0x008c, B:42:0x0012] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v12 '$this$produce' kotlinx.coroutines.channels.ProducerScope) = (r5v10 '$this$produce' kotlinx.coroutines.channels.ProducerScope), (r5v15 '$this$produce' kotlinx.coroutines.channels.ProducerScope) binds: [B:62:0x008c, B:42:0x0012] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v10 '$result' java.lang.Object) = (r11v7 '$result' java.lang.Object), (r11v0 '$result' java.lang.Object) binds: [B:62:0x008c, B:42:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|int r3 = r3 + (\-1)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0095|if (r3 != 0) goto L11\l}"];
Node_65 [shape=record,label="{65\:\ 0x0097}"];
Node_66 [shape=record,label="{66\:\ 0x0099|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
Node_67 [shape=record,label="{67\:\ 0x009a|r9 = r4\lr4 = r3\lr3 = r5\lr5 = r9\l}"];
Node_53 [shape=record,label="{53\:\ 0x0055|PHI: r0 r1 r3 r4 r5 r11 \l  PHI: (r0v8 '$result' java.lang.Object) = (r0v0 '$result' java.lang.Object), (r0v10 '$result' java.lang.Object) binds: [B:52:0x004d, B:67:0x009a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v6 kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1) = (r1v1 kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1), (r1v8 kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1) binds: [B:52:0x004d, B:67:0x009a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v6 '$this$produce' kotlinx.coroutines.channels.ProducerScope) = (r3v1 '$this$produce' kotlinx.coroutines.channels.ProducerScope), (r3v10 '$this$produce' kotlinx.coroutines.channels.ProducerScope) binds: [B:52:0x004d, B:67:0x009a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v8 'remaining' int) = (r4v2 'remaining' int), (r4v10 'remaining' int) binds: [B:52:0x004d, B:67:0x009a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v11 kotlinx.coroutines.channels.ChannelIterator) = (r5v4 kotlinx.coroutines.channels.ChannelIterator), (r5v13 kotlinx.coroutines.channels.ChannelIterator) binds: [B:52:0x004d, B:67:0x009a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v8 '$result' java.lang.Object) = (r11v0 '$result' java.lang.Object), (r11v10 '$result' java.lang.Object) binds: [B:52:0x004d, B:67:0x009a] A[DONT_GENERATE, DONT_INLINE]\l|r1.L$0 = r3\lr1.L$1 = r5\lr1.I$0 = r4\lr1.label = 1\ljava.lang.Object r6 = r5.hasNext(r1)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0064|if (r6 != r0) goto L15\l}"];
Node_55 [shape=record,label="{55\:\ 0x0066|RETURN\l|return r0\l}"];
Node_56 [shape=record,label="{56\:\ 0x0067|r9 = r0\lr0 = r11\lr11 = r6\lr6 = r3\lr3 = r1\lr1 = r9\l}"];
Node_57 [shape=record,label="{57\:\ 0x006d|PHI: r0 r1 r3 r4 r5 r6 r11 \l  PHI: (r0v6 '$result' java.lang.Object) = (r0v5 '$result' java.lang.Object), (r0v9 '$result' java.lang.Object) binds: [B:43:0x0022, B:56:0x0067] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v4 java.lang.Object) = (r1v3 java.lang.Object), (r1v7 java.lang.Object) binds: [B:43:0x0022, B:56:0x0067] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v4 kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1) = (r3v3 kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1), (r3v7 kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1) binds: [B:43:0x0022, B:56:0x0067] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v6 'remaining' int) = (r4v5 'remaining' int), (r4v8 'remaining' int) binds: [B:43:0x0022, B:56:0x0067] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v9 kotlinx.coroutines.channels.ChannelIterator) = (r5v8 kotlinx.coroutines.channels.ChannelIterator), (r5v11 kotlinx.coroutines.channels.ChannelIterator) binds: [B:43:0x0022, B:56:0x0067] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 '$this$produce' kotlinx.coroutines.channels.ProducerScope) = (r6v0 '$this$produce' kotlinx.coroutines.channels.ProducerScope), (r6v5 '$this$produce' kotlinx.coroutines.channels.ProducerScope) binds: [B:43:0x0022, B:56:0x0067] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v1 '$result' java.lang.Object) = (r11v0 '$result' java.lang.Object), (r11v9 '$result' java.lang.Object) binds: [B:43:0x0022, B:56:0x0067] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0073|if (((java.lang.Boolean) r11).booleanValue() == false) goto L22\l}"];
Node_59 [shape=record,label="{59\:\ 0x0075|java.lang.Object r11 = r5.next()\lr3.L$0 = r6\lr3.L$1 = r5\lr3.I$0 = r4\lr3.label = 2\l}"];
Node_60 [shape=record,label="{60\:\ 0x0089|if (r6.send(r11, r3) != r1) goto L21\l}"];
Node_61 [shape=record,label="{61\:\ 0x008b|RETURN\l|return r1\l}"];
Node_62 [shape=record,label="{62\:\ 0x008c|r11 = r0\lr0 = r1\lr1 = r3\lr3 = r4\lr4 = r5\lr5 = r6\l}"];
Node_68 [shape=record,label="{68\:\ 0x009f}"];
Node_69 [shape=record,label="{69\:\ 0x00a1|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
Node_43 [shape=record,label="{43\:\ 0x0022|int r3 = r10.I$0\lkotlinx.coroutines.channels.ProducerScope r5 = (kotlinx.coroutines.channels.ProducerScope) r10.L$0\lkotlin.ResultKt.throwOnFailure(r11)\lr6 = r5\lr5 = (kotlinx.coroutines.channels.ChannelIterator) r10.L$1\lr4 = r3\lr3 = r10\lr1 = r0\lr0 = r11\l}"];
Node_44 [shape=record,label="{44\:\ 0x0037|kotlin.ResultKt.throwOnFailure(r11)\lr1 = r10\lkotlinx.coroutines.channels.ProducerScope r3 = (kotlinx.coroutines.channels.ProducerScope) r1.L$0\lint r4 = r1.f215$n\l}"];
Node_45 [shape=record,label="{45\:\ 0x0041|if (r4 != 0) goto L29\l}"];
Node_46 [shape=record,label="{46\:\ 0x0043}"];
Node_47 [shape=record,label="{47\:\ 0x0045|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
Node_48 [shape=record,label="{48\:\ 0x0046|if (r4 \< 0) goto L35\l}"];
Node_49 [shape=record,label="{49\:\ 0x0048|r5 = true\l}"];
Node_51 [shape=record,label="{51\:\ 0x004b|PHI: r5 \l  PHI: (r5v1 boolean) = (r5v0 boolean), (r5v5 boolean) binds: [B:50:0x004a, B:49:0x0048] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 == false) goto L33\l}"];
Node_52 [shape=record,label="{52\:\ 0x004d|int r4 = r1.f215$n\lkotlinx.coroutines.channels.ChannelIterator r5 = r1.$this_take.iterator()\l}"];
Node_70 [shape=record,label="{70\:\ 0x00a2|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Requested element count \")\lr2.append(r4)\lr2.append(\" is less than zero.\")\l}"];
Node_71 [shape=record,label="{71\:\ 0x00c2|throw new java.lang.IllegalArgumentException(r2.toString().toString())\l}"];
Node_50 [shape=record,label="{50\:\ 0x004a|r5 = false\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1.invokeSuspend((r10v0 'this' kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1 A[IMMUTABLE_TYPE, THIS]), (r11v0 '$result' java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:66:0x0099 \-\> B:37:?, CROSS_EDGE: B:55:0x0066 \-\> B:37:?, CROSS_EDGE: B:61:0x008b \-\> B:37:?, BACK_EDGE: B:62:0x008c \-\> B:63:0x0092, CROSS_EDGE: B:69:0x00a1 \-\> B:37:?, CROSS_EDGE: B:43:0x0022 \-\> B:57:0x006d, CROSS_EDGE: B:47:0x0045 \-\> B:37:?, CROSS_EDGE: B:52:0x004d \-\> B:53:0x0055, CROSS_EDGE: B:71:0x00c2 \-\> B:37:?, CROSS_EDGE: B:50:0x004a \-\> B:51:0x004b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Unsupported multi\-entry loop pattern (BACK_EDGE: B:62:0x008c \-\> B:63:0x0092). Please submit an issue!!!\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [250=4]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_42;
Node_39 -> Node_43;
Node_39 -> Node_44;
Node_40 -> Node_41;
Node_41 -> Node_37;
Node_42 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_67;
Node_65 -> Node_66;
Node_66 -> Node_37;
Node_67 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_37;
Node_56 -> Node_57;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_68;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_37;
Node_62 -> Node_63;
Node_68 -> Node_69;
Node_69 -> Node_37;
Node_43 -> Node_57;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_48;
Node_46 -> Node_47;
Node_47 -> Node_37;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_70;
Node_52 -> Node_53;
Node_70 -> Node_71;
Node_71 -> Node_37;
Node_50 -> Node_51;
}

