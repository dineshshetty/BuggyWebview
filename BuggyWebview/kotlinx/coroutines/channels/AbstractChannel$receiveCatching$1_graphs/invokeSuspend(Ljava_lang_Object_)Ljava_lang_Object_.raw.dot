digraph "CFG forkotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IPUT  (r3 I:java.lang.Object), (r2 I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1) kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.result java.lang.Object \l0x0002: IGET  (r0 I:int) = (r2 I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1) kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.label int \l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x0006: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) \| (r1 I:??[int, boolean, short, byte, char]) \l0x0007: IPUT  (r0 I:int), (r2 I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1) kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.label int \l0x0009: IGET  (r0 I:kotlinx.coroutines.channels.AbstractChannel\<E\>) = (r2 I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1) kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.this$0 kotlinx.coroutines.channels.AbstractChannel \l0x000b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x000c: CHECK_CAST (r1 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r1 I:??[OBJECT, ARRAY]) \l0x000e: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlinx.coroutines.channels.AbstractChannel), (r1 I:kotlin.coroutines.Continuation) type: VIRTUAL call: kotlinx.coroutines.channels.AbstractChannel.receiveCatching\-JP2dKIU(kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlin.coroutines.Continuation\<? super kotlinx.coroutines.channels.ChannelResult\<? extends E\>\>):java.lang.Object (m)]\l0x0012: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:java.lang.Object) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: INVOKE  (r0 I:kotlinx.coroutines.channels.ChannelResult) = (r0 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.channels.ChannelResult.box\-impl(java.lang.Object):kotlinx.coroutines.channels.ChannelResult A[MD:(java.lang.Object):kotlinx.coroutines.channels.ChannelResult (m)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|RETURN\l|0x001d: RETURN  (r0 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.invokeSuspend((r2 'this' I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1 A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:6:0x001d \-\> B:1:?\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

