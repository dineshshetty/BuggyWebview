digraph "CFG forkotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.\<init\>(Lkotlinx\/coroutines\/channels\/AbstractChannel;Lkotlin\/coroutines\/Continuation;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IPUT  \l  (r1 I:kotlinx.coroutines.channels.AbstractChannel\<E\>)\l  (r0 I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1)\l kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.this$0 kotlinx.coroutines.channels.AbstractChannel \l0x0002: INVOKE  (r0 I:kotlin.coroutines.jvm.internal.ContinuationImpl), (r2 I:kotlin.coroutines.Continuation) type: DIRECT call: kotlin.coroutines.jvm.internal.ContinuationImpl.\<init\>(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<java.lang.Object\>):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|RETURN\l|0x0005: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1.\<init\>((r0 'this' I:kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1 A[IMMUTABLE_TYPE, THIS]), (r1 I:kotlinx.coroutines.channels.AbstractChannel\<E\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.coroutines.Continuation\<? super kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | TYPE_VARS: EMPTY\lSIGNATURE: (Lkotlinx\/coroutines\/channels\/AbstractChannel\<TE;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlinx\/coroutines\/channels\/AbstractChannel$receiveCatching$1;\>;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

