digraph "CFG forkotlinx.coroutines.channels.Closed.tryResumeSend(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;)Lkotlinx\/coroutines\/internal\/Symbol;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN kotlinx.coroutines.internal.Symbol  (LINE:1112)\l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1133)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0004|0x0004: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('otherOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0007  (LINE:1112)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0007|0x0007: INVOKE  \l  (r4 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('otherOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.PrepareOp.finishPrepare():void A[MD:():void (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:kotlinx.coroutines.internal.Symbol) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.internal.Symbol kotlinx.coroutines.channels.Closed.tryResumeSend((r3 'this' I:kotlinx.coroutines.channels.Closed\<E\> A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('otherOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0004 \-\> B:13:0x000a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0003\-0x000a: r1 'it' Lkotlinx\/coroutines\/internal\/Symbol;\l  0x0004\-0x000a: r2 '$i$a$\-also\-Closed$tryResumeSend$1' I\l  \-1 \-0x000a: r4 'otherOp' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [kotlinx.coroutines.channels.Send.tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):kotlinx.coroutines.internal.Symbol]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_8;
}

