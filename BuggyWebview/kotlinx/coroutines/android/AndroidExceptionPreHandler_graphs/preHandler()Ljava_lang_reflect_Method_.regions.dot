digraph "CFG forkotlinx.coroutines.android.AndroidExceptionPreHandler.preHandler()Ljava\/lang\/reflect\/Method;" {
subgraph cluster_Region_1201703158 {
label = "R(2:1|(2:(1:4)|(4:6|(3:8|(1:(1:12))|(1:15))|16|17)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|java.lang.Object java.lang.Object r0 = r7._preHandler\l}"];
subgraph cluster_Region_965609401 {
label = "R(2:(1:4)|(4:6|(3:8|(1:(1:12))|(1:15))|16|17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1162126008 {
label = "IF [B:3:0x0002] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r0 != r7) goto L3\l}"];
subgraph cluster_Region_1933276554 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0007|RETURN\l|return (java.lang.reflect.Method) r0\l}"];
}
}
subgraph cluster_Region_1759214237 {
label = "R(4:6|(3:8|(1:(1:12))|(1:15))|16|17)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0008|java.lang.reflect.Method r1 = null\l}"];
subgraph cluster_TryCatchRegion_975355747 {
label = "Try: R(3:8|(1:(1:12))|(1:15)) catches: R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_1271832317 {
label = "R(3:8|(1:(1:12))|(1:15))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0009|TRY_ENTER\lTryCatch #0 \{all \-\> 0x002f, blocks: (B:7:0x0009, B:9:0x0020), top: B:18:0x0009 \}\lCatch: all \-\> 0x002f\l|boolean r4 = false\ljava.lang.reflect.Method java.lang.reflect.Method r2 = java.lang.Thread.class.getDeclaredMethod(\"getUncaughtExceptionPreHandler\", new java.lang.Class[0])     \/\/ Catch: java.lang.Throwable \-\> L2f\l}"];
subgraph cluster_IfRegion_103181299 {
label = "IF [B:8:0x001e] THEN: R(1:(1:12)) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001e|if (java.lang.reflect.Modifier.isPublic(r2.getModifiers()) != false) goto L10\l}"];
subgraph cluster_Region_477788450 {
label = "R(1:(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_966800572 {
label = "IF [B:10:0x0028] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0028|if (java.lang.reflect.Modifier.isStatic(r2.getModifiers()) != false) goto L12\l}"];
subgraph cluster_Region_1668363563 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002a|r4 = true\l}"];
}
}
}
}
subgraph cluster_IfRegion_1355658314 {
label = "IF [B:12:0x002b] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002b|PHI: r4 \l  PHI: (r4v1 boolean) = (r4v0 boolean), (r4v0 boolean), (r4v2 boolean) binds: [B:8:0x001e, B:10:0x0028, B:11:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 != false) goto L15\l}"];
subgraph cluster_Region_729786440 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x002d|r1 = r2\l}"];
}
}
}
subgraph cluster_Region_1529280032 {
label = "R(0) | ExcHandler: all \-\> 0x002f\l";
node [shape=record,color=blue];
}
}
Node_16 [shape=record,label="{16\:\ 0x0033|PHI: r1 \l  PHI: (r1v1 'declared' java.lang.reflect.Method) = (r1v0 'declared' java.lang.reflect.Method), (r1v0 'declared' java.lang.reflect.Method), (r1v2 'declared' java.lang.reflect.Method) binds: [B:15:0x0030, B:12:0x002b, B:13:0x002d] A[DONT_GENERATE, DONT_INLINE]\l|r7._preHandler = r1\l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|RETURN\l|return r1\l}"];
}
}
}
subgraph cluster_Region_1529280032 {
label = "R(0) | ExcHandler: all \-\> 0x002f\l";
node [shape=record,color=blue];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0004}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0009|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0020|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x002f, blocks: (B:7:0x0009, B:9:0x0020), top: B:18:0x0009 \}\lCatch: all \-\> 0x002f\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x002f|ExcHandler: all \-\> 0x002f\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0030}"];
MethodNode[shape=record,label="{private final java.lang.reflect.Method kotlinx.coroutines.android.AndroidExceptionPreHandler.preHandler((r7v0 'this' kotlinx.coroutines.android.AndroidExceptionPreHandler A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0036 \-\> B:1:?, CROSS_EDGE: B:12:0x002b \-\> B:16:0x0033, CROSS_EDGE: B:10:0x0028 \-\> B:12:0x002b, CROSS_EDGE: B:15:0x0030 \-\> B:16:0x0033, CROSS_EDGE: B:8:0x001e \-\> B:12:0x002b, CROSS_EDGE: B:18:0x0009 \-\> B:14:0x002f\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x002f, blocks: (B:7:0x0009, B:9:0x0020), top: B:18:0x0009 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_1;
Node_6 -> Node_18;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_16[style=dashed];
Node_13 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_0 -> Node_2;
Node_4 -> Node_5;
Node_18 -> Node_7;
Node_18 -> Node_14;
Node_9 -> Node_10;
Node_9 -> Node_19;
Node_19 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

