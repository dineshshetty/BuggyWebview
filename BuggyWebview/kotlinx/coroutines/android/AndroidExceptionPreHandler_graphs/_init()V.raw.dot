digraph "CFG forkotlinx.coroutines.android.AndroidExceptionPreHandler.\<init\>()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.CoroutineExceptionHandler$Key) =  kotlinx.coroutines.CoroutineExceptionHandler.Key kotlinx.coroutines.CoroutineExceptionHandler$Key  (LINE:15)\l0x0002: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r0 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  (r1 I:kotlin.coroutines.AbstractCoroutineContextElement), (r0 I:kotlin.coroutines.CoroutineContext$Key) type: DIRECT call: kotlin.coroutines.AbstractCoroutineContextElement.\<init\>(kotlin.coroutines.CoroutineContext$Key):void A[MD:(kotlin.coroutines.CoroutineContext$Key\<?\>):void (m)]\l0x0007: IPUT  (r1 I:java.lang.Object), (r1 I:kotlinx.coroutines.android.AndroidExceptionPreHandler) kotlinx.coroutines.android.AndroidExceptionPreHandler._preHandler java.lang.Object  (LINE:18)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:14)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.android.AndroidExceptionPreHandler.\<init\>((r1 'this' I:kotlinx.coroutines.android.AndroidExceptionPreHandler A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

