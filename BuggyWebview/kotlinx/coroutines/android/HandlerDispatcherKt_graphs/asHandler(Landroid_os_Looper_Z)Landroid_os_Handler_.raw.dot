digraph "CFG forkotlinx.coroutines.android.HandlerDispatcherKt.asHandler(Landroid\/os\/Looper;Z)Landroid\/os\/Handler;" {
Node_50 [shape=record,label="{50\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_52 [shape=record,label="{52\:\ 0x0000|0x0000: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('async' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x0068  (LINE:86)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0002|0x0002: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0006|0x0006: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:56:0x0009 \l}"];
Node_56 [shape=record,label="{56\:\ 0x0009|0x0009: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:90)\l0x000b: CONST  (r1 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l0x000d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x0010|0x0010: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:64:0x0035 \l}"];
Node_58 [shape=record,label="{58\:\ 0x0012|0x0012: CONST_CLASS  (r0 I:java.lang.Class\<android.os.Handler\>) =  android.os.Handler.class \l0x0014: NEW_ARRAY  (r1 I:java.lang.Class[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[]  (LINE:92)\l0x0016: CONST_CLASS  (r5 I:java.lang.Class\<android.os.Looper\>) =  android.os.Looper.class \l0x0018: APUT  (r1 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY]) \l0x001a: CONST_STR  (r5 I:java.lang.String) =  \"createAsync\" \l0x001c: INVOKE  (r0 I:java.lang.reflect.Method) = (r0 I:java.lang.Class), (r5 I:java.lang.String), (r1 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0020: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[]  (LINE:93)\l0x0022: APUT  \l  (r1 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char])\l  (r9 I:??[OBJECT, ARRAY] A[D('$this$asHandler' android.os.Looper)])\l \l0x0024: INVOKE  (r1 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Method A[D('factoryMethod' java.lang.reflect.Method)])\l  (r2 I:java.lang.Object)\l  (r1 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x0028|0x0028: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x002d \l}"];
Node_60 [shape=record,label="{60\:\ 0x002a|0x002a: CHECK_CAST (r1 I:android.os.Handler) = (android.os.Handler) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_61 [shape=record,label="{61\:\ 0x002c|RETURN\l|0x002c: RETURN  (r1 I:android.os.Handler) \l}"];
Node_51 [shape=record,label="{51\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_62 [shape=record,label="{62\:\ 0x002d|0x002d: NEW_INSTANCE  (r1 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x002f: CONST_STR  (r2 I:java.lang.String) =  \"null cannot be cast to non\-null type android.os.Handler\" \l0x0031: INVOKE  (r1 I:java.lang.NullPointerException), (r2 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_63 [shape=record,label="{63\:\ 0x0034|0x0034: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_64 [shape=record,label="{64\:\ 0x0035|0x0035: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('factoryMethod' java.lang.reflect.Method)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_73 [shape=record,label="{73\:\ 0x0037|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_65 [shape=record,label="{65\:\ 0x0037|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NoSuchMethodException \-\> 0x0061, blocks: (B:65:0x0037), top: B:73:0x0037 \}\lCatch: NoSuchMethodException \-\> 0x0061\l|0x0037: CONST_CLASS  (r1 I:java.lang.Class\<android.os.Handler\>) =  android.os.Handler.class A[TRY_ENTER] (LINE:98)\l0x0039: CONST  (r5 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x003a: NEW_ARRAY  (r6 I:java.lang.Class[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: NoSuchMethodException \-\> 0x0061]\l0x003c: CONST_CLASS  (r7 I:java.lang.Class\<android.os.Looper\>) =  android.os.Looper.class \l0x003e: APUT  (r6 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) A[Catch: NoSuchMethodException \-\> 0x0061]\l0x0040: CONST_CLASS  (r7 I:java.lang.Class\<android.os.Handler$Callback\>) =  android.os.Handler$Callback.class \l0x0042: APUT  (r6 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) A[Catch: NoSuchMethodException \-\> 0x0061]\l0x0044: SGET  (r7 I:java.lang.Class) =  java.lang.Boolean.TYPE java.lang.Class A[Catch: NoSuchMethodException \-\> 0x0061]\l0x0046: CONST  (r8 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0047: APUT  (r6 I:??[OBJECT, ARRAY][]), (r8 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) A[Catch: NoSuchMethodException \-\> 0x0061]\l0x0049: INVOKE  (r1 I:java.lang.reflect.Constructor) = (r1 I:java.lang.Class), (r6 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredConstructor(java.lang.Class[]):java.lang.reflect.Constructor A[Catch: NoSuchMethodException \-\> 0x0061, MD:(java.lang.Class\<?\>[]):java.lang.reflect.Constructor\<T\> VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c), TRY_LEAVE]\l}"];
Node_66 [shape=record,label="{66\:\ 0x004d|0x004d: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('constructor' java.lang.reflect.Constructor)]) = (r1 I:??[OBJECT, ARRAY]) \l0x004e: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[]  (LINE:104)\l0x0050: APUT  \l  (r1 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char])\l  (r9 I:??[OBJECT, ARRAY] A[D('$this$asHandler' android.os.Looper)])\l \l0x0052: APUT  (r1 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]), (r2 I:??[OBJECT, ARRAY]) \l0x0054: INVOKE  (r2 I:java.lang.Boolean) = (r4 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)]\l0x0058: APUT  (r1 I:??[OBJECT, ARRAY][]), (r8 I:??[int, short, byte, char]), (r2 I:??[OBJECT, ARRAY]) \l0x005a: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.lang.reflect.Constructor A[D('constructor' java.lang.reflect.Constructor)]), (r1 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object A[MD:(java.lang.Object[]):T VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.InstantiationException, java.lang.reflect.InvocationTargetException (c)]\l0x005e: CHECK_CAST (r1 I:android.os.Handler) = (android.os.Handler) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_67 [shape=record,label="{67\:\ 0x0060|RETURN\l|0x0060: RETURN  (r1 I:android.os.Handler) \l}"];
Node_74 [shape=record,label="{74\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_68 [shape=record,label="{68\:\ 0x0061|ExcHandler: NoSuchMethodException \-\> 0x0061\l|0x0061: MOVE_EXCEPTION  (r1 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x0061] (LINE:100)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0062|0x0062: NEW_INSTANCE  (r2 I:android.os.Handler) =  android.os.Handler  (LINE:102)\l0x0064: INVOKE  (r2 I:android.os.Handler), (r9 I:android.os.Looper A[D('$this$asHandler' android.os.Looper)]) type: DIRECT call: android.os.Handler.\<init\>(android.os.Looper):void A[MD:(android.os.Looper):void (c)]\l}"];
Node_70 [shape=record,label="{70\:\ 0x0067|RETURN\l|0x0067: RETURN  (r2 I:android.os.Handler) \l}"];
Node_71 [shape=record,label="{71\:\ 0x0068|0x0068: NEW_INSTANCE  (r0 I:android.os.Handler A[D('constructor' java.lang.reflect.Constructor)]) =  android.os.Handler  (LINE:87)\l0x006a: INVOKE  (r0 I:android.os.Handler), (r9 I:android.os.Looper A[D('$this$asHandler' android.os.Looper)]) type: DIRECT call: android.os.Handler.\<init\>(android.os.Looper):void A[MD:(android.os.Looper):void (c)]\l}"];
Node_72 [shape=record,label="{72\:\ 0x006d|RETURN\l|0x006d: RETURN  (r0 I:android.os.Handler) \l}"];
MethodNode[shape=record,label="{public static final android.os.Handler kotlinx.coroutines.android.HandlerDispatcherKt.asHandler((r9 I:android.os.Looper A[D('$this$asHandler' android.os.Looper), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[D('async' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:63:0x0034 \-\> B:51:?, CROSS_EDGE: B:67:0x0060 \-\> B:51:?, CROSS_EDGE: B:70:0x0067 \-\> B:51:?, CROSS_EDGE: B:73:0x0037 \-\> B:68:0x0061, CROSS_EDGE: B:72:0x006d \-\> B:51:?, CROSS_EDGE: B:52:0x0000 \-\> B:71:0x0068\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0020\-0x0035: r0 'factoryMethod' Ljava\/lang\/reflect\/Method;\l  0x0036\-0x0068: r0 'constructor' Ljava\/lang\/reflect\/Constructor;\l  0x0062\-0x0068: r1 'ignored' Ljava\/lang\/NoSuchMethodException;\l  \-1 \-0x006d: r9 '$this$asHandler' Landroid\/os\/Looper;\l  \-1 \-0x006d: r10 'async' Z\lTryCatch #0 \{NoSuchMethodException \-\> 0x0061, blocks: (B:65:0x0037), top: B:73:0x0037 \}\l}"];
MethodNode -> Node_50;Node_50 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_71;
Node_53 -> Node_54;
Node_54 -> Node_56;
Node_54 -> Node_71[style=dashed];
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_64;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_62;
Node_60 -> Node_61;
Node_61 -> Node_51;
Node_62 -> Node_63;
Node_63 -> Node_51;
Node_64 -> Node_73;
Node_73 -> Node_65;
Node_73 -> Node_68;
Node_65 -> Node_66;
Node_65 -> Node_74;
Node_66 -> Node_67;
Node_67 -> Node_51;
Node_74 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_51;
Node_71 -> Node_72;
Node_72 -> Node_51;
}

