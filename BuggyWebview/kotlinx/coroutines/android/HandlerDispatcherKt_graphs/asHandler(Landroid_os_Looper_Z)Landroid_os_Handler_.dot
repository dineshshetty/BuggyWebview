digraph "CFG forkotlinx.coroutines.android.HandlerDispatcherKt.asHandler(Landroid\/os\/Looper;Z)Landroid\/os\/Handler;" {
Node_50 [shape=record,label="{50\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_52 [shape=record,label="{52\:\ 0x0000|if (r10 == false) goto L22\l}"];
Node_53 [shape=record,label="{53\:\ 0x0002}"];
Node_54 [shape=record,label="{54\:\ 0x0006|if (android.os.Build.VERSION.SDK_INT \>= 16) goto L4\l}"];
Node_56 [shape=record,label="{56\:\ 0x0009}"];
Node_57 [shape=record,label="{57\:\ 0x0010|if (android.os.Build.VERSION.SDK_INT \< 28) goto L13\l}"];
Node_58 [shape=record,label="{58\:\ 0x0012|java.lang.reflect.Method r0 = android.os.Handler.class.getDeclaredMethod(\"createAsync\", new java.lang.Class[]\{android.os.Looper.class\})\ljava.lang.Object r1 = r0.invoke(null, new java.lang.Object[]\{r9\})\l}"];
Node_59 [shape=record,label="{59\:\ 0x0028|if (r1 == null) goto L11\l}"];
Node_60 [shape=record,label="{60\:\ 0x002a}"];
Node_61 [shape=record,label="{61\:\ 0x002c|RETURN\l|return (android.os.Handler) r1\l}"];
Node_51 [shape=record,label="{51\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_62 [shape=record,label="{62\:\ 0x002d}"];
Node_63 [shape=record,label="{63\:\ 0x0034|throw new java.lang.NullPointerException(\"null cannot be cast to non\-null type android.os.Handler\")\l}"];
Node_64 [shape=record,label="{64\:\ 0x0035}"];
Node_73 [shape=record,label="{73\:\ 0x0037|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_65 [shape=record,label="{65\:\ 0x0037|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NoSuchMethodException \-\> 0x0061, blocks: (B:65:0x0037), top: B:73:0x0037 \}\lCatch: NoSuchMethodException \-\> 0x0061\l|java.lang.reflect.Constructor r1 = android.os.Handler.class.getDeclaredConstructor(new java.lang.Class[]\{android.os.Looper.class, android.os.Handler.Callback.class, java.lang.Boolean.TYPE\})     \/\/ Catch: java.lang.NoSuchMethodException \-\> L61\l}"];
Node_66 [shape=record,label="{66\:\ 0x004d}"];
Node_67 [shape=record,label="{67\:\ 0x0060|RETURN\l|return (android.os.Handler) r1.newInstance(new java.lang.Object[]\{r9, null, true\})\l}"];
Node_74 [shape=record,label="{74\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_68 [shape=record,label="{68\:\ 0x0061|ExcHandler: NoSuchMethodException \-\> 0x0061\l}"];
Node_69 [shape=record,label="{69\:\ 0x0062}"];
Node_70 [shape=record,label="{70\:\ 0x0067|RETURN\l|return new android.os.Handler(r9)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0068}"];
Node_72 [shape=record,label="{72\:\ 0x006d|RETURN\l|return new android.os.Handler(r9)\l}"];
MethodNode[shape=record,label="{public static final android.os.Handler kotlinx.coroutines.android.HandlerDispatcherKt.asHandler((r9v0 '$this$asHandler' android.os.Looper A[D('$this$asHandler' android.os.Looper), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'async' boolean A[D('async' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:63:0x0034 \-\> B:51:?, CROSS_EDGE: B:67:0x0060 \-\> B:51:?, CROSS_EDGE: B:70:0x0067 \-\> B:51:?, CROSS_EDGE: B:73:0x0037 \-\> B:68:0x0061, CROSS_EDGE: B:72:0x006d \-\> B:51:?, CROSS_EDGE: B:52:0x0000 \-\> B:71:0x0068\lINLINE_NOT_NEEDED\lTryCatch #0 \{NoSuchMethodException \-\> 0x0061, blocks: (B:65:0x0037), top: B:73:0x0037 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_50;Node_50 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_71;
Node_53 -> Node_54;
Node_54 -> Node_56;
Node_54 -> Node_71[style=dashed];
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_64;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_62;
Node_60 -> Node_61;
Node_61 -> Node_51;
Node_62 -> Node_63;
Node_63 -> Node_51;
Node_64 -> Node_73;
Node_73 -> Node_65;
Node_73 -> Node_68;
Node_65 -> Node_66;
Node_65 -> Node_74;
Node_66 -> Node_67;
Node_67 -> Node_51;
Node_74 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_51;
Node_71 -> Node_72;
Node_72 -> Node_51;
}

