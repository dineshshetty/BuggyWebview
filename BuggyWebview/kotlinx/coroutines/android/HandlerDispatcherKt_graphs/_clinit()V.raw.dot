digraph "CFG forkotlinx.coroutines.android.HandlerDispatcherKt.\<clinit\>()V" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:109)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0018, blocks: (B:33:0x0001), top: B:43:0x0001 \}\lCatch: all \-\> 0x0018\l|0x0001: SGET  (r1 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion A[Catch: all \-\> 0x0018, TRY_ENTER]\l0x0003: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:236)\l0x0004: NEW_INSTANCE  (r2 I:kotlinx.coroutines.android.HandlerContext) =  kotlinx.coroutines.android.HandlerContext A[Catch: all \-\> 0x0018] (LINE:109)\l0x0006: INVOKE  (r3 I:android.os.Looper) =  type: STATIC call: android.os.Looper.getMainLooper():android.os.Looper A[Catch: all \-\> 0x0018, MD:():android.os.Looper (c)]\l0x000a: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000b: INVOKE  (r3 I:android.os.Handler) = (r3 I:android.os.Looper), (r4 I:boolean) type: STATIC call: kotlinx.coroutines.android.HandlerDispatcherKt.asHandler(android.os.Looper, boolean):android.os.Handler A[Catch: all \-\> 0x0018, MD:(android.os.Looper, boolean):android.os.Handler (m)]\l0x000f: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0010: INVOKE  \l  (r2 I:kotlinx.coroutines.android.HandlerContext)\l  (r3 I:android.os.Handler)\l  (r0 I:java.lang.String)\l  (r4 I:int)\l  (r0 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlinx.coroutines.android.HandlerContext.\<init\>(android.os.Handler, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[Catch: all \-\> 0x0018, MD:(android.os.Handler, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l0x0013: INVOKE  (r1 I:java.lang.Object) = (r2 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0018, MD:\<T\>:(java.lang.Object):java.lang.Object (m), TRY_LEAVE]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0023|0x0023: INVOKE  (r2 I:boolean) = (r1 I:java.lang.Object) type: STATIC call: kotlin.Result.isFailure\-impl(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0027|0x0027: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x002a \l}"];
Node_40 [shape=record,label="{40\:\ 0x002a|0x002a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x002b|0x002b: CHECK_CAST (r0 I:kotlinx.coroutines.android.HandlerDispatcher) = (kotlinx.coroutines.android.HandlerDispatcher) (r0 I:??[OBJECT, ARRAY]) \l0x002d: SPUT  (r0 I:kotlinx.coroutines.android.HandlerDispatcher) kotlinx.coroutines.android.HandlerDispatcherKt.Main kotlinx.coroutines.android.HandlerDispatcher \l}"];
Node_42 [shape=record,label="{42\:\ 0x002f|RETURN\l|0x002f: RETURN   \l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x0018|ExcHandler: all \-\> 0x0018\l|0x0018: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0018]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0019|0x0019: SGET  (r2 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion \l0x001b: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.Throwable) type: STATIC call: kotlin.ResultKt.createFailure(java.lang.Throwable):java.lang.Object A[MD:(java.lang.Throwable):java.lang.Object (m)]\l0x001f: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[MD:\<T\>:(java.lang.Object):java.lang.Object (m)]\l}"];
MethodNode[shape=record,label="{static void kotlinx.coroutines.android.HandlerDispatcherKt.\<clinit\>()  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0027 \-\> B:41:0x002b, CROSS_EDGE: B:36:0x0019 \-\> B:37:0x0023, CROSS_EDGE: B:43:0x0001 \-\> B:35:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0013: r1 '$i$a$\-runCatching\-HandlerDispatcherKt$Main$1' I\lTryCatch #0 \{all \-\> 0x0018, blocks: (B:33:0x0001), top: B:43:0x0001 \}\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_43;
Node_43 -> Node_33;
Node_43 -> Node_35;
Node_33 -> Node_37;
Node_33 -> Node_44;
Node_37 -> Node_38;
Node_38 -> Node_40;
Node_38 -> Node_41[style=dashed];
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_31;
Node_44 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
}

