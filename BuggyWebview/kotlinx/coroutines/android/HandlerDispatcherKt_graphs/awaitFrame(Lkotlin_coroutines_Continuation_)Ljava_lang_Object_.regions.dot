digraph "CFG forkotlinx.coroutines.android.HandlerDispatcherKt.awaitFrame(Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_682129249 {
label = "R(2:1|(2:(3:3|(1:5)|6)|(3:8|(1:10)|11)))";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0000|android.view.Choreographer android.view.Choreographer r0 = kotlinx.coroutines.android.HandlerDispatcherKt.choreographer\l}"];
subgraph cluster_Region_269723353 {
label = "R(2:(3:3|(1:5)|6)|(3:8|(1:10)|11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_35933377 {
label = "IF [B:31:0x0003] THEN: R(3:3|(1:5)|6) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0003|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_998024498 {
label = "R(3:3|(1:5)|6)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0005|kotlinx.coroutines.CancellableContinuationImpl kotlinx.coroutines.CancellableContinuationImpl r5 = new kotlinx.coroutines.CancellableContinuationImpl(kotlin.coroutines.intrinsics.IntrinsicsKt.intercepted(r11), 1)\lr5.initCancellability()\lkotlinx.coroutines.CancellableContinuation kotlinx.coroutines.CancellableContinuationImpl r5 = r5\lpostFrameCallback(r0, r5)\ljava.lang.Object java.lang.Object r1 = r5.getResult()\l}"];
subgraph cluster_IfRegion_884097864 {
label = "IF [B:33:0x0025] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0025|if (r1 == kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()) goto L5\l}"];
subgraph cluster_Region_1087321128 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0027|kotlin.coroutines.jvm.internal.DebugProbes.probeCoroutineSuspended(r11)\l}"];
}
}
Node_36 [shape=record,label="{36\:\ 0x002b|RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_2133341356 {
label = "R(3:8|(1:10)|11)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x002c|kotlinx.coroutines.CancellableContinuationImpl kotlinx.coroutines.CancellableContinuationImpl r5 = new kotlinx.coroutines.CancellableContinuationImpl(kotlin.coroutines.intrinsics.IntrinsicsKt.intercepted(r11), 1)\lr5.initCancellability()\lkotlinx.coroutines.CancellableContinuation final kotlinx.coroutines.CancellableContinuationImpl r5 = r5\lkotlinx.coroutines.Dispatchers.getMain().dispatch(kotlin.coroutines.EmptyCoroutineContext.INSTANCE, new kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrame$lambda3$$inlined$Runnable$1())\ljava.lang.Object java.lang.Object r1 = r5.getResult()\l}"];
subgraph cluster_IfRegion_349194071 {
label = "IF [B:38:0x005c] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x005c|if (r1 == kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()) goto L10\l}"];
subgraph cluster_Region_295902879 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x005e|kotlin.coroutines.jvm.internal.DebugProbes.probeCoroutineSuspended(r11)\l}"];
}
}
Node_41 [shape=record,label="{41\:\ 0x0062|RETURN\l|return r1\l}"];
}
}
}
Node_28 [shape=record,color=red,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,color=red,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.android.HandlerDispatcherKt.awaitFrame((r11v0 kotlin.coroutines.Continuation\<? super java.lang.Long\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0025 \-\> B:36:0x002b, CROSS_EDGE: B:41:0x0062 \-\> B:29:?, CROSS_EDGE: B:38:0x005c \-\> B:41:0x0062\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<\-Ljava\/lang\/Long;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_28;Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_37[style=dashed];
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_36[style=dashed];
Node_34 -> Node_36;
Node_36 -> Node_29;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_38 -> Node_41[style=dashed];
Node_39 -> Node_41;
Node_41 -> Node_29;
Node_28 -> Node_30;
}

