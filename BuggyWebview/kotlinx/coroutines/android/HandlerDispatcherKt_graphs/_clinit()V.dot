digraph "CFG forkotlinx.coroutines.android.HandlerDispatcherKt.\<clinit\>()V" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|r0 = null\l}"];
Node_43 [shape=record,label="{43\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0018, blocks: (B:33:0x0001), top: B:43:0x0001 \}\lCatch: all \-\> 0x0018\l|kotlin.Result$Companion r1 = kotlin.Result.Companion     \/\/ Catch: java.lang.Throwable \-\> L18\ljava.lang.Object r1 = kotlin.Result.m144constructorimpl(new kotlinx.coroutines.android.HandlerContext(asHandler(android.os.Looper.getMainLooper(), true), null, 2, null))     \/\/ Catch: java.lang.Throwable \-\> L18\l}"];
Node_37 [shape=record,label="{37\:\ 0x0023|PHI: r1 \l  PHI: (r1v3 java.lang.Object) = (r1v2 java.lang.Object), (r1v6 java.lang.Object) binds: [B:36:0x0019, B:33:0x0001] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0027|if (kotlin.Result.m150isFailureimpl(r1) == false) goto L6\l}"];
Node_40 [shape=record,label="{40\:\ 0x002a|r0 = r1\l}"];
Node_41 [shape=record,label="{41\:\ 0x002b|PHI: r0 \l  PHI: (r0v1 kotlinx.coroutines.android.HandlerDispatcher) = (r0v0 kotlinx.coroutines.android.HandlerDispatcher), (r0v3 java.lang.Object) binds: [B:38:0x0027, B:40:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.android.HandlerDispatcherKt.Main = r0\l}"];
Node_42 [shape=record,label="{42\:\ 0x002f|RETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x0018|ExcHandler: all \-\> 0x0018\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_36 [shape=record,label="{36\:\ 0x0019|kotlin.Result$Companion r2 = kotlin.Result.Companion\ljava.lang.Object r1 = kotlin.Result.m144constructorimpl(kotlin.ResultKt.createFailure(r1))\l}"];
MethodNode[shape=record,label="{static void kotlinx.coroutines.android.HandlerDispatcherKt.\<clinit\>()  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0027 \-\> B:41:0x002b, CROSS_EDGE: B:36:0x0019 \-\> B:37:0x0023, CROSS_EDGE: B:43:0x0001 \-\> B:35:0x0018\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0018, blocks: (B:33:0x0001), top: B:43:0x0001 \}\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_43;
Node_43 -> Node_33;
Node_43 -> Node_35;
Node_33 -> Node_37;
Node_33 -> Node_44;
Node_37 -> Node_38;
Node_38 -> Node_40;
Node_38 -> Node_41[style=dashed];
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_31;
Node_44 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
}

