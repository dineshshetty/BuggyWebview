digraph "CFG forkotlinx.coroutines.android.HandlerContext.scheduleResumeAfterDelay(JLkotlinx\/coroutines\/CancellableContinuation;)V" {
subgraph cluster_Region_1694350719 {
label = "R(2:1|(1:3)(1:6))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0000|java.lang.Runnable java.lang.Runnable r1 = new kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1()\l}"];
subgraph cluster_IfRegion_1696796065 {
label = "IF [B:19:0x0018] THEN: R(1:3) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0018|if (r4.handler.postDelayed(r1, kotlin.ranges.RangesKt.coerceAtMost(r5, (long) kotlin.time.DurationKt.MAX_MILLIS)) != false) goto L3\l}"];
subgraph cluster_Region_527145221 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x001a|r7.invokeOnCancellation(new kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1(r4, r1))\l}"];
}
subgraph cluster_Region_1178358443 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0025|cancelOnRejection(r7.getContext(), r1)\l}"];
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ ?|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x002c|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.android.HandlerContext.scheduleResumeAfterDelay((r4v0 'this' kotlinx.coroutines.android.HandlerContext A[IMMUTABLE_TYPE, THIS]), (r5v0 'timeMillis' long A[D('timeMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlinx.coroutines.CancellableContinuation\<? super kotlin.Unit\> A[D('continuation' kotlinx.coroutines.CancellableContinuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0025 \-\> B:22:0x002c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (JLkotlinx\/coroutines\/CancellableContinuation\<\-Lkotlin\/Unit;\>;)V\lMETHOD_OVERRIDE: [kotlinx.coroutines.Delay.scheduleResumeAfterDelay(long, kotlinx.coroutines.CancellableContinuation\<? super kotlin.Unit\>):void]\l}"];
MethodNode -> Node_16;Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_16 -> Node_18;
Node_23 -> Node_17;
Node_22 -> Node_17;
}

