digraph "CFG forkotlinx.coroutines.android.HandlerContext.isDispatchNeeded(Lkotlin\/coroutines\/CoroutineContext;)Z" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000}"];
Node_25 [shape=record,label="{25\:\ 0x0002|if (r2.invokeImmediately == false) goto L7\l}"];
Node_26 [shape=record,label="{26\:\ 0x0004}"];
Node_27 [shape=record,label="{27\:\ 0x0012|if (kotlin.jvm.internal.Intrinsics.areEqual(android.os.Looper.myLooper(), r2.handler.getLooper()) != false) goto L5\l}"];
Node_29 [shape=record,label="{29\:\ 0x0015|SYNTHETIC\lRETURN\l|return false\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0017|RETURN\lORIG_RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.android.HandlerContext.isDispatchNeeded((r2v0 'this' kotlinx.coroutines.android.HandlerContext A[IMMUTABLE_TYPE, THIS]), (r3v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0017 \-\> B:31:0x0018, CROSS_EDGE: B:25:0x0002 \-\> B:30:0x0017\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.CoroutineDispatcher.isDispatchNeeded(kotlin.coroutines.CoroutineContext):boolean]\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_30[style=dashed];
Node_29 -> Node_23;
Node_30 -> Node_23;
}

