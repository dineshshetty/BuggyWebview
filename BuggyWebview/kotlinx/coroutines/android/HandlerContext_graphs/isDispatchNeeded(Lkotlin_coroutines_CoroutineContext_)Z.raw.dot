digraph "CFG forkotlinx.coroutines.android.HandlerContext.isDispatchNeeded(Lkotlin\/coroutines\/CoroutineContext;)Z" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r2 I:kotlinx.coroutines.android.HandlerContext) kotlinx.coroutines.android.HandlerContext.invokeImmediately boolean  (LINE:137)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0017 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|0x0004: INVOKE  (r0 I:android.os.Looper) =  type: STATIC call: android.os.Looper.myLooper():android.os.Looper A[MD:():android.os.Looper (c)]\l0x0008: IGET  (r1 I:android.os.Handler) = (r2 I:kotlinx.coroutines.android.HandlerContext) kotlinx.coroutines.android.HandlerContext.handler android.os.Handler \l0x000a: INVOKE  (r1 I:android.os.Looper) = (r1 I:android.os.Handler) type: VIRTUAL call: android.os.Handler.getLooper():android.os.Looper A[MD:():android.os.Looper (c)]\l0x000e: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r1 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0015 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0015|SYNTHETIC\lRETURN\l|0x0015: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0017|RETURN\lORIG_RETURN\l|0x0017: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0018: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.android.HandlerContext.isDispatchNeeded((r2 'this' I:kotlinx.coroutines.android.HandlerContext A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0017 \-\> B:31:0x0018, CROSS_EDGE: B:25:0x0002 \-\> B:30:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r3 'context' Lkotlin\/coroutines\/CoroutineContext;\lMETHOD_OVERRIDE: [kotlinx.coroutines.CoroutineDispatcher.isDispatchNeeded(kotlin.coroutines.CoroutineContext):boolean]\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_30[style=dashed];
Node_29 -> Node_23;
Node_30 -> Node_23;
}

