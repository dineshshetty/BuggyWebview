digraph "CFG forkotlinx.coroutines.android.HandlerContext.invokeOnTimeout(JLjava\/lang\/Runnable;Lkotlin\/coroutines\/CoroutineContext;)Lkotlinx\/coroutines\/DisposableHandle;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: IGET  (r0 I:android.os.Handler) = (r3 I:kotlinx.coroutines.android.HandlerContext) kotlinx.coroutines.android.HandlerContext.handler android.os.Handler  (LINE:158)\l0x0002: CONST  (r1 I:??[long, double]) = (4611686018427387903(0x3fffffffffffffff, double:1.9999999999999998) ??[long, double]) \l0x0007: INVOKE  (r1 I:long) = (r4 I:long A[D('timeMillis' long)]), (r1 I:long) type: STATIC call: kotlin.ranges.RangesKt.coerceAtMost(long, long):long A[MD:(long, long):long (m)]\l0x000b: INVOKE  (r0 I:boolean) = (r0 I:android.os.Handler), (r6 I:java.lang.Runnable A[D('block' java.lang.Runnable)]), (r1 I:long) type: VIRTUAL call: android.os.Handler.postDelayed(java.lang.Runnable, long):boolean A[MD:(java.lang.Runnable, long):boolean (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0017 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|0x0011: NEW_INSTANCE  (r0 I:kotlinx.coroutines.android.HandlerContext$$ExternalSyntheticLambda0) =  kotlinx.coroutines.android.HandlerContext$$ExternalSyntheticLambda0  (LINE:159)\l0x0013: INVOKE  \l  (r0 I:kotlinx.coroutines.android.HandlerContext$$ExternalSyntheticLambda0)\l  (r3 I:kotlinx.coroutines.android.HandlerContext)\l  (r6 I:java.lang.Runnable A[D('block' java.lang.Runnable)])\l type: DIRECT call: kotlinx.coroutines.android.HandlerContext$$ExternalSyntheticLambda0.\<init\>(kotlinx.coroutines.android.HandlerContext, java.lang.Runnable):void A[MD:(kotlinx.coroutines.android.HandlerContext, java.lang.Runnable):void (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:kotlinx.coroutines.DisposableHandle) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0017|0x0017: INVOKE  \l  (r3 I:kotlinx.coroutines.android.HandlerContext)\l  (r7 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r6 I:java.lang.Runnable A[D('block' java.lang.Runnable)])\l type: DIRECT call: kotlinx.coroutines.android.HandlerContext.cancelOnRejection(kotlin.coroutines.CoroutineContext, java.lang.Runnable):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Runnable):void (m)] (LINE:161)\l0x001a: SGET  (r0 I:kotlinx.coroutines.NonDisposableHandle) =  kotlinx.coroutines.NonDisposableHandle.INSTANCE kotlinx.coroutines.NonDisposableHandle  (LINE:162)\l0x001c: CHECK_CAST (r0 I:kotlinx.coroutines.DisposableHandle) = (kotlinx.coroutines.DisposableHandle) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x001e|RETURN\l|0x001e: RETURN  (r0 I:kotlinx.coroutines.DisposableHandle) \l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.DisposableHandle kotlinx.coroutines.android.HandlerContext.invokeOnTimeout((r3 'this' I:kotlinx.coroutines.android.HandlerContext A[IMMUTABLE_TYPE, THIS]), (r4 I:long A[D('timeMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x001e \-\> B:17:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001e: r4 'timeMillis' J\l  \-1 \-0x001e: r6 'block' Ljava\/lang\/Runnable;\l  \-1 \-0x001e: r7 'context' Lkotlin\/coroutines\/CoroutineContext;\lMETHOD_OVERRIDE: [kotlinx.coroutines.android.HandlerDispatcher.invokeOnTimeout(long, java.lang.Runnable, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.DisposableHandle, kotlinx.coroutines.Delay.invokeOnTimeout(long, java.lang.Runnable, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.DisposableHandle, kotlinx.coroutines.EventLoopImplBase.invokeOnTimeout(long, java.lang.Runnable, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.DisposableHandle]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_22 -> Node_23;
Node_23 -> Node_17;
}

