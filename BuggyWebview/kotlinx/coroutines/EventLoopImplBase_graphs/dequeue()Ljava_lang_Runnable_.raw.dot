digraph "CFG forkotlinx.coroutines.EventLoopImplBase.dequeue()Ljava\/lang\/Runnable;" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY])  (LINE:325)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0002|LOOP_START\lLOOP:0: B:40:0x0002\-\>B:71:0x0002\l|0x0003: IGET  (r2 I:java.lang.Object) = (r0 I:kotlinx.coroutines.EventLoopImplBase A[D('$this$loop$iv' kotlinx.coroutines.EventLoopImplBase)]) kotlinx.coroutines.EventLoopImplBase._queue java.lang.Object  (LINE:558)\l0x0005: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:327)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0008|0x0008: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('queue' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x000b \l}"];
Node_43 [shape=record,label="{43\:\ 0x000b|0x000b: INSTANCE_OF  (r5 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('queue' java.lang.Object)]) kotlinx.coroutines.internal.LockFreeTaskQueueCore  (LINE:328)\l}"];
Node_44 [shape=record,label="{44\:\ 0x000d|0x000d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x0035 \l}"];
Node_66 [shape=record,label="{66\:\ 0x0035|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0035|0x0036: INVOKE  (r5 I:kotlinx.coroutines.internal.Symbol) =  type: STATIC call: kotlinx.coroutines.EventLoop_commonKt.access$getCLOSED_EMPTY$p():kotlinx.coroutines.internal.Symbol A[MD:():kotlinx.coroutines.internal.Symbol (m)] (LINE:334)\l}"];
Node_54 [shape=record,label="{54\:\ 0x003a|0x003a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('queue' java.lang.Object)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x003d \l}"];
Node_56 [shape=record,label="{56\:\ 0x003d|0x003d: SGET  (r5 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.EventLoopImplBase._queue$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:335)\l0x003f: INVOKE  (r4 I:boolean) = \l  (r5 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r7 I:java.lang.Object)\l  (r2 I:java.lang.Object A[D('queue' java.lang.Object)])\l  (r4 I:java.lang.Object)\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0043|0x0043: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0002 \l}"];
Node_68 [shape=record,label="{68\:\ 0x0045|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x0045|0x0045: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('queue' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x004b \l}"];
Node_59 [shape=record,label="{59\:\ 0x0047|0x0047: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('queue' java.lang.Object)]) \l0x0048: CHECK_CAST (r4 I:java.lang.Runnable) = (java.lang.Runnable) (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_60 [shape=record,label="{60\:\ 0x004a|RETURN\l|0x004a: RETURN  (r4 I:java.lang.Runnable) \l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_61 [shape=record,label="{61\:\ 0x004b|0x004b: NEW_INSTANCE  (r4 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x004d: CONST_STR  (r5 I:java.lang.String) =  \"null cannot be cast to non\-null type java.lang.Runnable\{ kotlinx.coroutines.RunnableKt.Runnable \}\" \l0x004f: INVOKE  (r4 I:java.lang.NullPointerException), (r5 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x0052|0x0052: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_72 [shape=record,label="{72\:\ 0x0002|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ 0x0002|LOOP_END\lSYNTHETIC\lLOOP:0: B:40:0x0002\-\>B:71:0x0002\l}"];
Node_69 [shape=record,label="{69\:\ 0x003c|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x003c|RETURN\l|0x003c: RETURN  (r4 I:java.lang.Runnable) \l}"];
Node_70 [shape=record,label="{70\:\ 0x000f|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x000f|0x000f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('queue' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x002d  (LINE:329)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0011|0x0011: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('queue' java.lang.Object)]) \l0x0012: CHECK_CAST (r4 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) (r4 I:??[OBJECT, ARRAY]) \l0x0014: INVOKE  (r4 I:java.lang.Object) = (r4 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeTaskQueueCore.removeFirstOrNull():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0018: SGET  (r5 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.internal.LockFreeTaskQueueCore.REMOVE_FROZEN kotlinx.coroutines.internal.Symbol  (LINE:330)\l}"];
Node_47 [shape=record,label="{47\:\ 0x001a|0x001a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) == (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0020 \l}"];
Node_50 [shape=record,label="{50\:\ 0x0020|0x0020: SGET  (r5 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.EventLoopImplBase._queue$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:331)\l0x0022: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('queue' java.lang.Object)]) \l0x0023: CHECK_CAST (r6 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) (r6 I:??[OBJECT, ARRAY]) \l0x0025: INVOKE  (r6 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) = (r6 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeTaskQueueCore.next():kotlinx.coroutines.internal.LockFreeTaskQueueCore A[MD:():kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\> (m)]\l0x0029: INVOKE  \l  (r5 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r7 I:java.lang.Object)\l  (r2 I:java.lang.Object A[D('queue' java.lang.Object)])\l  (r6 I:java.lang.Object)\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_73 [shape=record,label="{73\:\ 0x0002|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x001c|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x001c|0x001c: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) \l0x001d: CHECK_CAST (r5 I:java.lang.Runnable) = (java.lang.Runnable) (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x001f|RETURN\l|0x001f: RETURN  (r5 I:java.lang.Runnable) \l}"];
Node_67 [shape=record,label="{67\:\ 0x002d|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x002d|0x002d: NEW_INSTANCE  (r4 I:java.lang.NullPointerException A[D('result' java.lang.Object)]) =  java.lang.NullPointerException  (LINE:329)\l0x002f: CONST_STR  (r5 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlinx.coroutines.internal.LockFreeTaskQueueCore\<java.lang.Runnable\{ kotlinx.coroutines.RunnableKt.Runnable \}\>\{ kotlinx.coroutines.EventLoop_commonKt.Queue\<java.lang.Runnable\{ kotlinx.coroutines.RunnableKt.Runnable \}\> \}\" \l0x0031: INVOKE  (r4 I:java.lang.NullPointerException), (r5 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0034|0x0034: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_64 [shape=record,label="{64\:\ 0x000a|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x000a|RETURN\l|0x000a: RETURN  (r4 I:java.lang.Runnable) \l}"];
MethodNode[shape=record,label="{private final java.lang.Runnable kotlinx.coroutines.EventLoopImplBase.dequeue((r7 'this' I:kotlinx.coroutines.EventLoopImplBase A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:49:0x001f \-\> B:38:?, BACK_EDGE: B:50:0x0020 \-\> B:40:0x0002, CROSS_EDGE: B:52:0x0034 \-\> B:38:?, CROSS_EDGE: B:55:0x003c \-\> B:38:?, CROSS_EDGE: B:60:0x004a \-\> B:38:?, CROSS_EDGE: B:62:0x0052 \-\> B:38:?, BACK_EDGE: B:57:0x0043 \-\> B:40:0x0002\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0018\-0x002d: r4 'result' Ljava\/lang\/Object;\l  0x0005\-0x0054: r2 'queue' Ljava\/lang\/Object;\l  0x0006\-0x0054: r3 '$i$a$\-loop\-EventLoopImplBase$dequeue$1' I\l  0x0001\-0x0054: r0 '$this$loop$iv' Lkotlinx\/coroutines\/EventLoopImplBase;\l  0x0002\-0x0054: r1 '$i$f$loop' I\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_43;
Node_41 -> Node_64[style=dashed];
Node_43 -> Node_44;
Node_44 -> Node_66;
Node_44 -> Node_70[style=dashed];
Node_66 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_56;
Node_54 -> Node_69[style=dashed];
Node_56 -> Node_57;
Node_57 -> Node_68[style=dashed];
Node_57 -> Node_72;
Node_68 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_61;
Node_59 -> Node_60;
Node_60 -> Node_38;
Node_61 -> Node_62;
Node_62 -> Node_38;
Node_72 -> Node_71;
Node_71 -> Node_40;
Node_69 -> Node_55;
Node_55 -> Node_38;
Node_70 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_67;
Node_46 -> Node_47;
Node_47 -> Node_50;
Node_47 -> Node_65[style=dashed];
Node_50 -> Node_73;
Node_73 -> Node_71;
Node_65 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_38;
Node_67 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_38;
Node_64 -> Node_42;
Node_42 -> Node_38;
}

