digraph "CFG forkotlinx.coroutines.EventLoopImplBase.shutdown()V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE.resetEventLoop$kotlinx_coroutines_core()\lsetCompleted(true)\lcloseQueue()\l}"];
Node_12 [shape=record,label="{12\:\ 0x000c|LOOP_START\lLOOP:0: B:12:0x000c\-\>B:13:0x0014\l}"];
Node_13 [shape=record,label="{13\:\ 0x0014|LOOP_END\lLOOP:0: B:12:0x000c\-\>B:13:0x0014\l|if ((processNextEvent() \> 0 ? 1 : (processNextEvent() == 0 ? 0 : \-1)) \> 0) goto L4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0017|rescheduleAllDelayed()\l}"];
Node_16 [shape=record,label="{16\:\ 0x001a|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.EventLoopImplBase.shutdown((r5v0 'this' kotlinx.coroutines.EventLoopImplBase A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x0014 \-\> B:12:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.EventLoop.shutdown():void]\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_12[style=dashed];
Node_13 -> Node_17;
Node_17 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_10;
}

