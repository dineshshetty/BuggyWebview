digraph "CFG forkotlinx.coroutines.EventLoopImplBase.schedule(JLkotlinx\/coroutines\/EventLoopImplBase$DelayedTask;)V" {
subgraph cluster_Region_911283792 {
label = "R(1:2)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_730945511 {
label = "Switch: 4
 case 0 -> R(1:(2:(2:10|11)|(1:12)))
 case 1 -> R(2:6|7)
 case 2 -> R(1:13)
 case default -> R(1:4)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0005|switch(scheduleImpl(r3, r5)) \{\l    case 0: goto L8;\l    case 1: goto L6;\l    case 2: goto L13;\l    default: goto L3;\l\}\l}"];
subgraph cluster_Region_1081083411 {
label = "R(1:(2:(2:10|11)|(1:12)))";
node [shape=record,color=blue];
subgraph cluster_Region_1774415685 {
label = "R(2:(2:10|11)|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1469974459 {
label = "IF [B:24:0x001d] THEN: R(2:10|11) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x001d|if (shouldUnpark(r5) != false) goto L10\l}"];
subgraph cluster_Region_1989233856 {
label = "R(2:10|11)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x001f|unpark()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0022|RETURN\lORIG_RETURN\l|return\l}"];
}
}
subgraph cluster_Region_907123871 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
subgraph cluster_Region_1146778719 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0015|reschedule(r3, r5)\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
subgraph cluster_Region_1667104944 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
subgraph cluster_Region_525707095 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0013|throw new java.lang.IllegalStateException(\"unexpected result\".toString())\l}"];
}
}
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0001}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0008}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0019}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.EventLoopImplBase.schedule((r2v0 'this' kotlinx.coroutines.EventLoopImplBase A[IMMUTABLE_TYPE, THIS]), (r3v0 'now' long A[D('now' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'delayedTask' kotlinx.coroutines.EventLoopImplBase$DelayedTask A[D('delayedTask' kotlinx.coroutines.EventLoopImplBase$DelayedTask), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0022 \-\> B:16:?, CROSS_EDGE: B:25:0x001f \-\> B:26:0x0022, CROSS_EDGE: B:24:0x001d \-\> B:26:0x0022, CROSS_EDGE: B:18:0x0005 \-\> B:26:0x0022\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_18 -> Node_19;
Node_18 -> Node_22;
Node_18 -> Node_23;
Node_18 -> Node_29;
Node_24 -> Node_25;
Node_24 -> Node_28[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_16;
Node_28 -> Node_16;
Node_22 -> Node_27;
Node_27 -> Node_16;
Node_29 -> Node_16;
Node_20 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_23 -> Node_24;
}

