digraph "CFG forkotlinx.coroutines.EventLoopImplBase.schedule(JLkotlinx\/coroutines\/EventLoopImplBase$DelayedTask;)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0001|0x0001: INVOKE  (r0 I:int) = \l  (r2 I:kotlinx.coroutines.EventLoopImplBase)\l  (r3 I:long A[D('now' long)])\l  (r5 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask A[D('delayedTask' kotlinx.coroutines.EventLoopImplBase$DelayedTask)])\l type: DIRECT call: kotlinx.coroutines.EventLoopImplBase.scheduleImpl(long, kotlinx.coroutines.EventLoopImplBase$DelayedTask):int A[MD:(long, kotlinx.coroutines.EventLoopImplBase$DelayedTask):int (m)] (LINE:369)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|0x0005: SWITCH  (r0 I:??)\l case 0: goto B:23:0x0019\l case 1: goto B:22:0x0015\l case 2: goto B:29:?\l default: goto B:19:0x0008 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|0x0008: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:367)\l0x000a: CONST_STR  (r1 I:java.lang.String) =  \"unexpected result\"  (LINE:369)\l0x000c: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0010: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|0x0013: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|0x0015: INVOKE  \l  (r2 I:kotlinx.coroutines.EventLoopImplBase)\l  (r3 I:long A[D('now' long)])\l  (r5 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask A[D('delayedTask' kotlinx.coroutines.EventLoopImplBase$DelayedTask)])\l type: VIRTUAL call: kotlinx.coroutines.EventLoopImplBase.reschedule(long, kotlinx.coroutines.EventLoopImplBase$DelayedTask):void A[MD:(long, kotlinx.coroutines.EventLoopImplBase$DelayedTask):void (m)]\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0022: RETURN   A[SYNTHETIC] (LINE:371)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|0x0019: INVOKE  (r0 I:boolean) = \l  (r2 I:kotlinx.coroutines.EventLoopImplBase)\l  (r5 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask A[D('delayedTask' kotlinx.coroutines.EventLoopImplBase$DelayedTask)])\l type: DIRECT call: kotlinx.coroutines.EventLoopImplBase.shouldUnpark(kotlinx.coroutines.EventLoopImplBase$DelayedTask):boolean A[MD:(kotlinx.coroutines.EventLoopImplBase$DelayedTask):boolean (m)] (LINE:366)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001d|0x001d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:? \l}"];
Node_25 [shape=record,label="{25\:\ 0x001f|0x001f: INVOKE  (r2 I:kotlinx.coroutines.EventLoopImplBase) type: VIRTUAL call: kotlinx.coroutines.EventLoopImplBase.unpark():void A[MD:():void (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: RETURN    (LINE:371)\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|0x0022: RETURN   A[SYNTHETIC] (LINE:371)\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x0022: RETURN   A[SYNTHETIC] (LINE:371)\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.EventLoopImplBase.schedule((r2 'this' I:kotlinx.coroutines.EventLoopImplBase A[IMMUTABLE_TYPE, THIS]), (r3 I:long A[D('now' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask A[D('delayedTask' kotlinx.coroutines.EventLoopImplBase$DelayedTask), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0022 \-\> B:16:?, CROSS_EDGE: B:25:0x001f \-\> B:26:0x0022, CROSS_EDGE: B:24:0x001d \-\> B:26:0x0022, CROSS_EDGE: B:18:0x0005 \-\> B:26:0x0022\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002d: r3 'now' J\l  \-1 \-0x002d: r5 'delayedTask' Lkotlinx\/coroutines\/EventLoopImplBase$DelayedTask;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_22;
Node_18 -> Node_23;
Node_18 -> Node_29;
Node_19 -> Node_20;
Node_20 -> Node_16;
Node_22 -> Node_27;
Node_27 -> Node_16;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_16;
Node_28 -> Node_16;
Node_29 -> Node_16;
}

