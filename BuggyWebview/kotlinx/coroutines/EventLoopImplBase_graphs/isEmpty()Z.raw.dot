digraph "CFG forkotlinx.coroutines.EventLoopImplBase.isEmpty()Z" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r5 I:kotlinx.coroutines.EventLoopImplBase) type: VIRTUAL call: kotlinx.coroutines.EventLoopImplBase.isUnconfinedQueueEmpty():boolean A[MD:():boolean (m)] (LINE:197)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0008 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:boolean) \l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0008|0x0008: IGET  (r0 I:java.lang.Object) = (r5 I:kotlinx.coroutines.EventLoopImplBase) kotlinx.coroutines.EventLoopImplBase._delayed java.lang.Object  (LINE:198)\l0x000a: CHECK_CAST (r0 I:kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue) = (kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('delayed' kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0015  (LINE:199)\l}"];
Node_30 [shape=record,label="{30\:\ 0x000e|0x000e: INVOKE  (r2 I:boolean) = \l  (r0 I:kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue A[D('delayed' kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue)])\l type: VIRTUAL call: kotlinx.coroutines.EventLoopImplBase.DelayedTaskQueue.isEmpty():boolean A[MD:():boolean (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0012|0x0012: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0015 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0014|RETURN\l|0x0014: RETURN  (r1 I:boolean) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0015|0x0015: IGET  (r2 I:java.lang.Object) = (r5 I:kotlinx.coroutines.EventLoopImplBase) kotlinx.coroutines.EventLoopImplBase._queue java.lang.Object  (LINE:200)\l0x0017: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:201)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0018|0x0018: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('queue' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x001c \l}"];
Node_35 [shape=record,label="{35\:\ 0x001a|SYNTHETIC\lRETURN\l|0x001a: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x002f: RETURN  (r1 I:boolean) A[SYNTHETIC] (LINE:200)\l}"];
Node_36 [shape=record,label="{36\:\ 0x001c|0x001c: INSTANCE_OF  (r4 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('queue' java.lang.Object)]) kotlinx.coroutines.internal.LockFreeTaskQueueCore  (LINE:202)\l}"];
Node_37 [shape=record,label="{37\:\ 0x001e|0x001e: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0028 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0020|0x0020: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('queue' java.lang.Object)]) \l0x0021: CHECK_CAST (r1 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) (r1 I:??[OBJECT, ARRAY]) \l0x0023: INVOKE  (r1 I:boolean) = (r1 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeTaskQueueCore.isEmpty():boolean A[MD:():boolean (m)]\l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lRETURN\l|0x002f: RETURN  (r1 I:boolean) A[SYNTHETIC] (LINE:200)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0028|0x0028: INVOKE  (r4 I:kotlinx.coroutines.internal.Symbol) =  type: STATIC call: kotlinx.coroutines.EventLoop_commonKt.access$getCLOSED_EMPTY$p():kotlinx.coroutines.internal.Symbol A[MD:():kotlinx.coroutines.internal.Symbol (m)] (LINE:203)\l}"];
Node_40 [shape=record,label="{40\:\ 0x002c|0x002c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('queue' java.lang.Object)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:? \l}"];
Node_41 [shape=record,label="{41\:\ 0x002e|RETURN\lORIG_RETURN\l|0x002e: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x002f: RETURN  (r1 I:boolean)  (LINE:200)\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|0x002f: RETURN  (r1 I:boolean) A[SYNTHETIC] (LINE:200)\l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.EventLoopImplBase.isEmpty((r5 'this' I:kotlinx.coroutines.EventLoopImplBase A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x0014 \-\> B:24:?, CROSS_EDGE: B:42:0x002f \-\> B:24:?, CROSS_EDGE: B:38:0x0020 \-\> B:42:0x002f, CROSS_EDGE: B:41:0x002e \-\> B:42:0x002f, CROSS_EDGE: B:40:0x002c \-\> B:42:0x002f, CROSS_EDGE: B:29:0x000c \-\> B:33:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0017\-0x002f: r2 'queue' Ljava\/lang\/Object;\l  0x000c\-0x002f: r0 'delayed' Lkotlinx\/coroutines\/EventLoopImplBase$DelayedTaskQueue;\lMETHOD_OVERRIDE: [kotlinx.coroutines.EventLoop.isEmpty():boolean]\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_24;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_24;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_24;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_44;
Node_44 -> Node_24;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_45;
Node_41 -> Node_24;
Node_45 -> Node_24;
}

