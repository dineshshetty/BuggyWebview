digraph "CFG forkotlinx.coroutines.EventLoopImplBase.shouldUnpark(Lkotlinx\/coroutines\/EventLoopImplBase$DelayedTask;)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object) = (r1 I:kotlinx.coroutines.EventLoopImplBase) kotlinx.coroutines.EventLoopImplBase._delayed java.lang.Object  (LINE:373)\l0x0002: CHECK_CAST (r0 I:kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue) = (kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0008 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('task' kotlinx.coroutines.EventLoopImplBase$DelayedTask)])  \-\> B:19:0x0012 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|SYNTHETIC\lRETURN\l|0x0010: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0013: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: RETURN  (r0 I:boolean) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: INVOKE  (r0 I:kotlinx.coroutines.internal.ThreadSafeHeapNode) = (r0 I:kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue) type: VIRTUAL call: kotlinx.coroutines.EventLoopImplBase.DelayedTaskQueue.peek():kotlinx.coroutines.internal.ThreadSafeHeapNode A[MD:():T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\> (m)]\l0x000c: CHECK_CAST (r0 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask) = (kotlinx.coroutines.EventLoopImplBase$DelayedTask) (r0 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.EventLoopImplBase.shouldUnpark((r1 'this' I:kotlinx.coroutines.EventLoopImplBase A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask A[D('task' kotlinx.coroutines.EventLoopImplBase$DelayedTask), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0012 \-\> B:20:0x0013, CROSS_EDGE: B:16:0x0008 \-\> B:17:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0013: r2 'task' Lkotlinx\/coroutines\/EventLoopImplBase$DelayedTask;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_12;
Node_19 -> Node_12;
Node_16 -> Node_17;
}

