digraph "CFG forkotlinx.coroutines.EventLoopImplBase.enqueue(Ljava\/lang\/Runnable;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r1 I:kotlinx.coroutines.EventLoopImplBase), (r2 I:java.lang.Runnable A[D('task' java.lang.Runnable)]) type: DIRECT call: kotlinx.coroutines.EventLoopImplBase.enqueueImpl(java.lang.Runnable):boolean A[MD:(java.lang.Runnable):boolean (m)] (LINE:288)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x000a \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: INVOKE  (r1 I:kotlinx.coroutines.EventLoopImplBase) type: VIRTUAL call: kotlinx.coroutines.EventLoopImplBase.unpark():void A[MD:():void (m)] (LINE:290)\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x000f: RETURN   A[SYNTHETIC] (LINE:294)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|0x000a: SGET  (r0 I:kotlinx.coroutines.DefaultExecutor) =  kotlinx.coroutines.DefaultExecutor.INSTANCE kotlinx.coroutines.DefaultExecutor  (LINE:292)\l0x000c: INVOKE  (r0 I:kotlinx.coroutines.DefaultExecutor), (r2 I:java.lang.Runnable A[D('task' java.lang.Runnable)]) type: VIRTUAL call: kotlinx.coroutines.DefaultExecutor.enqueue(java.lang.Runnable):void A[MD:(java.lang.Runnable):void (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x000f|RETURN\lORIG_RETURN\l|0x000f: RETURN    (LINE:294)\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.EventLoopImplBase.enqueue((r1 'this' I:kotlinx.coroutines.EventLoopImplBase A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Runnable A[D('task' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000a \-\> B:14:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000f: r2 'task' Ljava\/lang\/Runnable;\lMETHOD_OVERRIDE: [kotlinx.coroutines.EventLoopImplBase.enqueue(java.lang.Runnable):void]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

