digraph "CFG forkotlinx.coroutines.EventLoopImplBase.processNextEvent()J" {
Node_50 [shape=record,label="{50\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_52 [shape=record,label="{52\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r15 I:kotlinx.coroutines.EventLoopImplBase) type: VIRTUAL call: kotlinx.coroutines.EventLoopImplBase.processUnconfinedEvent():boolean A[MD:():boolean (m)] (LINE:259)\l0x0004: CONST  (r1 I:??[long, double]) = (0 ??[long, double]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0009 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0008|RETURN\l|0x0008: RETURN  (r1 I:long) \l}"];
Node_51 [shape=record,label="{51\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_55 [shape=record,label="{55\:\ 0x0009|0x0009: IGET  (r0 I:java.lang.Object) = (r15 I:kotlinx.coroutines.EventLoopImplBase) kotlinx.coroutines.EventLoopImplBase._delayed java.lang.Object  (LINE:261)\l0x000b: CHECK_CAST (r0 I:kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue) = (kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('delayed' kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:90:0x006e  (LINE:262)\l}"];
Node_57 [shape=record,label="{57\:\ 0x000f|0x000f: INVOKE  (r3 I:boolean) = \l  (r0 I:kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue A[D('delayed' kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue)])\l type: VIRTUAL call: kotlinx.coroutines.EventLoopImplBase.DelayedTaskQueue.isEmpty():boolean A[MD:():boolean (m)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0013|0x0013: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:90:0x006e \l}"];
Node_59 [shape=record,label="{59\:\ 0x0015|0x0015: INVOKE  (r3 I:kotlinx.coroutines.AbstractTimeSource) =  type: STATIC call: kotlinx.coroutines.AbstractTimeSourceKt.getTimeSource():kotlinx.coroutines.AbstractTimeSource A[MD:():kotlinx.coroutines.AbstractTimeSource (m)] (LINE:263)\l0x0019: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_60 [shape=record,label="{60\:\ 0x001a|0x001a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x001e \l}"];
Node_61 [shape=record,label="{61\:\ 0x001c|0x001c: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_63 [shape=record,label="{63\:\ 0x0026|0x0026: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x002d \l}"];
Node_64 [shape=record,label="{64\:\ 0x0028|0x0028: INVOKE  (r5 I:long) =  type: STATIC call: java.lang.System.nanoTime():long A[MD:():long (c)]\l}"];
Node_99 [shape=record,label="{99\:\ 0x0031|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0031|LOOP_START\lLOOP:0: B:66:0x0031\-\>B:85:0x0068\l|0x0032: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('delayed' kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue)])  (LINE:268)\l0x0033: CHECK_CAST (r3 I:kotlinx.coroutines.internal.ThreadSafeHeap) = (kotlinx.coroutines.internal.ThreadSafeHeap) (r3 I:??[OBJECT, ARRAY]) \l0x0035: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0036: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:545)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0037|0x0037: MONITOR_ENTER  (r3 I:??[OBJECT, ARRAY] A[D('this_$iv' kotlinx.coroutines.internal.ThreadSafeHeap)])  (LINE:546)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0038|0x0038: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_96 [shape=record,label="{96\:\ 0x0039|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_69 [shape=record,label="{69\:\ 0x0039|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x006b, blocks: (B:69:0x0039, B:73:0x0042, B:75:0x004d, B:79:0x0059, B:80:0x005e), top: B:96:0x0039 \}\lCatch: all \-\> 0x006b\l|0x0039: INVOKE  (r10 I:kotlinx.coroutines.internal.ThreadSafeHeapNode) = (r3 I:kotlinx.coroutines.internal.ThreadSafeHeap A[D('this_$iv' kotlinx.coroutines.internal.ThreadSafeHeap)]) type: VIRTUAL call: kotlinx.coroutines.internal.ThreadSafeHeap.firstImpl():kotlinx.coroutines.internal.ThreadSafeHeapNode A[Catch: all \-\> 0x006b, MD:():T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\> (m), TRY_ENTER, TRY_LEAVE] (LINE:547)\l}"];
Node_70 [shape=record,label="{70\:\ 0x003d|0x003d: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:73:0x0042 \l}"];
Node_71 [shape=record,label="{71\:\ 0x003f|0x003f: MONITOR_EXIT  (r3 I:??[OBJECT, ARRAY] A[D('this_$iv' kotlinx.coroutines.internal.ThreadSafeHeap)]) \l}"];
Node_72 [shape=record,label="{72\:\ 0x0040|0x0040: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_84 [shape=record,label="{84\:\ 0x0066|0x0066: CHECK_CAST (r11 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask) = (kotlinx.coroutines.EventLoopImplBase$DelayedTask) (r11 I:??[OBJECT, ARRAY])  (LINE:268)\l}"];
Node_85 [shape=record,label="{85\:\ 0x0068|LOOP_END\lLOOP:0: B:66:0x0031\-\>B:85:0x0068\l|0x0068: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x0031 \l}"];
Node_98 [shape=record,label="{98\:\ 0x006e|SYNTHETIC\l}"];
Node_73 [shape=record,label="{73\:\ 0x0042|TRY_ENTER\lTryCatch #0 \{all \-\> 0x006b, blocks: (B:69:0x0039, B:73:0x0042, B:75:0x004d, B:79:0x0059, B:80:0x005e), top: B:96:0x0039 \}\lCatch: all \-\> 0x006b\l|0x0042: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('first$iv' kotlinx.coroutines.internal.ThreadSafeHeapNode)]) A[TRY_ENTER] (LINE:548)\l0x0043: CHECK_CAST (r11 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask) = (kotlinx.coroutines.EventLoopImplBase$DelayedTask) (r11 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x006b]\l0x0045: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0046: INVOKE  (r13 I:boolean) = \l  (r11 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask A[D('it' kotlinx.coroutines.EventLoopImplBase$DelayedTask)])\l  (r5 I:long A[D('now' long)])\l type: VIRTUAL call: kotlinx.coroutines.EventLoopImplBase.DelayedTask.timeToExecute(long):boolean A[Catch: all \-\> 0x006b, MD:(long):boolean (m)] (LINE:269)\l0x004a: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_74 [shape=record,label="{74\:\ 0x004b|0x004b: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:76:0x0055 \l}"];
Node_75 [shape=record,label="{75\:\ 0x004d|TryCatch #0 \{all \-\> 0x006b, blocks: (B:69:0x0039, B:73:0x0042, B:75:0x004d, B:79:0x0059, B:80:0x005e), top: B:96:0x0039 \}\lCatch: all \-\> 0x006b\l|0x004d: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('it' kotlinx.coroutines.EventLoopImplBase$DelayedTask)])  (LINE:270)\l0x004e: CHECK_CAST (r13 I:java.lang.Runnable) = (java.lang.Runnable) (r13 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x006b]\l0x0050: INVOKE  (r13 I:boolean) = (r15 I:kotlinx.coroutines.EventLoopImplBase), (r13 I:java.lang.Runnable) type: DIRECT call: kotlinx.coroutines.EventLoopImplBase.enqueueImpl(java.lang.Runnable):boolean A[Catch: all \-\> 0x006b, MD:(java.lang.Runnable):boolean (m)]\l0x0054: GOTO  \-\> 0x0056 \l}"];
Node_78 [shape=record,label="{78\:\ 0x0057|0x0057: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x005e \l}"];
Node_79 [shape=record,label="{79\:\ 0x0059|TryCatch #0 \{all \-\> 0x006b, blocks: (B:69:0x0039, B:73:0x0042, B:75:0x004d, B:79:0x0059, B:80:0x005e), top: B:96:0x0039 \}\lCatch: all \-\> 0x006b\l|0x0059: INVOKE  (r11 I:kotlinx.coroutines.internal.ThreadSafeHeapNode) = \l  (r3 I:kotlinx.coroutines.internal.ThreadSafeHeap A[D('this_$iv' kotlinx.coroutines.internal.ThreadSafeHeap)])\l  (r14 I:int)\l type: VIRTUAL call: kotlinx.coroutines.internal.ThreadSafeHeap.removeAtImpl(int):kotlinx.coroutines.internal.ThreadSafeHeapNode A[Catch: all \-\> 0x006b, MD:(int):T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\> (m)] (LINE:549)\l0x005d: GOTO  \-\> 0x0062 \l}"];
Node_83 [shape=record,label="{83\:\ 0x0063|0x0063: MONITOR_EXIT  (r3 I:??[OBJECT, ARRAY] A[D('this_$iv' kotlinx.coroutines.internal.ThreadSafeHeap)]) \l}"];
Node_80 [shape=record,label="{80\:\ 0x005e|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x006b, blocks: (B:69:0x0039, B:73:0x0042, B:75:0x004d, B:79:0x0059, B:80:0x005e), top: B:96:0x0039 \}\lCatch: all \-\> 0x006b\l|0x005e: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY])  (LINE:551)\l0x005f: CHECK_CAST (r11 I:kotlinx.coroutines.internal.ThreadSafeHeapNode) = (kotlinx.coroutines.internal.ThreadSafeHeapNode) (r11 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x006b, TRY_LEAVE]\l}"];
Node_81 [shape=record,label="{81\:\ 0x0061|0x0061: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_76 [shape=record,label="{76\:\ 0x0055|0x0055: CONST  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:272)\l}"];
Node_97 [shape=record,label="{97\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_87 [shape=record,label="{87\:\ 0x006b|ExcHandler: all \-\> 0x006b\l|0x006b: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x006b] (LINE:548)\l}"];
Node_89 [shape=record,label="{89\:\ 0x006d|0x006d: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_65 [shape=record,label="{65\:\ 0x002d|0x002d: INVOKE  (r5 I:long) = (r3 I:java.lang.Long) type: VIRTUAL call: java.lang.Long.longValue():long A[MD:():long (c)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x001e|0x001e: INVOKE  (r5 I:long) = (r3 I:kotlinx.coroutines.AbstractTimeSource) type: VIRTUAL call: kotlinx.coroutines.AbstractTimeSource.nanoTime():long A[MD:():long (m)]\l0x0022: INVOKE  (r3 I:java.lang.Long) = (r5 I:long) type: STATIC call: java.lang.Long.valueOf(long):java.lang.Long A[MD:(long):java.lang.Long (c)]\l}"];
Node_90 [shape=record,label="{90\:\ 0x006e|0x006e: INVOKE  (r3 I:java.lang.Runnable) = (r15 I:kotlinx.coroutines.EventLoopImplBase) type: DIRECT call: kotlinx.coroutines.EventLoopImplBase.dequeue():java.lang.Runnable A[MD:():java.lang.Runnable (m)] (LINE:277)\l}"];
Node_91 [shape=record,label="{91\:\ 0x0072|0x0072: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('task' java.lang.Runnable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:94:0x007a  (LINE:278)\l}"];
Node_92 [shape=record,label="{92\:\ 0x0074|0x0074: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:279)\l0x0075: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:554)\l0x0076: INVOKE  (r3 I:java.lang.Runnable A[D('task' java.lang.Runnable)]) type: INTERFACE call: java.lang.Runnable.run():void A[MD:():void (c)] (LINE:279)\l}"];
Node_93 [shape=record,label="{93\:\ 0x0079|RETURN\l|0x0079: RETURN  (r1 I:long)  (LINE:280)\l}"];
Node_94 [shape=record,label="{94\:\ 0x007a|0x007a: INVOKE  (r1 I:long) = (r15 I:kotlinx.coroutines.EventLoopImplBase) type: VIRTUAL call: kotlinx.coroutines.EventLoopImplBase.getNextTime():long A[MD:():long (m)] (LINE:282)\l}"];
Node_95 [shape=record,label="{95\:\ 0x007e|RETURN\l|0x007e: RETURN  (r1 I:long) \l}"];
MethodNode[shape=record,label="{public long kotlinx.coroutines.EventLoopImplBase.processNextEvent((r15 'this' I:kotlinx.coroutines.EventLoopImplBase A[IMMUTABLE_TYPE, THIS]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lBACK_EDGE: B:85:0x0068 \-\> B:66:0x0031, CROSS_EDGE: B:93:0x0079 \-\> B:51:?, CROSS_EDGE: B:95:0x007e \-\> B:51:?, CROSS_EDGE: B:83:0x0063 \-\> B:84:0x0066, CROSS_EDGE: B:81:0x0061 \-\> B:83:0x0063, CROSS_EDGE: B:76:0x0055 \-\> B:78:0x0057, CROSS_EDGE: B:89:0x006d \-\> B:51:?, CROSS_EDGE: B:96:0x0039 \-\> B:87:0x006b, CROSS_EDGE: B:65:0x002d \-\> B:66:0x0031, CROSS_EDGE: B:62:0x001e \-\> B:63:0x0026, CROSS_EDGE: B:58:0x0013 \-\> B:90:0x006e, CROSS_EDGE: B:56:0x000d \-\> B:90:0x006e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0037\-0x003f: r8 '$i$f$synchronized' I\l  0x0039\-0x003f: r9 '$i$a$\-synchronized\-ThreadSafeHeap$removeFirstIf$1$iv' I\l  0x0045\-0x0057: r11 'it' Lkotlinx\/coroutines\/EventLoopImplBase$DelayedTask;\l  0x0046\-0x0057: r12 '$i$a$\-removeFirstIf\-EventLoopImplBase$processNextEvent$1' I\l  0x0042\-0x0063: r9 '$i$a$\-synchronized\-ThreadSafeHeap$removeFirstIf$1$iv' I\l  0x0042\-0x0063: r10 'first$iv' Lkotlinx\/coroutines\/internal\/ThreadSafeHeapNode;\l  0x0042\-0x0065: r8 '$i$f$synchronized' I\l  0x0035\-0x0066: r3 'this_$iv' Lkotlinx\/coroutines\/internal\/ThreadSafeHeap;\l  0x0036\-0x0066: r7 '$i$f$removeFirstIf' I\l  0x006b\-0x006e: r3 'this_$iv' Lkotlinx\/coroutines\/internal\/ThreadSafeHeap;\l  0x0031\-0x006e: r5 'now' J\l  0x006b\-0x006e: r7 '$i$f$removeFirstIf' I\l  0x006b\-0x006e: r8 '$i$f$synchronized' I\l  0x0075\-0x0079: r4 '$i$f$platformAutoreleasePool' I\l  0x0076\-0x0079: r5 '$i$a$\-platformAutoreleasePool\-EventLoopImplBase$processNextEvent$2' I\l  0x000d\-0x007e: r0 'delayed' Lkotlinx\/coroutines\/EventLoopImplBase$DelayedTaskQueue;\l  0x0072\-0x007e: r3 'task' Ljava\/lang\/Runnable;\lTryCatch #0 \{all \-\> 0x006b, blocks: (B:69:0x0039, B:73:0x0042, B:75:0x004d, B:79:0x0059, B:80:0x005e), top: B:96:0x0039 \}\lMETHOD_OVERRIDE: [kotlinx.coroutines.EventLoop.processNextEvent():long]\l}"];
MethodNode -> Node_50;Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_51;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_90;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_90;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_99;
Node_99 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_96;
Node_96 -> Node_69;
Node_96 -> Node_87;
Node_69 -> Node_70;
Node_69 -> Node_97;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_73;
Node_71 -> Node_72;
Node_72 -> Node_84;
Node_84 -> Node_85;
Node_85 -> Node_66;
Node_85 -> Node_98[style=dashed];
Node_98 -> Node_90;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_75 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_80;
Node_79 -> Node_83;
Node_83 -> Node_84;
Node_80 -> Node_81;
Node_81 -> Node_83;
Node_76 -> Node_78;
Node_97 -> Node_87;
Node_87 -> Node_89;
Node_89 -> Node_51;
Node_65 -> Node_99;
Node_62 -> Node_63;
Node_90 -> Node_91;
Node_91 -> Node_92[style=dashed];
Node_91 -> Node_94;
Node_92 -> Node_93;
Node_93 -> Node_51;
Node_94 -> Node_95;
Node_95 -> Node_51;
}

