digraph "CFG forkotlinx.coroutines.EventLoopImplBase.rescheduleAllDelayed()V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.AbstractTimeSource) =  type: STATIC call: kotlinx.coroutines.AbstractTimeSourceKt.getTimeSource():kotlinx.coroutines.AbstractTimeSource A[MD:():kotlinx.coroutines.AbstractTimeSource (m)] (LINE:392)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0009 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0007|0x0007: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0018 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0013|0x0013: INVOKE  (r2 I:long) =  type: STATIC call: java.lang.System.nanoTime():long A[MD:():long (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x001c|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|LOOP_START\lLOOP:0: B:27:0x001c\-\>B:33:0x002e\l|0x001d: IGET  (r0 I:java.lang.Object) = (r4 I:kotlinx.coroutines.EventLoopImplBase) kotlinx.coroutines.EventLoopImplBase._delayed java.lang.Object  (LINE:401)\l0x001f: CHECK_CAST (r0 I:kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue) = (kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0021|0x0021: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0025 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0023|0x0023: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x002b|0x002b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x002e \l}"];
Node_33 [shape=record,label="{33\:\ 0x002e|LOOP_END\lLOOP:0: B:27:0x001c\-\>B:33:0x002e\l|0x002e: INVOKE  \l  (r4 I:kotlinx.coroutines.EventLoopImplBase)\l  (r2 I:long A[D('now' long)])\l  (r0 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask A[D('delayedTask' kotlinx.coroutines.EventLoopImplBase$DelayedTask)])\l type: VIRTUAL call: kotlinx.coroutines.EventLoopImplBase.reschedule(long, kotlinx.coroutines.EventLoopImplBase$DelayedTask):void A[MD:(long, kotlinx.coroutines.EventLoopImplBase$DelayedTask):void (m)] (LINE:402)\l}"];
Node_34 [shape=record,label="{34\:\ 0x002d|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x002d|RETURN\l|0x002d: RETURN    (LINE:404)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0025|0x0025: INVOKE  (r0 I:kotlinx.coroutines.internal.ThreadSafeHeapNode) = (r0 I:kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue) type: VIRTUAL call: kotlinx.coroutines.EventLoopImplBase.DelayedTaskQueue.removeFirstOrNull():kotlinx.coroutines.internal.ThreadSafeHeapNode A[MD:():T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\> (m)]\l0x0029: CHECK_CAST (r0 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask) = (kotlinx.coroutines.EventLoopImplBase$DelayedTask) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0018|0x0018: INVOKE  (r2 I:long) = (r0 I:java.lang.Long) type: VIRTUAL call: java.lang.Long.longValue():long A[MD:():long (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0009|0x0009: INVOKE  (r2 I:long) = (r0 I:kotlinx.coroutines.AbstractTimeSource) type: VIRTUAL call: kotlinx.coroutines.AbstractTimeSource.nanoTime():long A[MD:():long (m)]\l0x000d: INVOKE  (r0 I:java.lang.Long) = (r2 I:long) type: STATIC call: java.lang.Long.valueOf(long):java.lang.Long A[MD:(long):java.lang.Long (c)]\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.EventLoopImplBase.rescheduleAllDelayed((r4 'this' I:kotlinx.coroutines.EventLoopImplBase A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:33:0x002e \-\> B:27:0x001c, CROSS_EDGE: B:30:0x0025 \-\> B:31:0x002b, CROSS_EDGE: B:26:0x0018 \-\> B:27:0x001c, CROSS_EDGE: B:23:0x0009 \-\> B:24:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002e\-0x0031: r0 'delayedTask' Lkotlinx\/coroutines\/EventLoopImplBase$DelayedTask;\l  0x001c\-0x0031: r2 'now' J\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_35;
Node_35 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_33;
Node_31 -> Node_34[style=dashed];
Node_33 -> Node_27;
Node_34 -> Node_32;
Node_32 -> Node_19;
Node_30 -> Node_31;
Node_26 -> Node_35;
Node_23 -> Node_24;
}

