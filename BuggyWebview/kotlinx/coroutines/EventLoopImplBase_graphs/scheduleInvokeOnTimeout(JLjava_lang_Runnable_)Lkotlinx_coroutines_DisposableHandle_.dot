digraph "CFG forkotlinx.coroutines.EventLoopImplBase.scheduleInvokeOnTimeout(JLjava\/lang\/Runnable;)Lkotlinx\/coroutines\/DisposableHandle;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|long r0 = kotlinx.coroutines.EventLoop_commonKt.delayToNanos(r9)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|if ((r0 \> kotlin.time.DurationKt.MAX_MILLIS ? 1 : (r0 == kotlin.time.DurationKt.MAX_MILLIS ? 0 : \-1)) \>= 0) goto L13\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|kotlinx.coroutines.AbstractTimeSource r2 = kotlinx.coroutines.AbstractTimeSourceKt.getTimeSource()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|if (r2 != null) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|r2 = null\l}"];
Node_23 [shape=record,label="{23\:\ 0x001d|PHI: r2 \l  PHI: (r2v5 java.lang.Long) = (r2v4 java.lang.Long), (r2v9 java.lang.Long) binds: [B:22:0x0015, B:21:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 != null) goto L11\l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|long r2 = java.lang.System.nanoTime()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0028|PHI: r2 \l  PHI: (r2v7 'now' long) = (r2v6 'now' long), (r2v8 'now' long) binds: [B:25:0x0024, B:24:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask r4 = new kotlinx.coroutines.EventLoopImplBase.DelayedRunnableTask(r2 + r0, r11)\lschedule(r2, r4)\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return r4\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0024|long r2 = r2.longValue()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|java.lang.Long r2 = java.lang.Long.valueOf(r2.nanoTime())\l}"];
Node_27 [shape=record,label="{27\:\ 0x003c}"];
Node_28 [shape=record,label="{28\:\ 0x0041|RETURN\lORIG_RETURN\l|return kotlinx.coroutines.NonDisposableHandle.INSTANCE\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.DisposableHandle kotlinx.coroutines.EventLoopImplBase.scheduleInvokeOnTimeout((r8v0 'this' kotlinx.coroutines.EventLoopImplBase A[IMMUTABLE_TYPE, THIS]), (r9v0 'timeMillis' long A[D('timeMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'block' java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0024 \-\> B:26:0x0028, CROSS_EDGE: B:22:0x0015 \-\> B:23:0x001d, CROSS_EDGE: B:27:0x003c \-\> B:28:0x0041\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_29;
Node_29 -> Node_16;
Node_25 -> Node_26;
Node_22 -> Node_23;
Node_27 -> Node_28;
Node_28 -> Node_16;
}

