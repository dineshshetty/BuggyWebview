digraph "CFG forkotlinx.coroutines.EventLoopImplBase.getNextTime()J" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000}"];
Node_35 [shape=record,label="{35\:\ 0x0008|if ((super.getNextTime() \> 0 ? 1 : (super.getNextTime() == 0 ? 0 : \-1)) != 0) goto L5\l}"];
Node_36 [shape=record,label="{36\:\ 0x000a|RETURN\l|return 0\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x000b|java.lang.Object r0 = r8._queue\l}"];
Node_38 [shape=record,label="{38\:\ 0x0013|if (r0 != null) goto L7\l}"];
Node_40 [shape=record,label="{40\:\ 0x0016}"];
Node_41 [shape=record,label="{41\:\ 0x0018|if ((r0 instanceof kotlinx.coroutines.internal.LockFreeTaskQueueCore) == false) goto L12\l}"];
Node_42 [shape=record,label="{42\:\ 0x001a}"];
Node_43 [shape=record,label="{43\:\ 0x0021|if (((kotlinx.coroutines.internal.LockFreeTaskQueueCore) r0).isEmpty() != false) goto L16\l}"];
Node_44 [shape=record,label="{44\:\ 0x0023|RETURN\l|return 0\l}"];
Node_60 [shape=record,label="{60\:\ 0x0058|kotlinx.coroutines.internal.Symbol r1 = kotlinx.coroutines.EventLoop_commonKt.CLOSED_EMPTY\l}"];
Node_61 [shape=record,label="{61\:\ 0x005c|if (r0 != r1) goto L15\l}"];
Node_62 [shape=record,label="{62\:\ 0x005e|RETURN\l|return Long.MAX_VALUE\l}"];
Node_63 [shape=record,label="{63\:\ 0x005f|RETURN\l|return 0\l}"];
Node_45 [shape=record,label="{45\:\ 0x0024|kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue r1 = (kotlinx.coroutines.EventLoopImplBase.DelayedTaskQueue) r8._delayed\lr6 = null\l}"];
Node_46 [shape=record,label="{46\:\ 0x0029|if (r1 != null) goto L29\l}"];
Node_47 [shape=record,label="{47\:\ 0x002b|r1 = null\l}"];
Node_49 [shape=record,label="{49\:\ 0x0033|PHI: r1 \l  PHI: (r1v4 'nextDelayedTask' kotlinx.coroutines.EventLoopImplBase$DelayedTask) = (r1v3 'nextDelayedTask' kotlinx.coroutines.EventLoopImplBase$DelayedTask), (r1v5 'nextDelayedTask' kotlinx.coroutines.EventLoopImplBase$DelayedTask) binds: [B:48:0x002d, B:47:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != null) goto L21\l}"];
Node_50 [shape=record,label="{50\:\ 0x0035|RETURN\l|return Long.MAX_VALUE\l}"];
Node_51 [shape=record,label="{51\:\ 0x0036|long r4 = r1.nanoTime\lkotlinx.coroutines.AbstractTimeSource r7 = kotlinx.coroutines.AbstractTimeSourceKt.getTimeSource()\l}"];
Node_52 [shape=record,label="{52\:\ 0x003c|if (r7 != null) goto L23\l}"];
Node_54 [shape=record,label="{54\:\ 0x003f|java.lang.Long r6 = java.lang.Long.valueOf(r7.nanoTime())\l}"];
Node_55 [shape=record,label="{55\:\ 0x0047|PHI: r6 \l  PHI: (r6v1 java.lang.Long) = (r6v0 java.lang.Long), (r6v6 java.lang.Long) binds: [B:52:0x003c, B:54:0x003f] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 != null) goto L28\l}"];
Node_56 [shape=record,label="{56\:\ 0x0049|long r6 = java.lang.System.nanoTime()\l}"];
Node_58 [shape=record,label="{58\:\ 0x0052|PHI: r6 \l  PHI: (r6v3 long) = (r6v2 long), (r6v4 long) binds: [B:57:0x004e, B:56:0x0049] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_59 [shape=record,label="{59\:\ 0x0057|RETURN\l|return kotlin.ranges.RangesKt.coerceAtLeast(r4 \- r6, 0)\l}"];
Node_57 [shape=record,label="{57\:\ 0x004e|long r6 = r6.longValue()\l}"];
Node_48 [shape=record,label="{48\:\ 0x002d|kotlinx.coroutines.EventLoopImplBase$DelayedTask r1 = r1.peek()\l}"];
MethodNode[shape=record,label="{public long kotlinx.coroutines.EventLoopImplBase.getNextTime((r8v0 'this' kotlinx.coroutines.EventLoopImplBase A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:44:0x0023 \-\> B:33:?, CROSS_EDGE: B:50:0x0035 \-\> B:33:?, CROSS_EDGE: B:59:0x0057 \-\> B:33:?, CROSS_EDGE: B:57:0x004e \-\> B:58:0x0052, CROSS_EDGE: B:52:0x003c \-\> B:55:0x0047, CROSS_EDGE: B:48:0x002d \-\> B:49:0x0033, CROSS_EDGE: B:62:0x005e \-\> B:33:?, CROSS_EDGE: B:63:0x005f \-\> B:33:?, CROSS_EDGE: B:38:0x0013 \-\> B:45:0x0024\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.EventLoop.getNextTime():long]\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_33;
Node_37 -> Node_38;
Node_38 -> Node_40;
Node_38 -> Node_45[style=dashed];
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_60;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_33;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_33;
Node_63 -> Node_33;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_33;
Node_51 -> Node_52;
Node_52 -> Node_54;
Node_52 -> Node_55[style=dashed];
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_33;
Node_57 -> Node_58;
Node_48 -> Node_49;
}

