digraph "CFG forkotlinx.coroutines.EventLoopImplBase.enqueueImpl(Ljava\/lang\/Runnable;)Z" {
Node_52 [shape=record,label="{52\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_54 [shape=record,label="{54\:\ 0x0000}"];
Node_55 [shape=record,label="{55\:\ 0x0002|LOOP_START\lLOOP:0: B:55:0x0002\-\>B:99:0x0002\l|java.lang.Object r2 = r7._queue\l}"];
Node_56 [shape=record,label="{56\:\ 0x000b|if (isCompleted() == false) goto L4\l}"];
Node_58 [shape=record,label="{58\:\ 0x000e}"];
Node_59 [shape=record,label="{59\:\ 0x0010|if (r2 != null) goto L6\l}"];
Node_86 [shape=record,label="{86\:\ 0x001c|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x001c}"];
Node_64 [shape=record,label="{64\:\ 0x001e|if ((r2 instanceof kotlinx.coroutines.internal.LockFreeTaskQueueCore) == false) goto L9\l}"];
Node_94 [shape=record,label="{94\:\ 0x0045|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x0045|kotlinx.coroutines.internal.Symbol r6 = kotlinx.coroutines.EventLoop_commonKt.CLOSED_EMPTY\l}"];
Node_76 [shape=record,label="{76\:\ 0x004a|if (r2 != r6) goto L12\l}"];
Node_78 [shape=record,label="{78\:\ 0x004d|kotlinx.coroutines.internal.LockFreeTaskQueueCore r5 = new kotlinx.coroutines.internal.LockFreeTaskQueueCore(8, true)\l}"];
Node_79 [shape=record,label="{79\:\ 0x0054|if (r2 == null) goto L21\l}"];
Node_80 [shape=record,label="{80\:\ 0x0056|r5.addLast((java.lang.Runnable) r2)\lr5.addLast(r8)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0065|if (androidx.concurrent.futures.C0125xc40028dd.m112m(kotlinx.coroutines.EventLoopImplBase._queue$FU, r7, r2, r5) == false) goto L19\l}"];
Node_95 [shape=record,label="{95\:\ 0x0067|SYNTHETIC\l}"];
Node_82 [shape=record,label="{82\:\ 0x0067|RETURN\l|return true\l}"];
Node_53 [shape=record,label="{53\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_100 [shape=record,label="{100\:\ 0x0002|SYNTHETIC\l}"];
Node_99 [shape=record,label="{99\:\ 0x0002|LOOP_END\lSYNTHETIC\lLOOP:0: B:55:0x0002\-\>B:99:0x0002\l}"];
Node_97 [shape=record,label="{97\:\ 0x006a|SYNTHETIC\l}"];
Node_84 [shape=record,label="{84\:\ 0x006a}"];
Node_85 [shape=record,label="{85\:\ 0x0071|throw new java.lang.NullPointerException(\"null cannot be cast to non\-null type java.lang.Runnable\{ kotlinx.coroutines.RunnableKt.Runnable \}\")\l}"];
Node_96 [shape=record,label="{96\:\ 0x004c|SYNTHETIC\l}"];
Node_77 [shape=record,label="{77\:\ 0x004c|RETURN\l|return false\l}"];
Node_98 [shape=record,label="{98\:\ 0x0020|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x0020|if (r2 == null) goto L38\l}"];
Node_66 [shape=record,label="{66\:\ 0x0022}"];
Node_67 [shape=record,label="{67\:\ 0x0029|switch(((kotlinx.coroutines.internal.LockFreeTaskQueueCore) r2).addLast(r8)) \{\l    case 0: goto L35;\l    case 1: goto L32;\l    case 2: goto L30;\l    default: goto L37;\l\}\l}"];
Node_91 [shape=record,label="{91\:\ 0x002d|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x002d|RETURN\l|return false\l}"];
Node_92 [shape=record,label="{92\:\ 0x002e|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x002e|androidx.concurrent.futures.C0125xc40028dd.m112m(kotlinx.coroutines.EventLoopImplBase._queue$FU, r7, r2, ((kotlinx.coroutines.internal.LockFreeTaskQueueCore) r2).next())\l}"];
Node_102 [shape=record,label="{102\:\ 0x0002|SYNTHETIC\l}"];
Node_93 [shape=record,label="{93\:\ 0x003b|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ 0x003b|RETURN\l|return true\l}"];
Node_101 [shape=record,label="{101\:\ 0x0002|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x003d|SYNTHETIC\l}"];
Node_73 [shape=record,label="{73\:\ 0x003d}"];
Node_74 [shape=record,label="{74\:\ 0x0044|throw new java.lang.NullPointerException(\"null cannot be cast to non\-null type kotlinx.coroutines.internal.LockFreeTaskQueueCore\<java.lang.Runnable\{ kotlinx.coroutines.RunnableKt.Runnable \}\>\{ kotlinx.coroutines.EventLoop_commonKt.Queue\<java.lang.Runnable\{ kotlinx.coroutines.RunnableKt.Runnable \}\> \}\")\l}"];
Node_90 [shape=record,label="{90\:\ 0x0012|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x0012}"];
Node_61 [shape=record,label="{61\:\ 0x0019|if (androidx.concurrent.futures.C0125xc40028dd.m112m(kotlinx.coroutines.EventLoopImplBase._queue$FU, r7, null, r8) == false) goto L46\l}"];
Node_87 [shape=record,label="{87\:\ 0x001b|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x001b|RETURN\l|return true\l}"];
Node_103 [shape=record,label="{103\:\ 0x0002|SYNTHETIC\l}"];
Node_88 [shape=record,label="{88\:\ 0x000d|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x000d|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.EventLoopImplBase.enqueueImpl((r7v0 'this' kotlinx.coroutines.EventLoopImplBase A[IMMUTABLE_TYPE, THIS]), (r8v0 'task' java.lang.Runnable A[D('task' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:62:0x001b \-\> B:53:?, BACK_EDGE: B:61:0x0019 \-\> B:55:0x0002, CROSS_EDGE: B:69:0x002d \-\> B:53:?, BACK_EDGE: B:70:0x002e \-\> B:55:0x0002, CROSS_EDGE: B:71:0x003b \-\> B:53:?, BACK_EDGE: B:67:0x0029 \-\> B:55:0x0002, CROSS_EDGE: B:74:0x0044 \-\> B:53:?, CROSS_EDGE: B:77:0x004c \-\> B:53:?, CROSS_EDGE: B:82:0x0067 \-\> B:53:?, BACK_EDGE: B:81:0x0065 \-\> B:55:0x0002, CROSS_EDGE: B:85:0x0071 \-\> B:53:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_52;Node_52 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_58;
Node_56 -> Node_88[style=dashed];
Node_58 -> Node_59;
Node_59 -> Node_86;
Node_59 -> Node_90[style=dashed];
Node_86 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_94;
Node_64 -> Node_98[style=dashed];
Node_94 -> Node_75;
Node_75 -> Node_76;
Node_76 -> Node_78;
Node_76 -> Node_96[style=dashed];
Node_78 -> Node_79;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_97;
Node_80 -> Node_81;
Node_81 -> Node_95[style=dashed];
Node_81 -> Node_100;
Node_95 -> Node_82;
Node_82 -> Node_53;
Node_100 -> Node_99;
Node_99 -> Node_55;
Node_97 -> Node_84;
Node_84 -> Node_85;
Node_85 -> Node_53;
Node_96 -> Node_77;
Node_77 -> Node_53;
Node_98 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_89;
Node_66 -> Node_67;
Node_67 -> Node_91;
Node_67 -> Node_92;
Node_67 -> Node_93;
Node_67 -> Node_101;
Node_91 -> Node_69;
Node_69 -> Node_53;
Node_92 -> Node_70;
Node_70 -> Node_102;
Node_102 -> Node_99;
Node_93 -> Node_71;
Node_71 -> Node_53;
Node_101 -> Node_99;
Node_89 -> Node_73;
Node_73 -> Node_74;
Node_74 -> Node_53;
Node_90 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_87[style=dashed];
Node_61 -> Node_103;
Node_87 -> Node_62;
Node_62 -> Node_53;
Node_103 -> Node_99;
Node_88 -> Node_57;
Node_57 -> Node_53;
}

