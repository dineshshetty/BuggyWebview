digraph "CFG forkotlinx.coroutines.EventLoopImplBase.shouldUnpark(Lkotlinx\/coroutines\/EventLoopImplBase$DelayedTask;)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue r0 = (kotlinx.coroutines.EventLoopImplBase.DelayedTaskQueue) r1._delayed\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|if (r0 != null) goto L8\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|r0 = null\l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|PHI: r0 \l  PHI: (r0v4 kotlinx.coroutines.EventLoopImplBase$DelayedTask) = (r0v3 kotlinx.coroutines.EventLoopImplBase$DelayedTask), (r0v7 kotlinx.coroutines.EventLoopImplBase$DelayedTask) binds: [B:16:0x0008, B:15:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != r2) goto L7\l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|SYNTHETIC\lRETURN\l|return true\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|RETURN\lORIG_RETURN\l|return false\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|kotlinx.coroutines.EventLoopImplBase$DelayedTask r0 = r0.peek()\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.EventLoopImplBase.shouldUnpark((r1v0 'this' kotlinx.coroutines.EventLoopImplBase A[IMMUTABLE_TYPE, THIS]), (r2v0 'task' kotlinx.coroutines.EventLoopImplBase$DelayedTask A[D('task' kotlinx.coroutines.EventLoopImplBase$DelayedTask), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0012 \-\> B:20:0x0013, CROSS_EDGE: B:16:0x0008 \-\> B:17:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_12;
Node_19 -> Node_12;
Node_16 -> Node_17;
}

