digraph "CFG forkotlinx.coroutines.Unconfined.dispatch(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Runnable;)V" {
subgraph cluster_Region_1573692576 {
label = "R(2:1|(2:(2:3|4)|(1:7)))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlinx.coroutines.YieldContext kotlinx.coroutines.YieldContext r0 = (kotlinx.coroutines.YieldContext) r4.get(kotlinx.coroutines.YieldContext.Key)\l}"];
subgraph cluster_Region_1451884282 {
label = "R(2:(2:3|4)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1485717835 {
label = "IF [B:11:0x000a] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000a|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_925207392 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x000c|r0.dispatcherWasUnconfined = true\l}"];
Node_13 [shape=record,label="{13\:\ 0x000f|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_994725419 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0017|throw new java.lang.UnsupportedOperationException(\"Dispatchers.Unconfined.dispatch function can only be used by the yield function. If you wrap Unconfined dispatcher in your code, make sure you properly delegate isDispatchNeeded and dispatch calls.\")\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0010}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.Unconfined.dispatch((r3v0 'this' kotlinx.coroutines.Unconfined A[IMMUTABLE_TYPE, THIS]), (r4v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'block' java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0017 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.CoroutineDispatcher.dispatch(kotlin.coroutines.CoroutineContext, java.lang.Runnable):void]\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_15 -> Node_9;
Node_8 -> Node_10;
Node_14 -> Node_15;
}

