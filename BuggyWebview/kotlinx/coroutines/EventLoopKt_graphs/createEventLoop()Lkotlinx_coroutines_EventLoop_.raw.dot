digraph "CFG forkotlinx.coroutines.EventLoopKt.createEventLoop()Lkotlinx\/coroutines\/EventLoop;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.BlockingEventLoop) =  kotlinx.coroutines.BlockingEventLoop  (LINE:25)\l0x0002: INVOKE  (r1 I:java.lang.Thread) =  type: STATIC call: java.lang.Thread.currentThread():java.lang.Thread A[MD:():java.lang.Thread (c)]\l0x0006: INVOKE  (r0 I:kotlinx.coroutines.BlockingEventLoop), (r1 I:java.lang.Thread) type: DIRECT call: kotlinx.coroutines.BlockingEventLoop.\<init\>(java.lang.Thread):void A[MD:(java.lang.Thread):void (m)]\l0x0009: CHECK_CAST (r0 I:kotlinx.coroutines.EventLoop) = (kotlinx.coroutines.EventLoop) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|RETURN\l|0x000b: RETURN  (r0 I:kotlinx.coroutines.EventLoop) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.EventLoop kotlinx.coroutines.EventLoopKt.createEventLoop()  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

