digraph "CFG forkotlinx.coroutines.DefaultExecutor.shutdownForTests(J)V" {
subgraph cluster_Region_344843254 {
label = "R(1:(1:(4:3|(1:5)|(4:11|(3:24|(1:26)(1:29)|(1:28))(0)|14|(2:(1:18)|(1:16)))|19))) | DECL_VAR: kotlin.Unit null\l";
node [shape=record,color=blue];
subgraph cluster_Region_708242392 {
label = "R(1:(4:3|(1:5)|(4:11|(3:24|(1:26)(1:29)|(1:28))(0)|14|(2:(1:18)|(1:16)))|19))";
node [shape=record,color=blue];
subgraph cluster_Region_1603613565 {
label = "R(4:3|(1:5)|(4:11|(3:24|(1:26)(1:29)|(1:28))(0)|14|(2:(1:18)|(1:16)))|19)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0001|TRY_ENTER\lTryCatch #0 \{, blocks: (B:38:0x0001, B:40:0x000c, B:41:0x000f, B:43:0x0014, B:45:0x0018, B:54:0x0030, B:57:0x003d, B:48:0x001d, B:53:0x002d, B:51:0x0026, B:58:0x0044), top: B:64:0x0001 \}\lCatch: all \-\> 0x0049\l|long long r0 = java.lang.System.currentTimeMillis() + r8     \/\/ Catch: java.lang.Throwable \-\> L49\l}"];
subgraph cluster_IfRegion_415877114 {
label = "IF [B:39:0x000a] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x000a|if (isShutdownRequested() == false) goto L5\l}"];
subgraph cluster_Region_559853699 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x000c|TryCatch #0 \{, blocks: (B:38:0x0001, B:40:0x000c, B:41:0x000f, B:43:0x0014, B:45:0x0018, B:54:0x0030, B:57:0x003d, B:48:0x001d, B:53:0x002d, B:51:0x0026, B:58:0x0044), top: B:64:0x0001 \}\lCatch: all \-\> 0x0049\l|kotlinx.coroutines.DefaultExecutor.debugStatus = 2     \/\/ Catch: java.lang.Throwable \-\> L49\l}"];
}
}
subgraph cluster_LoopRegion_1513579789 {
label = "LOOP:0: (4:11|(3:24|(1:26)(1:29)|(1:28))(0)|14|(2:(1:18)|(1:16)))";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0012|if (kotlinx.coroutines.DefaultExecutor.debugStatus != 3) goto L9\l}"];
Node_44 [shape=record,label="{44\:\ 0x0016|ADDED_TO_REGION\l|if (kotlinx.coroutines.DefaultExecutor._thread != null) goto L11\l}"];
subgraph cluster_Region_680884754 {
label = "R(4:11|(3:24|(1:26)(1:29)|(1:28))(0)|14|(2:(1:18)|(1:16)))";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0018|TryCatch #0 \{, blocks: (B:38:0x0001, B:40:0x000c, B:41:0x000f, B:43:0x0014, B:45:0x0018, B:54:0x0030, B:57:0x003d, B:48:0x001d, B:53:0x002d, B:51:0x0026, B:58:0x0044), top: B:64:0x0001 \}\lCatch: all \-\> 0x0049\l|java.lang.Thread java.lang.Thread r2 = kotlinx.coroutines.DefaultExecutor._thread     \/\/ Catch: java.lang.Throwable \-\> L49\l}"];
subgraph cluster_IfRegion_2017117518 {
label = "IF [B:46:0x001a] THEN: R(3:24|(1:26)(1:29)|(1:28)) ELSE: R(0)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x001a|if (r2 != null) goto L24\l}"];
subgraph cluster_Region_1703713378 {
label = "R(3:24|(1:26)(1:29)|(1:28))";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x001d|TryCatch #0 \{, blocks: (B:38:0x0001, B:40:0x000c, B:41:0x000f, B:43:0x0014, B:45:0x0018, B:54:0x0030, B:57:0x003d, B:48:0x001d, B:53:0x002d, B:51:0x0026, B:58:0x0044), top: B:64:0x0001 \}\lCatch: all \-\> 0x0049\l|kotlinx.coroutines.AbstractTimeSource kotlinx.coroutines.AbstractTimeSource r4 = kotlinx.coroutines.AbstractTimeSourceKt.getTimeSource()     \/\/ Catch: java.lang.Throwable \-\> L49\l}"];
subgraph cluster_IfRegion_1269965608 {
label = "IF [B:49:0x0022] THEN: R(1:26) ELSE: R(1:29)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0022|if (r4 == null) goto L26\l}"];
subgraph cluster_Region_1282443739 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0024|r4 = null\l}"];
}
subgraph cluster_Region_280162035 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0026|TryCatch #0 \{, blocks: (B:38:0x0001, B:40:0x000c, B:41:0x000f, B:43:0x0014, B:45:0x0018, B:54:0x0030, B:57:0x003d, B:48:0x001d, B:53:0x002d, B:51:0x0026, B:58:0x0044), top: B:64:0x0001 \}\lCatch: all \-\> 0x0049\l|r4.unpark(r2)     \/\/ Catch: java.lang.Throwable \-\> L49\lkotlin.Unit r4 = kotlin.Unit.INSTANCE     \/\/ Catch: java.lang.Throwable \-\> L49\l}"];
}
}
subgraph cluster_IfRegion_1203908024 {
label = "IF [B:52:0x002b] THEN: R(1:28) ELSE: null";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x002b|PHI: r4 \l  PHI: (r4v2 kotlin.Unit) = (r4v1 kotlin.Unit), (r4v3 kotlin.Unit) binds: [B:51:0x0026, B:50:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == null) goto L28\l}"];
subgraph cluster_Region_1724524867 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x002d|TryCatch #0 \{, blocks: (B:38:0x0001, B:40:0x000c, B:41:0x000f, B:43:0x0014, B:45:0x0018, B:54:0x0030, B:57:0x003d, B:48:0x001d, B:53:0x002d, B:51:0x0026, B:58:0x0044), top: B:64:0x0001 \}\lCatch: all \-\> 0x0049\l|java.util.concurrent.locks.LockSupport.unpark(r2)     \/\/ Catch: java.lang.Throwable \-\> L49\l}"];
}
}
}
subgraph cluster_Region_300078253 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_54 [shape=record,label="{54\:\ 0x0030|TryCatch #0 \{, blocks: (B:38:0x0001, B:40:0x000c, B:41:0x000f, B:43:0x0014, B:45:0x0018, B:54:0x0030, B:57:0x003d, B:48:0x001d, B:53:0x002d, B:51:0x0026, B:58:0x0044), top: B:64:0x0001 \}\lCatch: all \-\> 0x0049\l|long long r2 = r0 \- java.lang.System.currentTimeMillis()     \/\/ Catch: java.lang.Throwable \-\> L49\l}"];
subgraph cluster_Region_1164747962 {
label = "R(2:(1:18)|(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2068259111 {
label = "IF [B:55:0x003a] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x003a|if (r2 \<= 0) goto L17\l}"];
subgraph cluster_Region_613596695 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x003c|EDGE_INSN: B:56:0x003c\-\>B:58:0x0044 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1928063184 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x003d|LOOP_END\lTryCatch #0 \{, blocks: (B:38:0x0001, B:40:0x000c, B:41:0x000f, B:43:0x0014, B:45:0x0018, B:54:0x0030, B:57:0x003d, B:48:0x001d, B:53:0x002d, B:51:0x0026, B:58:0x0044), top: B:64:0x0001 \}\lLOOP:0: B:41:0x000f\-\>B:57:0x003d\lCatch: all \-\> 0x0049\l|wait(r8)     \/\/ Catch: java.lang.Throwable \-\> L49\l}"];
}
}
}
}
Node_58 [shape=record,label="{58\:\ 0x0044|TRY_LEAVE\lEDGE_INSN: B:56:0x003c\-\>B:58:0x0044 ?: BREAK  \lTryCatch #0 \{, blocks: (B:38:0x0001, B:40:0x000c, B:41:0x000f, B:43:0x0014, B:45:0x0018, B:54:0x0030, B:57:0x003d, B:48:0x001d, B:53:0x002d, B:51:0x0026, B:58:0x0044), top: B:64:0x0001 \}\lCatch: all \-\> 0x0049\l|kotlinx.coroutines.DefaultExecutor.debugStatus = 0     \/\/ Catch: java.lang.Throwable \-\> L49\l}"];
}
}
}
Node_35 [shape=record,color=red,label="{35\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0000}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x000f|SYNTHETIC\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x000f|LOOP_START\lTryCatch #0 \{, blocks: (B:38:0x0001, B:40:0x000c, B:41:0x000f, B:43:0x0014, B:45:0x0018, B:54:0x0030, B:57:0x003d, B:48:0x001d, B:53:0x002d, B:51:0x0026, B:58:0x0044), top: B:64:0x0001 \}\lLOOP:0: B:41:0x000f\-\>B:57:0x003d\lCatch: all \-\> 0x0049\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0014|TryCatch #0 \{, blocks: (B:38:0x0001, B:40:0x000c, B:41:0x000f, B:43:0x0014, B:45:0x0018, B:54:0x0030, B:57:0x003d, B:48:0x001d, B:53:0x002d, B:51:0x0026, B:58:0x0044), top: B:64:0x0001 \}\lCatch: all \-\> 0x0049\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x001c}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x003c|SYNTHETIC\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x0047|DONT_GENERATE\l}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x0048}"];
Node_36 [shape=record,color=red,label="{36\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_65 [shape=record,color=red,label="{65\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x0044|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0044|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x0049|REMOVE\lExcHandler: all \-\> 0x0049\l}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x004b|REMOVE\l|throw r8\l}"];
MethodNode[shape=record,label="{public final synchronized void kotlinx.coroutines.DefaultExecutor.shutdownForTests((r7v0 'this' kotlinx.coroutines.DefaultExecutor A[IMMUTABLE_TYPE, THIS]), (r8v0 'timeout' long A[D('timeout' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:63:0x004b \-\> B:36:?, BACK_EDGE: B:57:0x003d \-\> B:41:0x000f, CROSS_EDGE: B:53:0x002d \-\> B:54:0x0030, CROSS_EDGE: B:52:0x002b \-\> B:54:0x0030, CROSS_EDGE: B:51:0x0026 \-\> B:52:0x002b, CROSS_EDGE: B:44:0x0016 \-\> B:58:0x0044, CROSS_EDGE: B:42:0x0012 \-\> B:58:0x0044, CROSS_EDGE: B:39:0x000a \-\> B:41:0x000f, CROSS_EDGE: B:64:0x0001 \-\> B:61:0x0049\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_35;Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_69[style=dashed];
Node_40 -> Node_69;
Node_42 -> Node_43;
Node_42 -> Node_66[style=dashed];
Node_44 -> Node_45;
Node_44 -> Node_67[style=dashed];
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_49 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_52 -> Node_54[style=dashed];
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_57[style=dashed];
Node_55 -> Node_68;
Node_56 -> Node_58;
Node_57 -> Node_41;
Node_58 -> Node_59;
Node_58 -> Node_65;
Node_35 -> Node_37;
Node_37 -> Node_64;
Node_64 -> Node_38;
Node_64 -> Node_61;
Node_69 -> Node_41;
Node_41 -> Node_42;
Node_43 -> Node_44;
Node_47 -> Node_54;
Node_68 -> Node_56;
Node_59 -> Node_60;
Node_60 -> Node_36;
Node_65 -> Node_61;
Node_67 -> Node_58;
Node_66 -> Node_58;
Node_61 -> Node_63;
Node_63 -> Node_36;
}

