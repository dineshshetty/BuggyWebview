digraph "CFG forkotlinx.coroutines.Delay.DefaultImpls.invokeOnTimeout(Lkotlinx\/coroutines\/Delay;JLjava\/lang\/Runnable;Lkotlin\/coroutines\/CoroutineContext;)Lkotlinx\/coroutines\/DisposableHandle;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.Delay) =  type: STATIC call: kotlinx.coroutines.DefaultExecutorKt.getDefaultDelay():kotlinx.coroutines.Delay A[MD:():kotlinx.coroutines.Delay (m)] (LINE:56)\l0x0004: INVOKE  (r0 I:kotlinx.coroutines.DisposableHandle) = \l  (r0 I:kotlinx.coroutines.Delay)\l  (r2 I:long A[D('timeMillis' long)])\l  (r4 I:java.lang.Runnable A[D('block' java.lang.Runnable)])\l  (r5 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l type: INTERFACE call: kotlinx.coroutines.Delay.invokeOnTimeout(long, java.lang.Runnable, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.DisposableHandle A[MD:(long, java.lang.Runnable, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.DisposableHandle (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:kotlinx.coroutines.DisposableHandle) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static kotlinx.coroutines.DisposableHandle kotlinx.coroutines.Delay.DefaultImpls.invokeOnTimeout((r1 I:kotlinx.coroutines.Delay A[D('this' kotlinx.coroutines.Delay), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:long A[D('timeMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r1 'this' Lkotlinx\/coroutines\/Delay;\l  \-1 \-0x0008: r2 'timeMillis' J\l  \-1 \-0x0008: r4 'block' Ljava\/lang\/Runnable;\l  \-1 \-0x0008: r5 'context' Lkotlin\/coroutines\/CoroutineContext;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

