digraph "CFG forkotlinx.coroutines.UndispatchedCoroutine.\<init\>(Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/coroutines\/Continuation;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000}"];
Node_11 [shape=record,label="{11\:\ 0x0008|if (r2.get(kotlinx.coroutines.UndispatchedMarker.INSTANCE) != null) goto L7\l}"];
Node_12 [shape=record,label="{12\:\ 0x000a|kotlin.coroutines.CoroutineContext r0 = r2.plus(kotlinx.coroutines.UndispatchedMarker.INSTANCE)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0014|PHI: r0 \l  PHI: (r0v4 kotlin.coroutines.CoroutineContext) = (r0v3 kotlin.coroutines.CoroutineContext), (r0v8 kotlin.coroutines.CoroutineContext) binds: [B:13:0x0013, B:12:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|super(r0, r3)\lr1.threadStateToRecover = new java.lang.ThreadLocal\<\>()\l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0013|r0 = r2\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.UndispatchedCoroutine.\<init\>((r1v0 'this' kotlinx.coroutines.UndispatchedCoroutine\<T\> A[IMMUTABLE_TYPE, THIS]), (r2v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlin.coroutines.Continuation\<? super T\> A[D('uCont' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0013 \-\> B:14:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/coroutines\/Continuation\<\-TT;\>;)V\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

