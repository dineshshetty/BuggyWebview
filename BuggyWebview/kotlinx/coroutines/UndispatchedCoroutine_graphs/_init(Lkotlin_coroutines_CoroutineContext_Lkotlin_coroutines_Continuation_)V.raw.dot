digraph "CFG forkotlinx.coroutines.UndispatchedCoroutine.\<init\>(Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/coroutines\/Continuation;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.UndispatchedMarker) =  kotlinx.coroutines.UndispatchedMarker.INSTANCE kotlinx.coroutines.UndispatchedMarker  (LINE:168)\l0x0002: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r0 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0013 \l}"];
Node_12 [shape=record,label="{12\:\ 0x000a|0x000a: SGET  (r0 I:kotlinx.coroutines.UndispatchedMarker) =  kotlinx.coroutines.UndispatchedMarker.INSTANCE kotlinx.coroutines.UndispatchedMarker \l0x000c: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext) = (kotlin.coroutines.CoroutineContext) (r0 I:??[OBJECT, ARRAY]) \l0x000e: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext) = \l  (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlin.coroutines.CoroutineContext)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.plus(kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext A[MD:(kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0014|0x0014: INVOKE  \l  (r1 I:kotlinx.coroutines.internal.ScopeCoroutine)\l  (r0 I:kotlin.coroutines.CoroutineContext)\l  (r3 I:kotlin.coroutines.Continuation A[D('uCont' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.internal.ScopeCoroutine.\<init\>(kotlin.coroutines.CoroutineContext, kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.CoroutineContext, kotlin.coroutines.Continuation\<? super T\>):void (m)]\l0x0017: NEW_INSTANCE  (r0 I:java.lang.ThreadLocal) =  java.lang.ThreadLocal  (LINE:182)\l0x0019: INVOKE  (r0 I:java.lang.ThreadLocal) type: DIRECT call: java.lang.ThreadLocal.\<init\>():void A[MD:():void (c)]\l0x001c: IPUT  \l  (r0 I:java.lang.ThreadLocal\<kotlin.Pair\<kotlin.coroutines.CoroutineContext, java.lang.Object\>\>)\l  (r1 I:kotlinx.coroutines.UndispatchedCoroutine)\l kotlinx.coroutines.UndispatchedCoroutine.threadStateToRecover java.lang.ThreadLocal \l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|RETURN\l|0x001e: RETURN    (LINE:165)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0013|0x0013: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('context' kotlin.coroutines.CoroutineContext)]) \l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.UndispatchedCoroutine.\<init\>((r1 'this' I:kotlinx.coroutines.UndispatchedCoroutine\<T\> A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.coroutines.Continuation\<? super T\> A[D('uCont' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0013 \-\> B:14:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001e: r2 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x001e: r3 'uCont' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/coroutines\/Continuation\<\-TT;\>;)V\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

