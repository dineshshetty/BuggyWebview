digraph "CFG forkotlinx.coroutines.JobSupport.Finishing.addExceptionLocked(Ljava\/lang\/Throwable;)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Throwable) = (r5 I:kotlinx.coroutines.JobSupport$Finishing) type: VIRTUAL call: kotlinx.coroutines.JobSupport.Finishing.getRootCause():java.lang.Throwable A[MD:():java.lang.Throwable (m)] (LINE:1117)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('rootCause' java.lang.Throwable)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x000a  (LINE:1118)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|0x0006: INVOKE  (r5 I:kotlinx.coroutines.JobSupport$Finishing), (r6 I:java.lang.Throwable A[D('exception' java.lang.Throwable)]) type: VIRTUAL call: kotlinx.coroutines.JobSupport.Finishing.setRootCause(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (m)] (LINE:1119)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:1120)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x000a|0x000a: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('exception' java.lang.Throwable)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('rootCause' java.lang.Throwable)])  \-\> B:32:0x000d  (LINE:1122)\l}"];
Node_31 [shape=record,label="{31\:\ 0x000c|RETURN\l|0x000c: RETURN   \l}"];
Node_32 [shape=record,label="{32\:\ 0x000d|0x000d: INVOKE  (r1 I:java.lang.Object) = (r5 I:kotlinx.coroutines.JobSupport$Finishing) type: DIRECT call: kotlinx.coroutines.JobSupport.Finishing.getExceptionsHolder():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:1123)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('eh' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0017  (LINE:1124)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0013|0x0013: INVOKE  (r5 I:kotlinx.coroutines.JobSupport$Finishing), (r6 I:java.lang.Object A[D('exception' java.lang.Throwable)]) type: DIRECT call: kotlinx.coroutines.JobSupport.Finishing.setExceptionsHolder(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|0x0039: RETURN   A[SYNTHETIC] (LINE:1136)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0017|0x0017: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('eh' java.lang.Object)]) java.lang.Throwable  (LINE:1125)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0019|0x0019: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x002f \l}"];
Node_37 [shape=record,label="{37\:\ 0x001b|0x001b: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('exception' java.lang.Throwable)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('eh' java.lang.Object)])  \-\> B:39:0x001e  (LINE:1126)\l}"];
Node_38 [shape=record,label="{38\:\ 0x001d|RETURN\l|0x001d: RETURN   \l}"];
Node_39 [shape=record,label="{39\:\ 0x001e|0x001e: INVOKE  (r2 I:java.util.ArrayList) = (r5 I:kotlinx.coroutines.JobSupport$Finishing) type: DIRECT call: kotlinx.coroutines.JobSupport.Finishing.allocateList():java.util.ArrayList A[MD:():java.util.ArrayList\<java.lang.Throwable\> (m)] (LINE:1127)\l0x0022: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x0023: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0024: INVOKE  \l  (r3 I:java.util.ArrayList A[D('$this$addExceptionLocked_u24lambda_u2d2' java.util.ArrayList)])\l  (r1 I:java.lang.Object A[D('eh' java.lang.Object)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:1128)\l0x0027: INVOKE  \l  (r3 I:java.util.ArrayList A[D('$this$addExceptionLocked_u24lambda_u2d2' java.util.ArrayList)])\l  (r6 I:java.lang.Object A[D('exception' java.lang.Throwable)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:1129)\l0x002b: INVOKE  (r5 I:kotlinx.coroutines.JobSupport$Finishing), (r2 I:java.lang.Object) type: DIRECT call: kotlinx.coroutines.JobSupport.Finishing.setExceptionsHolder(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:1127)\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|0x0039: RETURN   A[SYNTHETIC] (LINE:1136)\l}"];
Node_40 [shape=record,label="{40\:\ 0x002f|0x002f: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('eh' java.lang.Object)]) java.util.ArrayList  (LINE:1133)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0031|0x0031: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x003a \l}"];
Node_42 [shape=record,label="{42\:\ 0x0033|0x0033: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('eh' java.lang.Object)]) \l0x0034: CHECK_CAST (r2 I:java.util.ArrayList) = (java.util.ArrayList) (r2 I:??[OBJECT, ARRAY]) \l0x0036: INVOKE  (r2 I:java.util.ArrayList), (r6 I:java.lang.Object A[D('exception' java.lang.Throwable)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0039|RETURN\lORIG_RETURN\l|0x0039: RETURN    (LINE:1136)\l}"];
Node_44 [shape=record,label="{44\:\ 0x003a|0x003a: NEW_INSTANCE  (r2 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:1133)\l0x003c: CONST_STR  (r3 I:java.lang.String) =  \"State is \"  (LINE:1134)\l0x003e: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String), (r1 I:java.lang.Object A[D('eh' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x0042: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0046: INVOKE  (r2 I:java.lang.IllegalStateException), (r3 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0049|0x0049: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.JobSupport.Finishing.addExceptionLocked((r5 'this' I:kotlinx.coroutines.JobSupport$Finishing A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x000c \-\> B:25:?, CROSS_EDGE: B:43:0x0039 \-\> B:25:?, CROSS_EDGE: B:38:0x001d \-\> B:25:?, CROSS_EDGE: B:39:0x001e \-\> B:43:0x0039, CROSS_EDGE: B:42:0x0033 \-\> B:43:0x0039, CROSS_EDGE: B:45:0x0049 \-\> B:25:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0023\-0x002b: r3 '$this$addExceptionLocked_u24lambda_u2d2' Ljava\/util\/ArrayList;\l  0x0024\-0x002b: r4 '$i$a$\-apply\-JobSupport$Finishing$addExceptionLocked$1' I\l  0x0011\-0x0039: r1 'eh' Ljava\/lang\/Object;\l  0x0004\-0x0049: r0 'rootCause' Ljava\/lang\/Throwable;\l  0x003a\-0x0049: r1 'eh' Ljava\/lang\/Object;\l  \-1 \-0x0049: r6 'exception' Ljava\/lang\/Throwable;\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_25;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_25;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_46;
Node_46 -> Node_25;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_25;
Node_39 -> Node_47;
Node_47 -> Node_25;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_25;
Node_44 -> Node_45;
Node_45 -> Node_25;
}

