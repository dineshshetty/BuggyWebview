digraph "CFG forkotlinx.coroutines.JobSupport.Finishing.sealLocked(Ljava\/lang\/Throwable;)Ljava\/util\/List;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) = (r5 I:kotlinx.coroutines.JobSupport$Finishing) type: DIRECT call: kotlinx.coroutines.JobSupport.Finishing.getExceptionsHolder():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:1102)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('eh' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x000b  (LINE:1103)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|0x0006: INVOKE  (r1 I:java.util.ArrayList) = (r5 I:kotlinx.coroutines.JobSupport$Finishing) type: DIRECT call: kotlinx.coroutines.JobSupport.Finishing.allocateList():java.util.ArrayList A[MD:():java.util.ArrayList\<java.lang.Throwable\> (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0020|0x0020: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('eh' java.lang.Object)]) = (r1 I:??[OBJECT, ARRAY])  (LINE:1102)\l0x0021: INVOKE  (r1 I:java.lang.Throwable) = (r5 I:kotlinx.coroutines.JobSupport$Finishing) type: VIRTUAL call: kotlinx.coroutines.JobSupport.Finishing.getRootCause():java.lang.Throwable A[MD:():java.lang.Throwable (m)] (LINE:1108)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0025|0x0025: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('rootCause' java.lang.Throwable)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0028  (LINE:1109)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0028|0x0028: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('rootCause' java.lang.Throwable)]) \l0x0029: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1479)\l0x002a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1109)\l0x002b: INVOKE  \l  (r0 I:java.util.ArrayList A[D('list' java.util.ArrayList)])\l  (r4 I:int)\l  (r2 I:java.lang.Object A[D('it' java.lang.Throwable)])\l type: VIRTUAL call: java.util.ArrayList.add(int, java.lang.Object):void A[MD:(int, E):void (c)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x002e|0x002e: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('proposedException' java.lang.Throwable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0039  (LINE:1110)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0030|0x0030: INVOKE  (r2 I:boolean) = \l  (r6 I:java.lang.Object A[D('proposedException' java.lang.Throwable)])\l  (r1 I:java.lang.Object A[D('rootCause' java.lang.Throwable)])\l type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0034|0x0034: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0039 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0036|0x0036: INVOKE  \l  (r0 I:java.util.ArrayList A[D('list' java.util.ArrayList)])\l  (r6 I:java.lang.Object A[D('proposedException' java.lang.Throwable)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0039|0x0039: INVOKE  (r2 I:kotlinx.coroutines.internal.Symbol) =  type: STATIC call: kotlinx.coroutines.JobSupportKt.access$getSEALED$p():kotlinx.coroutines.internal.Symbol A[MD:():kotlinx.coroutines.internal.Symbol (m)] (LINE:1111)\l0x003d: INVOKE  (r5 I:kotlinx.coroutines.JobSupport$Finishing), (r2 I:java.lang.Object) type: DIRECT call: kotlinx.coroutines.JobSupport.Finishing.setExceptionsHolder(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0040: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('list' java.util.ArrayList)])  (LINE:1112)\l0x0041: CHECK_CAST (r2 I:java.util.List) = (java.util.List) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0043|RETURN\l|0x0043: RETURN  (r2 I:java.util.List\<java.lang.Throwable\>) \l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x000b|0x000b: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('eh' java.lang.Object)]) java.lang.Throwable  (LINE:1104)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0019 \l}"];
Node_30 [shape=record,label="{30\:\ 0x000f|0x000f: INVOKE  (r1 I:java.util.ArrayList) = (r5 I:kotlinx.coroutines.JobSupport$Finishing) type: DIRECT call: kotlinx.coroutines.JobSupport.Finishing.allocateList():java.util.ArrayList A[MD:():java.util.ArrayList\<java.lang.Throwable\> (m)]\l0x0013: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0014: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1479)\l0x0015: INVOKE  (r2 I:java.util.ArrayList A[D('it' java.util.ArrayList)]), (r0 I:java.lang.Object A[D('eh' java.lang.Object)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:1104)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0019|0x0019: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('eh' java.lang.Object)]) java.util.ArrayList  (LINE:1105)\l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|0x001b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0044 \l}"];
Node_33 [shape=record,label="{33\:\ 0x001d|0x001d: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('eh' java.lang.Object)]) \l0x001e: CHECK_CAST (r1 I:java.util.ArrayList) = (java.util.ArrayList) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0044|0x0044: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException A[D('rootCause' java.lang.Throwable)]) =  java.lang.IllegalStateException  (LINE:1105)\l0x0046: CONST_STR  (r2 I:java.lang.String) =  \"State is \"  (LINE:1106)\l0x0048: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String), (r0 I:java.lang.Object A[D('eh' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x004c: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0050: INVOKE  (r1 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0053|0x0053: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final java.util.List\<java.lang.Throwable\> kotlinx.coroutines.JobSupport.Finishing.sealLocked((r5 'this' I:kotlinx.coroutines.JobSupport$Finishing A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Throwable A[D('proposedException' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:40:0x0034 \-\> B:42:0x0039, CROSS_EDGE: B:38:0x002e \-\> B:42:0x0039, CROSS_EDGE: B:35:0x0025 \-\> B:38:0x002e, CROSS_EDGE: B:30:0x000f \-\> B:34:0x0020, CROSS_EDGE: B:33:0x001d \-\> B:34:0x0020, CROSS_EDGE: B:45:0x0053 \-\> B:24:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x0018: r2 'it' Ljava\/util\/ArrayList;\l  0x0015\-0x0018: r3 '$i$a$\-also\-JobSupport$Finishing$sealLocked$list$1' I\l  0x0004\-0x0020: r0 'eh' Ljava\/lang\/Object;\l  0x0029\-0x002e: r2 'it' Ljava\/lang\/Throwable;\l  0x002a\-0x002e: r3 '$i$a$\-let\-JobSupport$Finishing$sealLocked$1' I\l  0x0025\-0x0044: r1 'rootCause' Ljava\/lang\/Throwable;\l  0x0021\-0x0044: r0 'list' Ljava\/util\/ArrayList;\l  0x0044\-0x0053: r0 'eh' Ljava\/lang\/Object;\l  \-1 \-0x0053: r6 'proposedException' Ljava\/lang\/Throwable;\lSIGNATURE: (Ljava\/lang\/Throwable;)Ljava\/util\/List\<Ljava\/lang\/Throwable;\>;\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_38[style=dashed];
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_24;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_44;
Node_33 -> Node_34;
Node_44 -> Node_45;
Node_45 -> Node_24;
}

