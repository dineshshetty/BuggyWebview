digraph "CFG forkotlinx.coroutines.JobSupport.Finishing.sealLocked(Ljava\/lang\/Throwable;)Ljava\/util\/List;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|java.lang.Object r0 = getExceptionsHolder()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|if (r0 != null) goto L14\l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|java.util.ArrayList r1 = allocateList()\l}"];
Node_34 [shape=record,label="{34\:\ 0x0020|PHI: r1 \l  PHI: (r1v6 java.util.ArrayList\<java.lang.Throwable\>) = (r1v4 java.util.ArrayList), (r1v5 java.util.ArrayList\<java.lang.Throwable\>), (r1v8 java.util.ArrayList\<java.lang.Throwable\>) binds: [B:33:0x001d, B:30:0x000f, B:27:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|r0 = r1\ljava.lang.Throwable r1 = getRootCause()\l}"];
Node_35 [shape=record,label="{35\:\ 0x0025|if (r1 != null) goto L6\l}"];
Node_37 [shape=record,label="{37\:\ 0x0028|r0.add(0, r1)\l}"];
Node_38 [shape=record,label="{38\:\ 0x002e|if (r6 == null) goto L11\l}"];
Node_39 [shape=record,label="{39\:\ 0x0030}"];
Node_40 [shape=record,label="{40\:\ 0x0034|if (kotlin.jvm.internal.Intrinsics.areEqual(r6, r1) != false) goto L11\l}"];
Node_41 [shape=record,label="{41\:\ 0x0036|r0.add(r6)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0039|kotlinx.coroutines.internal.Symbol r2 = kotlinx.coroutines.JobSupportKt.SEALED\lsetExceptionsHolder(r2)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0043|RETURN\l|return r0\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x000b}"];
Node_29 [shape=record,label="{29\:\ 0x000d|if ((r0 instanceof java.lang.Throwable) == false) goto L17\l}"];
Node_30 [shape=record,label="{30\:\ 0x000f|java.util.ArrayList r1 = allocateList()\lr1.add(r0)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0019}"];
Node_32 [shape=record,label="{32\:\ 0x001b|if ((r0 instanceof java.util.ArrayList) == false) goto L20\l}"];
Node_33 [shape=record,label="{33\:\ 0x001d|java.util.ArrayList r1 = (java.util.ArrayList) r0\l}"];
Node_44 [shape=record,label="{44\:\ 0x0044}"];
Node_45 [shape=record,label="{45\:\ 0x0053|throw new java.lang.IllegalStateException(kotlin.jvm.internal.Intrinsics.stringPlus(\"State is \", r0).toString())\l}"];
MethodNode[shape=record,label="{public final java.util.List\<java.lang.Throwable\> kotlinx.coroutines.JobSupport.Finishing.sealLocked((r5v0 'this' kotlinx.coroutines.JobSupport$Finishing A[IMMUTABLE_TYPE, THIS]), (r6v0 'proposedException' java.lang.Throwable A[D('proposedException' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:40:0x0034 \-\> B:42:0x0039, CROSS_EDGE: B:38:0x002e \-\> B:42:0x0039, CROSS_EDGE: B:35:0x0025 \-\> B:38:0x002e, CROSS_EDGE: B:30:0x000f \-\> B:34:0x0020, CROSS_EDGE: B:33:0x001d \-\> B:34:0x0020, CROSS_EDGE: B:45:0x0053 \-\> B:24:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/lang\/Throwable;)Ljava\/util\/List\<Ljava\/lang\/Throwable;\>;\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_38[style=dashed];
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_24;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_44;
Node_33 -> Node_34;
Node_44 -> Node_45;
Node_45 -> Node_24;
}

