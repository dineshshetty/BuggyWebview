digraph "CFG forkotlinx.coroutines.JobSupport.Finishing.addExceptionLocked(Ljava\/lang\/Throwable;)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|java.lang.Throwable r0 = getRootCause()\l}"];
Node_27 [shape=record,label="{27\:\ 0x0004|if (r0 != null) goto L6\l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|setRootCause(r6)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0009|RETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x000a|if (r6 != r0) goto L8\l}"];
Node_31 [shape=record,label="{31\:\ 0x000c|RETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ 0x000d|java.lang.Object r1 = getExceptionsHolder()\l}"];
Node_33 [shape=record,label="{33\:\ 0x0011|if (r1 != null) goto L12\l}"];
Node_34 [shape=record,label="{34\:\ 0x0013|setExceptionsHolder(r6)\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_35 [shape=record,label="{35\:\ 0x0017}"];
Node_36 [shape=record,label="{36\:\ 0x0019|if ((r1 instanceof java.lang.Throwable) == false) goto L18\l}"];
Node_37 [shape=record,label="{37\:\ 0x001b|if (r6 != r1) goto L16\l}"];
Node_38 [shape=record,label="{38\:\ 0x001d|RETURN\l|return\l}"];
Node_39 [shape=record,label="{39\:\ 0x001e|java.util.ArrayList r2 = allocateList()\lr2.add(r1)\lr2.add(r6)\lsetExceptionsHolder(r2)\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_40 [shape=record,label="{40\:\ 0x002f}"];
Node_41 [shape=record,label="{41\:\ 0x0031|if ((r1 instanceof java.util.ArrayList) == false) goto L22\l}"];
Node_42 [shape=record,label="{42\:\ 0x0033|((java.util.ArrayList) r1).add(r6)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0039|RETURN\lORIG_RETURN\l|return\l}"];
Node_44 [shape=record,label="{44\:\ 0x003a}"];
Node_45 [shape=record,label="{45\:\ 0x0049|throw new java.lang.IllegalStateException(kotlin.jvm.internal.Intrinsics.stringPlus(\"State is \", r1).toString())\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.JobSupport.Finishing.addExceptionLocked((r5v0 'this' kotlinx.coroutines.JobSupport$Finishing A[IMMUTABLE_TYPE, THIS]), (r6v0 'exception' java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x000c \-\> B:25:?, CROSS_EDGE: B:43:0x0039 \-\> B:25:?, CROSS_EDGE: B:38:0x001d \-\> B:25:?, CROSS_EDGE: B:39:0x001e \-\> B:43:0x0039, CROSS_EDGE: B:42:0x0033 \-\> B:43:0x0039, CROSS_EDGE: B:45:0x0049 \-\> B:25:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r2v5, resolved type: java.util.ArrayList\<java.lang.Throwable\>\}\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_25;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_25;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_46;
Node_46 -> Node_25;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_25;
Node_39 -> Node_47;
Node_47 -> Node_25;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_25;
Node_44 -> Node_45;
Node_45 -> Node_25;
}

