digraph "CFG forkotlinx.coroutines.JobKt__FutureKt.cancelFutureOnCancellation(Lkotlinx\/coroutines\/CancellableContinuation;Ljava\/util\/concurrent\/Future;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.CancelFutureOnCancel) =  kotlinx.coroutines.CancelFutureOnCancel  (LINE:33)\l0x0002: INVOKE  \l  (r0 I:kotlinx.coroutines.CancelFutureOnCancel)\l  (r2 I:java.util.concurrent.Future A[D('future' java.util.concurrent.Future)])\l type: DIRECT call: kotlinx.coroutines.CancelFutureOnCancel.\<init\>(java.util.concurrent.Future):void A[MD:(java.util.concurrent.Future\<?\>):void (m)]\l0x0005: CHECK_CAST (r0 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  \l  (r1 I:kotlinx.coroutines.CancellableContinuation A[D('$this$cancelFutureOnCancellation' kotlinx.coroutines.CancellableContinuation)])\l  (r0 I:kotlin.jvm.functions.Function1)\l type: INTERFACE call: kotlinx.coroutines.CancellableContinuation.invokeOnCancellation(kotlin.jvm.functions.Function1):void A[MD:(kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\>):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|RETURN\l|0x000a: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.JobKt__FutureKt.cancelFutureOnCancellation((r1 I:kotlinx.coroutines.CancellableContinuation\<?\> A[D('$this$cancelFutureOnCancellation' kotlinx.coroutines.CancellableContinuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.util.concurrent.Future\<?\> A[D('future' java.util.concurrent.Future), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000a: r1 '$this$cancelFutureOnCancellation' Lkotlinx\/coroutines\/CancellableContinuation;\l  \-1 \-0x000a: r2 'future' Ljava\/util\/concurrent\/Future;\lSIGNATURE: (Lkotlinx\/coroutines\/CancellableContinuation\<*\>;Ljava\/util\/concurrent\/Future\<*\>;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

