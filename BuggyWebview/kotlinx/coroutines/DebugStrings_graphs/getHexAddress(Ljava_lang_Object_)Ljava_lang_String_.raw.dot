digraph "CFG forkotlinx.coroutines.DebugStringsKt.getHexAddress(Ljava\/lang\/Object;)Ljava\/lang\/String;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r1 I:java.lang.Object A[D('$this$hexAddress' java.lang.Object)]) type: STATIC call: java.lang.System.identityHashCode(java.lang.Object):int A[MD:(java.lang.Object):int (c)] (LINE:13)\l0x0004: INVOKE  (r0 I:java.lang.String) = (r0 I:int) type: STATIC call: java.lang.Integer.toHexString(int):java.lang.String A[MD:(int):java.lang.String (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:java.lang.String) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlinx.coroutines.DebugStringsKt.getHexAddress((r1 I:java.lang.Object A[D('$this$hexAddress' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r1 '$this$hexAddress' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

