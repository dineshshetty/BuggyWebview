digraph "CFG forkotlinx.coroutines.JobSupportKt.unboxState(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('$this$unboxState' java.lang.Object)]) kotlinx.coroutines.IncompleteStateBox  (LINE:1285)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0008 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$unboxState' java.lang.Object)]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.IncompleteStateBox) = (kotlinx.coroutines.IncompleteStateBox) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x000c \l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: IGET  (r0 I:kotlinx.coroutines.Incomplete) = (r0 I:kotlinx.coroutines.IncompleteStateBox) kotlinx.coroutines.IncompleteStateBox.state kotlinx.coroutines.Incomplete \l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:? \l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0012: RETURN  (r0 I:java.lang.Object) A[SYNTHETIC]\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0011|0x0011: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$unboxState' java.lang.Object)]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: RETURN  (r0 I:java.lang.Object) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|0x0008: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.JobSupportKt.unboxState((r1 I:java.lang.Object A[D('$this$unboxState' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0011 \-\> B:26:0x0012, CROSS_EDGE: B:20:0x0009 \-\> B:25:0x0011, CROSS_EDGE: B:19:0x0008 \-\> B:20:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0012: r1 '$this$unboxState' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_25[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_25[style=dashed];
Node_23 -> Node_27;
Node_27 -> Node_15;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_19 -> Node_20;
}

