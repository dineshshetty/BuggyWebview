digraph "CFG forkotlinx.coroutines.JobSupport.tryFinalizeSimpleState(Lkotlinx\/coroutines\/Incomplete;Ljava\/lang\/Object;)Z" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:290)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x001e \l}"];
Node_31 [shape=record,label="{31\:\ 0x0008|0x0008: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1479)\l0x0009: INSTANCE_OF  (r3 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('state' kotlinx.coroutines.Incomplete)]) kotlinx.coroutines.Empty  (LINE:290)\l}"];
Node_32 [shape=record,label="{32\:\ 0x000b|0x000b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0014 \l}"];
Node_33 [shape=record,label="{33\:\ 0x000d|0x000d: INSTANCE_OF  (r3 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('state' kotlinx.coroutines.Incomplete)]) kotlinx.coroutines.JobNode \l}"];
Node_34 [shape=record,label="{34\:\ 0x000f|0x000f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0012 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0012|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$a$\-assert\-JobSupport$tryFinalizeSimpleState$1' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0015|0x0015: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$i$a$\-assert\-JobSupport$tryFinalizeSimpleState$1' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0018 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0018|0x0018: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x001a: INVOKE  (r0 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x001d|0x001d: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0014|0x0014: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('$i$a$\-assert\-JobSupport$tryFinalizeSimpleState$1' int)]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x001e|0x001e: INVOKE  (r0 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:291)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0022|0x0022: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0032 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0024|0x0024: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1479)\l0x0025: INSTANCE_OF  (r3 I:boolean) = (r6 I:??[OBJECT, ARRAY] A[D('update' java.lang.Object)]) kotlinx.coroutines.CompletedExceptionally  (LINE:291)\l0x0027: ARITH  (r0 I:??[int, boolean] A[D('$i$a$\-assert\-JobSupport$tryFinalizeSimpleState$2' int)]) = (r3 I:??[int, boolean, short, byte, char]) ^ (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0029|0x0029: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x002c \l}"];
Node_47 [shape=record,label="{47\:\ 0x002c|0x002c: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x002e: INVOKE  (r0 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0031|0x0031: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0032|0x0032: SGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.JobSupport._state$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:292)\l0x0034: INVOKE  (r3 I:java.lang.Object) = (r6 I:java.lang.Object A[D('update' java.lang.Object)]) type: STATIC call: kotlinx.coroutines.JobSupportKt.boxIncomplete(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):java.lang.Object (m)]\l0x0038: INVOKE  (r0 I:boolean) = \l  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r4 I:java.lang.Object)\l  (r5 I:java.lang.Object A[D('state' kotlinx.coroutines.Incomplete)])\l  (r3 I:java.lang.Object)\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_50 [shape=record,label="{50\:\ 0x003c|0x003c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x003f \l}"];
Node_51 [shape=record,label="{51\:\ 0x003e|RETURN\l|0x003e: RETURN  (r1 I:boolean) \l}"];
Node_52 [shape=record,label="{52\:\ 0x003f|0x003f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:293)\l0x0040: INVOKE  (r4 I:kotlinx.coroutines.JobSupport), (r0 I:java.lang.Throwable) type: VIRTUAL call: kotlinx.coroutines.JobSupport.onCancelling(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (m)]\l0x0043: INVOKE  (r4 I:kotlinx.coroutines.JobSupport), (r6 I:java.lang.Object A[D('update' java.lang.Object)]) type: VIRTUAL call: kotlinx.coroutines.JobSupport.onCompletionInternal(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:294)\l0x0046: INVOKE  \l  (r4 I:kotlinx.coroutines.JobSupport)\l  (r5 I:kotlinx.coroutines.Incomplete A[D('state' kotlinx.coroutines.Incomplete)])\l  (r6 I:java.lang.Object A[D('update' java.lang.Object)])\l type: DIRECT call: kotlinx.coroutines.JobSupport.completeStateFinalization(kotlinx.coroutines.Incomplete, java.lang.Object):void A[MD:(kotlinx.coroutines.Incomplete, java.lang.Object):void (m)] (LINE:295)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0049|RETURN\l|0x0049: RETURN  (r2 I:boolean)  (LINE:296)\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.JobSupport.tryFinalizeSimpleState((r4 'this' I:kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r5 I:kotlinx.coroutines.Incomplete A[D('state' kotlinx.coroutines.Incomplete), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Object A[D('update' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:48:0x0031 \-\> B:28:?, CROSS_EDGE: B:51:0x003e \-\> B:28:?, CROSS_EDGE: B:53:0x0049 \-\> B:28:?, CROSS_EDGE: B:43:0x0022 \-\> B:49:0x0032, CROSS_EDGE: B:37:0x0014 \-\> B:38:0x0015, CROSS_EDGE: B:32:0x000b \-\> B:37:0x0014, CROSS_EDGE: B:30:0x0006 \-\> B:42:0x001e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0015: r0 '$i$a$\-assert\-JobSupport$tryFinalizeSimpleState$1' I\l  0x0025\-0x0027: r0 '$i$a$\-assert\-JobSupport$tryFinalizeSimpleState$2' I\l  \-1 \-0x0049: r5 'state' Lkotlinx\/coroutines\/Incomplete;\l  \-1 \-0x0049: r6 'update' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_42;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_34;
Node_34 -> Node_36;
Node_34 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_38 -> Node_40;
Node_38 -> Node_42[style=dashed];
Node_40 -> Node_41;
Node_41 -> Node_28;
Node_37 -> Node_38;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_49;
Node_44 -> Node_45;
Node_45 -> Node_47;
Node_45 -> Node_49[style=dashed];
Node_47 -> Node_48;
Node_48 -> Node_28;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_28;
Node_52 -> Node_53;
Node_53 -> Node_28;
}

