digraph "CFG forkotlinx.coroutines.JobSupport.getCompletionCause()Ljava\/lang\/Throwable;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) = (r3 I:kotlinx.coroutines.JobSupport) type: VIRTUAL call: kotlinx.coroutines.JobSupport.getState$kotlinx_coroutines_core():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:433)\l0x0004: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.JobSupport$Finishing  (LINE:434)\l0x0006: CONST_STR  (r2 I:java.lang.String) =  \"Job is still new or active: \" \l}"];
Node_23 [shape=record,label="{23\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0022 \l}"];
Node_24 [shape=record,label="{24\:\ 0x000a|0x000a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) \l0x000b: CHECK_CAST (r1 I:kotlinx.coroutines.JobSupport$Finishing) = (kotlinx.coroutines.JobSupport$Finishing) (r1 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  (r1 I:java.lang.Throwable) = (r1 I:kotlinx.coroutines.JobSupport$Finishing) type: VIRTUAL call: kotlinx.coroutines.JobSupport.Finishing.getRootCause():java.lang.Throwable A[MD:():java.lang.Throwable (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0014 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0014|0x0014: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0016: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String), (r3 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)] (LINE:435)\l0x001a: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x001e: INVOKE  (r1 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0021|0x0021: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x0031: RETURN  (r1 I:java.lang.Throwable) A[SYNTHETIC] (LINE:439)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0022|0x0022: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.Incomplete  (LINE:436)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0024|0x0024: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0032 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0026|0x0026: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.CompletedExceptionally  (LINE:437)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0028|0x0028: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0030 \l}"];
Node_33 [shape=record,label="{33\:\ 0x002a|0x002a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) \l0x002b: CHECK_CAST (r1 I:kotlinx.coroutines.CompletedExceptionally) = (kotlinx.coroutines.CompletedExceptionally) (r1 I:??[OBJECT, ARRAY]) \l0x002d: IGET  (r1 I:java.lang.Throwable) = (r1 I:kotlinx.coroutines.CompletedExceptionally) kotlinx.coroutines.CompletedExceptionally.cause java.lang.Throwable \l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|0x0031: RETURN  (r1 I:java.lang.Throwable) A[SYNTHETIC] (LINE:439)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0030|RETURN\lORIG_RETURN\l|0x0030: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:438)\l0x0031: RETURN  (r1 I:java.lang.Throwable)  (LINE:439)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0032|0x0032: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:436)\l0x0034: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String), (r3 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x0038: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x003c: INVOKE  (r1 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x003f|0x003f: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected final java.lang.Throwable kotlinx.coroutines.JobSupport.getCompletionCause((r3 'this' I:kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0031 \-\> B:21:?, CROSS_EDGE: B:33:0x002a \-\> B:35:0x0031, CROSS_EDGE: B:34:0x0030 \-\> B:35:0x0031, CROSS_EDGE: B:37:0x003f \-\> B:21:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0031: r0 'state' Ljava\/lang\/Object;\l  0x0032\-0x003f: r0 'state' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_39[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_21;
Node_39 -> Node_21;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_36;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_38;
Node_38 -> Node_21;
Node_34 -> Node_21;
Node_36 -> Node_37;
Node_37 -> Node_21;
}

