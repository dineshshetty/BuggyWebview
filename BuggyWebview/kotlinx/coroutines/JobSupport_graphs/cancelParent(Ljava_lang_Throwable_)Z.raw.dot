digraph "CFG forkotlinx.coroutines.JobSupport.cancelParent(Ljava\/lang\/Throwable;)Z" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r4 I:kotlinx.coroutines.JobSupport) type: VIRTUAL call: kotlinx.coroutines.JobSupport.isScopedCoroutine():boolean A[MD:():boolean (m)] (LINE:344)\l0x0004: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0008 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:boolean) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0008|0x0008: INSTANCE_OF  (r0 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Throwable)]) java.util.concurrent.CancellationException  (LINE:350)\l0x000a: INVOKE  (r2 I:kotlinx.coroutines.ChildHandle) = (r4 I:kotlinx.coroutines.JobSupport) type: VIRTUAL call: kotlinx.coroutines.JobSupport.getParentHandle$kotlinx_coroutines_core():kotlinx.coroutines.ChildHandle A[MD:():kotlinx.coroutines.ChildHandle (m)] (LINE:351)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parent' kotlinx.coroutines.ChildHandle)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0020  (LINE:353)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0010|0x0010: SGET  (r3 I:kotlinx.coroutines.NonDisposableHandle) =  kotlinx.coroutines.NonDisposableHandle.INSTANCE kotlinx.coroutines.NonDisposableHandle \l}"];
Node_27 [shape=record,label="{27\:\ 0x0012|0x0012: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parent' kotlinx.coroutines.ChildHandle)]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0015 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0015|0x0015: INVOKE  (r3 I:boolean) = \l  (r2 I:kotlinx.coroutines.ChildHandle A[D('parent' kotlinx.coroutines.ChildHandle)])\l  (r5 I:java.lang.Throwable A[D('cause' java.lang.Throwable)])\l type: INTERFACE call: kotlinx.coroutines.ChildHandle.childCancelled(java.lang.Throwable):boolean A[MD:(java.lang.Throwable):boolean (m)] (LINE:358)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|0x0019: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:? \l}"];
Node_31 [shape=record,label="{31\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isCancellation' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x001e \l}"];
Node_33 [shape=record,label="{33\:\ 0x001e|RETURN\lORIG_RETURN\l|0x001e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001f: RETURN  (r1 I:boolean) \l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x001f: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|0x001f: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0020|RETURN\l|0x0020: RETURN  (r0 I:boolean A[D('isCancellation' boolean)])  (LINE:354)\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.JobSupport.cancelParent((r4 'this' I:kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x001f \-\> B:20:?, CROSS_EDGE: B:31:0x001b \-\> B:34:0x001f, CROSS_EDGE: B:30:0x0019 \-\> B:34:0x001f, CROSS_EDGE: B:35:0x0020 \-\> B:20:?, CROSS_EDGE: B:25:0x000e \-\> B:35:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x0020: r0 'isCancellation' Z\l  0x000e\-0x0020: r2 'parent' Lkotlinx\/coroutines\/ChildHandle;\l  \-1 \-0x0020: r5 'cause' Ljava\/lang\/Throwable;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_20;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_35;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_35[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_36;
Node_31 -> Node_33;
Node_31 -> Node_37[style=dashed];
Node_33 -> Node_20;
Node_37 -> Node_20;
Node_36 -> Node_20;
Node_35 -> Node_20;
}

