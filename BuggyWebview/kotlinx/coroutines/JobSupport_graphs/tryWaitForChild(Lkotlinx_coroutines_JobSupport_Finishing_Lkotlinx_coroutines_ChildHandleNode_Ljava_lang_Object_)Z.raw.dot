digraph "CFG forkotlinx.coroutines.JobSupport.tryWaitForChild(Lkotlinx\/coroutines\/JobSupport$Finishing;Lkotlinx\/coroutines\/ChildHandleNode;Ljava\/lang\/Object;)Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('child' kotlinx.coroutines.ChildHandleNode)])  (LINE:917)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0001|LOOP_START\lLOOP:0: B:17:0x0001\-\>B:22:0x0025\l|0x0001: IGET  (r1 I:kotlinx.coroutines.ChildJob) = (r0 I:kotlinx.coroutines.ChildHandleNode) kotlinx.coroutines.ChildHandleNode.childJob kotlinx.coroutines.ChildJob  (LINE:918)\l0x0003: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0004: CHECK_CAST (r2 I:kotlinx.coroutines.Job) = (kotlinx.coroutines.Job) (r2 I:??[OBJECT, ARRAY]) \l0x0006: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:919)\l0x0008: NEW_INSTANCE  (r1 I:kotlinx.coroutines.JobSupport$ChildCompletion) =  kotlinx.coroutines.JobSupport$ChildCompletion  (LINE:920)\l0x000a: INVOKE  \l  (r1 I:kotlinx.coroutines.JobSupport$ChildCompletion)\l  (r8 I:kotlinx.coroutines.JobSupport)\l  (r9 I:kotlinx.coroutines.JobSupport$Finishing A[D('state' kotlinx.coroutines.JobSupport$Finishing)])\l  (r0 I:kotlinx.coroutines.ChildHandleNode)\l  (r11 I:java.lang.Object A[D('proposedUpdate' java.lang.Object)])\l type: DIRECT call: kotlinx.coroutines.JobSupport.ChildCompletion.\<init\>(kotlinx.coroutines.JobSupport, kotlinx.coroutines.JobSupport$Finishing, kotlinx.coroutines.ChildHandleNode, java.lang.Object):void A[MD:(kotlinx.coroutines.JobSupport, kotlinx.coroutines.JobSupport$Finishing, kotlinx.coroutines.ChildHandleNode, java.lang.Object):void (m)]\l0x000d: CHECK_CAST (r1 I:kotlinx.coroutines.CompletionHandlerBase) = (kotlinx.coroutines.CompletionHandlerBase) (r1 I:??[OBJECT, ARRAY]) \l0x000f: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('$i$f$getAsHandler' int)]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$asHandler$iv' kotlinx.coroutines.CompletionHandlerBase)])  (LINE:1593)\l0x0011: CHECK_CAST (r5 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r5 I:??[OBJECT, ARRAY] A[D('$i$f$getAsHandler' int)]) \l0x0013: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:918)\l0x0014: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: INVOKE  (r1 I:kotlinx.coroutines.DisposableHandle) = \l  (r2 I:kotlinx.coroutines.Job)\l  (r3 I:boolean)\l  (r4 I:boolean)\l  (r5 I:kotlin.jvm.functions.Function1)\l  (r6 I:int)\l  (r7 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.Job.DefaultImpls.invokeOnCompletion$default(kotlinx.coroutines.Job, boolean, boolean, kotlin.jvm.functions.Function1, int, java.lang.Object):kotlinx.coroutines.DisposableHandle A[MD:(kotlinx.coroutines.Job, boolean, boolean, kotlin.jvm.functions.Function1, int, java.lang.Object):kotlinx.coroutines.DisposableHandle (m)]\l0x0019: SGET  (r2 I:kotlinx.coroutines.NonDisposableHandle) =  kotlinx.coroutines.NonDisposableHandle.INSTANCE kotlinx.coroutines.NonDisposableHandle  (LINE:922)\l}"];
Node_18 [shape=record,label="{18\:\ 0x001b|0x001b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('handle' kotlinx.coroutines.DisposableHandle)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x001f \l}"];
Node_21 [shape=record,label="{21\:\ 0x001f|0x001f: CHECK_CAST (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r0 I:??[OBJECT, ARRAY])  (LINE:923)\l0x0021: INVOKE  (r0 I:kotlinx.coroutines.ChildHandleNode) = (r8 I:kotlinx.coroutines.JobSupport), (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) type: DIRECT call: kotlinx.coroutines.JobSupport.nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode):kotlinx.coroutines.ChildHandleNode A[MD:(kotlinx.coroutines.internal.LockFreeLinkedListNode):kotlinx.coroutines.ChildHandleNode (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0025|LOOP_END\lLOOP:0: B:17:0x0001\-\>B:22:0x0025\l|0x0025: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0001 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0027|RETURN\l|0x0027: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0028: RETURN  (r0 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x001d|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x001d|RETURN\l|0x001d: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001e: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.JobSupport.tryWaitForChild((r8 'this' I:kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r9 I:kotlinx.coroutines.JobSupport$Finishing A[D('state' kotlinx.coroutines.JobSupport$Finishing), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlinx.coroutines.ChildHandleNode A[D('child' kotlinx.coroutines.ChildHandleNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.Object A[D('proposedUpdate' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0028 \-\> B:15:?, BACK_EDGE: B:22:0x0025 \-\> B:17:0x0001\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x0013: r1 '$this$asHandler$iv' Lkotlinx\/coroutines\/CompletionHandlerBase;\l  0x0010\-0x0013: r5 '$i$f$getAsHandler' I\l  0x0029\-0x0029: r0 'nextChild' Lkotlinx\/coroutines\/ChildHandleNode;\l  0x0019\-0x0029: r1 'handle' Lkotlinx\/coroutines\/DisposableHandle;\l  \-1 \-0x0029: r9 'state' Lkotlinx\/coroutines\/JobSupport$Finishing;\l  \-1 \-0x0029: r10 'child' Lkotlinx\/coroutines\/ChildHandleNode;\l  \-1 \-0x0029: r11 'proposedUpdate' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_21;
Node_18 -> Node_27[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_17;
Node_22 -> Node_26[style=dashed];
Node_26 -> Node_23;
Node_23 -> Node_15;
Node_27 -> Node_19;
Node_19 -> Node_15;
}

