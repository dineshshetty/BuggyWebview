digraph "CFG forkotlinx.coroutines.JobSupport.joinInternal()Z" {
subgraph cluster_Region_1904190923 {
label = "R(2:(2:2|(1:(1:10)))|7) | DECL_VAR: java.lang.Object state\l";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_2120276163 {
label = "LOOP:0: (2:2|(1:(1:10)))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0012|LOOP_END\lLOOP:0: B:17:0x0002\-\>B:22:0x0012\l|if (startInternal(r2) \< 0) goto L2\l}"];
subgraph cluster_Region_1362341724 {
label = "R(2:2|(1:(1:10)))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0002|LOOP_START\lLOOP:0: B:17:0x0002\-\>B:22:0x0012\l|java.lang.Object r2 = getState$kotlinx_coroutines_core()\l}"];
subgraph cluster_Region_65682251 {
label = "R(1:(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_279026291 {
label = "IF [B:18:0x000a] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000a|if ((r2 instanceof kotlinx.coroutines.Incomplete) == false) goto L9\l}"];
subgraph cluster_Region_1662847490 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x000c|RETURN\l|return false\l}"];
}
}
}
}
}
Node_23 [shape=record,label="{23\:\ 0x0014|RETURN\l|return true\l}"];
}
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0000}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000e}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0014|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x000c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.JobSupport.joinInternal((r5v0 'this' kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0015 \-\> B:15:?, BACK_EDGE: B:22:0x0012 \-\> B:17:0x0002\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_22 -> Node_17;
Node_22 -> Node_26[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_21[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_15;
Node_23 -> Node_15;
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_21 -> Node_22;
Node_26 -> Node_23;
Node_27 -> Node_19;
}

