digraph "CFG forkotlinx.coroutines.JobSupport.tryWaitForChild(Lkotlinx\/coroutines\/JobSupport$Finishing;Lkotlinx\/coroutines\/ChildHandleNode;Ljava\/lang\/Object;)Z" {
subgraph cluster_Region_1541926168 {
label = "R(3:1|(2:2|(2:(1:10)|(1:4)))|7)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0000|kotlinx.coroutines.ChildHandleNode r0 = r10\l}"];
subgraph cluster_LoopRegion_2046921447 {
label = "LOOP:0: (2:2|(2:(1:10)|(1:4)))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0025|LOOP_END\lLOOP:0: B:17:0x0001\-\>B:22:0x0025\l|if (r0 != null) goto L2\l}"];
subgraph cluster_Region_2060560592 {
label = "R(2:2|(2:(1:10)|(1:4)))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0001|LOOP_START\lLOOP:0: B:17:0x0001\-\>B:22:0x0025\lPHI: r0 \l  PHI: (r0v1 kotlinx.coroutines.ChildHandleNode) = (r0v0 kotlinx.coroutines.ChildHandleNode), (r0v4 kotlinx.coroutines.ChildHandleNode) binds: [B:16:0x0000, B:22:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.Job kotlinx.coroutines.ChildJob r2 = r0.childJob\lkotlinx.coroutines.CompletionHandlerBase kotlinx.coroutines.CompletionHandlerBase r1 = new kotlinx.coroutines.JobSupport.ChildCompletion(r8, r9, r0, r11)\lkotlinx.coroutines.DisposableHandle kotlinx.coroutines.DisposableHandle r1 = kotlinx.coroutines.Job.DefaultImpls.invokeOnCompletion$default(r2, false, false, r1, 1, null)\l}"];
subgraph cluster_Region_121346428 {
label = "R(2:(1:10)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_510273426 {
label = "IF [B:18:0x001b] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x001b|if (r1 != kotlinx.coroutines.NonDisposableHandle.INSTANCE) goto L9\l}"];
subgraph cluster_Region_709265807 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x001d|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_2091069980 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x001f|kotlinx.coroutines.ChildHandleNode r0 = nextChild(r0)\l}"];
}
}
}
}
Node_23 [shape=record,label="{23\:\ 0x0027|RETURN\l|return false\l}"];
}
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0027|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x001d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.JobSupport.tryWaitForChild((r8v0 'this' kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r9v0 'state' kotlinx.coroutines.JobSupport$Finishing A[D('state' kotlinx.coroutines.JobSupport$Finishing), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'child' kotlinx.coroutines.ChildHandleNode A[D('child' kotlinx.coroutines.ChildHandleNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'proposedUpdate' java.lang.Object A[D('proposedUpdate' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0028 \-\> B:15:?, BACK_EDGE: B:22:0x0025 \-\> B:17:0x0001\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_16 -> Node_17;
Node_22 -> Node_17;
Node_22 -> Node_26[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_21[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_15;
Node_21 -> Node_22;
Node_23 -> Node_15;
Node_14 -> Node_16;
Node_26 -> Node_23;
Node_27 -> Node_19;
}

