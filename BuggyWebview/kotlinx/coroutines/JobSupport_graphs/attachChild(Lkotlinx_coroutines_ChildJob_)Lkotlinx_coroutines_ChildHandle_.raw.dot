digraph "CFG forkotlinx.coroutines.JobSupport.attachChild(Lkotlinx\/coroutines\/ChildJob;)Lkotlinx\/coroutines\/ChildHandle;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY])  (LINE:970)\l0x0001: CHECK_CAST (r0 I:kotlinx.coroutines.Job) = (kotlinx.coroutines.Job) (r0 I:??[OBJECT, ARRAY]) \l0x0003: NEW_INSTANCE  (r1 I:kotlinx.coroutines.ChildHandleNode) =  kotlinx.coroutines.ChildHandleNode \l0x0005: INVOKE  (r1 I:kotlinx.coroutines.ChildHandleNode), (r7 I:kotlinx.coroutines.ChildJob A[D('child' kotlinx.coroutines.ChildJob)]) type: DIRECT call: kotlinx.coroutines.ChildHandleNode.\<init\>(kotlinx.coroutines.ChildJob):void A[MD:(kotlinx.coroutines.ChildJob):void (m)]\l0x0008: CHECK_CAST (r1 I:kotlinx.coroutines.CompletionHandlerBase) = (kotlinx.coroutines.CompletionHandlerBase) (r1 I:??[OBJECT, ARRAY]) \l0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$asHandler$iv' kotlinx.coroutines.CompletionHandlerBase)])  (LINE:1594)\l0x000c: CHECK_CAST (r3 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r3 I:??[OBJECT, ARRAY]) \l0x000e: CONST  (r1 I:??[boolean, int, float, short, byte, char] A[D('$this$asHandler$iv' kotlinx.coroutines.CompletionHandlerBase)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:970)\l0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0011: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: INVOKE  (r0 I:kotlinx.coroutines.DisposableHandle) = \l  (r0 I:kotlinx.coroutines.Job)\l  (r1 I:boolean)\l  (r2 I:boolean)\l  (r3 I:kotlin.jvm.functions.Function1)\l  (r4 I:int)\l  (r5 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.Job.DefaultImpls.invokeOnCompletion$default(kotlinx.coroutines.Job, boolean, boolean, kotlin.jvm.functions.Function1, int, java.lang.Object):kotlinx.coroutines.DisposableHandle A[MD:(kotlinx.coroutines.Job, boolean, boolean, kotlin.jvm.functions.Function1, int, java.lang.Object):kotlinx.coroutines.DisposableHandle (m)]\l0x0016: CHECK_CAST (r0 I:kotlinx.coroutines.ChildHandle) = (kotlinx.coroutines.ChildHandle) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:kotlinx.coroutines.ChildHandle) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.ChildHandle kotlinx.coroutines.JobSupport.attachChild((r6 'this' I:kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r7 I:kotlinx.coroutines.ChildJob A[D('child' kotlinx.coroutines.ChildJob), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x000e: r1 '$this$asHandler$iv' Lkotlinx\/coroutines\/CompletionHandlerBase;\l  0x000b\-0x000e: r2 '$i$f$getAsHandler' I\l  \-1 \-0x0018: r7 'child' Lkotlinx\/coroutines\/ChildJob;\lMETHOD_OVERRIDE: [kotlinx.coroutines.Job.attachChild(kotlinx.coroutines.ChildJob):kotlinx.coroutines.ChildHandle]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

