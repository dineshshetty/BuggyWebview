digraph "CFG forkotlinx.coroutines.JobSupport.firstChild(Lkotlinx\/coroutines\/Incomplete;)Lkotlinx\/coroutines\/ChildHandleNode;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('state' kotlinx.coroutines.Incomplete)]) kotlinx.coroutines.ChildHandleNode  (LINE:913)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0009 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('state' kotlinx.coroutines.Incomplete)]) \l0x0006: CHECK_CAST (r0 I:kotlinx.coroutines.ChildHandleNode) = (kotlinx.coroutines.ChildHandleNode) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001a \l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: INVOKE  (r0 I:kotlinx.coroutines.NodeList) = (r3 I:kotlinx.coroutines.Incomplete A[D('state' kotlinx.coroutines.Incomplete)]) type: INTERFACE call: kotlinx.coroutines.Incomplete.getList():kotlinx.coroutines.NodeList A[MD:():kotlinx.coroutines.NodeList (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0013 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0013|0x0013: CHECK_CAST (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r0 I:??[OBJECT, ARRAY]) \l0x0015: INVOKE  (r1 I:kotlinx.coroutines.ChildHandleNode) = (r2 I:kotlinx.coroutines.JobSupport), (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) type: DIRECT call: kotlinx.coroutines.JobSupport.nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode):kotlinx.coroutines.ChildHandleNode A[MD:(kotlinx.coroutines.internal.LockFreeLinkedListNode):kotlinx.coroutines.ChildHandleNode (m)]\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|0x001b: RETURN  (r1 I:kotlinx.coroutines.ChildHandleNode) A[SYNTHETIC]\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x001b: RETURN  (r1 I:kotlinx.coroutines.ChildHandleNode) A[SYNTHETIC]\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|0x001a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x001b|RETURN\lORIG_RETURN\l|0x001b: RETURN  (r1 I:kotlinx.coroutines.ChildHandleNode) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private final kotlinx.coroutines.ChildHandleNode kotlinx.coroutines.JobSupport.firstChild((r2 'this' I:kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlinx.coroutines.Incomplete A[D('state' kotlinx.coroutines.Incomplete), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0010 \-\> B:27:0x001b, CROSS_EDGE: B:26:0x001a \-\> B:27:0x001b, CROSS_EDGE: B:20:0x0009 \-\> B:21:0x000a\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001b: r3 'state' Lkotlinx\/coroutines\/Incomplete;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_29[style=dashed];
Node_25 -> Node_28;
Node_28 -> Node_16;
Node_29 -> Node_16;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_20 -> Node_21;
}

