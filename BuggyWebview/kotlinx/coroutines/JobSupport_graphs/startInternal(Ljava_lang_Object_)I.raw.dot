digraph "CFG forkotlinx.coroutines.JobSupport.startInternal(Ljava\/lang\/Object;)I" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0001|0x0001: INSTANCE_OF  (r0 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.Empty  (LINE:393)\l0x0003: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0004: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0005: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0023 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0008|0x0008: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)])  (LINE:394)\l0x0009: CHECK_CAST (r0 I:kotlinx.coroutines.Empty) = (kotlinx.coroutines.Empty) (r0 I:??[OBJECT, ARRAY]) \l0x000b: INVOKE  (r0 I:boolean) = (r0 I:kotlinx.coroutines.Empty) type: VIRTUAL call: kotlinx.coroutines.Empty.isActive():boolean A[MD:():boolean (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0012 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|RETURN\l|0x0011: RETURN  (r3 I:int) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0012|0x0012: SGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.JobSupport._state$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:395)\l0x0014: INVOKE  (r3 I:kotlinx.coroutines.Empty) =  type: STATIC call: kotlinx.coroutines.JobSupportKt.access$getEMPTY_ACTIVE$p():kotlinx.coroutines.Empty A[MD:():kotlinx.coroutines.Empty (m)]\l0x0018: INVOKE  (r0 I:boolean) = \l  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r4 I:java.lang.Object)\l  (r5 I:java.lang.Object A[D('state' java.lang.Object)])\l  (r3 I:java.lang.Object)\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x001c|0x001c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001f \l}"];
Node_29 [shape=record,label="{29\:\ 0x001e|RETURN\l|0x001e: RETURN  (r1 I:int) \l}"];
Node_30 [shape=record,label="{30\:\ 0x001f|0x001f: INVOKE  (r4 I:kotlinx.coroutines.JobSupport) type: VIRTUAL call: kotlinx.coroutines.JobSupport.onStart():void A[MD:():void (m)] (LINE:396)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|RETURN\l|0x0022: RETURN  (r2 I:int)  (LINE:397)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|0x0023: INSTANCE_OF  (r0 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.InactiveNodeList  (LINE:399)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0025|0x0025: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x003b \l}"];
Node_34 [shape=record,label="{34\:\ 0x0027|0x0027: SGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.JobSupport._state$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:400)\l0x0029: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) \l0x002a: CHECK_CAST (r3 I:kotlinx.coroutines.InactiveNodeList) = (kotlinx.coroutines.InactiveNodeList) (r3 I:??[OBJECT, ARRAY]) \l0x002c: INVOKE  (r3 I:kotlinx.coroutines.NodeList) = (r3 I:kotlinx.coroutines.InactiveNodeList) type: VIRTUAL call: kotlinx.coroutines.InactiveNodeList.getList():kotlinx.coroutines.NodeList A[MD:():kotlinx.coroutines.NodeList (m)]\l0x0030: INVOKE  (r0 I:boolean) = \l  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r4 I:java.lang.Object)\l  (r5 I:java.lang.Object A[D('state' java.lang.Object)])\l  (r3 I:java.lang.Object)\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0034|0x0034: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0037 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0036|RETURN\l|0x0036: RETURN  (r1 I:int) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0037|0x0037: INVOKE  (r4 I:kotlinx.coroutines.JobSupport) type: VIRTUAL call: kotlinx.coroutines.JobSupport.onStart():void A[MD:():void (m)] (LINE:401)\l}"];
Node_38 [shape=record,label="{38\:\ 0x003a|RETURN\l|0x003a: RETURN  (r2 I:int)  (LINE:402)\l}"];
Node_39 [shape=record,label="{39\:\ 0x003b|RETURN\l|0x003b: RETURN  (r3 I:int)  (LINE:404)\l}"];
MethodNode[shape=record,label="{private final int kotlinx.coroutines.JobSupport.startInternal((r4 'this' I:kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Object A[D('state' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x001e \-\> B:21:?, CROSS_EDGE: B:31:0x0022 \-\> B:21:?, CROSS_EDGE: B:36:0x0036 \-\> B:21:?, CROSS_EDGE: B:38:0x003a \-\> B:21:?, CROSS_EDGE: B:39:0x003b \-\> B:21:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x003b: r5 'state' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_21;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_21;
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_39;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_21;
Node_37 -> Node_38;
Node_38 -> Node_21;
Node_39 -> Node_21;
}

