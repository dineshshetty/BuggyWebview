digraph "CFG forkotlinx.coroutines.JobSupport.isCancelling(Lkotlinx\/coroutines\/Incomplete;)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000}"];
Node_13 [shape=record,label="{13\:\ 0x0002|if ((r2 instanceof kotlinx.coroutines.JobSupport.Finishing) == false) goto L7\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004}"];
Node_15 [shape=record,label="{15\:\ 0x000b|if (((kotlinx.coroutines.JobSupport.Finishing) r2).isCancelling() == false) goto L7\l}"];
Node_16 [shape=record,label="{16\:\ 0x000d|SYNTHETIC\lRETURN\l|return true\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|RETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.JobSupport.isCancelling((r1v0 'this' kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r2v0 '$this$isCancelling' kotlinx.coroutines.Incomplete A[D('$this$isCancelling' kotlinx.coroutines.Incomplete), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000f \-\> B:18:0x0010, CROSS_EDGE: B:13:0x0002 \-\> B:17:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

