digraph "CFG forkotlinx.coroutines.JobSupport.promoteEmptyToNodeList(Lkotlinx\/coroutines\/Empty;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlinx.coroutines.NodeList r0 = new kotlinx.coroutines.NodeList()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0009|if (r4.isActive() == false) goto L7\l}"];
Node_12 [shape=record,label="{12\:\ 0x000b|kotlinx.coroutines.Incomplete r1 = r0\l}"];
Node_14 [shape=record,label="{14\:\ 0x0016|PHI: r1 \l  PHI: (r1v3 'update' kotlinx.coroutines.Incomplete) = (r1v2 'update' kotlinx.coroutines.Incomplete), (r1v5 'update' kotlinx.coroutines.NodeList) binds: [B:13:0x000f, B:12:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|androidx.concurrent.futures.C0125xc40028dd.m112m(kotlinx.coroutines.JobSupport._state$FU, r3, r4, r1)\l}"];
Node_15 [shape=record,label="{15\:\ 0x001b|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x000f|kotlinx.coroutines.Incomplete r1 = new kotlinx.coroutines.InactiveNodeList(r0)\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.JobSupport.promoteEmptyToNodeList((r3v0 'this' kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r4v0 'state' kotlinx.coroutines.Empty A[D('state' kotlinx.coroutines.Empty), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000f \-\> B:14:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

