digraph "CFG forkotlinx.coroutines.JobSupport.initParentJob(Lkotlinx\/coroutines\/Job;)V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000}"];
Node_23 [shape=record,label="{23\:\ 0x0004|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L11\l}"];
Node_24 [shape=record,label="{24\:\ 0x0006}"];
Node_25 [shape=record,label="{25\:\ 0x000b|if (getParentHandle$kotlinx_coroutines_core() != null) goto L10\l}"];
Node_26 [shape=record,label="{26\:\ 0x000d|r1 = true\l}"];
Node_28 [shape=record,label="{28\:\ 0x0010|PHI: r1 \l  PHI: (r1v5 boolean) = (r1v4 boolean), (r1v6 boolean) binds: [B:27:0x000f, B:26:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L7\l}"];
Node_30 [shape=record,label="{30\:\ 0x0013}"];
Node_31 [shape=record,label="{31\:\ 0x0018|throw new java.lang.AssertionError()\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|r1 = false\l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|if (r3 != null) goto L14\l}"];
Node_33 [shape=record,label="{33\:\ 0x001b|setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.NonDisposableHandle.INSTANCE)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0022|RETURN\l|return\l}"];
Node_35 [shape=record,label="{35\:\ 0x0023|r3.start()\lkotlinx.coroutines.ChildHandle r0 = r3.attachChild(r2)\lsetParentHandle$kotlinx_coroutines_core(r0)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0035|if (isCompleted() == false) goto L18\l}"];
Node_37 [shape=record,label="{37\:\ 0x0037|r0.dispose()\lsetParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.NonDisposableHandle.INSTANCE)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0041|RETURN\lORIG_RETURN\l|return\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.JobSupport.initParentJob((r2v0 'this' kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r3v0 'parent' kotlinx.coroutines.Job A[D('parent' kotlinx.coroutines.Job), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0022 \-\> B:21:?, CROSS_EDGE: B:38:0x0041 \-\> B:21:?, CROSS_EDGE: B:36:0x0035 \-\> B:38:0x0041, CROSS_EDGE: B:27:0x000f \-\> B:28:0x0010, CROSS_EDGE: B:23:0x0004 \-\> B:32:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_32[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_27 -> Node_28;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_34 -> Node_21;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_39;
Node_37 -> Node_38;
Node_38 -> Node_21;
Node_39 -> Node_21;
}

