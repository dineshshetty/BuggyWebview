digraph "CFG forkotlinx.coroutines.JobSupport.notifyHandlers(Lkotlinx\/coroutines\/NodeList;Ljava\/lang\/Throwable;)V" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:365)\l0x0002: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY] A[D('list' kotlinx.coroutines.NodeList)])  (LINE:366)\l0x0003: CHECK_CAST (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) = (kotlinx.coroutines.internal.LockFreeLinkedListHead) (r2 I:??[OBJECT, ARRAY]) \l0x0005: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: INVOKE  (r4 I:java.lang.Object) = \l  (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListHead A[D('this_$iv' kotlinx.coroutines.internal.LockFreeLinkedListHead)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListHead.getNext():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:1533)\l0x000a: CHECK_CAST (r4 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x000c|LOOP_START\lLOOP:0: B:35:0x000c\-\>B:50:0x0062\l|0x000c: INVOKE  (r5 I:boolean) = \l  (r4 I:java.lang.Object A[D('cur$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l  (r2 I:java.lang.Object A[D('this_$iv' kotlinx.coroutines.internal.LockFreeLinkedListHead)])\l type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)] (LINE:1534)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0010|0x0010: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0067 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0012|0x0012: CONST  (r5 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:1535)\l0x0013: CONST_STR  (r6 I:java.lang.String) =  \"T\" \l0x0015: INVOKE  (r5 I:int), (r6 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.reifiedOperationMarker(int, java.lang.String):void A[MD:(int, java.lang.String):void (m)]\l0x0018: INSTANCE_OF  (r5 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('cur$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) kotlinx.coroutines.internal.LockFreeLinkedListNode \l}"];
Node_38 [shape=record,label="{38\:\ 0x001a|0x001a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0062 \l}"];
Node_39 [shape=record,label="{39\:\ 0x001c|0x001c: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('cur$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) \l0x001d: CHECK_CAST (r5 I:kotlinx.coroutines.JobNode) = (kotlinx.coroutines.JobNode) (r5 I:??[OBJECT, ARRAY]) \l0x001f: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0021|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_40 [shape=record,label="{40\:\ 0x0021|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:40:0x0021), top: B:56:0x0021 \}\lCatch: all \-\> 0x0025\l|0x0021: INVOKE  \l  (r5 I:kotlinx.coroutines.JobNode A[D('node' kotlinx.coroutines.JobNode)])\l  (r15 I:java.lang.Throwable A[D('cause' java.lang.Throwable)])\l type: VIRTUAL call: kotlinx.coroutines.JobNode.invoke(java.lang.Throwable):void A[Catch: all \-\> 0x0025, MD:(java.lang.Throwable):void (m), TRY_ENTER, TRY_LEAVE] (LINE:368)\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_62 [shape=record,label="{62\:\ 0x0062|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0062|LOOP_END\lLOOP:0: B:35:0x000c\-\>B:50:0x0062\l|0x0062: INVOKE  (r4 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('cur$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) = \l  (r4 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('cur$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.getNextNode():kotlinx.coroutines.internal.LockFreeLinkedListNode A[MD:():kotlinx.coroutines.internal.LockFreeLinkedListNode (m)] (LINE:1537)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0025|ExcHandler: all \-\> 0x0025\l|0x0025: MOVE_EXCEPTION  (r7 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0025] (LINE:369)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0026|0x0026: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('exception' java.lang.Object)])  (LINE:370)\l0x0027: CHECK_CAST (r8 I:java.lang.Throwable) = (java.lang.Throwable) (r8 I:??[OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0029|0x0029: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x002d \l}"];
Node_45 [shape=record,label="{45\:\ 0x002b|0x002b: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x003a|0x003a: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x0062 \l}"];
Node_48 [shape=record,label="{48\:\ 0x003c|0x003c: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY]) \l0x003d: CHECK_CAST (r8 I:kotlinx.coroutines.JobSupport) = (kotlinx.coroutines.JobSupport) (r8 I:??[OBJECT, ARRAY]) \l0x003f: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0040: NEW_INSTANCE  (r10 I:kotlinx.coroutines.CompletionHandlerException) =  kotlinx.coroutines.CompletionHandlerException  (LINE:371)\l0x0042: NEW_INSTANCE  (r11 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0044: INVOKE  (r11 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0047: CONST_STR  (r12 I:java.lang.String) =  \"Exception in completion handler \" \l0x0049: INVOKE  (r11 I:java.lang.StringBuilder), (r12 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004c: INVOKE  (r11 I:java.lang.StringBuilder), (r5 I:java.lang.Object A[D('node' kotlinx.coroutines.JobNode)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x004f: CONST_STR  (r12 I:java.lang.String) =  \" for \" \l0x0051: INVOKE  (r11 I:java.lang.StringBuilder), (r12 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0054: INVOKE  \l  (r11 I:java.lang.StringBuilder)\l  (r8 I:java.lang.Object A[D('$this$notifyHandlers_u24lambda_u2d14_u24lambda_u2d13' kotlinx.coroutines.JobSupport)])\l type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0057: INVOKE  (r11 I:java.lang.String) = (r11 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x005b: INVOKE  \l  (r10 I:kotlinx.coroutines.CompletionHandlerException)\l  (r11 I:java.lang.String)\l  (r7 I:java.lang.Throwable A[D('ex' java.lang.Throwable)])\l type: DIRECT call: kotlinx.coroutines.CompletionHandlerException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (m)]\l0x005e: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('exception' java.lang.Object)]) = (r10 I:??[OBJECT, ARRAY]) \l}"];
Node_60 [shape=record,label="{60\:\ 0x0062|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0062|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x002d|0x002d: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x002e: CHECK_CAST (r9 I:java.lang.Throwable) = (java.lang.Throwable) (r9 I:??[OBJECT, ARRAY]) \l0x0030: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1479)\l0x0031: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$notifyHandlers_u24lambda_u2d14_u24lambda_u2d12' java.lang.Throwable)])  (LINE:370)\l0x0032: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0033: INVOKE  \l  (r11 I:java.lang.Throwable A[D('$this$addSuppressedThrowable$iv' java.lang.Throwable)])\l  (r7 I:java.lang.Throwable A[D('ex' java.lang.Throwable)])\l type: STATIC call: kotlin.ExceptionsKt.addSuppressed(java.lang.Throwable, java.lang.Throwable):void A[MD:(java.lang.Throwable, java.lang.Throwable):void (m)] (LINE:1536)\l0x0037: MOVE  (r9 I:??[OBJECT, ARRAY] A[D('$this$notifyHandlers_u24lambda_u2d14_u24lambda_u2d12' java.lang.Throwable)]) = (r8 I:??[OBJECT, ARRAY]) \l0x0038: CHECK_CAST (r9 I:java.lang.Throwable) = (java.lang.Throwable) (r9 I:??[OBJECT, ARRAY]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x0062|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x0067|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0067|0x0068: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('this_$iv' kotlinx.coroutines.internal.LockFreeLinkedListHead)]) = (r1 I:??[OBJECT, ARRAY] A[D('exception' java.lang.Object)])  (LINE:375)\l0x0069: CHECK_CAST (r2 I:java.lang.Throwable) = (java.lang.Throwable) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x006b|0x006b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x006e \l}"];
Node_54 [shape=record,label="{54\:\ 0x006e|0x006e: CHECK_CAST (r2 I:java.lang.Throwable) = (java.lang.Throwable) (r2 I:??[OBJECT, ARRAY]) \l0x0070: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1479)\l0x0071: INVOKE  (r13 I:kotlinx.coroutines.JobSupport), (r2 I:java.lang.Throwable A[D('it' java.lang.Throwable)]) type: VIRTUAL call: kotlinx.coroutines.JobSupport.handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (m)] (LINE:375)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0074|RETURN\lORIG_RETURN\l|0x0074: RETURN    (LINE:376)\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lRETURN\l|0x0074: RETURN   A[SYNTHETIC] (LINE:376)\l}"];
MethodNode[shape=record,label="{private final \/* synthetic *\/ void kotlinx.coroutines.JobSupport.notifyHandlers((r13 'this' I:kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r14 I:kotlinx.coroutines.NodeList A[D('list' kotlinx.coroutines.NodeList), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:50:0x0062 \-\> B:35:0x000c, CROSS_EDGE: B:48:0x003c \-\> B:50:0x0062, CROSS_EDGE: B:47:0x003a \-\> B:50:0x0062, CROSS_EDGE: B:46:0x002d \-\> B:47:0x003a, CROSS_EDGE: B:56:0x0021 \-\> B:42:0x0025, CROSS_EDGE: B:38:0x001a \-\> B:50:0x0062, CROSS_EDGE: B:52:0x006b \-\> B:55:0x0074\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0032\-0x0036: r11 '$this$addSuppressedThrowable$iv' Ljava\/lang\/Throwable;\l  0x0033\-0x0036: r12 '$i$f$addSuppressedThrowable' I\l  0x0030\-0x0037: r9 '$this$notifyHandlers_u24lambda_u2d14_u24lambda_u2d12' Ljava\/lang\/Throwable;\l  0x0031\-0x0037: r10 '$i$a$\-apply\-JobSupport$notifyHandlers$1$1' I\l  0x003f\-0x0060: r8 '$this$notifyHandlers_u24lambda_u2d14_u24lambda_u2d13' Lkotlinx\/coroutines\/JobSupport;\l  0x0040\-0x0060: r9 '$i$a$\-run\-JobSupport$notifyHandlers$1$2' I\l  0x0026\-0x0061: r7 'ex' Ljava\/lang\/Throwable;\l  0x001f\-0x0062: r5 'node' Lkotlinx\/coroutines\/JobNode;\l  0x0020\-0x0062: r6 '$i$a$\-forEach\-JobSupport$notifyHandlers$1' I\l  0x0005\-0x0068: r2 'this_$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListHead;\l  0x0006\-0x0068: r3 '$i$f$forEach' I\l  0x000c\-0x0068: r4 'cur$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x0070\-0x0074: r2 'it' Ljava\/lang\/Throwable;\l  0x0071\-0x0074: r3 '$i$a$\-let\-JobSupport$notifyHandlers$2' I\l  0x0001\-0x0074: r0 '$i$f$notifyHandlers' I\l  0x0002\-0x0074: r1 'exception' Ljava\/lang\/Object;\l  \-1 \-0x0074: r14 'list' Lkotlinx\/coroutines\/NodeList;\l  \-1 \-0x0074: r15 'cause' Ljava\/lang\/Throwable;\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:40:0x0021), top: B:56:0x0021 \}\lSIGNATURE: \<T:Lkotlinx\/coroutines\/JobNode;\>(Lkotlinx\/coroutines\/NodeList;Ljava\/lang\/Throwable;)V\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_58;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_59;
Node_39 -> Node_56;
Node_56 -> Node_40;
Node_56 -> Node_42;
Node_40 -> Node_57;
Node_40 -> Node_62;
Node_57 -> Node_42;
Node_62 -> Node_50;
Node_50 -> Node_35;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_61;
Node_48 -> Node_60;
Node_60 -> Node_50;
Node_61 -> Node_50;
Node_46 -> Node_47;
Node_59 -> Node_50;
Node_58 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_54;
Node_52 -> Node_63[style=dashed];
Node_54 -> Node_55;
Node_55 -> Node_33;
Node_63 -> Node_33;
}

