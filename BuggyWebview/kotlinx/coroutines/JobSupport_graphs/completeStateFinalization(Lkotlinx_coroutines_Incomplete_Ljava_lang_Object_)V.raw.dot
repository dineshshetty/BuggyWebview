digraph "CFG forkotlinx.coroutines.JobSupport.completeStateFinalization(Lkotlinx\/coroutines\/Incomplete;Ljava\/lang\/Object;)V" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.ChildHandle) = (r5 I:kotlinx.coroutines.JobSupport) type: VIRTUAL call: kotlinx.coroutines.JobSupport.getParentHandle$kotlinx_coroutines_core():kotlinx.coroutines.ChildHandle A[MD:():kotlinx.coroutines.ChildHandle (m)] (LINE:307)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0007 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0007|0x0007: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: INVOKE  (r0 I:kotlinx.coroutines.ChildHandle A[D('it' kotlinx.coroutines.ChildHandle)]) type: INTERFACE call: kotlinx.coroutines.ChildHandle.dispose():void A[MD:():void (m)] (LINE:308)\l0x000b: SGET  (r2 I:kotlinx.coroutines.NonDisposableHandle) =  kotlinx.coroutines.NonDisposableHandle.INSTANCE kotlinx.coroutines.NonDisposableHandle  (LINE:309)\l0x000d: CHECK_CAST (r2 I:kotlinx.coroutines.ChildHandle) = (kotlinx.coroutines.ChildHandle) (r2 I:??[OBJECT, ARRAY]) \l0x000f: INVOKE  (r5 I:kotlinx.coroutines.JobSupport), (r2 I:kotlinx.coroutines.ChildHandle) type: VIRTUAL call: kotlinx.coroutines.JobSupport.setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle):void A[MD:(kotlinx.coroutines.ChildHandle):void (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0014|0x0014: INSTANCE_OF  (r0 I:boolean) = (r7 I:??[OBJECT, ARRAY] A[D('update' java.lang.Object)]) kotlinx.coroutines.CompletedExceptionally  (LINE:311)\l0x0016: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0017|0x0017: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x001d \l}"];
Node_37 [shape=record,label="{37\:\ 0x0019|0x0019: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('update' java.lang.Object)]) \l0x001a: CHECK_CAST (r0 I:kotlinx.coroutines.CompletedExceptionally) = (kotlinx.coroutines.CompletedExceptionally) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x001e|0x001e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0021 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0021|0x0021: IGET  (r1 I:java.lang.Throwable) = (r0 I:kotlinx.coroutines.CompletedExceptionally) kotlinx.coroutines.CompletedExceptionally.cause java.lang.Throwable \l}"];
Node_42 [shape=record,label="{42\:\ 0x0023|0x0023: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0024: INSTANCE_OF  (r1 I:boolean) = (r6 I:??[OBJECT, ARRAY] A[D('state' kotlinx.coroutines.Incomplete)]) kotlinx.coroutines.JobNode  (LINE:316)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0026|0x0026: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0055 \l}"];
Node_48 [shape=record,label="{48\:\ 0x0055|0x0055: INVOKE  (r1 I:kotlinx.coroutines.NodeList) = (r6 I:kotlinx.coroutines.Incomplete A[D('state' kotlinx.coroutines.Incomplete)]) type: INTERFACE call: kotlinx.coroutines.Incomplete.getList():kotlinx.coroutines.NodeList A[MD:():kotlinx.coroutines.NodeList (m)] (LINE:323)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0059|0x0059: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x005c \l}"];
Node_51 [shape=record,label="{51\:\ 0x005c|0x005c: INVOKE  \l  (r5 I:kotlinx.coroutines.JobSupport)\l  (r1 I:kotlinx.coroutines.NodeList)\l  (r0 I:java.lang.Throwable A[D('cause' java.lang.Throwable)])\l type: DIRECT call: kotlinx.coroutines.JobSupport.notifyCompletion(kotlinx.coroutines.NodeList, java.lang.Throwable):void A[MD:(kotlinx.coroutines.NodeList, java.lang.Throwable):void (m)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x005f|RETURN\lORIG_RETURN\l|0x005f: RETURN    (LINE:325)\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|0x005f: RETURN   A[SYNTHETIC] (LINE:325)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0029|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_44 [shape=record,label="{44\:\ 0x0029|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0030, blocks: (B:44:0x0029), top: B:53:0x0029 \}\lCatch: all \-\> 0x0030\l|0x0029: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('state' kotlinx.coroutines.Incomplete)]) A[TRY_ENTER] (LINE:318)\l0x002a: CHECK_CAST (r1 I:kotlinx.coroutines.JobNode) = (kotlinx.coroutines.JobNode) (r1 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0030]\l0x002c: INVOKE  (r1 I:kotlinx.coroutines.JobNode), (r0 I:java.lang.Throwable A[D('cause' java.lang.Throwable)]) type: VIRTUAL call: kotlinx.coroutines.JobNode.invoke(java.lang.Throwable):void A[Catch: all \-\> 0x0030, MD:(java.lang.Throwable):void (m), TRY_LEAVE]\l}"];
Node_54 [shape=record,label="{54\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lRETURN\l|0x005f: RETURN   A[SYNTHETIC] (LINE:325)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0030|ExcHandler: all \-\> 0x0030\l|0x0030: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0030] (LINE:319)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0031|0x0031: NEW_INSTANCE  (r2 I:kotlinx.coroutines.CompletionHandlerException) =  kotlinx.coroutines.CompletionHandlerException  (LINE:320)\l0x0033: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0035: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0038: CONST_STR  (r4 I:java.lang.String) =  \"Exception in completion handler \" \l0x003a: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003d: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:java.lang.Object A[D('state' kotlinx.coroutines.Incomplete)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0040: CONST_STR  (r4 I:java.lang.String) =  \" for \" \l0x0042: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0045: INVOKE  (r3 I:java.lang.StringBuilder), (r5 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0048: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004c: INVOKE  \l  (r2 I:kotlinx.coroutines.CompletionHandlerException)\l  (r3 I:java.lang.String)\l  (r1 I:java.lang.Throwable A[D('ex' java.lang.Throwable)])\l type: DIRECT call: kotlinx.coroutines.CompletionHandlerException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (m)]\l0x004f: CHECK_CAST (r2 I:java.lang.Throwable) = (java.lang.Throwable) (r2 I:??[OBJECT, ARRAY]) \l0x0051: INVOKE  (r5 I:kotlinx.coroutines.JobSupport), (r2 I:java.lang.Throwable) type: VIRTUAL call: kotlinx.coroutines.JobSupport.handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (m)]\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\l|0x005f: RETURN   A[SYNTHETIC] (LINE:325)\l}"];
Node_38 [shape=record,label="{38\:\ 0x001d|0x001d: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.JobSupport.completeStateFinalization((r5 'this' I:kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r6 I:kotlinx.coroutines.Incomplete A[D('state' kotlinx.coroutines.Incomplete), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.Object A[D('update' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:49:0x0059 \-\> B:52:0x005f, CROSS_EDGE: B:44:0x0029 \-\> B:52:0x005f, CROSS_EDGE: B:47:0x0031 \-\> B:52:0x005f, CROSS_EDGE: B:53:0x0029 \-\> B:46:0x0030, CROSS_EDGE: B:39:0x001e \-\> B:42:0x0023, CROSS_EDGE: B:38:0x001d \-\> B:39:0x001e, CROSS_EDGE: B:32:0x0004 \-\> B:35:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x0013: r0 'it' Lkotlinx\/coroutines\/ChildHandle;\l  0x0008\-0x0013: r1 '$i$a$\-let\-JobSupport$completeStateFinalization$1' I\l  0x0031\-0x0054: r1 'ex' Ljava\/lang\/Throwable;\l  0x0024\-0x005f: r0 'cause' Ljava\/lang\/Throwable;\l  \-1 \-0x005f: r6 'state' Lkotlinx\/coroutines\/Incomplete;\l  \-1 \-0x005f: r7 'update' Ljava\/lang\/Object;\lTryCatch #0 \{all \-\> 0x0030, blocks: (B:44:0x0029), top: B:53:0x0029 \}\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_34;
Node_32 -> Node_35[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_39;
Node_39 -> Node_41;
Node_39 -> Node_42[style=dashed];
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_48;
Node_43 -> Node_53[style=dashed];
Node_48 -> Node_49;
Node_49 -> Node_51;
Node_49 -> Node_57[style=dashed];
Node_51 -> Node_52;
Node_52 -> Node_30;
Node_57 -> Node_30;
Node_53 -> Node_44;
Node_53 -> Node_46;
Node_44 -> Node_54;
Node_44 -> Node_56;
Node_54 -> Node_46;
Node_56 -> Node_30;
Node_46 -> Node_47;
Node_47 -> Node_55;
Node_55 -> Node_30;
Node_38 -> Node_39;
}

