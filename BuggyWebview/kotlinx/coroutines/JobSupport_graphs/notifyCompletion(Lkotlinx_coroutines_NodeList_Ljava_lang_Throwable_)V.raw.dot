digraph "CFG forkotlinx.coroutines.JobSupport.notifyCompletion(Lkotlinx\/coroutines\/NodeList;Ljava\/lang\/Throwable;)V" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|0x0000: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY])  (LINE:362)\l0x0001: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0002: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1513)\l0x0003: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY] A[D('$this$notifyCompletion' kotlinx.coroutines.NodeList)])  (LINE:1514)\l0x0005: CHECK_CAST (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) = (kotlinx.coroutines.internal.LockFreeLinkedListHead) (r3 I:??[OBJECT, ARRAY]) \l0x0007: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: INVOKE  (r5 I:java.lang.Object) = \l  (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListHead A[D('this_$iv$iv' kotlinx.coroutines.internal.LockFreeLinkedListHead)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListHead.getNext():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:1515)\l0x000c: CHECK_CAST (r5 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r5 I:??[OBJECT, ARRAY]) \l0x000e: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY]) \l0x000f: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('exception$iv' java.lang.Object)]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0010|LOOP_START\lLOOP:0: B:37:0x0010\-\>B:53:0x0061\l|0x0010: INVOKE  (r0 I:boolean) = \l  (r6 I:java.lang.Object A[D('cur$iv$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l  (r3 I:java.lang.Object A[D('this_$iv$iv' kotlinx.coroutines.internal.LockFreeLinkedListHead)])\l type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)] (LINE:1516)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x0066 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0016|0x0016: INSTANCE_OF  (r0 I:boolean) = (r6 I:??[OBJECT, ARRAY] A[D('cur$iv$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) kotlinx.coroutines.JobNode  (LINE:1517)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0018|0x0018: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x005f \l}"];
Node_41 [shape=record,label="{41\:\ 0x001a|0x001a: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('cur$iv$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) \l0x001b: CHECK_CAST (r7 I:kotlinx.coroutines.JobNode) = (kotlinx.coroutines.JobNode) (r7 I:??[OBJECT, ARRAY]) \l0x001d: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001f: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Throwable)])  (LINE:1519)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0021|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_42 [shape=record,label="{42\:\ 0x0021|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:42:0x0021), top: B:60:0x0021 \}\lCatch: all \-\> 0x0025\l|0x0021: INVOKE  (r7 I:kotlinx.coroutines.JobNode A[D('node$iv' kotlinx.coroutines.JobNode)]), (r9 I:java.lang.Throwable) type: VIRTUAL call: kotlinx.coroutines.JobNode.invoke(java.lang.Throwable):void A[Catch: all \-\> 0x0025, MD:(java.lang.Throwable):void (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_61 [shape=record,label="{61\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_66 [shape=record,label="{66\:\ 0x0061|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0061|LOOP_END\lLOOP:0: B:37:0x0010\-\>B:53:0x0061\l|0x0061: INVOKE  (r6 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('cur$iv$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) = \l  (r6 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('cur$iv$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.getNextNode():kotlinx.coroutines.internal.LockFreeLinkedListNode A[MD:():kotlinx.coroutines.internal.LockFreeLinkedListNode (m)] (LINE:1528)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0025|ExcHandler: all \-\> 0x0025\l|0x0025: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0025] (LINE:1520)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0026|0x0026: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0027: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l0x0028: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('exception$iv' java.lang.Object)])  (LINE:1521)\l0x0029: CHECK_CAST (r10 I:java.lang.Throwable) = (java.lang.Throwable) (r10 I:??[OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x002b|0x002b: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x002f \l}"];
Node_47 [shape=record,label="{47\:\ 0x002d|0x002d: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0037|0x0037: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x0061 \l}"];
Node_50 [shape=record,label="{50\:\ 0x0039|0x0039: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this_$iv' kotlinx.coroutines.JobSupport)]) \l0x003a: CHECK_CAST (r10 I:kotlinx.coroutines.JobSupport) = (kotlinx.coroutines.JobSupport) (r10 I:??[OBJECT, ARRAY]) \l0x003c: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x003d: NEW_INSTANCE  (r12 I:kotlinx.coroutines.CompletionHandlerException) =  kotlinx.coroutines.CompletionHandlerException  (LINE:1524)\l0x003f: NEW_INSTANCE  (r13 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0041: INVOKE  (r13 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0044: CONST_STR  (r14 I:java.lang.String) =  \"Exception in completion handler \" \l0x0046: INVOKE  (r13 I:java.lang.StringBuilder), (r14 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0049: INVOKE  (r13 I:java.lang.StringBuilder), (r7 I:java.lang.Object A[D('node$iv' kotlinx.coroutines.JobNode)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x004c: CONST_STR  (r14 I:java.lang.String) =  \" for \" \l0x004e: INVOKE  (r13 I:java.lang.StringBuilder), (r14 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0051: INVOKE  \l  (r13 I:java.lang.StringBuilder)\l  (r10 I:java.lang.Object A[D('$this$notifyHandlers_u24lambda_u2d14_u24lambda_u2d13$iv' kotlinx.coroutines.JobSupport)])\l type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0054: INVOKE  (r13 I:java.lang.String) = (r13 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0058: INVOKE  \l  (r12 I:kotlinx.coroutines.CompletionHandlerException)\l  (r13 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('ex$iv' java.lang.Throwable)])\l type: DIRECT call: kotlinx.coroutines.CompletionHandlerException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (m)]\l0x005b: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('exception$iv' java.lang.Object)]) = (r12 I:??[OBJECT, ARRAY]) \l}"];
Node_64 [shape=record,label="{64\:\ 0x0061|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x0061|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x002f|0x002f: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l0x0030: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1522)\l0x0031: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('$this$notifyHandlers_u24lambda_u2d14_u24lambda_u2d12$iv' java.lang.Throwable)])  (LINE:1521)\l0x0032: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0033: INVOKE  \l  (r13 I:java.lang.Throwable A[D('$this$addSuppressedThrowable$iv$iv' java.lang.Throwable)])\l  (r0 I:java.lang.Throwable A[D('ex$iv' java.lang.Throwable)])\l type: STATIC call: kotlin.ExceptionsKt.addSuppressed(java.lang.Throwable, java.lang.Throwable):void A[MD:(java.lang.Throwable, java.lang.Throwable):void (m)] (LINE:1523)\l}"];
Node_52 [shape=record,label="{52\:\ 0x005f|0x005f: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Throwable)])  (LINE:1517)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0061|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0066|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x0066|0x0066: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Throwable)])  (LINE:1530)\l0x0068: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('exception$iv' java.lang.Object)])  (LINE:1531)\l0x0069: CHECK_CAST (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x006b|0x006b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x006e \l}"];
Node_57 [shape=record,label="{57\:\ 0x006e|0x006e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1522)\l0x006f: INVOKE  \l  (r1 I:kotlinx.coroutines.JobSupport A[D('this_$iv' kotlinx.coroutines.JobSupport)])\l  (r0 I:java.lang.Throwable A[D('it$iv' java.lang.Throwable)])\l type: VIRTUAL call: kotlinx.coroutines.JobSupport.handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (m)] (LINE:1531)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0073|RETURN\lORIG_RETURN\l|0x0073: RETURN    (LINE:362)\l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_67 [shape=record,label="{67\:\ ?|SYNTHETIC\lRETURN\l|0x0073: RETURN   A[SYNTHETIC] (LINE:362)\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.JobSupport.notifyCompletion((r15 'this' I:kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r16 I:kotlinx.coroutines.NodeList A[D('$this$notifyCompletion' kotlinx.coroutines.NodeList), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:53:0x0061 \-\> B:37:0x0010, CROSS_EDGE: B:50:0x0039 \-\> B:53:0x0061, CROSS_EDGE: B:49:0x0037 \-\> B:53:0x0061, CROSS_EDGE: B:48:0x002f \-\> B:49:0x0037, CROSS_EDGE: B:60:0x0021 \-\> B:44:0x0025, CROSS_EDGE: B:52:0x005f \-\> B:53:0x0061, CROSS_EDGE: B:55:0x006b \-\> B:59:0x0073\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0003\-0x0010: r0 'exception$iv' Ljava\/lang\/Object;\l  0x0032\-0x0036: r13 '$this$addSuppressedThrowable$iv$iv' Ljava\/lang\/Throwable;\l  0x0033\-0x0036: r14 '$i$f$addSuppressedThrowable' I\l  0x0030\-0x0037: r11 '$this$notifyHandlers_u24lambda_u2d14_u24lambda_u2d12$iv' Ljava\/lang\/Throwable;\l  0x0031\-0x0037: r12 '$i$a$\-apply\-JobSupport$notifyHandlers$1$1$iv' I\l  0x003c\-0x005d: r10 '$this$notifyHandlers_u24lambda_u2d14_u24lambda_u2d13$iv' Lkotlinx\/coroutines\/JobSupport;\l  0x003d\-0x005d: r11 '$i$a$\-run\-JobSupport$notifyHandlers$1$2$iv' I\l  0x0028\-0x005e: r0 'ex$iv' Ljava\/lang\/Throwable;\l  0x001d\-0x005f: r7 'node$iv' Lkotlinx\/coroutines\/JobNode;\l  0x001e\-0x005f: r8 '$i$a$\-forEach\-JobSupport$notifyHandlers$1$iv' I\l  0x0007\-0x0068: r3 'this_$iv$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListHead;\l  0x0008\-0x0068: r4 '$i$f$forEach' I\l  0x0010\-0x0068: r6 'cur$iv$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x006e\-0x0072: r0 'it$iv' Ljava\/lang\/Throwable;\l  0x006f\-0x0072: r3 '$i$a$\-let\-JobSupport$notifyHandlers$2$iv' I\l  0x0001\-0x0073: r1 'this_$iv' Lkotlinx\/coroutines\/JobSupport;\l  0x0002\-0x0073: r2 '$i$f$notifyHandlers' I\l  0x0010\-0x0073: r5 'exception$iv' Ljava\/lang\/Object;\l  \-1 \-0x0073: r16 '$this$notifyCompletion' Lkotlinx\/coroutines\/NodeList;\l  \-1 \-0x0073: r17 'cause' Ljava\/lang\/Throwable;\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:42:0x0021), top: B:60:0x0021 \}\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_62;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_52;
Node_41 -> Node_60;
Node_60 -> Node_42;
Node_60 -> Node_44;
Node_42 -> Node_61;
Node_42 -> Node_66;
Node_61 -> Node_44;
Node_66 -> Node_53;
Node_53 -> Node_37;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_65;
Node_50 -> Node_64;
Node_64 -> Node_53;
Node_65 -> Node_53;
Node_48 -> Node_49;
Node_52 -> Node_63;
Node_63 -> Node_53;
Node_62 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_57;
Node_55 -> Node_67[style=dashed];
Node_57 -> Node_59;
Node_59 -> Node_35;
Node_67 -> Node_35;
}

