digraph "CFG forkotlinx.coroutines.JobSupport.createCauseException(Ljava\/lang\/Object;)Ljava\/lang\/Throwable;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0001|0x0001: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cause' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0005  (LINE:719)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0003|0x0003: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0021 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Object)]) \l0x000a: CHECK_CAST (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:? \l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|0x000e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1583)\l0x000f: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0011: NEW_INSTANCE  (r3 I:kotlinx.coroutines.JobCancellationException) =  kotlinx.coroutines.JobCancellationException  (LINE:1584)\l0x0013: INVOKE  (r4 I:java.lang.String) = (r6 I:kotlinx.coroutines.JobSupport) type: STATIC call: kotlinx.coroutines.JobSupport.access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport):java.lang.String A[MD:(kotlinx.coroutines.JobSupport):java.lang.String (m)]\l0x0017: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0018: CHECK_CAST (r5 I:kotlinx.coroutines.Job) = (kotlinx.coroutines.Job) (r5 I:??[OBJECT, ARRAY]) \l0x001a: INVOKE  \l  (r3 I:kotlinx.coroutines.JobCancellationException)\l  (r4 I:java.lang.String)\l  (r1 I:java.lang.Throwable A[D('cause$iv' java.lang.Throwable)])\l  (r5 I:kotlinx.coroutines.Job)\l type: DIRECT call: kotlinx.coroutines.JobCancellationException.\<init\>(java.lang.String, java.lang.Throwable, kotlinx.coroutines.Job):void A[MD:(java.lang.String, java.lang.Throwable, kotlinx.coroutines.Job):void (m)]\l0x001d: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('message$iv' java.lang.String)]) = (r3 I:??[OBJECT, ARRAY]) \l0x001e: CHECK_CAST (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x002c: RETURN  (r0 I:java.lang.Throwable) A[SYNTHETIC] (LINE:721)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|0x002c: RETURN  (r0 I:java.lang.Throwable) A[SYNTHETIC] (LINE:721)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|0x0021: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cause' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x002d  (LINE:720)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0023|0x0023: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Object)]) \l0x0024: CHECK_CAST (r0 I:kotlinx.coroutines.ParentJob) = (kotlinx.coroutines.ParentJob) (r0 I:??[OBJECT, ARRAY]) \l0x0026: INVOKE  (r0 I:java.util.concurrent.CancellationException) = (r0 I:kotlinx.coroutines.ParentJob) type: INTERFACE call: kotlinx.coroutines.ParentJob.getChildJobCancellationCause():java.util.concurrent.CancellationException A[MD:():java.util.concurrent.CancellationException (m)]\l0x002a: CHECK_CAST (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x002c|RETURN\lORIG_RETURN\l|0x002c: RETURN  (r0 I:java.lang.Throwable)  (LINE:721)\l}"];
Node_28 [shape=record,label="{28\:\ 0x002d|0x002d: NEW_INSTANCE  (r0 I:java.lang.NullPointerException) =  java.lang.NullPointerException  (LINE:720)\l0x002f: CONST_STR  (r1 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlinx.coroutines.ParentJob\" \l0x0031: INVOKE  (r0 I:java.lang.NullPointerException), (r1 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0034|0x0034: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0005|0x0005: INSTANCE_OF  (r0 I:boolean) = (r7 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Object)]) java.lang.Throwable \l}"];
MethodNode[shape=record,label="{private final java.lang.Throwable kotlinx.coroutines.JobSupport.createCauseException((r6 'this' I:kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.Object A[D('cause' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x000c \-\> B:27:0x002c, CROSS_EDGE: B:26:0x0023 \-\> B:27:0x002c, CROSS_EDGE: B:29:0x0034 \-\> B:17:?, CROSS_EDGE: B:20:0x0005 \-\> B:21:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x001d: r0 'message$iv' Ljava\/lang\/String;\l  0x0010\-0x001d: r1 'cause$iv' Ljava\/lang\/Throwable;\l  0x0011\-0x001d: r2 '$i$f$defaultCancellationException$kotlinx_coroutines_core' I\l  \-1 \-0x0034: r7 'cause' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_30;
Node_24 -> Node_31;
Node_31 -> Node_17;
Node_30 -> Node_17;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_17;
Node_28 -> Node_29;
Node_29 -> Node_17;
Node_20 -> Node_21;
}

