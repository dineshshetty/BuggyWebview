digraph "CFG forkotlinx.coroutines.JobSupport.getCompletionCauseHandled()Z" {
subgraph cluster_Region_235161349 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|java.lang.Object java.lang.Object r0 = getState$kotlinx_coroutines_core()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0007|RETURN\l|return (r0 instanceof kotlinx.coroutines.CompletedExceptionally) && ((kotlinx.coroutines.CompletedExceptionally) r0).getHandled()\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0009}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0010|REMOVE\lADDED_TO_REGION\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0012|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0014|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{protected final boolean kotlinx.coroutines.JobSupport.getCompletionCauseHandled((r3v0 'this' kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0014 \-\> B:18:0x0015, CROSS_EDGE: B:13:0x0007 \-\> B:17:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_17;
Node_10 -> Node_12;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

