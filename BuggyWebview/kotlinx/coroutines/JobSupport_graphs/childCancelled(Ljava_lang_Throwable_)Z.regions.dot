digraph "CFG forkotlinx.coroutines.JobSupport.childCancelled(Ljava\/lang\/Throwable;)Z" {
subgraph cluster_Region_564629781 {
label = "R(1:(2:(1:3)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1827117228 {
label = "R(2:(1:3)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1605314868 {
label = "IF [B:16:0x0003] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0003|if ((r3 instanceof java.util.concurrent.CancellationException) == true) goto L3\l}"];
subgraph cluster_Region_1436727340 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0005|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1217438900 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x000a|RETURN\l|return cancelImpl$kotlinx_coroutines_core(r3) && getHandlesException$kotlinx_coroutines_core()\l}"];
}
}
}
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0006}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000c}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0010|REMOVE\lADDED_TO_REGION\l}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0013|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.JobSupport.childCancelled((r2v0 'this' kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r3v0 'cause' java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0014 \-\> B:14:?, CROSS_EDGE: B:21:0x0010 \-\> B:24:0x0014, CROSS_EDGE: B:19:0x000a \-\> B:23:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.JobSupport.childCancelled(java.lang.Throwable):boolean]\l}"];
MethodNode -> Node_13;Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_14;
Node_19 -> Node_20;
Node_19 -> Node_23;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_25;
Node_25 -> Node_14;
Node_23 -> Node_14;
}

