digraph "CFG forkotlinx.coroutines.JobSupport.registerSelectClause1Internal$kotlinx_coroutines_core(Lkotlinx\/coroutines\/selects\/SelectInstance;Lkotlin\/jvm\/functions\/Function2;)V" {
subgraph cluster_Region_1685836043 {
label = "R(2:(2:2|(2:(1:23)|(1:(1:(1:(2:(1:(2:17|18)(2:19|20))|(1:21)))))))|9) | DECL_VAR: java.lang.Object state\l";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1567040779 {
label = "LOOP:0: (2:2|(2:(1:23)|(1:(1:(1:(2:(1:(2:17|18)(2:19|20))|(1:21)))))))";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0036|LOOP_END\lLOOP:0: B:28:0x0002\-\>B:41:0x0036\l|if (startInternal(r2) != 0) goto L2\l}"];
subgraph cluster_Region_1782332863 {
label = "R(2:2|(2:(1:23)|(1:(1:(1:(2:(1:(2:17|18)(2:19|20))|(1:21)))))))";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0002|LOOP_START\lLOOP:0: B:28:0x0002\-\>B:41:0x0036\l|java.lang.Object r2 = getState$kotlinx_coroutines_core()\l}"];
subgraph cluster_Region_1706052935 {
label = "R(2:(1:23)|(1:(1:(1:(2:(1:(2:17|18)(2:19|20))|(1:21))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_353618943 {
label = "IF [B:29:0x000c] THEN: R(1:23) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x000c|if (r7.isSelected() == true) goto L22\l}"];
subgraph cluster_Region_159591595 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x000e|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1321063969 {
label = "R(1:(1:(1:(2:(1:(2:17|18)(2:19|20))|(1:21)))))";
node [shape=record,color=blue];
subgraph cluster_Region_696283332 {
label = "R(1:(1:(2:(1:(2:17|18)(2:19|20))|(1:21))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_281180836 {
label = "IF [B:32:0x0011] THEN: R(1:(2:(1:(2:17|18)(2:19|20))|(1:21))) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0011|if ((r2 instanceof kotlinx.coroutines.Incomplete) == false) goto L12\l}"];
subgraph cluster_Region_575085112 {
label = "R(1:(2:(1:(2:17|18)(2:19|20))|(1:21)))";
node [shape=record,color=blue];
subgraph cluster_Region_842108079 {
label = "R(2:(1:(2:17|18)(2:19|20))|(1:21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_312297494 {
label = "IF [B:34:0x0017] THEN: R(1:(2:17|18)(2:19|20)) ELSE: null";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0017|if (r7.trySelect() != false) goto L15\l}"];
subgraph cluster_Region_942742737 {
label = "R(1:(2:17|18)(2:19|20))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_136230767 {
label = "IF [B:36:0x001b] THEN: R(2:17|18) ELSE: R(2:19|20)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x001b|if ((r2 instanceof kotlinx.coroutines.CompletedExceptionally) != false) goto L17\l}"];
subgraph cluster_Region_63222294 {
label = "R(2:17|18)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x001d|r7.resumeSelectWithException(((kotlinx.coroutines.CompletedExceptionally) r2).cause)\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
subgraph cluster_Region_1735364632 {
label = "R(2:19|20)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0026|kotlinx.coroutines.intrinsics.Undispatched.startCoroutineUnintercepted(r8, kotlinx.coroutines.JobSupportKt.unboxState(r2), r7.getCompletion())\l}"];
Node_39 [shape=record,label="{39\:\ 0x0031|RETURN\lORIG_RETURN\l|return\l}"];
}
}
}
}
subgraph cluster_Region_582829877 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
}
}
}
}
}
Node_42 [shape=record,label="{42\:\ 0x0038|kotlinx.coroutines.CompletionHandlerBase kotlinx.coroutines.CompletionHandlerBase r4 = new kotlinx.coroutines.SelectAwaitOnCompletion(r7, r8)\lr7.disposeOnSelect(invokeOnCompletion(r4))\l}"];
}
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0000}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x000f}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0032}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0038|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0049}"];
Node_26 [shape=record,color=red,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0013|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0013}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0019}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x000e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.JobSupport.registerSelectClause1Internal$kotlinx_coroutines_core((r6v0 'this' kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r7v0 kotlinx.coroutines.selects.SelectInstance\<? super R\> A[D('select' kotlinx.coroutines.selects.SelectInstance), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlin.jvm.functions.Function2\<? super T, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\> A[D('block' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:39:0x0031 \-\> B:26:?, CROSS_EDGE: B:38:0x0026 \-\> B:39:0x0031, CROSS_EDGE: B:34:0x0017 \-\> B:39:0x0031, CROSS_EDGE: B:43:0x0049 \-\> B:26:?, BACK_EDGE: B:41:0x0036 \-\> B:28:0x0002\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/selects\/SelectInstance\<\-TR;\>;Lkotlin\/jvm\/functions\/Function2\<\-TT;\-Lkotlin\/coroutines\/Continuation\<\-TR;\>;+Ljava\/lang\/Object;\>;)V\l}"];
MethodNode -> Node_25;Node_41 -> Node_28;
Node_41 -> Node_46[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_31[style=dashed];
Node_29 -> Node_47;
Node_30 -> Node_26;
Node_32 -> Node_40[style=dashed];
Node_32 -> Node_45;
Node_34 -> Node_35;
Node_34 -> Node_48[style=dashed];
Node_36 -> Node_37;
Node_36 -> Node_38[style=dashed];
Node_37 -> Node_49;
Node_49 -> Node_26;
Node_38 -> Node_39;
Node_39 -> Node_26;
Node_48 -> Node_26;
Node_42 -> Node_43;
Node_25 -> Node_27;
Node_27 -> Node_28;
Node_31 -> Node_32;
Node_40 -> Node_41;
Node_46 -> Node_42;
Node_43 -> Node_26;
Node_45 -> Node_33;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_47 -> Node_30;
}

