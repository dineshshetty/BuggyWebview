digraph "CFG forkotlinx.coroutines.JobSupport.notifyHandlers(Lkotlinx\/coroutines\/NodeList;Ljava\/lang\/Throwable;)V" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|r1 = null\lkotlinx.coroutines.internal.LockFreeLinkedListHead r2 = r14\lkotlinx.coroutines.internal.LockFreeLinkedListNode r4 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) r2.getNext()\l}"];
Node_35 [shape=record,label="{35\:\ 0x000c|LOOP_START\lLOOP:0: B:35:0x000c\-\>B:50:0x0062\lPHI: r1 r4 \l  PHI: (r1v1 'exception' java.lang.Object) = (r1v0 'exception' java.lang.Object), (r1v2 'exception' java.lang.Object) binds: [B:34:0x0000, B:50:0x0062] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 'cur$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode) = (r4v1 'cur$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode), (r4v3 'cur$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode) binds: [B:34:0x0000, B:50:0x0062] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0010|if (kotlin.jvm.internal.Intrinsics.areEqual(r4, r2) != false) goto L22\l}"];
Node_37 [shape=record,label="{37\:\ 0x0012|kotlin.jvm.internal.Intrinsics.reifiedOperationMarker(3, \"T\")\l}"];
Node_38 [shape=record,label="{38\:\ 0x001a|if ((r4 instanceof kotlinx.coroutines.internal.LockFreeLinkedListNode) == false) goto L21\l}"];
Node_39 [shape=record,label="{39\:\ 0x001c|kotlinx.coroutines.JobNode r5 = (kotlinx.coroutines.JobNode) r4\l}"];
Node_56 [shape=record,label="{56\:\ 0x0021|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_40 [shape=record,label="{40\:\ 0x0021|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:40:0x0021), top: B:56:0x0021 \}\lCatch: all \-\> 0x0025\l|r5.invoke(r15)     \/\/ Catch: java.lang.Throwable \-\> L25\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_62 [shape=record,label="{62\:\ 0x0062|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0062|LOOP_END\lLOOP:0: B:35:0x000c\-\>B:50:0x0062\lPHI: r1 \l  PHI: (r1v2 'exception' java.lang.Object) = (r1v1 'exception' java.lang.Object), (r1v1 'exception' java.lang.Object), (r1v3 'exception' java.lang.Object), (r1v1 'exception' java.lang.Object) binds: [B:59:0x0062, B:61:0x0062, B:60:0x0062, B:62:0x0062] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.internal.LockFreeLinkedListNode r4 = r4.getNextNode()\l}"];
Node_42 [shape=record,label="{42\:\ 0x0025|ExcHandler: all \-\> 0x0025\l|java.lang.Throwable r7 = move\-exception\l}"];
Node_43 [shape=record,label="{43\:\ 0x0026|java.lang.Throwable r8 = (java.lang.Throwable) r1\l}"];
Node_44 [shape=record,label="{44\:\ 0x0029|if (r8 != null) goto L20\l}"];
Node_45 [shape=record,label="{45\:\ 0x002b|r8 = null\l}"];
Node_47 [shape=record,label="{47\:\ 0x003a|PHI: r8 \l  PHI: (r8v2 kotlinx.coroutines.CompletionHandlerException) = (r8v1 kotlinx.coroutines.CompletionHandlerException), (r8v5 kotlinx.coroutines.CompletionHandlerException) binds: [B:46:0x002d, B:45:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|if (r8 != null) goto L19\l}"];
Node_48 [shape=record,label="{48\:\ 0x003c|kotlinx.coroutines.JobSupport r8 = r13\ljava.lang.StringBuilder r11 = new java.lang.StringBuilder()\lr11.append(\"Exception in completion handler \")\lr11.append(r5)\lr11.append(\" for \")\lr11.append(r8)\lr1 = new kotlinx.coroutines.CompletionHandlerException(r11.toString(), r7)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0062|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0062|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x002d|java.lang.Throwable r9 = r8\lkotlin.Exceptions.addSuppressed(r9, r7)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0062|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x0067|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0067|java.lang.Throwable r2 = (java.lang.Throwable) r1\l}"];
Node_52 [shape=record,label="{52\:\ 0x006b|if (r2 != null) goto L25\l}"];
Node_54 [shape=record,label="{54\:\ 0x006e|java.lang.Throwable r2 = r2\lhandleOnCompletionException$kotlinx_coroutines_core(r2)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0074|RETURN\lORIG_RETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private final \/* synthetic *\/ void kotlinx.coroutines.JobSupport.notifyHandlers((r13v0 'this' kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r14v0 'list' kotlinx.coroutines.NodeList A[D('list' kotlinx.coroutines.NodeList), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'cause' java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:50:0x0062 \-\> B:35:0x000c, CROSS_EDGE: B:48:0x003c \-\> B:50:0x0062, CROSS_EDGE: B:47:0x003a \-\> B:50:0x0062, CROSS_EDGE: B:46:0x002d \-\> B:47:0x003a, CROSS_EDGE: B:56:0x0021 \-\> B:42:0x0025, CROSS_EDGE: B:38:0x001a \-\> B:50:0x0062, CROSS_EDGE: B:52:0x006b \-\> B:55:0x0074\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:40:0x0021), top: B:56:0x0021 \}\lTYPE_VARS: [T extends kotlinx.coroutines.JobNode]\lSIGNATURE: \<T:Lkotlinx\/coroutines\/JobNode;\>(Lkotlinx\/coroutines\/NodeList;Ljava\/lang\/Throwable;)V\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_58;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_59;
Node_39 -> Node_56;
Node_56 -> Node_40;
Node_56 -> Node_42;
Node_40 -> Node_57;
Node_40 -> Node_62;
Node_57 -> Node_42;
Node_62 -> Node_50;
Node_50 -> Node_35;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_61;
Node_48 -> Node_60;
Node_60 -> Node_50;
Node_61 -> Node_50;
Node_46 -> Node_47;
Node_59 -> Node_50;
Node_58 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_54;
Node_52 -> Node_63[style=dashed];
Node_54 -> Node_55;
Node_55 -> Node_33;
Node_63 -> Node_33;
}

