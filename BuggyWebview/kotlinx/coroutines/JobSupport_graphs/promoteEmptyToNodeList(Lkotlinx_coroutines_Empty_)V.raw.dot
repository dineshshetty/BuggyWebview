digraph "CFG forkotlinx.coroutines.JobSupport.promoteEmptyToNodeList(Lkotlinx\/coroutines\/Empty;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.NodeList) =  kotlinx.coroutines.NodeList  (LINE:528)\l0x0002: INVOKE  (r0 I:kotlinx.coroutines.NodeList) type: DIRECT call: kotlinx.coroutines.NodeList.\<init\>():void A[MD:():void (m)]\l0x0005: INVOKE  (r1 I:boolean) = (r4 I:kotlinx.coroutines.Empty A[D('state' kotlinx.coroutines.Empty)]) type: VIRTUAL call: kotlinx.coroutines.Empty.isActive():boolean A[MD:():boolean (m)] (LINE:529)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0009|0x0009: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x000f \l}"];
Node_12 [shape=record,label="{12\:\ 0x000b|0x000b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('list' kotlinx.coroutines.NodeList)]) \l0x000c: CHECK_CAST (r1 I:kotlinx.coroutines.Incomplete) = (kotlinx.coroutines.Incomplete) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0016|0x0016: SGET  (r2 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.JobSupport._state$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:530)\l0x0018: INVOKE  \l  (r2 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object A[D('state' kotlinx.coroutines.Empty)])\l  (r1 I:java.lang.Object A[D('update' kotlinx.coroutines.Incomplete)])\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001b|RETURN\l|0x001b: RETURN    (LINE:531)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x000f|0x000f: NEW_INSTANCE  (r1 I:kotlinx.coroutines.InactiveNodeList) =  kotlinx.coroutines.InactiveNodeList \l0x0011: INVOKE  (r1 I:kotlinx.coroutines.InactiveNodeList), (r0 I:kotlinx.coroutines.NodeList A[D('list' kotlinx.coroutines.NodeList)]) type: DIRECT call: kotlinx.coroutines.InactiveNodeList.\<init\>(kotlinx.coroutines.NodeList):void A[MD:(kotlinx.coroutines.NodeList):void (m)]\l0x0014: CHECK_CAST (r1 I:kotlinx.coroutines.Incomplete) = (kotlinx.coroutines.Incomplete) (r1 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.JobSupport.promoteEmptyToNodeList((r3 'this' I:kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlinx.coroutines.Empty A[D('state' kotlinx.coroutines.Empty), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000f \-\> B:14:0x0016\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x001b: r0 'list' Lkotlinx\/coroutines\/NodeList;\l  0x0016\-0x001b: r1 'update' Lkotlinx\/coroutines\/Incomplete;\l  \-1 \-0x001b: r4 'state' Lkotlinx\/coroutines\/Empty;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

