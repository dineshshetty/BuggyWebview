digraph "CFG forkotlinx.coroutines.JobSupport.awaitInternal$kotlinx_coroutines_core(Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|LOOP_START\lLOOP:0: B:24:0x0000\-\>B:39:0x0032\l|0x0001: INVOKE  (r0 I:java.lang.Object) = (r6 I:kotlinx.coroutines.JobSupport) type: VIRTUAL call: kotlinx.coroutines.JobSupport.getState$kotlinx_coroutines_core():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:1210)\l0x0005: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.Incomplete  (LINE:1211)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x002e \l}"];
Node_38 [shape=record,label="{38\:\ 0x002e|0x002e: INVOKE  (r1 I:int) = (r6 I:kotlinx.coroutines.JobSupport), (r0 I:java.lang.Object A[D('state' java.lang.Object)]) type: DIRECT call: kotlinx.coroutines.JobSupport.startInternal(java.lang.Object):int A[MD:(java.lang.Object):int (m)] (LINE:1219)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0032|LOOP_END\lLOOP:0: B:24:0x0000\-\>B:39:0x0032\l|0x0032: IF  (r1 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:24:0x0000 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0034|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0034|0x0034: INVOKE  (r0 I:java.lang.Object) = \l  (r6 I:kotlinx.coroutines.JobSupport)\l  (r7 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.JobSupport.awaitSuspend(kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlin.coroutines.Continuation\<java.lang.Object\>):java.lang.Object (m)] (LINE:1221)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0038|RETURN\l|0x0038: RETURN  (r0 I:java.lang.Object) \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x0009|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0009|0x0009: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.CompletedExceptionally  (LINE:1213)\l}"];
Node_27 [shape=record,label="{27\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0029 \l}"];
Node_28 [shape=record,label="{28\:\ 0x000d|0x000d: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)])  (LINE:1214)\l0x000e: CHECK_CAST (r1 I:kotlinx.coroutines.CompletedExceptionally) = (kotlinx.coroutines.CompletedExceptionally) (r1 I:??[OBJECT, ARRAY]) \l0x0010: IGET  (r1 I:java.lang.Throwable) = (r1 I:kotlinx.coroutines.CompletedExceptionally) kotlinx.coroutines.CompletedExceptionally.cause java.lang.Throwable \l0x0012: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: INVOKE  (r3 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getRECOVER_STACK_TRACES():boolean A[MD:():boolean (m)] (LINE:1595)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|0x0017: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0028 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|0x0019: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$completion' kotlin.coroutines.Continuation)])  (LINE:1596)\l0x001a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001b: INSTANCE_OF  (r5 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('it$iv' kotlin.coroutines.Continuation)]) kotlin.coroutines.jvm.internal.CoroutineStackFrame  (LINE:1597)\l}"];
Node_31 [shape=record,label="{31\:\ 0x001d|0x001d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0020 \l}"];
Node_32 [shape=record,label="{32\:\ 0x001f|0x001f: THROW  (r1 I:java.lang.Throwable A[D('exception$iv' java.lang.Throwable)]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0020|0x0020: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('it$iv' kotlin.coroutines.Continuation)])  (LINE:1598)\l0x0021: CHECK_CAST (r5 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame) = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) (r5 I:??[OBJECT, ARRAY]) \l0x0023: INVOKE  (r5 I:java.lang.Throwable) = \l  (r1 I:java.lang.Throwable A[D('exception$iv' java.lang.Throwable)])\l  (r5 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame)\l type: STATIC call: kotlinx.coroutines.internal.StackTraceRecoveryKt.access$recoverFromStackFrame(java.lang.Throwable, kotlin.coroutines.jvm.internal.CoroutineStackFrame):java.lang.Throwable A[MD:(java.lang.Throwable, kotlin.coroutines.jvm.internal.CoroutineStackFrame):java.lang.Throwable (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0027|0x0027: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0028|0x0028: THROW  (r1 I:java.lang.Throwable A[D('exception$iv' java.lang.Throwable)])  (LINE:1595)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0029|0x0029: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.lang.Object A[D('state' java.lang.Object)]) type: STATIC call: kotlinx.coroutines.JobSupportKt.unboxState(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):java.lang.Object (m)] (LINE:1216)\l}"];
Node_37 [shape=record,label="{37\:\ 0x002d|RETURN\l|0x002d: RETURN  (r1 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.JobSupport.awaitInternal$kotlinx_coroutines_core((r6 'this' I:kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r7 I:kotlin.coroutines.Continuation\<java.lang.Object\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0027 \-\> B:23:?, CROSS_EDGE: B:35:0x0028 \-\> B:23:?, CROSS_EDGE: B:37:0x002d \-\> B:23:?, BACK_EDGE: B:39:0x0032 \-\> B:24:0x0000, CROSS_EDGE: B:41:0x0038 \-\> B:23:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x0028: r3 'it$iv' Lkotlin\/coroutines\/Continuation;\l  0x001b\-0x0028: r4 '$i$a$\-suspendCoroutineUninterceptedOrReturn\-StackTraceRecoveryKt$recoverAndThrow$2$iv' I\l  0x0012\-0x0029: r1 'exception$iv' Ljava\/lang\/Throwable;\l  0x0013\-0x0029: r2 '$i$f$recoverAndThrow' I\l  0x0005\-0x0034: r0 'state' Ljava\/lang\/Object;\l  \-1 \-0x0038: r7 '$completion' Lkotlin\/coroutines\/Continuation;\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<Ljava\/lang\/Object;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_38;
Node_25 -> Node_43[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_24;
Node_39 -> Node_42[style=dashed];
Node_42 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_23;
Node_43 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_36;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_35;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_23;
Node_33 -> Node_34;
Node_34 -> Node_23;
Node_35 -> Node_23;
Node_36 -> Node_37;
Node_37 -> Node_23;
}

