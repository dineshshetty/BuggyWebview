digraph "CFG forkotlinx.coroutines.JobSupport.joinSuspend(Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|kotlinx.coroutines.CancellableContinuationImpl r3 = new kotlinx.coroutines.CancellableContinuationImpl(kotlin.coroutines.intrinsics.IntrinsicsKt.intercepted(r9), 1)\lr3.initCancellability()\lkotlinx.coroutines.CancellableContinuation r4 = r3\lkotlinx.coroutines.CompletionHandlerBase r6 = new kotlinx.coroutines.ResumeOnCompletion(r4)\lkotlinx.coroutines.CancellableContinuationKt.disposeOnCancellation(r4, invokeOnCompletion(r6))\ljava.lang.Object r1 = r3.getResult()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|if (r1 != kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()) goto L4\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|kotlin.coroutines.jvm.internal.DebugProbes.probeCoroutineSuspended(r9)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0036}"];
Node_16 [shape=record,label="{16\:\ 0x003b|if (r1 != kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()) goto L8\l}"];
Node_17 [shape=record,label="{17\:\ 0x003d|RETURN\l|return r1\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x003e}"];
Node_19 [shape=record,label="{19\:\ 0x0040|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.JobSupport.joinSuspend((r8v0 'this' kotlinx.coroutines.JobSupport A[IMMUTABLE_TYPE, THIS]), (r9v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0040 \-\> B:11:?, CROSS_EDGE: B:13:0x0031 \-\> B:15:0x0036\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

