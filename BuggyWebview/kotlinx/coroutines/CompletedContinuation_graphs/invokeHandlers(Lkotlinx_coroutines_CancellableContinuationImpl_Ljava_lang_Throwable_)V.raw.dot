digraph "CFG forkotlinx.coroutines.CompletedContinuation.invokeHandlers(Lkotlinx\/coroutines\/CancellableContinuationImpl;Ljava\/lang\/Throwable;)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.CancelHandler) = (r2 I:kotlinx.coroutines.CompletedContinuation) kotlinx.coroutines.CompletedContinuation.cancelHandler kotlinx.coroutines.CancelHandler  (LINE:589)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0005 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:594)\l0x0006: INVOKE  \l  (r3 I:kotlinx.coroutines.CancellableContinuationImpl A[D('cont' kotlinx.coroutines.CancellableContinuationImpl)])\l  (r0 I:kotlinx.coroutines.CancelHandler A[D('it' kotlinx.coroutines.CancelHandler)])\l  (r4 I:java.lang.Throwable A[D('cause' java.lang.Throwable)])\l type: VIRTUAL call: kotlinx.coroutines.CancellableContinuationImpl.callCancelHandler(kotlinx.coroutines.CancelHandler, java.lang.Throwable):void A[MD:(kotlinx.coroutines.CancelHandler, java.lang.Throwable):void (m)] (LINE:589)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: IGET  (r0 I:kotlin.jvm.functions.Function1\<java.lang.Throwable, kotlin.Unit\> A[D('it' kotlinx.coroutines.CancelHandler)]) = (r2 I:kotlinx.coroutines.CompletedContinuation) kotlinx.coroutines.CompletedContinuation.onCancellation kotlin.jvm.functions.Function1  (LINE:590)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x000e \l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|0x000e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:594)\l0x000f: INVOKE  \l  (r3 I:kotlinx.coroutines.CancellableContinuationImpl A[D('cont' kotlinx.coroutines.CancellableContinuationImpl)])\l  (r0 I:kotlin.jvm.functions.Function1 A[D('it' kotlin.jvm.functions.Function1)])\l  (r4 I:java.lang.Throwable A[D('cause' java.lang.Throwable)])\l type: VIRTUAL call: kotlinx.coroutines.CancellableContinuationImpl.callOnCancellation(kotlin.jvm.functions.Function1, java.lang.Throwable):void A[MD:(kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\>, java.lang.Throwable):void (m)] (LINE:590)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: RETURN    (LINE:591)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0012: RETURN   A[SYNTHETIC] (LINE:591)\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.CompletedContinuation.invokeHandlers((r2 'this' I:kotlinx.coroutines.CompletedContinuation A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlinx.coroutines.CancellableContinuationImpl\<?\> A[D('cont' kotlinx.coroutines.CancellableContinuationImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000b \-\> B:22:0x0012, CROSS_EDGE: B:15:0x0002 \-\> B:18:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0009: r0 'it' Lkotlinx\/coroutines\/CancelHandler;\l  0x0006\-0x0009: r1 '$i$a$\-let\-CompletedContinuation$invokeHandlers$1' I\l  0x000e\-0x0012: r0 'it' Lkotlin\/jvm\/functions\/Function1;\l  0x000f\-0x0012: r1 '$i$a$\-let\-CompletedContinuation$invokeHandlers$2' I\l  \-1 \-0x0012: r3 'cont' Lkotlinx\/coroutines\/CancellableContinuationImpl;\l  \-1 \-0x0012: r4 'cause' Ljava\/lang\/Throwable;\lSIGNATURE: (Lkotlinx\/coroutines\/CancellableContinuationImpl\<*\>;Ljava\/lang\/Throwable;)V\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_23[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_13;
Node_23 -> Node_13;
}

