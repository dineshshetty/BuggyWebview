digraph "CFG forkotlinx.coroutines.CompletedContinuation.copy$default(Lkotlinx\/coroutines\/CompletedContinuation;Ljava\/lang\/Object;Lkotlinx\/coroutines\/CancelHandler;Lkotlin\/jvm\/functions\/Function1;Ljava\/lang\/Object;Ljava\/lang\/Throwable;ILjava\/lang\/Object;)Lkotlinx\/coroutines\/CompletedContinuation;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000}"];
Node_22 [shape=record,label="{22\:\ 0x0002|if ((r9 & 1) == 0) goto L4\l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|java.lang.Object r4 = r3.result\l}"];
Node_24 [shape=record,label="{24\:\ 0x0006|PHI: r4 \l  PHI: (r4v1 java.lang.Object) = (r4v0 java.lang.Object), (r4v2 java.lang.Object) binds: [B:22:0x0002, B:23:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|if ((r9 & 2) == 0) goto L7\l}"];
Node_26 [shape=record,label="{26\:\ 0x000a|kotlinx.coroutines.CancelHandler r5 = r3.cancelHandler\l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|PHI: r5 \l  PHI: (r5v1 kotlinx.coroutines.CancelHandler) = (r5v0 kotlinx.coroutines.CancelHandler), (r5v6 kotlinx.coroutines.CancelHandler) binds: [B:25:0x0008, B:26:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|r10 = r5\lr6 = r6\l}"];
Node_28 [shape=record,label="{28\:\ 0x000f|if ((r9 & 4) == 0) goto L10\l}"];
Node_29 [shape=record,label="{29\:\ 0x0011|r6 = r3.onCancellation\l}"];
Node_30 [shape=record,label="{30\:\ 0x0013|PHI: r6 \l  PHI: (r6v1 kotlin.jvm.functions.Function1) = (r6v4 kotlin.jvm.functions.Function1), (r6v5 kotlin.jvm.functions.Function1\<java.lang.Throwable, kotlin.Unit\>) binds: [B:28:0x000f, B:29:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|r0 = r6\l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|if ((r9 & 8) == 0) goto L13\l}"];
Node_32 [shape=record,label="{32\:\ 0x0018|java.lang.Object r7 = r3.idempotentResume\l}"];
Node_33 [shape=record,label="{33\:\ 0x001a|PHI: r7 \l  PHI: (r7v1 java.lang.Object) = (r7v0 java.lang.Object), (r7v3 java.lang.Object) binds: [B:31:0x0016, B:32:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r7\l}"];
Node_34 [shape=record,label="{34\:\ 0x001d|if ((r9 & 16) == 0) goto L16\l}"];
Node_35 [shape=record,label="{35\:\ 0x001f|java.lang.Throwable r8 = r3.cancelCause\l}"];
Node_36 [shape=record,label="{36\:\ 0x0021|PHI: r8 \l  PHI: (r8v1 java.lang.Throwable) = (r8v0 java.lang.Throwable), (r8v3 java.lang.Throwable) binds: [B:34:0x001d, B:35:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|r6 = r4\l}"];
Node_37 [shape=record,label="{37\:\ 0x002c|RETURN\l|return r3.copy(r6, r10, r0, r1, r8)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ kotlinx.coroutines.CompletedContinuation kotlinx.coroutines.CompletedContinuation.copy$default((r3v0 kotlinx.coroutines.CompletedContinuation A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlinx.coroutines.CancelHandler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlin.jvm.functions.Function1 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:34:0x001d \-\> B:36:0x0021, CROSS_EDGE: B:31:0x0016 \-\> B:33:0x001a, CROSS_EDGE: B:28:0x000f \-\> B:30:0x0013, CROSS_EDGE: B:25:0x0008 \-\> B:27:0x000c, CROSS_EDGE: B:22:0x0002 \-\> B:24:0x0006\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_20;
}

