digraph "CFG forkotlinx.coroutines.scheduling.TasksKt.isBlocking(Lkotlinx\/coroutines\/scheduling\/Task;)Z" {
subgraph cluster_Region_408778866 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0008|RETURN\l|return r3.taskContext.getTaskMode() == 1\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x000b|ORIG_RETURN\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking((r3v0 '$this$isBlocking' kotlinx.coroutines.scheduling.Task A[D('$this$isBlocking' kotlinx.coroutines.scheduling.Task), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0008 \-\> B:14:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_11 -> Node_13;
Node_11 -> Node_15;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_13 -> Node_9;
Node_15 -> Node_9;
}

