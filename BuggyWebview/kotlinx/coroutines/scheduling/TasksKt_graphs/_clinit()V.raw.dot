digraph "CFG forkotlinx.coroutines.scheduling.TasksKt.\<clinit\>()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0002|0x0002: CONST_STR  (r0 I:java.lang.String) =  \"kotlinx.coroutines.scheduler.resolution.ns\"  (LINE:17)\l0x0004: CONST  (r1 I:??[long, double]) = (100000(0x186a0, double:4.94066E\-319) ??[long, double]) \l0x0007: CONST  (r3 I:??[long, double]) = (0 ??[long, double]) \l0x0009: CONST  (r5 I:??[long, double]) = (0 ??[long, double]) \l0x000b: CONST  (r7 I:??[int, float, short, byte, char]) = (12 ??[int, float, short, byte, char]) \l0x000d: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: INVOKE  (r0 I:long) = (r0 I:java.lang.String), (r1 I:long), (r3 I:long), (r5 I:long), (r7 I:int), (r8 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.internal.SystemPropsKt.systemProp$default(java.lang.String, long, long, long, int, java.lang.Object):long A[MD:(java.lang.String, long, long, long, int, java.lang.Object):long (m)]\l0x0012: SPUT  (r0 I:long) kotlinx.coroutines.scheduling.TasksKt.WORK_STEALING_TIME_RESOLUTION_NS long \l0x0016: INVOKE  (r0 I:int) =  type: STATIC call: kotlinx.coroutines.internal.SystemPropsKt.getAVAILABLE_PROCESSORS():int A[MD:():int (m)] (LINE:30)\l0x001a: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x001b: INVOKE  (r3 I:int) = (r0 I:int), (r1 I:int) type: STATIC call: kotlin.ranges.RangesKt.coerceAtLeast(int, int):int A[MD:(int, int):int (m)]\l0x0020: CONST_STR  (r2 I:java.lang.String) =  \"kotlinx.coroutines.scheduler.core.pool.size\"  (LINE:28)\l0x0022: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0023: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0024: CONST  (r6 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l0x0026: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0027: INVOKE  (r0 I:int) = (r2 I:java.lang.String), (r3 I:int), (r4 I:int), (r5 I:int), (r6 I:int), (r7 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.internal.SystemPropsKt.systemProp$default(java.lang.String, int, int, int, int, java.lang.Object):int A[MD:(java.lang.String, int, int, int, int, java.lang.Object):int (m)]\l0x002b: SPUT  (r0 I:int) kotlinx.coroutines.scheduling.TasksKt.CORE_POOL_SIZE int \l0x0032: CONST_STR  (r1 I:java.lang.String) =  \"kotlinx.coroutines.scheduler.max.pool.size\"  (LINE:36)\l0x0034: CONST  (r2 I:??[int, float, short, byte, char]) = (2097150(0x1ffffe, float:2.938733E\-39) ??[int, float, short, byte, char]) \l0x0037: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0038: CONST  (r4 I:??[int, float, short, byte, char]) = (2097150(0x1ffffe, float:2.938733E\-39) ??[int, float, short, byte, char]) \l0x003b: CONST  (r5 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x003c: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x003d: INVOKE  (r0 I:int) = (r1 I:java.lang.String), (r2 I:int), (r3 I:int), (r4 I:int), (r5 I:int), (r6 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.internal.SystemPropsKt.systemProp$default(java.lang.String, int, int, int, int, java.lang.Object):int A[MD:(java.lang.String, int, int, int, int, java.lang.Object):int (m)]\l0x0041: SPUT  (r0 I:int) kotlinx.coroutines.scheduling.TasksKt.MAX_POOL_SIZE int \l0x0043: SGET  (r0 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.SECONDS java.util.concurrent.TimeUnit  (LINE:43)\l0x0045: CONST_STR  (r1 I:java.lang.String) =  \"kotlinx.coroutines.scheduler.keep.alive.sec\"  (LINE:44)\l0x0047: CONST  (r2 I:??[long, double]) = (60 ??[long, double]) \l0x0049: CONST  (r4 I:??[long, double]) = (0 ??[long, double]) \l0x004b: CONST  (r6 I:??[long, double]) = (0 ??[long, double]) \l0x004d: CONST  (r8 I:??[int, float, short, byte, char]) = (12 ??[int, float, short, byte, char]) \l0x004f: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0050: INVOKE  (r1 I:long) = (r1 I:java.lang.String), (r2 I:long), (r4 I:long), (r6 I:long), (r8 I:int), (r9 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.internal.SystemPropsKt.systemProp$default(java.lang.String, long, long, long, int, java.lang.Object):long A[MD:(java.lang.String, long, long, long, int, java.lang.Object):long (m)]\l0x0054: INVOKE  (r0 I:long) = (r0 I:java.util.concurrent.TimeUnit), (r1 I:long) type: VIRTUAL call: java.util.concurrent.TimeUnit.toNanos(long):long A[MD:(long):long (c)] (LINE:43)\l0x0058: SPUT  (r0 I:long) kotlinx.coroutines.scheduling.TasksKt.IDLE_WORKER_KEEP_ALIVE_NS long \l0x005a: SGET  (r0 I:kotlinx.coroutines.scheduling.NanoTimeSource) =  kotlinx.coroutines.scheduling.NanoTimeSource.INSTANCE kotlinx.coroutines.scheduling.NanoTimeSource  (LINE:48)\l0x005c: CHECK_CAST (r0 I:kotlinx.coroutines.scheduling.SchedulerTimeSource) = (kotlinx.coroutines.scheduling.SchedulerTimeSource) (r0 I:??[OBJECT, ARRAY]) \l0x005e: SPUT  (r0 I:kotlinx.coroutines.scheduling.SchedulerTimeSource) kotlinx.coroutines.scheduling.TasksKt.schedulerTimeSource kotlinx.coroutines.scheduling.SchedulerTimeSource \l0x0060: NEW_INSTANCE  (r0 I:kotlinx.coroutines.scheduling.TaskContextImpl) =  kotlinx.coroutines.scheduling.TaskContextImpl  (LINE:72)\l0x0062: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0063: INVOKE  (r0 I:kotlinx.coroutines.scheduling.TaskContextImpl), (r1 I:int) type: DIRECT call: kotlinx.coroutines.scheduling.TaskContextImpl.\<init\>(int):void A[MD:(int):void (m)]\l0x0066: CHECK_CAST (r0 I:kotlinx.coroutines.scheduling.TaskContext) = (kotlinx.coroutines.scheduling.TaskContext) (r0 I:??[OBJECT, ARRAY]) \l0x0068: SPUT  (r0 I:kotlinx.coroutines.scheduling.TaskContext) kotlinx.coroutines.scheduling.TasksKt.NonBlockingContext kotlinx.coroutines.scheduling.TaskContext \l0x006a: NEW_INSTANCE  (r0 I:kotlinx.coroutines.scheduling.TaskContextImpl) =  kotlinx.coroutines.scheduling.TaskContextImpl  (LINE:75)\l0x006c: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x006d: INVOKE  (r0 I:kotlinx.coroutines.scheduling.TaskContextImpl), (r1 I:int) type: DIRECT call: kotlinx.coroutines.scheduling.TaskContextImpl.\<init\>(int):void A[MD:(int):void (m)]\l0x0070: CHECK_CAST (r0 I:kotlinx.coroutines.scheduling.TaskContext) = (kotlinx.coroutines.scheduling.TaskContext) (r0 I:??[OBJECT, ARRAY]) \l0x0072: SPUT  (r0 I:kotlinx.coroutines.scheduling.TaskContext) kotlinx.coroutines.scheduling.TasksKt.BlockingContext kotlinx.coroutines.scheduling.TaskContext \l}"];
Node_7 [shape=record,label="{7\:\ 0x0074|RETURN\l|0x0074: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlinx.coroutines.scheduling.TasksKt.\<clinit\>()  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

