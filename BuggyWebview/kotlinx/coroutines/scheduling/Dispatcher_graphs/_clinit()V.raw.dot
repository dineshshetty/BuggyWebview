digraph "CFG forkotlinx.coroutines.scheduling.DefaultIoScheduler.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.scheduling.DefaultIoScheduler) =  kotlinx.coroutines.scheduling.DefaultIoScheduler \l0x0002: INVOKE  (r0 I:kotlinx.coroutines.scheduling.DefaultIoScheduler) type: DIRECT call: kotlinx.coroutines.scheduling.DefaultIoScheduler.\<init\>():void A[MD:():void (m)]\l0x0005: SPUT  (r0 I:kotlinx.coroutines.scheduling.DefaultIoScheduler) kotlinx.coroutines.scheduling.DefaultIoScheduler.INSTANCE kotlinx.coroutines.scheduling.DefaultIoScheduler \l0x0007: SGET  (r0 I:kotlinx.coroutines.scheduling.UnlimitedIoScheduler) =  kotlinx.coroutines.scheduling.UnlimitedIoScheduler.INSTANCE kotlinx.coroutines.scheduling.UnlimitedIoScheduler  (LINE:46)\l0x000a: INVOKE  (r1 I:int) =  type: STATIC call: kotlinx.coroutines.internal.SystemPropsKt.getAVAILABLE_PROCESSORS():int A[MD:():int (m)] (LINE:49)\l0x000e: CONST  (r2 I:??[int, float, short, byte, char]) = (64 ??[int, float, short, byte, char]) \l0x0010: INVOKE  (r4 I:int) = (r2 I:int), (r1 I:int) type: STATIC call: kotlin.ranges.RangesKt.coerceAtLeast(int, int):int A[MD:(int, int):int (m)]\l0x0014: CONST_STR  (r3 I:java.lang.String) =  \"kotlinx.coroutines.io.parallelism\"  (LINE:47)\l0x0016: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: CONST  (r7 I:??[int, float, short, byte, char]) = (12 ??[int, float, short, byte, char]) \l0x001a: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001b: INVOKE  (r1 I:int) = (r3 I:java.lang.String), (r4 I:int), (r5 I:int), (r6 I:int), (r7 I:int), (r8 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.internal.SystemPropsKt.systemProp$default(java.lang.String, int, int, int, int, java.lang.Object):int A[MD:(java.lang.String, int, int, int, int, java.lang.Object):int (m)]\l0x001f: INVOKE  (r0 I:kotlinx.coroutines.CoroutineDispatcher) = (r0 I:kotlinx.coroutines.scheduling.UnlimitedIoScheduler), (r1 I:int) type: VIRTUAL call: kotlinx.coroutines.scheduling.UnlimitedIoScheduler.limitedParallelism(int):kotlinx.coroutines.CoroutineDispatcher A[MD:(int):kotlinx.coroutines.CoroutineDispatcher (m)] (LINE:46)\l0x0023: SPUT  (r0 I:kotlinx.coroutines.CoroutineDispatcher) kotlinx.coroutines.scheduling.DefaultIoScheduler.default kotlinx.coroutines.CoroutineDispatcher \l}"];
Node_3 [shape=record,label="{3\:\ 0x0025|RETURN\l|0x0025: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlinx.coroutines.scheduling.DefaultIoScheduler.\<clinit\>()  | USE_LINES_HINTS\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

