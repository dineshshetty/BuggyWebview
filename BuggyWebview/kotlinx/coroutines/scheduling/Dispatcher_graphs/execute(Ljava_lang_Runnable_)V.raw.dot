digraph "CFG forkotlinx.coroutines.scheduling.DefaultIoScheduler.execute(Ljava\/lang\/Runnable;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:kotlin.coroutines.EmptyCoroutineContext) =  kotlin.coroutines.EmptyCoroutineContext.INSTANCE kotlin.coroutines.EmptyCoroutineContext  (LINE:56)\l0x0002: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext) = (kotlin.coroutines.CoroutineContext) (r0 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  \l  (r1 I:kotlinx.coroutines.scheduling.DefaultIoScheduler)\l  (r0 I:kotlin.coroutines.CoroutineContext)\l  (r2 I:java.lang.Runnable A[D('command' java.lang.Runnable)])\l type: VIRTUAL call: kotlinx.coroutines.scheduling.DefaultIoScheduler.dispatch(kotlin.coroutines.CoroutineContext, java.lang.Runnable):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Runnable):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|RETURN\l|0x0007: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.scheduling.DefaultIoScheduler.execute((r1 'this' I:kotlinx.coroutines.scheduling.DefaultIoScheduler A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Runnable A[D('command' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0007: r2 'command' Ljava\/lang\/Runnable;\lMETHOD_OVERRIDE: [ClspMth\{java.util.concurrent.Executor.execute(java.lang.Runnable):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

