digraph "CFG forkotlinx.coroutines.scheduling.DefaultIoScheduler.dispatchYield(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Runnable;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.CoroutineDispatcher) =  kotlinx.coroutines.scheduling.DefaultIoScheduler.default kotlinx.coroutines.CoroutineDispatcher  (LINE:70)\l0x0002: INVOKE  \l  (r0 I:kotlinx.coroutines.CoroutineDispatcher)\l  (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r3 I:java.lang.Runnable A[D('block' java.lang.Runnable)])\l type: VIRTUAL call: kotlinx.coroutines.CoroutineDispatcher.dispatchYield(kotlin.coroutines.CoroutineContext, java.lang.Runnable):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Runnable):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|RETURN\l|0x0005: RETURN    (LINE:71)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.scheduling.DefaultIoScheduler.dispatchYield((r1 'this' I:kotlinx.coroutines.scheduling.DefaultIoScheduler A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0005: r2 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x0005: r3 'block' Ljava\/lang\/Runnable;\lMETHOD_OVERRIDE: [kotlinx.coroutines.CoroutineDispatcher.dispatchYield(kotlin.coroutines.CoroutineContext, java.lang.Runnable):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

