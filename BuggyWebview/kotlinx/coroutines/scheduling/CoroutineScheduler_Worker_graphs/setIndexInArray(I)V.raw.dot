digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.Worker.setIndexInArray(I)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:588)\l0x0002: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0005: IGET  (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler) = (r2 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.this$0 kotlinx.coroutines.scheduling.CoroutineScheduler \l0x0007: IGET  (r1 I:java.lang.String) = (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.schedulerName java.lang.String \l0x0009: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"\-worker\-\" \l0x000e: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0011|0x0011: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0016 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0013|0x0013: CONST_STR  (r1 I:java.lang.String) =  \"TERMINATED\" \l}"];
Node_14 [shape=record,label="{14\:\ 0x001a|0x001a: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001d: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0021: INVOKE  (r2 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker), (r0 I:java.lang.String) type: VIRTUAL call: kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.setName(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x0024: IPUT  (r3 I:int A[D('index' int)]), (r2 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.indexInArray int  (LINE:589)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|RETURN\l|0x0026: RETURN    (LINE:590)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0016|0x0016: INVOKE  (r1 I:java.lang.String) = (r3 I:int A[D('index' int)]) type: STATIC call: java.lang.String.valueOf(int):java.lang.String A[MD:(int):java.lang.String (c)]\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.setIndexInArray((r2 'this' I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0016 \-\> B:14:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0026: r3 'index' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

