digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.Worker.findAnyTask(Z)Lkotlinx\/coroutines\/scheduling\/Task;" {
subgraph cluster_Region_478056900 {
label = "R(2:(2:4|(2:(1:10)|(2:12|(2:(1:22)|(1:(1:18))))))(2:24|(1:27))|20) | DECL_VAR: kotlinx.coroutines.scheduling.Task it, kotlinx.coroutines.scheduling.Task it\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_632975390 {
label = "IF [B:33:0x0001] THEN: R(2:4|(2:(1:10)|(2:12|(2:(1:22)|(1:(1:18)))))) ELSE: R(2:24|(1:27))";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0001|if (r4 == true) goto L3\l}"];
subgraph cluster_Region_224681933 {
label = "R(2:4|(2:(1:10)|(2:12|(2:(1:22)|(1:(1:18))))))";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x000d|boolean r1 = nextInt(kotlinx.coroutines.scheduling.CoroutineScheduler.this.corePoolSize * 2) == 0\l}"];
subgraph cluster_Region_1679785575 {
label = "R(2:(1:10)|(2:12|(2:(1:22)|(1:(1:18)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1296998826 {
label = "IF [B:38:0x0012, B:40:0x0018] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0012|PHI: r1 \l  PHI: (r1v7 'globalFirst' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == true) goto L7\l}"];
Node_40 [shape=record,label="{40\:\ 0x0018|ADDED_TO_REGION\l|if ((r2 = pollGlobalQueues()) != null) goto L9\l}"];
subgraph cluster_Region_285490067 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x001d|RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_996249014 {
label = "R(2:12|(2:(1:22)|(1:(1:18))))";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x001e|kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.Task r2 = r3.localQueue.poll()\l}"];
subgraph cluster_Region_2031909062 {
label = "R(2:(1:22)|(1:(1:18)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_341059360 {
label = "IF [B:45:0x0024] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0024|if (r2 != null) goto L21\l}"];
subgraph cluster_Region_749701105 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0034|RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_256957819 {
label = "R(1:(1:18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1645882579 {
label = "IF [B:46:0x0026, B:48:0x002c] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0026|if (r1 == false) goto L15\l}"];
Node_48 [shape=record,label="{48\:\ 0x002c|ADDED_TO_REGION\l|if ((r2 = pollGlobalQueues()) != null) goto L17\l}"];
subgraph cluster_Region_270755504 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0031|RETURN\l|return r2\l}"];
}
}
}
}
}
}
}
subgraph cluster_Region_1203828046 {
label = "R(2:24|(1:27))";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0035|kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.Task r1 = pollGlobalQueues()\l}"];
subgraph cluster_IfRegion_1069684543 {
label = "IF [B:55:0x0039] THEN: R(1:27) ELSE: null";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x0039|if (r1 != null) goto L26\l}"];
subgraph cluster_Region_119265081 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x0042|RETURN\l|return r1\l}"];
}
}
}
}
Node_57 [shape=record,label="{57\:\ 0x003f|RETURN\l|return trySteal(false)\l}"];
}
Node_30 [shape=record,color=red,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0000}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0003}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x000f}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0014}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x001b}"];
Node_31 [shape=record,color=red,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0028}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x002f}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x003b}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0032}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0011}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x0040}"];
MethodNode[shape=record,label="{private final kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.findAnyTask((r3v0 'this' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[IMMUTABLE_TYPE, THIS]), (r4v0 'scanLocalQueue' boolean A[D('scanLocalQueue' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:51:0x0031 \-\> B:31:?, CROSS_EDGE: B:57:0x003f \-\> B:31:?, CROSS_EDGE: B:46:0x0026 \-\> B:56:0x003b, CROSS_EDGE: B:53:0x0034 \-\> B:31:?, CROSS_EDGE: B:38:0x0012 \-\> B:44:0x001e, CROSS_EDGE: B:37:0x0011 \-\> B:38:0x0012, CROSS_EDGE: B:55:0x0039 \-\> B:56:0x003b, CROSS_EDGE: B:59:0x0042 \-\> B:31:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [991=4]\}\l}"];
MethodNode -> Node_30;Node_33 -> Node_34;
Node_33 -> Node_54[style=dashed];
Node_35 -> Node_36;
Node_35 -> Node_37;
Node_38 -> Node_39;
Node_38 -> Node_44[style=dashed];
Node_40 -> Node_42;
Node_40 -> Node_44[style=dashed];
Node_43 -> Node_31;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_52;
Node_53 -> Node_31;
Node_46 -> Node_47;
Node_46 -> Node_56[style=dashed];
Node_48 -> Node_50;
Node_48 -> Node_56[style=dashed];
Node_51 -> Node_31;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_58;
Node_59 -> Node_31;
Node_57 -> Node_31;
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_36 -> Node_38;
Node_39 -> Node_40;
Node_42 -> Node_43;
Node_47 -> Node_48;
Node_50 -> Node_51;
Node_56 -> Node_57;
Node_52 -> Node_53;
Node_37 -> Node_38;
Node_58 -> Node_59;
}

