digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.Worker.\<init\>(Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;)V" {
subgraph cluster_Region_1106262264 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlinx.coroutines.scheduling.CoroutineScheduler.this = r2\lsetDaemon(true)\lr1.localQueue = new kotlinx.coroutines.scheduling.WorkQueue()\lr1.state = kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.DORMANT\lr1.workerCtl = 0\lr1.nextParkedWorker = kotlinx.coroutines.scheduling.CoroutineScheduler.NOT_IN_STACK\lr1.rngState = kotlin.random.Random.Default.nextInt()\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0025}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.\<init\>((r1v0 'this' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[IMMUTABLE_TYPE, THIS]), (r2v0 'this$0' kotlinx.coroutines.scheduling.CoroutineScheduler A[D('this$0' kotlinx.coroutines.scheduling.CoroutineScheduler), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | SKIP_FIRST_ARG\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ()V\l}"];
MethodNode -> Node_4;Node_6 -> Node_7;
Node_4 -> Node_6;
Node_7 -> Node_5;
}

