digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.Worker.park()V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000}"];
Node_13 [shape=record,label="{13\:\ 0x0006|if ((r6.terminationDeadline \> 0 ? 1 : (r6.terminationDeadline == 0 ? 0 : \-1)) != 0) goto L4\l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|r6.terminationDeadline = java.lang.System.nanoTime() + kotlinx.coroutines.scheduling.CoroutineScheduler.this.idleWorkerKeepAliveNs\l}"];
Node_15 [shape=record,label="{15\:\ 0x0013|java.util.concurrent.locks.LockSupport.parkNanos(kotlinx.coroutines.scheduling.CoroutineScheduler.this.idleWorkerKeepAliveNs)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0023|if (((java.lang.System.nanoTime() \- r6.terminationDeadline) \> 0 ? 1 : ((java.lang.System.nanoTime() \- r6.terminationDeadline) == 0 ? 0 : \-1)) \< 0) goto L9\l}"];
Node_17 [shape=record,label="{17\:\ 0x0025|r6.terminationDeadline = 0\ltryTerminateWorker()\l}"];
Node_18 [shape=record,label="{18\:\ 0x002a|RETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.park((r6v0 'this' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0023 \-\> B:18:0x002a, CROSS_EDGE: B:13:0x0006 \-\> B:15:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

