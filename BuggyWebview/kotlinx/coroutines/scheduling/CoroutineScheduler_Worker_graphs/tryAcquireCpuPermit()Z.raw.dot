digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.Worker.tryAcquireCpuPermit()Z" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY])  (LINE:643)\l0x0002: IGET  (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) = (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.state kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState  (LINE:644)\l0x0004: SGET  (r2 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) =  kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.CPU_ACQUIRED kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState \l0x0006: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x000c \l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|RETURN\lORIG_RETURN\l|0x000a: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0044: RETURN  (r3 I:boolean)  (LINE:650)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|0x000c: IGET  (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler) = (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.this$0 kotlinx.coroutines.scheduling.CoroutineScheduler  (LINE:645)\l0x000e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)])  (LINE:981)\l0x0010: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0011|LOOP_START\lLOOP:0: B:27:0x0011\-\>B:31:0x0038\l|0x0012: IGET  (r13 I:long) = \l  (r11 I:kotlinx.coroutines.scheduling.CoroutineScheduler A[D('$this$loop$iv$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)])\l kotlinx.coroutines.scheduling.CoroutineScheduler.controlState long  (LINE:983)\l0x0014: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)])  (LINE:984)\l0x0016: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: CONST  (r7 I:??[long, double]) = (9223367638808264704(0x7ffffc0000000000, double:NaN) ??[long, double])  (LINE:985)\l0x001c: ARITH  (r7 I:long) = (r7 I:long) & (r13 I:long A[D('state$iv' long)]) \l0x001d: CONST  (r9 I:??[int, float, short, byte, char]) = (42 ??[int, float, short, byte, char]) \l0x001f: ARITH  (r7 I:long) = (r7 I:long) \>\> (r9 I:long) \l0x0020: CAST (r5 I:int A[D('this_$iv$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)]) = (int) (r7 I:long) \l0x0021: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('this_$iv$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)])\l  (LINE:984)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0023|0x0023: IF  (r16 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('available$iv' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0027  (LINE:986)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0027|0x0027: CONST  (r5 I:??[long, double]) = (4398046511104(0x40000000000, double:2.1729236899484E\-311) ??[long, double])  (LINE:987)\l0x002c: ARITH  (r17 I:long) = (r13 I:long A[D('state$iv' long)]) \- (r5 I:long) \l0x002e: SGET  (r5 I:java.util.concurrent.atomic.AtomicLongFieldUpdater) =  kotlinx.coroutines.scheduling.CoroutineScheduler.controlState$FU java.util.concurrent.atomic.AtomicLongFieldUpdater  (LINE:988)\l0x0030: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)]) \l0x0031: MOVE  (r7 I:??[long, double]) = (r13 I:??[long, double] A[D('state$iv' long)]) \l0x0032: MOVE  (r9 I:??[long, double]) = (r17 I:??[long, double] A[D('update$iv' long)]) \l0x0034: INVOKE  (r5 I:boolean) = (r5 I:java.util.concurrent.atomic.AtomicLongFieldUpdater), (r6 I:java.lang.Object), (r7 I:long), (r9 I:long) type: VIRTUAL call: java.util.concurrent.atomic.AtomicLongFieldUpdater.compareAndSet(java.lang.Object, long, long):boolean A[MD:(T, long, long):boolean (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0038|LOOP_END\lLOOP:0: B:27:0x0011\-\>B:31:0x0038\l|0x0038: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0011 \l}"];
Node_39 [shape=record,label="{39\:\ 0x003a|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x003a|0x003a: CONST  (r1 I:??[boolean, int, float, short, byte, char] A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x003b|0x003b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:?  (LINE:645)\l}"];
Node_34 [shape=record,label="{34\:\ 0x003d|0x003d: SGET  (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) =  kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.CPU_ACQUIRED kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState  (LINE:646)\l0x003f: IPUT  \l  (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState)\l  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)\l kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.state kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState \l0x0041: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:647)\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|0x0044: RETURN  (r3 I:boolean) A[SYNTHETIC] (LINE:650)\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|0x0044: RETURN  (r3 I:boolean) A[SYNTHETIC] (LINE:650)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0025|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0025|0x0025: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.tryAcquireCpuPermit((r19 'this' I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x003d \-\> B:36:0x0044, CROSS_EDGE: B:33:0x003b \-\> B:36:0x0044, CROSS_EDGE: B:32:0x003a \-\> B:33:0x003b, BACK_EDGE: B:31:0x0038 \-\> B:27:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0021: r5 'this_$iv$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x0017\-0x0021: r6 '$i$f$availableCpuPermits' I\l  0x000e\-0x003b: r1 'this_$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x000f\-0x003b: r2 '$i$f$tryAcquireCpuPermit' I\l  0x0010\-0x003b: r11 '$this$loop$iv$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x0011\-0x003b: r12 '$i$f$loop' I\l  0x0014\-0x003b: r13 'state$iv' J\l  0x0015\-0x003b: r15 '$i$a$\-loop\-CoroutineScheduler$tryAcquireCpuPermit$1$iv' I\l  0x0023\-0x003b: r16 'available$iv' I\l  0x002e\-0x003b: r17 'update$iv' J\l  0x0045\-0x0046: r13 'state$iv' J\l  0x0045\-0x0046: r15 '$i$a$\-loop\-CoroutineScheduler$tryAcquireCpuPermit$1$iv' I\l  0x0045\-0x0046: r16 'available$iv' I\l  0x0045\-0x0046: r17 'update$iv' J\l  0x0045\-0x0046: r1 'this_$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x0045\-0x0046: r2 '$i$f$tryAcquireCpuPermit' I\l  0x0045\-0x0046: r11 '$this$loop$iv$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x0045\-0x0046: r12 '$i$f$loop' I\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_22;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_38[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_27;
Node_31 -> Node_39[style=dashed];
Node_39 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_41;
Node_34 -> Node_40;
Node_40 -> Node_22;
Node_41 -> Node_22;
Node_38 -> Node_29;
Node_29 -> Node_33;
}

