digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.Worker.runWorker()V" {
subgraph cluster_Region_1585714373 {
label = "R(3:1|(2:6|(1:24)(2:9|(1:(1:21)(1:18))(1:12)))|27)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0000|boolean r0 = false\l}"];
subgraph cluster_LoopRegion_2117669695 {
label = "LOOP:0: (2:6|(1:24)(2:9|(1:(1:21)(1:18))(1:12)))";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0007|if (kotlinx.coroutines.scheduling.CoroutineScheduler.this.isTerminated() == false) goto L4\l}"];
Node_38 [shape=record,label="{38\:\ 0x000d|ADDED_TO_REGION\l|if (r7.state != kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.TERMINATED) goto L6\l}"];
subgraph cluster_Region_1737511308 {
label = "R(2:6|(1:24)(2:9|(1:(1:21)(1:18))(1:12)))";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x000f|kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.Task r1 = findTask(r7.mayHaveLocalTasks)\l}"];
subgraph cluster_IfRegion_232463849 {
label = "IF [B:40:0x0017] THEN: R(1:24) ELSE: R(2:9|(1:(1:21)(1:18))(1:12))";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0017|if (r1 != null) goto L23\l}"];
subgraph cluster_Region_1131866829 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0019|r0 = false\lr7.minDelayUntilStealableTaskNs = 0L\lexecuteTask(r1)\l}"];
}
subgraph cluster_Region_642121737 {
label = "R(2:9|(1:(1:21)(1:18))(1:12))";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0020|r7.mayHaveLocalTasks = false\l}"];
subgraph cluster_IfRegion_1722866293 {
label = "IF [B:43:0x0027] THEN: R(1:(1:21)(1:18)) ELSE: R(1:12)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0027|if (r7.minDelayUntilStealableTaskNs != 0) goto L15\l}"];
subgraph cluster_Region_1518759349 {
label = "R(1:(1:21)(1:18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_323281323 {
label = "IF [B:44:0x0029] THEN: R(1:21) ELSE: R(1:18)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0029|if (r0 == false) goto L20\l}"];
subgraph cluster_Region_481219062 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x002b|r0 = true\l}"];
}
subgraph cluster_Region_1830347505 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x002d|r0 = false\ltryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.PARKING)\ljava.lang.Thread.interrupted()\ljava.util.concurrent.locks.LockSupport.parkNanos(r7.minDelayUntilStealableTaskNs)\lr7.minDelayUntilStealableTaskNs = 0L\l}"];
}
}
}
subgraph cluster_Region_1812999473 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x003e|tryPark()\l}"];
}
}
}
}
}
}
Node_49 [shape=record,label="{49\:\ 0x0042|tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.TERMINATED)\l}"];
}
Node_32 [shape=record,color=red,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0001|LOOP_START\lLOOP:0: B:35:0x0001\-\>B:59:0x0001\lPHI: r0 \l  PHI: (r0v1 'rescanned' boolean) = (r0v0 'rescanned' boolean), (r0v3 'rescanned' boolean) binds: [B:34:0x0000, B:59:0x0001] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0009}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0020|SYNTHETIC\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x003e|SYNTHETIC\l}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x0001|SYNTHETIC\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x0001|LOOP_END\lSYNTHETIC\lLOOP:0: B:35:0x0001\-\>B:59:0x0001\lPHI: r0 \l  PHI: (r0v3 'rescanned' boolean) = (r0v2 'rescanned' boolean), (r0v4 'rescanned' boolean), (r0v5 'rescanned' boolean), (r0v1 'rescanned' boolean) binds: [B:63:0x0001, B:62:0x0001, B:61:0x0001, B:60:0x0001] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x0029|SYNTHETIC\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x002d|SYNTHETIC\l}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x0001|SYNTHETIC\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x002b|SYNTHETIC\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x0001|SYNTHETIC\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x0019|SYNTHETIC\l}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0001|SYNTHETIC\l}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x0042|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0047}"];
Node_33 [shape=record,color=red,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0042|SYNTHETIC\lADDED_TO_REGION\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.runWorker((r7v0 'this' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:41:0x0019 \-\> B:35:0x0001, BACK_EDGE: B:45:0x002b \-\> B:35:0x0001, BACK_EDGE: B:46:0x002d \-\> B:35:0x0001, BACK_EDGE: B:48:0x003e \-\> B:35:0x0001, CROSS_EDGE: B:36:0x0007 \-\> B:49:0x0042\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_32;Node_34 -> Node_35;
Node_36 -> Node_37;
Node_36 -> Node_52[style=dashed];
Node_38 -> Node_39;
Node_38 -> Node_53[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_51[style=dashed];
Node_40 -> Node_55;
Node_41 -> Node_63;
Node_42 -> Node_43;
Node_43 -> Node_54[style=dashed];
Node_43 -> Node_58;
Node_44 -> Node_56[style=dashed];
Node_44 -> Node_57;
Node_45 -> Node_62;
Node_46 -> Node_61;
Node_48 -> Node_60;
Node_49 -> Node_50;
Node_32 -> Node_34;
Node_35 -> Node_36;
Node_37 -> Node_38;
Node_51 -> Node_42;
Node_54 -> Node_48;
Node_60 -> Node_59;
Node_59 -> Node_35;
Node_58 -> Node_44;
Node_56 -> Node_46;
Node_61 -> Node_59;
Node_57 -> Node_45;
Node_62 -> Node_59;
Node_55 -> Node_41;
Node_63 -> Node_59;
Node_53 -> Node_49;
Node_50 -> Node_33;
Node_52 -> Node_49;
}

