digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.Worker.findAnyTask(Z)Lkotlinx\/coroutines\/scheduling\/Task;" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000}"];
Node_33 [shape=record,label="{33\:\ 0x0001|if (r4 == false) goto L24\l}"];
Node_34 [shape=record,label="{34\:\ 0x0003}"];
Node_35 [shape=record,label="{35\:\ 0x000d|if (nextInt(kotlinx.coroutines.scheduling.CoroutineScheduler.this.corePoolSize * 2) != 0) goto L23\l}"];
Node_36 [shape=record,label="{36\:\ 0x000f|r1 = true\l}"];
Node_38 [shape=record,label="{38\:\ 0x0012|PHI: r1 \l  PHI: (r1v7 'globalFirst' boolean) = (r1v6 'globalFirst' boolean), (r1v8 'globalFirst' boolean) binds: [B:37:0x0011, B:36:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L12\l}"];
Node_39 [shape=record,label="{39\:\ 0x0014|kotlinx.coroutines.scheduling.Task r2 = pollGlobalQueues()\l}"];
Node_40 [shape=record,label="{40\:\ 0x0018|if (r2 != null) goto L9\l}"];
Node_42 [shape=record,label="{42\:\ 0x001b}"];
Node_43 [shape=record,label="{43\:\ 0x001d|RETURN\l|return r2\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x001e|kotlinx.coroutines.scheduling.Task r2 = r3.localQueue.poll()\l}"];
Node_45 [shape=record,label="{45\:\ 0x0024|if (r2 != null) goto L21\l}"];
Node_46 [shape=record,label="{46\:\ 0x0026|if (r1 != false) goto L19\l}"];
Node_47 [shape=record,label="{47\:\ 0x0028|kotlinx.coroutines.scheduling.Task r2 = pollGlobalQueues()\l}"];
Node_48 [shape=record,label="{48\:\ 0x002c|if (r2 != null) goto L17\l}"];
Node_50 [shape=record,label="{50\:\ 0x002f}"];
Node_51 [shape=record,label="{51\:\ 0x0031|RETURN\l|return r2\l}"];
Node_56 [shape=record,label="{56\:\ 0x003b}"];
Node_57 [shape=record,label="{57\:\ 0x003f|RETURN\l|return trySteal(false)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0032}"];
Node_53 [shape=record,label="{53\:\ 0x0034|RETURN\l|return r2\l}"];
Node_37 [shape=record,label="{37\:\ 0x0011|r1 = false\l}"];
Node_54 [shape=record,label="{54\:\ 0x0035|kotlinx.coroutines.scheduling.Task r1 = pollGlobalQueues()\l}"];
Node_55 [shape=record,label="{55\:\ 0x0039|if (r1 != null) goto L26\l}"];
Node_58 [shape=record,label="{58\:\ 0x0040}"];
Node_59 [shape=record,label="{59\:\ 0x0042|RETURN\l|return r1\l}"];
MethodNode[shape=record,label="{private final kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.findAnyTask((r3v0 'this' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[IMMUTABLE_TYPE, THIS]), (r4v0 'scanLocalQueue' boolean A[D('scanLocalQueue' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:51:0x0031 \-\> B:31:?, CROSS_EDGE: B:57:0x003f \-\> B:31:?, CROSS_EDGE: B:46:0x0026 \-\> B:56:0x003b, CROSS_EDGE: B:53:0x0034 \-\> B:31:?, CROSS_EDGE: B:38:0x0012 \-\> B:44:0x001e, CROSS_EDGE: B:37:0x0011 \-\> B:38:0x0012, CROSS_EDGE: B:55:0x0039 \-\> B:56:0x003b, CROSS_EDGE: B:59:0x0042 \-\> B:31:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [991=4]\}\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_54;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_44;
Node_39 -> Node_40;
Node_40 -> Node_42;
Node_40 -> Node_44[style=dashed];
Node_42 -> Node_43;
Node_43 -> Node_31;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_52;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_56;
Node_47 -> Node_48;
Node_48 -> Node_50;
Node_48 -> Node_56[style=dashed];
Node_50 -> Node_51;
Node_51 -> Node_31;
Node_56 -> Node_57;
Node_57 -> Node_31;
Node_52 -> Node_53;
Node_53 -> Node_31;
Node_37 -> Node_38;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_31;
}

