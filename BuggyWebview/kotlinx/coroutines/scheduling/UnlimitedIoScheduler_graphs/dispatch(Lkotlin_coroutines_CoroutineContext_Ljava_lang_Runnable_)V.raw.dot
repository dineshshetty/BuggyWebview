digraph "CFG forkotlinx.coroutines.scheduling.UnlimitedIoScheduler.dispatch(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Runnable;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.scheduling.DefaultScheduler) =  kotlinx.coroutines.scheduling.DefaultScheduler.INSTANCE kotlinx.coroutines.scheduling.DefaultScheduler  (LINE:39)\l0x0002: SGET  (r1 I:kotlinx.coroutines.scheduling.TaskContext) =  kotlinx.coroutines.scheduling.TasksKt.BlockingContext kotlinx.coroutines.scheduling.TaskContext \l0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: INVOKE  \l  (r0 I:kotlinx.coroutines.scheduling.DefaultScheduler)\l  (r5 I:java.lang.Runnable A[D('block' java.lang.Runnable)])\l  (r1 I:kotlinx.coroutines.scheduling.TaskContext)\l  (r2 I:boolean)\l type: VIRTUAL call: kotlinx.coroutines.scheduling.DefaultScheduler.dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable, kotlinx.coroutines.scheduling.TaskContext, boolean):void A[MD:(java.lang.Runnable, kotlinx.coroutines.scheduling.TaskContext, boolean):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: RETURN    (LINE:40)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.scheduling.UnlimitedIoScheduler.dispatch((r3 'this' I:kotlinx.coroutines.scheduling.UnlimitedIoScheduler A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r4 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x0008: r5 'block' Ljava\/lang\/Runnable;\lMETHOD_OVERRIDE: [kotlinx.coroutines.CoroutineDispatcher.dispatch(kotlin.coroutines.CoroutineContext, java.lang.Runnable):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

