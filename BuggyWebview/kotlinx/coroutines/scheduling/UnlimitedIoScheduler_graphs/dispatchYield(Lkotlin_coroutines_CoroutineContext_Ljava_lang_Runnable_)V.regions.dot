digraph "CFG forkotlinx.coroutines.scheduling.UnlimitedIoScheduler.dispatchYield(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Runnable;)V" {
subgraph cluster_Region_1715570528 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlinx.coroutines.scheduling.DefaultScheduler.INSTANCE.dispatchWithContext$kotlinx_coroutines_core(r5, kotlinx.coroutines.scheduling.TasksKt.BlockingContext, true)\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0008}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.scheduling.UnlimitedIoScheduler.dispatchYield((r3v0 'this' kotlinx.coroutines.scheduling.UnlimitedIoScheduler A[IMMUTABLE_TYPE, THIS]), (r4v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'block' java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.CoroutineDispatcher.dispatchYield(kotlin.coroutines.CoroutineContext, java.lang.Runnable):void]\l}"];
MethodNode -> Node_4;Node_6 -> Node_7;
Node_4 -> Node_6;
Node_7 -> Node_5;
}

