digraph "CFG forkotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.dispatchYield(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Runnable;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler) = (r6 I:kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher) kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.coroutineScheduler kotlinx.coroutines.scheduling.CoroutineScheduler  (LINE:100)\l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0004: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0005: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('block' java.lang.Runnable)]) \l0x0007: INVOKE  \l  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler)\l  (r1 I:java.lang.Runnable)\l  (r2 I:kotlinx.coroutines.scheduling.TaskContext)\l  (r3 I:boolean)\l  (r4 I:int)\l  (r5 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.scheduling.CoroutineScheduler.dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler, java.lang.Runnable, kotlinx.coroutines.scheduling.TaskContext, boolean, int, java.lang.Object):void A[MD:(kotlinx.coroutines.scheduling.CoroutineScheduler, java.lang.Runnable, kotlinx.coroutines.scheduling.TaskContext, boolean, int, java.lang.Object):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|RETURN\l|0x000a: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.dispatchYield((r6 'this' I:kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher A[IMMUTABLE_TYPE, THIS]), (r7 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000a: r7 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x000a: r8 'block' Ljava\/lang\/Runnable;\lMETHOD_OVERRIDE: [kotlinx.coroutines.CoroutineDispatcher.dispatchYield(kotlin.coroutines.CoroutineContext, java.lang.Runnable):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

