digraph "CFG forkotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.shutdown$kotlinx_coroutines_core(J)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|monitor\-enter(r1)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{, blocks: (B:14:0x0001), top: B:20:0x0001 \}\lCatch: all \-\> 0x0008\l|r1.coroutineScheduler.shutdown(r2)     \/\/ Catch: java.lang.Throwable \-\> L8\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|monitor\-exit(r1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|REMOVE\lExcHandler: all \-\> 0x0008\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|REMOVE\l|throw r2\l}"];
MethodNode[shape=record,label="{public final synchronized void kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.shutdown$kotlinx_coroutines_core((r1v0 'this' kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher A[IMMUTABLE_TYPE, THIS]), (r2v0 'timeout' long A[D('timeout' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000a \-\> B:12:?, CROSS_EDGE: B:20:0x0001 \-\> B:17:0x0008\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_20;
Node_20 -> Node_14;
Node_20 -> Node_17;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_21 -> Node_17;
Node_17 -> Node_19;
Node_19 -> Node_12;
}

