digraph "CFG forkotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.\<init\>(IILjava\/lang\/String;ILkotlin\/jvm\/internal\/DefaultConstructorMarker;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0002|if ((r4 & 1) == 0) goto L4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|int r1 = kotlinx.coroutines.scheduling.TasksKt.CORE_POOL_SIZE\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:16:0x0002, B:17:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|if ((r4 & 2) == 0) goto L7\l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|int r2 = kotlinx.coroutines.scheduling.TasksKt.MAX_POOL_SIZE\l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:19:0x0008, B:20:0x000a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x000e|if ((r4 & 4) == 0) goto L10\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|java.lang.String r3 = kotlinx.coroutines.scheduling.TasksKt.DEFAULT_SCHEDULER_NAME\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|PHI: r3 \l  PHI: (r3v1 java.lang.String) = (r3v0 java.lang.String), (r3v2 java.lang.String) binds: [B:22:0x000e, B:23:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|this(r1, r2, r3)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0015|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* synthetic *\/ void kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.\<init\>((r0v0 'this' kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher A[IMMUTABLE_TYPE, THIS]), (r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.jvm.internal.DefaultConstructorMarker A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:22:0x000e \-\> B:24:0x0012, CROSS_EDGE: B:19:0x0008 \-\> B:21:0x000c, CROSS_EDGE: B:16:0x0002 \-\> B:18:0x0006\lINLINE_NOT_NEEDED\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [30=4]\}\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

