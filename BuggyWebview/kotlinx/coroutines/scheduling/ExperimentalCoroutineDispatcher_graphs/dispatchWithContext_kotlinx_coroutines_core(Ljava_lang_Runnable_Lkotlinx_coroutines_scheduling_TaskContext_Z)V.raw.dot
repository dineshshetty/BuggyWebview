digraph "CFG forkotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.dispatchWithContext$kotlinx_coroutines_core(Ljava\/lang\/Runnable;Lkotlinx\/coroutines\/scheduling\/TaskContext;Z)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_12 [shape=record,label="{12\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{RejectedExecutionException \-\> 0x0007, blocks: (B:12:0x0001), top: B:17:0x0001 \}\lCatch: RejectedExecutionException \-\> 0x0007\l|0x0001: IGET  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler) = (r3 I:kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher) kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.coroutineScheduler kotlinx.coroutines.scheduling.CoroutineScheduler A[Catch: RejectedExecutionException \-\> 0x0007, TRY_ENTER] (LINE:99)\l0x0003: INVOKE  \l  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler)\l  (r4 I:java.lang.Runnable A[D('block' java.lang.Runnable)])\l  (r5 I:kotlinx.coroutines.scheduling.TaskContext A[D('context' kotlinx.coroutines.scheduling.TaskContext)])\l  (r6 I:boolean A[D('tailDispatch' boolean)])\l type: VIRTUAL call: kotlinx.coroutines.scheduling.CoroutineScheduler.dispatch(java.lang.Runnable, kotlinx.coroutines.scheduling.TaskContext, boolean):void A[Catch: RejectedExecutionException \-\> 0x0007, MD:(java.lang.Runnable, kotlinx.coroutines.scheduling.TaskContext, boolean):void (m), TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0015: RETURN   A[SYNTHETIC] (LINE:106)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0007|ExcHandler: RejectedExecutionException \-\> 0x0007\l|0x0007: MOVE_EXCEPTION  (r0 I:java.util.concurrent.RejectedExecutionException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: RejectedExecutionException \-\> 0x0007] (LINE:100)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|0x0008: SGET  (r1 I:kotlinx.coroutines.DefaultExecutor) =  kotlinx.coroutines.DefaultExecutor.INSTANCE kotlinx.coroutines.DefaultExecutor  (LINE:104)\l0x000a: IGET  (r2 I:kotlinx.coroutines.scheduling.CoroutineScheduler) = (r3 I:kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher) kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.coroutineScheduler kotlinx.coroutines.scheduling.CoroutineScheduler \l0x000c: INVOKE  (r2 I:kotlinx.coroutines.scheduling.Task) = \l  (r2 I:kotlinx.coroutines.scheduling.CoroutineScheduler)\l  (r4 I:java.lang.Runnable A[D('block' java.lang.Runnable)])\l  (r5 I:kotlinx.coroutines.scheduling.TaskContext A[D('context' kotlinx.coroutines.scheduling.TaskContext)])\l type: VIRTUAL call: kotlinx.coroutines.scheduling.CoroutineScheduler.createTask(java.lang.Runnable, kotlinx.coroutines.scheduling.TaskContext):kotlinx.coroutines.scheduling.Task A[MD:(java.lang.Runnable, kotlinx.coroutines.scheduling.TaskContext):kotlinx.coroutines.scheduling.Task (m)]\l0x0010: CHECK_CAST (r2 I:java.lang.Runnable) = (java.lang.Runnable) (r2 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r1 I:kotlinx.coroutines.DefaultExecutor), (r2 I:java.lang.Runnable) type: VIRTUAL call: kotlinx.coroutines.DefaultExecutor.enqueue(java.lang.Runnable):void A[MD:(java.lang.Runnable):void (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0015|RETURN\lORIG_RETURN\l|0x0015: RETURN    (LINE:106)\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.dispatchWithContext$kotlinx_coroutines_core((r3 'this' I:kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlinx.coroutines.scheduling.TaskContext A[D('context' kotlinx.coroutines.scheduling.TaskContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('tailDispatch' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0008 \-\> B:16:0x0015, CROSS_EDGE: B:17:0x0001 \-\> B:14:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x0015: r0 'e' Ljava\/util\/concurrent\/RejectedExecutionException;\l  \-1 \-0x0015: r4 'block' Ljava\/lang\/Runnable;\l  \-1 \-0x0015: r5 'context' Lkotlinx\/coroutines\/scheduling\/TaskContext;\l  \-1 \-0x0015: r6 'tailDispatch' Z\lTryCatch #0 \{RejectedExecutionException \-\> 0x0007, blocks: (B:12:0x0001), top: B:17:0x0001 \}\l}"];
MethodNode -> Node_10;Node_10 -> Node_17;
Node_17 -> Node_12;
Node_17 -> Node_14;
Node_12 -> Node_18;
Node_12 -> Node_19;
Node_18 -> Node_14;
Node_19 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_11;
}

