digraph "CFG forkotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.\<init\>(IIJLjava\/lang\/String;ILkotlin\/jvm\/internal\/DefaultConstructorMarker;)V" {
subgraph cluster_Region_1736290363 {
label = "R(2:1|(2:(1:7)(1:3)|4))";
node [shape=record,color=blue];
Node_InsnContainer_498260844 [shape=record,label="{|this(r7, r8, r9, r5)\l}"];
subgraph cluster_Region_1837808626 {
label = "R(2:(1:7)(1:3)|4) | DECL_VAR: java.lang.String null\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1361320751 {
label = "IF [B:11:0x0002] THEN: R(1:7) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0002|if ((r12 & 8) == 0) goto L7\l}"];
subgraph cluster_Region_1935563806 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0008|r5 = r11\l}"];
}
subgraph cluster_Region_1082026751 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0004|r5 = \"CoroutineScheduler\"\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0009|PHI: r5 \l  PHI: (r5v1 java.lang.String) = (r5v0 java.lang.String), (r5v2 java.lang.String) binds: [B:13:0x0008, B:12:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0010}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* synthetic *\/ void kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.\<init\>((r6v0 'this' kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher A[IMMUTABLE_TYPE, THIS]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 kotlin.jvm.internal.DefaultConstructorMarker A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x0008 \-\> B:14:0x0009\lINLINE_NOT_NEEDED\lJadxCommentsAttr\{\l WARN: \l \-\> Illegal instructions before constructor call\}\l}"];
MethodNode -> Node_8;Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_15 -> Node_9;
}

