digraph "CFG forkotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.\<init\>(II)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r3 I:long) =  kotlinx.coroutines.scheduling.TasksKt.IDLE_WORKER_KEEP_ALIVE_NS long  (LINE:40)\l0x0002: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r6 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l0x0005: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x0007: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('corePoolSize' int)]) \l0x0008: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxPoolSize' int)]) \l0x0009: INVOKE  \l  (r0 I:kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:long)\l  (r5 I:java.lang.String)\l  (r6 I:int)\l  (r7 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.\<init\>(int, int, long, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(int, int, long, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|RETURN\l|0x000c: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* synthetic *\/ void kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.\<init\>((r8 'this' I:kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[D('corePoolSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('maxPoolSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>HIDDEN:Lkotlin\/DeprecationLevel;\}, message=Binary compatibility for Ktor 1.0\-beta\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000c: r9 'corePoolSize' I\l  \-1 \-0x000c: r10 'maxPoolSize' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

