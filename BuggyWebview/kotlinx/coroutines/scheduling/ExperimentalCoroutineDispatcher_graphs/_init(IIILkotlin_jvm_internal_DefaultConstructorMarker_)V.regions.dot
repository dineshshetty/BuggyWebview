digraph "CFG forkotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.\<init\>(IIILkotlin\/jvm\/internal\/DefaultConstructorMarker;)V" {
subgraph cluster_Region_1431614339 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000c|PHI: r2 \l  PHI: (r2v1 int A[REMOVE]) = (r2v0 int) binds: [B:16:0x0008] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|this((r3 & 1) != 0 ? kotlinx.coroutines.scheduling.TasksKt.CORE_POOL_SIZE : r1, (r3 & 2) != 0 ? kotlinx.coroutines.scheduling.TasksKt.MAX_POOL_SIZE : r2)\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0002}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0004}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0006|PHI: r1 \l  PHI: (r1v1 int A[REMOVE]) = (r1v0 int) binds: [B:13:0x0002] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0008}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x000a}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000f}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* synthetic *\/ void kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.\<init\>((r0v0 'this' kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher A[IMMUTABLE_TYPE, THIS]), (r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.jvm.internal.DefaultConstructorMarker A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:16:0x0008 \-\> B:18:0x000c, CROSS_EDGE: B:13:0x0002 \-\> B:15:0x0006\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_18 -> Node_19;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_19 -> Node_11;
}

