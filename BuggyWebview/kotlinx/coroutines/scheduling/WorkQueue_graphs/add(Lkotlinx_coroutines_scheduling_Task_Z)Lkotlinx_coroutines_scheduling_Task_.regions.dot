digraph "CFG forkotlinx.coroutines.scheduling.WorkQueue.add(Lkotlinx\/coroutines\/scheduling\/Task;Z)Lkotlinx\/coroutines\/scheduling\/Task;" {
subgraph cluster_Region_682006005 {
label = "R(1:(2:(1:3)|(2:5|(2:(1:7)|(1:9)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1525470234 {
label = "R(2:(1:3)|(2:5|(2:(1:7)|(1:9))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1536857951 {
label = "IF [B:2:0x0000] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|if (r4 == true) goto L2\l}"];
subgraph cluster_Region_1170524878 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|return addLast(r3)\l}"];
}
}
subgraph cluster_Region_1083832423 {
label = "R(2:5|(2:(1:7)|(1:9)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0007|kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.Task r0 = (kotlinx.coroutines.scheduling.Task) kotlinx.coroutines.scheduling.WorkQueue.lastScheduledTask$FU.getAndSet(r2, r3)\l}"];
subgraph cluster_Region_1498543806 {
label = "R(2:(1:7)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1470725262 {
label = "IF [B:6:0x000f] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000f|if (r0 == null) goto L7\l}"];
subgraph cluster_Region_1696703882 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1432695859 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0017|RETURN\l|return addLast(r0)\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0002}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0013}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.WorkQueue.add((r2v0 'this' kotlinx.coroutines.scheduling.WorkQueue A[IMMUTABLE_TYPE, THIS]), (r3v0 'task' kotlinx.coroutines.scheduling.Task A[D('task' kotlinx.coroutines.scheduling.Task), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'fair' boolean A[D('fair' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0012 \-\> B:1:?, CROSS_EDGE: B:10:0x0017 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_7 -> Node_1;
Node_10 -> Node_1;
Node_0 -> Node_2;
Node_3 -> Node_4;
Node_9 -> Node_10;
}

