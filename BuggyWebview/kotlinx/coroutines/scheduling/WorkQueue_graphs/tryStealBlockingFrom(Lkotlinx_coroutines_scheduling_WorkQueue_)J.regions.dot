digraph "CFG forkotlinx.coroutines.scheduling.WorkQueue.tryStealBlockingFrom(Lkotlinx\/coroutines\/scheduling\/WorkQueue;)J" {
subgraph cluster_Region_1144775684 {
label = "R(4:(1:(1:8))|11|(2:13|(2:(1:31)|(3:15|(1:(2:24|25))(0)|27)))|33)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_705424855 {
label = "IF [B:3:0x0006] THEN: R(1:(1:8)) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() != false) goto L3\l}"];
subgraph cluster_Region_1561990566 {
label = "R(1:(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1801717497 {
label = "IF [B:8:0x0012] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0012|PHI: r0 \l  PHI: (r0v6 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((getBufferSize$kotlinx_coroutines_core() == 0 ? 1 : 0) == 0) goto L7\l}"];
subgraph cluster_Region_446998828 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001a|throw new java.lang.AssertionError()\l}"];
}
}
}
}
Node_12 [shape=record,label="{12\:\ 0x001b|int int r0 = r11.consumerIndex\lint int r3 = r11.producerIndex\ljava.util.concurrent.atomic.AtomicReferenceArray\<kotlinx.coroutines.scheduling.Task\> java.util.concurrent.atomic.AtomicReferenceArray r4 = r11.buffer\l}"];
subgraph cluster_LoopRegion_742089352 {
label = "LOOP:0: (2:13|(2:(1:31)|(3:15|(1:(2:24|25))(0)|27)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0021|LOOP_START\lLOOP:0: B:13:0x0021\-\>B:28:0x0054\lPHI: r0 \l  PHI: (r0v2 'start' int) = (r0v1 'start' int), (r0v3 'start' int) binds: [B:12:0x001b, B:28:0x0054] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != r3) goto L13\l}"];
subgraph cluster_Region_1445046747 {
label = "R(2:13|(2:(1:31)|(3:15|(1:(2:24|25))(0)|27)))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0023|int r5 = r0 & kotlinx.coroutines.scheduling.WorkQueueKt.MASK\l}"];
subgraph cluster_Region_1865714426 {
label = "R(2:(1:31)|(3:15|(1:(2:24|25))(0)|27))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1645090207 {
label = "IF [B:15:0x0027] THEN: R(1:31) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0027|if (r11.blockingTasksInBuffer == 0) goto L31\l}"];
subgraph cluster_Region_689345769 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0058|SYNTHETIC\lEDGE_INSN: B:33:0x0058\-\>B:29:0x0058 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_793460877 {
label = "R(3:15|(1:(2:24|25))(0)|27)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x002a|kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.Task r6 = r4.get(r5)\l}"];
subgraph cluster_IfRegion_981039313 {
label = "IF [B:18:0x0030] THEN: R(1:(2:24|25)) ELSE: R(0)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0030|if (r6 != null) goto L17\l}"];
subgraph cluster_Region_373597486 {
label = "R(1:(2:24|25))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1294036191 {
label = "IF [B:23:0x003f, B:25:0x0046] THEN: R(2:24|25) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x003f|PHI: r7 \l  PHI: (r7v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r6.taskContext.getTaskMode() == 1) != false) goto L21\l}"];
Node_25 [shape=record,label="{25\:\ 0x0046|ADDED_TO_REGION\l|if (r4.compareAndSet(r5, r6, null) != false) goto L23\l}"];
subgraph cluster_Region_1338181691 {
label = "R(2:24|25)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0048|kotlinx.coroutines.scheduling.WorkQueue.blockingTasksInBuffer$FU.decrementAndGet(r11)\ladd$default(r10, r6, false, 2, null)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0053|RETURN\l|return \-1L\l}"];
}
}
}
subgraph cluster_Region_1575788102 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_28 [shape=record,label="{28\:\ 0x0054|LOOP_END\lLOOP:0: B:13:0x0021\-\>B:28:0x0054\l|r0++\l}"];
}
}
}
}
Node_30 [shape=record,label="{30\:\ 0x005c|RETURN\l|return tryStealLastScheduled(r11, true)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0008}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000d}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000f}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0015}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0011}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0032}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x003a}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x003c}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0041}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0048|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0054|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0054|SYNTHETIC\lADDED_TO_REGION\l|continue\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x003e}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0054|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0058|EDGE_INSN: B:33:0x0058\-\>B:29:0x0058 ?: BREAK  \l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0058|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final long kotlinx.coroutines.scheduling.WorkQueue.tryStealBlockingFrom((r10v0 'this' kotlinx.coroutines.scheduling.WorkQueue A[IMMUTABLE_TYPE, THIS]), (r11v0 'victim' kotlinx.coroutines.scheduling.WorkQueue A[D('victim' kotlinx.coroutines.scheduling.WorkQueue), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0053 \-\> B:1:?, BACK_EDGE: B:28:0x0054 \-\> B:13:0x0021, CROSS_EDGE: B:23:0x003f \-\> B:28:0x0054, CROSS_EDGE: B:22:0x003e \-\> B:23:0x003f, CROSS_EDGE: B:18:0x0030 \-\> B:28:0x0054, CROSS_EDGE: B:30:0x005c \-\> B:1:?, CROSS_EDGE: B:13:0x0021 \-\> B:29:0x0058, CROSS_EDGE: B:7:0x0011 \-\> B:8:0x0012, CROSS_EDGE: B:3:0x0006 \-\> B:12:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_12[style=dashed];
Node_8 -> Node_10;
Node_8 -> Node_12[style=dashed];
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_31[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_17[style=dashed];
Node_15 -> Node_33;
Node_33 -> Node_29;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_34[style=dashed];
Node_23 -> Node_24;
Node_23 -> Node_35[style=dashed];
Node_25 -> Node_32;
Node_25 -> Node_36[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_1;
Node_28 -> Node_13;
Node_30 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_10 -> Node_11;
Node_7 -> Node_8;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_24 -> Node_25;
Node_32 -> Node_26;
Node_36 -> Node_28;
Node_35 -> Node_28;
Node_22 -> Node_23;
Node_34 -> Node_28;
Node_29 -> Node_30;
Node_31 -> Node_29;
}

