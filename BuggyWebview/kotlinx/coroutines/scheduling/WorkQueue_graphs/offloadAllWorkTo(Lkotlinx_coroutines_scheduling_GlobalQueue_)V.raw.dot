digraph "CFG forkotlinx.coroutines.scheduling.WorkQueue.offloadAllWorkTo(Lkotlinx\/coroutines\/scheduling\/GlobalQueue;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.scheduling.WorkQueue.lastScheduledTask$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:141)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater), (r2 I:java.lang.Object), (r1 I:java.lang.Object) type: VIRTUAL call: java.util.concurrent.atomic.AtomicReferenceFieldUpdater.getAndSet(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(T, V):V (c)]\l0x0007: CHECK_CAST (r0 I:kotlinx.coroutines.scheduling.Task) = (kotlinx.coroutines.scheduling.Task) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000c \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:203)\l0x000d: INVOKE  \l  (r3 I:kotlinx.coroutines.scheduling.GlobalQueue A[D('globalQueue' kotlinx.coroutines.scheduling.GlobalQueue)])\l  (r0 I:java.lang.Object A[D('it' kotlinx.coroutines.scheduling.Task)])\l type: VIRTUAL call: kotlinx.coroutines.scheduling.GlobalQueue.addLast(java.lang.Object):boolean A[MD:(E):boolean (m)] (LINE:141)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0010|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|LOOP_START\lLOOP:0: B:6:0x0010\-\>B:7:0x0014\l|0x0010: INVOKE  (r0 I:boolean) = \l  (r2 I:kotlinx.coroutines.scheduling.WorkQueue)\l  (r3 I:kotlinx.coroutines.scheduling.GlobalQueue A[D('globalQueue' kotlinx.coroutines.scheduling.GlobalQueue)])\l type: DIRECT call: kotlinx.coroutines.scheduling.WorkQueue.pollTo(kotlinx.coroutines.scheduling.GlobalQueue):boolean A[MD:(kotlinx.coroutines.scheduling.GlobalQueue):boolean (m)] (LINE:142)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|LOOP_END\lLOOP:0: B:6:0x0010\-\>B:7:0x0014\l|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0017 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|RETURN\l|0x0017: RETURN    (LINE:145)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.scheduling.WorkQueue.offloadAllWorkTo((r2 'this' I:kotlinx.coroutines.scheduling.WorkQueue A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlinx.coroutines.scheduling.GlobalQueue A[D('globalQueue' kotlinx.coroutines.scheduling.GlobalQueue), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:7:0x0014 \-\> B:6:0x0010, CROSS_EDGE: B:3:0x0009 \-\> B:6:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x0010: r0 'it' Lkotlinx\/coroutines\/scheduling\/Task;\l  0x000d\-0x0010: r1 '$i$a$\-let\-WorkQueue$offloadAllWorkTo$1' I\l  \-1 \-0x0017: r3 'globalQueue' Lkotlinx\/coroutines\/scheduling\/GlobalQueue;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_11[style=dashed];
Node_5 -> Node_11;
Node_11 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_6[style=dashed];
Node_7 -> Node_10;
Node_10 -> Node_9;
Node_9 -> Node_1;
}

