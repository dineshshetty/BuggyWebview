digraph "CFG forkotlinx.coroutines.scheduling.WorkQueue.tryStealLastScheduled(Lkotlinx\/coroutines\/scheduling\/WorkQueue;Z)J" {
subgraph cluster_Region_1256877134 {
label = "R(3:(2:1|(2:(1:23)|(3:(1:(1:10))|12|(1:(1:21)))))|17|18) | DECL_VAR: kotlinx.coroutines.scheduling.Task lastScheduled\l";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_885427036 {
label = "LOOP:0: (2:1|(2:(1:23)|(3:(1:(1:10))|12|(1:(1:21)))))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0038|LOOP_END\lLOOP:0: B:2:0x0000\-\>B:18:0x0038\l|if (androidx.concurrent.futures.C0125xc40028dd.m112m(kotlinx.coroutines.scheduling.WorkQueue.lastScheduledTask$FU, r10, r0, null) == false) goto L1\l}"];
subgraph cluster_Region_693407850 {
label = "R(2:1|(2:(1:23)|(3:(1:(1:10))|12|(1:(1:21)))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|LOOP_START\lLOOP:0: B:2:0x0000\-\>B:18:0x0038\l|kotlinx.coroutines.scheduling.Task r0 = (kotlinx.coroutines.scheduling.Task) r10.lastScheduledTask\l}"];
subgraph cluster_Region_1732561521 {
label = "R(2:(1:23)|(3:(1:(1:10))|12|(1:(1:21))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1255204464 {
label = "IF [B:3:0x0007] THEN: R(1:23) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r0 == null) goto L22\l}"];
subgraph cluster_Region_122332206 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|RETURN\l|return \-2L\l}"];
}
}
subgraph cluster_Region_1257669159 {
label = "R(3:(1:(1:10))|12|(1:(1:21)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_481492242 {
label = "IF [B:6:0x000b] THEN: R(1:(1:10)) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000b|if (r11 != false) goto L5\l}"];
subgraph cluster_Region_806900759 {
label = "R(1:(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1202494840 {
label = "IF [B:11:0x001a] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001a|PHI: r7 \l  PHI: (r7v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|if ((r0.taskContext.getTaskMode() == 1) == false) goto L9\l}"];
subgraph cluster_Region_1900939047 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x001c|RETURN\l|return \-2L\l}"];
}
}
}
}
Node_13 [shape=record,label="{13\:\ 0x001d|long long r1 = kotlinx.coroutines.scheduling.TasksKt.schedulerTimeSource.nanoTime()\llong long r4 = r1 \- r0.submissionTime\l}"];
subgraph cluster_Region_603436788 {
label = "R(1:(1:21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_121954309 {
label = "IF [B:14:0x002b] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002b|if (r4 \< kotlinx.coroutines.scheduling.TasksKt.WORK_STEALING_TIME_RESOLUTION_NS) goto L19\l}"];
subgraph cluster_Region_606141128 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0030|RETURN\l|return kotlinx.coroutines.scheduling.TasksKt.WORK_STEALING_TIME_RESOLUTION_NS \- r4\l}"];
}
}
}
}
}
}
}
Node_19 [shape=record,label="{19\:\ 0x003a|add$default(r9, r0, false, 2, null)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0040|RETURN\l|return \-1L\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000a}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000d}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0016}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0019}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x001c|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0031}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x003a|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x002d|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x002d}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0009|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final long kotlinx.coroutines.scheduling.WorkQueue.tryStealLastScheduled((r9v0 'this' kotlinx.coroutines.scheduling.WorkQueue A[IMMUTABLE_TYPE, THIS]), (r10v0 'victim' kotlinx.coroutines.scheduling.WorkQueue A[D('victim' kotlinx.coroutines.scheduling.WorkQueue), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'blockingOnly' boolean A[D('blockingOnly' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x001c \-\> B:1:?, CROSS_EDGE: B:16:0x0030 \-\> B:1:?, CROSS_EDGE: B:20:0x0040 \-\> B:1:?, BACK_EDGE: B:18:0x0038 \-\> B:2:0x0000, CROSS_EDGE: B:8:0x0016 \-\> B:11:0x001a, CROSS_EDGE: B:6:0x000b \-\> B:13:0x001d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_18 -> Node_2;
Node_18 -> Node_23[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_5[style=dashed];
Node_3 -> Node_22;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_6 -> Node_13[style=dashed];
Node_11 -> Node_13[style=dashed];
Node_11 -> Node_24;
Node_12 -> Node_1;
Node_13 -> Node_14;
Node_14 -> Node_17[style=dashed];
Node_14 -> Node_25;
Node_16 -> Node_1;
Node_19 -> Node_20;
Node_20 -> Node_1;
Node_0 -> Node_2;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_11;
Node_10 -> Node_11;
Node_24 -> Node_12;
Node_17 -> Node_18;
Node_23 -> Node_19;
Node_25 -> Node_15;
Node_15 -> Node_16;
Node_22 -> Node_4;
}

