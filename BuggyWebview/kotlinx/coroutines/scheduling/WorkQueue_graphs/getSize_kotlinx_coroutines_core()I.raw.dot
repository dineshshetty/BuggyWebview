digraph "CFG forkotlinx.coroutines.scheduling.WorkQueue.getSize$kotlinx_coroutines_core()I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object) = (r1 I:kotlinx.coroutines.scheduling.WorkQueue) kotlinx.coroutines.scheduling.WorkQueue.lastScheduledTask java.lang.Object  (LINE:53)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: INVOKE  (r0 I:int) = (r1 I:kotlinx.coroutines.scheduling.WorkQueue) type: VIRTUAL call: kotlinx.coroutines.scheduling.WorkQueue.getBufferSize$kotlinx_coroutines_core():int A[MD:():int (m)]\l0x0008: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|0x000f: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: INVOKE  (r0 I:int) = (r1 I:kotlinx.coroutines.scheduling.WorkQueue) type: VIRTUAL call: kotlinx.coroutines.scheduling.WorkQueue.getBufferSize$kotlinx_coroutines_core():int A[MD:():int (m)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|RETURN\lORIG_RETURN\l|0x000f: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public final int kotlinx.coroutines.scheduling.WorkQueue.getSize$kotlinx_coroutines_core((r1 'this' I:kotlinx.coroutines.scheduling.WorkQueue A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000b \-\> B:6:0x000f\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

