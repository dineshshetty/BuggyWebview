digraph "CFG forkotlinx.coroutines.scheduling.WorkQueue.offloadAllWorkTo(Lkotlinx\/coroutines\/scheduling\/GlobalQueue;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlinx.coroutines.scheduling.Task r0 = (kotlinx.coroutines.scheduling.Task) kotlinx.coroutines.scheduling.WorkQueue.lastScheduledTask$FU.getAndSet(r2, null)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r0 != null) goto L3\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|r3.addLast(r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0010|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|LOOP_START\lLOOP:0: B:6:0x0010\-\>B:7:0x0014\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|LOOP_END\lLOOP:0: B:6:0x0010\-\>B:7:0x0014\l|if (pollTo(r3) == false) goto L7\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.scheduling.WorkQueue.offloadAllWorkTo((r2v0 'this' kotlinx.coroutines.scheduling.WorkQueue A[IMMUTABLE_TYPE, THIS]), (r3v0 'globalQueue' kotlinx.coroutines.scheduling.GlobalQueue A[D('globalQueue' kotlinx.coroutines.scheduling.GlobalQueue), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:7:0x0014 \-\> B:6:0x0010, CROSS_EDGE: B:3:0x0009 \-\> B:6:0x0010\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_11[style=dashed];
Node_5 -> Node_11;
Node_11 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_6[style=dashed];
Node_7 -> Node_10;
Node_10 -> Node_9;
Node_9 -> Node_1;
}

