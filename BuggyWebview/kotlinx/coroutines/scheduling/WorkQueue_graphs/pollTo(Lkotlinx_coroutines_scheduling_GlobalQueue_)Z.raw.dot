digraph "CFG forkotlinx.coroutines.scheduling.WorkQueue.pollTo(Lkotlinx\/coroutines\/scheduling\/GlobalQueue;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.scheduling.Task) = (r2 I:kotlinx.coroutines.scheduling.WorkQueue) type: DIRECT call: kotlinx.coroutines.scheduling.WorkQueue.pollBuffer():kotlinx.coroutines.scheduling.Task A[MD:():kotlinx.coroutines.scheduling.Task (m)] (LINE:175)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0008 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|0x0006: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: INVOKE  \l  (r3 I:kotlinx.coroutines.scheduling.GlobalQueue A[D('queue' kotlinx.coroutines.scheduling.GlobalQueue)])\l  (r0 I:java.lang.Object A[D('task' kotlinx.coroutines.scheduling.Task)])\l type: VIRTUAL call: kotlinx.coroutines.scheduling.GlobalQueue.addLast(java.lang.Object):boolean A[MD:(E):boolean (m)] (LINE:176)\l0x000b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:177)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|RETURN\l|0x000c: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.scheduling.WorkQueue.pollTo((r2 'this' I:kotlinx.coroutines.scheduling.WorkQueue A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlinx.coroutines.scheduling.GlobalQueue A[D('queue' kotlinx.coroutines.scheduling.GlobalQueue), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x000c \-\> B:1:?\lDebug Info:\l  0x0008\-0x000c: r0 'task' Lkotlinx\/coroutines\/scheduling\/Task;\l  \-1 \-0x000c: r3 'queue' Lkotlinx\/coroutines\/scheduling\/GlobalQueue;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

