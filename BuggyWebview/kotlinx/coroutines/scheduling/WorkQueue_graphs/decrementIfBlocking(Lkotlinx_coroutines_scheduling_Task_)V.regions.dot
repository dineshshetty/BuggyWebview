digraph "CFG forkotlinx.coroutines.scheduling.WorkQueue.decrementIfBlocking(Lkotlinx\/coroutines\/scheduling\/Task;)V" {
subgraph cluster_Region_1748173334 {
label = "R(1:(1:(1:(1:(2:6|(1:(1:(1:(1:13)))))))))";
node [shape=record,color=blue];
subgraph cluster_Region_587424432 {
label = "R(1:(1:(1:(2:6|(1:(1:(1:(1:13))))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1271204336 {
label = "IF [B:2:0x0000] THEN: R(1:(1:(2:6|(1:(1:(1:(1:13))))))) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|if (r6 != null) goto L2\l}"];
subgraph cluster_Region_441235425 {
label = "R(1:(1:(2:6|(1:(1:(1:(1:13)))))))";
node [shape=record,color=blue];
subgraph cluster_Region_1788814604 {
label = "R(1:(2:6|(1:(1:(1:(1:13))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1387383821 {
label = "IF [B:7:0x0011] THEN: R(2:6|(1:(1:(1:(1:13))))) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0011|PHI: r0 \l  PHI: (r0v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r6.taskContext.getTaskMode() == 1) != false) goto L6\l}"];
subgraph cluster_Region_275700099 {
label = "R(2:6|(1:(1:(1:(1:13)))))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0013|int int r0 = kotlinx.coroutines.scheduling.WorkQueue.blockingTasksInBuffer$FU.decrementAndGet(r5)\l}"];
subgraph cluster_Region_827905314 {
label = "R(1:(1:(1:(1:13))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1322553175 {
label = "IF [B:9:0x001d] THEN: R(1:(1:(1:13))) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001d|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() != false) goto L8\l}"];
subgraph cluster_Region_1567646916 {
label = "R(1:(1:(1:13)))";
node [shape=record,color=blue];
subgraph cluster_Region_33360579 {
label = "R(1:(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_665104023 {
label = "IF [B:13:0x0023] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0023|PHI: r3 \l  PHI: (r3v1 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|if ((r0 \>= 0) != true) goto L12\l}"];
subgraph cluster_Region_1987784219 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002b|throw new java.lang.AssertionError()\l}"];
}
}
}
}
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0002}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000c}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000e}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001f}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0020}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0022}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0026}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0010}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x002c|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.scheduling.WorkQueue.decrementIfBlocking((r5v0 'this' kotlinx.coroutines.scheduling.WorkQueue A[IMMUTABLE_TYPE, THIS]), (r6v0 '$this$decrementIfBlocking' kotlinx.coroutines.scheduling.Task A[D('$this$decrementIfBlocking' kotlinx.coroutines.scheduling.Task), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x002c \-\> B:1:?, CROSS_EDGE: B:11:0x0020 \-\> B:13:0x0023, CROSS_EDGE: B:9:0x001d \-\> B:17:0x002c, CROSS_EDGE: B:7:0x0011 \-\> B:17:0x002c, CROSS_EDGE: B:6:0x0010 \-\> B:7:0x0011, CROSS_EDGE: B:2:0x0000 \-\> B:17:0x002c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_2 -> Node_17[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_18[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_19[style=dashed];
Node_13 -> Node_15;
Node_13 -> Node_20[style=dashed];
Node_16 -> Node_1;
Node_0 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_20 -> Node_1;
Node_19 -> Node_1;
Node_18 -> Node_1;
Node_6 -> Node_7;
Node_17 -> Node_1;
}

