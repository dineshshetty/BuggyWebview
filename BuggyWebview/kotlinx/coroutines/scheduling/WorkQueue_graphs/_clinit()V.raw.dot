digraph "CFG forkotlinx.coroutines.scheduling.WorkQueue.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_CLASS  (r0 I:java.lang.Class\<kotlinx.coroutines.scheduling.WorkQueue\>) =  kotlinx.coroutines.scheduling.WorkQueue.class \l0x0002: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Object\>) =  java.lang.Object.class \l0x0004: CONST_STR  (r2 I:java.lang.String) =  \"lastScheduledTask\" \l0x0006: INVOKE  (r1 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) = (r0 I:java.lang.Class), (r1 I:java.lang.Class), (r2 I:java.lang.String) type: STATIC call: java.util.concurrent.atomic.AtomicReferenceFieldUpdater.newUpdater(java.lang.Class, java.lang.Class, java.lang.String):java.util.concurrent.atomic.AtomicReferenceFieldUpdater A[MD:\<U, W\>:(java.lang.Class\<U\>, java.lang.Class\<W\>, java.lang.String):java.util.concurrent.atomic.AtomicReferenceFieldUpdater\<U, W\> (c)]\l0x000a: SPUT  (r1 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) kotlinx.coroutines.scheduling.WorkQueue.lastScheduledTask$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"producerIndex\" \l0x000e: INVOKE  (r1 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater) = (r0 I:java.lang.Class), (r1 I:java.lang.String) type: STATIC call: java.util.concurrent.atomic.AtomicIntegerFieldUpdater.newUpdater(java.lang.Class, java.lang.String):java.util.concurrent.atomic.AtomicIntegerFieldUpdater A[MD:\<U\>:(java.lang.Class\<U\>, java.lang.String):java.util.concurrent.atomic.AtomicIntegerFieldUpdater\<U\> (c)]\l0x0012: SPUT  (r1 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater) kotlinx.coroutines.scheduling.WorkQueue.producerIndex$FU java.util.concurrent.atomic.AtomicIntegerFieldUpdater \l0x0014: CONST_STR  (r1 I:java.lang.String) =  \"consumerIndex\" \l0x0016: INVOKE  (r1 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater) = (r0 I:java.lang.Class), (r1 I:java.lang.String) type: STATIC call: java.util.concurrent.atomic.AtomicIntegerFieldUpdater.newUpdater(java.lang.Class, java.lang.String):java.util.concurrent.atomic.AtomicIntegerFieldUpdater A[MD:\<U\>:(java.lang.Class\<U\>, java.lang.String):java.util.concurrent.atomic.AtomicIntegerFieldUpdater\<U\> (c)]\l0x001a: SPUT  (r1 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater) kotlinx.coroutines.scheduling.WorkQueue.consumerIndex$FU java.util.concurrent.atomic.AtomicIntegerFieldUpdater \l0x001c: CONST_STR  (r1 I:java.lang.String) =  \"blockingTasksInBuffer\" \l0x001e: INVOKE  (r0 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater) = (r0 I:java.lang.Class), (r1 I:java.lang.String) type: STATIC call: java.util.concurrent.atomic.AtomicIntegerFieldUpdater.newUpdater(java.lang.Class, java.lang.String):java.util.concurrent.atomic.AtomicIntegerFieldUpdater A[MD:\<U\>:(java.lang.Class\<U\>, java.lang.String):java.util.concurrent.atomic.AtomicIntegerFieldUpdater\<U\> (c)]\l0x0022: SPUT  (r0 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater) kotlinx.coroutines.scheduling.WorkQueue.blockingTasksInBuffer$FU java.util.concurrent.atomic.AtomicIntegerFieldUpdater \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|RETURN\l|0x0024: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlinx.coroutines.scheduling.WorkQueue.\<clinit\>() }"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

