digraph "CFG forkotlinx.coroutines.scheduling.WorkQueue.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlinx.coroutines.scheduling.WorkQueue.lastScheduledTask$FU = java.util.concurrent.atomic.AtomicReferenceFieldUpdater.newUpdater(kotlinx.coroutines.scheduling.WorkQueue.class, java.lang.Object.class, \"lastScheduledTask\")\lkotlinx.coroutines.scheduling.WorkQueue.producerIndex$FU = java.util.concurrent.atomic.AtomicIntegerFieldUpdater.newUpdater(kotlinx.coroutines.scheduling.WorkQueue.class, \"producerIndex\")\lkotlinx.coroutines.scheduling.WorkQueue.consumerIndex$FU = java.util.concurrent.atomic.AtomicIntegerFieldUpdater.newUpdater(kotlinx.coroutines.scheduling.WorkQueue.class, \"consumerIndex\")\lkotlinx.coroutines.scheduling.WorkQueue.blockingTasksInBuffer$FU = java.util.concurrent.atomic.AtomicIntegerFieldUpdater.newUpdater(kotlinx.coroutines.scheduling.WorkQueue.class, \"blockingTasksInBuffer\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlinx.coroutines.scheduling.WorkQueue.\<clinit\>() }"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

