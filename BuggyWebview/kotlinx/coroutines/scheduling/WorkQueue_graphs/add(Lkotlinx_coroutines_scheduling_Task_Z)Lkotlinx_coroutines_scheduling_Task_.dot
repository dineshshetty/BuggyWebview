digraph "CFG forkotlinx.coroutines.scheduling.WorkQueue.add(Lkotlinx\/coroutines\/scheduling\/Task;Z)Lkotlinx\/coroutines\/scheduling\/Task;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|if (r4 == false) goto L5\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002}"];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|return addLast(r3)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|kotlinx.coroutines.scheduling.Task r0 = (kotlinx.coroutines.scheduling.Task) kotlinx.coroutines.scheduling.WorkQueue.lastScheduledTask$FU.getAndSet(r2, r3)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|if (r0 != null) goto L8\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|return null\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013}"];
Node_10 [shape=record,label="{10\:\ 0x0017|RETURN\l|return addLast(r0)\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.WorkQueue.add((r2v0 'this' kotlinx.coroutines.scheduling.WorkQueue A[IMMUTABLE_TYPE, THIS]), (r3v0 'task' kotlinx.coroutines.scheduling.Task A[D('task' kotlinx.coroutines.scheduling.Task), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'fair' boolean A[D('fair' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0012 \-\> B:1:?, CROSS_EDGE: B:10:0x0017 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

