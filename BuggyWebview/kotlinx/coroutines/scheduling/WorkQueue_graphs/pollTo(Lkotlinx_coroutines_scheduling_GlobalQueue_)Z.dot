digraph "CFG forkotlinx.coroutines.scheduling.WorkQueue.pollTo(Lkotlinx\/coroutines\/scheduling\/GlobalQueue;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlinx.coroutines.scheduling.Task r0 = pollBuffer()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r0 != null) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|return false\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|r3.addLast(r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.scheduling.WorkQueue.pollTo((r2v0 'this' kotlinx.coroutines.scheduling.WorkQueue A[IMMUTABLE_TYPE, THIS]), (r3v0 'queue' kotlinx.coroutines.scheduling.GlobalQueue A[D('queue' kotlinx.coroutines.scheduling.GlobalQueue), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x000c \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

