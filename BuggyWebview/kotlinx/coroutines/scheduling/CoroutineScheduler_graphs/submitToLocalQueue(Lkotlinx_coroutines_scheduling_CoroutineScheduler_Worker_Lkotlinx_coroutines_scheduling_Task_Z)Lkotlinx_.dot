digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.submitToLocalQueue(Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler$Worker;Lkotlinx\/coroutines\/scheduling\/Task;Z)Lkotlinx\/coroutines\/scheduling\/Task;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|if (r4 != null) goto L4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|RETURN\l|return r5\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0003}"];
Node_19 [shape=record,label="{19\:\ 0x0007|if (r4.state != kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.TERMINATED) goto L7\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|RETURN\l|return r5\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a}"];
Node_22 [shape=record,label="{22\:\ 0x0012|if (r5.taskContext.getTaskMode() != 0) goto L12\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014}"];
Node_24 [shape=record,label="{24\:\ 0x0018|if (r4.state != kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.BLOCKING) goto L12\l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|RETURN\l|return r5\l}"];
Node_26 [shape=record,label="{26\:\ 0x001b|r4.mayHaveLocalTasks = true\l}"];
Node_27 [shape=record,label="{27\:\ 0x0024|RETURN\l|return r4.localQueue.add(r5, r6)\l}"];
MethodNode[shape=record,label="{private final kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.CoroutineScheduler.submitToLocalQueue((r3v0 'this' kotlinx.coroutines.scheduling.CoroutineScheduler A[IMMUTABLE_TYPE, THIS]), (r4v0 '$this$submitToLocalQueue' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[D('$this$submitToLocalQueue' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'task' kotlinx.coroutines.scheduling.Task A[D('task' kotlinx.coroutines.scheduling.Task), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'tailDispatch' boolean A[D('tailDispatch' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0009 \-\> B:15:?, CROSS_EDGE: B:25:0x001a \-\> B:15:?, CROSS_EDGE: B:27:0x0024 \-\> B:15:?, CROSS_EDGE: B:22:0x0012 \-\> B:26:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_15;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_15;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_15;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

