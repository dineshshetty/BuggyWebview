digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.incrementCreatedWorkers()I" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: SGET  (r1 I:java.util.concurrent.atomic.AtomicLongFieldUpdater) =  kotlinx.coroutines.scheduling.CoroutineScheduler.controlState$FU java.util.concurrent.atomic.AtomicLongFieldUpdater  (LINE:278)\l0x0003: INVOKE  (r1 I:long) = (r1 I:java.util.concurrent.atomic.AtomicLongFieldUpdater), (r7 I:java.lang.Object) type: VIRTUAL call: java.util.concurrent.atomic.AtomicLongFieldUpdater.incrementAndGet(java.lang.Object):long A[MD:(T):long (c)]\l0x0007: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0008: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: CONST  (r5 I:??[long, double]) = (2097151(0x1fffff, double:1.0361303E\-317) ??[long, double])  (LINE:990)\l0x000c: ARITH  (r5 I:long) = (r5 I:long) & (r1 I:long A[D('state$iv' long)]) \l0x000d: CAST (r1 I:int A[D('state$iv' long)]) = (int) (r5 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|RETURN\l|0x000e: RETURN  (r1 I:int A[D('state$iv' long)])  (LINE:278)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final int kotlinx.coroutines.scheduling.CoroutineScheduler.incrementCreatedWorkers((r7 'this' I:kotlinx.coroutines.scheduling.CoroutineScheduler A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x000e: r1 'state$iv' J\l  0x0008\-0x000e: r3 'this_$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x0009\-0x000e: r4 '$i$f$createdWorkers' I\l  0x0001\-0x000e: r0 '$i$f$incrementCreatedWorkers' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

