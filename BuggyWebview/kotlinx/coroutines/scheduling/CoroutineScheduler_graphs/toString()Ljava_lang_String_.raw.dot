digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.toString()Ljava\/lang\/String;" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:521)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:522)\l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:523)\l0x0003: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:524)\l0x0004: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:525)\l0x0005: NEW_INSTANCE  (r5 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:526)\l0x0007: INVOKE  (r5 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x000a: IGET  (r6 I:kotlinx.coroutines.internal.ResizableAtomicArray\<kotlinx.coroutines.scheduling.CoroutineScheduler$Worker\>) = (r15 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.workers kotlinx.coroutines.internal.ResizableAtomicArray  (LINE:527)\l0x000c: INVOKE  (r6 I:int) = (r6 I:kotlinx.coroutines.internal.ResizableAtomicArray) type: VIRTUAL call: kotlinx.coroutines.internal.ResizableAtomicArray.currentLength():int A[MD:():int (m)]\l0x0010: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0011|LOOP_START\lLOOP:0: B:40:0x0011\-\>B:65:0x0011\l|0x0011: IF  (r7 I:??[int, byte, short, char]) \>= (r6 I:??[int, byte, short, char])  \-\> B:57:0x008c \l}"];
Node_41 [shape=record,label="{41\:\ 0x0013|0x0013: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l0x0016: IGET  (r9 I:kotlinx.coroutines.internal.ResizableAtomicArray\<kotlinx.coroutines.scheduling.CoroutineScheduler$Worker\>) = (r15 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.workers kotlinx.coroutines.internal.ResizableAtomicArray  (LINE:528)\l0x0018: INVOKE  (r9 I:java.lang.Object) = (r9 I:kotlinx.coroutines.internal.ResizableAtomicArray), (r8 I:int A[D('index' int)]) type: VIRTUAL call: kotlinx.coroutines.internal.ResizableAtomicArray.get(int):java.lang.Object A[MD:(int):T (m)]\l0x001c: CHECK_CAST (r9 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) = (kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) (r9 I:??[OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x001e|0x001e: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0021 \l}"];
Node_58 [shape=record,label="{58\:\ 0x0021|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0021|0x0021: IGET  (r10 I:kotlinx.coroutines.scheduling.WorkQueue) = \l  (r9 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[D('worker' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)])\l kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.localQueue kotlinx.coroutines.scheduling.WorkQueue  (LINE:529)\l0x0023: INVOKE  (r10 I:int) = (r10 I:kotlinx.coroutines.scheduling.WorkQueue) type: VIRTUAL call: kotlinx.coroutines.scheduling.WorkQueue.getSize$kotlinx_coroutines_core():int A[MD:():int (m)]\l0x0027: IGET  (r11 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) = \l  (r9 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[D('worker' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)])\l kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.state kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState  (LINE:530)\l0x0029: SGET  (r12 I:int[]) =  kotlinx.coroutines.scheduling.CoroutineScheduler.WhenMappings.$EnumSwitchMapping$0 int[] \l0x002b: INVOKE  (r11 I:int) = (r11 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) type: VIRTUAL call: kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.ordinal():int A[MD:():int (c)]\l0x002f: AGET  (r11 I:??[int, float, short, byte, char]) = (r12 I:??[int, float][]), (r11 I:??[int, short, byte, char]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0031|0x0031: SWITCH  (r11 I:??)\l case 1: goto B:63:0x0088\l case 2: goto B:62:0x006e\l case 3: goto B:61:0x0054\l case 4: goto B:60:0x0038\l case 5: goto B:59:0x0035\l default: goto B:67:0x0011 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0035|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0035|0x0035: ARITH  (r4 I:int) = (r4 I:int A[D('terminated' int)]) + (1 int)  (LINE:544)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0011|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x0011|LOOP_END\lSYNTHETIC\lLOOP:0: B:40:0x0011\-\>B:65:0x0011\l}"];
Node_60 [shape=record,label="{60\:\ 0x0038|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0038|0x0038: ARITH  (r3 I:int) = (r3 I:int A[D('dormant' int)]) + (1 int)  (LINE:541)\l}"];
Node_49 [shape=record,label="{49\:\ 0x003a|0x003a: IF  (r10 I:??[int, byte, short, char] A[D('queueSize' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:69:0x0011  (LINE:542)\l}"];
Node_64 [shape=record,label="{64\:\ 0x003c|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x003c|0x003c: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('queueSizes' java.util.ArrayList)]) \l0x003d: CHECK_CAST (r11 I:java.util.Collection) = (java.util.Collection) (r11 I:??[OBJECT, ARRAY]) \l0x003f: NEW_INSTANCE  (r12 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0041: INVOKE  (r12 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0044: INVOKE  (r12 I:java.lang.StringBuilder), (r10 I:int A[D('queueSize' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0047: CONST  (r13 I:??[int, float, short, byte, char]) = (100 ??[int, float, short, byte, char]) \l0x0049: INVOKE  (r12 I:java.lang.StringBuilder), (r13 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x004c: INVOKE  (r12 I:java.lang.String) = (r12 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0050: INVOKE  (r11 I:java.util.Collection), (r12 I:java.lang.Object) type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_70 [shape=record,label="{70\:\ 0x0011|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x0011|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0054|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0054|0x0054: ARITH  (r2 I:int) = (r2 I:int A[D('cpuWorkers' int)]) + (1 int)  (LINE:537)\l0x0056: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('queueSizes' java.util.ArrayList)])  (LINE:538)\l0x0057: CHECK_CAST (r11 I:java.util.Collection) = (java.util.Collection) (r11 I:??[OBJECT, ARRAY]) \l0x0059: NEW_INSTANCE  (r12 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x005b: INVOKE  (r12 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x005e: INVOKE  (r12 I:java.lang.StringBuilder), (r10 I:int A[D('queueSize' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0061: CONST  (r13 I:??[int, float, short, byte, char]) = (99 ??[int, float, short, byte, char]) \l0x0063: INVOKE  (r12 I:java.lang.StringBuilder), (r13 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0066: INVOKE  (r12 I:java.lang.String) = (r12 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x006a: INVOKE  (r11 I:java.util.Collection), (r12 I:java.lang.Object) type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_71 [shape=record,label="{71\:\ 0x0011|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x006e|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x006e|0x006e: ARITH  (r1 I:int) = (r1 I:int A[D('blockingWorkers' int)]) + (1 int)  (LINE:533)\l0x0070: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('queueSizes' java.util.ArrayList)])  (LINE:534)\l0x0071: CHECK_CAST (r11 I:java.util.Collection) = (java.util.Collection) (r11 I:??[OBJECT, ARRAY]) \l0x0073: NEW_INSTANCE  (r12 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0075: INVOKE  (r12 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0078: INVOKE  (r12 I:java.lang.StringBuilder), (r10 I:int A[D('queueSize' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x007b: CONST  (r13 I:??[int, float, short, byte, char]) = (98 ??[int, float, short, byte, char]) \l0x007d: INVOKE  (r12 I:java.lang.StringBuilder), (r13 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0080: INVOKE  (r12 I:java.lang.String) = (r12 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0084: INVOKE  (r11 I:java.util.Collection), (r12 I:java.lang.Object) type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_72 [shape=record,label="{72\:\ 0x0011|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x0088|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0088|0x0088: ARITH  (r0 I:int) = (r0 I:int A[D('parkedWorkers' int)]) + (1 int)  (LINE:531)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0011|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x0011|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0011|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x008c|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x008c|0x008c: IGET  (r6 I:long) = (r15 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.controlState long  (LINE:547)\l0x008e: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:548)\l0x0090: INVOKE  (r8 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0093: IGET  (r9 I:java.lang.String) = (r15 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.schedulerName java.lang.String \l0x0095: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0098: CONST  (r9 I:??[int, float, short, byte, char]) = (64 ??[int, float, short, byte, char]) \l0x009a: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x009d: INVOKE  (r9 I:java.lang.String) = (r15 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.DebugStringsKt.getHexAddress(java.lang.Object):java.lang.String A[MD:(java.lang.Object):java.lang.String (m)]\l0x00a1: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00a4: CONST_STR  (r9 I:java.lang.String) =  \"[Pool Size \{core = \" \l0x00a6: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00a9: IGET  (r9 I:int) = (r15 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.corePoolSize int  (LINE:550)\l0x00ab: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)] (LINE:548)\l0x00af: CONST_STR  (r9 I:java.lang.String) =  \", max = \"  (LINE:548)\l0x00b1: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00b4: IGET  (r9 I:int) = (r15 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.maxPoolSize int  (LINE:551)\l0x00b6: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)] (LINE:548)\l0x00ba: CONST_STR  (r9 I:java.lang.String) =  \"\}, Worker States \{CPU = \"  (LINE:548)\l0x00bc: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00c0: INVOKE  (r8 I:java.lang.StringBuilder), (r2 I:int A[D('cpuWorkers' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)] (LINE:548)\l0x00c4: CONST_STR  (r9 I:java.lang.String) =  \", blocking = \"  (LINE:548)\l0x00c6: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00ca: INVOKE  (r8 I:java.lang.StringBuilder), (r1 I:int A[D('blockingWorkers' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)] (LINE:548)\l0x00ce: CONST_STR  (r9 I:java.lang.String) =  \", parked = \"  (LINE:548)\l0x00d0: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00d4: INVOKE  (r8 I:java.lang.StringBuilder), (r0 I:int A[D('parkedWorkers' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)] (LINE:548)\l0x00d8: CONST_STR  (r9 I:java.lang.String) =  \", dormant = \"  (LINE:548)\l0x00da: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00de: INVOKE  (r8 I:java.lang.StringBuilder), (r3 I:int A[D('dormant' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)] (LINE:548)\l0x00e2: CONST_STR  (r9 I:java.lang.String) =  \", terminated = \"  (LINE:548)\l0x00e4: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00e8: INVOKE  (r8 I:java.lang.StringBuilder), (r4 I:int A[D('terminated' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)] (LINE:548)\l0x00ec: CONST_STR  (r9 I:java.lang.String) =  \"\}, running workers queues = \"  (LINE:548)\l0x00ee: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00f2: INVOKE  (r8 I:java.lang.StringBuilder), (r5 I:java.lang.Object A[D('queueSizes' java.util.ArrayList)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)] (LINE:548)\l0x00f6: CONST_STR  (r9 I:java.lang.String) =  \", global CPU queue size = \"  (LINE:548)\l0x00f8: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00fb: IGET  (r9 I:kotlinx.coroutines.scheduling.GlobalQueue) = (r15 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.globalCpuQueue kotlinx.coroutines.scheduling.GlobalQueue  (LINE:559)\l0x00fd: INVOKE  (r9 I:int) = (r9 I:kotlinx.coroutines.scheduling.GlobalQueue) type: VIRTUAL call: kotlinx.coroutines.scheduling.GlobalQueue.getSize():int A[MD:():int (m)]\l0x0101: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)] (LINE:548)\l0x0105: CONST_STR  (r9 I:java.lang.String) =  \", global blocking queue size = \"  (LINE:548)\l0x0107: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x010a: IGET  (r9 I:kotlinx.coroutines.scheduling.GlobalQueue) = (r15 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.globalBlockingQueue kotlinx.coroutines.scheduling.GlobalQueue  (LINE:560)\l0x010c: INVOKE  (r9 I:int) = (r9 I:kotlinx.coroutines.scheduling.GlobalQueue) type: VIRTUAL call: kotlinx.coroutines.scheduling.GlobalQueue.getSize():int A[MD:():int (m)]\l0x0110: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)] (LINE:548)\l0x0114: CONST_STR  (r9 I:java.lang.String) =  \", Control State \{created workers= \"  (LINE:548)\l0x0116: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0119: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY])  (LINE:562)\l0x011a: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x011b: CONST  (r11 I:??[long, double]) = (2097151(0x1fffff, double:1.0361303E\-317) ??[long, double])  (LINE:1014)\l0x011e: ARITH  (r11 I:long) = (r11 I:long) & (r6 I:long A[D('state' long)]) \l0x011f: CAST (r9 I:int A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)]) = (int) (r11 I:long) \l0x0120: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:int A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)] (LINE:548)\l0x0124: CONST_STR  (r9 I:java.lang.String) =  \", blocking tasks = \"  (LINE:548)\l0x0126: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0129: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY])  (LINE:563)\l0x012a: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x012b: CONST  (r11 I:??[long, double]) = (4398044413952(0x3ffffe00000, double:2.1729226538177E\-311) ??[long, double])  (LINE:1015)\l0x0130: ARITH  (r11 I:long) = (r11 I:long) & (r6 I:long A[D('state' long)]) \l0x0131: CONST  (r13 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l0x0133: ARITH  (r11 I:long) = (r11 I:long) \>\> (r13 I:long) \l0x0134: CAST (r9 I:int A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)]) = (int) (r11 I:long) \l0x0135: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:int A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)] (LINE:548)\l0x0139: CONST_STR  (r9 I:java.lang.String) =  \", CPUs acquired = \"  (LINE:548)\l0x013b: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x013e: IGET  (r9 I:int) = (r15 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.corePoolSize int  (LINE:564)\l0x0140: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY]) \l0x0141: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0142: CONST  (r12 I:??[long, double]) = (9223367638808264704(0x7ffffc0000000000, double:NaN) ??[long, double])  (LINE:1016)\l0x0147: ARITH  (r12 I:long) = (r12 I:long) & (r6 I:long A[D('state' long)]) \l0x0148: CONST  (r14 I:??[int, float, short, byte, char]) = (42 ??[int, float, short, byte, char]) \l0x014a: ARITH  (r12 I:long) = (r12 I:long) \>\> (r14 I:long) \l0x014b: CAST (r10 I:int A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)]) = (int) (r12 I:long) \l0x014c: ARITH  (r9 I:int) = (r9 I:int) \- (r10 I:int A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)])  (LINE:564)\l0x014d: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)] (LINE:548)\l0x0151: CONST_STR  (r9 I:java.lang.String) =  \"\}]\"  (LINE:548)\l0x0153: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0156: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_56 [shape=record,label="{56\:\ 0x015a|RETURN\l|0x015a: RETURN  (r8 I:java.lang.String) \l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.String kotlinx.coroutines.scheduling.CoroutineScheduler.toString((r15 'this' I:kotlinx.coroutines.scheduling.CoroutineScheduler A[IMMUTABLE_TYPE, THIS]))  | BACK_EDGE: B:47:0x0035 \-\> B:40:0x0011, BACK_EDGE: B:49:0x003a \-\> B:40:0x0011, BACK_EDGE: B:50:0x003c \-\> B:40:0x0011, BACK_EDGE: B:51:0x0054 \-\> B:40:0x0011, BACK_EDGE: B:52:0x006e \-\> B:40:0x0011, BACK_EDGE: B:53:0x0088 \-\> B:40:0x0011, BACK_EDGE: B:45:0x0031 \-\> B:40:0x0011, BACK_EDGE: B:42:0x001e \-\> B:40:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x008b: r9 'worker' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler$Worker;\l  0x0027\-0x008b: r10 'queueSize' I\l  0x0014\-0x008c: r8 'index' I\l  0x011a\-0x0120: r9 'this_$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x011b\-0x0120: r10 '$i$f$createdWorkers' I\l  0x012a\-0x0135: r9 'this_$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x012b\-0x0135: r10 '$i$f$blockingTasks' I\l  0x0141\-0x014c: r10 'this_$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x0142\-0x014c: r11 '$i$f$availableCpuPermits' I\l  0x0001\-0x0169: r0 'parkedWorkers' I\l  0x0002\-0x0169: r1 'blockingWorkers' I\l  0x0003\-0x0169: r2 'cpuWorkers' I\l  0x0004\-0x0169: r3 'dormant' I\l  0x0005\-0x0169: r4 'terminated' I\l  0x000a\-0x0169: r5 'queueSizes' Ljava\/util\/ArrayList;\l  0x008e\-0x0169: r6 'state' J\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [548=27]\}\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_57;
Node_41 -> Node_42;
Node_42 -> Node_58;
Node_42 -> Node_66[style=dashed];
Node_58 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_59;
Node_45 -> Node_60;
Node_45 -> Node_61;
Node_45 -> Node_62;
Node_45 -> Node_63;
Node_45 -> Node_67;
Node_59 -> Node_47;
Node_47 -> Node_68;
Node_68 -> Node_65;
Node_65 -> Node_40;
Node_60 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_64[style=dashed];
Node_49 -> Node_69;
Node_64 -> Node_50;
Node_50 -> Node_70;
Node_70 -> Node_65;
Node_69 -> Node_65;
Node_61 -> Node_51;
Node_51 -> Node_71;
Node_71 -> Node_65;
Node_62 -> Node_52;
Node_52 -> Node_72;
Node_72 -> Node_65;
Node_63 -> Node_53;
Node_53 -> Node_73;
Node_73 -> Node_65;
Node_67 -> Node_65;
Node_66 -> Node_65;
Node_57 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_38;
}

