digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.dispatch(Ljava\/lang\/Runnable;Lkotlinx\/coroutines\/scheduling\/TaskContext;Z)V" {
subgraph cluster_Region_1183048194 {
label = "R(4:1|(1:3)|4|(2:(1:9)|(2:11|(2:(1:(2:(1:17)|(2:18|19)))|(1:20)))))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0000|kotlinx.coroutines.AbstractTimeSource kotlinx.coroutines.AbstractTimeSource r0 = kotlinx.coroutines.AbstractTimeSourceKt.getTimeSource()\l}"];
subgraph cluster_IfRegion_989758361 {
label = "IF [B:28:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0004|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_40135781 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0007|r0.trackTask()\l}"];
}
}
Node_31 [shape=record,label="{31\:\ 0x000a|kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.Task r0 = createTask(r8, r9)\lkotlinx.coroutines.scheduling.CoroutineScheduler$Worker kotlinx.coroutines.scheduling.CoroutineScheduler.Worker r1 = currentWorker()\lkotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.Task r2 = submitToLocalQueue(r1, r0, r10)\l}"];
subgraph cluster_Region_2111190981 {
label = "R(2:(1:9)|(2:11|(2:(1:(2:(1:17)|(2:18|19)))|(1:20))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1476047539 {
label = "IF [B:32:0x0016, B:34:0x001c] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0016|if (r2 != null) goto L6\l}"];
Node_34 [shape=record,label="{34\:\ 0x001c|ADDED_TO_REGION\l|if (addToGlobalQueue(r2) == false) goto L8\l}"];
subgraph cluster_Region_2140455632 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x002c|throw new java.util.concurrent.RejectedExecutionException(kotlin.jvm.internal.Intrinsics.stringPlus(r7.schedulerName, \" was terminated\"))\l}"];
}
}
subgraph cluster_Region_433461339 {
label = "R(2:11|(2:(1:(2:(1:17)|(2:18|19)))|(1:20)))";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x002d|boolean r3 = r10 && r1 != null\l}"];
subgraph cluster_Region_1529274835 {
label = "R(2:(1:(2:(1:17)|(2:18|19)))|(1:20))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1075605928 {
label = "IF [B:43:0x003c] THEN: R(1:(2:(1:17)|(2:18|19))) ELSE: null";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x003c|if (r0.taskContext.getTaskMode() == 0) goto L16\l}"];
subgraph cluster_Region_118277881 {
label = "R(1:(2:(1:17)|(2:18|19)))";
node [shape=record,color=blue];
subgraph cluster_Region_1269346754 {
label = "R(2:(1:17)|(2:18|19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1994189677 {
label = "IF [B:44:0x003e] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x003e|if (r3 == true) goto L17\l}"];
subgraph cluster_Region_317941797 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0040|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_2117549009 {
label = "R(2:18|19)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0041|signalCpuWork()\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
subgraph cluster_Region_1441682735 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x0045|signalBlockingWork(r3)\l}"];
}
}
}
}
}
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0018}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x001f}"];
Node_26 [shape=record,color=red,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x002f|REMOVE\lADDED_TO_REGION\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0031}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0034|PHI: r3 \l  PHI: (r3v1 'skipUnpark' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x0048|ORIG_RETURN\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0033}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.scheduling.CoroutineScheduler.dispatch((r7v0 'this' kotlinx.coroutines.scheduling.CoroutineScheduler A[IMMUTABLE_TYPE, THIS]), (r8v0 'block' java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'taskContext' kotlinx.coroutines.scheduling.TaskContext A[D('taskContext' kotlinx.coroutines.scheduling.TaskContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'tailDispatch' boolean A[D('tailDispatch' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:45:0x0040 \-\> B:26:?, CROSS_EDGE: B:48:0x0048 \-\> B:26:?, CROSS_EDGE: B:47:0x0045 \-\> B:48:0x0048, CROSS_EDGE: B:41:0x0033 \-\> B:42:0x0034, CROSS_EDGE: B:38:0x002d \-\> B:41:0x0033, CROSS_EDGE: B:32:0x0016 \-\> B:38:0x002d, CROSS_EDGE: B:28:0x0004 \-\> B:31:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_25;Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_38[style=dashed];
Node_34 -> Node_36;
Node_34 -> Node_38[style=dashed];
Node_37 -> Node_26;
Node_38 -> Node_39;
Node_38 -> Node_41;
Node_43 -> Node_44;
Node_43 -> Node_47[style=dashed];
Node_44 -> Node_45;
Node_44 -> Node_46[style=dashed];
Node_45 -> Node_26;
Node_46 -> Node_49;
Node_49 -> Node_26;
Node_47 -> Node_48;
Node_25 -> Node_27;
Node_33 -> Node_34;
Node_36 -> Node_37;
Node_39 -> Node_40;
Node_39 -> Node_41;
Node_40 -> Node_42;
Node_42 -> Node_43;
Node_48 -> Node_26;
Node_41 -> Node_42;
}

