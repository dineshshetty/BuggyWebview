digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.createNewWorker()I" {
Node_43 [shape=record,label="{43\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0000|0x0000: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY])  (LINE:463)\l0x0002: IGET  (r2 I:kotlinx.coroutines.internal.ResizableAtomicArray\<kotlinx.coroutines.scheduling.CoroutineScheduler$Worker\>) = (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.workers kotlinx.coroutines.internal.ResizableAtomicArray \l0x0004: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0005|0x0005: MONITOR_ENTER  (r2 I:??[OBJECT, ARRAY] A[D('lock$iv' java.lang.Object)])  (LINE:1006)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0006|0x0006: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_85 [shape=record,label="{85\:\ 0x0007|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_48 [shape=record,label="{48\:\ 0x0007|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0095, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|0x0007: INVOKE  (r4 I:boolean) = (r20 I:kotlinx.coroutines.scheduling.CoroutineScheduler) type: VIRTUAL call: kotlinx.coroutines.scheduling.CoroutineScheduler.isTerminated():boolean A[Catch: all \-\> 0x0095, MD:():boolean (m), TRY_ENTER, TRY_LEAVE] (LINE:465)\l}"];
Node_49 [shape=record,label="{49\:\ 0x000b|0x000b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0010 \l}"];
Node_50 [shape=record,label="{50\:\ 0x000d|0x000d: CONST  (r0 I:??[int, float, short, byte, char] A[D('$i$a$\-synchronized\-CoroutineScheduler$createNewWorker$1' int)]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x000e|0x000e: MONITOR_EXIT  (r2 I:??[OBJECT, ARRAY] A[D('lock$iv' java.lang.Object)]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:int) \l}"];
Node_44 [shape=record,label="{44\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_53 [shape=record,label="{53\:\ 0x0010|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0095, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|0x0010: IGET  (r4 I:long) = (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.controlState long A[Catch: all \-\> 0x0095, TRY_ENTER] (LINE:466)\l0x0012: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY])  (LINE:467)\l0x0014: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: CONST  (r8 I:??[long, double]) = (2097151(0x1fffff, double:1.0361303E\-317) ??[long, double])  (LINE:1007)\l0x0018: ARITH  (r10 I:long) = (r4 I:long A[D('state' long)]) & (r8 I:long) A[Catch: all \-\> 0x0095]\l0x001a: CAST (r6 I:int A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)]) = (int) (r10 I:long) A[Catch: all \-\> 0x0095]\l0x001c: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY])  (LINE:468)\l0x001e: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001f: CONST  (r11 I:??[long, double]) = (4398044413952(0x3ffffe00000, double:2.1729226538177E\-311) ??[long, double])  (LINE:1008)\l0x0024: ARITH  (r11 I:long) = (r11 I:long) & (r4 I:long A[D('state' long)]) A[Catch: all \-\> 0x0095]\l0x0025: CONST  (r13 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l0x0027: ARITH  (r11 I:long) = (r11 I:long) \>\> (r13 I:long) A[Catch: all \-\> 0x0095]\l0x0028: CAST (r7 I:int A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)]) = (int) (r11 I:long) A[Catch: all \-\> 0x0095]\l0x002a: ARITH  (r10 I:int) = (r6 I:int A[D('created' int)]) \- (r7 I:int A[D('blocking' int)]) A[Catch: all \-\> 0x0095] (LINE:469)\l0x002c: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002d: INVOKE  (r10 I:int) = (r10 I:int), (r11 I:int) type: STATIC call: kotlin.ranges.RangesKt.coerceAtLeast(int, int):int A[Catch: all \-\> 0x0095, MD:(int, int):int (m)]\l0x0031: IGET  (r12 I:int) = (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.corePoolSize int A[Catch: all \-\> 0x0095, TRY_LEAVE] (LINE:471)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0033|0x0033: IF  (r10 I:??[int, byte, short, char] A[D('cpuWorkers' int)]) \< (r12 I:??[int, byte, short, char])  \-\> B:57:0x0037 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0035|0x0035: MONITOR_EXIT  (r2 I:??[OBJECT, ARRAY] A[D('lock$iv' java.lang.Object)]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0036|RETURN\l|0x0036: RETURN  (r11 I:int) \l}"];
Node_57 [shape=record,label="{57\:\ 0x0037|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0095, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|0x0037: IGET  (r12 I:int) = (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.maxPoolSize int A[Catch: all \-\> 0x0095, TRY_ENTER, TRY_LEAVE] (LINE:472)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0039|0x0039: IF  (r6 I:??[int, byte, short, char] A[D('created' int)]) \< (r12 I:??[int, byte, short, char])  \-\> B:61:0x003d \l}"];
Node_59 [shape=record,label="{59\:\ 0x003b|0x003b: MONITOR_EXIT  (r2 I:??[OBJECT, ARRAY] A[D('lock$iv' java.lang.Object)]) \l}"];
Node_60 [shape=record,label="{60\:\ 0x003c|RETURN\l|0x003c: RETURN  (r11 I:int) \l}"];
Node_61 [shape=record,label="{61\:\ 0x003d|0x003d: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY])  (LINE:474)\l0x003f: CONST  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x0040|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0095, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|0x0040: IGET  (r14 I:long) = \l  (r12 I:kotlinx.coroutines.scheduling.CoroutineScheduler A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)])\l kotlinx.coroutines.scheduling.CoroutineScheduler.controlState long A[Catch: all \-\> 0x0095, TRY_ENTER] (LINE:1009)\l0x0042: ARITH  (r14 I:long) = (r14 I:long) & (r8 I:long) A[Catch: all \-\> 0x0095]\l0x0043: CAST (r12 I:int A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)]) = (int) (r14 I:long) A[Catch: all \-\> 0x0095]\l0x0044: CONST  (r13 I:??[boolean, int, float, short, byte, char] A[D('$i$f$getCreatedWorkers' int)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:474)\l0x0045: ARITH  (r12 I:int) = (r12 I:int) + (r13 I:int) A[Catch: all \-\> 0x0095]\l}"];
Node_63 [shape=record,label="{63\:\ 0x0046|0x0046: IF  (r12 I:??[int, byte, short, char] A[D('newIndex' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:67:0x0052  (LINE:475)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0048|TryCatch #0 \{all \-\> 0x0095, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|0x0048: IGET  (r14 I:kotlinx.coroutines.internal.ResizableAtomicArray\<kotlinx.coroutines.scheduling.CoroutineScheduler$Worker\>) = (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.workers kotlinx.coroutines.internal.ResizableAtomicArray A[Catch: all \-\> 0x0095]\l0x004a: INVOKE  (r14 I:java.lang.Object) = (r14 I:kotlinx.coroutines.internal.ResizableAtomicArray), (r12 I:int A[D('newIndex' int)]) type: VIRTUAL call: kotlinx.coroutines.internal.ResizableAtomicArray.get(int):java.lang.Object A[Catch: all \-\> 0x0095, MD:(int):T (m)]\l}"];
Node_65 [shape=record,label="{65\:\ 0x004e|0x004e: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x0052 \l}"];
Node_66 [shape=record,label="{66\:\ 0x0050|0x0050: CONST  (r14 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0051: GOTO  \-\> 0x0053 \l}"];
Node_68 [shape=record,label="{68\:\ 0x0053|0x0053: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x0089 \l}"];
Node_69 [shape=record,label="{69\:\ 0x0055|TryCatch #0 \{all \-\> 0x0095, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|0x0055: NEW_INSTANCE  (r14 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) =  kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[Catch: all \-\> 0x0095] (LINE:481)\l0x0057: INVOKE  \l  (r14 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)\l  (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler)\l  (r12 I:int A[D('newIndex' int)])\l type: DIRECT call: kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.\<init\>(kotlinx.coroutines.scheduling.CoroutineScheduler, int):void A[Catch: all \-\> 0x0095, MD:(kotlinx.coroutines.scheduling.CoroutineScheduler, int):void (m)]\l0x005a: IGET  (r15 I:kotlinx.coroutines.internal.ResizableAtomicArray\<kotlinx.coroutines.scheduling.CoroutineScheduler$Worker\>) = (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.workers kotlinx.coroutines.internal.ResizableAtomicArray A[Catch: all \-\> 0x0095] (LINE:482)\l0x005c: INVOKE  \l  (r15 I:kotlinx.coroutines.internal.ResizableAtomicArray)\l  (r12 I:int A[D('newIndex' int)])\l  (r14 I:java.lang.Object A[D('worker' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)])\l type: VIRTUAL call: kotlinx.coroutines.internal.ResizableAtomicArray.setSynchronized(int, java.lang.Object):void A[Catch: all \-\> 0x0095, MD:(int, T):void (m)]\l0x005f: MOVE  (r15 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY])  (LINE:483)\l0x0061: CONST  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0063: SGET  (r11 I:java.util.concurrent.atomic.AtomicLongFieldUpdater) =  kotlinx.coroutines.scheduling.CoroutineScheduler.controlState$FU java.util.concurrent.atomic.AtomicLongFieldUpdater A[Catch: all \-\> 0x0095] (LINE:1010)\l0x0065: INVOKE  (r17 I:long) = \l  (r11 I:java.util.concurrent.atomic.AtomicLongFieldUpdater)\l  (r15 I:java.lang.Object A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)])\l type: VIRTUAL call: java.util.concurrent.atomic.AtomicLongFieldUpdater.incrementAndGet(java.lang.Object):long A[Catch: all \-\> 0x0095, MD:(T):long (c)]\l0x0069: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY] A[D('this_$iv' kotlinx.coroutines.scheduling.CoroutineScheduler)]) \l0x006a: CONST  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x006c: ARITH  (r8 I:long) = (r17 I:long A[D('state$iv$iv' long)]) & (r8 I:long) A[Catch: all \-\> 0x0095] (LINE:1011)\l0x006e: CAST (r9 I:int) = (int) (r8 I:long) A[Catch: all \-\> 0x0095]\l}"];
Node_70 [shape=record,label="{70\:\ 0x0070|0x0070: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newIndex' int)]) != (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0074 \l}"];
Node_71 [shape=record,label="{71\:\ 0x0072|0x0072: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0073: GOTO  \-\> 0x0075 \l}"];
Node_73 [shape=record,label="{73\:\ 0x0075|0x0075: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:78:0x007d \l}"];
Node_74 [shape=record,label="{74\:\ 0x0077|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0095, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|0x0077: INVOKE  \l  (r14 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[D('worker' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)])\l type: VIRTUAL call: kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.start():void A[Catch: all \-\> 0x0095, MD:():void (c), TRY_LEAVE] (LINE:484)\l}"];
Node_75 [shape=record,label="{75\:\ 0x007a|0x007a: ARITH  (r10 I:int) = (r10 I:int A[D('cpuWorkers' int)]) + (r13 I:int)  (LINE:485)\l}"];
Node_76 [shape=record,label="{76\:\ 0x007b|0x007b: MONITOR_EXIT  (r2 I:??[OBJECT, ARRAY] A[D('lock$iv' java.lang.Object)]) \l}"];
Node_77 [shape=record,label="{77\:\ 0x007c|RETURN\l|0x007c: RETURN  (r10 I:int) \l}"];
Node_78 [shape=record,label="{78\:\ 0x007d|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0095, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|0x007d: CONST_STR  (r8 I:java.lang.String) =  \"Failed requirement.\" A[TRY_ENTER] (LINE:1010)\l0x007f: NEW_INSTANCE  (r9 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException A[Catch: all \-\> 0x0095]\l0x0081: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[Catch: all \-\> 0x0095, MD:():java.lang.String (c)]\l0x0085: INVOKE  (r9 I:java.lang.IllegalArgumentException), (r8 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[Catch: all \-\> 0x0095, MD:(java.lang.String):void (c)]\l}"];
Node_79 [shape=record,label="{79\:\ 0x0088|TryCatch #0 \{all \-\> 0x0095, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|0x0088: THROW  (r9 I:java.lang.Throwable) A[Catch: all \-\> 0x0095]\l}"];
Node_72 [shape=record,label="{72\:\ 0x0074|0x0074: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_80 [shape=record,label="{80\:\ 0x0089|TryCatch #0 \{all \-\> 0x0095, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|0x0089: CONST_STR  (r8 I:java.lang.String) =  \"Failed requirement.\"  (LINE:475)\l0x008b: NEW_INSTANCE  (r9 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException A[Catch: all \-\> 0x0095]\l0x008d: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[Catch: all \-\> 0x0095, MD:():java.lang.String (c)]\l0x0091: INVOKE  (r9 I:java.lang.IllegalArgumentException), (r8 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[Catch: all \-\> 0x0095, MD:(java.lang.String):void (c)]\l}"];
Node_81 [shape=record,label="{81\:\ 0x0094|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0095, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|0x0094: THROW  (r9 I:java.lang.Throwable) A[Catch: all \-\> 0x0095, TRY_LEAVE]\l}"];
Node_67 [shape=record,label="{67\:\ 0x0052|0x0052: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_82 [shape=record,label="{82\:\ 0x0095|ExcHandler: all \-\> 0x0095\l|0x0095: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0095] (LINE:485)\l}"];
Node_84 [shape=record,label="{84\:\ 0x0097|0x0097: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private final int kotlinx.coroutines.scheduling.CoroutineScheduler.createNewWorker((r20 'this' I:kotlinx.coroutines.scheduling.CoroutineScheduler A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:56:0x0036 \-\> B:44:?, CROSS_EDGE: B:60:0x003c \-\> B:44:?, CROSS_EDGE: B:77:0x007c \-\> B:44:?, CROSS_EDGE: B:79:0x0088 \-\> B:44:?, CROSS_EDGE: B:72:0x0074 \-\> B:73:0x0075, CROSS_EDGE: B:81:0x0094 \-\> B:44:?, CROSS_EDGE: B:67:0x0052 \-\> B:68:0x0053, CROSS_EDGE: B:63:0x0046 \-\> B:67:0x0052, CROSS_EDGE: B:84:0x0097 \-\> B:44:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x000e: r0 '$i$a$\-synchronized\-CoroutineScheduler$createNewWorker$1' I\l  0x0004\-0x000e: r2 'lock$iv' Ljava\/lang\/Object;\l  0x0005\-0x000e: r3 '$i$f$synchronized' I\l  0x0014\-0x001b: r6 'this_$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x0015\-0x001b: r7 '$i$f$createdWorkers' I\l  0x001e\-0x0029: r7 'this_$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x001f\-0x0029: r10 '$i$f$blockingTasks' I\l  0x0010\-0x0035: r0 '$i$a$\-synchronized\-CoroutineScheduler$createNewWorker$1' I\l  0x0010\-0x0035: r2 'lock$iv' Ljava\/lang\/Object;\l  0x0010\-0x0035: r3 '$i$f$synchronized' I\l  0x0012\-0x0035: r4 'state' J\l  0x001c\-0x0035: r6 'created' I\l  0x002a\-0x0035: r7 'blocking' I\l  0x0031\-0x0035: r10 'cpuWorkers' I\l  0x0037\-0x003b: r0 '$i$a$\-synchronized\-CoroutineScheduler$createNewWorker$1' I\l  0x0037\-0x003b: r2 'lock$iv' Ljava\/lang\/Object;\l  0x0037\-0x003b: r3 '$i$f$synchronized' I\l  0x0037\-0x003b: r4 'state' J\l  0x0037\-0x003b: r6 'created' I\l  0x0037\-0x003b: r7 'blocking' I\l  0x0037\-0x003b: r10 'cpuWorkers' I\l  0x003f\-0x0044: r12 'this_$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x0040\-0x0044: r13 '$i$f$getCreatedWorkers' I\l  0x006a\-0x006f: r11 'this_$iv$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x0069\-0x006f: r17 'state$iv$iv' J\l  0x006c\-0x006f: r19 '$i$f$createdWorkers' I\l  0x0061\-0x0070: r15 'this_$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x0063\-0x0070: r16 '$i$f$incrementCreatedWorkers' I\l  0x003d\-0x007b: r0 '$i$a$\-synchronized\-CoroutineScheduler$createNewWorker$1' I\l  0x003d\-0x007b: r2 'lock$iv' Ljava\/lang\/Object;\l  0x003d\-0x007b: r3 '$i$f$synchronized' I\l  0x003d\-0x007b: r4 'state' J\l  0x003d\-0x007b: r6 'created' I\l  0x003d\-0x007b: r7 'blocking' I\l  0x003d\-0x007b: r10 'cpuWorkers' I\l  0x0046\-0x007b: r12 'newIndex' I\l  0x005a\-0x007b: r14 'worker' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler$Worker;\l  0x007d\-0x0088: r2 'lock$iv' Ljava\/lang\/Object;\l  0x007d\-0x0088: r3 '$i$f$synchronized' I\l  0x007d\-0x0089: r14 'worker' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler$Worker;\l  0x0089\-0x0094: r2 'lock$iv' Ljava\/lang\/Object;\l  0x0089\-0x0094: r3 '$i$f$synchronized' I\l  0x007d\-0x0095: r0 '$i$a$\-synchronized\-CoroutineScheduler$createNewWorker$1' I\l  0x007d\-0x0095: r4 'state' J\l  0x007d\-0x0095: r6 'created' I\l  0x007d\-0x0095: r7 'blocking' I\l  0x007d\-0x0095: r10 'cpuWorkers' I\l  0x007d\-0x0095: r12 'newIndex' I\l  0x0095\-0x0097: r2 'lock$iv' Ljava\/lang\/Object;\l  0x0095\-0x0097: r3 '$i$f$synchronized' I\lTryCatch #0 \{all \-\> 0x0095, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\l}"];
MethodNode -> Node_43;Node_43 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_85;
Node_85 -> Node_48;
Node_85 -> Node_82;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_53;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_44;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_57;
Node_55 -> Node_56;
Node_56 -> Node_44;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_61;
Node_59 -> Node_60;
Node_60 -> Node_44;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_67;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_67;
Node_66 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_80;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_72;
Node_71 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_78;
Node_74 -> Node_75;
Node_75 -> Node_76;
Node_76 -> Node_77;
Node_77 -> Node_44;
Node_78 -> Node_79;
Node_79 -> Node_44;
Node_72 -> Node_73;
Node_80 -> Node_81;
Node_81 -> Node_44;
Node_67 -> Node_68;
Node_82 -> Node_84;
Node_84 -> Node_44;
}

