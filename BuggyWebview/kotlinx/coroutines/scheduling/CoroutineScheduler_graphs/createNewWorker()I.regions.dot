digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.createNewWorker()I" {
subgraph cluster_Region_900439351 {
label = "R(2:1|5)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0000|kotlinx.coroutines.internal.ResizableAtomicArray\<kotlinx.coroutines.scheduling.CoroutineScheduler$Worker\> java.lang.Object r2 = r20.workers\l}"];
subgraph cluster_SynchronizedRegion_1673848301 {
label = "Synchronized:R(2:2|(1:(2:(1:9)|(2:11|(2:(1:14)|(1:(2:(1:18)|(2:20|(2:(2:26|(2:(2:30|33)|(1:35)))|(1:38))))))))))";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0005}"];
subgraph cluster_Region_1744044459 {
label = "R(1:(2:(1:9)|(2:11|(2:(1:14)|(1:(2:(1:18)|(2:20|(2:(2:26|(2:(2:30|33)|(1:35)))|(1:38)))))))))";
node [shape=record,color=blue];
subgraph cluster_Region_671881188 {
label = "R(2:(1:9)|(2:11|(2:(1:14)|(1:(2:(1:18)|(2:20|(2:(2:26|(2:(2:30|33)|(1:35)))|(1:38))))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1769834547 {
label = "IF [B:49:0x000b] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x000b|if (isTerminated() == true) goto L7\l}"];
subgraph cluster_Region_507010859 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x000f|RETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_2048480219 {
label = "R(2:11|(2:(1:14)|(1:(2:(1:18)|(2:20|(2:(2:26|(2:(2:30|33)|(1:35)))|(1:38)))))))";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0010|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|long long r4 = r20.controlState     \/\/ Catch: java.lang.Throwable \-\> L95\lint int r6 = (int) (r4 & 2097151)     \/\/ Catch: java.lang.Throwable \-\> L95\lint int r7 = (int) ((kotlinx.coroutines.scheduling.CoroutineScheduler.BLOCKING_MASK & r4) \>\> 21)     \/\/ Catch: java.lang.Throwable \-\> L95\lint int r10 = kotlin.ranges.RangesKt.coerceAtLeast(r6 \- r7, 0)     \/\/ Catch: java.lang.Throwable \-\> L95\l}"];
subgraph cluster_Region_1493625886 {
label = "R(2:(1:14)|(1:(2:(1:18)|(2:20|(2:(2:26|(2:(2:30|33)|(1:35)))|(1:38))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_570397365 {
label = "IF [B:54:0x0033] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0033|if (r10 \>= r20.corePoolSize) goto L13\l}"];
subgraph cluster_Region_301818861 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x0036|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_348409329 {
label = "R(1:(2:(1:18)|(2:20|(2:(2:26|(2:(2:30|33)|(1:35)))|(1:38)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1213827397 {
label = "R(2:(1:18)|(2:20|(2:(2:26|(2:(2:30|33)|(1:35)))|(1:38))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1213525165 {
label = "IF [B:58:0x0039] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0039|if (r6 \>= r20.maxPoolSize) goto L17\l}"];
subgraph cluster_Region_642906700 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x003c|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_1432875024 {
label = "R(2:20|(2:(2:26|(2:(2:30|33)|(1:35)))|(1:38)))";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x0040|TRY_ENTER\lTryCatch #0 \{, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|int int r12 = ((int) (r20.controlState & 2097151)) + 1     \/\/ Catch: java.lang.Throwable \-\> L95\l}"];
subgraph cluster_Region_1548293984 {
label = "R(2:(2:26|(2:(2:30|33)|(1:35)))|(1:38))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_976838549 {
label = "IF [B:68:0x0053] THEN: R(2:26|(2:(2:30|33)|(1:35))) ELSE: null";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x0053|PHI: r14 \l  PHI: (r14v3 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r12 \> 0 && r20.workers.get(r12) == null) != false) goto L26\l}"];
subgraph cluster_Region_1737365597 {
label = "R(2:26|(2:(2:30|33)|(1:35)))";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x0055|TryCatch #0 \{, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|kotlinx.coroutines.scheduling.CoroutineScheduler$Worker kotlinx.coroutines.scheduling.CoroutineScheduler.Worker r14 = new kotlinx.coroutines.scheduling.CoroutineScheduler.Worker(r12)     \/\/ Catch: java.lang.Throwable \-\> L95\lr20.workers.setSynchronized(r12, r14)     \/\/ Catch: java.lang.Throwable \-\> L95\llong long r17 = kotlinx.coroutines.scheduling.CoroutineScheduler.controlState$FU.incrementAndGet(r20)     \/\/ Catch: java.lang.Throwable \-\> L95\l}"];
subgraph cluster_Region_1792303837 {
label = "R(2:(2:30|33)|(1:35))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_96166886 {
label = "IF [B:73:0x0075] THEN: R(2:30|33) ELSE: null";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x0075|PHI: r11 \l  PHI: (r11v7 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r12 == ((int) (r17 & 2097151))) != false) goto L30\l}"];
subgraph cluster_Region_1699803370 {
label = "R(2:30|33)";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x0077|TRY_LEAVE\lTryCatch #0 \{, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|r14.start()     \/\/ Catch: java.lang.Throwable \-\> L95\l}"];
Node_77 [shape=record,label="{77\:\ 0x007c|RETURN\l|return r10 + 1\l}"];
}
}
subgraph cluster_Region_1849937251 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x0088|TryCatch #0 \{, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|throw new java.lang.IllegalArgumentException(\"Failed requirement.\".toString())     \/\/ Catch: java.lang.Throwable \-\> L95\l}"];
}
}
}
}
subgraph cluster_Region_1198119293 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_81 [shape=record,label="{81\:\ 0x0094|TRY_LEAVE\lTryCatch #0 \{, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l|throw new java.lang.IllegalArgumentException(\"Failed requirement.\".toString())     \/\/ Catch: java.lang.Throwable \-\> L95\l}"];
}
}
}
}
}
}
}
}
}
}
}
Node_43 [shape=record,color=red,label="{43\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0006}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x0007|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x0007|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x000d}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x000e|DONT_GENERATE\l|monitor\-exit()\l}"];
Node_44 [shape=record,color=red,label="{44\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x0035|DONT_GENERATE\l|monitor\-exit()\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x0037|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x003b|DONT_GENERATE\l|monitor\-exit()\l}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x003d}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0046}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0048|TryCatch #0 \{, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x004e|REMOVE\lADDED_TO_REGION\l}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0050}"];
Node_70 [shape=record,color=red,label="{70\:\ 0x0070}"];
Node_71 [shape=record,color=red,label="{71\:\ 0x0072}"];
Node_75 [shape=record,color=red,label="{75\:\ 0x007a}"];
Node_76 [shape=record,color=red,label="{76\:\ 0x007b|DONT_GENERATE\l|monitor\-exit()\l}"];
Node_78 [shape=record,color=red,label="{78\:\ 0x007d|TRY_ENTER\lTryCatch #0 \{, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l}"];
Node_72 [shape=record,color=red,label="{72\:\ 0x0074}"];
Node_80 [shape=record,color=red,label="{80\:\ 0x0089|TryCatch #0 \{, blocks: (B:48:0x0007, B:53:0x0010, B:57:0x0037, B:62:0x0040, B:64:0x0048, B:69:0x0055, B:74:0x0077, B:78:0x007d, B:79:0x0088, B:80:0x0089, B:81:0x0094), top: B:85:0x0007 \}\lCatch: all \-\> 0x0095\l}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x0052}"];
Node_82 [shape=record,color=red,label="{82\:\ 0x0095|REMOVE\lExcHandler: all \-\> 0x0095\l}"];
Node_84 [shape=record,color=red,label="{84\:\ 0x0097|REMOVE\l|throw r0\l}"];
MethodNode[shape=record,label="{private final int kotlinx.coroutines.scheduling.CoroutineScheduler.createNewWorker((r20v0 'this' kotlinx.coroutines.scheduling.CoroutineScheduler A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:56:0x0036 \-\> B:44:?, CROSS_EDGE: B:60:0x003c \-\> B:44:?, CROSS_EDGE: B:77:0x007c \-\> B:44:?, CROSS_EDGE: B:79:0x0088 \-\> B:44:?, CROSS_EDGE: B:72:0x0074 \-\> B:73:0x0075, CROSS_EDGE: B:81:0x0094 \-\> B:44:?, CROSS_EDGE: B:67:0x0052 \-\> B:68:0x0053, CROSS_EDGE: B:63:0x0046 \-\> B:67:0x0052, CROSS_EDGE: B:84:0x0097 \-\> B:44:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_43;Node_45 -> Node_46;
Node_46 -> Node_47;
Node_49 -> Node_50;
Node_49 -> Node_53[style=dashed];
Node_52 -> Node_44;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_54 -> Node_57[style=dashed];
Node_56 -> Node_44;
Node_58 -> Node_59;
Node_58 -> Node_61[style=dashed];
Node_60 -> Node_44;
Node_62 -> Node_63;
Node_68 -> Node_69;
Node_68 -> Node_80[style=dashed];
Node_69 -> Node_70;
Node_73 -> Node_74;
Node_73 -> Node_78[style=dashed];
Node_74 -> Node_75;
Node_77 -> Node_44;
Node_79 -> Node_44;
Node_81 -> Node_44;
Node_43 -> Node_45;
Node_47 -> Node_85;
Node_85 -> Node_48;
Node_85 -> Node_82;
Node_48 -> Node_49;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_55 -> Node_56;
Node_57 -> Node_58;
Node_59 -> Node_60;
Node_61 -> Node_62;
Node_63 -> Node_64;
Node_63 -> Node_67;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_65 -> Node_67;
Node_66 -> Node_68;
Node_70 -> Node_71;
Node_70 -> Node_72;
Node_71 -> Node_73;
Node_75 -> Node_76;
Node_76 -> Node_77;
Node_78 -> Node_79;
Node_72 -> Node_73;
Node_80 -> Node_81;
Node_67 -> Node_68;
Node_82 -> Node_84;
Node_84 -> Node_44;
}

