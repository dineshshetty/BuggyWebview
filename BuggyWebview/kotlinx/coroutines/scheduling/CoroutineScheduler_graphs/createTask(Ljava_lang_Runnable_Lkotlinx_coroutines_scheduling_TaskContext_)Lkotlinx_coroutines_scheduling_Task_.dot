digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.createTask(Ljava\/lang\/Runnable;Lkotlinx\/coroutines\/scheduling\/TaskContext;)Lkotlinx\/coroutines\/scheduling\/Task;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|long r0 = kotlinx.coroutines.scheduling.TasksKt.schedulerTimeSource.nanoTime()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0008|if ((r4 instanceof kotlinx.coroutines.scheduling.Task) == false) goto L6\l}"];
Node_12 [shape=record,label="{12\:\ 0x000a|((kotlinx.coroutines.scheduling.Task) r4).submissionTime = r0\l((kotlinx.coroutines.scheduling.Task) r4).taskContext = r5\l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|RETURN\l|return (kotlinx.coroutines.scheduling.Task) r4\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0018}"];
Node_15 [shape=record,label="{15\:\ 0x001f|RETURN\l|return new kotlinx.coroutines.scheduling.TaskImpl(r4, r0, r5)\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.CoroutineScheduler.createTask((r3v0 'this' kotlinx.coroutines.scheduling.CoroutineScheduler A[IMMUTABLE_TYPE, THIS]), (r4v0 'block' java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'taskContext' kotlinx.coroutines.scheduling.TaskContext A[D('taskContext' kotlinx.coroutines.scheduling.TaskContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x001f \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

