digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.getAvailableCpuPermits()I" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: IGET  (r1 I:long) = (r8 I:kotlinx.coroutines.scheduling.CoroutineScheduler) kotlinx.coroutines.scheduling.CoroutineScheduler.controlState long  (LINE:271)\l0x0003: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x0004: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: CONST  (r5 I:??[long, double]) = (9223367638808264704(0x7ffffc0000000000, double:NaN) ??[long, double])  (LINE:989)\l0x000a: ARITH  (r5 I:long) = (r5 I:long) & (r1 I:long A[D('state$iv' long)]) \l0x000b: CONST  (r7 I:??[int, float, short, byte, char]) = (42 ??[int, float, short, byte, char]) \l0x000d: ARITH  (r5 I:long) = (r5 I:long) \>\> (r7 I:long) \l0x000e: CAST (r1 I:int A[D('state$iv' long)]) = (int) (r5 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|RETURN\l|0x000f: RETURN  (r1 I:int A[D('state$iv' long)])  (LINE:271)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final int kotlinx.coroutines.scheduling.CoroutineScheduler.getAvailableCpuPermits((r8 'this' I:kotlinx.coroutines.scheduling.CoroutineScheduler A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0003\-0x000f: r1 'state$iv' J\l  0x0004\-0x000f: r3 'this_$iv' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler;\l  0x0005\-0x000f: r4 '$i$f$availableCpuPermits' I\l  0x0001\-0x000f: r0 '$i$f$getAvailableCpuPermits' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

