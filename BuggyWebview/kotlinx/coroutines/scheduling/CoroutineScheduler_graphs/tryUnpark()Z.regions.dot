digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.tryUnpark()Z" {
subgraph cluster_Region_1338489903 {
label = "R(3:(2:1|(1:(1:10)))|6|7) | DECL_VAR: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker worker\l";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_481922421 {
label = "LOOP:0: (2:1|(1:(1:10)))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0010|LOOP_END\lLOOP:0: B:14:0x0000\-\>B:18:0x0010\l|if (kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.workerCtl$FU.compareAndSet(r0, \-1, 0) == false) goto L1\l}"];
subgraph cluster_Region_862579739 {
label = "R(2:1|(1:(1:10)))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|LOOP_START\lLOOP:0: B:14:0x0000\-\>B:18:0x0010\l|kotlinx.coroutines.scheduling.CoroutineScheduler$Worker r0 = parkedWorkersStackPop()\l}"];
subgraph cluster_Region_1293753617 {
label = "R(1:(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_786198001 {
label = "IF [B:15:0x0006] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0006|if (r0 == null) goto L9\l}"];
subgraph cluster_Region_555334397 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0008|RETURN\l|return false\l}"];
}
}
}
}
}
Node_19 [shape=record,label="{19\:\ 0x0012|java.util.concurrent.locks.LockSupport.unpark(r0)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0019|RETURN\l|return true\l}"];
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0009}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0012|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0008|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.scheduling.CoroutineScheduler.tryUnpark((r4v0 'this' kotlinx.coroutines.scheduling.CoroutineScheduler A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0019 \-\> B:13:?, BACK_EDGE: B:18:0x0010 \-\> B:14:0x0000\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_18 -> Node_14;
Node_18 -> Node_22[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_17[style=dashed];
Node_15 -> Node_23;
Node_16 -> Node_13;
Node_19 -> Node_20;
Node_20 -> Node_13;
Node_12 -> Node_14;
Node_17 -> Node_18;
Node_22 -> Node_19;
Node_23 -> Node_16;
}

