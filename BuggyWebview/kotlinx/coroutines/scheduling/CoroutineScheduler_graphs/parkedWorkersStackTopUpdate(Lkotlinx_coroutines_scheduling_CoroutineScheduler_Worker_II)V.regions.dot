digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.parkedWorkersStackTopUpdate(Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler$Worker;II)V" {
subgraph cluster_Region_685125508 {
label = "R(1:(4:2|(1:(1:5)(1:17))(1:18)|6|(1:(1:12)))) | DECL_VAR: int null\l";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1017056392 {
label = "LOOP:0: (4:2|(1:(1:5)(1:17))(1:18)|6|(1:(1:12)))";
node [shape=record,color=blue];
subgraph cluster_Region_500619287 {
label = "R(4:2|(1:(1:5)(1:17))(1:18)|6|(1:(1:12)))";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0003|LOOP_START\lLOOP:0: B:25:0x0003\-\>B:41:0x0003\l|long long r8 = r16.parkedWorkersStack\lint int r11 = (int) (2097151 & r8)\llong long r12 = (kotlinx.coroutines.scheduling.CoroutineScheduler.PARKED_VERSION_INC + r8) & kotlinx.coroutines.scheduling.CoroutineScheduler.PARKED_VERSION_MASK\l}"];
subgraph cluster_IfRegion_1850987329 {
label = "IF [B:26:0x0017] THEN: R(1:(1:5)(1:17)) ELSE: R(1:18)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0017|if (r11 == r18) goto L4\l}"];
subgraph cluster_Region_583312059 {
label = "R(1:(1:5)(1:17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_112322005 {
label = "IF [B:27:0x0019] THEN: R(1:5) ELSE: R(1:17)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0019|if (r19 == 0) goto L5\l}"];
subgraph cluster_Region_140303697 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x001b|int r2 = parkedWorkersStackNextIndex(r17)\l}"];
}
subgraph cluster_Region_1470037597 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0020|r2 = r19\l}"];
}
}
}
subgraph cluster_Region_2091091902 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0023|r2 = r11\l}"];
}
}
Node_31 [shape=record,label="{31\:\ 0x0024|PHI: r2 \l  PHI: (r2v5 int) = (r2v4 int), (r2v8 int), (r2v9 int) binds: [B:30:0x0023, B:29:0x0020, B:28:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|int r15 = r2\l}"];
subgraph cluster_Region_520241288 {
label = "R(1:(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_553643083 {
label = "IF [B:32:0x0025, B:35:0x0034] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0025|if (r15 \>= 0) goto L8\l}"];
Node_35 [shape=record,label="{35\:\ 0x0034|ADDED_TO_REGION\l|if (kotlinx.coroutines.scheduling.CoroutineScheduler.parkedWorkersStack$FU.compareAndSet(r16, r8, r12 \| r15) != false) goto L11\l}"];
subgraph cluster_Region_1539175596 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0036|RETURN\l|return\l}"];
}
}
}
}
}
}
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0000}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0028|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0028}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0036|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0003|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0003|LOOP_END\lSYNTHETIC\lLOOP:0: B:25:0x0003\-\>B:41:0x0003\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0003|SYNTHETIC\lADDED_TO_REGION\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.scheduling.CoroutineScheduler.parkedWorkersStackTopUpdate((r16v0 'this' kotlinx.coroutines.scheduling.CoroutineScheduler A[IMMUTABLE_TYPE, THIS]), (r17v0 'worker' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[D('worker' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'oldIndex' int A[D('oldIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'newIndex' int A[D('newIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:35:0x0034 \-\> B:25:0x0003, BACK_EDGE: B:32:0x0025 \-\> B:25:0x0003, CROSS_EDGE: B:29:0x0020 \-\> B:31:0x0024, CROSS_EDGE: B:30:0x0023 \-\> B:31:0x0024\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_22;Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_30[style=dashed];
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_39;
Node_32 -> Node_42[style=dashed];
Node_35 -> Node_40;
Node_35 -> Node_43[style=dashed];
Node_36 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_39 -> Node_34;
Node_34 -> Node_35;
Node_40 -> Node_36;
Node_43 -> Node_41;
Node_41 -> Node_25;
Node_42 -> Node_41;
}

