digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.decrementBlockingTasks()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: SGET  (r1 I:java.util.concurrent.atomic.AtomicLongFieldUpdater) =  kotlinx.coroutines.scheduling.CoroutineScheduler.controlState$FU java.util.concurrent.atomic.AtomicLongFieldUpdater  (LINE:284)\l0x0003: CONST  (r2 I:??[long, double]) = (\-2097152(0xffffffffffe00000, double:NaN) ??[long, double]) \l0x0006: INVOKE  (r1 I:java.util.concurrent.atomic.AtomicLongFieldUpdater), (r4 I:java.lang.Object), (r2 I:long) type: VIRTUAL call: java.util.concurrent.atomic.AtomicLongFieldUpdater.addAndGet(java.lang.Object, long):long A[MD:(T, long):long (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:285)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.scheduling.CoroutineScheduler.decrementBlockingTasks((r4 'this' I:kotlinx.coroutines.scheduling.CoroutineScheduler A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0009: r0 '$i$f$decrementBlockingTasks' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

