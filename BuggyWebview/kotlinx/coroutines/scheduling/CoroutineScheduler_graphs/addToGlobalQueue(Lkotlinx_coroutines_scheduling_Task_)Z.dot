digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.addToGlobalQueue(Lkotlinx\/coroutines\/scheduling\/Task;)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|r3 = true\l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|if (r5.taskContext.getTaskMode() != 1) goto L3\l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|r3 = false\l}"];
Node_17 [shape=record,label="{17\:\ 0x000d|PHI: r3 \l  PHI: (r3v1 boolean) = (r3v0 boolean), (r3v2 boolean) binds: [B:14:0x0009, B:16:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == false) goto L8\l}"];
Node_18 [shape=record,label="{18\:\ 0x000f}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return r4.globalBlockingQueue.addLast(r5)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0016}"];
Node_20 [shape=record,label="{20\:\ 0x001c|RETURN\lORIG_RETURN\l|return r4.globalCpuQueue.addLast(r5)\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.scheduling.CoroutineScheduler.addToGlobalQueue((r4v0 'this' kotlinx.coroutines.scheduling.CoroutineScheduler A[IMMUTABLE_TYPE, THIS]), (r5v0 'task' kotlinx.coroutines.scheduling.Task A[D('task' kotlinx.coroutines.scheduling.Task), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0016 \-\> B:20:0x001c, CROSS_EDGE: B:14:0x0009 \-\> B:17:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_17[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_21;
Node_21 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
}

