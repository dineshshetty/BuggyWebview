digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.parkedWorkersStackNextIndex(Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler$Worker;)I" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) = \l  (r4 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[D('worker' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)])\l type: VIRTUAL call: kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.getNextParkedWorker():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:236)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|LOOP_START\lLOOP:0: B:20:0x0004\-\>B:30:0x001a\l|0x0006: SGET  (r1 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.scheduling.CoroutineScheduler.NOT_IN_STACK kotlinx.coroutines.internal.Symbol  (LINE:239)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('next' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x000c \l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('next' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0010  (LINE:240)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|0x0010: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('next' java.lang.Object)])  (LINE:242)\l0x0011: CHECK_CAST (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) = (kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) (r1 I:??[OBJECT, ARRAY]) \l0x0013: INVOKE  (r2 I:int) = \l  (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[D('nextWorker' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)])\l type: VIRTUAL call: kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.getIndexInArray():int A[MD:():int (m)] (LINE:243)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|0x0017: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('updIndex' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001a  (LINE:244)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|LOOP_END\lLOOP:0: B:20:0x0004\-\>B:30:0x001a\l|0x001a: INVOKE  (r0 I:java.lang.Object A[D('next' java.lang.Object)]) = \l  (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[D('nextWorker' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)])\l type: VIRTUAL call: kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.getNextParkedWorker():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:246)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0019|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0019|RETURN\l|0x0019: RETURN  (r2 I:int A[D('updIndex' int)]) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x000e|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|RETURN\l|0x000e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: RETURN  (r1 I:int) \l}"];
Node_32 [shape=record,label="{32\:\ 0x000a|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|RETURN\l|0x000a: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x000b: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{private final int kotlinx.coroutines.scheduling.CoroutineScheduler.parkedWorkersStackNextIndex((r3 'this' I:kotlinx.coroutines.scheduling.CoroutineScheduler A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[D('worker' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x000f \-\> B:18:?, CROSS_EDGE: B:29:0x0019 \-\> B:18:?, BACK_EDGE: B:30:0x001a \-\> B:20:0x0004\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x001e: r1 'nextWorker' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler$Worker;\l  0x0017\-0x001e: r2 'updIndex' I\l  0x0004\-0x001e: r0 'next' Ljava\/lang\/Object;\l  \-1 \-0x001e: r4 'worker' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler$Worker;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_24;
Node_21 -> Node_32[style=dashed];
Node_24 -> Node_27;
Node_24 -> Node_33[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_31[style=dashed];
Node_30 -> Node_20;
Node_31 -> Node_29;
Node_29 -> Node_18;
Node_33 -> Node_25;
Node_25 -> Node_18;
Node_32 -> Node_22;
Node_22 -> Node_18;
}

