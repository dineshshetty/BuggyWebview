digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.submitToLocalQueue(Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler$Worker;Lkotlinx\/coroutines\/scheduling\/Task;Z)Lkotlinx\/coroutines\/scheduling\/Task;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$submitToLocalQueue' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0003  (LINE:494)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|RETURN\l|0x0002: RETURN  (r5 I:kotlinx.coroutines.scheduling.Task A[D('task' kotlinx.coroutines.scheduling.Task)]) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0003|0x0003: IGET  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) = \l  (r4 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[D('$this$submitToLocalQueue' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)])\l kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.state kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState  (LINE:499)\l0x0005: SGET  (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) =  kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.TERMINATED kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState \l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x000a \l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|RETURN\l|0x0009: RETURN  (r5 I:kotlinx.coroutines.scheduling.Task A[D('task' kotlinx.coroutines.scheduling.Task)]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|0x000a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('task' kotlinx.coroutines.scheduling.Task)])  (LINE:501)\l0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: IGET  (r2 I:kotlinx.coroutines.scheduling.TaskContext) = (r0 I:kotlinx.coroutines.scheduling.Task A[D('this_$iv' kotlinx.coroutines.scheduling.Task)]) kotlinx.coroutines.scheduling.Task.taskContext kotlinx.coroutines.scheduling.TaskContext  (LINE:1012)\l0x000e: INVOKE  (r0 I:int A[D('this_$iv' kotlinx.coroutines.scheduling.Task)]) = (r2 I:kotlinx.coroutines.scheduling.TaskContext) type: INTERFACE call: kotlinx.coroutines.scheduling.TaskContext.getTaskMode():int A[MD:():int (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('this_$iv' kotlinx.coroutines.scheduling.Task)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001b  (LINE:501)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|0x0014: IGET  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) = \l  (r4 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[D('$this$submitToLocalQueue' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)])\l kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.state kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState \l0x0016: SGET  (r1 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) =  kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.BLOCKING kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState \l}"];
Node_24 [shape=record,label="{24\:\ 0x0018|0x0018: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001b \l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|RETURN\l|0x001a: RETURN  (r5 I:kotlinx.coroutines.scheduling.Task A[D('task' kotlinx.coroutines.scheduling.Task)])  (LINE:502)\l}"];
Node_26 [shape=record,label="{26\:\ 0x001b|0x001b: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:504)\l0x001c: IPUT  \l  (r0 I:boolean)\l  (r4 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[D('$this$submitToLocalQueue' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)])\l kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.mayHaveLocalTasks boolean \l0x001e: IGET  (r0 I:kotlinx.coroutines.scheduling.WorkQueue) = \l  (r4 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[D('$this$submitToLocalQueue' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)])\l kotlinx.coroutines.scheduling.CoroutineScheduler.Worker.localQueue kotlinx.coroutines.scheduling.WorkQueue  (LINE:505)\l0x0020: INVOKE  (r0 I:kotlinx.coroutines.scheduling.Task) = \l  (r0 I:kotlinx.coroutines.scheduling.WorkQueue)\l  (r5 I:kotlinx.coroutines.scheduling.Task A[D('task' kotlinx.coroutines.scheduling.Task)])\l  (r6 I:boolean A[D('tailDispatch' boolean)])\l type: VIRTUAL call: kotlinx.coroutines.scheduling.WorkQueue.add(kotlinx.coroutines.scheduling.Task, boolean):kotlinx.coroutines.scheduling.Task A[MD:(kotlinx.coroutines.scheduling.Task, boolean):kotlinx.coroutines.scheduling.Task (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0024|RETURN\l|0x0024: RETURN  (r0 I:kotlinx.coroutines.scheduling.Task) \l}"];
MethodNode[shape=record,label="{private final kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.CoroutineScheduler.submitToLocalQueue((r3 'this' I:kotlinx.coroutines.scheduling.CoroutineScheduler A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker A[D('$this$submitToLocalQueue' kotlinx.coroutines.scheduling.CoroutineScheduler$Worker), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlinx.coroutines.scheduling.Task A[D('task' kotlinx.coroutines.scheduling.Task), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('tailDispatch' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0009 \-\> B:15:?, CROSS_EDGE: B:25:0x001a \-\> B:15:?, CROSS_EDGE: B:27:0x0024 \-\> B:15:?, CROSS_EDGE: B:22:0x0012 \-\> B:26:0x001b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0012: r0 'this_$iv' Lkotlinx\/coroutines\/scheduling\/Task;\l  0x000c\-0x0012: r1 '$i$f$getMode' I\l  \-1 \-0x0024: r4 '$this$submitToLocalQueue' Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler$Worker;\l  \-1 \-0x0024: r5 'task' Lkotlinx\/coroutines\/scheduling\/Task;\l  \-1 \-0x0024: r6 'tailDispatch' Z\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_15;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_15;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_15;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

