digraph "CFG forkotlinx.coroutines.scheduling.LimitingDispatcher.toString()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.String) = (r2 I:kotlinx.coroutines.scheduling.LimitingDispatcher) kotlinx.coroutines.scheduling.LimitingDispatcher.name java.lang.String  (LINE:173)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0006: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0009: INVOKE  (r1 I:java.lang.String) = (r2 I:kotlinx.coroutines.ExecutorCoroutineDispatcher) type: SUPER call: kotlinx.coroutines.ExecutorCoroutineDispatcher.toString():java.lang.String A[MD:():java.lang.String (m)]\l0x000d: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0010: CONST_STR  (r1 I:java.lang.String) =  \"[dispatcher = \" \l0x0012: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0015: IGET  (r1 I:kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher) = (r2 I:kotlinx.coroutines.scheduling.LimitingDispatcher) kotlinx.coroutines.scheduling.LimitingDispatcher.dispatcher kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher \l0x0017: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x001a: CONST  (r1 I:??[int, float, short, byte, char]) = (93 ??[int, float, short, byte, char]) \l0x001c: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x001f: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|RETURN\lORIG_RETURN\l|0x0023: RETURN  (r0 I:java.lang.String) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|0x0023: RETURN  (r0 I:java.lang.String) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public java.lang.String kotlinx.coroutines.scheduling.LimitingDispatcher.toString((r2 'this' I:kotlinx.coroutines.scheduling.LimitingDispatcher A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x0002 \-\> B:5:0x0023\lMETHOD_OVERRIDE: [kotlinx.coroutines.CoroutineDispatcher.toString():java.lang.String]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

