digraph "CFG forkotlinx.coroutines.scheduling.LimitingDispatcher.afterTask()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|java.lang.Runnable r0 = r4.queue.poll()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r0 == null) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|r4.dispatcher.dispatchWithContext$kotlinx_coroutines_core(r0, r4, true)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|kotlinx.coroutines.scheduling.LimitingDispatcher.inFlightTasks$FU.decrementAndGet(r4)\ljava.lang.Runnable r2 = r4.queue.poll()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|if (r2 != null) goto L9\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|dispatch(r2, true)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.scheduling.LimitingDispatcher.afterTask((r4v0 'this' kotlinx.coroutines.scheduling.LimitingDispatcher A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0023 \-\> B:1:?, CROSS_EDGE: B:10:0x0028 \-\> B:1:?\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.scheduling.TaskContext.afterTask():void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

