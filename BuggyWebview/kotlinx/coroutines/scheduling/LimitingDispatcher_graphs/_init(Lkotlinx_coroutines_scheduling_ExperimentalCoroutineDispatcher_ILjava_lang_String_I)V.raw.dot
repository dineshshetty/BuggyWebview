digraph "CFG forkotlinx.coroutines.scheduling.LimitingDispatcher.\<init\>(Lkotlinx\/coroutines\/scheduling\/ExperimentalCoroutineDispatcher;ILjava\/lang\/String;I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r1 I:kotlinx.coroutines.ExecutorCoroutineDispatcher) type: DIRECT call: kotlinx.coroutines.ExecutorCoroutineDispatcher.\<init\>():void A[MD:():void (m)] (LINE:116)\l0x0003: IPUT  \l  (r2 I:kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher A[D('dispatcher' kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher)])\l  (r1 I:kotlinx.coroutines.scheduling.LimitingDispatcher)\l kotlinx.coroutines.scheduling.LimitingDispatcher.dispatcher kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher  (LINE:112)\l0x0005: IPUT  (r3 I:int A[D('parallelism' int)]), (r1 I:kotlinx.coroutines.scheduling.LimitingDispatcher) kotlinx.coroutines.scheduling.LimitingDispatcher.parallelism int  (LINE:113)\l0x0007: IPUT  (r4 I:java.lang.String A[D('name' java.lang.String)]), (r1 I:kotlinx.coroutines.scheduling.LimitingDispatcher) kotlinx.coroutines.scheduling.LimitingDispatcher.name java.lang.String  (LINE:114)\l0x0009: IPUT  (r5 I:int A[D('taskMode' int)]), (r1 I:kotlinx.coroutines.scheduling.LimitingDispatcher) kotlinx.coroutines.scheduling.LimitingDispatcher.taskMode int  (LINE:115)\l0x000b: NEW_INSTANCE  (r0 I:java.util.concurrent.ConcurrentLinkedQueue) =  java.util.concurrent.ConcurrentLinkedQueue  (LINE:118)\l0x000d: INVOKE  (r0 I:java.util.concurrent.ConcurrentLinkedQueue) type: DIRECT call: java.util.concurrent.ConcurrentLinkedQueue.\<init\>():void A[MD:():void (c)]\l0x0010: IPUT  \l  (r0 I:java.util.concurrent.ConcurrentLinkedQueue\<java.lang.Runnable\>)\l  (r1 I:kotlinx.coroutines.scheduling.LimitingDispatcher)\l kotlinx.coroutines.scheduling.LimitingDispatcher.queue java.util.concurrent.ConcurrentLinkedQueue \l0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:119)\l0x0013: IPUT  (r0 I:int), (r1 I:kotlinx.coroutines.scheduling.LimitingDispatcher) kotlinx.coroutines.scheduling.LimitingDispatcher.inFlightTasks int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|RETURN\l|0x0015: RETURN    (LINE:111)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.scheduling.LimitingDispatcher.\<init\>((r1 'this' I:kotlinx.coroutines.scheduling.LimitingDispatcher A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher A[D('dispatcher' kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('parallelism' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('taskMode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0015: r2 'dispatcher' Lkotlinx\/coroutines\/scheduling\/ExperimentalCoroutineDispatcher;\l  \-1 \-0x0015: r3 'parallelism' I\l  \-1 \-0x0015: r4 'name' Ljava\/lang\/String;\l  \-1 \-0x0015: r5 'taskMode' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

