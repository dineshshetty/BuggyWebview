digraph "CFG forkotlinx.coroutines.scheduling.LimitingDispatcher.\<init\>(Lkotlinx\/coroutines\/scheduling\/ExperimentalCoroutineDispatcher;ILjava\/lang\/String;I)V" {
subgraph cluster_Region_2093436143 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|r1.dispatcher = r2\lr1.parallelism = r3\lr1.name = r4\lr1.taskMode = r5\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0015}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.scheduling.LimitingDispatcher.\<init\>((r1v0 'this' kotlinx.coroutines.scheduling.LimitingDispatcher A[IMMUTABLE_TYPE, THIS]), (r2v0 'dispatcher' kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher A[D('dispatcher' kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'parallelism' int A[D('parallelism' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'name' java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'taskMode' int A[D('taskMode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_0 -> Node_2;
Node_3 -> Node_1;
}

