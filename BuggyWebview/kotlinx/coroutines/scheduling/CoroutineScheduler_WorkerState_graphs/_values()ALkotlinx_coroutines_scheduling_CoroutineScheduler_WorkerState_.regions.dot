digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.$values()[Lkotlinx\/coroutines\/scheduling\/CoroutineScheduler$WorkerState;" {
subgraph cluster_Region_294835246 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001c|RETURN\l|return new kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState[]\{kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.CPU_ACQUIRED, kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.BLOCKING, kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.PARKING, kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.DORMANT, kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.TERMINATED\}\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final \/* synthetic *\/ kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.$values()  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_7 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
}

