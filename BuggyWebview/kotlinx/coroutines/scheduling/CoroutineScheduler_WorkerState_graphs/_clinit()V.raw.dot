digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.\<clinit\>()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) =  kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState  (LINE:942)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"CPU_ACQUIRED\" \l0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: INVOKE  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState), (r1 I:java.lang.String), (r2 I:int) type: DIRECT call: kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.\<init\>(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)]\l0x0008: SPUT  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.CPU_ACQUIRED kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState \l0x000a: NEW_INSTANCE  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) =  kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState  (LINE:947)\l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"BLOCKING\" \l0x000e: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000f: INVOKE  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState), (r1 I:java.lang.String), (r2 I:int) type: DIRECT call: kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.\<init\>(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)]\l0x0012: SPUT  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.BLOCKING kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState \l0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) =  kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState  (LINE:952)\l0x0016: CONST_STR  (r1 I:java.lang.String) =  \"PARKING\" \l0x0018: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0019: INVOKE  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState), (r1 I:java.lang.String), (r2 I:int) type: DIRECT call: kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.\<init\>(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)]\l0x001c: SPUT  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.PARKING kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState \l0x001e: NEW_INSTANCE  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) =  kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState  (LINE:957)\l0x0020: CONST_STR  (r1 I:java.lang.String) =  \"DORMANT\" \l0x0022: CONST  (r2 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0023: INVOKE  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState), (r1 I:java.lang.String), (r2 I:int) type: DIRECT call: kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.\<init\>(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)]\l0x0026: SPUT  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.DORMANT kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState \l0x0028: NEW_INSTANCE  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) =  kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState  (LINE:962)\l0x002a: CONST_STR  (r1 I:java.lang.String) =  \"TERMINATED\" \l0x002c: CONST  (r2 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x002d: INVOKE  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState), (r1 I:java.lang.String), (r2 I:int) type: DIRECT call: kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.\<init\>(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)]\l0x0030: SPUT  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.TERMINATED kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState \l0x0032: INVOKE  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[]) =  type: STATIC call: kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.$values():kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] A[MD:():kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] (m)]\l0x0036: SPUT  (r0 I:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[]) kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.$VALUES kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] \l}"];
Node_7 [shape=record,label="{7\:\ 0x0038|RETURN\l|0x0038: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.\<clinit\>()  | DONT_GENERATE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

