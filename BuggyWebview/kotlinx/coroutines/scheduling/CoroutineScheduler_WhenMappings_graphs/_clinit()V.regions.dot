digraph "CFG forkotlinx.coroutines.scheduling.CoroutineScheduler.WhenMappings.\<clinit\>()V" {
subgraph cluster_Region_780717086 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0000|int[] int[] r0 = new int[kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.values().length]\lr0[kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.PARKING.ordinal()] = 1\lr0[kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.BLOCKING.ordinal()] = 2\lr0[kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.CPU_ACQUIRED.ordinal()] = 3\lr0[kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.DORMANT.ordinal()] = 4\lr0[kotlinx.coroutines.scheduling.CoroutineScheduler.WorkerState.TERMINATED.ordinal()] = 5\lkotlinx.coroutines.scheduling.CoroutineScheduler.WhenMappings.$EnumSwitchMapping$0 = r0\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0036}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlinx.coroutines.scheduling.CoroutineScheduler.WhenMappings.\<clinit\>()  | INLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_4;Node_6 -> Node_7;
Node_4 -> Node_6;
Node_7 -> Node_5;
}

