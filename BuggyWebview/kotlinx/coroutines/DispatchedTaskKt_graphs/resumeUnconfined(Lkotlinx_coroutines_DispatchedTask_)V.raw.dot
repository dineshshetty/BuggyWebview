digraph "CFG forkotlinx.coroutines.DispatchedTaskKt.resumeUnconfined(Lkotlinx\/coroutines\/DispatchedTask;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.ThreadLocalEventLoop) =  kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE kotlinx.coroutines.ThreadLocalEventLoop  (LINE:183)\l0x0002: INVOKE  (r0 I:kotlinx.coroutines.EventLoop) = (r0 I:kotlinx.coroutines.ThreadLocalEventLoop) type: VIRTUAL call: kotlinx.coroutines.ThreadLocalEventLoop.getEventLoop$kotlinx_coroutines_core():kotlinx.coroutines.EventLoop A[MD:():kotlinx.coroutines.EventLoop (m)]\l0x0006: INVOKE  (r1 I:boolean) = (r0 I:kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop)]) type: VIRTUAL call: kotlinx.coroutines.EventLoop.isUnconfinedLoopActive():boolean A[MD:():boolean (m)] (LINE:184)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: INVOKE  \l  (r0 I:kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop)])\l  (r6 I:kotlinx.coroutines.DispatchedTask A[D('$this$resumeUnconfined' kotlinx.coroutines.DispatchedTask)])\l type: VIRTUAL call: kotlinx.coroutines.EventLoop.dispatchUnconfined(kotlinx.coroutines.DispatchedTask):void A[MD:(kotlinx.coroutines.DispatchedTask\<?\>):void (m)] (LINE:186)\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0032: RETURN   A[SYNTHETIC] (LINE:193)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('$this$resumeUnconfined' kotlinx.coroutines.DispatchedTask)])  (LINE:189)\l0x0011: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:240)\l0x0013: INVOKE  (r0 I:kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop)]), (r3 I:boolean) type: VIRTUAL call: kotlinx.coroutines.EventLoop.incrementUseCount(boolean):void A[MD:(boolean):void (m)]\l0x0017: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:242)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0018|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|TRY_ENTER\lTryCatch #1 \{all \-\> 0x0028, blocks: (B:6:0x0018, B:7:0x0020), top: B:20:0x0018 \}\lCatch: all \-\> 0x0028\l|0x0018: INVOKE  (r5 I:kotlin.coroutines.Continuation) = (r6 I:kotlinx.coroutines.DispatchedTask A[D('$this$resumeUnconfined' kotlinx.coroutines.DispatchedTask)]) type: VIRTUAL call: kotlinx.coroutines.DispatchedTask.getDelegate$kotlinx_coroutines_core():kotlin.coroutines.Continuation A[Catch: all \-\> 0x0028, MD:():kotlin.coroutines.Continuation\<T\> (m), TRY_ENTER] (LINE:190)\l0x001c: INVOKE  \l  (r6 I:kotlinx.coroutines.DispatchedTask A[D('$this$resumeUnconfined' kotlinx.coroutines.DispatchedTask)])\l  (r5 I:kotlin.coroutines.Continuation)\l  (r3 I:boolean)\l type: STATIC call: kotlinx.coroutines.DispatchedTaskKt.resume(kotlinx.coroutines.DispatchedTask, kotlin.coroutines.Continuation, boolean):void A[Catch: all \-\> 0x0028, MD:\<T\>:(kotlinx.coroutines.DispatchedTask\<? super T\>, kotlin.coroutines.Continuation\<? super T\>, boolean):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|TRY_LEAVE\lLOOP_START\lTryCatch #1 \{all \-\> 0x0028, blocks: (B:6:0x0018, B:7:0x0020), top: B:20:0x0018 \}\lLOOP:0: B:7:0x0020\-\>B:8:0x0025\lCatch: all \-\> 0x0028\l|0x0021: INVOKE  (r4 I:boolean) = (r0 I:kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop)]) type: VIRTUAL call: kotlinx.coroutines.EventLoop.processUnconfinedEvent():boolean A[Catch: all \-\> 0x0028, MD:():boolean (m), TRY_LEAVE] (LINE:245)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|LOOP_END\lLOOP:0: B:7:0x0020\-\>B:8:0x0025\l|0x0025: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0020 \l}"];
Node_22 [shape=record,label="{22\:\ 0x002d|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: INVOKE  (r0 I:kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop)]), (r3 I:boolean) type: VIRTUAL call: kotlinx.coroutines.EventLoop.decrementUseCount(boolean):void A[MD:(boolean):void (m)] (LINE:254)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|RETURN\lORIG_RETURN\l|0x0032: RETURN    (LINE:193)\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|ExcHandler: all \-\> 0x0028\l|0x0028: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0028] (LINE:247)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:252)\l}"];
Node_18 [shape=record,label="{18\:\ 0x002a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0033, blocks: (B:12:0x002a), top: B:18:0x002a \}\lCatch: all \-\> 0x0033\l|0x002a: INVOKE  \l  (r1 I:kotlinx.coroutines.DispatchedTask A[D('$this$runUnconfinedEventLoop$iv' kotlinx.coroutines.DispatchedTask)])\l  (r4 I:java.lang.Throwable A[D('e$iv' java.lang.Throwable)])\l  (r5 I:java.lang.Throwable)\l type: VIRTUAL call: kotlinx.coroutines.DispatchedTask.handleFatalException(java.lang.Throwable, java.lang.Throwable):void A[Catch: all \-\> 0x0033, MD:(java.lang.Throwable, java.lang.Throwable):void (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|ExcHandler: all \-\> 0x0033\l|0x0033: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0033] (LINE:253)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|0x0034: INVOKE  (r0 I:kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop)]), (r3 I:boolean) type: VIRTUAL call: kotlinx.coroutines.EventLoop.decrementUseCount(boolean):void A[MD:(boolean):void (m)] (LINE:254)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0037|0x0037: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static final void kotlinx.coroutines.DispatchedTaskKt.resumeUnconfined((r6 I:kotlinx.coroutines.DispatchedTask\<?\> A[D('$this$resumeUnconfined' kotlinx.coroutines.DispatchedTask), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:8:0x0025 \-\> B:7:0x0020, CROSS_EDGE: B:13:0x002d \-\> B:14:0x0032, CROSS_EDGE: B:12:0x002a \-\> B:13:0x002d, CROSS_EDGE: B:17:0x0037 \-\> B:1:?, CROSS_EDGE: B:18:0x002a \-\> B:15:0x0033, CROSS_EDGE: B:20:0x0018 \-\> B:10:0x0028\lDebug Info:\l  0x0018\-0x0020: r4 '$i$a$\-runUnconfinedEventLoop\-DispatchedTaskKt$resumeUnconfined$1' I\l  0x0029\-0x002d: r4 'e$iv' Ljava\/lang\/Throwable;\l  0x0011\-0x0032: r1 '$this$runUnconfinedEventLoop$iv' Lkotlinx\/coroutines\/DispatchedTask;\l  0x0012\-0x0032: r2 '$i$f$runUnconfinedEventLoop' I\l  0x0006\-0x0037: r0 'eventLoop' Lkotlinx\/coroutines\/EventLoop;\l  0x0033\-0x0037: r1 '$this$runUnconfinedEventLoop$iv' Lkotlinx\/coroutines\/DispatchedTask;\l  0x0033\-0x0037: r2 '$i$f$runUnconfinedEventLoop' I\l  \-1 \-0x0037: r6 '$this$resumeUnconfined' Lkotlinx\/coroutines\/DispatchedTask;\lTryCatch #0 \{all \-\> 0x0033, blocks: (B:12:0x002a), top: B:18:0x002a \}, TryCatch #1 \{all \-\> 0x0028, blocks: (B:6:0x0018, B:7:0x0020), top: B:20:0x0018 \}\lSIGNATURE: (Lkotlinx\/coroutines\/DispatchedTask\<*\>;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_23;
Node_23 -> Node_1;
Node_5 -> Node_20;
Node_20 -> Node_6;
Node_20 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_21;
Node_8 -> Node_7;
Node_8 -> Node_22[style=dashed];
Node_22 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_21 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_18;
Node_18 -> Node_12;
Node_18 -> Node_15;
Node_12 -> Node_13;
Node_12 -> Node_19;
Node_19 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_1;
}

