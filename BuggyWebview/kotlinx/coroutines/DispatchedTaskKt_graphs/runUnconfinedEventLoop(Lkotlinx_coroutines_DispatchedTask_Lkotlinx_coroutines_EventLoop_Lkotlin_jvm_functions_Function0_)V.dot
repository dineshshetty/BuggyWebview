digraph "CFG forkotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(Lkotlinx\/coroutines\/DispatchedTask;Lkotlinx\/coroutines\/EventLoop;Lkotlin\/jvm\/functions\/Function0;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|r5.incrementUseCount(true)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|TRY_ENTER\lTryCatch #1 \{all \-\> 0x0014, blocks: (B:3:0x0006, B:4:0x0009), top: B:18:0x0006 \}\lCatch: all \-\> 0x0014\l|r6.invoke()     \/\/ Catch: java.lang.Throwable \-\> L14\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|TRY_LEAVE\lLOOP_START\lTryCatch #1 \{all \-\> 0x0014, blocks: (B:3:0x0006, B:4:0x0009), top: B:18:0x0006 \}\lLOOP:0: B:4:0x0009\-\>B:5:0x000e\lCatch: all \-\> 0x0014\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|LOOP_END\lLOOP:0: B:4:0x0009\-\>B:5:0x000e\l|if (r5.processUnconfinedEvent() != false) goto L4\l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|kotlin.jvm.internal.InlineMarker.finallyStart(1)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|r5.decrementUseCount(true)\lkotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|ExcHandler: all \-\> 0x0014\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015}"];
Node_16 [shape=record,label="{16\:\ 0x0016|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:9:0x0016), top: B:16:0x0016 \}\lCatch: all \-\> 0x0024\l|r4.handleFatalException(r2, null)     \/\/ Catch: java.lang.Throwable \-\> L24\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|kotlin.jvm.internal.InlineMarker.finallyStart(1)\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|ExcHandler: all \-\> 0x0024\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|kotlin.jvm.internal.InlineMarker.finallyStart(1)\lr5.decrementUseCount(true)\lkotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|throw r2\l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop((r4v0 kotlinx.coroutines.DispatchedTask\<?\> A[D('$this$runUnconfinedEventLoop' kotlinx.coroutines.DispatchedTask), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'eventLoop' kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlin.jvm.functions.Function0\<kotlin.Unit\> A[D('block' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:5:0x000e \-\> B:4:0x0009, CROSS_EDGE: B:10:0x0019 \-\> B:11:0x001c, CROSS_EDGE: B:15:0x002e \-\> B:1:?, CROSS_EDGE: B:16:0x0016 \-\> B:13:0x0024, CROSS_EDGE: B:18:0x0006 \-\> B:7:0x0014\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:9:0x0016), top: B:16:0x0016 \}, TryCatch #1 \{all \-\> 0x0014, blocks: (B:3:0x0006, B:4:0x0009), top: B:18:0x0006 \}\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlinx\/coroutines\/DispatchedTask\<*\>;Lkotlinx\/coroutines\/EventLoop;Lkotlin\/jvm\/functions\/Function0\<Lkotlin\/Unit;\>;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_18;
Node_18 -> Node_3;
Node_18 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_19;
Node_5 -> Node_4;
Node_5 -> Node_20[style=dashed];
Node_20 -> Node_6;
Node_6 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_19 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_16;
Node_16 -> Node_9;
Node_16 -> Node_13;
Node_9 -> Node_10;
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_17 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
}

