digraph "CFG forkotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(Lkotlinx\/coroutines\/DispatchedTask;Lkotlinx\/coroutines\/EventLoop;Lkotlin\/jvm\/functions\/Function0;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:199)\l0x0002: INVOKE  (r5 I:kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop)]), (r1 I:boolean) type: VIRTUAL call: kotlinx.coroutines.EventLoop.incrementUseCount(boolean):void A[MD:(boolean):void (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|TRY_ENTER\lTryCatch #1 \{all \-\> 0x0014, blocks: (B:3:0x0006, B:4:0x0009), top: B:18:0x0006 \}\lCatch: all \-\> 0x0014\l|0x0006: INVOKE  (r6 I:kotlin.jvm.functions.Function0 A[D('block' kotlin.jvm.functions.Function0)]) type: INTERFACE call: kotlin.jvm.functions.Function0.invoke():java.lang.Object A[Catch: all \-\> 0x0014, MD:():R (m), TRY_ENTER] (LINE:201)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|TRY_LEAVE\lLOOP_START\lTryCatch #1 \{all \-\> 0x0014, blocks: (B:3:0x0006, B:4:0x0009), top: B:18:0x0006 \}\lLOOP:0: B:4:0x0009\-\>B:5:0x000e\lCatch: all \-\> 0x0014\l|0x000a: INVOKE  (r2 I:boolean) = (r5 I:kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop)]) type: VIRTUAL call: kotlinx.coroutines.EventLoop.processUnconfinedEvent():boolean A[Catch: all \-\> 0x0014, MD:():boolean (m), TRY_LEAVE] (LINE:204)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|LOOP_END\lLOOP:0: B:4:0x0009\-\>B:5:0x000e\l|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0009 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: INVOKE  (r5 I:kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop)]), (r1 I:boolean) type: VIRTUAL call: kotlinx.coroutines.EventLoop.decrementUseCount(boolean):void A[MD:(boolean):void (m)] (LINE:213)\l0x001f: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|RETURN\l|0x0023: RETURN    (LINE:215)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|ExcHandler: all \-\> 0x0014\l|0x0014: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0014] (LINE:206)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:211)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0016|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:9:0x0016), top: B:16:0x0016 \}\lCatch: all \-\> 0x0024\l|0x0016: INVOKE  \l  (r4 I:kotlinx.coroutines.DispatchedTask A[D('$this$runUnconfinedEventLoop' kotlinx.coroutines.DispatchedTask)])\l  (r2 I:java.lang.Throwable A[D('e' java.lang.Throwable)])\l  (r3 I:java.lang.Throwable)\l type: VIRTUAL call: kotlinx.coroutines.DispatchedTask.handleFatalException(java.lang.Throwable, java.lang.Throwable):void A[Catch: all \-\> 0x0024, MD:(java.lang.Throwable, java.lang.Throwable):void (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|ExcHandler: all \-\> 0x0024\l|0x0024: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0024] (LINE:212)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|0x0025: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0028: INVOKE  (r5 I:kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop)]), (r1 I:boolean) type: VIRTUAL call: kotlinx.coroutines.EventLoop.decrementUseCount(boolean):void A[MD:(boolean):void (m)] (LINE:213)\l0x002b: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|0x002e: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop((r4 I:kotlinx.coroutines.DispatchedTask\<?\> A[D('$this$runUnconfinedEventLoop' kotlinx.coroutines.DispatchedTask), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function0\<kotlin.Unit\> A[D('block' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:5:0x000e \-\> B:4:0x0009, CROSS_EDGE: B:10:0x0019 \-\> B:11:0x001c, CROSS_EDGE: B:15:0x002e \-\> B:1:?, CROSS_EDGE: B:16:0x0016 \-\> B:13:0x0024, CROSS_EDGE: B:18:0x0006 \-\> B:7:0x0014\lDebug Info:\l  0x0015\-0x0019: r2 'e' Ljava\/lang\/Throwable;\l  0x0001\-0x002e: r0 '$i$f$runUnconfinedEventLoop' I\l  \-1 \-0x002e: r4 '$this$runUnconfinedEventLoop' Lkotlinx\/coroutines\/DispatchedTask;\l  \-1 \-0x002e: r5 'eventLoop' Lkotlinx\/coroutines\/EventLoop;\l  \-1 \-0x002e: r6 'block' Lkotlin\/jvm\/functions\/Function0;\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:9:0x0016), top: B:16:0x0016 \}, TryCatch #1 \{all \-\> 0x0014, blocks: (B:3:0x0006, B:4:0x0009), top: B:18:0x0006 \}\lSIGNATURE: (Lkotlinx\/coroutines\/DispatchedTask\<*\>;Lkotlinx\/coroutines\/EventLoop;Lkotlin\/jvm\/functions\/Function0\<Lkotlin\/Unit;\>;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_18;
Node_18 -> Node_3;
Node_18 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_19;
Node_5 -> Node_4;
Node_5 -> Node_20[style=dashed];
Node_20 -> Node_6;
Node_6 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_19 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_16;
Node_16 -> Node_9;
Node_16 -> Node_13;
Node_9 -> Node_10;
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_17 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
}

