digraph "CFG forkotlinx.coroutines.CancellableContinuationImpl.\<init\>(Lkotlin\/coroutines\/Continuation;I)V" {
subgraph cluster_Region_556625152 {
label = "R(3:1|(1:(1:8))|11)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0000|super(r5)\lr3.delegate = r4\l}"];
subgraph cluster_IfRegion_1883598975 {
label = "IF [B:17:0x000b] THEN: R(1:(1:8)) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000b|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() != false) goto L3\l}"];
subgraph cluster_Region_1143212156 {
label = "R(1:(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1895940448 {
label = "IF [B:22:0x0014] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0014|PHI: r2 \l  PHI: (r2v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r5 != \-1) == false) goto L7\l}"];
subgraph cluster_Region_990836525 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x001c|throw new java.lang.AssertionError()\l}"];
}
}
}
}
Node_26 [shape=record,label="{26\:\ 0x001d|r3.context = r4.getContext()\lr3._decision = 0\lr3._state = kotlinx.coroutines.Active.INSTANCE\l}"];
}
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x000d}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000f}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0011}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0017}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0013}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x002a}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.CancellableContinuationImpl.\<init\>((r3v0 'this' kotlinx.coroutines.CancellableContinuationImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r4v0 kotlin.coroutines.Continuation\<? super T\> A[D('delegate' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'resumeMode' int A[D('resumeMode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x002a \-\> B:15:?, CROSS_EDGE: B:21:0x0013 \-\> B:22:0x0014, CROSS_EDGE: B:17:0x000b \-\> B:26:0x001d\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<\-TT;\>;I)V\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r4v0, resolved type: kotlin.coroutines.Continuation\<? super T\>\}\l}"];
MethodNode -> Node_14;Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_26[style=dashed];
Node_22 -> Node_24;
Node_22 -> Node_26[style=dashed];
Node_25 -> Node_15;
Node_26 -> Node_27;
Node_14 -> Node_16;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_24 -> Node_25;
Node_21 -> Node_22;
Node_27 -> Node_15;
}

