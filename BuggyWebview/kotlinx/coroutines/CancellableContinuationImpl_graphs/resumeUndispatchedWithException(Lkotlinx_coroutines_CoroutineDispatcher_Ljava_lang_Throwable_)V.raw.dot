digraph "CFG forkotlinx.coroutines.CancellableContinuationImpl.resumeUndispatchedWithException(Lkotlinx\/coroutines\/CoroutineDispatcher;Ljava\/lang\/Throwable;)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: IGET  (r0 I:kotlin.coroutines.Continuation\<T\>) = (r9 I:kotlinx.coroutines.CancellableContinuationImpl) kotlinx.coroutines.CancellableContinuationImpl.delegate kotlin.coroutines.Continuation  (LINE:522)\l0x0002: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY]) kotlinx.coroutines.internal.DispatchedContinuation \l0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|0x0005: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x000a \l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: CHECK_CAST (r0 I:kotlinx.coroutines.internal.DispatchedContinuation) = (kotlinx.coroutines.internal.DispatchedContinuation) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|0x000b: NEW_INSTANCE  (r4 I:kotlinx.coroutines.CompletedExceptionally) =  kotlinx.coroutines.CompletedExceptionally  (LINE:523)\l0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x000f: INVOKE  \l  (r4 I:kotlinx.coroutines.CompletedExceptionally)\l  (r11 I:java.lang.Throwable A[D('exception' java.lang.Throwable)])\l  (r1 I:boolean)\l  (r3 I:int)\l  (r2 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlinx.coroutines.CompletedExceptionally.\<init\>(java.lang.Throwable, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(java.lang.Throwable, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('dc' kotlinx.coroutines.internal.DispatchedContinuation)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0015 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0015|0x0015: IGET  (r2 I:kotlinx.coroutines.CoroutineDispatcher) = (r0 I:kotlinx.coroutines.internal.DispatchedContinuation A[D('dc' kotlinx.coroutines.internal.DispatchedContinuation)]) kotlinx.coroutines.internal.DispatchedContinuation.dispatcher kotlinx.coroutines.CoroutineDispatcher \l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|0x0017: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$resumeUndispatchedWithException' kotlinx.coroutines.CoroutineDispatcher)])  \-\> B:27:0x001c \l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|0x0019: CONST  (r1 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x001a: CONST  (r5 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x001f|0x001f: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0020: CONST  (r7 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0021: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0022: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY]) \l0x0023: INVOKE  \l  (r3 I:kotlinx.coroutines.CancellableContinuationImpl)\l  (r4 I:java.lang.Object)\l  (r5 I:int)\l  (r6 I:kotlin.jvm.functions.Function1)\l  (r7 I:int)\l  (r8 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.CancellableContinuationImpl.resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl, java.lang.Object, int, kotlin.jvm.functions.Function1, int, java.lang.Object):void A[MD:(kotlinx.coroutines.CancellableContinuationImpl, java.lang.Object, int, kotlin.jvm.functions.Function1, int, java.lang.Object):void (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0026|RETURN\l|0x0026: RETURN    (LINE:524)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|0x001c: IGET  (r1 I:int) = (r9 I:kotlinx.coroutines.CancellableContinuationImpl) kotlinx.coroutines.CancellableContinuationImpl.resumeMode int \l0x001e: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|0x000a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.CancellableContinuationImpl.resumeUndispatchedWithException((r9 'this' I:kotlinx.coroutines.CancellableContinuationImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r10 I:kotlinx.coroutines.CoroutineDispatcher A[D('$this$resumeUndispatchedWithException' kotlinx.coroutines.CoroutineDispatcher), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x001c \-\> B:28:0x001f, CROSS_EDGE: B:22:0x0012 \-\> B:25:0x0017, CROSS_EDGE: B:20:0x000a \-\> B:21:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0026: r0 'dc' Lkotlinx\/coroutines\/internal\/DispatchedContinuation;\l  \-1 \-0x0026: r10 '$this$resumeUndispatchedWithException' Lkotlinx\/coroutines\/CoroutineDispatcher;\l  \-1 \-0x0026: r11 'exception' Ljava\/lang\/Throwable;\lTYPE_VARS: [T]\lMETHOD_OVERRIDE: [kotlinx.coroutines.CancellableContinuation.resumeUndispatchedWithException(kotlinx.coroutines.CoroutineDispatcher, java.lang.Throwable):void]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_24;
Node_22 -> Node_25[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_16;
Node_27 -> Node_28;
Node_20 -> Node_21;
}

