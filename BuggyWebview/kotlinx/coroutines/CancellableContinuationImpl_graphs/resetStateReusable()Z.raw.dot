digraph "CFG forkotlinx.coroutines.CancellableContinuationImpl.resetStateReusable()Z" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:118)\l0x0004: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0005: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x001a \l}"];
Node_41 [shape=record,label="{41\:\ 0x0008|0x0008: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:594)\l0x0009: IGET  (r3 I:int) = (r5 I:kotlinx.coroutines.CancellableContinuationImpl) kotlinx.coroutines.CancellableContinuationImpl.resumeMode int  (LINE:118)\l0x000b: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x000c|0x000c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0010 \l}"];
Node_43 [shape=record,label="{43\:\ 0x000e|0x000e: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('$i$a$\-assert\-CancellableContinuationImpl$resetStateReusable$1' int)]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$i$a$\-assert\-CancellableContinuationImpl$resetStateReusable$1' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0014 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0016: INVOKE  (r0 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0019|0x0019: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0010|0x0010: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$a$\-assert\-CancellableContinuationImpl$resetStateReusable$1' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x001a|0x001a: INVOKE  (r0 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:119)\l}"];
Node_50 [shape=record,label="{50\:\ 0x001e|0x001e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0033 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0020|0x0020: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:594)\l0x0021: IGET  (r3 I:kotlinx.coroutines.DisposableHandle) = (r5 I:kotlinx.coroutines.CancellableContinuationImpl) kotlinx.coroutines.CancellableContinuationImpl.parentHandle kotlinx.coroutines.DisposableHandle  (LINE:119)\l0x0023: SGET  (r4 I:kotlinx.coroutines.NonDisposableHandle) =  kotlinx.coroutines.NonDisposableHandle.INSTANCE kotlinx.coroutines.NonDisposableHandle \l}"];
Node_52 [shape=record,label="{52\:\ 0x0025|0x0025: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0029 \l}"];
Node_53 [shape=record,label="{53\:\ 0x0027|0x0027: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('$i$a$\-assert\-CancellableContinuationImpl$resetStateReusable$2' int)]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x002a|0x002a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$i$a$\-assert\-CancellableContinuationImpl$resetStateReusable$2' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x002d \l}"];
Node_57 [shape=record,label="{57\:\ 0x002d|0x002d: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x002f: INVOKE  (r0 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0032|0x0032: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0029|0x0029: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$a$\-assert\-CancellableContinuationImpl$resetStateReusable$2' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x0033|0x0033: IGET  (r0 I:java.lang.Object) = (r5 I:kotlinx.coroutines.CancellableContinuationImpl) kotlinx.coroutines.CancellableContinuationImpl._state java.lang.Object  (LINE:120)\l0x0035: INVOKE  (r3 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:121)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0039|0x0039: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x0049 \l}"];
Node_61 [shape=record,label="{61\:\ 0x003b|0x003b: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:594)\l0x003c: INSTANCE_OF  (r4 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.NotCompleted  (LINE:121)\l0x003e: ARITH  (r3 I:??[int, boolean] A[D('$i$a$\-assert\-CancellableContinuationImpl$resetStateReusable$3' int)]) = (r4 I:??[int, boolean, short, byte, char]) ^ (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x0040|0x0040: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0043 \l}"];
Node_64 [shape=record,label="{64\:\ 0x0043|0x0043: NEW_INSTANCE  (r1 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0045: INVOKE  (r1 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_65 [shape=record,label="{65\:\ 0x0048|0x0048: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_66 [shape=record,label="{66\:\ 0x0049|0x0049: INSTANCE_OF  (r3 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.CompletedContinuation  (LINE:122)\l}"];
Node_67 [shape=record,label="{67\:\ 0x004b|0x004b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0058 \l}"];
Node_68 [shape=record,label="{68\:\ 0x004d|0x004d: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) \l0x004e: CHECK_CAST (r3 I:kotlinx.coroutines.CompletedContinuation) = (kotlinx.coroutines.CompletedContinuation) (r3 I:??[OBJECT, ARRAY]) \l0x0050: IGET  (r3 I:java.lang.Object) = (r3 I:kotlinx.coroutines.CompletedContinuation) kotlinx.coroutines.CompletedContinuation.idempotentResume java.lang.Object \l}"];
Node_69 [shape=record,label="{69\:\ 0x0052|0x0052: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0058 \l}"];
Node_70 [shape=record,label="{70\:\ 0x0054|0x0054: INVOKE  (r5 I:kotlinx.coroutines.CancellableContinuationImpl) type: VIRTUAL call: kotlinx.coroutines.CancellableContinuationImpl.detachChild$kotlinx_coroutines_core():void A[MD:():void (m)] (LINE:124)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0057|RETURN\l|0x0057: RETURN  (r2 I:boolean)  (LINE:125)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0058|0x0058: IPUT  (r2 I:int), (r5 I:kotlinx.coroutines.CancellableContinuationImpl) kotlinx.coroutines.CancellableContinuationImpl._decision int  (LINE:127)\l0x005a: SGET  (r2 I:kotlinx.coroutines.Active) =  kotlinx.coroutines.Active.INSTANCE kotlinx.coroutines.Active  (LINE:128)\l0x005c: IPUT  (r2 I:java.lang.Object), (r5 I:kotlinx.coroutines.CancellableContinuationImpl) kotlinx.coroutines.CancellableContinuationImpl._state java.lang.Object \l}"];
Node_73 [shape=record,label="{73\:\ 0x005e|RETURN\l|0x005e: RETURN  (r1 I:boolean)  (LINE:129)\l}"];
MethodNode[shape=record,label="{public final boolean kotlinx.coroutines.CancellableContinuationImpl.resetStateReusable((r5 'this' I:kotlinx.coroutines.CancellableContinuationImpl\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:58:0x0032 \-\> B:38:?, CROSS_EDGE: B:65:0x0048 \-\> B:38:?, CROSS_EDGE: B:71:0x0057 \-\> B:38:?, CROSS_EDGE: B:73:0x005e \-\> B:38:?, CROSS_EDGE: B:67:0x004b \-\> B:72:0x0058, CROSS_EDGE: B:60:0x0039 \-\> B:66:0x0049, CROSS_EDGE: B:54:0x0029 \-\> B:55:0x002a, CROSS_EDGE: B:50:0x001e \-\> B:59:0x0033, CROSS_EDGE: B:44:0x0010 \-\> B:45:0x0011, CROSS_EDGE: B:40:0x0006 \-\> B:49:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0011: r0 '$i$a$\-assert\-CancellableContinuationImpl$resetStateReusable$1' I\l  0x0021\-0x002a: r0 '$i$a$\-assert\-CancellableContinuationImpl$resetStateReusable$2' I\l  0x003c\-0x003e: r3 '$i$a$\-assert\-CancellableContinuationImpl$resetStateReusable$3' I\l  0x0035\-0x005e: r0 'state' Ljava\/lang\/Object;\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_49;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_45;
Node_45 -> Node_47;
Node_45 -> Node_49[style=dashed];
Node_47 -> Node_48;
Node_48 -> Node_38;
Node_44 -> Node_45;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_59;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_55;
Node_55 -> Node_57;
Node_55 -> Node_59[style=dashed];
Node_57 -> Node_58;
Node_58 -> Node_38;
Node_54 -> Node_55;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_66;
Node_61 -> Node_62;
Node_62 -> Node_64;
Node_62 -> Node_66[style=dashed];
Node_64 -> Node_65;
Node_65 -> Node_38;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_72;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_72;
Node_70 -> Node_71;
Node_71 -> Node_38;
Node_72 -> Node_73;
Node_73 -> Node_38;
}

