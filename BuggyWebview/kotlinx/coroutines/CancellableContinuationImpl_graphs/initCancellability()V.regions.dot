digraph "CFG forkotlinx.coroutines.CancellableContinuationImpl.initCancellability()V" {
subgraph cluster_Region_943438067 {
label = "R(2:1|(1:(1:7)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|kotlinx.coroutines.DisposableHandle kotlinx.coroutines.DisposableHandle r0 = installParentHandle()\l}"];
subgraph cluster_Region_1303343041 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2038884093 {
label = "IF [B:13:0x0004, B:16:0x000b] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0004|if (r0 != null) goto L5\l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|ADDED_TO_REGION\l|if (isCompleted() != false) goto L7\l}"];
subgraph cluster_Region_1396094542 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000d|r0.dispose()\lr2.parentHandle = kotlinx.coroutines.NonDisposableHandle.INSTANCE\l}"];
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0006|RETURN\lADDED_TO_REGION\l|return\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0007}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0016|ORIG_RETURN\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.CancellableContinuationImpl.initCancellability((r2v0 'this' kotlinx.coroutines.CancellableContinuationImpl\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0016 \-\> B:11:?, CROSS_EDGE: B:16:0x000b \-\> B:18:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lMETHOD_OVERRIDE: [kotlinx.coroutines.CancellableContinuation.initCancellability():void]\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_10 -> Node_12;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

