digraph "CFG forkotlinx.coroutines.CancellableContinuationImpl.resetStateReusable()Z" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000}"];
Node_40 [shape=record,label="{40\:\ 0x0006|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L11\l}"];
Node_41 [shape=record,label="{41\:\ 0x0008}"];
Node_42 [shape=record,label="{42\:\ 0x000c|if (r5.resumeMode != 2) goto L10\l}"];
Node_43 [shape=record,label="{43\:\ 0x000e|r0 = 1\l}"];
Node_45 [shape=record,label="{45\:\ 0x0011|PHI: r0 \l  PHI: (r0v10 int) = (r0v9 int), (r0v12 int) binds: [B:44:0x0010, B:43:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == 0) goto L7\l}"];
Node_47 [shape=record,label="{47\:\ 0x0014}"];
Node_48 [shape=record,label="{48\:\ 0x0019|throw new java.lang.AssertionError()\l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0010|r0 = 0\l}"];
Node_49 [shape=record,label="{49\:\ 0x001a}"];
Node_50 [shape=record,label="{50\:\ 0x001e|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L20\l}"];
Node_51 [shape=record,label="{51\:\ 0x0020}"];
Node_52 [shape=record,label="{52\:\ 0x0025|if (r5.parentHandle == kotlinx.coroutines.NonDisposableHandle.INSTANCE) goto L19\l}"];
Node_53 [shape=record,label="{53\:\ 0x0027|r0 = 1\l}"];
Node_55 [shape=record,label="{55\:\ 0x002a|PHI: r0 \l  PHI: (r0v5 int) = (r0v4 int), (r0v7 int) binds: [B:54:0x0029, B:53:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == 0) goto L17\l}"];
Node_57 [shape=record,label="{57\:\ 0x002d}"];
Node_58 [shape=record,label="{58\:\ 0x0032|throw new java.lang.AssertionError()\l}"];
Node_54 [shape=record,label="{54\:\ 0x0029|r0 = 0\l}"];
Node_59 [shape=record,label="{59\:\ 0x0033|java.lang.Object r0 = r5._state\l}"];
Node_60 [shape=record,label="{60\:\ 0x0039|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L26\l}"];
Node_61 [shape=record,label="{61\:\ 0x003b}"];
Node_62 [shape=record,label="{62\:\ 0x0040|if (((r0 instanceof kotlinx.coroutines.NotCompleted) ^ 1) == 0) goto L24\l}"];
Node_64 [shape=record,label="{64\:\ 0x0043}"];
Node_65 [shape=record,label="{65\:\ 0x0048|throw new java.lang.AssertionError()\l}"];
Node_66 [shape=record,label="{66\:\ 0x0049}"];
Node_67 [shape=record,label="{67\:\ 0x004b|if ((r0 instanceof kotlinx.coroutines.CompletedContinuation) == false) goto L32\l}"];
Node_68 [shape=record,label="{68\:\ 0x004d}"];
Node_69 [shape=record,label="{69\:\ 0x0052|if (((kotlinx.coroutines.CompletedContinuation) r0).idempotentResume == null) goto L32\l}"];
Node_70 [shape=record,label="{70\:\ 0x0054|detachChild$kotlinx_coroutines_core()\l}"];
Node_71 [shape=record,label="{71\:\ 0x0057|RETURN\l|return false\l}"];
Node_72 [shape=record,label="{72\:\ 0x0058|r5._decision = 0\lr5._state = kotlinx.coroutines.Active.INSTANCE\l}"];
Node_73 [shape=record,label="{73\:\ 0x005e|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public final boolean kotlinx.coroutines.CancellableContinuationImpl.resetStateReusable((r5v0 'this' kotlinx.coroutines.CancellableContinuationImpl\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:58:0x0032 \-\> B:38:?, CROSS_EDGE: B:65:0x0048 \-\> B:38:?, CROSS_EDGE: B:71:0x0057 \-\> B:38:?, CROSS_EDGE: B:73:0x005e \-\> B:38:?, CROSS_EDGE: B:67:0x004b \-\> B:72:0x0058, CROSS_EDGE: B:60:0x0039 \-\> B:66:0x0049, CROSS_EDGE: B:54:0x0029 \-\> B:55:0x002a, CROSS_EDGE: B:50:0x001e \-\> B:59:0x0033, CROSS_EDGE: B:44:0x0010 \-\> B:45:0x0011, CROSS_EDGE: B:40:0x0006 \-\> B:49:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_49;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_45;
Node_45 -> Node_47;
Node_45 -> Node_49[style=dashed];
Node_47 -> Node_48;
Node_48 -> Node_38;
Node_44 -> Node_45;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_59;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_55;
Node_55 -> Node_57;
Node_55 -> Node_59[style=dashed];
Node_57 -> Node_58;
Node_58 -> Node_38;
Node_54 -> Node_55;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_66;
Node_61 -> Node_62;
Node_62 -> Node_64;
Node_62 -> Node_66[style=dashed];
Node_64 -> Node_65;
Node_65 -> Node_38;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_72;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_72;
Node_70 -> Node_71;
Node_71 -> Node_38;
Node_72 -> Node_73;
Node_73 -> Node_38;
}

