digraph "CFG forkotlinx.coroutines.CancellableContinuationImpl.callOnCancellation(Lkotlin\/jvm\/functions\/Function1;Ljava\/lang\/Throwable;)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_12 [shape=record,label="{12\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0005, blocks: (B:12:0x0001), top: B:17:0x0001 \}\lCatch: all \-\> 0x0005\l|0x0001: INVOKE  \l  (r5 I:kotlin.jvm.functions.Function1 A[D('onCancellation' kotlin.jvm.functions.Function1)])\l  (r6 I:java.lang.Object A[D('cause' java.lang.Throwable)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0005, MD:(P1):R (m), TRY_ENTER, TRY_LEAVE] (LINE:219)\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x001a: RETURN   A[SYNTHETIC] (LINE:227)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0005|ExcHandler: all \-\> 0x0005\l|0x0005: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0005] (LINE:220)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext) = (r4 I:kotlinx.coroutines.CancellableContinuationImpl) type: VIRTUAL call: kotlinx.coroutines.CancellableContinuationImpl.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)] (LINE:223)\l0x000a: NEW_INSTANCE  (r2 I:kotlinx.coroutines.CompletionHandlerException) =  kotlinx.coroutines.CompletionHandlerException  (LINE:224)\l0x000c: CONST_STR  (r3 I:java.lang.String) =  \"Exception in resume onCancellation handler for \" \l0x000e: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String), (r4 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x0012: INVOKE  \l  (r2 I:kotlinx.coroutines.CompletionHandlerException)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('ex' java.lang.Throwable)])\l type: DIRECT call: kotlinx.coroutines.CompletionHandlerException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (m)]\l0x0015: CHECK_CAST (r2 I:java.lang.Throwable) = (java.lang.Throwable) (r2 I:??[OBJECT, ARRAY]) \l0x0017: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext), (r2 I:java.lang.Throwable) type: STATIC call: kotlinx.coroutines.CoroutineExceptionHandlerKt.handleCoroutineException(kotlin.coroutines.CoroutineContext, java.lang.Throwable):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Throwable):void (m)] (LINE:222)\l}"];
Node_16 [shape=record,label="{16\:\ 0x001a|RETURN\lORIG_RETURN\l|0x001a: RETURN    (LINE:227)\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.CancellableContinuationImpl.callOnCancellation((r4 'this' I:kotlinx.coroutines.CancellableContinuationImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r5 I:kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\> A[D('onCancellation' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0006 \-\> B:16:0x001a, CROSS_EDGE: B:17:0x0001 \-\> B:14:0x0005\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0005, blocks: (B:12:0x0001), top: B:17:0x0001 \}\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Throwable;Lkotlin\/Unit;\>;Ljava\/lang\/Throwable;)V\lDebug Info:\l  0x0006\-0x001a: r0 'ex' Ljava\/lang\/Throwable;\l  \-1 \-0x001a: r5 'onCancellation' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x001a: r6 'cause' Ljava\/lang\/Throwable;\l}"];
MethodNode -> Node_10;Node_10 -> Node_17;
Node_17 -> Node_12;
Node_17 -> Node_14;
Node_12 -> Node_18;
Node_12 -> Node_19;
Node_18 -> Node_14;
Node_19 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_11;
}

