digraph "CFG forkotlinx.coroutines.CancellableContinuationImpl.\<init\>(Lkotlin\/coroutines\/Continuation;I)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  (r3 I:kotlinx.coroutines.DispatchedTask), (r5 I:int A[D('resumeMode' int)]) type: DIRECT call: kotlinx.coroutines.DispatchedTask.\<init\>(int):void A[MD:(int):void (m)] (LINE:29)\l0x0003: IPUT  \l  (r4 I:kotlin.coroutines.Continuation\<T\> A[D('delegate' kotlin.coroutines.Continuation)])\l  (r3 I:kotlinx.coroutines.CancellableContinuationImpl)\l kotlinx.coroutines.CancellableContinuationImpl.delegate kotlin.coroutines.Continuation  (LINE:27)\l0x0006: INVOKE  (r0 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:31)\l0x000a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001d \l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|0x000d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:594)\l0x000e: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:31)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|0x000f: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('resumeMode' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0013 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|0x0011: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|0x0014: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0017 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|0x0017: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0019: INVOKE  (r0 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x001c|0x001c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|0x0013: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x001d|0x001e: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext) = (r4 I:kotlin.coroutines.Continuation A[D('delegate' kotlin.coroutines.Continuation)]) type: INTERFACE call: kotlin.coroutines.Continuation.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)] (LINE:34)\l0x0022: IPUT  (r0 I:kotlin.coroutines.CoroutineContext), (r3 I:kotlinx.coroutines.CancellableContinuationImpl) kotlinx.coroutines.CancellableContinuationImpl.context kotlin.coroutines.CoroutineContext \l0x0024: IPUT  (r1 I:int), (r3 I:kotlinx.coroutines.CancellableContinuationImpl) kotlinx.coroutines.CancellableContinuationImpl._decision int  (LINE:62)\l0x0026: SGET  (r0 I:kotlinx.coroutines.Active) =  kotlinx.coroutines.Active.INSTANCE kotlinx.coroutines.Active  (LINE:73)\l0x0028: IPUT  (r0 I:java.lang.Object), (r3 I:kotlinx.coroutines.CancellableContinuationImpl) kotlinx.coroutines.CancellableContinuationImpl._state java.lang.Object \l}"];
Node_27 [shape=record,label="{27\:\ 0x002a|RETURN\l|0x002a: RETURN    (LINE:26)\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.CancellableContinuationImpl.\<init\>((r3 'this' I:kotlinx.coroutines.CancellableContinuationImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlin.coroutines.Continuation\<? super T\> A[D('delegate' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('resumeMode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x002a \-\> B:15:?, CROSS_EDGE: B:21:0x0013 \-\> B:22:0x0014, CROSS_EDGE: B:17:0x000b \-\> B:26:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000e\-0x0014: r0 '$i$a$\-assert\-CancellableContinuationImpl$1' I\l  \-1 \-0x002a: r4 'delegate' Lkotlin\/coroutines\/Continuation;\l  \-1 \-0x002a: r5 'resumeMode' I\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<\-TT;\>;I)V\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_24;
Node_22 -> Node_26[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_21 -> Node_22;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

