digraph "CFG forkotlinx.coroutines.CancellableContinuationImpl.releaseClaimedReusableContinuation()V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|kotlin.coroutines.Continuation\<T\> r0 = r3.delegate\lr2 = null\l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|if ((r0 instanceof kotlinx.coroutines.internal.DispatchedContinuation) == false) goto L11\l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|kotlinx.coroutines.internal.DispatchedContinuation r0 = (kotlinx.coroutines.internal.DispatchedContinuation) r0\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.internal.DispatchedContinuation) = (r0v1 kotlinx.coroutines.internal.DispatchedContinuation), (r0v4 kotlinx.coroutines.internal.DispatchedContinuation) binds: [B:18:0x000a, B:17:0x0007] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != null) goto L5\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|java.lang.Throwable r2 = r0.tryReleaseClaimedContinuation(r3)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|PHI: r2 \l  PHI: (r2v1 java.lang.Throwable) = (r2v0 java.lang.Throwable), (r2v2 java.lang.Throwable) binds: [B:19:0x000b, B:21:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 != null) goto L9\l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0018|r0 = r2\ldetachChild$kotlinx_coroutines_core()\lcancel(r0)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001f|RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|r0 = null\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.CancellableContinuationImpl.releaseClaimedReusableContinuation((r3v0 'this' kotlinx.coroutines.CancellableContinuationImpl\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x001f \-\> B:14:?, CROSS_EDGE: B:19:0x000b \-\> B:22:0x0015, CROSS_EDGE: B:18:0x000a \-\> B:19:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_22[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
Node_18 -> Node_19;
}

