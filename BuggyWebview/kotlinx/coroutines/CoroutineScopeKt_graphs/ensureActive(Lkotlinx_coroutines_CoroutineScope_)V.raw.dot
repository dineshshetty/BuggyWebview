digraph "CFG forkotlinx.coroutines.CoroutineScopeKt.ensureActive(Lkotlinx\/coroutines\/CoroutineScope;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext) = (r1 I:kotlinx.coroutines.CoroutineScope A[D('$this$ensureActive' kotlinx.coroutines.CoroutineScope)]) type: INTERFACE call: kotlinx.coroutines.CoroutineScope.getCoroutineContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)] (LINE:313)\l0x0004: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext) type: STATIC call: kotlinx.coroutines.JobKt.ensureActive(kotlin.coroutines.CoroutineContext):void A[MD:(kotlin.coroutines.CoroutineContext):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0007|RETURN\l|0x0007: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.CoroutineScopeKt.ensureActive((r1 I:kotlinx.coroutines.CoroutineScope A[D('$this$ensureActive' kotlinx.coroutines.CoroutineScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r1 '$this$ensureActive' Lkotlinx\/coroutines\/CoroutineScope;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

