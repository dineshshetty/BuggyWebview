digraph "CFG forkotlinx.coroutines.AbstractCoroutine.\<init\>(Lkotlin\/coroutines\/CoroutineContext;ZZ)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|super(r4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0004|if (r3 == false) goto L4\l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|initParentJob((kotlinx.coroutines.Job) r2.get(kotlinx.coroutines.Job.Key))\l}"];
Node_12 [shape=record,label="{12\:\ 0x0013|r1.context = r2.plus(r1)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.AbstractCoroutine.\<init\>((r1v0 'this' kotlinx.coroutines.AbstractCoroutine\<T\> A[IMMUTABLE_TYPE, THIS]), (r2v0 'parentContext' kotlin.coroutines.CoroutineContext A[D('parentContext' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'initParentJob' boolean A[D('initParentJob' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'active' boolean A[D('active' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0004 \-\> B:12:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

