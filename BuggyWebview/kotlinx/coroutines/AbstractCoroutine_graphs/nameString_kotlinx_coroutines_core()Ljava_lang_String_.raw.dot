digraph "CFG forkotlinx.coroutines.AbstractCoroutine.nameString$kotlinx_coroutines_core()Ljava\/lang\/String;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:kotlin.coroutines.CoroutineContext) = (r3 I:kotlinx.coroutines.AbstractCoroutine) kotlinx.coroutines.AbstractCoroutine.context kotlin.coroutines.CoroutineContext  (LINE:112)\l0x0002: INVOKE  (r0 I:java.lang.String) = (r0 I:kotlin.coroutines.CoroutineContext) type: STATIC call: kotlinx.coroutines.CoroutineContextKt.getCoroutineName(kotlin.coroutines.CoroutineContext):java.lang.String A[MD:(kotlin.coroutines.CoroutineContext):java.lang.String (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x000d \l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|0x0008: INVOKE  (r0 I:java.lang.String) = (r3 I:kotlinx.coroutines.JobSupport) type: SUPER call: kotlinx.coroutines.JobSupport.nameString$kotlinx_coroutines_core():java.lang.String A[MD:():java.lang.String (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:java.lang.String) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000d|0x000d: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:113)\l0x000f: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0012: CONST  (r2 I:??[int, float, short, byte, char]) = (34 ??[int, float, short, byte, char]) \l0x0014: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0017: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.String A[D('coroutineName' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001a: CONST_STR  (r2 I:java.lang.String) =  \"\":\" \l0x001c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001f: INVOKE  (r2 I:java.lang.String) = (r3 I:kotlinx.coroutines.JobSupport) type: SUPER call: kotlinx.coroutines.JobSupport.nameString$kotlinx_coroutines_core():java.lang.String A[MD:():java.lang.String (m)]\l0x0023: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0026: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|RETURN\l|0x002a: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String kotlinx.coroutines.AbstractCoroutine.nameString$kotlinx_coroutines_core((r3 'this' I:kotlinx.coroutines.AbstractCoroutine\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x002a \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x002a: r0 'coroutineName' Ljava\/lang\/String;\lTYPE_VARS: [T]\lMETHOD_OVERRIDE: [kotlinx.coroutines.JobSupport.nameString$kotlinx_coroutines_core():java.lang.String]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

