digraph "CFG forkotlinx.coroutines.ThreadState.setup()V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.Job) = (r6 I:kotlinx.coroutines.ThreadState) kotlinx.coroutines.ThreadState.job kotlinx.coroutines.Job  (LINE:102)\l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0003: CHECK_CAST (r1 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r1 I:??[OBJECT, ARRAY]) \l0x0005: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0006: INVOKE  (r0 I:kotlinx.coroutines.DisposableHandle) = (r0 I:kotlinx.coroutines.Job), (r2 I:boolean), (r2 I:boolean), (r1 I:kotlin.jvm.functions.Function1) type: INTERFACE call: kotlinx.coroutines.Job.invokeOnCompletion(boolean, boolean, kotlin.jvm.functions.Function1):kotlinx.coroutines.DisposableHandle A[MD:(boolean, boolean, kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\>):kotlinx.coroutines.DisposableHandle (m)]\l0x000a: IPUT  (r0 I:kotlinx.coroutines.DisposableHandle), (r6 I:kotlinx.coroutines.ThreadState) kotlinx.coroutines.ThreadState.cancelHandle kotlinx.coroutines.DisposableHandle \l0x000c: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY])  (LINE:104)\l0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|LOOP_START\lLOOP:0: B:18:0x000e\-\>B:24:0x0026\l|0x000f: IGET  (r2 I:int) = (r0 I:kotlinx.coroutines.ThreadState A[D('$this$loop$iv' kotlinx.coroutines.ThreadState)]) kotlinx.coroutines.ThreadState._state int  (LINE:164)\l0x0011: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|0x0012: SWITCH  (r2 I:?? A[D('state' int)])\l case 0: goto B:23:0x001f\l case 1: goto B:27:0x0015\l case 2: goto B:28:0x001e\l case 3: goto B:28:0x001e\l default: goto B:27:0x0015  (LINE:105)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001f|0x001f: SGET  (r4 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater) =  kotlinx.coroutines.ThreadState._state$FU java.util.concurrent.atomic.AtomicIntegerFieldUpdater  (LINE:107)\l0x0021: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0022: INVOKE  (r4 I:boolean) = \l  (r4 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater)\l  (r6 I:java.lang.Object)\l  (r2 I:int A[D('state' int)])\l  (r5 I:int)\l type: VIRTUAL call: java.util.concurrent.atomic.AtomicIntegerFieldUpdater.compareAndSet(java.lang.Object, int, int):boolean A[MD:(T, int, int):boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0026|LOOP_END\lLOOP:0: B:18:0x000e\-\>B:24:0x0026\l|0x0026: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000e \l}"];
Node_29 [shape=record,label="{29\:\ 0x0028|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0028|RETURN\l|0x0028: RETURN   \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0015|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0015|0x0015: INVOKE  (r6 I:kotlinx.coroutines.ThreadState), (r2 I:int A[D('state' int)]) type: DIRECT call: kotlinx.coroutines.ThreadState.invalidState(int):java.lang.Void A[MD:(int):java.lang.Void (m)] (LINE:110)\l0x0018: NEW_INSTANCE  (r4 I:kotlin.KotlinNothingValueException) =  kotlin.KotlinNothingValueException \l0x001a: INVOKE  (r4 I:kotlin.KotlinNothingValueException) type: DIRECT call: kotlin.KotlinNothingValueException.\<init\>():void A[MD:():void (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001d|0x001d: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ 0x001e|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x001e|RETURN\l|0x001e: RETURN    (LINE:109)\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.ThreadState.setup((r6 'this' I:kotlinx.coroutines.ThreadState A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x001e \-\> B:16:?, CROSS_EDGE: B:25:0x0028 \-\> B:16:?, BACK_EDGE: B:24:0x0026 \-\> B:18:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x002a: r2 'state' I\l  0x0012\-0x002a: r3 '$i$a$\-loop\-ThreadState$setup$1' I\l  0x000d\-0x0037: r0 '$this$loop$iv' Lkotlinx\/coroutines\/ThreadState;\l  0x000e\-0x0037: r1 '$i$f$loop' I\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_23;
Node_19 -> Node_27;
Node_19 -> Node_28;
Node_23 -> Node_24;
Node_24 -> Node_18;
Node_24 -> Node_29[style=dashed];
Node_29 -> Node_25;
Node_25 -> Node_16;
Node_27 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_16;
Node_28 -> Node_22;
Node_22 -> Node_16;
}

