digraph "CFG forkotlinx.coroutines.AwaitAll.await(Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY])  (LINE:71)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY] A[D('$completion' kotlin.coroutines.Continuation)])  (LINE:128)\l0x0005: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: NEW_INSTANCE  (r4 I:kotlinx.coroutines.CancellableContinuationImpl) =  kotlinx.coroutines.CancellableContinuationImpl  (LINE:129)\l0x0008: INVOKE  (r5 I:kotlin.coroutines.Continuation) = (r2 I:kotlin.coroutines.Continuation A[D('uCont$iv' kotlin.coroutines.Continuation)]) type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.intercepted(kotlin.coroutines.Continuation):kotlin.coroutines.Continuation A[MD:\<T\>:(kotlin.coroutines.Continuation\<? super T\>):kotlin.coroutines.Continuation\<T\> (m)]\l0x000c: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000d: INVOKE  (r4 I:kotlinx.coroutines.CancellableContinuationImpl), (r5 I:kotlin.coroutines.Continuation), (r6 I:int) type: DIRECT call: kotlinx.coroutines.CancellableContinuationImpl.\<init\>(kotlin.coroutines.Continuation, int):void A[MD:(kotlin.coroutines.Continuation\<? super T\>, int):void (m)]\l0x0010: INVOKE  \l  (r4 I:kotlinx.coroutines.CancellableContinuationImpl A[D('cancellable$iv' kotlinx.coroutines.CancellableContinuationImpl)])\l type: VIRTUAL call: kotlinx.coroutines.CancellableContinuationImpl.initCancellability():void A[MD:():void (m)] (LINE:135)\l0x0013: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('cancellable$iv' kotlinx.coroutines.CancellableContinuationImpl)])  (LINE:136)\l0x0014: CHECK_CAST (r5 I:kotlinx.coroutines.CancellableContinuation) = (kotlinx.coroutines.CancellableContinuation) (r5 I:??[OBJECT, ARRAY]) \l0x0016: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: INVOKE  (r7 I:kotlinx.coroutines.Deferred[]) = (r17 I:kotlinx.coroutines.AwaitAll) type: STATIC call: kotlinx.coroutines.AwaitAll.access$getDeferreds$p(kotlinx.coroutines.AwaitAll):kotlinx.coroutines.Deferred[] A[MD:(kotlinx.coroutines.AwaitAll):kotlinx.coroutines.Deferred[] (m)] (LINE:74)\l0x001b: ARRAY_LENGTH  (r7 I:int) = (r7 I:??[]) \l0x001c: NEW_ARRAY  (r8 I:kotlinx.coroutines.AwaitAll$AwaitAllNode[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: kotlinx.coroutines.AwaitAll$AwaitAllNode[] \l0x001e: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001f: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|LOOP_START\lLOOP:0: B:3:0x0020\-\>B:4:0x0022\l|0x0020: IF  (r10 I:??[int, byte, short, char]) \>= (r7 I:??[int, byte, short, char])  \-\> B:17:0x0048 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|LOOP_END\lLOOP:0: B:3:0x0020\-\>B:4:0x0022\l|0x0022: INVOKE  (r11 I:kotlinx.coroutines.Deferred[]) = (r17 I:kotlinx.coroutines.AwaitAll) type: STATIC call: kotlinx.coroutines.AwaitAll.access$getDeferreds$p(kotlinx.coroutines.AwaitAll):kotlinx.coroutines.Deferred[] A[MD:(kotlinx.coroutines.AwaitAll):kotlinx.coroutines.Deferred[] (m)] (LINE:75)\l0x0026: AGET  (r11 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY][]), (r10 I:??[int, short, byte, char]) \l0x0028: INVOKE  (r11 I:kotlinx.coroutines.Deferred A[D('deferred' kotlinx.coroutines.Deferred)]) type: INTERFACE call: kotlinx.coroutines.Deferred.start():boolean A[MD:():boolean (m)] (LINE:76)\l0x002b: NEW_INSTANCE  (r12 I:kotlinx.coroutines.AwaitAll$AwaitAllNode) =  kotlinx.coroutines.AwaitAll$AwaitAllNode  (LINE:77)\l0x002d: INVOKE  \l  (r12 I:kotlinx.coroutines.AwaitAll$AwaitAllNode)\l  (r0 I:kotlinx.coroutines.AwaitAll)\l  (r5 I:kotlinx.coroutines.CancellableContinuation A[D('cont' kotlinx.coroutines.CancellableContinuation)])\l type: DIRECT call: kotlinx.coroutines.AwaitAll.AwaitAllNode.\<init\>(kotlinx.coroutines.AwaitAll, kotlinx.coroutines.CancellableContinuation):void A[MD:(kotlinx.coroutines.AwaitAll, kotlinx.coroutines.CancellableContinuation\<? super java.util.List\<? extends T\>\>):void (m)]\l0x0030: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY]) \l0x0031: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0032: MOVE  (r15 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY] A[D('$this$await_u24lambda_u2d2_u24lambda_u2d0' kotlinx.coroutines.AwaitAll$AwaitAllNode)])  (LINE:78)\l0x0033: CHECK_CAST (r15 I:kotlinx.coroutines.CompletionHandlerBase) = (kotlinx.coroutines.CompletionHandlerBase) (r15 I:??[OBJECT, ARRAY]) \l0x0035: CONST  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0037: CHECK_CAST (r15 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r15 I:??[OBJECT, ARRAY] A[D('$this$asHandler$iv' kotlinx.coroutines.CompletionHandlerBase)])  (LINE:137)\l0x0039: INVOKE  (r15 I:kotlinx.coroutines.DisposableHandle) = \l  (r11 I:kotlinx.coroutines.Deferred A[D('deferred' kotlinx.coroutines.Deferred)])\l  (r15 I:kotlin.jvm.functions.Function1 A[D('$this$asHandler$iv' kotlinx.coroutines.CompletionHandlerBase)])\l type: INTERFACE call: kotlinx.coroutines.Deferred.invokeOnCompletion(kotlin.jvm.functions.Function1):kotlinx.coroutines.DisposableHandle A[MD:(kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\>):kotlinx.coroutines.DisposableHandle (m)] (LINE:78)\l0x003d: INVOKE  \l  (r13 I:kotlinx.coroutines.AwaitAll$AwaitAllNode A[D('$this$await_u24lambda_u2d2_u24lambda_u2d0' kotlinx.coroutines.AwaitAll$AwaitAllNode)])\l  (r15 I:kotlinx.coroutines.DisposableHandle)\l type: VIRTUAL call: kotlinx.coroutines.AwaitAll.AwaitAllNode.setHandle(kotlinx.coroutines.DisposableHandle):void A[MD:(kotlinx.coroutines.DisposableHandle):void (m)]\l0x0041: SGET  (r13 I:kotlin.Unit A[D('$this$await_u24lambda_u2d2_u24lambda_u2d0' kotlinx.coroutines.AwaitAll$AwaitAllNode)]) =  kotlin.Unit.INSTANCE kotlin.Unit \l0x0043: APUT  (r8 I:??[OBJECT, ARRAY][]), (r10 I:??[int, short, byte, char]), (r12 I:??[OBJECT, ARRAY])  (LINE:77)\l0x0045: ARITH  (r10 I:int) = (r10 I:int) + (1 int)  (LINE:74)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|SYNTHETIC\l}"];
Node_5 [shape=record,label="{5\:\ 0x0048|0x0048: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x0049: NEW_INSTANCE  (r8 I:kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel) =  kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel  (LINE:81)\l0x004b: INVOKE  \l  (r8 I:kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel)\l  (r0 I:kotlinx.coroutines.AwaitAll)\l  (r7 I:kotlinx.coroutines.AwaitAll$AwaitAllNode[] A[D('nodes' kotlinx.coroutines.AwaitAll$AwaitAllNode[])])\l type: DIRECT call: kotlinx.coroutines.AwaitAll.DisposeHandlersOnCancel.\<init\>(kotlinx.coroutines.AwaitAll, kotlinx.coroutines.AwaitAll$AwaitAllNode[]):void A[MD:(kotlinx.coroutines.AwaitAll, kotlinx.coroutines.AwaitAll\<T\>$AwaitAllNode[]):void (m)]\l0x004e: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('nodes' kotlinx.coroutines.AwaitAll$AwaitAllNode[])])  (LINE:83)\l0x004f: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0050: ARRAY_LENGTH  (r12 I:int) = (r10 I:??[] A[D('$this$forEach$iv' java.lang.Object[])])  (LINE:138)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0051|LOOP_START\lLOOP:1: B:6:0x0051\-\>B:7:0x0053\l|0x0051: IF  (r9 I:??[int, byte, short, char]) \>= (r12 I:??[int, byte, short, char])  \-\> B:18:0x005d \l}"];
Node_7 [shape=record,label="{7\:\ 0x0053|LOOP_END\lLOOP:1: B:6:0x0051\-\>B:7:0x0053\l|0x0053: AGET  (r13 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY][] A[D('$this$forEach$iv' java.lang.Object[])]), (r9 I:??[int, short, byte, char]) \l0x0055: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l0x0057: MOVE  (r14 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) \l0x0058: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0059: INVOKE  \l  (r14 I:kotlinx.coroutines.AwaitAll$AwaitAllNode A[D('it' kotlinx.coroutines.AwaitAll$AwaitAllNode)])\l  (r8 I:kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel A[D('disposer' kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel)])\l type: VIRTUAL call: kotlinx.coroutines.AwaitAll.AwaitAllNode.setDisposer(kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel):void A[MD:(kotlinx.coroutines.AwaitAll\<T\>$DisposeHandlersOnCancel):void (m)] (LINE:83)\l}"];
Node_18 [shape=record,label="{18\:\ 0x005d|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x005d|0x005e: INVOKE  (r9 I:boolean) = (r5 I:kotlinx.coroutines.CancellableContinuation A[D('cont' kotlinx.coroutines.CancellableContinuation)]) type: INTERFACE call: kotlinx.coroutines.CancellableContinuation.isCompleted():boolean A[MD:():boolean (m)] (LINE:86)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0062|0x0062: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0068 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0064|0x0064: INVOKE  \l  (r8 I:kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel A[D('disposer' kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel)])\l type: VIRTUAL call: kotlinx.coroutines.AwaitAll.DisposeHandlersOnCancel.disposeAll():void A[MD:():void (m)] (LINE:88)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0071|0x0072: INVOKE  (r2 I:java.lang.Object A[D('uCont$iv' kotlin.coroutines.Continuation)]) = \l  (r4 I:kotlinx.coroutines.CancellableContinuationImpl A[D('cancellable$iv' kotlinx.coroutines.CancellableContinuationImpl)])\l type: VIRTUAL call: kotlinx.coroutines.CancellableContinuationImpl.getResult():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:141)\l0x0076: INVOKE  (r3 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:128)\l}"];
Node_13 [shape=record,label="{13\:\ 0x007a|0x007a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0080 \l}"];
Node_14 [shape=record,label="{14\:\ 0x007c|0x007c: INVOKE  (r18 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)]) type: STATIC call: kotlin.coroutines.jvm.internal.DebugProbesKt.probeCoroutineSuspended(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<?\>):void (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0080|RETURN\l|0x0080: RETURN  (r2 I:java.lang.Object)  (LINE:92)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0068|0x0068: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('disposer' kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel)])  (LINE:90)\l0x0069: CHECK_CAST (r9 I:kotlinx.coroutines.CancelHandlerBase) = (kotlinx.coroutines.CancelHandlerBase) (r9 I:??[OBJECT, ARRAY]) \l0x006b: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x006c: CHECK_CAST (r9 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r9 I:??[OBJECT, ARRAY] A[D('$this$asHandler$iv' kotlinx.coroutines.CancelHandlerBase)])  (LINE:140)\l0x006e: INVOKE  \l  (r5 I:kotlinx.coroutines.CancellableContinuation A[D('cont' kotlinx.coroutines.CancellableContinuation)])\l  (r9 I:kotlin.jvm.functions.Function1 A[D('$this$asHandler$iv' kotlinx.coroutines.CancelHandlerBase)])\l type: INTERFACE call: kotlinx.coroutines.CancellableContinuation.invokeOnCancellation(kotlin.jvm.functions.Function1):void A[MD:(kotlin.jvm.functions.Function1\<? super java.lang.Throwable, kotlin.Unit\>):void (m)] (LINE:90)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.AwaitAll.await((r17 'this' I:kotlinx.coroutines.AwaitAll\<T\> A[IMMUTABLE_TYPE, THIS]), (r18 I:kotlin.coroutines.Continuation\<? super java.util.List\<? extends T\>\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:4:0x0022 \-\> B:3:0x0020, BACK_EDGE: B:7:0x0053 \-\> B:6:0x0051, CROSS_EDGE: B:13:0x007a \-\> B:16:0x0080, CROSS_EDGE: B:11:0x0068 \-\> B:12:0x0071\lDebug Info:\l  0x0035\-0x0039: r15 '$this$asHandler$iv' Lkotlinx\/coroutines\/CompletionHandlerBase;\l  0x0037\-0x0039: r16 '$i$f$getAsHandler' I\l  0x0031\-0x0041: r13 '$this$await_u24lambda_u2d2_u24lambda_u2d0' Lkotlinx\/coroutines\/AwaitAll$AwaitAllNode;\l  0x0032\-0x0041: r14 '$i$a$\-apply\-AwaitAll$await$2$nodes$1$1' I\l  0x0028\-0x0047: r11 'deferred' Lkotlinx\/coroutines\/Deferred;\l  0x0058\-0x005c: r14 'it' Lkotlinx\/coroutines\/AwaitAll$AwaitAllNode;\l  0x0059\-0x005c: r15 '$i$a$\-forEach\-AwaitAll$await$2$1' I\l  0x0055\-0x005d: r13 'element$iv' Ljava\/lang\/Object;\l  0x004f\-0x005e: r10 '$this$forEach$iv' [Ljava\/lang\/Object;\l  0x0050\-0x005e: r11 '$i$f$forEach' I\l  0x006b\-0x006e: r9 '$this$asHandler$iv' Lkotlinx\/coroutines\/CancelHandlerBase;\l  0x006c\-0x006e: r10 '$i$f$getAsHandler' I\l  0x0016\-0x0072: r5 'cont' Lkotlinx\/coroutines\/CancellableContinuation;\l  0x0017\-0x0072: r6 '$i$a$\-suspendCancellableCoroutine\-AwaitAll$await$2' I\l  0x0049\-0x0072: r7 'nodes' [Lkotlinx\/coroutines\/AwaitAll$AwaitAllNode;\l  0x004e\-0x0072: r8 'disposer' Lkotlinx\/coroutines\/AwaitAll$DisposeHandlersOnCancel;\l  0x0005\-0x0076: r2 'uCont$iv' Lkotlin\/coroutines\/Continuation;\l  0x0006\-0x0076: r3 '$i$a$\-suspendCoroutineUninterceptedOrReturn\-CancellableContinuationKt$suspendCancellableCoroutine$2$iv' I\l  0x0010\-0x0076: r4 'cancellable$iv' Lkotlinx\/coroutines\/CancellableContinuationImpl;\l  0x0003\-0x0080: r1 '$i$f$suspendCancellableCoroutine' I\l  \-1 \-0x0080: r18 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<\-Ljava\/util\/List\<+TT;\>;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_4 -> Node_3;
Node_17 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_18;
Node_7 -> Node_6;
Node_18 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_16;
Node_16 -> Node_1;
Node_11 -> Node_12;
}

