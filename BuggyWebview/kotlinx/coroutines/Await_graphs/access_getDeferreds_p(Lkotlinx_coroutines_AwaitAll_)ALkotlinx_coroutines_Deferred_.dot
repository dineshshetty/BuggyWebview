digraph "CFG forkotlinx.coroutines.AwaitAll.access$getDeferreds$p(Lkotlinx\/coroutines\/AwaitAll;)[Lkotlinx\/coroutines\/Deferred;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|RETURN\l|return r1.deferreds\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlinx.coroutines.Deferred[] kotlinx.coroutines.AwaitAll.access$getDeferreds$p((r1v0 '$this' kotlinx.coroutines.AwaitAll A[D('$this' kotlinx.coroutines.AwaitAll), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: IGET  (r1 I:kotlinx.coroutines.AwaitAll A[D('$this' kotlinx.coroutines.AwaitAll)]) kotlinx.coroutines.AwaitAll.deferreds kotlinx.coroutines.Deferred[]\lTYPE_VARS: [T]\lJadxCommentsAttr\{\l DEBUG: \l \-\> Marked for inline\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

