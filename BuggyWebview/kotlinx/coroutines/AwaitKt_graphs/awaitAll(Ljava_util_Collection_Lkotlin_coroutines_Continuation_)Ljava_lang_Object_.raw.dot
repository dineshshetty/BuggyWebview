digraph "CFG forkotlinx.coroutines.AwaitKt.awaitAll(Ljava\/util\/Collection;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r5 I:java.util.Collection A[D('$this$awaitAll' java.util.Collection)]) type: INTERFACE call: java.util.Collection.isEmpty():boolean A[MD:():boolean (c)] (LINE:42)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000b \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: INVOKE  (r0 I:java.util.List) =  type: STATIC call: kotlin.collections.CollectionsKt.emptyList():java.util.List A[MD:\<T\>:():java.util.List\<T\> (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:java.lang.Object) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:kotlinx.coroutines.AwaitAll) =  kotlinx.coroutines.AwaitAll \l0x000d: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('$this$awaitAll' java.util.Collection)]) \l0x000e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$toTypedArray$iv' java.util.Collection)])  (LINE:129)\l0x0011: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:131)\l0x0012: NEW_ARRAY  (r4 I:kotlinx.coroutines.Deferred[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: kotlinx.coroutines.Deferred[] \l0x0014: INVOKE  (r4 I:java.lang.Object[]) = (r3 I:java.util.Collection A[D('thisCollection$iv' java.util.Collection)]), (r4 I:java.lang.Object[]) type: INTERFACE call: java.util.Collection.toArray(java.lang.Object[]):java.lang.Object[] A[MD:\<T\>:(T[]):T[] (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0018|0x0018: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0024 \l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|0x001a: CHECK_CAST (r4 I:kotlinx.coroutines.Deferred[]) = (kotlinx.coroutines.Deferred[]) (r4 I:??[OBJECT, ARRAY]) \l0x001c: INVOKE  (r0 I:kotlinx.coroutines.AwaitAll), (r4 I:kotlinx.coroutines.Deferred[]) type: DIRECT call: kotlinx.coroutines.AwaitAll.\<init\>(kotlinx.coroutines.Deferred[]):void A[MD:(kotlinx.coroutines.Deferred\<? extends T\>[]):void (m)] (LINE:42)\l0x001f: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.AwaitAll)\l  (r6 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: VIRTUAL call: kotlinx.coroutines.AwaitAll.await(kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlin.coroutines.Continuation\<? super java.util.List\<? extends T\>\>):java.lang.Object (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0023|RETURN\l|0x0023: RETURN  (r0 I:java.lang.Object) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0024|0x0024: NEW_INSTANCE  (r0 I:java.lang.NullPointerException) =  java.lang.NullPointerException  (LINE:131)\l0x0026: CONST_STR  (r4 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlin.Array\<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray\>\" \l0x0028: INVOKE  (r0 I:java.lang.NullPointerException), (r4 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x002b|0x002b: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.AwaitKt.awaitAll((r5 I:java.util.Collection\<? extends kotlinx.coroutines.Deferred\<? extends T\>\> A[D('$this$awaitAll' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.coroutines.Continuation\<? super java.util.List\<? extends T\>\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0023 \-\> B:13:?, CROSS_EDGE: B:23:0x002b \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000e\-0x001a: r1 '$this$toTypedArray$iv' Ljava\/util\/Collection;\l  0x000f\-0x001a: r2 '$i$f$toTypedArray' I\l  0x0011\-0x001a: r3 'thisCollection$iv' Ljava\/util\/Collection;\l  0x0024\-0x002b: r1 '$this$toTypedArray$iv' Ljava\/util\/Collection;\l  0x0024\-0x002b: r2 '$i$f$toTypedArray' I\l  0x0024\-0x002b: r3 'thisCollection$iv' Ljava\/util\/Collection;\l  \-1 \-0x002b: r5 '$this$awaitAll' Ljava\/util\/Collection;\l  \-1 \-0x002b: r6 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/Collection\<+Lkotlinx\/coroutines\/Deferred\<+TT;\>;\>;Lkotlin\/coroutines\/Continuation\<\-Ljava\/util\/List\<+TT;\>;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

