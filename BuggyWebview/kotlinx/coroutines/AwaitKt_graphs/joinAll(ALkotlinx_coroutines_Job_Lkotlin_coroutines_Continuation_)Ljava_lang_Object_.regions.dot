digraph "CFG forkotlinx.coroutines.AwaitKt.joinAll([Lkotlinx\/coroutines\/Job;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_471775696 {
label = "R(6:(2:3|(5:5|6|7|(2:14|(1:(1:18)))|21))|23|6|7|(0)|21) | DECL_VAR: kotlinx.coroutines.AwaitKt$joinAll$1 null, kotlinx.coroutines.AwaitKt$joinAll$1 null, int null, int null, kotlinx.coroutines.Job[] null\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2059212269 {
label = "IF [B:27:0x0002] THEN: R(2:3|(5:5|6|7|(2:14|(1:(1:18)))|21)) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0002|if ((r10 instanceof kotlinx.coroutines.AwaitKt$joinAll$1) != false) goto L3\l}"];
subgraph cluster_Region_843867034 {
label = "R(2:3|(5:5|6|7|(2:14|(1:(1:18)))|21))";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0004|kotlinx.coroutines.AwaitKt$joinAll$1 r0 = (kotlinx.coroutines.AwaitKt$joinAll$1) r10\l}"];
subgraph cluster_IfRegion_1060661010 {
label = "IF [B:29:0x000c] THEN: R(5:5|6|7|(2:14|(1:(1:18)))|21) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) != 0) goto L5\l}"];
subgraph cluster_Region_1566814857 {
label = "R(5:5|6|7|(2:14|(1:(1:18)))|21)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x000e|r0.label \-= Integer.MIN_VALUE\l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.AwaitKt$joinAll$1) = (r0v1 kotlinx.coroutines.AwaitKt$joinAll$1), (r0v5 kotlinx.coroutines.AwaitKt$joinAll$1) binds: [B:31:0x0014, B:30:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r10 = r0\ljava.lang.Object java.lang.Object r0 = r10.result\ljava.lang.Object java.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_1081673252 {
label = "Switch: 3
 case 0 -> R(2:22|1)
 case 1 -> R(2:11|1)
 case default -> R(1:9)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0022|switch(r10.label) \{\l    case 0: goto L22;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
subgraph cluster_Region_510031239 {
label = "R(2:22|1)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x003e|kotlin.ResultKt.throwOnFailure(r0)\lr3 = 0\lint r4 = r9.length\lr5 = r9\l}"];
Node_InsnContainer_760517241 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_692123586 {
label = "R(2:11|1)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x002d|int int r3 = r10.I$1\lint int r4 = r10.I$0\lkotlinx.coroutines.Job[] r5 = (kotlinx.coroutines.Job[]) r10.L$0\lkotlin.ResultKt.throwOnFailure(r0)\lr4 = r3\lr3 = r4\l}"];
Node_InsnContainer_591792654 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_835084790 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
}
}
subgraph cluster_LoopRegion_1295679531 {
label = "LOOP:0: (2:14|(1:(1:18)))";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0046|LOOP_START\lLOOP:0: B:38:0x0046\-\>B:42:0x005d\lPHI: r3 \l  PHI: (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:47:0x0046, B:42:0x005d] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r4) goto L14\l}"];
subgraph cluster_Region_2025918915 {
label = "R(2:14|(1:(1:18)))";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0048|kotlinx.coroutines.Job r2 = r5[r3]\lr3++\lr10.L$0 = r5\lr10.I$0 = r3\lr10.I$1 = r4\lr10.label = 1\l}"];
subgraph cluster_Region_1156846767 {
label = "R(1:(1:18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_955646888 {
label = "IF [B:40:0x005a] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x005a|if (r2.join(r10) == r1) goto L17\l}"];
subgraph cluster_Region_1859727489 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x005c|RETURN\l|return r1\l}"];
}
}
}
}
}
Node_44 [shape=record,label="{44\:\ 0x0062|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
}
}
}
Node_31 [shape=record,label="{31\:\ 0x0014|kotlinx.coroutines.AwaitKt$joinAll$1 r0 = new kotlinx.coroutines.AwaitKt$joinAll$1(r10)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.AwaitKt$joinAll$1) = (r0v1 kotlinx.coroutines.AwaitKt$joinAll$1), (r0v5 kotlinx.coroutines.AwaitKt$joinAll$1) binds: [B:31:0x0014, B:30:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r10 = r0\ljava.lang.Object java.lang.Object r0 = r10.result\ljava.lang.Object java.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_817261236 {
label = "Switch: 0";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0022|switch(r10.label) \{\l    case 0: goto L22;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
}
subgraph cluster_LoopRegion_1475440709 {
label = "LOOP:0: (0)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0046|LOOP_START\lLOOP:0: B:38:0x0046\-\>B:42:0x005d\lPHI: r3 \l  PHI: (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:47:0x0046, B:42:0x005d] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r4) goto L14\l}"];
subgraph cluster_Region_1438278300 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_44 [shape=record,label="{44\:\ 0x0062|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0000}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0025}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0046|SYNTHETIC\lPHI: r3 r4 r5 \l  PHI: (r3v1 int) = (r3v0 int), (r3v5 int) binds: [B:37:0x003e, B:36:0x002d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v3 int) binds: [B:37:0x003e, B:36:0x002d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 kotlinx.coroutines.Job[]) = (r5v0 kotlinx.coroutines.Job[]), (r5v3 kotlinx.coroutines.Job[]) binds: [B:37:0x003e, B:36:0x002d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x005d|LOOP_END\lLOOP:0: B:38:0x0046\-\>B:42:0x005d\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x005c|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x005f|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x005f}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.AwaitKt.joinAll((r9v0 kotlinx.coroutines.Job[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:41:0x005c \-\> B:25:?, BACK_EDGE: B:42:0x005d \-\> B:38:0x0046, CROSS_EDGE: B:44:0x0062 \-\> B:25:?, CROSS_EDGE: B:37:0x003e \-\> B:38:0x0046, CROSS_EDGE: B:31:0x0014 \-\> B:32:0x0019, CROSS_EDGE: B:27:0x0002 \-\> B:31:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Removed duplicated region for block: B:37:0x003e \l \-\> Removed duplicated region for block: B:36:0x002d \l \-\> Removed duplicated region for block: B:34:0x0025 \l \-\> Removed duplicated region for block: B:39:0x0048 \}\lSIGNATURE: ([Lkotlinx\/coroutines\/Job;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_24;Node_27 -> Node_28;
Node_27 -> Node_31[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_36;
Node_33 -> Node_37;
Node_37 -> Node_47;
Node_36 -> Node_47;
Node_35 -> Node_25;
Node_38 -> Node_39;
Node_38 -> Node_45[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_42[style=dashed];
Node_40 -> Node_46;
Node_41 -> Node_25;
Node_44 -> Node_25;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_36;
Node_33 -> Node_37;
Node_38 -> Node_39;
Node_38 -> Node_45[style=dashed];
Node_44 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_34 -> Node_35;
Node_47 -> Node_38;
Node_42 -> Node_38;
Node_46 -> Node_41;
Node_45 -> Node_43;
Node_43 -> Node_44;
}

