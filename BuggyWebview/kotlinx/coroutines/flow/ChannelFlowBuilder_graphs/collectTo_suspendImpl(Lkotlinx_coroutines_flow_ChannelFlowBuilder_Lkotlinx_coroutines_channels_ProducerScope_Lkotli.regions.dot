digraph "CFG forkotlinx.coroutines.flow.ChannelFlowBuilder.collectTo$suspendImpl(Lkotlinx\/coroutines\/flow\/ChannelFlowBuilder;Lkotlinx\/coroutines\/channels\/ProducerScope;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1960891696 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|java.lang.Object java.lang.Object r0 = r2.block.invoke(r3, r4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000a|RETURN\l|return r0 == kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED() ? r0 : kotlin.Unit.INSTANCE\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x000c}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x000d}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x000f}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.lang.Object kotlinx.coroutines.flow.ChannelFlowBuilder.collectTo$suspendImpl((r2v0 kotlinx.coroutines.flow.ChannelFlowBuilder A[D('this' kotlinx.coroutines.flow.ChannelFlowBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'scope' kotlinx.coroutines.channels.ProducerScope A[D('scope' kotlinx.coroutines.channels.ProducerScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 '$completion' kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x000f \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12;
Node_7 -> Node_9;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

