digraph "CFG forkotlinx.coroutines.flow.StartedEagerly.command(Lkotlinx\/coroutines\/flow\/StateFlow;)Lkotlinx\/coroutines\/flow\/Flow;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.flow.SharingCommand) =  kotlinx.coroutines.flow.SharingCommand.START kotlinx.coroutines.flow.SharingCommand  (LINE:148)\l0x0002: INVOKE  (r0 I:kotlinx.coroutines.flow.Flow) = (r0 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.flow.FlowKt.flowOf(java.lang.Object):kotlinx.coroutines.flow.Flow A[MD:\<T\>:(T):kotlinx.coroutines.flow.Flow\<T\> (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:kotlinx.coroutines.flow.Flow\<kotlinx.coroutines.flow.SharingCommand\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.flow.Flow\<kotlinx.coroutines.flow.SharingCommand\> kotlinx.coroutines.flow.StartedEagerly.command((r1 'this' I:kotlinx.coroutines.flow.StartedEagerly A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlinx.coroutines.flow.StateFlow\<java.lang.Integer\> A[D('subscriptionCount' kotlinx.coroutines.flow.StateFlow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0006: r2 'subscriptionCount' Lkotlinx\/coroutines\/flow\/StateFlow;\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/StateFlow\<Ljava\/lang\/Integer;\>;)Lkotlinx\/coroutines\/flow\/Flow\<Lkotlinx\/coroutines\/flow\/SharingCommand;\>;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.SharingStarted.command(kotlinx.coroutines.flow.StateFlow\<java.lang.Integer\>):kotlinx.coroutines.flow.Flow\<kotlinx.coroutines.flow.SharingCommand\>]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

