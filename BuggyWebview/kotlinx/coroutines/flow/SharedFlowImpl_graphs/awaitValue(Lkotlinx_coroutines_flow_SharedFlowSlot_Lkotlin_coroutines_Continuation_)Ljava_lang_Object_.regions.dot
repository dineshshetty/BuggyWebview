digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.awaitValue(Lkotlinx\/coroutines\/flow\/SharedFlowSlot;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1294907644 {
label = "R(5:1|15|10|(1:12)|14)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0000|kotlinx.coroutines.CancellableContinuationImpl kotlinx.coroutines.CancellableContinuationImpl r3 = new kotlinx.coroutines.CancellableContinuationImpl(kotlin.coroutines.intrinsics.IntrinsicsKt.intercepted(r15), 1)\lr3.initCancellability()\lkotlinx.coroutines.CancellableContinuation kotlinx.coroutines.CancellableContinuationImpl r4 = r3\l}"];
subgraph cluster_SynchronizedRegion_154114062 {
label = "Synchronized:R(2:2|(3:5|(1:7)(1:20)|8))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0015}"];
subgraph cluster_Region_1993706372 {
label = "R(3:5|(1:7)(1:20)|8)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0017|TRY_ENTER\lTryCatch #0 \{, blocks: (B:29:0x0017, B:31:0x0021, B:33:0x003b, B:32:0x002c), top: B:46:0x0017 \}\lCatch: all \-\> 0x0058\l|long long r8 = tryPeekLocked(r14)     \/\/ Catch: java.lang.Throwable \-\> L58\l}"];
subgraph cluster_IfRegion_1317283066 {
label = "IF [B:30:0x001f] THEN: R(1:7) ELSE: R(1:20)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x001f|if (r8 \< 0) goto L7\l}"];
subgraph cluster_Region_1939135016 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0021|TryCatch #0 \{, blocks: (B:29:0x0017, B:31:0x0021, B:33:0x003b, B:32:0x002c), top: B:46:0x0017 \}\lCatch: all \-\> 0x0058\l|r14.cont = r4     \/\/ Catch: java.lang.Throwable \-\> L58\lr14.cont = r4     \/\/ Catch: java.lang.Throwable \-\> L58\l}"];
}
subgraph cluster_Region_931374556 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x002c|TryCatch #0 \{, blocks: (B:29:0x0017, B:31:0x0021, B:33:0x003b, B:32:0x002c), top: B:46:0x0017 \}\lCatch: all \-\> 0x0058\l|kotlin.Result$Companion kotlin.Result.Companion r11 = kotlin.Result.Companion     \/\/ Catch: java.lang.Throwable \-\> L58\lr4.resumeWith(kotlin.Result.m144constructorimpl(kotlin.Unit.INSTANCE))     \/\/ Catch: java.lang.Throwable \-\> L58\l}"];
}
}
Node_33 [shape=record,label="{33\:\ 0x003b|TRY_LEAVE\lTryCatch #0 \{, blocks: (B:29:0x0017, B:31:0x0021, B:33:0x003b, B:32:0x002c), top: B:46:0x0017 \}\lCatch: all \-\> 0x0058\l|kotlin.Unit kotlin.Unit r7 = kotlin.Unit.INSTANCE     \/\/ Catch: java.lang.Throwable \-\> L58\l}"];
}
}
Node_35 [shape=record,label="{35\:\ 0x0040|java.lang.Object java.lang.Object r1 = r3.getResult()\l}"];
subgraph cluster_IfRegion_454357656 {
label = "IF [B:36:0x0048] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0048|if (r1 == kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()) goto L12\l}"];
subgraph cluster_Region_1768064491 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x004a|kotlin.coroutines.jvm.internal.DebugProbes.probeCoroutineSuspended(r15)\l}"];
}
}
Node_39 [shape=record,label="{39\:\ 0x0052|RETURN\l|return r1 == kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED() ? r1 : kotlin.Unit.INSTANCE\l}"];
}
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0016}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0017|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x003d|DONT_GENERATE\l|monitor\-exit()\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x004d}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0054}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0055}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0057}"];
Node_47 [shape=record,color=red,label="{47\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0058|REMOVE\lExcHandler: all \-\> 0x0058\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x005a|REMOVE\l|throw r7\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.SharedFlowImpl.awaitValue((r13v0 'this' kotlinx.coroutines.flow.SharedFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r14v0 'slot' kotlinx.coroutines.flow.SharedFlowSlot A[D('slot' kotlinx.coroutines.flow.SharedFlowSlot), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:42:0x0057 \-\> B:25:?, CROSS_EDGE: B:36:0x0048 \-\> B:38:0x004d, CROSS_EDGE: B:45:0x005a \-\> B:25:?, CROSS_EDGE: B:32:0x002c \-\> B:33:0x003b, CROSS_EDGE: B:46:0x0017 \-\> B:43:0x0058\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/SharedFlowSlot;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_24;Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_47;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_38[style=dashed];
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_39 -> Node_41;
Node_24 -> Node_26;
Node_28 -> Node_46;
Node_46 -> Node_29;
Node_46 -> Node_43;
Node_34 -> Node_35;
Node_38 -> Node_39;
Node_40 -> Node_25;
Node_41 -> Node_42;
Node_42 -> Node_25;
Node_47 -> Node_43;
Node_43 -> Node_45;
Node_45 -> Node_25;
}

