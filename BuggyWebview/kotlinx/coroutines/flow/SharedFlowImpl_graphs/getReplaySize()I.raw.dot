digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.getReplaySize()I" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:long) = (r4 I:kotlinx.coroutines.flow.SharedFlowImpl) type: DIRECT call: kotlinx.coroutines.flow.SharedFlowImpl.getHead():long A[MD:():long (m)] (LINE:346)\l0x0004: IGET  (r2 I:int) = (r4 I:kotlinx.coroutines.flow.SharedFlowImpl) kotlinx.coroutines.flow.SharedFlowImpl.bufferSize int \l0x0006: CAST (r2 I:long) = (long) (r2 I:int) \l0x0007: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l0x0008: IGET  (r2 I:long) = (r4 I:kotlinx.coroutines.flow.SharedFlowImpl) kotlinx.coroutines.flow.SharedFlowImpl.replayIndex long \l0x000a: ARITH  (r0 I:long) = (r0 I:long) \- (r2 I:long) \l0x000b: CAST (r1 I:int) = (int) (r0 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|RETURN\l|0x000c: RETURN  (r1 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final int kotlinx.coroutines.flow.SharedFlowImpl.getReplaySize((r4 'this' I:kotlinx.coroutines.flow.SharedFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

