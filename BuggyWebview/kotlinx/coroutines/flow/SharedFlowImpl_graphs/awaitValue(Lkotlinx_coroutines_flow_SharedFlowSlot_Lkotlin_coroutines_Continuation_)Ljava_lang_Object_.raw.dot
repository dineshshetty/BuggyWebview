digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.awaitValue(Lkotlinx\/coroutines\/flow\/SharedFlowSlot;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:661)\l0x0001: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY] A[D('$completion' kotlin.coroutines.Continuation)])  (LINE:766)\l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: NEW_INSTANCE  (r3 I:kotlinx.coroutines.CancellableContinuationImpl) =  kotlinx.coroutines.CancellableContinuationImpl  (LINE:767)\l0x0005: INVOKE  (r4 I:kotlin.coroutines.Continuation) = (r1 I:kotlin.coroutines.Continuation A[D('uCont$iv' kotlin.coroutines.Continuation)]) type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.intercepted(kotlin.coroutines.Continuation):kotlin.coroutines.Continuation A[MD:\<T\>:(kotlin.coroutines.Continuation\<? super T\>):kotlin.coroutines.Continuation\<T\> (m)]\l0x0009: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000a: INVOKE  (r3 I:kotlinx.coroutines.CancellableContinuationImpl), (r4 I:kotlin.coroutines.Continuation), (r5 I:int) type: DIRECT call: kotlinx.coroutines.CancellableContinuationImpl.\<init\>(kotlin.coroutines.Continuation, int):void A[MD:(kotlin.coroutines.Continuation\<? super T\>, int):void (m)]\l0x000d: INVOKE  \l  (r3 I:kotlinx.coroutines.CancellableContinuationImpl A[D('cancellable$iv' kotlinx.coroutines.CancellableContinuationImpl)])\l type: VIRTUAL call: kotlinx.coroutines.CancellableContinuationImpl.initCancellability():void A[MD:():void (m)] (LINE:773)\l0x0010: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('cancellable$iv' kotlinx.coroutines.CancellableContinuationImpl)])  (LINE:774)\l0x0011: CHECK_CAST (r4 I:kotlinx.coroutines.CancellableContinuation) = (kotlinx.coroutines.CancellableContinuation) (r4 I:??[OBJECT, ARRAY]) \l0x0013: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:662)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0015|0x0015: MONITOR_ENTER  (r13 I:??[OBJECT, ARRAY])  (LINE:775)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0016|0x0016: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0017|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0058, blocks: (B:29:0x0017, B:31:0x0021, B:33:0x003b, B:32:0x002c), top: B:46:0x0017 \}\lCatch: all \-\> 0x0058\l|0x0017: INVOKE  (r8 I:long) = \l  (r13 I:kotlinx.coroutines.flow.SharedFlowImpl)\l  (r14 I:kotlinx.coroutines.flow.SharedFlowSlot A[D('slot' kotlinx.coroutines.flow.SharedFlowSlot)])\l type: STATIC call: kotlinx.coroutines.flow.SharedFlowImpl.access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl, kotlinx.coroutines.flow.SharedFlowSlot):long A[Catch: all \-\> 0x0058, MD:(kotlinx.coroutines.flow.SharedFlowImpl, kotlinx.coroutines.flow.SharedFlowSlot):long (m), TRY_ENTER] (LINE:663)\l0x001b: CONST  (r10 I:??[long, double]) = (0 ??[long, double])  (LINE:664)\l0x001d: CMP_L  (r12 I:int) = (r8 I:long A[D('index' long)]), (r10 I:long) \l}"];
Node_30 [shape=record,label="{30\:\ 0x001f|0x001f: IF  (r12 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:32:0x002c \l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|TryCatch #0 \{all \-\> 0x0058, blocks: (B:29:0x0017, B:31:0x0021, B:33:0x003b, B:32:0x002c), top: B:46:0x0017 \}\lCatch: all \-\> 0x0058\l|0x0021: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('cont' kotlinx.coroutines.CancellableContinuation)])  (LINE:665)\l0x0022: CHECK_CAST (r10 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r10 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0058]\l0x0024: IPUT  \l  (r10 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\>)\l  (r14 I:kotlinx.coroutines.flow.SharedFlowSlot A[D('slot' kotlinx.coroutines.flow.SharedFlowSlot)])\l kotlinx.coroutines.flow.SharedFlowSlot.cont kotlin.coroutines.Continuation A[Catch: all \-\> 0x0058]\l0x0026: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('cont' kotlinx.coroutines.CancellableContinuation)])  (LINE:670)\l0x0027: CHECK_CAST (r10 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r10 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0058]\l0x0029: IPUT  \l  (r10 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\>)\l  (r14 I:kotlinx.coroutines.flow.SharedFlowSlot A[D('slot' kotlinx.coroutines.flow.SharedFlowSlot)])\l kotlinx.coroutines.flow.SharedFlowSlot.cont kotlin.coroutines.Continuation A[Catch: all \-\> 0x0058]\l0x002b: GOTO  \-\> 0x003b  (LINE:671)\l}"];
Node_33 [shape=record,label="{33\:\ 0x003b|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0058, blocks: (B:29:0x0017, B:31:0x0021, B:33:0x003b, B:32:0x002c), top: B:46:0x0017 \}\lCatch: all \-\> 0x0058\l|0x003b: SGET  (r7 I:kotlin.Unit A[D('$i$a$\-synchronized\-SharedFlowImpl$awaitValue$2$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x0058, TRY_LEAVE] (LINE:671)\l}"];
Node_34 [shape=record,label="{34\:\ 0x003d|0x003d: MONITOR_EXIT  (r13 I:??[OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0040|0x0040: INVOKE  (r1 I:java.lang.Object A[D('uCont$iv' kotlin.coroutines.Continuation)]) = \l  (r3 I:kotlinx.coroutines.CancellableContinuationImpl A[D('cancellable$iv' kotlinx.coroutines.CancellableContinuationImpl)])\l type: VIRTUAL call: kotlinx.coroutines.CancellableContinuationImpl.getResult():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:776)\l0x0044: INVOKE  (r2 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:766)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0048|0x0048: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x004d \l}"];
Node_37 [shape=record,label="{37\:\ 0x004a|0x004a: INVOKE  (r15 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)]) type: STATIC call: kotlin.coroutines.jvm.internal.DebugProbesKt.probeCoroutineSuspended(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<?\>):void (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x004d|0x004e: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0052|0x0052: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0055 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0054|RETURN\l|0x0054: RETURN  (r1 I:java.lang.Object) \l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x0055|0x0055: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_42 [shape=record,label="{42\:\ 0x0057|RETURN\l|0x0057: RETURN  (r0 I:java.lang.Object)  (LINE:672)\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_32 [shape=record,label="{32\:\ 0x002c|TryCatch #0 \{all \-\> 0x0058, blocks: (B:29:0x0017, B:31:0x0021, B:33:0x003b, B:32:0x002c), top: B:46:0x0017 \}\lCatch: all \-\> 0x0058\l|0x002c: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('cont' kotlinx.coroutines.CancellableContinuation)])  (LINE:667)\l0x002d: CHECK_CAST (r10 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r10 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0058]\l0x002f: SGET  (r11 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion A[Catch: all \-\> 0x0058]\l0x0031: SGET  (r11 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x0058]\l0x0033: INVOKE  (r11 I:java.lang.Object) = (r11 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0058, MD:\<T\>:(java.lang.Object):java.lang.Object (m)]\l0x0037: INVOKE  (r10 I:kotlin.coroutines.Continuation), (r11 I:java.lang.Object) type: INTERFACE call: kotlin.coroutines.Continuation.resumeWith(java.lang.Object):void A[Catch: all \-\> 0x0058, MD:(java.lang.Object):void (m)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0058|ExcHandler: all \-\> 0x0058\l|0x0058: MOVE_EXCEPTION  (r7 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0058] (LINE:671)\l}"];
Node_45 [shape=record,label="{45\:\ 0x005a|0x005a: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.SharedFlowImpl.awaitValue((r13 'this' I:kotlinx.coroutines.flow.SharedFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r14 I:kotlinx.coroutines.flow.SharedFlowSlot A[D('slot' kotlinx.coroutines.flow.SharedFlowSlot), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:42:0x0057 \-\> B:25:?, CROSS_EDGE: B:36:0x0048 \-\> B:38:0x004d, CROSS_EDGE: B:45:0x005a \-\> B:25:?, CROSS_EDGE: B:32:0x002c \-\> B:33:0x003b, CROSS_EDGE: B:46:0x0017 \-\> B:43:0x0058\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0058, blocks: (B:29:0x0017, B:31:0x0021, B:33:0x003b, B:32:0x002c), top: B:46:0x0017 \}\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/SharedFlowSlot;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x0017\-0x003b: r7 '$i$a$\-synchronized\-SharedFlowImpl$awaitValue$2$1' I\l  0x001b\-0x003b: r8 'index' J\l  0x0015\-0x003f: r6 '$i$f$synchronized' I\l  0x0013\-0x0040: r4 'cont' Lkotlinx\/coroutines\/CancellableContinuation;\l  0x0014\-0x0040: r5 '$i$a$\-suspendCancellableCoroutine\-SharedFlowImpl$awaitValue$2' I\l  0x0002\-0x0044: r1 'uCont$iv' Lkotlin\/coroutines\/Continuation;\l  0x0003\-0x0044: r2 '$i$a$\-suspendCoroutineUninterceptedOrReturn\-CancellableContinuationKt$suspendCancellableCoroutine$2$iv' I\l  0x000d\-0x0044: r3 'cancellable$iv' Lkotlinx\/coroutines\/CancellableContinuationImpl;\l  0x0001\-0x004e: r0 '$i$f$suspendCancellableCoroutine' I\l  0x0058\-0x005a: r0 '$i$f$suspendCancellableCoroutine' I\l  0x0058\-0x005a: r1 'uCont$iv' Lkotlin\/coroutines\/Continuation;\l  0x0058\-0x005a: r2 '$i$a$\-suspendCoroutineUninterceptedOrReturn\-CancellableContinuationKt$suspendCancellableCoroutine$2$iv' I\l  0x0058\-0x005a: r3 'cancellable$iv' Lkotlinx\/coroutines\/CancellableContinuationImpl;\l  0x0058\-0x005a: r4 'cont' Lkotlinx\/coroutines\/CancellableContinuation;\l  0x0058\-0x005a: r5 '$i$a$\-suspendCancellableCoroutine\-SharedFlowImpl$awaitValue$2' I\l  0x0058\-0x005a: r6 '$i$f$synchronized' I\l  \-1 \-0x005a: r14 'slot' Lkotlinx\/coroutines\/flow\/SharedFlowSlot;\l  \-1 \-0x005a: r15 '$completion' Lkotlin\/coroutines\/Continuation;\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_46;
Node_46 -> Node_29;
Node_46 -> Node_43;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_47;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_25;
Node_41 -> Node_42;
Node_42 -> Node_25;
Node_47 -> Node_43;
Node_32 -> Node_33;
Node_43 -> Node_45;
Node_45 -> Node_25;
}

