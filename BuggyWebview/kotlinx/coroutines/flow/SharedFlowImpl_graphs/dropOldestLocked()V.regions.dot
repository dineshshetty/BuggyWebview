digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.dropOldestLocked()V" {
subgraph cluster_Region_351535596 {
label = "R(4:1|(1:3)|(1:6)|(1:(1:(1:(1:14)))))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0000|java.lang.Object[] java.lang.Object[] r0 = r6.buffer\lkotlin.jvm.internal.Intrinsics.checkNotNull(r0)\lkotlinx.coroutines.flow.SharedFlowKt.setBufferAt(r0, getHead(), null)\lr6.bufferSize\-\-\llong long r0 = getHead() + 1\l}"];
subgraph cluster_IfRegion_1481715466 {
label = "IF [B:23:0x001e] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x001e|if (r6.replayIndex \< r0) goto L3\l}"];
subgraph cluster_Region_1914462337 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0020|r6.replayIndex = r0\l}"];
}
}
subgraph cluster_IfRegion_2018518118 {
label = "IF [B:26:0x0026] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0026|if (r6.minCollectorIndex \< r0) goto L6\l}"];
subgraph cluster_Region_1277145569 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0028|correctCollectorIndexesOnDropOldest(r0)\l}"];
}
}
subgraph cluster_Region_1326888044 {
label = "R(1:(1:(1:(1:14))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1211392680 {
label = "IF [B:29:0x002f] THEN: R(1:(1:(1:14))) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x002f|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() != false) goto L9\l}"];
subgraph cluster_Region_859912470 {
label = "R(1:(1:(1:14)))";
node [shape=record,color=blue];
subgraph cluster_Region_171213453 {
label = "R(1:(1:14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_493354519 {
label = "IF [B:34:0x003d] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x003d|PHI: r3 \l  PHI: (r3v3 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((getHead() == r0) != true) goto L13\l}"];
subgraph cluster_Region_1895559795 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0045|throw new java.lang.AssertionError()\l}"];
}
}
}
}
}
}
}
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0022}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x002b}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0031}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0038}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x003a}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0040}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,color=red,label="{39\:\ ?|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x003c}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0046|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.flow.SharedFlowImpl.dropOldestLocked((r6v0 'this' kotlinx.coroutines.flow.SharedFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0046 \-\> B:21:?, CROSS_EDGE: B:33:0x003c \-\> B:34:0x003d, CROSS_EDGE: B:29:0x002f \-\> B:38:0x0046, CROSS_EDGE: B:26:0x0026 \-\> B:28:0x002b, CROSS_EDGE: B:23:0x001e \-\> B:25:0x0022\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_20;Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_29 -> Node_38[style=dashed];
Node_34 -> Node_36;
Node_34 -> Node_39[style=dashed];
Node_37 -> Node_21;
Node_20 -> Node_22;
Node_25 -> Node_26;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_36 -> Node_37;
Node_39 -> Node_21;
Node_33 -> Node_34;
Node_38 -> Node_21;
}

