digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.\<init\>(IILkotlinx\/coroutines\/channels\/BufferOverflow;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.flow.internal.AbstractSharedFlow) type: DIRECT call: kotlinx.coroutines.flow.internal.AbstractSharedFlow.\<init\>():void A[MD:():void (m)] (LINE:307)\l0x0003: IPUT  (r1 I:int A[D('replay' int)]), (r0 I:kotlinx.coroutines.flow.SharedFlowImpl) kotlinx.coroutines.flow.SharedFlowImpl.replay int  (LINE:304)\l0x0005: IPUT  (r2 I:int A[D('bufferCapacity' int)]), (r0 I:kotlinx.coroutines.flow.SharedFlowImpl) kotlinx.coroutines.flow.SharedFlowImpl.bufferCapacity int  (LINE:305)\l0x0007: IPUT  \l  (r3 I:kotlinx.coroutines.channels.BufferOverflow A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow)])\l  (r0 I:kotlinx.coroutines.flow.SharedFlowImpl)\l kotlinx.coroutines.flow.SharedFlowImpl.onBufferOverflow kotlinx.coroutines.channels.BufferOverflow  (LINE:306)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:303)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.flow.SharedFlowImpl.\<init\>((r0 'this' I:kotlinx.coroutines.flow.SharedFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r1 I:int A[D('replay' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('bufferCapacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlinx.coroutines.channels.BufferOverflow A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0009: r1 'replay' I\l  \-1 \-0x0009: r2 'bufferCapacity' I\l  \-1 \-0x0009: r3 'onBufferOverflow' Lkotlinx\/coroutines\/channels\/BufferOverflow;\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

