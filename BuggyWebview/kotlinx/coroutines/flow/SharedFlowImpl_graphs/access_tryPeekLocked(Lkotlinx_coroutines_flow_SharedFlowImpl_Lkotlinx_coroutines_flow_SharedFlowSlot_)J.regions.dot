digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.access$tryPeekLocked(Lkotlinx\/coroutines\/flow\/SharedFlowImpl;Lkotlinx\/coroutines\/flow\/SharedFlowSlot;)J" {
subgraph cluster_Region_869776897 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|return r2.tryPeekLocked(r3)\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ long kotlinx.coroutines.flow.SharedFlowImpl.access$tryPeekLocked((r2v0 '$this' kotlinx.coroutines.flow.SharedFlowImpl A[D('$this' kotlinx.coroutines.flow.SharedFlowImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'slot' kotlinx.coroutines.flow.SharedFlowSlot A[D('slot' kotlinx.coroutines.flow.SharedFlowSlot), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  \l  (r2 I:kotlinx.coroutines.flow.SharedFlowImpl A[D('$this' kotlinx.coroutines.flow.SharedFlowImpl)])\l  (r3 I:kotlinx.coroutines.flow.SharedFlowSlot A[D('slot' kotlinx.coroutines.flow.SharedFlowSlot)])\l type: DIRECT call: kotlinx.coroutines.flow.SharedFlowImpl.tryPeekLocked(kotlinx.coroutines.flow.SharedFlowSlot):long\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_4;Node_7 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
}

