digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.enqueueLocked(Ljava\/lang\/Object;)V" {
subgraph cluster_Region_1801560502 {
label = "R(3:1|(1:3)(1:(1:9))|4)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|int int r0 = getTotalSize()\ljava.lang.Object[] java.lang.Object[] r1 = r6.buffer\l}"];
subgraph cluster_IfRegion_981495971 {
label = "IF [B:13:0x0007] THEN: R(1:3) ELSE: R(1:(1:9))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0007|if (r1 == null) goto L3\l}"];
subgraph cluster_Region_1544160901 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0009|r1 = growBuffer(null, 0, 2)\l}"];
}
subgraph cluster_Region_352997996 {
label = "R(1:(1:9)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1954024985 {
label = "IF [B:16:0x0012] THEN: R(1:9) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0012|if (r0 \>= r1.length) goto L9\l}"];
subgraph cluster_Region_1938689991 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0014|r1 = growBuffer(r1, r0, r1.length * 2)\l}"];
}
}
}
}
Node_18 [shape=record,label="{18\:\ 0x001c|PHI: r1 \l  PHI: (r1v2 'curBuffer' java.lang.Object[]) = (r1v0 'curBuffer' java.lang.Object[]), (r1v1 'curBuffer' java.lang.Object[]), (r1v3 'curBuffer' java.lang.Object[]) binds: [B:16:0x0012, B:17:0x0014, B:14:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.flow.SharedFlowKt.setBufferAt(r1, getHead() + r0, r7)\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0026}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0011}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.flow.SharedFlowImpl.enqueueLocked((r6v0 'this' kotlinx.coroutines.flow.SharedFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r7v0 'item' java.lang.Object A[D('item' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0014 \-\> B:18:0x001c, CROSS_EDGE: B:16:0x0012 \-\> B:18:0x001c\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_10 -> Node_12;
Node_19 -> Node_11;
Node_15 -> Node_16;
}

