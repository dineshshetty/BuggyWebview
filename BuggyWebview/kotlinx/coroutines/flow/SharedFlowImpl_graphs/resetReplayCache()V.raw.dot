digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.resetReplayCache()V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:690)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0001|0x0001: MONITOR_ENTER  (r11 I:??[OBJECT, ARRAY])  (LINE:785)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x001c, blocks: (B:18:0x0004), top: B:24:0x0004 \}\lCatch: all \-\> 0x001c\l|0x0004: INVOKE  (r3 I:long) = (r11 I:kotlinx.coroutines.flow.SharedFlowImpl) type: DIRECT call: kotlinx.coroutines.flow.SharedFlowImpl.getBufferEndIndex():long A[Catch: all \-\> 0x001c, MD:():long (m), TRY_ENTER] (LINE:693)\l0x0008: IGET  (r5 I:long) = (r11 I:kotlinx.coroutines.flow.SharedFlowImpl) kotlinx.coroutines.flow.SharedFlowImpl.minCollectorIndex long A[Catch: all \-\> 0x001c] (LINE:694)\l0x000a: INVOKE  (r7 I:long) = (r11 I:kotlinx.coroutines.flow.SharedFlowImpl) type: DIRECT call: kotlinx.coroutines.flow.SharedFlowImpl.getBufferEndIndex():long A[Catch: all \-\> 0x001c, MD:():long (m)] (LINE:695)\l0x000e: INVOKE  (r9 I:long) = (r11 I:kotlinx.coroutines.flow.SharedFlowImpl) type: DIRECT call: kotlinx.coroutines.flow.SharedFlowImpl.getQueueEndIndex():long A[Catch: all \-\> 0x001c, MD:():long (m)] (LINE:696)\l0x0012: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY])  (LINE:692)\l0x0013: INVOKE  (r2 I:kotlinx.coroutines.flow.SharedFlowImpl), (r3 I:long), (r5 I:long), (r7 I:long), (r9 I:long) type: DIRECT call: kotlinx.coroutines.flow.SharedFlowImpl.updateBufferLocked(long, long, long, long):void A[Catch: all \-\> 0x001c, MD:(long, long, long, long):void (m)]\l0x0017: SGET  (r1 I:kotlin.Unit A[D('$i$a$\-synchronized\-SharedFlowImpl$resetReplayCache$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x001c, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|0x0019: MONITOR_EXIT  (r11 I:??[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x001b|RETURN\l|0x001b: RETURN    (LINE:698)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ 0x001c|ExcHandler: all \-\> 0x001c\l|0x001c: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x001c]\l}"];
Node_23 [shape=record,label="{23\:\ 0x001e|0x001e: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.flow.SharedFlowImpl.resetReplayCache((r11 'this' I:kotlinx.coroutines.flow.SharedFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x001e \-\> B:14:?, CROSS_EDGE: B:24:0x0004 \-\> B:21:0x001c\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x001c, blocks: (B:18:0x0004), top: B:24:0x0004 \}\lTYPE_VARS: [T]\lDebug Info:\l  0x0003\-0x0017: r1 '$i$a$\-synchronized\-SharedFlowImpl$resetReplayCache$1' I\l  0x0001\-0x001b: r0 '$i$f$synchronized' I\l  0x001c\-0x001e: r0 '$i$f$synchronized' I\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.MutableSharedFlow.resetReplayCache():void]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_24;
Node_24 -> Node_18;
Node_24 -> Node_21;
Node_18 -> Node_19;
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_14;
Node_25 -> Node_21;
Node_21 -> Node_23;
Node_23 -> Node_14;
}

