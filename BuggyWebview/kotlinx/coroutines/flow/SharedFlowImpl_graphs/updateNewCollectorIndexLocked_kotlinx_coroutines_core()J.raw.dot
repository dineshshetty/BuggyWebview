digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.updateNewCollectorIndexLocked$kotlinx_coroutines_core()J" {
Node_6 [shape=record,label="{6\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0000|0x0000: IGET  (r0 I:long) = (r5 I:kotlinx.coroutines.flow.SharedFlowImpl) kotlinx.coroutines.flow.SharedFlowImpl.replayIndex long  (LINE:516)\l0x0002: IGET  (r2 I:long) = (r5 I:kotlinx.coroutines.flow.SharedFlowImpl) kotlinx.coroutines.flow.SharedFlowImpl.minCollectorIndex long  (LINE:517)\l0x0004: CMP_L  (r4 I:int) = (r0 I:long A[D('index' long)]), (r2 I:long) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0006|0x0006: IF  (r4 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:11:0x000a \l}"];
Node_10 [shape=record,label="{10\:\ 0x0008|0x0008: IPUT  (r0 I:long A[D('index' long)]), (r5 I:kotlinx.coroutines.flow.SharedFlowImpl) kotlinx.coroutines.flow.SharedFlowImpl.minCollectorIndex long \l}"];
Node_11 [shape=record,label="{11\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:long A[D('index' long)])  (LINE:518)\l}"];
Node_7 [shape=record,label="{7\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final long kotlinx.coroutines.flow.SharedFlowImpl.updateNewCollectorIndexLocked$kotlinx_coroutines_core((r5 'this' I:kotlinx.coroutines.flow.SharedFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0006 \-\> B:11:0x000a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x000a: r0 'index' J\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_6;Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_7;
}

