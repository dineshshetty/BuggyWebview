digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.dropOldestLocked()V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|java.lang.Object[] r0 = r6.buffer\lkotlin.jvm.internal.Intrinsics.checkNotNull(r0)\lkotlinx.coroutines.flow.SharedFlowKt.setBufferAt(r0, getHead(), null)\lr6.bufferSize = r6.bufferSize + (\-1)\llong r0 = getHead() + 1\l}"];
Node_23 [shape=record,label="{23\:\ 0x001e|if ((r6.replayIndex \> r0 ? 1 : (r6.replayIndex == r0 ? 0 : \-1)) \>= 0) goto L4\l}"];
Node_24 [shape=record,label="{24\:\ 0x0020|r6.replayIndex = r0\l}"];
Node_25 [shape=record,label="{25\:\ 0x0022}"];
Node_26 [shape=record,label="{26\:\ 0x0026|if ((r6.minCollectorIndex \> r0 ? 1 : (r6.minCollectorIndex == r0 ? 0 : \-1)) \>= 0) goto L7\l}"];
Node_27 [shape=record,label="{27\:\ 0x0028|correctCollectorIndexesOnDropOldest(r0)\l}"];
Node_28 [shape=record,label="{28\:\ 0x002b}"];
Node_29 [shape=record,label="{29\:\ 0x002f|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L18\l}"];
Node_30 [shape=record,label="{30\:\ 0x0031}"];
Node_31 [shape=record,label="{31\:\ 0x0038|if ((getHead() \> r0 ? 1 : (getHead() == r0 ? 0 : \-1)) != 0) goto L17\l}"];
Node_32 [shape=record,label="{32\:\ 0x003a|r3 = true\l}"];
Node_34 [shape=record,label="{34\:\ 0x003d|PHI: r3 \l  PHI: (r3v3 boolean) = (r3v2 boolean), (r3v4 boolean) binds: [B:33:0x003c, B:32:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == false) goto L13\l}"];
Node_36 [shape=record,label="{36\:\ 0x0040}"];
Node_37 [shape=record,label="{37\:\ 0x0045|throw new java.lang.AssertionError()\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ 0x003c|r3 = false\l}"];
Node_38 [shape=record,label="{38\:\ 0x0046|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.flow.SharedFlowImpl.dropOldestLocked((r6v0 'this' kotlinx.coroutines.flow.SharedFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0046 \-\> B:21:?, CROSS_EDGE: B:33:0x003c \-\> B:34:0x003d, CROSS_EDGE: B:29:0x002f \-\> B:38:0x0046, CROSS_EDGE: B:26:0x0026 \-\> B:28:0x002b, CROSS_EDGE: B:23:0x001e \-\> B:25:0x0022\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_38;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_34 -> Node_36;
Node_34 -> Node_39[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_21;
Node_39 -> Node_21;
Node_33 -> Node_34;
Node_38 -> Node_21;
}

