digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.tryEmitNoCollectorsLocked(Ljava\/lang\/Object;)Z" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000}"];
Node_23 [shape=record,label="{23\:\ 0x0005|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L11\l}"];
Node_24 [shape=record,label="{24\:\ 0x0007}"];
Node_25 [shape=record,label="{25\:\ 0x000c|if (getNCollectors() != 0) goto L10\l}"];
Node_26 [shape=record,label="{26\:\ 0x000e|r2 = true\l}"];
Node_28 [shape=record,label="{28\:\ 0x0011|PHI: r2 \l  PHI: (r2v5 boolean) = (r2v4 boolean), (r2v6 boolean) binds: [B:27:0x0010, B:26:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == false) goto L7\l}"];
Node_30 [shape=record,label="{30\:\ 0x0014}"];
Node_31 [shape=record,label="{31\:\ 0x0019|throw new java.lang.AssertionError()\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|r2 = false\l}"];
Node_32 [shape=record,label="{32\:\ 0x001a}"];
Node_33 [shape=record,label="{33\:\ 0x001c|if (r6.replay != 0) goto L14\l}"];
Node_34 [shape=record,label="{34\:\ 0x001e|RETURN\l|return true\l}"];
Node_35 [shape=record,label="{35\:\ 0x001f|enqueueLocked(r7)\lint r0 = r6.bufferSize + 1\lr6.bufferSize = r0\l}"];
Node_36 [shape=record,label="{36\:\ 0x0029|if (r0 \<= r6.replay) goto L17\l}"];
Node_37 [shape=record,label="{37\:\ 0x002b|dropOldestLocked()\l}"];
Node_38 [shape=record,label="{38\:\ 0x002e|r6.minCollectorIndex = getHead() + ((long) r6.bufferSize)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0038|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.flow.SharedFlowImpl.tryEmitNoCollectorsLocked((r6v0 'this' kotlinx.coroutines.flow.SharedFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r7v0 T A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x001e \-\> B:21:?, CROSS_EDGE: B:39:0x0038 \-\> B:21:?, CROSS_EDGE: B:36:0x0029 \-\> B:38:0x002e, CROSS_EDGE: B:27:0x0010 \-\> B:28:0x0011, CROSS_EDGE: B:23:0x0005 \-\> B:32:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (TT;)Z\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_32[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_27 -> Node_28;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_21;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_21;
}

