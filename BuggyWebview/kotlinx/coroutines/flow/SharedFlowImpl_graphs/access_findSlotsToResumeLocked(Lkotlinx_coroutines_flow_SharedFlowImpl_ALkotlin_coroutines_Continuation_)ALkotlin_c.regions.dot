digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.access$findSlotsToResumeLocked(Lkotlinx\/coroutines\/flow\/SharedFlowImpl;[Lkotlin\/coroutines\/Continuation;)[Lkotlin\/coroutines\/Continuation;" {
subgraph cluster_Region_456437527 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|return r1.findSlotsToResumeLocked(r2)\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlin.coroutines.Continuation[] kotlinx.coroutines.flow.SharedFlowImpl.access$findSlotsToResumeLocked((r1v0 '$this' kotlinx.coroutines.flow.SharedFlowImpl A[D('$this' kotlinx.coroutines.flow.SharedFlowImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'resumesIn' kotlin.coroutines.Continuation[] A[D('resumesIn' kotlin.coroutines.Continuation[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  \l  (r1 I:kotlinx.coroutines.flow.SharedFlowImpl A[D('$this' kotlinx.coroutines.flow.SharedFlowImpl)])\l  (r2 I:kotlin.coroutines.Continuation[] A[D('resumesIn' kotlin.coroutines.Continuation[])])\l type: DIRECT call: kotlinx.coroutines.flow.SharedFlowImpl.findSlotsToResumeLocked(kotlin.coroutines.Continuation[]):kotlin.coroutines.Continuation[]\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_4;Node_7 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
}

