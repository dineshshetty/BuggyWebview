digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.findSlotsToResumeLocked([Lkotlin\/coroutines\/Continuation;)[Lkotlin\/coroutines\/Continuation;" {
Node_33 [shape=record,label="{33\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0000|r0 = r21\lr1 = r22\lint r2 = r22.length\lkotlinx.coroutines.flow.internal.AbstractSharedFlow r4 = r0\l}"];
Node_36 [shape=record,label="{36\:\ 0x0011|if (((kotlinx.coroutines.flow.internal.AbstractSharedFlow) r4).nCollectors != 0) goto L3\l}"];
Node_38 [shape=record,label="{38\:\ 0x0015|kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] r6 = ((kotlinx.coroutines.flow.internal.AbstractSharedFlow) r4).slots\l}"];
Node_39 [shape=record,label="{39\:\ 0x0019|if (r6 != null) goto L5\l}"];
Node_41 [shape=record,label="{41\:\ 0x001d|r8 = 0\lint r9 = r6.length\l}"];
Node_42 [shape=record,label="{42\:\ 0x0020|LOOP_START\lLOOP:0: B:42:0x0020\-\>B:58:0x0075\lPHI: r0 r1 r2 r8 \l  PHI: (r0v3 kotlinx.coroutines.flow.SharedFlowImpl\<T\>) = (r0v0 kotlinx.coroutines.flow.SharedFlowImpl\<T\>), (r0v4 kotlinx.coroutines.flow.SharedFlowImpl\<T\>) binds: [B:41:0x001d, B:58:0x0075] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v3 kotlin.coroutines.Continuation\<kotlin.Unit\>[]) = (r1v1 kotlin.coroutines.Continuation\<kotlin.Unit\>[]), (r1v4 kotlin.coroutines.Continuation\<kotlin.Unit\>[]) binds: [B:41:0x001d, B:58:0x0075] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 'resumeCount' int) = (r2v1 'resumeCount' int), (r2v3 'resumeCount' int) binds: [B:41:0x001d, B:58:0x0075] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v2 int) binds: [B:41:0x001d, B:58:0x0075] A[DONT_GENERATE, DONT_INLINE]\l|if (r8 \>= r9) goto L25\l}"];
Node_43 [shape=record,label="{43\:\ 0x0022|r10 = r6[r8]\lint r8 = r8 + 1\l}"];
Node_44 [shape=record,label="{44\:\ 0x0028|if (r10 == null) goto L24\l}"];
Node_45 [shape=record,label="{45\:\ 0x002a|kotlinx.coroutines.flow.SharedFlowSlot r13 = (kotlinx.coroutines.flow.SharedFlowSlot) r10\lkotlin.coroutines.Continuation\<? super kotlin.Unit\> r15 = r13.cont\l}"];
Node_46 [shape=record,label="{46\:\ 0x0030|if (r15 != null) goto L15\l}"];
Node_47 [shape=record,label="{47\:\ 0x0032|r16 = r1\l}"];
Node_57 [shape=record,label="{57\:\ 0x0073|PHI: r16 \l  PHI: (r16v2 kotlin.coroutines.Continuation\<kotlin.Unit\>[]) = (r16v1 kotlin.coroutines.Continuation\<kotlin.Unit\>[]), (r16v6 kotlin.coroutines.Continuation\<kotlin.Unit\>[]), (r16v7 kotlin.coroutines.Continuation\<kotlin.Unit\>[]) binds: [B:56:0x0071, B:50:0x003f, B:47:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r16\l}"];
Node_64 [shape=record,label="{64\:\ 0x0075|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x0075|LOOP_END\lLOOP:0: B:42:0x0020\-\>B:58:0x0075\lPHI: r1 r2 \l  PHI: (r1v4 kotlin.coroutines.Continuation\<kotlin.Unit\>[]) = (r1v5 kotlin.coroutines.Continuation\<kotlin.Unit\>[]), (r1v6 kotlin.coroutines.Continuation\<kotlin.Unit\>[]) binds: [B:64:0x0075, B:65:0x0075] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 'resumeCount' int) = (r2v2 'resumeCount' int), (r2v4 'resumeCount' int) binds: [B:64:0x0075, B:65:0x0075] A[DONT_GENERATE, DONT_INLINE]\l|r0 = r21\l}"];
Node_48 [shape=record,label="{48\:\ 0x0035}"];
Node_49 [shape=record,label="{49\:\ 0x003d|if ((r0.tryPeekLocked(r13) \> 0 ? 1 : (r0.tryPeekLocked(r13) == 0 ? 0 : \-1)) \>= 0) goto L18\l}"];
Node_50 [shape=record,label="{50\:\ 0x003f|r16 = r1\l}"];
Node_51 [shape=record,label="{51\:\ 0x0042}"];
Node_52 [shape=record,label="{52\:\ 0x0046|if (r2 \< r1.length) goto L23\l}"];
Node_53 [shape=record,label="{53\:\ 0x0048|java.lang.Object[] r0 = java.util.Arrays.copyOf(r1, java.lang.Math.max(2, r1.length * 2))\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"copyOf(this, newSize)\")\lr1 = r0\l}"];
Node_55 [shape=record,label="{55\:\ 0x0065|PHI: r1 \l  PHI: (r1v6 kotlin.coroutines.Continuation\<kotlin.Unit\>[]) = (r1v3 kotlin.coroutines.Continuation\<kotlin.Unit\>[]), (r1v10 kotlin.coroutines.Continuation\<kotlin.Unit\>[]) binds: [B:54:0x0063, B:53:0x0048] A[DONT_GENERATE, DONT_INLINE]\l|r1[r2] = r15\lr13.cont = null\lr2 = r2 + 1\l}"];
Node_65 [shape=record,label="{65\:\ 0x0075|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x0063}"];
Node_56 [shape=record,label="{56\:\ 0x0071|r16 = r1\l}"];
Node_63 [shape=record,label="{63\:\ 0x007a|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x007a}"];
Node_61 [shape=record,label="{61\:\ 0x007d|PHI: r1 \l  PHI: (r1v2 kotlin.coroutines.Continuation\<kotlin.Unit\>[]) = (r1v1 kotlin.coroutines.Continuation\<kotlin.Unit\>[]), (r1v1 kotlin.coroutines.Continuation\<kotlin.Unit\>[]), (r1v3 kotlin.coroutines.Continuation\<kotlin.Unit\>[]) binds: [B:36:0x0011, B:39:0x0019, B:59:0x007a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_62 [shape=record,label="{62\:\ 0x0080|RETURN\l|return r1\l}"];
Node_34 [shape=record,label="{34\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlin.coroutines.Continuation\<kotlin.Unit\>[] kotlinx.coroutines.flow.SharedFlowImpl.findSlotsToResumeLocked((r21v0 'this' kotlinx.coroutines.flow.SharedFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r22v0 kotlin.coroutines.Continuation\<kotlin.Unit\>[] A[D('resumesIn' kotlin.coroutines.Continuation[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:58:0x0075 \-\> B:42:0x0020, CROSS_EDGE: B:50:0x003f \-\> B:57:0x0073, CROSS_EDGE: B:55:0x0065 \-\> B:58:0x0075, CROSS_EDGE: B:54:0x0063 \-\> B:55:0x0065, CROSS_EDGE: B:56:0x0071 \-\> B:57:0x0073, CROSS_EDGE: B:39:0x0019 \-\> B:61:0x007d, CROSS_EDGE: B:36:0x0011 \-\> B:61:0x007d\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: ([Lkotlin\/coroutines\/Continuation\<Lkotlin\/Unit;\>;)[Lkotlin\/coroutines\/Continuation\<Lkotlin\/Unit;\>;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l \-\> Type inference failed for: r0v13, types: [java.lang.Object[], java.lang.Object]\}\l}"];
MethodNode -> Node_33;Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_38;
Node_36 -> Node_61[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_41;
Node_39 -> Node_61[style=dashed];
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_63;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_56;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_57;
Node_57 -> Node_64;
Node_64 -> Node_58;
Node_58 -> Node_42;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_57;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_55;
Node_55 -> Node_65;
Node_65 -> Node_58;
Node_54 -> Node_55;
Node_56 -> Node_57;
Node_63 -> Node_59;
Node_59 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_34;
}

