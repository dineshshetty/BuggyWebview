digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.tryTakeValue(Lkotlinx\/coroutines\/flow\/SharedFlowSlot;)Ljava\/lang\/Object;" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:626)\l0x0001: SGET  (r0 I:kotlin.coroutines.Continuation\<kotlin.Unit\>[] A[D('resumes' java.lang.Object)]) =  kotlinx.coroutines.flow.internal.AbstractSharedFlowKt.EMPTY_RESUMES kotlin.coroutines.Continuation[] \l0x0003: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:627)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0004|0x0004: MONITOR_ENTER  (r10 I:??[OBJECT, ARRAY])  (LINE:765)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0005|0x0005: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0006|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ 0x0006|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0040, blocks: (B:33:0x0006, B:35:0x0010, B:36:0x0013), top: B:50:0x0006 \}\lCatch: all \-\> 0x0040\l|0x0006: INVOKE  (r3 I:long) = \l  (r10 I:kotlinx.coroutines.flow.SharedFlowImpl)\l  (r11 I:kotlinx.coroutines.flow.SharedFlowSlot A[D('slot' kotlinx.coroutines.flow.SharedFlowSlot)])\l type: DIRECT call: kotlinx.coroutines.flow.SharedFlowImpl.tryPeekLocked(kotlinx.coroutines.flow.SharedFlowSlot):long A[Catch: all \-\> 0x0040, MD:(kotlinx.coroutines.flow.SharedFlowSlot):long (m), TRY_ENTER] (LINE:628)\l0x000a: CONST  (r5 I:??[long, double]) = (0 ??[long, double])  (LINE:629)\l0x000c: CMP_L  (r7 I:int) = (r3 I:long A[D('index' long)]), (r5 I:long) \l}"];
Node_34 [shape=record,label="{34\:\ 0x000e|0x000e: IF  (r7 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:36:0x0013 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0010|TryCatch #0 \{all \-\> 0x0040, blocks: (B:33:0x0006, B:35:0x0010, B:36:0x0013), top: B:50:0x0006 \}\lCatch: all \-\> 0x0040\l|0x0010: SGET  (r5 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.flow.SharedFlowKt.NO_VALUE kotlinx.coroutines.internal.Symbol A[Catch: all \-\> 0x0040] (LINE:630)\l0x0012: GOTO  \-\> 0x0024 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0025|0x0025: MONITOR_EXIT  (r10 I:??[OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0027|0x0027: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('$i$f$synchronized' int)]) = (r5 I:??[OBJECT, ARRAY])  (LINE:627)\l0x0028: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:639)\l0x0029: ARRAY_LENGTH  (r3 I:int) = (r0 I:??[] A[D('resumes' java.lang.Object)]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x002a|LOOP_START\lLOOP:0: B:41:0x002a\-\>B:53:0x002a\l|0x002a: IF  (r2 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:52:0x003f \l}"];
Node_42 [shape=record,label="{42\:\ 0x002c|0x002c: AGET  (r4 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('resumes' java.lang.Object)]), (r2 I:??[int, short, byte, char]) \l0x002e: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0030|0x0030: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('resume' kotlin.coroutines.Continuation)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0033 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0033|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0033|0x0033: SGET  (r5 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion \l0x0035: SGET  (r5 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l0x0037: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[MD:\<T\>:(java.lang.Object):java.lang.Object (m)]\l0x003b: INVOKE  (r4 I:kotlin.coroutines.Continuation A[D('resume' kotlin.coroutines.Continuation)]), (r5 I:java.lang.Object) type: INTERFACE call: kotlin.coroutines.Continuation.resumeWith(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x002a|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x002a|LOOP_END\lSYNTHETIC\lLOOP:0: B:41:0x002a\-\>B:53:0x002a\l}"];
Node_54 [shape=record,label="{54\:\ 0x002a|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x003f|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x003f|RETURN\l|0x003f: RETURN  (r1 I:java.lang.Object A[D('value' java.lang.Object)])  (LINE:640)\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0013|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0040, blocks: (B:33:0x0006, B:35:0x0010, B:36:0x0013), top: B:50:0x0006 \}\lCatch: all \-\> 0x0040\l|0x0013: IGET  (r5 I:long) = (r11 I:kotlinx.coroutines.flow.SharedFlowSlot A[D('slot' kotlinx.coroutines.flow.SharedFlowSlot)]) kotlinx.coroutines.flow.SharedFlowSlot.index long A[Catch: all \-\> 0x0040] (LINE:632)\l0x0015: INVOKE  (r7 I:java.lang.Object) = (r10 I:kotlinx.coroutines.flow.SharedFlowImpl), (r3 I:long A[D('index' long)]) type: DIRECT call: kotlinx.coroutines.flow.SharedFlowImpl.getPeekedValueLockedAt(long):java.lang.Object A[Catch: all \-\> 0x0040, MD:(long):java.lang.Object (m)] (LINE:633)\l0x0019: CONST  (r8 I:??[long, double]) = (1 ??[long, double])  (LINE:634)\l0x001b: ARITH  (r8 I:long) = (r8 I:long) + (r3 I:long A[D('index' long)]) A[Catch: all \-\> 0x0040]\l0x001c: IPUT  (r8 I:long), (r11 I:kotlinx.coroutines.flow.SharedFlowSlot A[D('slot' kotlinx.coroutines.flow.SharedFlowSlot)]) kotlinx.coroutines.flow.SharedFlowSlot.index long A[Catch: all \-\> 0x0040]\l0x001e: INVOKE  (r8 I:kotlin.coroutines.Continuation[]) = (r10 I:kotlinx.coroutines.flow.SharedFlowImpl), (r5 I:long A[D('oldIndex' long)]) type: VIRTUAL call: kotlinx.coroutines.flow.SharedFlowImpl.updateCollectorIndexLocked$kotlinx_coroutines_core(long):kotlin.coroutines.Continuation[] A[Catch: all \-\> 0x0040, MD:(long):kotlin.coroutines.Continuation\<kotlin.Unit\>[] (m), TRY_LEAVE] (LINE:635)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0022|0x0022: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('resumes' java.lang.Object)]) = (r8 I:??[OBJECT, ARRAY]) \l0x0023: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('oldIndex' long)]) = (r7 I:??[OBJECT, ARRAY] A[D('newValue' java.lang.Object)])  (LINE:636)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0040|ExcHandler: all \-\> 0x0040\l|0x0040: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0040] (LINE:629)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0042|0x0042: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private final java.lang.Object kotlinx.coroutines.flow.SharedFlowImpl.tryTakeValue((r10 'this' I:kotlinx.coroutines.flow.SharedFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r11 I:kotlinx.coroutines.flow.SharedFlowSlot A[D('slot' kotlinx.coroutines.flow.SharedFlowSlot), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:45:0x0033 \-\> B:41:0x002a, BACK_EDGE: B:43:0x0030 \-\> B:41:0x002a, CROSS_EDGE: B:37:0x0022 \-\> B:39:0x0025, CROSS_EDGE: B:49:0x0042 \-\> B:29:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x0024: r5 'oldIndex' J\l  0x0019\-0x0024: r7 'newValue' Ljava\/lang\/Object;\l  0x0006\-0x0025: r2 '$i$a$\-synchronized\-SharedFlowImpl$tryTakeValue$value$1' I\l  0x000a\-0x0025: r3 'index' J\l  0x0004\-0x0027: r1 '$i$f$synchronized' I\l  0x002e\-0x003f: r4 'resume' Lkotlin\/coroutines\/Continuation;\l  0x0028\-0x0040: r1 'value' Ljava\/lang\/Object;\l  0x0001\-0x0042: r0 'resumes' Ljava\/lang\/Object;\l  0x0040\-0x0042: r1 '$i$f$synchronized' I\l  \-1 \-0x0042: r11 'slot' Lkotlinx\/coroutines\/flow\/SharedFlowSlot;\lTYPE_VARS: [T]\lTryCatch #0 \{all \-\> 0x0040, blocks: (B:33:0x0006, B:35:0x0010, B:36:0x0013), top: B:50:0x0006 \}\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_50;
Node_50 -> Node_33;
Node_50 -> Node_47;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_52;
Node_42 -> Node_43;
Node_43 -> Node_51;
Node_43 -> Node_54[style=dashed];
Node_51 -> Node_45;
Node_45 -> Node_55;
Node_55 -> Node_53;
Node_53 -> Node_41;
Node_54 -> Node_53;
Node_52 -> Node_46;
Node_46 -> Node_29;
Node_36 -> Node_37;
Node_37 -> Node_39;
Node_47 -> Node_49;
Node_49 -> Node_29;
}

