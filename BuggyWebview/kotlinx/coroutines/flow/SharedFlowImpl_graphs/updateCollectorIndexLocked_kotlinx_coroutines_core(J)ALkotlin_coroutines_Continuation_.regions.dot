digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.updateCollectorIndexLocked$kotlinx_coroutines_core(J)[Lkotlin\/coroutines\/Continuation;" {
subgraph cluster_Region_1832109717 {
label = "R(2:(1:(1:8))|(2:(1:14)|(6:15|(1:19)|20|(1:22)(2:85|(1:87)(3:88|(3:90|(2:92|(1:96))(1:101)|98)|104))|(1:(1:30))|(2:(1:35)|(11:36|(1:38)(1:84)|39|(1:83)(2:41|(1:(2:44|(1:47)(1:(1:80)(2:52|(2:(2:57|1)|(1:54)))))(2:82|1)))|58|(1:60)|61|(2:65|(3:67|68|(2:(1:74)|(1:75))))|77|68|(0)(0)))))) | DECL_VAR: long head, long head, int null, kotlin.coroutines.Continuation[] resumes, long newBufferEndIndex, long newReplayIndex, java.lang.Object null, java.lang.Object emitter\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1561601907 {
label = "IF [B:112:0x0006] THEN: R(1:(1:8)) ELSE: null";
node [shape=record,color=blue];
Node_112 [shape=record,label="{112\:\ 0x0006|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() != false) goto L3\l}"];
subgraph cluster_Region_318688050 {
label = "R(1:(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_951925169 {
label = "IF [B:117:0x0012] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_117 [shape=record,label="{117\:\ 0x0012|PHI: r0 \l  PHI: (r0v37 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r27 \>= r26.minCollectorIndex ? 1 : 0) == 0) goto L7\l}"];
subgraph cluster_Region_1263093597 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_120 [shape=record,label="{120\:\ 0x001a|throw new java.lang.AssertionError()\l}"];
}
}
}
}
subgraph cluster_Region_924507896 {
label = "R(2:(1:14)|(6:15|(1:19)|20|(1:22)(2:85|(1:87)(3:88|(3:90|(2:92|(1:96))(1:101)|98)|104))|(1:(1:30))|(2:(1:35)|(11:36|(1:38)(1:84)|39|(1:83)(2:41|(1:(2:44|(1:47)(1:(1:80)(2:52|(2:(2:57|1)|(1:54)))))(2:82|1)))|58|(1:60)|61|(2:65|(3:67|68|(2:(1:74)|(1:75))))|77|68|(0)(0)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1406739570 {
label = "IF [B:122:0x001f] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_122 [shape=record,label="{122\:\ 0x001f|if (r27 \> r26.minCollectorIndex) goto L13\l}"];
subgraph cluster_Region_49868553 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_124 [shape=record,label="{124\:\ 0x0023|RETURN\l|return kotlinx.coroutines.flow.internal.AbstractSharedFlowKt.EMPTY_RESUMES\l}"];
}
}
subgraph cluster_Region_1416338669 {
label = "R(6:15|(1:19)|20|(1:22)(2:85|(1:87)(3:88|(3:90|(2:92|(1:96))(1:101)|98)|104))|(1:(1:30))|(2:(1:35)|(11:36|(1:38)(1:84)|39|(1:83)(2:41|(1:(2:44|(1:47)(1:(1:80)(2:52|(2:(2:57|1)|(1:54)))))(2:82|1)))|58|(1:60)|61|(2:65|(3:67|68|(2:(1:74)|(1:75))))|77|68|(0)(0))))";
node [shape=record,color=blue];
Node_125 [shape=record,label="{125\:\ 0x0024|long long r12 = getHead()\llong long r2 = r26.bufferSize + r12\llong r4 = 1\l}"];
subgraph cluster_IfRegion_59388836 {
label = "IF [B:126:0x0032, B:128:0x0036] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_126 [shape=record,label="{126\:\ 0x0032|if (r26.bufferCapacity == 0) goto L17\l}"];
Node_128 [shape=record,label="{128\:\ 0x0036|ADDED_TO_REGION\l|if (r26.queueSize \> 0) goto L19\l}"];
subgraph cluster_Region_1693606930 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_129 [shape=record,label="{129\:\ 0x0038|r2++\l}"];
}
}
Node_130 [shape=record,label="{130\:\ 0x0039|PHI: r2 \l  PHI: (r2v4 'newMinCollectorIndex' long) = (r2v3 'newMinCollectorIndex' long), (r2v3 'newMinCollectorIndex' long), (r2v14 'newMinCollectorIndex' long) binds: [B:126:0x0032, B:128:0x0036, B:129:0x0038] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.flow.internal.AbstractSharedFlow kotlinx.coroutines.flow.SharedFlowImpl\<T\> r0 = r26\l}"];
subgraph cluster_IfRegion_1945130363 {
label = "IF [B:131:0x0041] THEN: R(1:22) ELSE: R(2:85|(1:87)(3:88|(3:90|(2:92|(1:96))(1:101)|98)|104))";
node [shape=record,color=blue];
Node_131 [shape=record,label="{131\:\ 0x0041|if (((kotlinx.coroutines.flow.internal.AbstractSharedFlow) r0).nCollectors == 0) goto L22\l}"];
subgraph cluster_Region_186845635 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_132 [shape=record,label="{132\:\ 0x0043|r20 = r12\l}"];
}
subgraph cluster_Region_1530101565 {
label = "R(2:85|(1:87)(3:88|(3:90|(2:92|(1:96))(1:101)|98)|104))";
node [shape=record,color=blue];
Node_133 [shape=record,label="{133\:\ 0x0046|kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] java.lang.Object[] r6 = ((kotlinx.coroutines.flow.internal.AbstractSharedFlow) r0).slots\l}"];
subgraph cluster_IfRegion_311721841 {
label = "IF [B:134:0x004a] THEN: R(1:87) ELSE: R(3:88|(3:90|(2:92|(1:96))(1:101)|98)|104)";
node [shape=record,color=blue];
Node_134 [shape=record,label="{134\:\ 0x004a|if (r6 == null) goto L87\l}"];
subgraph cluster_Region_1174518894 {
label = "R(1:87)";
node [shape=record,color=blue];
Node_135 [shape=record,label="{135\:\ 0x004c|r20 = r12\l}"];
}
subgraph cluster_Region_502658025 {
label = "R(3:88|(3:90|(2:92|(1:96))(1:101)|98)|104)";
node [shape=record,color=blue];
Node_136 [shape=record,label="{136\:\ 0x004f|int int r8 = r6.length\lint r14 = 0\l}"];
subgraph cluster_LoopRegion_883013968 {
label = "LOOP:1: (3:90|(2:92|(1:96))(1:101)|98)";
node [shape=record,color=blue];
Node_137 [shape=record,label="{137\:\ 0x0052|LOOP_START\lLOOP:1: B:137:0x0052\-\>B:147:0x0079\lPHI: r2 r12 r14 \l  PHI: (r2v5 'newMinCollectorIndex' long) = (r2v4 'newMinCollectorIndex' long), (r2v6 'newMinCollectorIndex' long) binds: [B:136:0x004f, B:147:0x0079] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 'head' long) = (r12v0 'head' long), (r12v2 'head' long) binds: [B:136:0x004f, B:147:0x0079] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v1 int) = (r14v0 int), (r14v2 int) binds: [B:136:0x004f, B:147:0x0079] A[DONT_GENERATE, DONT_INLINE]\l|if (r14 \< r8) goto L90\l}"];
subgraph cluster_Region_1457706392 {
label = "R(3:90|(2:92|(1:96))(1:101)|98)";
node [shape=record,color=blue];
Node_138 [shape=record,label="{138\:\ 0x0054|java.lang.Object r15 = r6[r14]\lr14++\l}"];
subgraph cluster_IfRegion_1158375730 {
label = "IF [B:139:0x005c] THEN: R(2:92|(1:96)) ELSE: R(1:101)";
node [shape=record,color=blue];
Node_139 [shape=record,label="{139\:\ 0x005c|if (r15 != null) goto L92\l}"];
subgraph cluster_Region_1317395639 {
label = "R(2:92|(1:96))";
node [shape=record,color=blue];
Node_140 [shape=record,label="{140\:\ 0x005e|kotlinx.coroutines.flow.SharedFlowSlot kotlinx.coroutines.flow.SharedFlowSlot r10 = (kotlinx.coroutines.flow.SharedFlowSlot) r15\lr20 = r12\l}"];
subgraph cluster_IfRegion_1454029278 {
label = "IF [B:141:0x006c, B:143:0x0072] THEN: R(1:96) ELSE: null";
node [shape=record,color=blue];
Node_141 [shape=record,label="{141\:\ 0x006c|if (r10.index \>= 0) goto L94\l}"];
Node_143 [shape=record,label="{143\:\ 0x0072|ADDED_TO_REGION\l|if (r10.index \< r2) goto L96\l}"];
subgraph cluster_Region_1457311477 {
label = "R(1:96)";
node [shape=record,color=blue];
Node_144 [shape=record,label="{144\:\ 0x0074|long r2 = r10.index\l}"];
}
}
}
subgraph cluster_Region_244031210 {
label = "R(1:101)";
node [shape=record,color=blue];
Node_146 [shape=record,label="{146\:\ 0x0077|r20 = r12\l}"];
}
}
Node_147 [shape=record,label="{147\:\ 0x0079|LOOP_END\lLOOP:1: B:137:0x0052\-\>B:147:0x0079\lPHI: r2 r20 \l  PHI: (r2v6 'newMinCollectorIndex' long) = (r2v5 'newMinCollectorIndex' long), (r2v5 'newMinCollectorIndex' long), (r2v5 'newMinCollectorIndex' long), (r2v7 'newMinCollectorIndex' long) binds: [B:213:0x0079, B:215:0x0079, B:216:0x0079, B:214:0x0079] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r20v2 'head' long) = (r20v1 'head' long), (r20v3 'head' long), (r20v3 'head' long), (r20v3 'head' long) binds: [B:213:0x0079, B:215:0x0079, B:216:0x0079, B:214:0x0079] A[DONT_GENERATE, DONT_INLINE]\l|r12 = r20\l}"];
}
}
Node_148 [shape=record,label="{148\:\ 0x007c|r20 = r12\l}"];
}
}
}
}
subgraph cluster_IfRegion_1652998195 {
label = "IF [B:151:0x0083] THEN: R(1:(1:30)) ELSE: null";
node [shape=record,color=blue];
Node_151 [shape=record,label="{151\:\ 0x0083|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() != false) goto L25\l}"];
subgraph cluster_Region_2028376741 {
label = "R(1:(1:30))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1722908312 {
label = "IF [B:156:0x008f] THEN: R(1:30) ELSE: null";
node [shape=record,color=blue];
Node_156 [shape=record,label="{156\:\ 0x008f|PHI: r0 \l  PHI: (r0v30 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r2 \>= r26.minCollectorIndex ? 1 : 0) == 0) goto L29\l}"];
subgraph cluster_Region_1034140183 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_159 [shape=record,label="{159\:\ 0x0097|throw new java.lang.AssertionError()\l}"];
}
}
}
}
subgraph cluster_Region_1877387540 {
label = "R(2:(1:35)|(11:36|(1:38)(1:84)|39|(1:83)(2:41|(1:(2:44|(1:47)(1:(1:80)(2:52|(2:(2:57|1)|(1:54)))))(2:82|1)))|58|(1:60)|61|(2:65|(3:67|68|(2:(1:74)|(1:75))))|77|68|(0)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_918163867 {
label = "IF [B:161:0x009c] THEN: R(1:35) ELSE: null";
node [shape=record,color=blue];
Node_161 [shape=record,label="{161\:\ 0x009c|if (r2 \<= r26.minCollectorIndex) goto L34\l}"];
subgraph cluster_Region_1001745283 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_163 [shape=record,label="{163\:\ 0x00a0|RETURN\l|return kotlinx.coroutines.flow.internal.AbstractSharedFlowKt.EMPTY_RESUMES\l}"];
}
}
subgraph cluster_Region_1123550222 {
label = "R(11:36|(1:38)(1:84)|39|(1:83)(2:41|(1:(2:44|(1:47)(1:(1:80)(2:52|(2:(2:57|1)|(1:54)))))(2:82|1)))|58|(1:60)|61|(2:65|(3:67|68|(2:(1:74)|(1:75))))|77|68|(0)(0))";
node [shape=record,color=blue];
Node_164 [shape=record,label="{164\:\ 0x00a1|long long r0 = getBufferEndIndex()\l}"];
subgraph cluster_IfRegion_2005575146 {
label = "IF [B:165:0x00a9] THEN: R(1:38) ELSE: R(1:84)";
node [shape=record,color=blue];
Node_165 [shape=record,label="{165\:\ 0x00a9|if (getNCollectors() \> 0) goto L38\l}"];
subgraph cluster_Region_1100947882 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_166 [shape=record,label="{166\:\ 0x00ab|int int r7 = (int) (r0 \- r2)\lint r6 = java.lang.Math.min(r26.queueSize, r26.bufferCapacity \- r7)\l}"];
}
subgraph cluster_Region_1451981828 {
label = "R(1:84)";
node [shape=record,color=blue];
Node_167 [shape=record,label="{167\:\ 0x00b8|int r6 = r26.queueSize\l}"];
}
}
Node_168 [shape=record,label="{168\:\ 0x00ba|PHI: r6 \l  PHI: (r6v5 int) = (r6v4 int), (r6v10 int) binds: [B:167:0x00b8, B:166:0x00ab] A[DONT_GENERATE, DONT_INLINE]\l|int int r10 = r6\lkotlin.coroutines.Continuation\<kotlin.Unit\>[] kotlin.coroutines.Continuation[] r6 = kotlinx.coroutines.flow.internal.AbstractSharedFlowKt.EMPTY_RESUMES\llong long r11 = r0 + r26.queueSize\l}"];
subgraph cluster_IfRegion_887350304 {
label = "IF [B:169:0x00c2] THEN: R(1:83) ELSE: R(2:41|(1:(2:44|(1:47)(1:(1:80)(2:52|(2:(2:57|1)|(1:54)))))(2:82|1)))";
node [shape=record,color=blue];
Node_169 [shape=record,label="{169\:\ 0x00c2|if (r10 \<= 0) goto L83\l}"];
subgraph cluster_Region_1482035226 {
label = "R(1:83)";
node [shape=record,color=blue];
Node_184 [shape=record,label="{184\:\ 0x0118|r13 = r6\l}"];
}
subgraph cluster_Region_227401981 {
label = "R(2:41|(1:(2:44|(1:47)(1:(1:80)(2:52|(2:(2:57|1)|(1:54)))))(2:82|1)))";
node [shape=record,color=blue];
Node_170 [shape=record,label="{170\:\ 0x00c4|kotlin.coroutines.Continuation[] kotlin.coroutines.Continuation[] r6 = new kotlin.coroutines.Continuation[r10]\lint r7 = 0\ljava.lang.Object[] java.lang.Object[] r8 = r26.buffer\lkotlin.jvm.internal.Intrinsics.checkNotNull(r8)\llong r13 = r0\l}"];
subgraph cluster_LoopRegion_1465506318 {
label = "LOOP:0: (1:(2:44|(1:47)(1:(1:80)(2:52|(2:(2:57|1)|(1:54)))))(2:82|1))";
node [shape=record,color=blue];
subgraph cluster_Region_221079544 {
label = "R(1:(2:44|(1:47)(1:(1:80)(2:52|(2:(2:57|1)|(1:54)))))(2:82|1))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_524110896 {
label = "IF [B:172:0x00cf] THEN: R(2:44|(1:47)(1:(1:80)(2:52|(2:(2:57|1)|(1:54))))) ELSE: R(2:82|1)";
node [shape=record,color=blue];
Node_172 [shape=record,label="{172\:\ 0x00cf|if (r0 \< r11) goto L44\l}"];
subgraph cluster_Region_1907025716 {
label = "R(2:44|(1:47)(1:(1:80)(2:52|(2:(2:57|1)|(1:54)))))";
node [shape=record,color=blue];
Node_173 [shape=record,label="{173\:\ 0x00d1|long r15 = r0\llong long r0 = r0 + r4\ljava.lang.Object r15 = kotlinx.coroutines.flow.SharedFlowKt.getBufferAt(r8, r15)\l}"];
subgraph cluster_IfRegion_333783708 {
label = "IF [B:174:0x00dc] THEN: R(1:47) ELSE: R(1:(1:80)(2:52|(2:(2:57|1)|(1:54))))";
node [shape=record,color=blue];
Node_174 [shape=record,label="{174\:\ 0x00dc|if (r15 == kotlinx.coroutines.flow.SharedFlowKt.NO_VALUE) goto L46\l}"];
subgraph cluster_Region_1233128927 {
label = "R(1:47)";
node [shape=record,color=blue];
Node_182 [shape=record,label="{182\:\ 0x0110|r0 = r0\lr4 = 1\l}"];
}
subgraph cluster_Region_492108973 {
label = "R(1:(1:80)(2:52|(2:(2:57|1)|(1:54)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_629876762 {
label = "IF [B:175:0x00de] THEN: R(1:80) ELSE: R(2:52|(2:(2:57|1)|(1:54))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_175 [shape=record,label="{175\:\ 0x00de|if (r15 == null) goto L78\l}"];
subgraph cluster_Region_1070841624 {
label = "R(1:80)";
node [shape=record,color=blue];
Node_181 [shape=record,label="{181\:\ 0x010f|throw new java.lang.NullPointerException(\"null cannot be cast to non\-null type kotlinx.coroutines.flow.SharedFlowImpl.Emitter\")\l}"];
}
subgraph cluster_Region_1197671492 {
label = "R(2:52|(2:(2:57|1)|(1:54)))";
node [shape=record,color=blue];
Node_176 [shape=record,label="{176\:\ 0x00e0|kotlinx.coroutines.flow.SharedFlowImpl$Emitter kotlinx.coroutines.flow.SharedFlowImpl.Emitter r0 = (kotlinx.coroutines.flow.SharedFlowImpl.Emitter) r15\lint int r0 = r7 + 1\lr6[r7] = ((kotlinx.coroutines.flow.SharedFlowImpl.Emitter) r15).cont\lkotlinx.coroutines.flow.SharedFlowKt.setBufferAt(r8, r15, kotlinx.coroutines.flow.SharedFlowKt.NO_VALUE)\lkotlinx.coroutines.flow.SharedFlowKt.setBufferAt(r8, r13, ((kotlinx.coroutines.flow.SharedFlowImpl.Emitter) r15).value)\lr13++\l}"];
subgraph cluster_Region_641960774 {
label = "R(2:(2:57|1)|(1:54))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_763336009 {
label = "IF [B:177:0x00fd] THEN: R(2:57|1) ELSE: null";
node [shape=record,color=blue];
Node_177 [shape=record,label="{177\:\ 0x00fd|if (r0 \>= r10) goto L56\l}"];
subgraph cluster_Region_887071759 {
label = "R(2:57|1)";
node [shape=record,color=blue];
Node_178 [shape=record,label="{178\:\ 0x00ff|EDGE_INSN: B:178:0x00ff\-\>B:185:0x0119 ?: BREAK  \l|r0 = r13\lr13 = r6\l}"];
Node_InsnContainer_1077357265 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_Region_802223991 {
label = "R(1:54)";
node [shape=record,color=blue];
Node_179 [shape=record,label="{179\:\ 0x0102|r7 = r0\lr0 = r0\lr4 = 1\l}"];
}
}
}
}
}
}
}
subgraph cluster_Region_92351545 {
label = "R(2:82|1)";
node [shape=record,color=blue];
Node_183 [shape=record,label="{183\:\ 0x0115|EDGE_INSN: B:183:0x0115\-\>B:185:0x0119 ?: BREAK  \l|r0 = r13\lr13 = r6\l}"];
Node_InsnContainer_2059147246 [shape=record,label="{|break\l}"];
}
}
}
}
}
}
Node_185 [shape=record,label="{185\:\ 0x0119|EDGE_INSN: B:183:0x0115\-\>B:185:0x0119 ?: BREAK  , EDGE_INSN: B:178:0x00ff\-\>B:185:0x0119 ?: BREAK  \lPHI: r0 r13 \l  PHI: (r0v9 'newBufferEndIndex' long) = (r0v8 'newBufferEndIndex' long), (r0v16 'newBufferEndIndex' long), (r0v23 'newBufferEndIndex' long) binds: [B:184:0x0118, B:183:0x0115, B:178:0x00ff] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v3 'resumes' kotlin.coroutines.Continuation[]) = (r13v2 'resumes' kotlin.coroutines.Continuation[]), (r13v7 'resumes' kotlin.coroutines.Continuation[]), (r13v9 'resumes' kotlin.coroutines.Continuation[]) binds: [B:184:0x0118, B:183:0x0115, B:178:0x00ff] A[DONT_GENERATE, DONT_INLINE]\l|int int r14 = (int) (r0 \- r20)\l}"];
subgraph cluster_IfRegion_1488280798 {
label = "IF [B:186:0x0120] THEN: R(1:60) ELSE: null";
node [shape=record,color=blue];
Node_186 [shape=record,label="{186\:\ 0x0120|if (getNCollectors() == 0) goto L60\l}"];
subgraph cluster_Region_912048381 {
label = "R(1:60)";
node [shape=record,color=blue];
Node_187 [shape=record,label="{187\:\ 0x0122|r2 = r0\l}"];
}
}
Node_188 [shape=record,label="{188\:\ 0x0123|PHI: r2 \l  PHI: (r2v9 'newMinCollectorIndex' long) = (r2v8 'newMinCollectorIndex' long), (r2v13 'newMinCollectorIndex' long) binds: [B:186:0x0120, B:187:0x0122] A[DONT_GENERATE, DONT_INLINE]\l|long r15 = r2\llong long r2 = java.lang.Math.max(r26.replayIndex, r0 \- java.lang.Math.min(r26.replay, r14))\l}"];
subgraph cluster_IfRegion_1437613128 {
label = "IF [B:189:0x0135, B:191:0x0139] THEN: R(2:65|(3:67|68|(2:(1:74)|(1:75)))) ELSE: null";
node [shape=record,color=blue];
Node_189 [shape=record,label="{189\:\ 0x0135|if (r26.bufferCapacity == 0) goto L63\l}"];
Node_191 [shape=record,label="{191\:\ 0x0139|ADDED_TO_REGION\l|if (r2 \< r11) goto L65\l}"];
subgraph cluster_Region_2119766074 {
label = "R(2:65|(3:67|68|(2:(1:74)|(1:75))))";
node [shape=record,color=blue];
Node_192 [shape=record,label="{192\:\ 0x013b|java.lang.Object[] java.lang.Object[] r4 = r26.buffer\lkotlin.jvm.internal.Intrinsics.checkNotNull(r4)\ljava.lang.Object r4 = kotlinx.coroutines.flow.SharedFlowKt.getBufferAt(r4, r2)\l}"];
subgraph cluster_IfRegion_803018597 {
label = "IF [B:193:0x014a] THEN: R(3:67|68|(2:(1:74)|(1:75))) ELSE: null";
node [shape=record,color=blue];
Node_193 [shape=record,label="{193\:\ 0x014a|if (kotlin.jvm.internal.Intrinsics.areEqual(r4, kotlinx.coroutines.flow.SharedFlowKt.NO_VALUE) != false) goto L67\l}"];
subgraph cluster_Region_324094599 {
label = "R(3:67|68|(2:(1:74)|(1:75)))";
node [shape=record,color=blue];
Node_194 [shape=record,label="{194\:\ 0x014c|r22 = r0 + 1\lr24 = r2 + 1\l}"];
Node_196 [shape=record,label="{196\:\ 0x0159|PHI: r22 r24 \l  PHI: (r22v2 'newBufferEndIndex' long) = (r22v1 'newBufferEndIndex' long), (r22v3 'newBufferEndIndex' long) binds: [B:195:0x0155, B:194:0x014c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r24v1 'newReplayIndex' long) = (r24v0 'newReplayIndex' long), (r24v2 'newReplayIndex' long) binds: [B:195:0x0155, B:194:0x014c] A[DONT_GENERATE, DONT_INLINE]\l|updateBufferLocked(r24, r15, r22, r11)\lcleanupTailLocked()\l}"];
subgraph cluster_Region_1645667637 {
label = "R(2:(1:74)|(1:75))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_453913092 {
label = "IF [B:201:0x0172] THEN: R(1:74) ELSE: null";
node [shape=record,color=blue];
Node_201 [shape=record,label="{201\:\ 0x0172|if ((!(r13.length != 0)) == false) goto L75\l}"];
subgraph cluster_Region_18304492 {
label = "R(1:74)";
node [shape=record,color=blue];
Node_203 [shape=record,label="{203\:\ 0x0178|RETURN\lORIG_RETURN\l|return findSlotsToResumeLocked(r13)\l}"];
}
}
subgraph cluster_Region_1932964540 {
label = "R(1:75)";
node [shape=record,color=blue];
Node_217 [shape=record,label="{217\:\ ?|SYNTHETIC\lRETURN\l|return r13\l}"];
}
}
}
}
}
}
Node_195 [shape=record,label="{195\:\ 0x0155|r22 = r0\lr24 = r2\l}"];
Node_196 [shape=record,label="{196\:\ 0x0159|PHI: r22 r24 \l  PHI: (r22v2 'newBufferEndIndex' long) = (r22v1 'newBufferEndIndex' long), (r22v3 'newBufferEndIndex' long) binds: [B:195:0x0155, B:194:0x014c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r24v1 'newReplayIndex' long) = (r24v0 'newReplayIndex' long), (r24v2 'newReplayIndex' long) binds: [B:195:0x0155, B:194:0x014c] A[DONT_GENERATE, DONT_INLINE]\l|updateBufferLocked(r24, r15, r22, r11)\lcleanupTailLocked()\l}"];
subgraph cluster_IfRegion_652005026 {
label = "IF [B:201:0x0172] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_201 [shape=record,label="{201\:\ 0x0172|if ((!(r13.length != 0)) == false) goto L75\l}"];
subgraph cluster_Region_1290309239 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_1999356459 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
}
Node_109 [shape=record,color=red,label="{109\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_111 [shape=record,color=red,label="{111\:\ 0x0000}"];
Node_113 [shape=record,color=red,label="{113\:\ 0x0008}"];
Node_114 [shape=record,color=red,label="{114\:\ 0x000d}"];
Node_115 [shape=record,color=red,label="{115\:\ 0x000f}"];
Node_119 [shape=record,color=red,label="{119\:\ 0x0015}"];
Node_110 [shape=record,color=red,label="{110\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_116 [shape=record,color=red,label="{116\:\ 0x0011}"];
Node_121 [shape=record,color=red,label="{121\:\ 0x001b}"];
Node_123 [shape=record,color=red,label="{123\:\ 0x0021}"];
Node_127 [shape=record,color=red,label="{127\:\ 0x0034}"];
Node_150 [shape=record,color=red,label="{150\:\ 0x007f|PHI: r2 r20 \l  PHI: (r2v8 'newMinCollectorIndex' long) = (r2v5 'newMinCollectorIndex' long), (r2v4 'newMinCollectorIndex' long), (r2v4 'newMinCollectorIndex' long) binds: [B:148:0x007c, B:135:0x004c, B:132:0x0043] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r20v5 'head' long) = (r20v0 'head' long), (r20v4 'head' long), (r20v6 'head' long) binds: [B:148:0x007c, B:135:0x004c, B:132:0x0043] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_152 [shape=record,color=red,label="{152\:\ 0x0085}"];
Node_153 [shape=record,color=red,label="{153\:\ 0x008a}"];
Node_154 [shape=record,color=red,label="{154\:\ 0x008c}"];
Node_158 [shape=record,color=red,label="{158\:\ 0x0092}"];
Node_155 [shape=record,color=red,label="{155\:\ 0x008e}"];
Node_160 [shape=record,color=red,label="{160\:\ 0x0098}"];
Node_162 [shape=record,color=red,label="{162\:\ 0x009e}"];
Node_171 [shape=record,color=red,label="{171\:\ 0x00cd|LOOP_START\lLOOP:0: B:171:0x00cd\-\>B:209:0x00cd\lPHI: r0 r4 r7 r13 \l  PHI: (r0v15 'newBufferEndIndex' long) = (r0v8 'newBufferEndIndex' long), (r0v25 'newBufferEndIndex' long) binds: [B:170:0x00c4, B:209:0x00cd] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v13 'curEmitterIndex' long) = (r4v0 'curEmitterIndex' long), (r4v16 'curEmitterIndex' long) binds: [B:170:0x00c4, B:209:0x00cd] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v5 'resumeCount' int) = (r7v4 'resumeCount' int), (r7v7 'resumeCount' int) binds: [B:170:0x00c4, B:209:0x00cd] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v6 'newBufferEndIndex' long) = (r13v5 'newBufferEndIndex' long), (r13v10 'newBufferEndIndex' long) binds: [B:170:0x00c4, B:209:0x00cd] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_204 [shape=record,color=red,label="{204\:\ 0x0110|SYNTHETIC\l}"];
Node_210 [shape=record,color=red,label="{210\:\ 0x00cd|SYNTHETIC\l}"];
Node_209 [shape=record,color=red,label="{209\:\ 0x00cd|LOOP_END\lSYNTHETIC\lLOOP:0: B:171:0x00cd\-\>B:209:0x00cd\lPHI: r0 r4 r7 r13 \l  PHI: (r0v25 'newBufferEndIndex' long) = (r0v24 'newBufferEndIndex' long), (r0v26 'newBufferEndIndex' long) binds: [B:211:0x00cd, B:210:0x00cd] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v16 'curEmitterIndex' long) = (r4v15 'curEmitterIndex' long), (r4v17 'curEmitterIndex' long) binds: [B:211:0x00cd, B:210:0x00cd] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v7 'resumeCount' int) = (r7v6 'resumeCount' int), (r7v5 'resumeCount' int) binds: [B:211:0x00cd, B:210:0x00cd] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v10 'newBufferEndIndex' long) = (r13v8 'newBufferEndIndex' long), (r13v6 'newBufferEndIndex' long) binds: [B:211:0x00cd, B:210:0x00cd] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_208 [shape=record,color=red,label="{208\:\ 0x00de|SYNTHETIC\l}"];
Node_211 [shape=record,color=red,label="{211\:\ 0x00cd|SYNTHETIC\l}"];
Node_205 [shape=record,color=red,label="{205\:\ 0x00ff|SYNTHETIC\l}"];
Node_190 [shape=record,color=red,label="{190\:\ 0x0137}"];
Node_197 [shape=record,color=red,label="{197\:\ 0x0168}"];
Node_198 [shape=record,color=red,label="{198\:\ 0x016a}"];
Node_200 [shape=record,color=red,label="{200\:\ 0x016f|PHI: r18 \l  PHI: (r18v1 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_202 [shape=record,color=red,label="{202\:\ 0x0174}"];
Node_199 [shape=record,color=red,label="{199\:\ 0x016d}"];
Node_206 [shape=record,color=red,label="{206\:\ 0x0108|SYNTHETIC\l}"];
Node_180 [shape=record,color=red,label="{180\:\ 0x0108}"];
Node_207 [shape=record,color=red,label="{207\:\ 0x0115|SYNTHETIC\l}"];
Node_142 [shape=record,color=red,label="{142\:\ 0x006e}"];
Node_214 [shape=record,color=red,label="{214\:\ 0x0079|SYNTHETIC\l}"];
Node_216 [shape=record,color=red,label="{216\:\ 0x0079|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_215 [shape=record,color=red,label="{215\:\ 0x0079|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_213 [shape=record,color=red,label="{213\:\ 0x0079|SYNTHETIC\l}"];
Node_212 [shape=record,color=red,label="{212\:\ 0x007c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final kotlin.coroutines.Continuation\<kotlin.Unit\>[] kotlinx.coroutines.flow.SharedFlowImpl.updateCollectorIndexLocked$kotlinx_coroutines_core((r26v0 'this' kotlinx.coroutines.flow.SharedFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r27v0 'oldIndex' long A[D('oldIndex' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:124:0x0023 \-\> B:110:?, CROSS_EDGE: B:159:0x0097 \-\> B:110:?, CROSS_EDGE: B:163:0x00a0 \-\> B:110:?, CROSS_EDGE: B:203:0x0178 \-\> B:110:?, CROSS_EDGE: B:201:0x0172 \-\> B:203:0x0178, CROSS_EDGE: B:199:0x016d \-\> B:200:0x016f, CROSS_EDGE: B:195:0x0155 \-\> B:196:0x0159, CROSS_EDGE: B:191:0x0139 \-\> B:195:0x0155, CROSS_EDGE: B:189:0x0135 \-\> B:195:0x0155, CROSS_EDGE: B:186:0x0120 \-\> B:188:0x0123, BACK_EDGE: B:179:0x0102 \-\> B:171:0x00cd, CROSS_EDGE: B:181:0x010f \-\> B:110:?, BACK_EDGE: B:182:0x0110 \-\> B:171:0x00cd, CROSS_EDGE: B:183:0x0115 \-\> B:185:0x0119, CROSS_EDGE: B:184:0x0118 \-\> B:185:0x0119, CROSS_EDGE: B:167:0x00b8 \-\> B:168:0x00ba, CROSS_EDGE: B:155:0x008e \-\> B:156:0x008f, CROSS_EDGE: B:151:0x0083 \-\> B:160:0x0098, CROSS_EDGE: B:135:0x004c \-\> B:150:0x007f, BACK_EDGE: B:147:0x0079 \-\> B:137:0x0052, CROSS_EDGE: B:143:0x0072 \-\> B:147:0x0079, CROSS_EDGE: B:141:0x006c \-\> B:147:0x0079, CROSS_EDGE: B:146:0x0077 \-\> B:147:0x0079, CROSS_EDGE: B:148:0x007c \-\> B:150:0x007f, CROSS_EDGE: B:128:0x0036 \-\> B:130:0x0039, CROSS_EDGE: B:126:0x0032 \-\> B:130:0x0039, CROSS_EDGE: B:116:0x0011 \-\> B:117:0x0012, CROSS_EDGE: B:112:0x0006 \-\> B:121:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lJadxCommentsAttr\{\l WARN: \l \-\> Removed duplicated region for block: B:199:0x016d \l \-\> Removed duplicated region for block: B:198:0x016a \l \-\> Removed duplicated region for block: B:217:? A[RETURN, SYNTHETIC]\l \-\> Removed duplicated region for block: B:202:0x0174 \}\lSIGNATURE: (J)[Lkotlin\/coroutines\/Continuation\<Lkotlin\/Unit;\>;\l}"];
MethodNode -> Node_109;Node_112 -> Node_113;
Node_112 -> Node_121[style=dashed];
Node_117 -> Node_119;
Node_117 -> Node_121[style=dashed];
Node_120 -> Node_110;
Node_122 -> Node_123;
Node_122 -> Node_125[style=dashed];
Node_124 -> Node_110;
Node_125 -> Node_126;
Node_126 -> Node_127;
Node_126 -> Node_130[style=dashed];
Node_128 -> Node_129;
Node_128 -> Node_130[style=dashed];
Node_129 -> Node_130;
Node_130 -> Node_131;
Node_131 -> Node_132;
Node_131 -> Node_133[style=dashed];
Node_132 -> Node_150;
Node_133 -> Node_134;
Node_134 -> Node_135;
Node_134 -> Node_136[style=dashed];
Node_135 -> Node_150;
Node_136 -> Node_137;
Node_137 -> Node_138;
Node_137 -> Node_212[style=dashed];
Node_138 -> Node_139;
Node_139 -> Node_140;
Node_139 -> Node_146[style=dashed];
Node_140 -> Node_141;
Node_141 -> Node_142;
Node_141 -> Node_215[style=dashed];
Node_143 -> Node_144;
Node_143 -> Node_216[style=dashed];
Node_144 -> Node_214;
Node_146 -> Node_213;
Node_147 -> Node_137;
Node_148 -> Node_150;
Node_151 -> Node_152;
Node_151 -> Node_160[style=dashed];
Node_156 -> Node_158;
Node_156 -> Node_160[style=dashed];
Node_159 -> Node_110;
Node_161 -> Node_162;
Node_161 -> Node_164[style=dashed];
Node_163 -> Node_110;
Node_164 -> Node_165;
Node_165 -> Node_166;
Node_165 -> Node_167[style=dashed];
Node_166 -> Node_168;
Node_167 -> Node_168;
Node_168 -> Node_169;
Node_169 -> Node_170[style=dashed];
Node_169 -> Node_184;
Node_184 -> Node_185;
Node_170 -> Node_171;
Node_172 -> Node_173;
Node_172 -> Node_207[style=dashed];
Node_173 -> Node_174;
Node_174 -> Node_204;
Node_174 -> Node_208[style=dashed];
Node_182 -> Node_210;
Node_175 -> Node_176[style=dashed];
Node_175 -> Node_206;
Node_181 -> Node_110;
Node_176 -> Node_177;
Node_177 -> Node_179[style=dashed];
Node_177 -> Node_205;
Node_178 -> Node_185;
Node_179 -> Node_211;
Node_183 -> Node_185;
Node_185 -> Node_186;
Node_186 -> Node_187;
Node_186 -> Node_188[style=dashed];
Node_187 -> Node_188;
Node_188 -> Node_189;
Node_189 -> Node_190;
Node_189 -> Node_195[style=dashed];
Node_191 -> Node_192;
Node_191 -> Node_195[style=dashed];
Node_192 -> Node_193;
Node_193 -> Node_194;
Node_193 -> Node_195[style=dashed];
Node_194 -> Node_196;
Node_196 -> Node_197;
Node_201 -> Node_202[style=dashed];
Node_201 -> Node_217;
Node_203 -> Node_110;
Node_217 -> Node_110;
Node_195 -> Node_196;
Node_196 -> Node_197;
Node_201 -> Node_202[style=dashed];
Node_201 -> Node_217;
Node_109 -> Node_111;
Node_111 -> Node_112;
Node_113 -> Node_114;
Node_114 -> Node_115;
Node_114 -> Node_116;
Node_115 -> Node_117;
Node_119 -> Node_120;
Node_116 -> Node_117;
Node_121 -> Node_122;
Node_123 -> Node_124;
Node_127 -> Node_128;
Node_150 -> Node_151;
Node_152 -> Node_153;
Node_153 -> Node_154;
Node_153 -> Node_155;
Node_154 -> Node_156;
Node_158 -> Node_159;
Node_155 -> Node_156;
Node_160 -> Node_161;
Node_162 -> Node_163;
Node_171 -> Node_172;
Node_204 -> Node_182;
Node_210 -> Node_209;
Node_209 -> Node_171;
Node_208 -> Node_175;
Node_211 -> Node_209;
Node_205 -> Node_178;
Node_190 -> Node_191;
Node_197 -> Node_198;
Node_197 -> Node_199;
Node_198 -> Node_200;
Node_200 -> Node_201;
Node_202 -> Node_203;
Node_199 -> Node_200;
Node_206 -> Node_180;
Node_180 -> Node_181;
Node_207 -> Node_183;
Node_142 -> Node_143;
Node_214 -> Node_147;
Node_216 -> Node_147;
Node_215 -> Node_147;
Node_213 -> Node_147;
Node_212 -> Node_148;
}

