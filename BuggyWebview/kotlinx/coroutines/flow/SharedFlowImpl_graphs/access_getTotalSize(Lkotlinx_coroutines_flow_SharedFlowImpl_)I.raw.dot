digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.access$getTotalSize(Lkotlinx\/coroutines\/flow\/SharedFlowImpl;)I" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r1 I:kotlinx.coroutines.flow.SharedFlowImpl A[D('$this' kotlinx.coroutines.flow.SharedFlowImpl)]) type: DIRECT call: kotlinx.coroutines.flow.SharedFlowImpl.getTotalSize():int A[MD:():int (m)] (LINE:303)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ int kotlinx.coroutines.flow.SharedFlowImpl.access$getTotalSize((r1 I:kotlinx.coroutines.flow.SharedFlowImpl A[D('$this' kotlinx.coroutines.flow.SharedFlowImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  (r1 I:kotlinx.coroutines.flow.SharedFlowImpl A[D('$this' kotlinx.coroutines.flow.SharedFlowImpl)]) type: DIRECT call: kotlinx.coroutines.flow.SharedFlowImpl.getTotalSize():int\lDebug Info:\l  \-1 \-0x0004: r1 '$this' Lkotlinx\/coroutines\/flow\/SharedFlowImpl;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

