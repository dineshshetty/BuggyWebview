digraph "CFG forkotlinx.coroutines.flow.FlowKt.combine(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function2;)Lkotlinx\/coroutines\/flow\/Flow;" {
subgraph cluster_Region_1888355232 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|return kotlinx.coroutines.flow.Zip.combine(r1, r2)\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlinx.coroutines.flow.Flow\<R\> kotlinx.coroutines.flow.FlowKt.combine((r1v0 java.lang.Iterable\<? extends kotlinx.coroutines.flow.Flow\<? extends T\>\> A[D('flows' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 kotlin.jvm.functions.Function2\<? super T[], ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  \l  (r1 I:java.lang.Iterable A[D('flows' java.lang.Iterable)])\l  (r2 I:kotlin.jvm.functions.Function2 A[D('transform' kotlin.jvm.functions.Function2)])\l type: STATIC call: kotlinx.coroutines.flow.FlowKt__ZipKt.combine(java.lang.Iterable, kotlin.jvm.functions.Function2):kotlinx.coroutines.flow.Flow\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;\>;Lkotlin\/jvm\/functions\/Function2\<\-[TT;\-Lkotlin\/coroutines\/Continuation\<\-TR;\>;+Ljava\/lang\/Object;\>;)Lkotlinx\/coroutines\/flow\/Flow\<TR;\>;\l}"];
MethodNode -> Node_4;Node_7 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
}

