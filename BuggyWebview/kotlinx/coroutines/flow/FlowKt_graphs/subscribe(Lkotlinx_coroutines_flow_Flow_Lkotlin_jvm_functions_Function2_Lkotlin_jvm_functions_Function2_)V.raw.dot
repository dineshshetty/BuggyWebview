digraph "CFG forkotlinx.coroutines.flow.FlowKt.subscribe(Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/jvm\/functions\/Function2;Lkotlin\/jvm\/functions\/Function2;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.Flow A[D('$this$subscribe' kotlinx.coroutines.flow.Flow)])\l  (r1 I:kotlin.jvm.functions.Function2 A[D('onEach' kotlin.jvm.functions.Function2)])\l  (r2 I:kotlin.jvm.functions.Function2 A[D('onError' kotlin.jvm.functions.Function2)])\l type: STATIC call: kotlinx.coroutines.flow.FlowKt__MigrationKt.subscribe(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function2):void A[MD:\<T\>:(kotlinx.coroutines.flow.Flow\<? extends T\>, kotlin.jvm.functions.Function2\<? super T, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>, kotlin.jvm.functions.Function2\<? super java.lang.Throwable, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>):void (m)] (LINE:1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0003|RETURN\l|0x0003: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.flow.FlowKt.subscribe((r0 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$subscribe' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:kotlin.jvm.functions.Function2\<? super T, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\> A[D('onEach' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.jvm.functions.Function2\<? super java.lang.Throwable, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\> A[D('onError' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>ERROR:Lkotlin\/DeprecationLevel;\}, message=Use 'launchIn' with 'onEach', 'onCompletion' and 'catch' instead\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0003: r0 '$this$subscribe' Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x0003: r1 'onEach' Lkotlin\/jvm\/functions\/Function2;\l  \-1 \-0x0003: r2 'onError' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlin\/jvm\/functions\/Function2\<\-TT;\-Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;+Ljava\/lang\/Object;\>;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Throwable;\-Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;+Ljava\/lang\/Object;\>;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

