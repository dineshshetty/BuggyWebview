digraph "CFG forkotlinx.coroutines.flow.FlowKt.reduce(Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/jvm\/functions\/Function3;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|return kotlinx.coroutines.flow.Reduce.reduce(r1, r2, r3)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.FlowKt.reduce((r1v0 kotlinx.coroutines.flow.Flow\<? extends T extends S\> A[D('$this$reduce' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 kotlin.jvm.functions.Function3\<? super S, ? super T extends S, ? super kotlin.coroutines.Continuation\<? super S\>, ? extends java.lang.Object\> A[D('operation' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlin.coroutines.Continuation\<? super S\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [S, T extends S]\lSIGNATURE: \<S:Ljava\/lang\/Object;T::TS;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlin\/jvm\/functions\/Function3\<\-TS;\-TT;\-Lkotlin\/coroutines\/Continuation\<\-TS;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-TS;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

