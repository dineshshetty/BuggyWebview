digraph "CFG forkotlinx.coroutines.flow.FlowKt.delayEach(Lkotlinx\/coroutines\/flow\/Flow;J)Lkotlinx\/coroutines\/flow\/Flow;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.flow.Flow) = \l  (r1 I:kotlinx.coroutines.flow.Flow A[D('$this$delayEach' kotlinx.coroutines.flow.Flow)])\l  (r2 I:long A[D('timeMillis' long)])\l type: STATIC call: kotlinx.coroutines.flow.FlowKt__MigrationKt.delayEach(kotlinx.coroutines.flow.Flow, long):kotlinx.coroutines.flow.Flow A[MD:\<T\>:(kotlinx.coroutines.flow.Flow\<? extends T\>, long):kotlinx.coroutines.flow.Flow\<T\> (m)] (LINE:1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:kotlinx.coroutines.flow.Flow\<T\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.Flow\<T\> kotlinx.coroutines.flow.FlowKt.delayEach((r1 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$delayEach' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:long A[D('timeMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>ERROR:Lkotlin\/DeprecationLevel;\}, message=Use 'onEach \{ delay(timeMillis) \}', replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=onEach \{ delay(timeMillis) \}, imports=[[]]\}\}\}\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0004: r1 '$this$delayEach' Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x0004: r2 'timeMillis' J\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;J)Lkotlinx\/coroutines\/flow\/Flow\<TT;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

