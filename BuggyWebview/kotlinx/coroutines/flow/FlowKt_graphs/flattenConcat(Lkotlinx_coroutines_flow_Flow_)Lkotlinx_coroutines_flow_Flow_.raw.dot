digraph "CFG forkotlinx.coroutines.flow.FlowKt.flattenConcat(Lkotlinx\/coroutines\/flow\/Flow;)Lkotlinx\/coroutines\/flow\/Flow;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.flow.Flow) = (r1 I:kotlinx.coroutines.flow.Flow A[D('$this$flattenConcat' kotlinx.coroutines.flow.Flow)]) type: STATIC call: kotlinx.coroutines.flow.FlowKt__MergeKt.flattenConcat(kotlinx.coroutines.flow.Flow):kotlinx.coroutines.flow.Flow A[MD:\<T\>:(kotlinx.coroutines.flow.Flow\<? extends kotlinx.coroutines.flow.Flow\<? extends T\>\>):kotlinx.coroutines.flow.Flow\<T\> (m)] (LINE:1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:kotlinx.coroutines.flow.Flow\<T\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.Flow\<T\> kotlinx.coroutines.flow.FlowKt.flattenConcat((r1 I:kotlinx.coroutines.flow.Flow\<? extends kotlinx.coroutines.flow.Flow\<? extends T\>\> A[D('$this$flattenConcat' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0004: r1 '$this$flattenConcat' Lkotlinx\/coroutines\/flow\/Flow;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;\>;)Lkotlinx\/coroutines\/flow\/Flow\<TT;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

