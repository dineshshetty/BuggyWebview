digraph "CFG forkotlinx.coroutines.flow.FlowKt.asStateFlow(Lkotlinx\/coroutines\/flow\/MutableStateFlow;)Lkotlinx\/coroutines\/flow\/StateFlow;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.flow.StateFlow) = (r1 I:kotlinx.coroutines.flow.MutableStateFlow A[D('$this$asStateFlow' kotlinx.coroutines.flow.MutableStateFlow)]) type: STATIC call: kotlinx.coroutines.flow.FlowKt__ShareKt.asStateFlow(kotlinx.coroutines.flow.MutableStateFlow):kotlinx.coroutines.flow.StateFlow A[MD:\<T\>:(kotlinx.coroutines.flow.MutableStateFlow\<T\>):kotlinx.coroutines.flow.StateFlow\<T\> (m)] (LINE:1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:kotlinx.coroutines.flow.StateFlow\<T\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.StateFlow\<T\> kotlinx.coroutines.flow.FlowKt.asStateFlow((r1 I:kotlinx.coroutines.flow.MutableStateFlow\<T\> A[D('$this$asStateFlow' kotlinx.coroutines.flow.MutableStateFlow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0004: r1 '$this$asStateFlow' Lkotlinx\/coroutines\/flow\/MutableStateFlow;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/MutableStateFlow\<TT;\>;)Lkotlinx\/coroutines\/flow\/StateFlow\<TT;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

