digraph "CFG forkotlinx.coroutines.flow.FlowKt.filterIsInstance(Lkotlinx\/coroutines\/flow\/Flow;)Lkotlinx\/coroutines\/flow\/Flow;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.flow.Flow) = (r1 I:kotlinx.coroutines.flow.Flow A[D('$this$filterIsInstance' kotlinx.coroutines.flow.Flow)]) type: STATIC call: kotlinx.coroutines.flow.FlowKt__TransformKt.filterIsInstance(kotlinx.coroutines.flow.Flow):kotlinx.coroutines.flow.Flow A[MD:\<R\>:(kotlinx.coroutines.flow.Flow\<?\>):kotlinx.coroutines.flow.Flow\<R\> (m)] (LINE:1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:kotlinx.coroutines.flow.Flow\<R\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlinx.coroutines.flow.Flow\<R\> kotlinx.coroutines.flow.FlowKt.filterIsInstance((r1 I:kotlinx.coroutines.flow.Flow\<?\> A[D('$this$filterIsInstance' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  (r1 I:kotlinx.coroutines.flow.Flow A[D('$this$filterIsInstance' kotlinx.coroutines.flow.Flow)]) type: STATIC call: kotlinx.coroutines.flow.FlowKt__TransformKt.filterIsInstance(kotlinx.coroutines.flow.Flow):kotlinx.coroutines.flow.Flow\lDebug Info:\l  \-1 \-0x0004: r1 '$this$filterIsInstance' Lkotlinx\/coroutines\/flow\/Flow;\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<*\>;)Lkotlinx\/coroutines\/flow\/Flow\<TR;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

