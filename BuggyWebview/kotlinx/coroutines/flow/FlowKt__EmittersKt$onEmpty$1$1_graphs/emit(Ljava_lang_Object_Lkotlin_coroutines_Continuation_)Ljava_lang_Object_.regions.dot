digraph "CFG forkotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1.emit(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1596585301 {
label = "R(5:(2:3|(4:5|6|7|13))|17|6|7|13) | DECL_VAR: kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1 null, kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1 null\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1357168604 {
label = "IF [B:21:0x0002] THEN: R(2:3|(4:5|6|7|13)) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0002|if ((r7 instanceof kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1) != false) goto L3\l}"];
subgraph cluster_Region_571482436 {
label = "R(2:3|(4:5|6|7|13))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0004|kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1 r0 = (kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1) r7\l}"];
subgraph cluster_IfRegion_687038976 {
label = "IF [B:23:0x000c] THEN: R(4:5|6|7|13) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) != 0) goto L5\l}"];
subgraph cluster_Region_1958395359 {
label = "R(4:5|6|7|13)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x000e|r0.label \-= Integer.MIN_VALUE\l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1), (r0v5 kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1) binds: [B:25:0x0014, B:24:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r7 = r0\ljava.lang.Object java.lang.Object r0 = r7.result\ljava.lang.Object java.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_1159050230 {
label = "Switch: 3
 case 0 -> R(3:14|(1:16)|1)
 case 1 -> R(2:11|1)
 case default -> R(1:9)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0022|switch(r7.label) \{\l    case 0: goto L14;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
subgraph cluster_Region_1434875228 {
label = "R(3:14|(1:16)|1)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0031|kotlin.ResultKt.throwOnFailure(r0)\lr5.$isEmpty.element = false\lkotlinx.coroutines.flow.FlowCollector\<T\> kotlinx.coroutines.flow.FlowCollector\<T\> r3 = r5.$this_unsafeFlow\lr7.label = 1\ljava.lang.Object java.lang.Object r6 = r3.emit(r6, r7)\l}"];
subgraph cluster_IfRegion_1059649784 {
label = "IF [B:32:0x0043] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0043|if (r6 == r1) goto L16\l}"];
subgraph cluster_Region_1508005588 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0045|RETURN\l|return r1\l}"];
}
}
Node_InsnContainer_1676465468 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1472883700 {
label = "R(2:11|1)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x002d|kotlin.ResultKt.throwOnFailure(r0)\l}"];
Node_InsnContainer_414839855 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1842782907 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
}
}
Node_35 [shape=record,label="{35\:\ 0x0048|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
}
}
}
Node_25 [shape=record,label="{25\:\ 0x0014|kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1 r0 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1(r5, r7)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1), (r0v5 kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1) binds: [B:25:0x0014, B:24:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r7 = r0\ljava.lang.Object java.lang.Object r0 = r7.result\ljava.lang.Object java.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_1983870121 {
label = "Switch: 0";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0022|switch(r7.label) \{\l    case 0: goto L14;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
}
Node_35 [shape=record,label="{35\:\ 0x0048|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0000}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0025}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0046}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1.emit((r5v0 'this' kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1\<T\> A[IMMUTABLE_TYPE, THIS]), (r6v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:35:0x0048 \-\> B:19:?, CROSS_EDGE: B:33:0x0045 \-\> B:19:?, CROSS_EDGE: B:32:0x0043 \-\> B:34:0x0046, CROSS_EDGE: B:25:0x0014 \-\> B:26:0x0019, CROSS_EDGE: B:21:0x0002 \-\> B:25:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (TT;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lJadxCommentsAttr\{\l WARN: \l \-\> Removed duplicated region for block: B:31:0x0031 \l \-\> Removed duplicated region for block: B:30:0x002d \l \-\> Removed duplicated region for block: B:28:0x0025 \}\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.FlowCollector.emit(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_18;Node_21 -> Node_22;
Node_21 -> Node_25[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_30;
Node_27 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_34[style=dashed];
Node_33 -> Node_19;
Node_30 -> Node_34;
Node_29 -> Node_19;
Node_35 -> Node_19;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_30;
Node_27 -> Node_31;
Node_35 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_28 -> Node_29;
Node_34 -> Node_35;
}

