digraph "CFG forkotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.collect(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('collector' kotlinx.coroutines.flow.FlowCollector)])  (LINE:108)\l0x0001: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('$completion' kotlin.coroutines.Continuation)]) \l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: IGET  (r3 I:kotlinx.coroutines.flow.Flow[]) = (r8 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3) kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.$flowArray$inlined kotlinx.coroutines.flow.Flow[]  (LINE:114)\l0x0006: INVOKE   type: STATIC call: kotlin.jvm.internal.Intrinsics.needClassReification():void A[MD:():void (m)] (LINE:113)\l0x0009: NEW_INSTANCE  (r4 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1) =  kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1 \l0x000b: IGET  (r5 I:kotlinx.coroutines.flow.Flow[]) = (r8 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3) kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.$flowArray$inlined kotlinx.coroutines.flow.Flow[] \l0x000d: INVOKE  (r4 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1), (r5 I:kotlinx.coroutines.flow.Flow[]) type: DIRECT call: kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1.\<init\>(kotlinx.coroutines.flow.Flow[]):void A[MD:(kotlinx.coroutines.flow.Flow\<T\>[]):void (m)]\l0x0010: CHECK_CAST (r4 I:kotlin.jvm.functions.Function0) = (kotlin.jvm.functions.Function0) (r4 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE   type: STATIC call: kotlin.jvm.internal.Intrinsics.needClassReification():void A[MD:():void (m)]\l0x0015: NEW_INSTANCE  (r5 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2) =  kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2 \l0x0017: IGET  (r6 I:kotlin.jvm.functions.Function2) = (r8 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3) kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.$transform$inlined kotlin.jvm.functions.Function2 \l0x0019: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001a: INVOKE  \l  (r5 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2)\l  (r6 I:kotlin.jvm.functions.Function2)\l  (r7 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2.\<init\>(kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation):void A[MD:(kotlin.jvm.functions.Function2\<? super T[], ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2\>):void (m)]\l0x001d: CHECK_CAST (r5 I:kotlin.jvm.functions.Function3) = (kotlin.jvm.functions.Function3) (r5 I:??[OBJECT, ARRAY]) \l0x001f: INVOKE  (r3 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.flow.FlowCollector A[D('$this$combine_u24lambda_u2d11' kotlinx.coroutines.flow.FlowCollector)])\l  (r3 I:kotlinx.coroutines.flow.Flow[])\l  (r4 I:kotlin.jvm.functions.Function0)\l  (r5 I:kotlin.jvm.functions.Function3)\l  (r10 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: STATIC call: kotlinx.coroutines.flow.internal.CombineKt.combineInternal(kotlinx.coroutines.flow.FlowCollector, kotlinx.coroutines.flow.Flow[], kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function3, kotlin.coroutines.Continuation):java.lang.Object A[MD:\<R, T\>:(kotlinx.coroutines.flow.FlowCollector\<? super R\>, kotlinx.coroutines.flow.Flow\<? extends T\>[], kotlin.jvm.functions.Function0\<T[]\>, kotlin.jvm.functions.Function3\<? super kotlinx.coroutines.flow.FlowCollector\<? super R\>, ? super T[], ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l0x0023: INVOKE  (r4 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002a \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|RETURN\l|0x0029: RETURN  (r3 I:java.lang.Object) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002b: SGET  (r0 I:kotlin.Unit A[D('$this$combine_u24lambda_u2d11' kotlinx.coroutines.flow.FlowCollector)]) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|RETURN\l|0x002d: RETURN  (r0 I:java.lang.Object)  (LINE:109)\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.collect((r8 'this' I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3 A[IMMUTABLE_TYPE, THIS]), (r9 I:kotlinx.coroutines.flow.FlowCollector\<? super R\> A[D('collector' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x002d \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TR;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x0001\-0x002b: r0 '$this$combine_u24lambda_u2d11' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x0002\-0x002b: r1 '$completion' Lkotlin\/coroutines\/Continuation;\l  0x0003\-0x002b: r2 '$i$a$\-unsafeFlow\-FlowKt__ZipKt$combine$6' I\l  \-1 \-0x002d: r9 'collector' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  \-1 \-0x002d: r10 '$completion' Lkotlin\/coroutines\/Continuation;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

