digraph "CFG forkotlinx.coroutines.flow.StartedWhileSubscribed.\<init\>(JJ)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: INVOKE  (r6 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:166)\l0x0003: IPUT  (r7 I:long A[D('stopTimeout' long)]), (r6 I:kotlinx.coroutines.flow.StartedWhileSubscribed) kotlinx.coroutines.flow.StartedWhileSubscribed.stopTimeout long  (LINE:167)\l0x0005: IPUT  (r9 I:long A[D('replayExpiration' long)]), (r6 I:kotlinx.coroutines.flow.StartedWhileSubscribed) kotlinx.coroutines.flow.StartedWhileSubscribed.replayExpiration long  (LINE:168)\l0x0008: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:171)\l0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: CONST  (r2 I:??[long, double]) = (0 ??[long, double]) \l0x000c: CMP_L  (r4 I:int) = (r7 I:long A[D('stopTimeout' long)]), (r2 I:long) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|0x000e: IF  (r4 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:23:0x0012 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|0x0010: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|0x0013: CONST_STR  (r5 I:java.lang.String) =  \" ms) cannot be negative\" \l}"];
Node_25 [shape=record,label="{25\:\ 0x0015|0x0015: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0040 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0017|0x0017: CMP_L  (r4 I:int) = (r9 I:long A[D('replayExpiration' long)]), (r2 I:long)  (LINE:172)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0019|0x0019: IF  (r4 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:29:0x001c \l}"];
Node_29 [shape=record,label="{29\:\ 0x001c|0x001c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x001d|0x001d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0021 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0020|RETURN\l|0x0020: RETURN    (LINE:166)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0021|0x0021: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:210)\l0x0022: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:172)\l0x0024: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0027: CONST_STR  (r2 I:java.lang.String) =  \"replayExpiration(\" \l0x0029: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002c: INVOKE  (r1 I:java.lang.StringBuilder), (r9 I:long A[D('replayExpiration' long)]) type: VIRTUAL call: java.lang.StringBuilder.append(long):java.lang.StringBuilder A[MD:(long):java.lang.StringBuilder (c)]\l0x002f: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0032: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-StartedWhileSubscribed$2' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0036: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0038: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x003c: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x003f|0x003f: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0040|0x0040: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:210)\l0x0041: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:171)\l0x0043: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0046: CONST_STR  (r2 I:java.lang.String) =  \"stopTimeout(\" \l0x0048: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004b: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:long A[D('stopTimeout' long)]) type: VIRTUAL call: java.lang.StringBuilder.append(long):java.lang.StringBuilder A[MD:(long):java.lang.StringBuilder (c)]\l0x004e: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0051: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-StartedWhileSubscribed$1' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0055: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0057: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x005b: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x005e|0x005e: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0012|0x0012: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.flow.StartedWhileSubscribed.\<init\>((r6 'this' I:kotlinx.coroutines.flow.StartedWhileSubscribed A[IMMUTABLE_TYPE, THIS]), (r7 I:long A[D('stopTimeout' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[D('replayExpiration' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x003f \-\> B:19:?, CROSS_EDGE: B:27:0x0019 \-\> B:30:0x001d, CROSS_EDGE: B:35:0x005e \-\> B:19:?, CROSS_EDGE: B:23:0x0012 \-\> B:24:0x0013\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0022\-0x0036: r0 '$i$a$\-require\-StartedWhileSubscribed$2' I\l  0x0041\-0x0055: r0 '$i$a$\-require\-StartedWhileSubscribed$1' I\l  \-1 \-0x005e: r7 'stopTimeout' J\l  \-1 \-0x005e: r9 'replayExpiration' J\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_34;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_30[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_19;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_34 -> Node_35;
Node_35 -> Node_19;
Node_23 -> Node_24;
}

