digraph "CFG forkotlinx.coroutines.flow.StartedWhileSubscribed.\<init\>(JJ)V" {
subgraph cluster_Region_910191211 {
label = "R(2:1|(2:(2:14|15)|(1:(2:(1:10)|(2:12|13)))))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0000|r6.stopTimeout = r7\lr6.replayExpiration = r9\l}"];
subgraph cluster_Region_1636058105 {
label = "R(2:(2:14|15)|(1:(2:(1:10)|(2:12|13))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1596749737 {
label = "IF [B:25:0x0015] THEN: R(2:14|15) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0015|if ((r7 \>= 0) == false) goto L14\l}"];
subgraph cluster_Region_250976452 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0040}"];
Node_35 [shape=record,label="{35\:\ 0x005e|throw new java.lang.IllegalArgumentException((\"stopTimeout(\" + r7 + \" ms) cannot be negative\").toString())\l}"];
}
}
subgraph cluster_Region_1003731011 {
label = "R(1:(2:(1:10)|(2:12|13)))";
node [shape=record,color=blue];
subgraph cluster_Region_2022420299 {
label = "R(2:(1:10)|(2:12|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1143348940 {
label = "IF [B:30:0x001d] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x001d|PHI: r0 \l  PHI: (r0v4 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|if ((r9 \>= 0) != false) goto L10\l}"];
subgraph cluster_Region_1723305268 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0020|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1073754113 {
label = "R(2:12|13)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0021}"];
Node_33 [shape=record,label="{33\:\ 0x003f|throw new java.lang.IllegalArgumentException((\"replayExpiration(\" + r9 + \" ms) cannot be negative\").toString())\l}"];
}
}
}
}
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000e}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0010}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0013|PHI: r4 \l  PHI: (r4v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0017}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0019}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x001c}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0012}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.flow.StartedWhileSubscribed.\<init\>((r6v0 'this' kotlinx.coroutines.flow.StartedWhileSubscribed A[IMMUTABLE_TYPE, THIS]), (r7v0 'stopTimeout' long A[D('stopTimeout' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'replayExpiration' long A[D('replayExpiration' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x003f \-\> B:19:?, CROSS_EDGE: B:27:0x0019 \-\> B:30:0x001d, CROSS_EDGE: B:35:0x005e \-\> B:19:?, CROSS_EDGE: B:23:0x0012 \-\> B:24:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_20 -> Node_21;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_19;
Node_30 -> Node_31;
Node_30 -> Node_32[style=dashed];
Node_31 -> Node_19;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_18 -> Node_20;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_30;
Node_29 -> Node_30;
Node_23 -> Node_24;
}

