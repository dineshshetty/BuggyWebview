digraph "CFG forkotlinx.coroutines.flow.StartedWhileSubscribed.equals(Ljava\/lang\/Object;)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r6 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)]) kotlinx.coroutines.flow.StartedWhileSubscribed  (LINE:202)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x001c \l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|0x0004: IGET  (r0 I:long) = (r5 I:kotlinx.coroutines.flow.StartedWhileSubscribed) kotlinx.coroutines.flow.StartedWhileSubscribed.stopTimeout long  (LINE:203)\l0x0006: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)]) \l0x0007: CHECK_CAST (r2 I:kotlinx.coroutines.flow.StartedWhileSubscribed) = (kotlinx.coroutines.flow.StartedWhileSubscribed) (r2 I:??[OBJECT, ARRAY]) \l0x0009: IGET  (r2 I:long) = (r2 I:kotlinx.coroutines.flow.StartedWhileSubscribed) kotlinx.coroutines.flow.StartedWhileSubscribed.stopTimeout long \l0x000b: CMP_L  (r4 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_17 [shape=record,label="{17\:\ 0x000d|0x000d: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x001c \l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|0x000f: IGET  (r0 I:long) = (r5 I:kotlinx.coroutines.flow.StartedWhileSubscribed) kotlinx.coroutines.flow.StartedWhileSubscribed.replayExpiration long  (LINE:204)\l0x0011: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)]) \l0x0012: CHECK_CAST (r2 I:kotlinx.coroutines.flow.StartedWhileSubscribed) = (kotlinx.coroutines.flow.StartedWhileSubscribed) (r2 I:??[OBJECT, ARRAY]) \l0x0014: IGET  (r2 I:long) = (r2 I:kotlinx.coroutines.flow.StartedWhileSubscribed) kotlinx.coroutines.flow.StartedWhileSubscribed.replayExpiration long \l0x0016: CMP_L  (r4 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0018|0x0018: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x001c \l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|SYNTHETIC\lRETURN\l|0x001a: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001d: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x001c|RETURN\lORIG_RETURN\l|0x001c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001d: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.flow.StartedWhileSubscribed.equals((r5 'this' I:kotlinx.coroutines.flow.StartedWhileSubscribed A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Object A[D('other' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001c \-\> B:22:0x001d, CROSS_EDGE: B:17:0x000d \-\> B:21:0x001c, CROSS_EDGE: B:15:0x0002 \-\> B:21:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001d: r6 'other' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_13;
Node_21 -> Node_13;
}

