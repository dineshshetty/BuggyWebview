digraph "CFG forkotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1.2.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r12 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2) kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1.2.label int  (LINE:258)\l0x0006: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: SWITCH  (r1 I:??)\l case 0: goto B:8:0x0024\l case 1: goto B:7:0x0017\l case 2: goto B:6:0x0012\l default: goto B:4:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: NEW_INSTANCE  (r13 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:333)\l0x000c: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000e: INVOKE  (r13 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: THROW  (r13 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY])  (LINE:258)\l0x0013: INVOKE  (r13 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0068|0x0068: SGET  (r1 I:kotlin.Unit A[D('$result' java.lang.Object)]) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_17 [shape=record,label="{17\:\ 0x006a|RETURN\l|0x006a: RETURN  (r1 I:java.lang.Object) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY]) \l0x0018: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: IGET  (r4 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1.2.L$0 java.lang.Object \l0x001b: CHECK_CAST (r4 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r4 I:??[OBJECT, ARRAY]) \l0x001d: INVOKE  (r13 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0020: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$a$\-combineUnsafe\-FlowKt__ZipKt$combine$2' int)])\l \l0x0021: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('$i$a$\-combineUnsafe\-FlowKt__ZipKt$combine$2' int)]) = \l  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)])\l \l0x0022: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)]) = (r13 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0056|0x0057: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('$i$a$\-combineUnsafe\-FlowKt__ZipKt$combine$2' int)]) = \l  (r3 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)])\l \l0x0058: CHECK_CAST (r5 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r5 I:??[OBJECT, ARRAY]) \l0x005a: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x005b: IPUT  \l  (r6 I:java.lang.Object)\l  (r3 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1.2.L$0 java.lang.Object \l0x005d: IPUT  \l  (r2 I:int)\l  (r3 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1.2.label int \l0x005f: INVOKE  (r13 I:java.lang.Object) = (r4 I:kotlinx.coroutines.flow.FlowCollector), (r13 I:java.lang.Object), (r5 I:kotlin.coroutines.Continuation) type: INTERFACE call: kotlinx.coroutines.flow.FlowCollector.emit(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0063|0x0063: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0066 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0065|RETURN\l|0x0065: RETURN  (r0 I:java.lang.Object)  (LINE:258)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0066|0x0066: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)])  (LINE:333)\l0x0067: MOVE  (r0 I:??[OBJECT, ARRAY]) = \l  (r3 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: INVOKE  (r13 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0027: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY]) \l0x0028: IGET  (r3 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1.2.L$0 java.lang.Object \l0x002a: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x002b: CHECK_CAST (r4 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r4 I:??[OBJECT, ARRAY]) \l0x002d: IGET  (r3 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1.2.L$1 java.lang.Object \l0x002f: CHECK_CAST (r3 I:java.lang.Object[]) = (java.lang.Object[]) (r3 I:??[OBJECT, ARRAY]) \l0x0031: MOVE  (r5 I:??[OBJECT, ARRAY]) = \l  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)])\l  (LINE:262)\l0x0032: CHECK_CAST (r5 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r5 I:??[OBJECT, ARRAY]) \l0x0034: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0035: IGET  (r6 I:kotlin.jvm.functions.Function4) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1.2.$transform$inlined kotlin.jvm.functions.Function4  (LINE:333)\l0x0037: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:334)\l0x0038: AGET  (r7 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][] A[D('args' java.lang.Object[])]), (r7 I:??[int, short, byte, char]) \l0x003a: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:335)\l0x003b: AGET  (r9 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][] A[D('args' java.lang.Object[])]), (r8 I:??[int, short, byte, char]) \l0x003d: AGET  (r10 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][] A[D('args' java.lang.Object[])]), (r2 I:??[int, short, byte, char])  (LINE:336)\l0x003f: IPUT  \l  (r4 I:java.lang.Object)\l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1.2.L$0 java.lang.Object  (LINE:333)\l0x0041: IPUT  \l  (r8 I:int)\l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1.2.label int \l0x0043: CONST  (r3 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l0x0044: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x0047: INVOKE  (r3 I:java.lang.Object) = \l  (r6 I:kotlin.jvm.functions.Function4)\l  (r7 I:java.lang.Object)\l  (r9 I:java.lang.Object)\l  (r10 I:java.lang.Object)\l  (r1 I:java.lang.Object A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)])\l type: INTERFACE call: kotlin.jvm.functions.Function4.invoke(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2, P3, P4):R (m)]\l0x004b: CONST  (r6 I:??[int, float, short, byte, char]) = (7 ??[int, float, short, byte, char]) \l0x004c: INVOKE  (r6 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x004f|0x004f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0052 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0051|RETURN\l|0x0051: RETURN  (r0 I:java.lang.Object)  (LINE:258)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0052|0x0052: MOVE  (r11 I:??[OBJECT, ARRAY]) = \l  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)])\l  (LINE:333)\l0x0053: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2)]) = (r13 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) \l0x0054: MOVE  (r13 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) = (r3 I:??[OBJECT, ARRAY]) \l0x0055: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1.2.invokeSuspend((r12 'this' I:kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2 A[IMMUTABLE_TYPE, THIS]), (r13 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:17:0x006a \-\> B:1:?, CROSS_EDGE: B:14:0x0065 \-\> B:1:?, CROSS_EDGE: B:15:0x0066 \-\> B:16:0x0068, CROSS_EDGE: B:10:0x0051 \-\> B:1:?, CROSS_EDGE: B:11:0x0052 \-\> B:12:0x0056\lDebug Info:\l  0x0013\-0x0017: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;\l  0x0013\-0x0017: r13 '$result' Ljava\/lang\/Object;\l  0x0018\-0x0024: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;\l  0x0019\-0x0024: r3 '$i$a$\-combineUnsafe\-FlowKt__ZipKt$combine$2' I\l  0x0018\-0x0024: r13 '$result' Ljava\/lang\/Object;\l  0x002d\-0x0034: r4 '$this$combineInternal' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x0031\-0x0034: r3 'it' [Ljava\/lang\/Object;\l  0x0034\-0x003f: r3 'args' [Ljava\/lang\/Object;\l  0x0028\-0x0056: r13 '$result' Ljava\/lang\/Object;\l  0x0028\-0x0056: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;\l  0x0035\-0x0057: r5 '$i$a$\-combineUnsafe\-FlowKt__ZipKt$combine$2' I\l  0x0056\-0x0068: r1 '$result' Ljava\/lang\/Object;\l  0x0056\-0x0068: r3 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;\l  0x0068\-0x0075: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;\l  0x0068\-0x0075: r13 '$result' Ljava\/lang\/Object;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [258=4, 333=5]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_3 -> Node_7;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_7 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_1;
Node_15 -> Node_16;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_1;
Node_11 -> Node_12;
}

