digraph "CFG forkotlinx.coroutines.flow.SharedFlowImpl.Emitter.dispose()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.flow.SharedFlowImpl\<?\>) = (r1 I:kotlinx.coroutines.flow.SharedFlowImpl$Emitter) kotlinx.coroutines.flow.SharedFlowImpl.Emitter.flow kotlinx.coroutines.flow.SharedFlowImpl  (LINE:709)\l0x0002: INVOKE  (r0 I:kotlinx.coroutines.flow.SharedFlowImpl), (r1 I:kotlinx.coroutines.flow.SharedFlowImpl$Emitter) type: STATIC call: kotlinx.coroutines.flow.SharedFlowImpl.access$cancelEmitter(kotlinx.coroutines.flow.SharedFlowImpl, kotlinx.coroutines.flow.SharedFlowImpl$Emitter):void A[MD:(kotlinx.coroutines.flow.SharedFlowImpl, kotlinx.coroutines.flow.SharedFlowImpl$Emitter):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0005|RETURN\l|0x0005: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.flow.SharedFlowImpl.Emitter.dispose((r1 'this' I:kotlinx.coroutines.flow.SharedFlowImpl$Emitter A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlinx.coroutines.DisposableHandle.dispose():void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

