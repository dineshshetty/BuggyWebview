digraph "CFG forkotlinx.coroutines.flow.LintKt.toSet(Lkotlinx\/coroutines\/flow\/SharedFlow;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('$this$toSet' kotlinx.coroutines.flow.SharedFlow)])  (LINE:160)\l0x0001: CHECK_CAST (r0 I:kotlinx.coroutines.flow.Flow) = (kotlinx.coroutines.flow.Flow) (r0 I:??[OBJECT, ARRAY]) \l0x0003: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x0007: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0009: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.flow.Flow)\l  (r1 I:java.util.Set)\l  (r4 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l  (r2 I:int)\l  (r1 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.flow.FlowKt.toSet$default(kotlinx.coroutines.flow.Flow, java.util.Set, kotlin.coroutines.Continuation, int, java.lang.Object):java.lang.Object A[MD:(kotlinx.coroutines.flow.Flow, java.util.Set, kotlin.coroutines.Continuation, int, java.lang.Object):java.lang.Object (m)]\l0x000d: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:java.lang.Object) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.lang.Object kotlinx.coroutines.flow.LintKt.toSet((r3 I:kotlinx.coroutines.flow.SharedFlow\<? extends T\> A[D('$this$toSet' kotlinx.coroutines.flow.SharedFlow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.Continuation\<? super java.util.Set\<? extends T\>\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>WARNING:Lkotlin\/DeprecationLevel;\}, message=SharedFlow never completes, so this terminal operation never completes.\}\}\}\lDebug Info:\l  \-1 \-0x0010: r3 '$this$toSet' Lkotlinx\/coroutines\/flow\/SharedFlow;\l  \-1 \-0x0010: r4 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/SharedFlow\<+TT;\>;Lkotlin\/coroutines\/Continuation\<\-Ljava\/util\/Set\<+TT;\>;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

