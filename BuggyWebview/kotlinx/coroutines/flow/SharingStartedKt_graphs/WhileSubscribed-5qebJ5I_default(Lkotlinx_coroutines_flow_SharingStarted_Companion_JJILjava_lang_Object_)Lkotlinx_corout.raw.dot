digraph "CFG forkotlinx.coroutines.flow.SharingStartedKt.WhileSubscribed\-5qebJ5I$default(Lkotlinx\/coroutines\/flow\/SharingStarted$Companion;JJILjava\/lang\/Object;)Lkotlinx\/coroutines\/flow\/SharingStarted;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r6 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:138)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: SGET  (r1 I:kotlin.time.Duration$Companion) =  kotlin.time.Duration.Companion kotlin.time.Duration$Companion  (LINE:139)\l0x0006: INVOKE  (r1 I:long) = (r1 I:kotlin.time.Duration$Companion) type: VIRTUAL call: kotlin.time.Duration.Companion.getZERO\-UwyO8pc():long A[MD:():long (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: ARITH  (r5 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char])  (LINE:138)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0014 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: SGET  (r3 I:kotlin.time.Duration$Companion) =  kotlin.time.Duration.Companion kotlin.time.Duration$Companion  (LINE:140)\l0x0010: INVOKE  (r3 I:long) = (r3 I:kotlin.time.Duration$Companion) type: VIRTUAL call: kotlin.time.Duration.Companion.getINFINITE\-UwyO8pc():long A[MD:():long (m)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: INVOKE  (r0 I:kotlinx.coroutines.flow.SharingStarted) = (r0 I:kotlinx.coroutines.flow.SharingStarted$Companion), (r1 I:long), (r3 I:long) type: STATIC call: kotlinx.coroutines.flow.SharingStartedKt.WhileSubscribed\-5qebJ5I(kotlinx.coroutines.flow.SharingStarted$Companion, long, long):kotlinx.coroutines.flow.SharingStarted A[MD:(kotlinx.coroutines.flow.SharingStarted$Companion, long, long):kotlinx.coroutines.flow.SharingStarted (m)] (LINE:138)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:kotlinx.coroutines.flow.SharingStarted) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ kotlinx.coroutines.flow.SharingStarted kotlinx.coroutines.flow.SharingStartedKt.WhileSubscribed\-5qebJ5I$default((r0 I:kotlinx.coroutines.flow.SharingStarted$Companion A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:6:0x000c \-\> B:8:0x0014, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x000a\lRENAME_REASON:not valid java name\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

