digraph "CFG forkotlinx.coroutines.flow.FlowKt__ChannelsKt.emitAll(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlinx\/coroutines\/channels\/ReceiveChannel;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:30)\l0x0001: INVOKE  (r0 I:java.lang.Object) = \l  (r2 I:kotlinx.coroutines.flow.FlowCollector A[D('$this$emitAll' kotlinx.coroutines.flow.FlowCollector)])\l  (r3 I:kotlinx.coroutines.channels.ReceiveChannel A[D('channel' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r0 I:boolean)\l  (r4 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: STATIC call: kotlinx.coroutines.flow.FlowKt__ChannelsKt.emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector, kotlinx.coroutines.channels.ReceiveChannel, boolean, kotlin.coroutines.Continuation):java.lang.Object A[MD:\<T\>:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlinx.coroutines.channels.ReceiveChannel\<? extends T\>, boolean, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l0x0005: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x000c \l}"];
Node_11 [shape=record,label="{11\:\ 0x000b|RETURN\l|0x000b: RETURN  (r0 I:java.lang.Object) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x000c|0x000c: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_13 [shape=record,label="{13\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.FlowKt__ChannelsKt.emitAll((r2 I:kotlinx.coroutines.flow.FlowCollector\<? super T\> A[D('$this$emitAll' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlinx.coroutines.channels.ReceiveChannel\<? extends T\> A[D('channel' kotlinx.coroutines.channels.ReceiveChannel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000e \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000e: r2 '$this$emitAll' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  \-1 \-0x000e: r3 'channel' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l  \-1 \-0x000e: r4 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TT;\>;Lkotlinx\/coroutines\/channels\/ReceiveChannel\<+TT;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

