digraph "CFG forkotlinx.coroutines.flow.FlowKt__ChannelsKt.produceIn(Lkotlinx\/coroutines\/flow\/Flow;Lkotlinx\/coroutines\/CoroutineScope;)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.flow.internal.ChannelFlow) = (r1 I:kotlinx.coroutines.flow.Flow A[D('$this$produceIn' kotlinx.coroutines.flow.Flow)]) type: STATIC call: kotlinx.coroutines.flow.internal.ChannelFlowKt.asChannelFlow(kotlinx.coroutines.flow.Flow):kotlinx.coroutines.flow.internal.ChannelFlow A[MD:\<T\>:(kotlinx.coroutines.flow.Flow\<? extends T\>):kotlinx.coroutines.flow.internal.ChannelFlow\<T\> (m)] (LINE:200)\l0x0004: INVOKE  (r0 I:kotlinx.coroutines.channels.ReceiveChannel) = \l  (r0 I:kotlinx.coroutines.flow.internal.ChannelFlow)\l  (r2 I:kotlinx.coroutines.CoroutineScope A[D('scope' kotlinx.coroutines.CoroutineScope)])\l type: VIRTUAL call: kotlinx.coroutines.flow.internal.ChannelFlow.produceImpl(kotlinx.coroutines.CoroutineScope):kotlinx.coroutines.channels.ReceiveChannel A[MD:(kotlinx.coroutines.CoroutineScope):kotlinx.coroutines.channels.ReceiveChannel\<T\> (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:kotlinx.coroutines.channels.ReceiveChannel\<T\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.channels.ReceiveChannel\<T\> kotlinx.coroutines.flow.FlowKt__ChannelsKt.produceIn((r1 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$produceIn' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlinx.coroutines.CoroutineScope A[D('scope' kotlinx.coroutines.CoroutineScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r1 '$this$produceIn' Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x0008: r2 'scope' Lkotlinx\/coroutines\/CoroutineScope;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlinx\/coroutines\/CoroutineScope;)Lkotlinx\/coroutines\/channels\/ReceiveChannel\<TT;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

