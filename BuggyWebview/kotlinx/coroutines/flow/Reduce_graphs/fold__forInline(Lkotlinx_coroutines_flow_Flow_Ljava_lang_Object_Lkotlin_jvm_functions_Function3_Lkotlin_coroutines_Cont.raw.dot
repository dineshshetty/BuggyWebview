digraph "CFG forkotlinx.coroutines.flow.FlowKt__ReduceKt.fold$$forInline(Lkotlinx\/coroutines\/flow\/Flow;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function3;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: NEW_INSTANCE  (r1 I:kotlin.jvm.internal.Ref$ObjectRef) =  kotlin.jvm.internal.Ref$ObjectRef  (LINE:43)\l0x0003: INVOKE  (r1 I:kotlin.jvm.internal.Ref$ObjectRef) type: DIRECT call: kotlin.jvm.internal.Ref.ObjectRef.\<init\>():void A[MD:():void (m)]\l0x0006: IPUT  \l  (r5 I:T A[D('initial' java.lang.Object)])\l  (r1 I:kotlin.jvm.internal.Ref$ObjectRef A[D('accumulator' kotlin.jvm.internal.Ref$ObjectRef)])\l kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object \l0x0008: NEW_INSTANCE  (r2 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2) =  kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2  (LINE:44)\l0x000a: INVOKE  \l  (r2 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2)\l  (r1 I:kotlin.jvm.internal.Ref$ObjectRef A[D('accumulator' kotlin.jvm.internal.Ref$ObjectRef)])\l  (r6 I:kotlin.jvm.functions.Function3 A[D('operation' kotlin.jvm.functions.Function3)])\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2.\<init\>(kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function3):void A[MD:(kotlin.jvm.internal.Ref$ObjectRef\<R\>, kotlin.jvm.functions.Function3\<? super R, ? super T, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\>):void (m)]\l0x000d: CHECK_CAST (r2 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r2 I:??[OBJECT, ARRAY]) \l0x000f: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x0013: INVOKE  \l  (r4 I:kotlinx.coroutines.flow.Flow A[D('$this$fold' kotlinx.coroutines.flow.Flow)])\l  (r2 I:kotlinx.coroutines.flow.FlowCollector)\l  (r7 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l0x0016: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0017: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x001a: IGET  (r2 I:T) = (r1 I:kotlin.jvm.internal.Ref$ObjectRef A[D('accumulator' kotlin.jvm.internal.Ref$ObjectRef)]) kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object  (LINE:47)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|RETURN\l|0x001c: RETURN  (r2 I:java.lang.Object) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.lang.Object kotlinx.coroutines.flow.FlowKt__ReduceKt.fold$$forInline((r4 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$fold' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:R A[D('initial' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function3\<? super R, ? super T, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\> A[D('operation' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.coroutines.Continuation\<? super R\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x001c: r0 '$i$f$fold' I\l  0x0006\-0x001c: r1 'accumulator' Lkotlin\/jvm\/internal\/Ref$ObjectRef;\l  \-1 \-0x001c: r4 '$this$fold' Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x001c: r5 'initial' Ljava\/lang\/Object;\l  \-1 \-0x001c: r6 'operation' Lkotlin\/jvm\/functions\/Function3;\l  \-1 \-0x001c: r7 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;TR;Lkotlin\/jvm\/functions\/Function3\<\-TR;\-TT;\-Lkotlin\/coroutines\/Continuation\<\-TR;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-TR;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

