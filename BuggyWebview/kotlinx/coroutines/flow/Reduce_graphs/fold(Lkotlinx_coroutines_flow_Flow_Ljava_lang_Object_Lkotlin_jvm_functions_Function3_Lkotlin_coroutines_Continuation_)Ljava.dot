digraph "CFG forkotlinx.coroutines.flow.FlowKt__ReduceKt.fold(Lkotlinx\/coroutines\/flow\/Flow;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function3;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000}"];
Node_22 [shape=record,label="{22\:\ 0x0002|if ((r8 instanceof kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1) == false) goto L18\l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1 r0 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1) r8\l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) == 0) goto L18\l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|r0.label = r0.label \- Integer.MIN_VALUE\l}"];
Node_27 [shape=record,label="{27\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1), (r0v5 kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1) binds: [B:26:0x0014, B:25:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r8 = r0\ljava.lang.Object r0 = r8.result\ljava.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|switch(r8.label) \{\l    case 0: goto L14;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
Node_29 [shape=record,label="{29\:\ 0x0025}"];
Node_30 [shape=record,label="{30\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x002d|kotlin.jvm.internal.Ref$ObjectRef r6 = (kotlin.jvm.internal.Ref.ObjectRef) r8.L$0\lkotlin.ResultKt.throwOnFailure(r0)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0056|PHI: r6 \l  PHI: (r6v4 'accumulator' kotlin.jvm.internal.Ref$ObjectRef) = (r6v3 'accumulator' kotlin.jvm.internal.Ref$ObjectRef), (r6v6 'accumulator' kotlin.jvm.internal.Ref$ObjectRef) binds: [B:35:0x0054, B:31:0x002d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0058|RETURN\l|return r6.element\l}"];
Node_32 [shape=record,label="{32\:\ 0x0036|kotlin.ResultKt.throwOnFailure(r0)\lkotlin.jvm.internal.Ref$ObjectRef r3 = new kotlin.jvm.internal.Ref.ObjectRef()\lr3.element = r6\lr8.L$0 = r3\lr8.label = 1\l}"];
Node_33 [shape=record,label="{33\:\ 0x0051|if (r5.collect(new kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2\<\>(r3, r7), r8) != r1) goto L17\l}"];
Node_34 [shape=record,label="{34\:\ 0x0053|RETURN\l|return r1\l}"];
Node_35 [shape=record,label="{35\:\ 0x0054|r6 = r3\l}"];
Node_26 [shape=record,label="{26\:\ 0x0014|kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1 r0 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1(r8)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.FlowKt__ReduceKt.fold((r5v0 kotlinx.coroutines.flow.Flow\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 R A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.jvm.functions.Function3\<? super R, ? super T, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlin.coroutines.Continuation\<? super R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:37:0x0058 \-\> B:20:?, CROSS_EDGE: B:34:0x0053 \-\> B:20:?, CROSS_EDGE: B:35:0x0054 \-\> B:36:0x0056, CROSS_EDGE: B:26:0x0014 \-\> B:27:0x0019, CROSS_EDGE: B:22:0x0002 \-\> B:26:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;TR;Lkotlin\/jvm\/functions\/Function3\<\-TR;\-TT;\-Lkotlin\/coroutines\/Continuation\<\-TR;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-TR;\>;)Ljava\/lang\/Object;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r6v0, resolved type: R\}\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_31;
Node_28 -> Node_32;
Node_29 -> Node_30;
Node_30 -> Node_20;
Node_31 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_20;
Node_35 -> Node_36;
Node_26 -> Node_27;
}

