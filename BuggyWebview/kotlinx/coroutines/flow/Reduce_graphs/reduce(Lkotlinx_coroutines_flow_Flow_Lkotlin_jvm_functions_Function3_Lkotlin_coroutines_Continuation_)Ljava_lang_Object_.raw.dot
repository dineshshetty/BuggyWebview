digraph "CFG forkotlinx.coroutines.flow.FlowKt__ReduceKt.reduce(Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/jvm\/functions\/Function3;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r7 I:??[OBJECT, ARRAY]) kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0014 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1) = (kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1) kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0014 \l}"];
Node_29 [shape=record,label="{29\:\ 0x000e|0x000e: IGET  (r7 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1) kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1.label int \l0x0010: ARITH  (r7 I:int) = (r7 I:int) \- (r2 I:int) \l0x0011: IPUT  (r7 I:int), (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1) kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1.label int \l}"];
Node_31 [shape=record,label="{31\:\ 0x0019|0x0019: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r0 I:java.lang.Object) = (r7 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1.result java.lang.Object \l0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0020: IGET  (r2 I:int) = (r7 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1.label int  (LINE:19)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0022|0x0022: SWITCH  (r2 I:??)\l case 0: goto B:36:0x0035\l case 1: goto B:35:0x002d\l default: goto B:33:0x0025 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0025|0x0025: NEW_INSTANCE  (r5 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:33)\l0x0027: CONST_STR  (r6 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x0029: INVOKE  (r5 I:java.lang.IllegalStateException), (r6 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x002c|0x002c: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x002d|0x002d: IGET  (r5 I:java.lang.Object) = (r7 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1.L$0 java.lang.Object  (LINE:19)\l0x002f: CHECK_CAST (r5 I:kotlin.jvm.internal.Ref$ObjectRef) = (kotlin.jvm.internal.Ref$ObjectRef) (r5 I:??[OBJECT, ARRAY]) \l0x0031: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0055|0x0055: IGET  (r6 I:T) = (r5 I:kotlin.jvm.internal.Ref$ObjectRef A[D('accumulator' kotlin.jvm.internal.Ref$ObjectRef)]) kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object  (LINE:31)\l0x0057: SGET  (r1 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL kotlinx.coroutines.internal.Symbol \l}"];
Node_41 [shape=record,label="{41\:\ 0x0059|0x0059: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x005e \l}"];
Node_42 [shape=record,label="{42\:\ 0x005b|0x005b: IGET  (r6 I:T) = (r5 I:kotlin.jvm.internal.Ref$ObjectRef A[D('accumulator' kotlin.jvm.internal.Ref$ObjectRef)]) kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object  (LINE:33)\l}"];
Node_43 [shape=record,label="{43\:\ 0x005d|RETURN\l|0x005d: RETURN  (r6 I:java.lang.Object) \l}"];
Node_44 [shape=record,label="{44\:\ 0x005e|0x005e: NEW_INSTANCE  (r6 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException  (LINE:31)\l0x0060: CONST_STR  (r1 I:java.lang.String) =  \"Empty flow can't be reduced\" \l0x0062: INVOKE  (r6 I:java.util.NoSuchElementException), (r1 I:java.lang.String) type: DIRECT call: java.util.NoSuchElementException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0065|0x0065: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0035|0x0035: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0038: NEW_INSTANCE  (r2 I:kotlin.jvm.internal.Ref$ObjectRef) =  kotlin.jvm.internal.Ref$ObjectRef  (LINE:20)\l0x003a: INVOKE  (r2 I:kotlin.jvm.internal.Ref$ObjectRef) type: DIRECT call: kotlin.jvm.internal.Ref.ObjectRef.\<init\>():void A[MD:():void (m)]\l0x003d: SGET  (r3 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL kotlinx.coroutines.internal.Symbol \l0x003f: IPUT  (r3 I:T), (r2 I:kotlin.jvm.internal.Ref$ObjectRef A[D('accumulator' kotlin.jvm.internal.Ref$ObjectRef)]) kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object \l0x0041: NEW_INSTANCE  (r3 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2) =  kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2  (LINE:22)\l0x0043: INVOKE  \l  (r3 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2)\l  (r2 I:kotlin.jvm.internal.Ref$ObjectRef A[D('accumulator' kotlin.jvm.internal.Ref$ObjectRef)])\l  (r6 I:kotlin.jvm.functions.Function3 A[D('operation' kotlin.jvm.functions.Function3)])\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2.\<init\>(kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function3):void A[MD:(kotlin.jvm.internal.Ref$ObjectRef\<java.lang.Object\>, kotlin.jvm.functions.Function3\<? super S, ? super T, ? super kotlin.coroutines.Continuation\<? super S\>, ? extends java.lang.Object\>):void (m)]\l0x0046: CHECK_CAST (r3 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r3 I:??[OBJECT, ARRAY]) \l0x0048: IPUT  \l  (r2 I:java.lang.Object A[D('accumulator' kotlin.jvm.internal.Ref$ObjectRef)])\l  (r7 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1.L$0 java.lang.Object \l0x004a: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x004b: IPUT  \l  (r4 I:int)\l  (r7 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1.label int \l0x004d: INVOKE  (r5 I:java.lang.Object A[D('$this$reduce' kotlinx.coroutines.flow.Flow)]) = \l  (r5 I:kotlinx.coroutines.flow.Flow A[D('$this$reduce' kotlinx.coroutines.flow.Flow)])\l  (r3 I:kotlinx.coroutines.flow.FlowCollector)\l  (r7 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0051|0x0051: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$reduce' kotlinx.coroutines.flow.Flow)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0054 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0053|RETURN\l|0x0053: RETURN  (r1 I:java.lang.Object)  (LINE:19)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0054|0x0054: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('accumulator' kotlin.jvm.internal.Ref$ObjectRef)])  (LINE:22)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1) =  kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1 \l0x0016: INVOKE  (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1), (r7 I:kotlin.coroutines.Continuation) type: DIRECT call: kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1.\<init\>(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1\>):void (m)]\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.FlowKt__ReduceKt.reduce((r5 I:kotlinx.coroutines.flow.Flow\<? extends T extends S\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function3\<? super S, ? super T extends S, ? super kotlin.coroutines.Continuation\<? super S\>, ? extends java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.coroutines.Continuation\<? super S\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:43:0x005d \-\> B:24:?, CROSS_EDGE: B:45:0x0065 \-\> B:24:?, CROSS_EDGE: B:38:0x0053 \-\> B:24:?, CROSS_EDGE: B:39:0x0054 \-\> B:40:0x0055, CROSS_EDGE: B:30:0x0014 \-\> B:31:0x0019, CROSS_EDGE: B:26:0x0002 \-\> B:30:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x0025: r0 '$result' Ljava\/lang\/Object;\l  0x001a\-0x0025: r7 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x0031\-0x0035: r5 'accumulator' Lkotlin\/jvm\/internal\/Ref$ObjectRef;\l  0x0038\-0x0051: r5 '$this$reduce' Lkotlinx\/coroutines\/flow\/Flow;\l  0x0038\-0x0051: r6 'operation' Lkotlin\/jvm\/functions\/Function3;\l  0x003d\-0x0055: r2 'accumulator' Lkotlin\/jvm\/internal\/Ref$ObjectRef;\l  0x002d\-0x006d: r0 '$result' Ljava\/lang\/Object;\l  0x0055\-0x006d: r5 'accumulator' Lkotlin\/jvm\/internal\/Ref$ObjectRef;\l  0x002d\-0x006d: r7 '$continuation' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [S, T extends S]\lSIGNATURE: \<S:Ljava\/lang\/Object;T::TS;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlin\/jvm\/functions\/Function3\<\-TS;\-TT;\-Lkotlin\/coroutines\/Continuation\<\-TS;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-TS;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_30;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_35;
Node_32 -> Node_36;
Node_33 -> Node_34;
Node_34 -> Node_24;
Node_35 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_24;
Node_44 -> Node_45;
Node_45 -> Node_24;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_24;
Node_39 -> Node_40;
Node_30 -> Node_31;
}

