digraph "CFG forkotlinx.coroutines.flow.FlowKt__ReduceKt.firstOrNull(Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/jvm\/functions\/Function2;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000}"];
Node_35 [shape=record,label="{35\:\ 0x0002|if ((r8 instanceof kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3) == false) goto L28\l}"];
Node_36 [shape=record,label="{36\:\ 0x0004|kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3 r0 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3) r8\l}"];
Node_37 [shape=record,label="{37\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) == 0) goto L28\l}"];
Node_38 [shape=record,label="{38\:\ 0x000e|r0.label = r0.label \- Integer.MIN_VALUE\l}"];
Node_40 [shape=record,label="{40\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3) = (r0v1 kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3), (r0v5 kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3) binds: [B:39:0x0014, B:38:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r8 = r0\ljava.lang.Object r0 = r8.result\ljava.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_41 [shape=record,label="{41\:\ 0x0022|switch(r8.label) \{\l    case 0: goto L19;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
Node_42 [shape=record,label="{42\:\ 0x0025}"];
Node_43 [shape=record,label="{43\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x002d|kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2 r7 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2) r8.L$1\lkotlin.jvm.internal.Ref$ObjectRef r1 = (kotlin.jvm.internal.Ref.ObjectRef) r8.L$0\l}"];
Node_62 [shape=record,label="{62\:\ 0x0036|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_45 [shape=record,label="{45\:\ 0x0036|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{AbortFlowException \-\> 0x003a, blocks: (B:45:0x0036), top: B:62:0x0036 \}\lCatch: AbortFlowException \-\> 0x003a\l|kotlin.ResultKt.throwOnFailure(r0)     \/\/ Catch: kotlinx.coroutines.flow.internal.FlowExceptions \-\> L3a\l}"];
Node_58 [shape=record,label="{58\:\ 0x006c|PHI: r1 \l  PHI: (r1v4 'result' kotlin.jvm.internal.Ref$ObjectRef) = (r1v2 'result' kotlin.jvm.internal.Ref$ObjectRef), (r1v3 'result' kotlin.jvm.internal.Ref$ObjectRef), (r1v6 'result' kotlin.jvm.internal.Ref$ObjectRef) binds: [B:53:0x005d, B:57:0x0066, B:45:0x0036] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_59 [shape=record,label="{59\:\ 0x006f|RETURN\l|return r1.element\l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_47 [shape=record,label="{47\:\ 0x003a|ExcHandler: AbortFlowException \-\> 0x003a\l|kotlinx.coroutines.flow.internal.AbortFlowException r2 = e\l}"];
Node_57 [shape=record,label="{57\:\ 0x0066|PHI: r1 r2 r7 \l  PHI: (r1v3 'result' kotlin.jvm.internal.Ref$ObjectRef) = (r1v1 'result' kotlin.jvm.internal.Ref$ObjectRef), (r1v6 'result' kotlin.jvm.internal.Ref$ObjectRef) binds: [B:56:0x0062, B:47:0x003a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 'e$iv' kotlinx.coroutines.flow.internal.AbortFlowException) = (r2v2 'e$iv' kotlinx.coroutines.flow.internal.AbortFlowException), (r2v4 'e$iv' kotlinx.coroutines.flow.internal.AbortFlowException) binds: [B:56:0x0062, B:47:0x003a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v6 'collector$iv' kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2) = (r7v1 'collector$iv' kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2), (r7v8 'collector$iv' kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2) binds: [B:56:0x0062, B:47:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.flow.internal.FlowExceptions_commonKt.checkOwnership(r2, r7)\l}"];
Node_49 [shape=record,label="{49\:\ 0x003c|kotlin.ResultKt.throwOnFailure(r0)\lkotlin.jvm.internal.Ref$ObjectRef r2 = new kotlin.jvm.internal.Ref.ObjectRef()\lkotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2 r4 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2(r7, r2)\l}"];
Node_60 [shape=record,label="{60\:\ 0x004c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_50 [shape=record,label="{50\:\ 0x004c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{AbortFlowException \-\> 0x0061, blocks: (B:50:0x004c), top: B:60:0x004c \}\lCatch: AbortFlowException \-\> 0x0061\l|r8.L$0 = r2     \/\/ Catch: kotlinx.coroutines.flow.internal.FlowExceptions \-\> L61\lr8.L$1 = r4     \/\/ Catch: kotlinx.coroutines.flow.internal.FlowExceptions \-\> L61\lr8.label = 1     \/\/ Catch: kotlinx.coroutines.flow.internal.FlowExceptions \-\> L61\l}"];
Node_51 [shape=record,label="{51\:\ 0x005a|if (r6.collect(r4, r8) != r1) goto L24\l}"];
Node_52 [shape=record,label="{52\:\ 0x005c|RETURN\l|return r1\l}"];
Node_53 [shape=record,label="{53\:\ 0x005d|r1 = r2\l}"];
Node_61 [shape=record,label="{61\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_55 [shape=record,label="{55\:\ 0x0061|ExcHandler: AbortFlowException \-\> 0x0061\l|kotlinx.coroutines.flow.internal.AbortFlowException r6 = move\-exception\l}"];
Node_56 [shape=record,label="{56\:\ 0x0062|r1 = r2\lr7 = r4\lr2 = r6\l}"];
Node_39 [shape=record,label="{39\:\ 0x0014|kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3 r0 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3(r8)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.FlowKt__ReduceKt.firstOrNull((r6v0 kotlinx.coroutines.flow.Flow\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.jvm.functions.Function2\<? super T, ? super kotlin.coroutines.Continuation\<? super java.lang.Boolean\>, ? extends java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlin.coroutines.Continuation\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:59:0x006f \-\> B:33:?, CROSS_EDGE: B:57:0x0066 \-\> B:58:0x006c, CROSS_EDGE: B:62:0x0036 \-\> B:47:0x003a, CROSS_EDGE: B:52:0x005c \-\> B:33:?, CROSS_EDGE: B:53:0x005d \-\> B:58:0x006c, CROSS_EDGE: B:56:0x0062 \-\> B:57:0x0066, CROSS_EDGE: B:60:0x004c \-\> B:55:0x0061, CROSS_EDGE: B:39:0x0014 \-\> B:40:0x0019, CROSS_EDGE: B:35:0x0002 \-\> B:39:0x0014\lINLINE_NOT_NEEDED\lTryCatch #0 \{AbortFlowException \-\> 0x0061, blocks: (B:50:0x004c), top: B:60:0x004c \}, TryCatch #1 \{AbortFlowException \-\> 0x003a, blocks: (B:45:0x0036), top: B:62:0x0036 \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlin\/jvm\/functions\/Function2\<\-TT;\-Lkotlin\/coroutines\/Continuation\<\-Ljava\/lang\/Boolean;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-TT;\>;)Ljava\/lang\/Object;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [135=4]\}\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_39;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_41 -> Node_44;
Node_41 -> Node_49;
Node_42 -> Node_43;
Node_43 -> Node_33;
Node_44 -> Node_62;
Node_62 -> Node_45;
Node_62 -> Node_47;
Node_45 -> Node_58;
Node_45 -> Node_63;
Node_58 -> Node_59;
Node_59 -> Node_33;
Node_63 -> Node_47;
Node_47 -> Node_57;
Node_57 -> Node_58;
Node_49 -> Node_60;
Node_60 -> Node_50;
Node_60 -> Node_55;
Node_50 -> Node_51;
Node_50 -> Node_61;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_33;
Node_53 -> Node_58;
Node_61 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_39 -> Node_40;
}

