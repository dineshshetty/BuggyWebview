digraph "CFG forkotlinx.coroutines.flow.FlowKt__ReduceKt.fold(Lkotlinx\/coroutines\/flow\/Flow;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function3;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r8 I:??[OBJECT, ARRAY]) kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0014 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1) = (kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1) kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0014 \l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|0x000e: IGET  (r8 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1) kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1.label int \l0x0010: ARITH  (r8 I:int) = (r8 I:int) \- (r2 I:int) \l0x0011: IPUT  (r8 I:int), (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1) kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1.label int \l}"];
Node_27 [shape=record,label="{27\:\ 0x0019|0x0019: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r0 I:java.lang.Object) = (r8 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1.result java.lang.Object \l0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0020: IGET  (r2 I:int) = (r8 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1.label int  (LINE:39)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|0x0022: SWITCH  (r2 I:??)\l case 0: goto B:32:0x0036\l case 1: goto B:31:0x002d\l default: goto B:29:0x0025 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0025|0x0025: NEW_INSTANCE  (r5 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:47)\l0x0027: CONST_STR  (r6 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x0029: INVOKE  (r5 I:java.lang.IllegalStateException), (r6 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x002c|0x002c: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x002d|0x002d: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:39)\l0x002e: IGET  (r6 I:java.lang.Object) = (r8 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1.L$0 java.lang.Object \l0x0030: CHECK_CAST (r6 I:kotlin.jvm.internal.Ref$ObjectRef) = (kotlin.jvm.internal.Ref$ObjectRef) (r6 I:??[OBJECT, ARRAY]) \l0x0032: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0056|0x0056: IGET  (r7 I:T) = (r6 I:kotlin.jvm.internal.Ref$ObjectRef A[D('accumulator' kotlin.jvm.internal.Ref$ObjectRef)]) kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object  (LINE:47)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0058|RETURN\l|0x0058: RETURN  (r7 I:java.lang.Object) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0036|0x0036: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0039: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x003a: NEW_INSTANCE  (r3 I:kotlin.jvm.internal.Ref$ObjectRef) =  kotlin.jvm.internal.Ref$ObjectRef  (LINE:43)\l0x003c: INVOKE  (r3 I:kotlin.jvm.internal.Ref$ObjectRef) type: DIRECT call: kotlin.jvm.internal.Ref.ObjectRef.\<init\>():void A[MD:():void (m)]\l0x003f: IPUT  \l  (r6 I:T A[D('initial' java.lang.Object)])\l  (r3 I:kotlin.jvm.internal.Ref$ObjectRef A[D('accumulator' kotlin.jvm.internal.Ref$ObjectRef)])\l kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object \l0x0041: NEW_INSTANCE  (r6 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2 A[D('initial' java.lang.Object)]) =  kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2  (LINE:44)\l0x0043: INVOKE  \l  (r6 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2)\l  (r3 I:kotlin.jvm.internal.Ref$ObjectRef A[D('accumulator' kotlin.jvm.internal.Ref$ObjectRef)])\l  (r7 I:kotlin.jvm.functions.Function3 A[D('operation' kotlin.jvm.functions.Function3)])\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2.\<init\>(kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function3):void A[MD:(kotlin.jvm.internal.Ref$ObjectRef\<R\>, kotlin.jvm.functions.Function3\<? super R, ? super T, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\>):void (m)]\l0x0046: CHECK_CAST (r6 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r6 I:??[OBJECT, ARRAY]) \l0x0048: IPUT  \l  (r3 I:java.lang.Object A[D('accumulator' kotlin.jvm.internal.Ref$ObjectRef)])\l  (r8 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1.L$0 java.lang.Object \l0x004a: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x004b: IPUT  (r4 I:int), (r8 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1.label int \l0x004d: INVOKE  (r5 I:java.lang.Object A[D('$this$fold' kotlinx.coroutines.flow.Flow)]) = \l  (r5 I:kotlinx.coroutines.flow.Flow A[D('$this$fold' kotlinx.coroutines.flow.Flow)])\l  (r6 I:kotlinx.coroutines.flow.FlowCollector)\l  (r8 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0051|0x0051: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$fold' kotlinx.coroutines.flow.Flow)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0054 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0053|RETURN\l|0x0053: RETURN  (r1 I:java.lang.Object)  (LINE:39)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0054|0x0054: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$f$fold' int)])  (LINE:44)\l0x0055: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('accumulator' kotlin.jvm.internal.Ref$ObjectRef)]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1) =  kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1 \l0x0016: INVOKE  (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1), (r8 I:kotlin.coroutines.Continuation) type: DIRECT call: kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1.\<init\>(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1\>):void (m)]\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.FlowKt__ReduceKt.fold((r5 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:R A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function3\<? super R, ? super T, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.coroutines.Continuation\<? super R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:37:0x0058 \-\> B:20:?, CROSS_EDGE: B:34:0x0053 \-\> B:20:?, CROSS_EDGE: B:35:0x0054 \-\> B:36:0x0056, CROSS_EDGE: B:26:0x0014 \-\> B:27:0x0019, CROSS_EDGE: B:22:0x0002 \-\> B:26:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;TR;Lkotlin\/jvm\/functions\/Function3\<\-TR;\-TT;\-Lkotlin\/coroutines\/Continuation\<\-TR;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-TR;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x001c\-0x0025: r0 '$result' Ljava\/lang\/Object;\l  0x001a\-0x0025: r8 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x002e\-0x0036: r5 '$i$f$fold' I\l  0x0032\-0x0036: r6 'accumulator' Lkotlin\/jvm\/internal\/Ref$ObjectRef;\l  0x0039\-0x0041: r6 'initial' Ljava\/lang\/Object;\l  0x0039\-0x0051: r5 '$this$fold' Lkotlinx\/coroutines\/flow\/Flow;\l  0x0039\-0x0051: r7 'operation' Lkotlin\/jvm\/functions\/Function3;\l  0x003a\-0x0056: r2 '$i$f$fold' I\l  0x003f\-0x0056: r3 'accumulator' Lkotlin\/jvm\/internal\/Ref$ObjectRef;\l  0x002d\-0x0061: r0 '$result' Ljava\/lang\/Object;\l  0x0056\-0x0061: r5 '$i$f$fold' I\l  0x0056\-0x0061: r6 'accumulator' Lkotlin\/jvm\/internal\/Ref$ObjectRef;\l  0x002d\-0x0061: r8 '$continuation' Lkotlin\/coroutines\/Continuation;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_31;
Node_28 -> Node_32;
Node_29 -> Node_30;
Node_30 -> Node_20;
Node_31 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_20;
Node_35 -> Node_36;
Node_26 -> Node_27;
}

