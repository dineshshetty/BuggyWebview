digraph "CFG forkotlinx.coroutines.flow.FlowKt__ShareKt.launchSharing.1.2.WhenMappings.\<clinit\>()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.flow.SharingCommand[]) =  type: STATIC call: kotlinx.coroutines.flow.SharingCommand.values():kotlinx.coroutines.flow.SharingCommand[] A[MD:():kotlinx.coroutines.flow.SharingCommand[] (m)]\l0x0004: ARRAY_LENGTH  (r0 I:int) = (r0 I:??[]) \l0x0005: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0007: SGET  (r1 I:kotlinx.coroutines.flow.SharingCommand) =  kotlinx.coroutines.flow.SharingCommand.START kotlinx.coroutines.flow.SharingCommand \l0x0009: INVOKE  (r1 I:int) = (r1 I:kotlinx.coroutines.flow.SharingCommand) type: VIRTUAL call: kotlinx.coroutines.flow.SharingCommand.ordinal():int A[MD:():int (c)]\l0x000d: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000e: APUT  (r0 I:??[int, float][]), (r1 I:??[int, short, byte, char]), (r2 I:??[int, float, short, byte, char]) \l0x0010: SGET  (r1 I:kotlinx.coroutines.flow.SharingCommand) =  kotlinx.coroutines.flow.SharingCommand.STOP kotlinx.coroutines.flow.SharingCommand \l0x0012: INVOKE  (r1 I:int) = (r1 I:kotlinx.coroutines.flow.SharingCommand) type: VIRTUAL call: kotlinx.coroutines.flow.SharingCommand.ordinal():int A[MD:():int (c)]\l0x0016: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0017: APUT  (r0 I:??[int, float][]), (r1 I:??[int, short, byte, char]), (r2 I:??[int, float, short, byte, char]) \l0x0019: SGET  (r1 I:kotlinx.coroutines.flow.SharingCommand) =  kotlinx.coroutines.flow.SharingCommand.STOP_AND_RESET_REPLAY_CACHE kotlinx.coroutines.flow.SharingCommand \l0x001b: INVOKE  (r1 I:int) = (r1 I:kotlinx.coroutines.flow.SharingCommand) type: VIRTUAL call: kotlinx.coroutines.flow.SharingCommand.ordinal():int A[MD:():int (c)]\l0x001f: CONST  (r2 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0020: APUT  (r0 I:??[int, float][]), (r1 I:??[int, short, byte, char]), (r2 I:??[int, float, short, byte, char]) \l0x0022: SPUT  (r0 I:int[]) kotlinx.coroutines.flow.FlowKt__ShareKt.launchSharing.1.2.WhenMappings.$EnumSwitchMapping$0 int[] \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|RETURN\l|0x0024: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlinx.coroutines.flow.FlowKt__ShareKt.launchSharing.1.2.WhenMappings.\<clinit\>()  | INLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

