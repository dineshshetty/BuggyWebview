digraph "CFG forkotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r7 I:kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1) kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1.label int  (LINE:214)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:26:0x0022\l case 1: goto B:25:0x0016\l case 2: goto B:24:0x0011\l default: goto B:22:0x0009 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|0x0009: NEW_INSTANCE  (r8 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r8 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|0x0010: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|0x0011: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r8 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0051|0x0051: SGET  (r1 I:kotlin.Unit A[D('$result' java.lang.Object)]) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_35 [shape=record,label="{35\:\ 0x0053|RETURN\l|0x0053: RETURN  (r1 I:java.lang.Object) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0016|0x0016: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0017: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1 A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)])\l kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1.L$0 java.lang.Object \l0x0019: CHECK_CAST (r2 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r2 I:??[OBJECT, ARRAY]) \l0x001b: INVOKE  (r8 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x001e: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x001f: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)]) \l0x0020: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)]) = (r8 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x003f|0x003f: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)]) \l0x0040: CHECK_CAST (r4 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r4 I:??[OBJECT, ARRAY]) \l0x0042: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0043: IPUT  \l  (r5 I:java.lang.Object)\l  (r2 I:kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1 A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)])\l kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1.L$0 java.lang.Object \l0x0045: CONST  (r5 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0046: IPUT  \l  (r5 I:int)\l  (r2 I:kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1 A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)])\l kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1.label int \l0x0048: INVOKE  (r8 I:java.lang.Object) = (r3 I:kotlinx.coroutines.flow.FlowCollector), (r8 I:java.lang.Object), (r4 I:kotlin.coroutines.Continuation) type: INTERFACE call: kotlinx.coroutines.flow.FlowCollector.emit(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x004c|0x004c: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x004f \l}"];
Node_32 [shape=record,label="{32\:\ 0x004e|RETURN\l|0x004e: RETURN  (r0 I:java.lang.Object) \l}"];
Node_33 [shape=record,label="{33\:\ 0x004f|0x004f: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) \l0x0050: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0022|0x0022: INVOKE  (r8 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0025: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0026: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1 A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)])\l kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1.L$0 java.lang.Object \l0x0028: CHECK_CAST (r2 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r2 I:??[OBJECT, ARRAY]) \l0x002a: IGET  (r3 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1 A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)])\l kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1.L$1 java.lang.Object \l0x002c: IGET  (r4 I:kotlin.jvm.functions.Function2\<T, kotlin.coroutines.Continuation\<? super R\>, java.lang.Object\>) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1 A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)])\l kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1.$transform kotlin.jvm.functions.Function2 \l0x002e: IPUT  \l  (r2 I:java.lang.Object A[D('$this$transformLatest' kotlinx.coroutines.flow.FlowCollector)])\l  (r1 I:kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1 A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)])\l kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1.L$0 java.lang.Object \l0x0030: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0031: IPUT  \l  (r5 I:int)\l  (r1 I:kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1 A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)])\l kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1.label int \l0x0033: INVOKE  (r3 I:java.lang.Object A[D('it' java.lang.Object)]) = \l  (r4 I:kotlin.jvm.functions.Function2)\l  (r3 I:java.lang.Object A[D('it' java.lang.Object)])\l  (r1 I:java.lang.Object A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)])\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0037|0x0037: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' java.lang.Object)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x003a \l}"];
Node_28 [shape=record,label="{28\:\ 0x0039|RETURN\l|0x0039: RETURN  (r0 I:java.lang.Object) \l}"];
Node_29 [shape=record,label="{29\:\ 0x003a|0x003a: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)]) \l0x003b: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1)]) = (r8 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) \l0x003c: MOVE  (r8 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) = (r3 I:??[OBJECT, ARRAY]) \l0x003d: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x003e: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1.invokeSuspend((r7 'this' I:kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1 A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:35:0x0053 \-\> B:19:?, CROSS_EDGE: B:32:0x004e \-\> B:19:?, CROSS_EDGE: B:33:0x004f \-\> B:34:0x0051, CROSS_EDGE: B:28:0x0039 \-\> B:19:?, CROSS_EDGE: B:29:0x003a \-\> B:30:0x003f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0016: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__MergeKt$mapLatest$1;\l  0x0012\-0x0016: r8 '$result' Ljava\/lang\/Object;\l  0x0017\-0x0022: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__MergeKt$mapLatest$1;\l  0x0017\-0x0022: r8 '$result' Ljava\/lang\/Object;\l  0x002a\-0x0037: r2 '$this$transformLatest' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x002c\-0x0037: r3 'it' Ljava\/lang\/Object;\l  0x0026\-0x003f: r8 '$result' Ljava\/lang\/Object;\l  0x0026\-0x003f: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__MergeKt$mapLatest$1;\l  0x003f\-0x0051: r1 '$result' Ljava\/lang\/Object;\l  0x003f\-0x0051: r2 'this' Lkotlinx\/coroutines\/flow\/FlowKt__MergeKt$mapLatest$1;\l  0x0051\-0x005d: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__MergeKt$mapLatest$1;\l  0x0051\-0x005d: r8 '$result' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_24;
Node_21 -> Node_25;
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_19;
Node_24 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_19;
Node_25 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_19;
Node_33 -> Node_34;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_19;
Node_29 -> Node_30;
}

