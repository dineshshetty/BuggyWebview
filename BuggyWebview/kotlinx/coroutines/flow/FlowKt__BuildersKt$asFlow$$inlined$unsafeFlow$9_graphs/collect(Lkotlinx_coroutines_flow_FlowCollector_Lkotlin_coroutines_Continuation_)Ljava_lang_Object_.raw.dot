digraph "CFG forkotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9.collect(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r7 I:??[OBJECT, ARRAY]) kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0014 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1) = (kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1) kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9.1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0014 \l}"];
Node_31 [shape=record,label="{31\:\ 0x000e|0x000e: IGET  (r7 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1) kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9.1.label int \l0x0010: ARITH  (r7 I:int) = (r7 I:int) \- (r2 I:int) \l0x0011: IPUT  (r7 I:int), (r0 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1) kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9.1.label int \l}"];
Node_33 [shape=record,label="{33\:\ 0x0019|0x0019: IGET  (r7 I:java.lang.Object) = (r0 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1) kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9.1.result java.lang.Object \l0x001b: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x001f: IGET  (r2 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1) kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9.1.label int  (LINE:105)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0021|0x0021: SWITCH  (r2 I:??)\l case 0: goto B:38:0x0039\l case 1: goto B:37:0x002c\l default: goto B:35:0x0024 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0024|0x0024: NEW_INSTANCE  (r6 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:109)\l0x0026: CONST_STR  (r7 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x0028: INVOKE  (r6 I:java.lang.IllegalStateException), (r7 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x002b|0x002b: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x002c|0x002c: IGET  (r6 I:java.lang.Object) = (r0 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1) kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9.1.L$1 java.lang.Object  (LINE:105)\l0x002e: CHECK_CAST (r6 I:java.util.Iterator) = (java.util.Iterator) (r6 I:??[OBJECT, ARRAY]) \l0x0030: IGET  (r2 I:java.lang.Object) = (r0 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1) kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9.1.L$0 java.lang.Object \l0x0032: CHECK_CAST (r2 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r2 I:??[OBJECT, ARRAY]) \l0x0034: INVOKE  (r7 I:java.lang.Object) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0037: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x004a|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x004a|LOOP_START\lLOOP:0: B:39:0x004a\-\>B:42:0x0066\l|0x004a: INVOKE  (r2 I:boolean) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x004e|0x004e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x006a \l}"];
Node_41 [shape=record,label="{41\:\ 0x0050|0x0050: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0051: CHECK_CAST (r2 I:kotlin.collections.IntIterator) = (kotlin.collections.IntIterator) (r2 I:??[OBJECT, ARRAY]) \l0x0053: INVOKE  (r2 I:int) = (r2 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.nextInt():int A[MD:():int (m)]\l0x0057: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) type: STATIC call: kotlin.coroutines.jvm.internal.Boxing.boxInt(int):java.lang.Integer A[MD:(int):java.lang.Integer (m)] (LINE:115)\l0x005b: IPUT  (r7 I:java.lang.Object), (r0 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1) kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9.1.L$0 java.lang.Object \l0x005d: IPUT  (r6 I:java.lang.Object), (r0 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1) kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9.1.L$1 java.lang.Object \l0x005f: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0060: IPUT  (r3 I:int), (r0 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1) kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9.1.label int \l0x0062: INVOKE  (r2 I:java.lang.Object) = (r7 I:kotlinx.coroutines.flow.FlowCollector), (r2 I:java.lang.Object), (r0 I:kotlin.coroutines.Continuation) type: INTERFACE call: kotlinx.coroutines.flow.FlowCollector.emit(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0066|LOOP_END\lLOOP:0: B:39:0x004a\-\>B:42:0x0066\l|0x0066: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x004a \l}"];
Node_47 [shape=record,label="{47\:\ 0x0068|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0068|RETURN\l|0x0068: RETURN  (r1 I:java.lang.Object)  (LINE:105)\l}"];
Node_48 [shape=record,label="{48\:\ 0x006a|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x006a|0x006b: SGET  (r6 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:118)\l}"];
Node_46 [shape=record,label="{46\:\ 0x006d|RETURN\l|0x006d: RETURN  (r6 I:java.lang.Object)  (LINE:109)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0039|0x0039: INVOKE  (r7 I:java.lang.Object) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x003c: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY])  (LINE:108)\l0x003d: CHECK_CAST (r7 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r7 I:??[OBJECT, ARRAY]) \l0x003f: IGET  (r7 I:kotlin.ranges.IntRange) = (r5 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9) kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9.$this_asFlow$inlined kotlin.ranges.IntRange  (LINE:113)\l0x0041: CHECK_CAST (r7 I:java.lang.Iterable) = (java.lang.Iterable) (r7 I:??[OBJECT, ARRAY]) \l0x0043: INVOKE  (r7 I:java.util.Iterator) = (r7 I:java.lang.Iterable) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:114)\l0x0047: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0048: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0049: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1) =  kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1 \l0x0016: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1)\l  (r5 I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9)\l  (r7 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9.1.\<init\>(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9, kotlin.coroutines.Continuation):void (m)]\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9.collect((r5 'this' I:kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9 A[IMMUTABLE_TYPE, THIS]), (r6 I:kotlinx.coroutines.flow.FlowCollector\<? super java.lang.Integer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:43:0x0068 \-\> B:26:?, BACK_EDGE: B:42:0x0066 \-\> B:39:0x004a, CROSS_EDGE: B:46:0x006d \-\> B:26:?, CROSS_EDGE: B:38:0x0039 \-\> B:39:0x004a, CROSS_EDGE: B:32:0x0014 \-\> B:33:0x0019, CROSS_EDGE: B:28:0x0002 \-\> B:32:0x0014\lINLINE_NOT_NEEDED\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-Ljava\/lang\/Integer;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_32;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_34 -> Node_37;
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_26;
Node_37 -> Node_49;
Node_49 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_48;
Node_41 -> Node_42;
Node_42 -> Node_39;
Node_42 -> Node_47[style=dashed];
Node_47 -> Node_43;
Node_43 -> Node_26;
Node_48 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_26;
Node_38 -> Node_49;
Node_32 -> Node_33;
}

