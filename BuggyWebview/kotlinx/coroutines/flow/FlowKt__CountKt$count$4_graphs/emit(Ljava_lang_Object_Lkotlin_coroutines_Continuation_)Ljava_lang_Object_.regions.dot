digraph "CFG forkotlinx.coroutines.flow.FlowKt__CountKt$count$4.emit(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_164261220 {
label = "R(6:(2:3|(5:5|6|7|(1:14)|16))|20|6|7|(0)|16) | DECL_VAR: kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1 null, kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1 null, kotlinx.coroutines.flow.FlowKt__CountKt$count$4 null, java.lang.Object value\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1229137226 {
label = "IF [B:24:0x0002] THEN: R(2:3|(5:5|6|7|(1:14)|16)) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0002|if ((r7 instanceof kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1) != false) goto L3\l}"];
subgraph cluster_Region_49583180 {
label = "R(2:3|(5:5|6|7|(1:14)|16))";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0004|kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1 r0 = (kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1) r7\l}"];
subgraph cluster_IfRegion_708372790 {
label = "IF [B:26:0x000c] THEN: R(5:5|6|7|(1:14)|16) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) != 0) goto L5\l}"];
subgraph cluster_Region_921457842 {
label = "R(5:5|6|7|(1:14)|16)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x000e|r0.label \-= Integer.MIN_VALUE\l}"];
Node_29 [shape=record,label="{29\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1), (r0v5 kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1) binds: [B:28:0x0014, B:27:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r7 = r0\ljava.lang.Object java.lang.Object r0 = r7.result\ljava.lang.Object java.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_1316474056 {
label = "Switch: 3
 case 0 -> R(3:17|(1:19)|1)
 case 1 -> R(2:11|1)
 case default -> R(1:9)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0023|switch(r7.label) \{\l    case 0: goto L17;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
subgraph cluster_Region_344729903 {
label = "R(3:17|(1:19)|1)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0038|kotlin.ResultKt.throwOnFailure(r0)\lr2 = r5\lkotlin.jvm.functions.Function2\<T, kotlin.coroutines.Continuation\<? super java.lang.Boolean\>, java.lang.Object\> kotlin.jvm.functions.Function2\<T, kotlin.coroutines.Continuation\<? super java.lang.Boolean\>, java.lang.Object\> r4 = r2.$predicate\lr7.L$0 = r2\lr7.label = 1\ljava.lang.Object r6 = r4.invoke(r6, r7)\l}"];
subgraph cluster_IfRegion_377521063 {
label = "IF [B:35:0x0046] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0046|if (r6 == r1) goto L19\l}"];
subgraph cluster_Region_1664095497 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0048|RETURN\l|return r1\l}"];
}
}
Node_InsnContainer_266968117 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_855410950 {
label = "R(2:11|1)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x002e|kotlin.ResultKt.throwOnFailure(r0)\lr2 = (kotlinx.coroutines.flow.FlowKt__CountKt$count$4) r7.L$0\lr6 = r0\l}"];
Node_InsnContainer_878669975 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1684437539 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x002d|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
}
}
subgraph cluster_IfRegion_159010496 {
label = "IF [B:38:0x004f] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x004f|if (((java.lang.Boolean) r6).booleanValue() != false) goto L14\l}"];
subgraph cluster_Region_894571728 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0051|r2.f217$i.element++\lint int r6 = r2.f217$i.element\l}"];
}
}
Node_41 [shape=record,label="{41\:\ 0x005e|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
}
}
}
Node_28 [shape=record,label="{28\:\ 0x0014|kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1 r0 = new kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1(r5, r7)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1), (r0v5 kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1) binds: [B:28:0x0014, B:27:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r7 = r0\ljava.lang.Object java.lang.Object r0 = r7.result\ljava.lang.Object java.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_1717633583 {
label = "Switch: 0";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0023|switch(r7.label) \{\l    case 0: goto L17;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
}
subgraph cluster_IfRegion_1253139438 {
label = "IF [B:38:0x004f] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x004f|if (((java.lang.Boolean) r6).booleanValue() != false) goto L14\l}"];
subgraph cluster_Region_86342119 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_41 [shape=record,label="{41\:\ 0x005e|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0000}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0026}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0049|PHI: r2 r6 \l  PHI: (r2v2 kotlinx.coroutines.flow.FlowKt__CountKt$count$4) = (r2v1 kotlinx.coroutines.flow.FlowKt__CountKt$count$4), (r2v3 kotlinx.coroutines.flow.FlowKt__CountKt$count$4) binds: [B:35:0x0046, B:33:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v2 'value' java.lang.Object) = (r6v1 'value' java.lang.Object), (r6v11 'value' java.lang.Object) binds: [B:35:0x0046, B:33:0x002e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x005c}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__CountKt$count$4.emit((r5v0 'this' kotlinx.coroutines.flow.FlowKt__CountKt$count$4\<T\> A[IMMUTABLE_TYPE, THIS]), (r6v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:41:0x005e \-\> B:22:?, CROSS_EDGE: B:38:0x004f \-\> B:40:0x005c, CROSS_EDGE: B:36:0x0048 \-\> B:22:?, CROSS_EDGE: B:35:0x0046 \-\> B:37:0x0049, CROSS_EDGE: B:28:0x0014 \-\> B:29:0x0019, CROSS_EDGE: B:24:0x0002 \-\> B:28:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (TT;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lJadxCommentsAttr\{\l WARN: \l \-\> Removed duplicated region for block: B:34:0x0038 \l \-\> Removed duplicated region for block: B:33:0x002e \l \-\> Removed duplicated region for block: B:31:0x0026 \l \-\> Removed duplicated region for block: B:39:0x0051 \}\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.FlowCollector.emit(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_21;Node_24 -> Node_25;
Node_24 -> Node_28[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_33;
Node_30 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_37[style=dashed];
Node_36 -> Node_22;
Node_33 -> Node_37;
Node_32 -> Node_22;
Node_38 -> Node_39;
Node_38 -> Node_40[style=dashed];
Node_39 -> Node_40;
Node_41 -> Node_22;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_33;
Node_30 -> Node_34;
Node_38 -> Node_39;
Node_38 -> Node_40[style=dashed];
Node_41 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_31 -> Node_32;
Node_37 -> Node_38;
Node_40 -> Node_41;
}

