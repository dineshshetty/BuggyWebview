digraph "CFG forkotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1.collect(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('collector' kotlinx.coroutines.flow.FlowCollector)])  (LINE:108)\l0x0001: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$completion' kotlin.coroutines.Continuation)]) \l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: IGET  (r3 I:kotlinx.coroutines.channels.BroadcastChannel) = (r5 I:kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1) kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1.$this_asFlow$inlined kotlinx.coroutines.channels.BroadcastChannel  (LINE:113)\l0x0005: INVOKE  (r3 I:kotlinx.coroutines.channels.ReceiveChannel) = (r3 I:kotlinx.coroutines.channels.BroadcastChannel) type: INTERFACE call: kotlinx.coroutines.channels.BroadcastChannel.openSubscription():kotlinx.coroutines.channels.ReceiveChannel A[MD:():kotlinx.coroutines.channels.ReceiveChannel\<E\> (m)]\l0x0009: INVOKE  (r3 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.flow.FlowCollector A[D('$this$asFlow_u24lambda_u2d2' kotlinx.coroutines.flow.FlowCollector)])\l  (r3 I:kotlinx.coroutines.channels.ReceiveChannel)\l  (r7 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: STATIC call: kotlinx.coroutines.flow.FlowKt.emitAll(kotlinx.coroutines.flow.FlowCollector, kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.Continuation):java.lang.Object A[MD:\<T\>:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlinx.coroutines.channels.ReceiveChannel\<? extends T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l0x000d: INVOKE  (r4 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|RETURN\l|0x0013: RETURN  (r3 I:java.lang.Object) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0015: SGET  (r0 I:kotlin.Unit A[D('$this$asFlow_u24lambda_u2d2' kotlinx.coroutines.flow.FlowCollector)]) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:java.lang.Object)  (LINE:109)\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1.collect((r5 'this' I:kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1 A[IMMUTABLE_TYPE, THIS]), (r6 I:kotlinx.coroutines.flow.FlowCollector\<? super T\> A[D('collector' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0017 \-\> B:1:?\lDebug Info:\l  0x0001\-0x0015: r0 '$this$asFlow_u24lambda_u2d2' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x0002\-0x0015: r1 '$completion' Lkotlin\/coroutines\/Continuation;\l  0x0003\-0x0015: r2 '$i$a$\-unsafeFlow\-FlowKt__ChannelsKt$asFlow$1' I\l  \-1 \-0x0017: r6 'collector' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  \-1 \-0x0017: r7 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TT;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

