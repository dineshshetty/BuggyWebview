digraph "CFG forkotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1.collect(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Ref$IntRef r3 = new kotlin.jvm.internal.Ref.IntRef()\ljava.lang.Object r4 = r1.collect(new kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1(r7, r3), r8)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|if (r4 != kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|RETURN\l|return r4\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c}"];
Node_6 [shape=record,label="{6\:\ 0x001f|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1.collect((r6v0 'this' kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1 A[IMMUTABLE_TYPE, THIS]), (r7v0 kotlinx.coroutines.flow.FlowCollector\<? super kotlin.collections.IndexedValue\<? extends T\>\> A[D('collector' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x001f \-\> B:1:?\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-Lkotlin\/collections\/IndexedValue\<+TT;\>;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

