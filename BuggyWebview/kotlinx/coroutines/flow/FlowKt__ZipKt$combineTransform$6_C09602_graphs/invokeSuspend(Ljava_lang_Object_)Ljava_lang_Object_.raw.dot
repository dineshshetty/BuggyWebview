digraph "CFG forkotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6.2.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r6 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2) kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6.2.label int  (LINE:251)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:20:0x0016\l case 1: goto B:19:0x0011\l default: goto B:17:0x0009 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0009|0x0009: NEW_INSTANCE  (r7 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r7 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|0x0010: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|0x0011: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r7 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0032|0x0032: SGET  (r1 I:kotlin.Unit A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2)]) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_25 [shape=record,label="{25\:\ 0x0034|RETURN\l|0x0034: RETURN  (r1 I:java.lang.Object) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|0x0016: INVOKE  (r7 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0019: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6.2.L$0 java.lang.Object \l0x001c: CHECK_CAST (r2 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r2 I:??[OBJECT, ARRAY]) \l0x001e: IGET  (r3 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6.2.L$1 java.lang.Object \l0x0020: CHECK_CAST (r3 I:java.lang.Object[]) = (java.lang.Object[]) (r3 I:??[OBJECT, ARRAY]) \l0x0022: IGET  (r4 I:kotlin.jvm.functions.Function3\<kotlinx.coroutines.flow.FlowCollector\<? super R\>, T[], kotlin.coroutines.Continuation\<? super kotlin.Unit\>, java.lang.Object\>) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6.2.$transform kotlin.jvm.functions.Function3 \l0x0024: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0025: IPUT  \l  (r5 I:java.lang.Object)\l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6.2.L$0 java.lang.Object \l0x0027: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0028: IPUT  \l  (r5 I:int)\l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6.2.label int \l0x002a: INVOKE  (r2 I:java.lang.Object A[D('$this$combineInternal' kotlinx.coroutines.flow.FlowCollector)]) = \l  (r4 I:kotlin.jvm.functions.Function3)\l  (r2 I:java.lang.Object A[D('$this$combineInternal' kotlinx.coroutines.flow.FlowCollector)])\l  (r3 I:java.lang.Object A[D('it' java.lang.Object[])])\l  (r1 I:java.lang.Object A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2)])\l type: INTERFACE call: kotlin.jvm.functions.Function3.invoke(java.lang.Object, java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2, P3):R (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x002e|0x002e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$combineInternal' kotlinx.coroutines.flow.FlowCollector)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0031 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0030|RETURN\l|0x0030: RETURN  (r0 I:java.lang.Object) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0031|0x0031: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2)]) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6.2.invokeSuspend((r6 'this' I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2 A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0034 \-\> B:14:?, CROSS_EDGE: B:22:0x0030 \-\> B:14:?, CROSS_EDGE: B:23:0x0031 \-\> B:24:0x0032\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0016: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ZipKt$combineTransform$6$2;\l  0x0012\-0x0016: r7 '$result' Ljava\/lang\/Object;\l  0x001e\-0x002e: r2 '$this$combineInternal' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x0022\-0x002e: r3 'it' [Ljava\/lang\/Object;\l  0x001a\-0x0032: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ZipKt$combineTransform$6$2;\l  0x0032\-0x003d: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ZipKt$combineTransform$6$2;\l  0x001a\-0x003d: r7 '$result' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_19;
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_14;
Node_19 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_14;
Node_23 -> Node_24;
}

