digraph "CFG forkotlinx.coroutines.flow.internal.ChannelFlowKt.withContextUndispatched$default(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Object;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2;Lkotlin\/coroutines\/Continuation;ILjava\/lang\/Object;)Ljava\/lang\/Object;" {
subgraph cluster_Region_672569663 {
label = "R(2:(1:3)|5)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1546993362 {
label = "IF [B:17:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0002|if ((r5 & 4) != 0) goto L3\l}"];
subgraph cluster_Region_1202518165 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0006|java.lang.Object r2 = kotlinx.coroutines.internal.ThreadContext.threadContextElements(r0)\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x000e|RETURN\l|return withContextUndispatched(r0, r1, r2, r3, r4)\l}"];
}
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0000}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000a|PHI: r2 \l  PHI: (r2v1 java.lang.Object) = (r2v0 java.lang.Object), (r2v2 java.lang.Object) binds: [B:17:0x0002, B:18:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ java.lang.Object kotlinx.coroutines.flow.internal.ChannelFlowKt.withContextUndispatched$default((r0v0 kotlin.coroutines.CoroutineContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlin.jvm.functions.Function2 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.coroutines.Continuation A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:17:0x0002 \-\> B:19:0x000a\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_14;Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_18 -> Node_19;
Node_20 -> Node_15;
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_19 -> Node_20;
}

