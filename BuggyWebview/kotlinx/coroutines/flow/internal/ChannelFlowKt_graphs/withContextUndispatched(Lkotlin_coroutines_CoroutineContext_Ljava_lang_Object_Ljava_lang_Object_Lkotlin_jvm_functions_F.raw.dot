digraph "CFG forkotlinx.coroutines.flow.internal.ChannelFlowKt.withContextUndispatched(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Object;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('$completion' kotlin.coroutines.Continuation)])  (LINE:225)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:226)\l0x0003: INVOKE  (r3 I:java.lang.Object) = \l  (r7 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r9 I:java.lang.Object A[D('countOrElement' java.lang.Object)])\l type: STATIC call: kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object):java.lang.Object A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Object):java.lang.Object (m)] (LINE:246)\l0x0008: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:248)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0009|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x0009|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x002a, blocks: (B:29:0x0009), top: B:37:0x0009 \}\lCatch: all \-\> 0x002a\l|0x0009: NEW_INSTANCE  (r5 I:kotlinx.coroutines.flow.internal.StackFrameContinuation) =  kotlinx.coroutines.flow.internal.StackFrameContinuation A[Catch: all \-\> 0x002a, TRY_ENTER] (LINE:227)\l0x000b: INVOKE  \l  (r5 I:kotlinx.coroutines.flow.internal.StackFrameContinuation)\l  (r0 I:kotlin.coroutines.Continuation A[D('uCont' kotlin.coroutines.Continuation)])\l  (r7 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l type: DIRECT call: kotlinx.coroutines.flow.internal.StackFrameContinuation.\<init\>(kotlin.coroutines.Continuation, kotlin.coroutines.CoroutineContext):void A[Catch: all \-\> 0x002a, MD:(kotlin.coroutines.Continuation\<? super T\>, kotlin.coroutines.CoroutineContext):void (m)]\l0x000e: CHECK_CAST (r5 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r5 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x002a]\l0x0010: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0011: INVOKE  (r6 I:java.lang.Object) = (r10 I:java.lang.Object A[D('block' kotlin.jvm.functions.Function2)]), (r6 I:int) type: STATIC call: kotlin.jvm.internal.TypeIntrinsics.beforeCheckcastToFunctionOfArity(java.lang.Object, int):java.lang.Object A[Catch: all \-\> 0x002a, MD:(java.lang.Object, int):java.lang.Object (m)]\l0x0015: CHECK_CAST (r6 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r6 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x002a]\l0x0017: INVOKE  (r5 I:java.lang.Object) = (r6 I:kotlin.jvm.functions.Function2), (r8 I:java.lang.Object A[D('value' java.lang.Object)]), (r5 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[Catch: all \-\> 0x002a, MD:(P1, P2):R (m), TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x001b|0x001b: INVOKE  \l  (r7 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r3 I:java.lang.Object A[D('oldValue$iv' java.lang.Object)])\l type: STATIC call: kotlinx.coroutines.internal.ThreadContextKt.restoreThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Object):void (m)] (LINE:250)\l0x0020: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:225)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0024|0x0024: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0029 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0026|0x0026: INVOKE  (r11 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)]) type: STATIC call: kotlin.coroutines.jvm.internal.DebugProbesKt.probeCoroutineSuspended(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<?\>):void (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0029|RETURN\l|0x0029: RETURN  (r5 I:java.lang.Object)  (LINE:229)\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_34 [shape=record,label="{34\:\ 0x002a|ExcHandler: all \-\> 0x002a\l|0x002a: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x002a] (LINE:249)\l}"];
Node_35 [shape=record,label="{35\:\ 0x002b|0x002b: INVOKE  \l  (r7 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r3 I:java.lang.Object A[D('oldValue$iv' java.lang.Object)])\l type: STATIC call: kotlinx.coroutines.internal.ThreadContextKt.restoreThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Object):void (m)] (LINE:250)\l}"];
Node_36 [shape=record,label="{36\:\ 0x002e|0x002e: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.internal.ChannelFlowKt.withContextUndispatched((r7 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:V A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.Object A[D('countOrElement' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function2\<? super V, ? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\> A[D('block' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlin.coroutines.Continuation\<? super T\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0024 \-\> B:33:0x0029, CROSS_EDGE: B:36:0x002e \-\> B:27:?, CROSS_EDGE: B:37:0x0009 \-\> B:34:0x002a\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x002a, blocks: (B:29:0x0009), top: B:37:0x0009 \}\lTYPE_VARS: [T, V]\lSIGNATURE: \<T:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Lkotlin\/coroutines\/CoroutineContext;TV;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2\<\-TV;\-Lkotlin\/coroutines\/Continuation\<\-TT;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-TT;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x0009\-0x001b: r4 '$i$a$\-withCoroutineContext\-ChannelFlowKt$withContextUndispatched$2$1' I\l  0x0003\-0x001f: r2 '$i$f$withCoroutineContext' I\l  0x0007\-0x001f: r3 'oldValue$iv' Ljava\/lang\/Object;\l  0x0001\-0x0020: r0 'uCont' Lkotlin\/coroutines\/Continuation;\l  0x0002\-0x0020: r1 '$i$a$\-suspendCoroutineUninterceptedOrReturn\-ChannelFlowKt$withContextUndispatched$2' I\l  0x002a\-0x002e: r0 'uCont' Lkotlin\/coroutines\/Continuation;\l  0x002a\-0x002e: r1 '$i$a$\-suspendCoroutineUninterceptedOrReturn\-ChannelFlowKt$withContextUndispatched$2' I\l  0x002a\-0x002e: r2 '$i$f$withCoroutineContext' I\l  0x002a\-0x002e: r3 'oldValue$iv' Ljava\/lang\/Object;\l  \-1 \-0x002e: r7 'newContext' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x002e: r8 'value' Ljava\/lang\/Object;\l  \-1 \-0x002e: r9 'countOrElement' Ljava\/lang\/Object;\l  \-1 \-0x002e: r10 'block' Lkotlin\/jvm\/functions\/Function2;\l  \-1 \-0x002e: r11 '$completion' Lkotlin\/coroutines\/Continuation;\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_37;
Node_37 -> Node_29;
Node_37 -> Node_34;
Node_29 -> Node_30;
Node_29 -> Node_38;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_27;
Node_38 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_27;
}

