digraph "CFG forkotlinx.coroutines.flow.internal.ChannelFlowKt.asChannelFlow(Lkotlinx\/coroutines\/flow\/Flow;)Lkotlinx\/coroutines\/flow\/internal\/ChannelFlow;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r8 I:??[OBJECT, ARRAY] A[D('$this$asChannelFlow' kotlinx.coroutines.flow.Flow)]) kotlinx.coroutines.flow.internal.ChannelFlow  (LINE:16)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0008 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$this$asChannelFlow' kotlinx.coroutines.flow.Flow)]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.flow.internal.ChannelFlow) = (kotlinx.coroutines.flow.internal.ChannelFlow) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:? \l}"];
Node_27 [shape=record,label="{27\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl) =  kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl \l0x000d: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: CONST  (r6 I:??[int, float, short, byte, char]) = (14 ??[int, float, short, byte, char]) \l0x0012: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0014: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$this$asChannelFlow' kotlinx.coroutines.flow.Flow)]) \l0x0015: INVOKE  \l  (r1 I:kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl)\l  (r2 I:kotlinx.coroutines.flow.Flow)\l  (r3 I:kotlin.coroutines.CoroutineContext)\l  (r4 I:int)\l  (r5 I:kotlinx.coroutines.channels.BufferOverflow)\l  (r6 I:int)\l  (r7 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl.\<init\>(kotlinx.coroutines.flow.Flow, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.channels.BufferOverflow, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(kotlinx.coroutines.flow.Flow, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.channels.BufferOverflow, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l0x0018: CHECK_CAST (r0 I:kotlinx.coroutines.flow.internal.ChannelFlow) = (kotlinx.coroutines.flow.internal.ChannelFlow) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x001a|RETURN\lORIG_RETURN\l|0x001a: RETURN  (r0 I:kotlinx.coroutines.flow.internal.ChannelFlow\<T\>) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x001a: RETURN  (r0 I:kotlinx.coroutines.flow.internal.ChannelFlow\<T\>) A[SYNTHETIC]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|0x0008: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.internal.ChannelFlow\<T\> kotlinx.coroutines.flow.internal.ChannelFlowKt.asChannelFlow((r8 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$asChannelFlow' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0009 \-\> B:28:0x001a, CROSS_EDGE: B:25:0x0008 \-\> B:26:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001a: r8 '$this$asChannelFlow' Lkotlinx\/coroutines\/flow\/Flow;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;)Lkotlinx\/coroutines\/flow\/internal\/ChannelFlow\<TT;\>;\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_21;
Node_29 -> Node_21;
Node_25 -> Node_26;
}

