digraph "CFG forkotlinx.coroutines.flow.internal.ChannelFlowKt.access$withUndispatchedContextCollector(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/CoroutineContext;)Lkotlinx\/coroutines\/flow\/FlowCollector;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.flow.FlowCollector) = \l  (r1 I:kotlinx.coroutines.flow.FlowCollector A[D('$receiver' kotlinx.coroutines.flow.FlowCollector)])\l  (r2 I:kotlin.coroutines.CoroutineContext A[D('emitContext' kotlin.coroutines.CoroutineContext)])\l type: STATIC call: kotlinx.coroutines.flow.internal.ChannelFlowKt.withUndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.flow.FlowCollector A[MD:\<T\>:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.flow.FlowCollector\<T\> (m)] (LINE:1)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:kotlinx.coroutines.flow.FlowCollector) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlinx.coroutines.flow.FlowCollector kotlinx.coroutines.flow.internal.ChannelFlowKt.access$withUndispatchedContextCollector((r1 I:kotlinx.coroutines.flow.FlowCollector A[D('$receiver' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.coroutines.CoroutineContext A[D('emitContext' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  \l  (r1 I:kotlinx.coroutines.flow.FlowCollector A[D('$receiver' kotlinx.coroutines.flow.FlowCollector)])\l  (r2 I:kotlin.coroutines.CoroutineContext A[D('emitContext' kotlin.coroutines.CoroutineContext)])\l type: STATIC call: kotlinx.coroutines.flow.internal.ChannelFlowKt.withUndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.flow.FlowCollector\lDebug Info:\l  \-1 \-0x0004: r1 '$receiver' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  \-1 \-0x0004: r2 'emitContext' Lkotlin\/coroutines\/CoroutineContext;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

