digraph "CFG forkotlinx.coroutines.flow.internal.CombineKt.combineInternal(Lkotlinx\/coroutines\/flow\/FlowCollector;[Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/jvm\/functions\/Function0;Lkotlin\/jvm\/functions\/Function3;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: NEW_INSTANCE  (r6 I:kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2) =  kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2  (LINE:22)\l0x0002: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0004: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('flows' kotlinx.coroutines.flow.Flow[])]) \l0x0005: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('arrayFactory' kotlin.jvm.functions.Function0)]) \l0x0006: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('transform' kotlin.jvm.functions.Function3)]) \l0x0007: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$combineInternal' kotlinx.coroutines.flow.FlowCollector)]) \l0x0008: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2)\l  (r1 I:kotlinx.coroutines.flow.Flow[])\l  (r2 I:kotlin.jvm.functions.Function0)\l  (r3 I:kotlin.jvm.functions.Function3)\l  (r4 I:kotlinx.coroutines.flow.FlowCollector)\l  (r5 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2.\<init\>(kotlinx.coroutines.flow.Flow[], kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function3, kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.Flow\<? extends T\>[], kotlin.jvm.functions.Function0\<T[]\>, kotlin.jvm.functions.Function3\<? super kotlinx.coroutines.flow.FlowCollector\<? super R\>, ? super T[], ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>, kotlinx.coroutines.flow.FlowCollector\<? super R\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2\>):void (m)]\l0x000b: CHECK_CAST (r6 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r6 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  (r0 I:java.lang.Object) = \l  (r6 I:kotlin.jvm.functions.Function2)\l  (r11 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: STATIC call: kotlinx.coroutines.flow.internal.FlowCoroutineKt.flowScope(kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation):java.lang.Object A[MD:\<R\>:(kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.CoroutineScope, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\>, kotlin.coroutines.Continuation\<? super R\>):java.lang.Object (m)]\l0x0011: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|0x0015: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0018 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:java.lang.Object) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|0x0018: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_13 [shape=record,label="{13\:\ 0x001a|RETURN\l|0x001a: RETURN  (r0 I:java.lang.Object)  (LINE:86)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.internal.CombineKt.combineInternal((r7 I:kotlinx.coroutines.flow.FlowCollector\<? super R\> A[D('$this$combineInternal' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlinx.coroutines.flow.Flow\<? extends T\>[] A[D('flows' kotlinx.coroutines.flow.Flow[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.jvm.functions.Function0\<T[]\> A[D('arrayFactory' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function3\<? super kotlinx.coroutines.flow.FlowCollector\<? super R\>, ? super T[], ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\> A[D('transform' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001a \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001a: r7 '$this$combineInternal' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  \-1 \-0x001a: r8 'flows' [Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x001a: r9 'arrayFactory' Lkotlin\/jvm\/functions\/Function0;\l  \-1 \-0x001a: r10 'transform' Lkotlin\/jvm\/functions\/Function3;\l  \-1 \-0x001a: r11 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [R, T]\lSIGNATURE: \<R:Ljava\/lang\/Object;T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TR;\>;[Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlin\/jvm\/functions\/Function0\<[TT;\>;Lkotlin\/jvm\/functions\/Function3\<\-Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TR;\>;\-[TT;\-Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

