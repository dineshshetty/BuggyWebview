digraph "CFG forkotlinx.coroutines.flow.internal.UndispatchedContextCollector.\<init\>(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/CoroutineContext;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r2 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:207)\l0x0003: IPUT  \l  (r4 I:kotlin.coroutines.CoroutineContext A[D('emitContext' kotlin.coroutines.CoroutineContext)])\l  (r2 I:kotlinx.coroutines.flow.internal.UndispatchedContextCollector)\l kotlinx.coroutines.flow.internal.UndispatchedContextCollector.emitContext kotlin.coroutines.CoroutineContext  (LINE:209)\l0x0005: INVOKE  (r0 I:java.lang.Object) = (r4 I:kotlin.coroutines.CoroutineContext A[D('emitContext' kotlin.coroutines.CoroutineContext)]) type: STATIC call: kotlinx.coroutines.internal.ThreadContextKt.threadContextElements(kotlin.coroutines.CoroutineContext):java.lang.Object A[MD:(kotlin.coroutines.CoroutineContext):java.lang.Object (m)] (LINE:211)\l0x0009: IPUT  (r0 I:java.lang.Object), (r2 I:kotlinx.coroutines.flow.internal.UndispatchedContextCollector) kotlinx.coroutines.flow.internal.UndispatchedContextCollector.countOrElement java.lang.Object \l0x000b: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1) =  kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1  (LINE:212)\l0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1)\l  (r3 I:kotlinx.coroutines.flow.FlowCollector A[D('downstream' kotlinx.coroutines.flow.FlowCollector)])\l  (r1 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1.\<init\>(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1\>):void (m)]\l0x0011: CHECK_CAST (r0 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r0 I:??[OBJECT, ARRAY]) \l0x0013: IPUT  \l  (r0 I:kotlin.jvm.functions.Function2\<T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>, java.lang.Object\>)\l  (r2 I:kotlinx.coroutines.flow.internal.UndispatchedContextCollector)\l kotlinx.coroutines.flow.internal.UndispatchedContextCollector.emitRef kotlin.jvm.functions.Function2 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|RETURN\l|0x0015: RETURN    (LINE:207)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.flow.internal.UndispatchedContextCollector.\<init\>((r2 'this' I:kotlinx.coroutines.flow.internal.UndispatchedContextCollector\<T\> A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlinx.coroutines.flow.FlowCollector\<? super T\> A[D('downstream' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.CoroutineContext A[D('emitContext' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0015: r3 'downstream' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  \-1 \-0x0015: r4 'emitContext' Lkotlin\/coroutines\/CoroutineContext;\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TT;\>;Lkotlin\/coroutines\/CoroutineContext;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

