digraph "CFG forkotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1.invoke(Lkotlinx\/coroutines\/flow\/FlowCollector;Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) = \l  (r2 I:kotlinx.coroutines.flow.FlowCollector A[D('p0' kotlinx.coroutines.flow.FlowCollector)])\l  (r3 I:java.lang.Object A[D('p1' java.lang.Object)])\l  (r4 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.flow.FlowCollector.emit(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)] (LINE:15)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:java.lang.Object) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1.invoke((r1 'this' I:kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlinx.coroutines.flow.FlowCollector\<java.lang.Object\> A[D('p0' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object A[D('p1' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<Ljava\/lang\/Object;\>;Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lDebug Info:\l  \-1 \-0x0004: r2 'p0' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  \-1 \-0x0004: r3 'p1' Ljava\/lang\/Object;\l  \-1 \-0x0004: r4 '$completion' Lkotlin\/coroutines\/Continuation;\lREPLACED_BY: kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1.invoke(java.lang.Object, java.lang.Object, java.lang.Object):java.lang.Object\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function3.invoke(P1, P2, P3):R]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

