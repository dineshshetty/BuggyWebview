digraph "CFG forkotlinx.coroutines.flow.internal.SafeCollector_commonKt.checkContext(Lkotlinx\/coroutines\/flow\/internal\/SafeCollector;Lkotlin\/coroutines\/CoroutineContext;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:25)\l0x0001: INVOKE  (r0 I:java.lang.Integer) = (r0 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0005: NEW_INSTANCE  (r1 I:kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1) =  kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1 \l0x0007: INVOKE  \l  (r1 I:kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1)\l  (r4 I:kotlinx.coroutines.flow.internal.SafeCollector A[D('$this$checkContext' kotlinx.coroutines.flow.internal.SafeCollector)])\l type: DIRECT call: kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1.\<init\>(kotlinx.coroutines.flow.internal.SafeCollector):void A[MD:(kotlinx.coroutines.flow.internal.SafeCollector\<?\>):void (m)]\l0x000a: CHECK_CAST (r1 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r1 I:??[OBJECT, ARRAY]) \l0x000c: INVOKE  (r0 I:java.lang.Object) = \l  (r5 I:kotlin.coroutines.CoroutineContext A[D('currentContext' kotlin.coroutines.CoroutineContext)])\l  (r0 I:java.lang.Object)\l  (r1 I:kotlin.jvm.functions.Function2)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.fold(java.lang.Object, kotlin.jvm.functions.Function2):java.lang.Object A[MD:\<R\>:(R, kotlin.jvm.functions.Function2\<? super R, ? super kotlin.coroutines.CoroutineContext$Element, ? extends R\>):R (m)]\l0x0010: CHECK_CAST (r0 I:java.lang.Number) = (java.lang.Number) (r0 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r0 I:int) = (r0 I:java.lang.Number) type: VIRTUAL call: java.lang.Number.intValue():int A[MD:():int (c)]\l0x0016: IGET  (r1 I:int) = \l  (r4 I:kotlinx.coroutines.flow.internal.SafeCollector A[D('$this$checkContext' kotlinx.coroutines.flow.internal.SafeCollector)])\l kotlinx.coroutines.flow.internal.SafeCollector.collectContextSize int  (LINE:83)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|0x0018: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001b \l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|RETURN\l|0x001a: RETURN    (LINE:91)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|0x001b: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:84)\l0x001d: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:85)\l0x001f: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0022: CONST_STR  (r3 I:java.lang.String) =  \"Flow invariant is violated:nttFlow was collected in \" \l0x0024: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0027: IGET  (r3 I:kotlin.coroutines.CoroutineContext) = \l  (r4 I:kotlinx.coroutines.flow.internal.SafeCollector A[D('$this$checkContext' kotlinx.coroutines.flow.internal.SafeCollector)])\l kotlinx.coroutines.flow.internal.SafeCollector.collectContext kotlin.coroutines.CoroutineContext  (LINE:86)\l0x0029: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)] (LINE:85)\l0x002d: CONST_STR  (r3 I:java.lang.String) =  \",nttbut emission happened in \"  (LINE:85)\l0x002f: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0033: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.Object A[D('currentContext' kotlin.coroutines.CoroutineContext)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)] (LINE:85)\l0x0037: CONST_STR  (r3 I:java.lang.String) =  \".nttPlease refer to 'flow' documentation or use 'flowOn' instead\"  (LINE:85)\l0x0039: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003c: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0040: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0044: INVOKE  (r1 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0047|0x0047: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.flow.internal.SafeCollector_commonKt.checkContext((r4 I:kotlinx.coroutines.flow.internal.SafeCollector\<?\> A[D('$this$checkContext' kotlinx.coroutines.flow.internal.SafeCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.coroutines.CoroutineContext A[D('currentContext' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:13:0x0047 \-\> B:8:?\lINLINE_NOT_NEEDED\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/internal\/SafeCollector\<*\>;Lkotlin\/coroutines\/CoroutineContext;)V\lDebug Info:\l  0x0016\-0x0047: r0 'result' I\l  \-1 \-0x0047: r4 '$this$checkContext' Lkotlinx\/coroutines\/flow\/internal\/SafeCollector;\l  \-1 \-0x0047: r5 'currentContext' Lkotlin\/coroutines\/CoroutineContext;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [85=5]\}\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

