digraph "CFG forkotlinx.coroutines.flow.internal.SafeCollector_commonKt.transitiveCoroutineParent(Lkotlinx\/coroutines\/Job;Lkotlinx\/coroutines\/Job;)Lkotlinx\/coroutines\/Job;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$transitiveCoroutineParent' kotlinx.coroutines.Job)])  (LINE:93)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0001|LOOP_START\lLOOP:0: B:18:0x0001\-\>B:26:0x000d\l|0x0001: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0005  (LINE:94)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('collectJob' kotlinx.coroutines.Job)])  \-\> B:23:0x0008  (LINE:95)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0008|0x0008: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY]) kotlinx.coroutines.internal.ScopeCoroutine  (LINE:96)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x000d \l}"];
Node_26 [shape=record,label="{26\:\ 0x000d|LOOP_END\lLOOP:0: B:18:0x0001\-\>B:26:0x000d\l|0x000d: CHECK_CAST (r0 I:kotlinx.coroutines.internal.ScopeCoroutine) = (kotlinx.coroutines.internal.ScopeCoroutine) (r0 I:??[OBJECT, ARRAY])  (LINE:97)\l0x000f: INVOKE  (r0 I:kotlinx.coroutines.Job) = (r0 I:kotlinx.coroutines.internal.ScopeCoroutine) type: VIRTUAL call: kotlinx.coroutines.internal.ScopeCoroutine.getParent$kotlinx_coroutines_core():kotlinx.coroutines.Job A[MD:():kotlinx.coroutines.Job (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x000c|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:kotlinx.coroutines.Job) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0007|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:kotlinx.coroutines.Job) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0003|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0003|RETURN\l|0x0003: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: RETURN  (r0 I:kotlinx.coroutines.Job) \l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.Job kotlinx.coroutines.flow.internal.SafeCollector_commonKt.transitiveCoroutineParent((r2 I:kotlinx.coroutines.Job A[D('$this$transitiveCoroutineParent' kotlinx.coroutines.Job), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlinx.coroutines.Job A[D('collectJob' kotlinx.coroutines.Job), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0007 \-\> B:16:?, CROSS_EDGE: B:25:0x000c \-\> B:16:?, BACK_EDGE: B:26:0x000d \-\> B:18:0x0001\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0013: r2 '$this$transitiveCoroutineParent' Lkotlinx\/coroutines\/Job;\l  \-1 \-0x0013: r3 'collectJob' Lkotlinx\/coroutines\/Job;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_21;
Node_18 -> Node_27[style=dashed];
Node_21 -> Node_23;
Node_21 -> Node_28[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_29[style=dashed];
Node_26 -> Node_18;
Node_29 -> Node_25;
Node_25 -> Node_16;
Node_28 -> Node_22;
Node_22 -> Node_16;
Node_27 -> Node_19;
Node_19 -> Node_16;
}

