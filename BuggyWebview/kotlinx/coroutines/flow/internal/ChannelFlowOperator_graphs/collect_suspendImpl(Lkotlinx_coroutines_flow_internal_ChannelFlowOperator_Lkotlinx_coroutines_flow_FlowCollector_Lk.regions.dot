digraph "CFG forkotlinx.coroutines.flow.internal.ChannelFlowOperator.collect$suspendImpl(Lkotlinx\/coroutines\/flow\/internal\/ChannelFlowOperator;Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1275952026 {
label = "R(3:(2:3|(2:5|6)(1:(2:13|14)))|18|19)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1355385678 {
label = "IF [B:26:0x0003] THEN: R(2:3|(2:5|6)(1:(2:13|14))) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0003|if (r4.capacity == (\-3)) goto L3\l}"];
subgraph cluster_Region_2027053873 {
label = "R(2:3|(2:5|6)(1:(2:13|14)))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0005|kotlin.coroutines.CoroutineContext kotlin.coroutines.CoroutineContext r0 = r6.getContext()\lkotlin.coroutines.CoroutineContext kotlin.coroutines.CoroutineContext r1 = r0.plus(r4.context)\l}"];
subgraph cluster_IfRegion_1665513097 {
label = "IF [B:28:0x0013] THEN: R(2:5|6) ELSE: R(1:(2:13|14))";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0013|if (kotlin.jvm.internal.Intrinsics.areEqual(r1, r0) != false) goto L5\l}"];
subgraph cluster_Region_941353174 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0015|java.lang.Object java.lang.Object r2 = r4.flowCollect(r5, r6)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001d|RETURN\l|return r2 == kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED() ? r2 : kotlin.Unit.INSTANCE\l}"];
}
subgraph cluster_Region_223533742 {
label = "R(1:(2:13|14)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1959634643 {
label = "IF [B:35:0x0037] THEN: R(2:13|14) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0037|if (kotlin.jvm.internal.Intrinsics.areEqual(r1.get(kotlin.coroutines.ContinuationInterceptor.Key), r0.get(kotlin.coroutines.ContinuationInterceptor.Key)) != false) goto L13\l}"];
subgraph cluster_Region_1404818043 {
label = "R(2:13|14)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0039|java.lang.Object java.lang.Object r2 = r4.collectWithContextUndispatched(r5, r1, r6)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0041|RETURN\l|return r2 == kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED() ? r2 : kotlin.Unit.INSTANCE\l}"];
}
}
}
}
}
}
Node_41 [shape=record,label="{41\:\ 0x0047|java.lang.Object java.lang.Object r0 = super.collect(r5, r6)\l}"];
Node_42 [shape=record,label="{42\:\ 0x004f|RETURN\l|return r0 == kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED() ? r0 : kotlin.Unit.INSTANCE\l}"];
}
Node_23 [shape=record,color=red,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0000}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x001f}"];
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0020}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0022}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0023}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0043}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0044}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0046}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0051}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0052}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0054}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.lang.Object kotlinx.coroutines.flow.internal.ChannelFlowOperator.collect$suspendImpl((r4v0 kotlinx.coroutines.flow.internal.ChannelFlowOperator A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowOperator), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'collector' kotlinx.coroutines.flow.FlowCollector A[D('collector' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 '$completion' kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:33:0x0022 \-\> B:24:?, CROSS_EDGE: B:38:0x0043 \-\> B:24:?, CROSS_EDGE: B:40:0x0046 \-\> B:24:?, CROSS_EDGE: B:43:0x0051 \-\> B:24:?, CROSS_EDGE: B:45:0x0054 \-\> B:24:?, CROSS_EDGE: B:26:0x0003 \-\> B:41:0x0047\lINLINE_NOT_NEEDED\lTYPE_VARS: [S, T]\l}"];
MethodNode -> Node_23;Node_26 -> Node_27;
Node_26 -> Node_41[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_34[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_32;
Node_35 -> Node_36;
Node_35 -> Node_41[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_37 -> Node_39;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_42 -> Node_44;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_31 -> Node_24;
Node_32 -> Node_33;
Node_33 -> Node_24;
Node_34 -> Node_35;
Node_38 -> Node_24;
Node_39 -> Node_40;
Node_40 -> Node_24;
Node_43 -> Node_24;
Node_44 -> Node_45;
Node_45 -> Node_24;
}

