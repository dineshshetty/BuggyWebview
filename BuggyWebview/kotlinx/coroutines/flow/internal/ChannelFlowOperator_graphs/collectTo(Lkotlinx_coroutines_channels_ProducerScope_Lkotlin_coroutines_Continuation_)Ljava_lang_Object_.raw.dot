digraph "CFG forkotlinx.coroutines.flow.internal.ChannelFlowOperator.collectTo(Lkotlinx\/coroutines\/channels\/ProducerScope;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.internal.ChannelFlowOperator)\l  (r2 I:kotlinx.coroutines.channels.ProducerScope)\l  (r3 I:kotlin.coroutines.Continuation)\l type: STATIC call: kotlinx.coroutines.flow.internal.ChannelFlowOperator.collectTo$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlowOperator, kotlinx.coroutines.channels.ProducerScope, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.internal.ChannelFlowOperator, kotlinx.coroutines.channels.ProducerScope, kotlin.coroutines.Continuation):java.lang.Object (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:java.lang.Object) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.internal.ChannelFlowOperator.collectTo((r1 'this' I:kotlinx.coroutines.flow.internal.ChannelFlowOperator\<S, T\> A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlinx.coroutines.channels.ProducerScope\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INLINE_NOT_NEEDED\lTYPE_VARS: [S, T]\lSIGNATURE: (Lkotlinx\/coroutines\/channels\/ProducerScope\<\-TT;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.internal.ChannelFlow.collectTo(kotlinx.coroutines.channels.ProducerScope\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

