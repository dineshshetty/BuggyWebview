digraph "CFG forkotlinx.coroutines.flow.internal.ChannelFlowOperator.collect$suspendImpl(Lkotlinx\/coroutines\/flow\/internal\/ChannelFlowOperator;Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: IGET  (r0 I:int) = \l  (r4 I:kotlinx.coroutines.flow.internal.ChannelFlowOperator A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowOperator)])\l kotlinx.coroutines.flow.internal.ChannelFlowOperator.capacity int  (LINE:162)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (\-3 ??[int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0047 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0005|0x0005: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext) = (r6 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)]) type: INTERFACE call: kotlin.coroutines.Continuation.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)] (LINE:163)\l0x0009: IGET  (r1 I:kotlin.coroutines.CoroutineContext) = \l  (r4 I:kotlinx.coroutines.flow.internal.ChannelFlowOperator A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowOperator)])\l kotlinx.coroutines.flow.internal.ChannelFlowOperator.context kotlin.coroutines.CoroutineContext  (LINE:164)\l0x000b: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext) = \l  (r0 I:kotlin.coroutines.CoroutineContext A[D('collectContext' kotlin.coroutines.CoroutineContext)])\l  (r1 I:kotlin.coroutines.CoroutineContext)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.plus(kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext A[MD:(kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext (m)]\l0x000f: INVOKE  (r2 I:boolean) = \l  (r1 I:java.lang.Object A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r0 I:java.lang.Object A[D('collectContext' kotlin.coroutines.CoroutineContext)])\l type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)] (LINE:166)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0013|0x0013: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0023 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0015|0x0015: INVOKE  (r2 I:java.lang.Object) = \l  (r4 I:kotlinx.coroutines.flow.internal.ChannelFlowOperator A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowOperator)])\l  (r5 I:kotlinx.coroutines.flow.FlowCollector A[D('collector' kotlinx.coroutines.flow.FlowCollector)])\l  (r6 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: VIRTUAL call: kotlinx.coroutines.flow.internal.ChannelFlowOperator.flowCollect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)] (LINE:167)\l0x0019: INVOKE  (r3 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x001d|0x001d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0020 \l}"];
Node_31 [shape=record,label="{31\:\ 0x001f|RETURN\l|0x001f: RETURN  (r2 I:java.lang.Object) \l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0020|0x0020: SGET  (r2 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_33 [shape=record,label="{33\:\ 0x0022|RETURN\l|0x0022: RETURN  (r2 I:java.lang.Object) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0023|0x0023: SGET  (r2 I:kotlin.coroutines.ContinuationInterceptor$Key) =  kotlin.coroutines.ContinuationInterceptor.Key kotlin.coroutines.ContinuationInterceptor$Key  (LINE:169)\l0x0025: CHECK_CAST (r2 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r2 I:??[OBJECT, ARRAY]) \l0x0027: INVOKE  (r2 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r1 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r2 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x002b: SGET  (r3 I:kotlin.coroutines.ContinuationInterceptor$Key) =  kotlin.coroutines.ContinuationInterceptor.Key kotlin.coroutines.ContinuationInterceptor$Key \l0x002d: CHECK_CAST (r3 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r3 I:??[OBJECT, ARRAY]) \l0x002f: INVOKE  (r3 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r0 I:kotlin.coroutines.CoroutineContext A[D('collectContext' kotlin.coroutines.CoroutineContext)])\l  (r3 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x0033: INVOKE  (r2 I:boolean) = (r2 I:java.lang.Object), (r3 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0037|0x0037: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0047 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0039|0x0039: INVOKE  (r2 I:java.lang.Object) = \l  (r4 I:kotlinx.coroutines.flow.internal.ChannelFlowOperator A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowOperator)])\l  (r5 I:kotlinx.coroutines.flow.FlowCollector A[D('collector' kotlinx.coroutines.flow.FlowCollector)])\l  (r1 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r6 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.flow.internal.ChannelFlowOperator.collectWithContextUndispatched(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.CoroutineContext, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.CoroutineContext, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)] (LINE:170)\l0x003d: INVOKE  (r3 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0041|0x0041: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0044 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0043|RETURN\l|0x0043: RETURN  (r2 I:java.lang.Object) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0044|0x0044: SGET  (r2 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_40 [shape=record,label="{40\:\ 0x0046|RETURN\l|0x0046: RETURN  (r2 I:java.lang.Object) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0047|0x0047: INVOKE  (r0 I:java.lang.Object) = \l  (r4 I:kotlinx.coroutines.flow.internal.ChannelFlow A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowOperator)])\l  (r5 I:kotlinx.coroutines.flow.FlowCollector A[D('collector' kotlinx.coroutines.flow.FlowCollector)])\l  (r6 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: SUPER call: kotlinx.coroutines.flow.internal.ChannelFlow.collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)] (LINE:173)\l0x004b: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x004f|0x004f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0052 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0051|RETURN\l|0x0051: RETURN  (r0 I:java.lang.Object) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0052|0x0052: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_45 [shape=record,label="{45\:\ 0x0054|RETURN\l|0x0054: RETURN  (r0 I:java.lang.Object)  (LINE:174)\l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.lang.Object kotlinx.coroutines.flow.internal.ChannelFlowOperator.collect$suspendImpl((r4 I:kotlinx.coroutines.flow.internal.ChannelFlowOperator A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowOperator), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlinx.coroutines.flow.FlowCollector A[D('collector' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:33:0x0022 \-\> B:24:?, CROSS_EDGE: B:38:0x0043 \-\> B:24:?, CROSS_EDGE: B:40:0x0046 \-\> B:24:?, CROSS_EDGE: B:43:0x0051 \-\> B:24:?, CROSS_EDGE: B:45:0x0054 \-\> B:24:?, CROSS_EDGE: B:26:0x0003 \-\> B:41:0x0047\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0047: r0 'collectContext' Lkotlin\/coroutines\/CoroutineContext;\l  0x000f\-0x0047: r1 'newContext' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x0054: r4 'this' Lkotlinx\/coroutines\/flow\/internal\/ChannelFlowOperator;\l  \-1 \-0x0054: r5 'collector' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  \-1 \-0x0054: r6 '$completion' Lkotlin\/coroutines\/Continuation;\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_41;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_34;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_24;
Node_32 -> Node_33;
Node_33 -> Node_24;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_41;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_24;
Node_39 -> Node_40;
Node_40 -> Node_24;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_24;
Node_44 -> Node_45;
Node_45 -> Node_24;
}

