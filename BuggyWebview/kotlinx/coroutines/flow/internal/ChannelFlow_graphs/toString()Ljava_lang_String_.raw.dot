digraph "CFG forkotlinx.coroutines.flow.internal.ChannelFlow.toString()Ljava\/lang\/String;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:130)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0003: INVOKE  (r0 I:java.util.ArrayList), (r1 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0006: INVOKE  (r1 I:java.lang.String) = (r12 I:kotlinx.coroutines.flow.internal.ChannelFlow) type: VIRTUAL call: kotlinx.coroutines.flow.internal.ChannelFlow.additionalToStringProps():java.lang.String A[MD:():java.lang.String (m)] (LINE:131)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x000d \l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|0x000d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:246)\l0x000e: INVOKE  (r0 I:java.util.ArrayList A[D('props' java.util.ArrayList)]), (r1 I:java.lang.Object A[D('it' java.lang.String)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:131)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|0x0011: IGET  (r1 I:kotlin.coroutines.CoroutineContext A[D('it' java.lang.String)]) = (r12 I:kotlinx.coroutines.flow.internal.ChannelFlow) kotlinx.coroutines.flow.internal.ChannelFlow.context kotlin.coroutines.CoroutineContext  (LINE:132)\l0x0013: SGET  (r2 I:kotlin.coroutines.EmptyCoroutineContext) =  kotlin.coroutines.EmptyCoroutineContext.INSTANCE kotlin.coroutines.EmptyCoroutineContext \l}"];
Node_24 [shape=record,label="{24\:\ 0x0015|0x0015: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0022 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|0x0017: IGET  (r1 I:kotlin.coroutines.CoroutineContext) = (r12 I:kotlinx.coroutines.flow.internal.ChannelFlow) kotlinx.coroutines.flow.internal.ChannelFlow.context kotlin.coroutines.CoroutineContext \l0x0019: CONST_STR  (r2 I:java.lang.String) =  \"context=\" \l0x001b: INVOKE  (r1 I:java.lang.String) = (r2 I:java.lang.String), (r1 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x001f: INVOKE  (r0 I:java.util.ArrayList A[D('props' java.util.ArrayList)]), (r1 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0022|0x0022: IGET  (r1 I:int) = (r12 I:kotlinx.coroutines.flow.internal.ChannelFlow) kotlinx.coroutines.flow.internal.ChannelFlow.capacity int  (LINE:133)\l0x0024: CONST  (r2 I:??[int, float, short, byte, char]) = (\-3 ??[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0025|0x0025: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0034 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0027|0x0027: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x002b: CONST_STR  (r2 I:java.lang.String) =  \"capacity=\" \l0x002d: INVOKE  (r1 I:java.lang.String) = (r2 I:java.lang.String), (r1 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x0031: INVOKE  (r0 I:java.util.ArrayList A[D('props' java.util.ArrayList)]), (r1 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0034|0x0034: IGET  (r1 I:kotlinx.coroutines.channels.BufferOverflow) = (r12 I:kotlinx.coroutines.flow.internal.ChannelFlow) kotlinx.coroutines.flow.internal.ChannelFlow.onBufferOverflow kotlinx.coroutines.channels.BufferOverflow  (LINE:134)\l0x0036: SGET  (r2 I:kotlinx.coroutines.channels.BufferOverflow) =  kotlinx.coroutines.channels.BufferOverflow.SUSPEND kotlinx.coroutines.channels.BufferOverflow \l}"];
Node_30 [shape=record,label="{30\:\ 0x0038|0x0038: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0045 \l}"];
Node_31 [shape=record,label="{31\:\ 0x003a|0x003a: IGET  (r1 I:kotlinx.coroutines.channels.BufferOverflow) = (r12 I:kotlinx.coroutines.flow.internal.ChannelFlow) kotlinx.coroutines.flow.internal.ChannelFlow.onBufferOverflow kotlinx.coroutines.channels.BufferOverflow \l0x003c: CONST_STR  (r2 I:java.lang.String) =  \"onBufferOverflow=\" \l0x003e: INVOKE  (r1 I:java.lang.String) = (r2 I:java.lang.String), (r1 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x0042: INVOKE  (r0 I:java.util.ArrayList A[D('props' java.util.ArrayList)]), (r1 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0045|0x0045: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:135)\l0x0047: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x004a: INVOKE  (r2 I:java.lang.String) = (r12 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.DebugStringsKt.getClassSimpleName(java.lang.Object):java.lang.String A[MD:(java.lang.Object):java.lang.String (m)]\l0x004e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0051: CONST  (r2 I:??[int, float, short, byte, char]) = (91 ??[int, float, short, byte, char]) \l0x0053: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0056: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('props' java.util.ArrayList)]) \l0x0057: CHECK_CAST (r3 I:java.lang.Iterable) = (java.lang.Iterable) (r3 I:??[OBJECT, ARRAY]) \l0x0059: CONST_STR  (r2 I:java.lang.String) =  \", \" \l0x005b: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x005c: CHECK_CAST (r4 I:java.lang.CharSequence) = (java.lang.CharSequence) (r4 I:??[OBJECT, ARRAY]) \l0x005e: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x005f: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0060: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0061: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0062: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0063: CONST  (r10 I:??[int, float, short, byte, char]) = (62 ??[int, float, short, byte, char]) \l0x0065: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0066: INVOKE  (r2 I:java.lang.String) = \l  (r3 I:java.lang.Iterable)\l  (r4 I:java.lang.CharSequence)\l  (r5 I:java.lang.CharSequence)\l  (r6 I:java.lang.CharSequence)\l  (r7 I:int)\l  (r8 I:java.lang.CharSequence)\l  (r9 I:kotlin.jvm.functions.Function1)\l  (r10 I:int)\l  (r11 I:java.lang.Object)\l type: STATIC call: kotlin.collections.CollectionsKt.joinToString$default(java.lang.Iterable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object):java.lang.String A[MD:(java.lang.Iterable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object):java.lang.String (m)]\l0x006a: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x006d: CONST  (r2 I:??[int, float, short, byte, char]) = (93 ??[int, float, short, byte, char]) \l0x006f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0072: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0076|RETURN\l|0x0076: RETURN  (r1 I:java.lang.String) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.String kotlinx.coroutines.flow.internal.ChannelFlow.toString((r12 'this' I:kotlinx.coroutines.flow.internal.ChannelFlow\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0038 \-\> B:32:0x0045, CROSS_EDGE: B:27:0x0025 \-\> B:29:0x0034, CROSS_EDGE: B:24:0x0015 \-\> B:26:0x0022, CROSS_EDGE: B:20:0x000a \-\> B:23:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x0011: r1 'it' Ljava\/lang\/String;\l  0x000e\-0x0011: r2 '$i$a$\-let\-ChannelFlow$toString$1' I\l  0x0006\-0x0076: r0 'props' Ljava\/util\/ArrayList;\lTYPE_VARS: [T]\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.internal.ChannelFlow.toString():java.lang.String]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_23[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_18;
}

