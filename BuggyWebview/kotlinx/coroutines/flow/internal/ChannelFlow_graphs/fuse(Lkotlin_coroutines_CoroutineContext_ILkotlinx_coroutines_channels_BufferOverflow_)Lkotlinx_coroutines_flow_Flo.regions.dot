digraph "CFG forkotlinx.coroutines.flow.internal.ChannelFlow.fuse(Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/channels\/BufferOverflow;)Lkotlinx\/coroutines\/flow\/Flow;" {
subgraph cluster_Region_869495025 {
label = "R(4:(1:(1:8))|11|(1:13)(4:24|(2:(1:(1:(4:(1:(1:37))|(1:(1:46))|47|(1:49))))|50)|51|50)|(2:(1:21)|(1:23))) | DECL_VAR: int newCapacity, kotlinx.coroutines.channels.BufferOverflow newOverflow\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2097113110 {
label = "IF [B:63:0x0006] THEN: R(1:(1:8)) ELSE: null";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x0006|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() != false) goto L3\l}"];
subgraph cluster_Region_1469933760 {
label = "R(1:(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1190635040 {
label = "IF [B:68:0x000f] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x000f|PHI: r0 \l  PHI: (r0v5 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r9 != \-1 ? 1 : 0) == 0) goto L7\l}"];
subgraph cluster_Region_1971142699 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x0017|throw new java.lang.AssertionError()\l}"];
}
}
}
}
Node_72 [shape=record,label="{72\:\ 0x0018|kotlin.coroutines.CoroutineContext kotlin.coroutines.CoroutineContext r0 = r8.plus(r7.context)\l}"];
subgraph cluster_IfRegion_1925523786 {
label = "IF [B:73:0x0022] THEN: R(1:13) ELSE: R(4:24|(2:(1:(1:(4:(1:(1:37))|(1:(1:46))|47|(1:49))))|50)|51|50)";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x0022|if (r10 != kotlinx.coroutines.channels.BufferOverflow.SUSPEND) goto L13\l}"];
subgraph cluster_Region_737335530 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x0024|r1 = r9\lr2 = r10\l}"];
}
subgraph cluster_Region_1549219005 {
label = "R(4:24|(2:(1:(1:(4:(1:(1:37))|(1:(1:46))|47|(1:49))))|50)|51|50)";
node [shape=record,color=blue];
Node_75 [shape=record,label="{75\:\ 0x0027|int int r5 = r7.capacity\l}"];
subgraph cluster_IfRegion_1668109383 {
label = "IF [B:76:0x002b] THEN: R(2:(1:(1:(4:(1:(1:37))|(1:(1:46))|47|(1:49))))|50) ELSE: null";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x002b|if (r5 != (\-3)) goto L26\l}"];
subgraph cluster_Region_778057689 {
label = "R(2:(1:(1:(4:(1:(1:37))|(1:(1:46))|47|(1:49))))|50)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1319277754 {
label = "IF [B:78:0x002e] THEN: R(1:(1:(4:(1:(1:37))|(1:(1:46))|47|(1:49)))) ELSE: null";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x002e|if (r9 != (\-3)) goto L27\l}"];
subgraph cluster_Region_899673576 {
label = "R(1:(1:(4:(1:(1:37))|(1:(1:46))|47|(1:49))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_117077579 {
label = "IF [B:81:0x0032] THEN: R(1:(4:(1:(1:37))|(1:(1:46))|47|(1:49))) ELSE: null";
node [shape=record,color=blue];
Node_81 [shape=record,label="{81\:\ 0x0032|if (r5 != (\-2)) goto L29\l}"];
subgraph cluster_Region_712806248 {
label = "R(1:(4:(1:(1:37))|(1:(1:46))|47|(1:49)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1906863124 {
label = "IF [B:83:0x0036] THEN: R(4:(1:(1:37))|(1:(1:46))|47|(1:49)) ELSE: null";
node [shape=record,color=blue];
Node_83 [shape=record,label="{83\:\ 0x0036|if (r9 != (\-2)) goto L30\l}"];
subgraph cluster_Region_1949008702 {
label = "R(4:(1:(1:37))|(1:(1:46))|47|(1:49))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_729100767 {
label = "IF [B:86:0x003d] THEN: R(1:(1:37)) ELSE: null";
node [shape=record,color=blue];
Node_86 [shape=record,label="{86\:\ 0x003d|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() != false) goto L32\l}"];
subgraph cluster_Region_1632594420 {
label = "R(1:(1:37))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_788970874 {
label = "IF [B:91:0x0047] THEN: R(1:37) ELSE: null";
node [shape=record,color=blue];
Node_91 [shape=record,label="{91\:\ 0x0047|PHI: r5 \l  PHI: (r5v11 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r7.capacity \>= 0 ? 1 : 0) == 0) goto L36\l}"];
subgraph cluster_Region_494709826 {
label = "R(1:37)";
node [shape=record,color=blue];
Node_94 [shape=record,label="{94\:\ 0x004f|throw new java.lang.AssertionError()\l}"];
}
}
}
}
subgraph cluster_IfRegion_520461819 {
label = "IF [B:96:0x0054] THEN: R(1:(1:46)) ELSE: null";
node [shape=record,color=blue];
Node_96 [shape=record,label="{96\:\ 0x0054|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() != false) goto L41\l}"];
subgraph cluster_Region_94324518 {
label = "R(1:(1:46))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_535349122 {
label = "IF [B:101:0x005b] THEN: R(1:46) ELSE: null";
node [shape=record,color=blue];
Node_101 [shape=record,label="{101\:\ 0x005b|PHI: r1 \l  PHI: (r1v4 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|if ((r9 \>= 0) == false) goto L45\l}"];
subgraph cluster_Region_1729001089 {
label = "R(1:46)";
node [shape=record,color=blue];
Node_104 [shape=record,label="{104\:\ 0x0063|throw new java.lang.AssertionError()\l}"];
}
}
}
}
Node_105 [shape=record,label="{105\:\ 0x0064|int r5 = r7.capacity + r9\l}"];
subgraph cluster_IfRegion_573861767 {
label = "IF [B:106:0x0068] THEN: R(1:49) ELSE: null";
node [shape=record,color=blue];
Node_106 [shape=record,label="{106\:\ 0x0068|if (r5 \< 0) goto L49\l}"];
subgraph cluster_Region_758394247 {
label = "R(1:49)";
node [shape=record,color=blue];
Node_108 [shape=record,label="{108\:\ 0x006b|r5 = Integer.MAX_VALUE\l}"];
}
}
}
}
}
}
}
}
Node_109 [shape=record,label="{109\:\ 0x0071|PHI: r5 \l  PHI: (r5v3 'sum' int) = (r5v2 'sum' int), (r5v1 'sum' int), (r5v1 'sum' int), (r5v6 'sum' int), (r5v7 'sum' int) binds: [B:82:0x0034, B:78:0x002e, B:83:0x0036, B:106:0x0068, B:108:0x006b] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r5\lkotlinx.coroutines.channels.BufferOverflow r2 = r7.onBufferOverflow\l}"];
}
}
Node_82 [shape=record,label="{82\:\ 0x0034|r5 = r9\l}"];
Node_109 [shape=record,label="{109\:\ 0x0071|PHI: r5 \l  PHI: (r5v3 'sum' int) = (r5v2 'sum' int), (r5v1 'sum' int), (r5v1 'sum' int), (r5v6 'sum' int), (r5v7 'sum' int) binds: [B:82:0x0034, B:78:0x002e, B:83:0x0036, B:106:0x0068, B:108:0x006b] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r5\lkotlinx.coroutines.channels.BufferOverflow r2 = r7.onBufferOverflow\l}"];
}
}
subgraph cluster_Region_1415042526 {
label = "R(2:(1:21)|(1:23))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1550886602 {
label = "IF [B:111:0x007a, B:113:0x007e, B:115:0x0082] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_111 [shape=record,label="{111\:\ 0x007a|if (kotlin.jvm.internal.Intrinsics.areEqual(r0, r7.context) != false) goto L16\l}"];
Node_113 [shape=record,label="{113\:\ 0x007e|ADDED_TO_REGION\l|if (r1 == r7.capacity) goto L18\l}"];
Node_115 [shape=record,label="{115\:\ 0x0082|ADDED_TO_REGION\l|if (r2 == r7.onBufferOverflow) goto L20\l}"];
subgraph cluster_Region_722345477 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_117 [shape=record,label="{117\:\ 0x0087|RETURN\l|return r7\l}"];
}
}
subgraph cluster_Region_369824669 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_119 [shape=record,label="{119\:\ 0x008e|RETURN\l|return create(r0, r1, r2)\l}"];
}
}
}
Node_60 [shape=record,color=red,label="{60\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x0000}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0008}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x000a}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x000c}"];
Node_70 [shape=record,color=red,label="{70\:\ 0x0012}"];
Node_61 [shape=record,color=red,label="{61\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x000e}"];
Node_110 [shape=record,color=red,label="{110\:\ 0x0074|PHI: r1 r2 \l  PHI: (r1v8 'newCapacity' int) = (r1v1 'newCapacity' int), (r1v9 'newCapacity' int) binds: [B:109:0x0071, B:74:0x0024] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 'newOverflow' kotlinx.coroutines.channels.BufferOverflow) = (r2v1 'newOverflow' kotlinx.coroutines.channels.BufferOverflow), (r2v3 'newOverflow' kotlinx.coroutines.channels.BufferOverflow) binds: [B:109:0x0071, B:74:0x0024] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_112 [shape=record,color=red,label="{112\:\ 0x007c}"];
Node_114 [shape=record,color=red,label="{114\:\ 0x0080}"];
Node_116 [shape=record,color=red,label="{116\:\ 0x0084}"];
Node_118 [shape=record,color=red,label="{118\:\ 0x0088}"];
Node_80 [shape=record,color=red,label="{80\:\ 0x0031}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x0039}"];
Node_87 [shape=record,color=red,label="{87\:\ 0x003f}"];
Node_88 [shape=record,color=red,label="{88\:\ 0x0042}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x0044}"];
Node_93 [shape=record,color=red,label="{93\:\ 0x004a}"];
Node_90 [shape=record,color=red,label="{90\:\ 0x0046}"];
Node_95 [shape=record,color=red,label="{95\:\ 0x0050}"];
Node_97 [shape=record,color=red,label="{97\:\ 0x0056}"];
Node_98 [shape=record,color=red,label="{98\:\ 0x0057}"];
Node_100 [shape=record,color=red,label="{100\:\ 0x005a}"];
Node_103 [shape=record,color=red,label="{103\:\ 0x005e}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.flow.Flow\<T\> kotlinx.coroutines.flow.internal.ChannelFlow.fuse((r7v0 'this' kotlinx.coroutines.flow.internal.ChannelFlow\<T\> A[IMMUTABLE_TYPE, THIS]), (r8v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'capacity' int A[D('capacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:117:0x0087 \-\> B:61:?, CROSS_EDGE: B:119:0x008e \-\> B:61:?, CROSS_EDGE: B:113:0x007e \-\> B:118:0x0088, CROSS_EDGE: B:111:0x007a \-\> B:118:0x0088, CROSS_EDGE: B:109:0x0071 \-\> B:110:0x0074, CROSS_EDGE: B:94:0x004f \-\> B:61:?, CROSS_EDGE: B:104:0x0063 \-\> B:61:?, CROSS_EDGE: B:108:0x006b \-\> B:109:0x0071, CROSS_EDGE: B:106:0x0068 \-\> B:109:0x0071, CROSS_EDGE: B:98:0x0057 \-\> B:101:0x005b, CROSS_EDGE: B:96:0x0054 \-\> B:105:0x0064, CROSS_EDGE: B:90:0x0046 \-\> B:91:0x0047, CROSS_EDGE: B:86:0x003d \-\> B:95:0x0050, CROSS_EDGE: B:83:0x0036 \-\> B:109:0x0071, CROSS_EDGE: B:78:0x002e \-\> B:109:0x0071, CROSS_EDGE: B:76:0x002b \-\> B:82:0x0034, CROSS_EDGE: B:67:0x000e \-\> B:68:0x000f, CROSS_EDGE: B:63:0x0006 \-\> B:72:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/channels\/BufferOverflow;)Lkotlinx\/coroutines\/flow\/Flow\<TT;\>;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.internal.FusibleFlow.fuse(kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.channels.BufferOverflow):kotlinx.coroutines.flow.Flow\<T\>]\l}"];
MethodNode -> Node_60;Node_63 -> Node_64;
Node_63 -> Node_72[style=dashed];
Node_68 -> Node_70;
Node_68 -> Node_72[style=dashed];
Node_71 -> Node_61;
Node_72 -> Node_73;
Node_73 -> Node_74;
Node_73 -> Node_75[style=dashed];
Node_74 -> Node_110;
Node_75 -> Node_76;
Node_76 -> Node_78;
Node_76 -> Node_82[style=dashed];
Node_78 -> Node_80;
Node_78 -> Node_109[style=dashed];
Node_81 -> Node_82[style=dashed];
Node_81 -> Node_83;
Node_83 -> Node_85;
Node_83 -> Node_109[style=dashed];
Node_86 -> Node_87;
Node_86 -> Node_95[style=dashed];
Node_91 -> Node_93;
Node_91 -> Node_95[style=dashed];
Node_94 -> Node_61;
Node_96 -> Node_97;
Node_96 -> Node_105[style=dashed];
Node_101 -> Node_103;
Node_101 -> Node_105[style=dashed];
Node_104 -> Node_61;
Node_105 -> Node_106;
Node_106 -> Node_108;
Node_106 -> Node_109[style=dashed];
Node_108 -> Node_109;
Node_109 -> Node_110;
Node_82 -> Node_109;
Node_109 -> Node_110;
Node_111 -> Node_112;
Node_111 -> Node_118[style=dashed];
Node_113 -> Node_114;
Node_113 -> Node_118[style=dashed];
Node_115 -> Node_116;
Node_115 -> Node_118[style=dashed];
Node_117 -> Node_61;
Node_119 -> Node_61;
Node_60 -> Node_62;
Node_62 -> Node_63;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_65 -> Node_67;
Node_66 -> Node_68;
Node_70 -> Node_71;
Node_67 -> Node_68;
Node_110 -> Node_111;
Node_112 -> Node_113;
Node_114 -> Node_115;
Node_116 -> Node_117;
Node_118 -> Node_119;
Node_80 -> Node_81;
Node_85 -> Node_86;
Node_87 -> Node_88;
Node_88 -> Node_89;
Node_88 -> Node_90;
Node_89 -> Node_91;
Node_93 -> Node_94;
Node_90 -> Node_91;
Node_95 -> Node_96;
Node_97 -> Node_98;
Node_98 -> Node_100;
Node_98 -> Node_101;
Node_100 -> Node_101;
Node_103 -> Node_104;
}

