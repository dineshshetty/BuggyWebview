digraph "CFG forkotlinx.coroutines.flow.internal.ChannelFlow.produceImpl(Lkotlinx\/coroutines\/CoroutineScope;)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
subgraph cluster_Region_658757172 {
label = "R(2:1|2) | DECL_VAR: kotlinx.coroutines.channels.ReceiveChannel\<T\> null\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlinx.coroutines.channels.ReceiveChannel r0 = kotlinx.coroutines.channels.Produce.produce(r10, (r14 & 1) != 0 ? kotlin.coroutines.EmptyCoroutineContext.INSTANCE : r9.context, (r14 & 2) != 0 ? 0 : getProduceCapacity$kotlinx_coroutines_core(), (r14 & 4) != 0 ? kotlinx.coroutines.channels.BufferOverflow.SUSPEND : r9.onBufferOverflow, (r14 & 8) != 0 ? kotlinx.coroutines.CoroutineStart.DEFAULT : kotlinx.coroutines.CoroutineStart.ATOMIC, (r14 & 16) != 0 ? null : null, getCollectToFun$kotlinx_coroutines_core())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|RETURN\l|return r0\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.channels.ReceiveChannel\<T\> kotlinx.coroutines.flow.internal.ChannelFlow.produceImpl((r9v0 'this' kotlinx.coroutines.flow.internal.ChannelFlow\<T\> A[IMMUTABLE_TYPE, THIS]), (r10v0 'scope' kotlinx.coroutines.CoroutineScope A[D('scope' kotlinx.coroutines.CoroutineScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlinx\/coroutines\/CoroutineScope;)Lkotlinx\/coroutines\/channels\/ReceiveChannel\<TT;\>;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.internal.ChannelFlow.produceImpl(kotlinx.coroutines.CoroutineScope):kotlinx.coroutines.channels.ReceiveChannel\<T\>]\l}"];
MethodNode -> Node_4;Node_6 -> Node_7;
Node_7 -> Node_5;
Node_4 -> Node_6;
}

