digraph "CFG forkotlinx.coroutines.flow.internal.ChannelFlow.collect$suspendImpl(Lkotlinx\/coroutines\/flow\/internal\/ChannelFlow;Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.internal.ChannelFlow$collect$2) =  kotlinx.coroutines.flow.internal.ChannelFlow$collect$2  (LINE:122)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.internal.ChannelFlow$collect$2)\l  (r3 I:kotlinx.coroutines.flow.FlowCollector A[D('collector' kotlinx.coroutines.flow.FlowCollector)])\l  (r2 I:kotlinx.coroutines.flow.internal.ChannelFlow A[D('this' kotlinx.coroutines.flow.internal.ChannelFlow)])\l  (r1 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.\<init\>(kotlinx.coroutines.flow.FlowCollector, kotlinx.coroutines.flow.internal.ChannelFlow, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlinx.coroutines.flow.internal.ChannelFlow\<T\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.internal.ChannelFlow$collect$2\>):void (m)]\l0x0006: CHECK_CAST (r0 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r0 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:kotlin.jvm.functions.Function2)\l  (r4 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: STATIC call: kotlinx.coroutines.CoroutineScopeKt.coroutineScope(kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation):java.lang.Object A[MD:\<R\>:(kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.CoroutineScope, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\>, kotlin.coroutines.Continuation\<? super R\>):java.lang.Object (m)]\l0x000c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0013 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0012|RETURN\l|0x0012: RETURN  (r0 I:java.lang.Object) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0013|0x0013: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_13 [shape=record,label="{13\:\ 0x0015|RETURN\l|0x0015: RETURN  (r0 I:java.lang.Object)  (LINE:124)\l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.lang.Object kotlinx.coroutines.flow.internal.ChannelFlow.collect$suspendImpl((r2 I:kotlinx.coroutines.flow.internal.ChannelFlow A[D('this' kotlinx.coroutines.flow.internal.ChannelFlow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlinx.coroutines.flow.FlowCollector A[D('collector' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x0015 \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0015: r2 'this' Lkotlinx\/coroutines\/flow\/internal\/ChannelFlow;\l  \-1 \-0x0015: r3 'collector' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  \-1 \-0x0015: r4 '$completion' Lkotlin\/coroutines\/Continuation;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

