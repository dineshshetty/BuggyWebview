digraph "CFG forkotlinx.coroutines.flow.internal.AbstractSharedFlow.forEachSlotLocked(Lkotlin\/jvm\/functions\/Function1;)V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: INVOKE  (r1 I:int) = (r8 I:kotlinx.coroutines.flow.internal.AbstractSharedFlow) type: STATIC call: kotlinx.coroutines.flow.internal.AbstractSharedFlow.access$getNCollectors(kotlinx.coroutines.flow.internal.AbstractSharedFlow):int A[MD:(kotlinx.coroutines.flow.internal.AbstractSharedFlow):int (m)] (LINE:97)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0005|0x0005: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0008 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0007|RETURN\l|0x0007: RETURN   \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0008|0x0008: INVOKE  (r1 I:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[]) = (r8 I:kotlinx.coroutines.flow.internal.AbstractSharedFlow) type: STATIC call: kotlinx.coroutines.flow.internal.AbstractSharedFlow.access$getSlots(kotlinx.coroutines.flow.internal.AbstractSharedFlow):kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] A[MD:(kotlinx.coroutines.flow.internal.AbstractSharedFlow):kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] (m)] (LINE:98)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x000f \l}"];
Node_30 [shape=record,label="{30\:\ 0x000f|0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:140)\l0x0011: ARRAY_LENGTH  (r4 I:int) = (r1 I:??[] A[D('$this$forEach$iv' java.lang.Object[])]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0012|LOOP_START\lLOOP:0: B:31:0x0012\-\>B:40:0x0012\l|0x0012: IF  (r3 I:??[int, byte, short, char]) \>= (r4 I:??[int, byte, short, char])  \-\> B:38:0x0022 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0014|0x0014: AGET  (r5 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('$this$forEach$iv' java.lang.Object[])]), (r3 I:??[int, short, byte, char]) \l0x0016: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l0x0018: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) \l0x0019: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x001a|0x001a: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('slot' kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0012  (LINE:99)\l}"];
Node_39 [shape=record,label="{39\:\ 0x001c|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x001c|0x001c: INVOKE  \l  (r9 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)])\l  (r6 I:java.lang.Object A[D('slot' kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0012|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0012|LOOP_END\lSYNTHETIC\lLOOP:0: B:31:0x0012\-\>B:40:0x0012\l}"];
Node_41 [shape=record,label="{41\:\ 0x0012|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0022|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|0x0022: RETURN   A[SYNTHETIC] (LINE:101)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: RETURN    (LINE:101)\l}"];
MethodNode[shape=record,label="{protected final void kotlinx.coroutines.flow.internal.AbstractSharedFlow.forEachSlotLocked((r8 'this' I:kotlinx.coroutines.flow.internal.AbstractSharedFlow\<S extends kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot\<?\>\> A[IMMUTABLE_TYPE, THIS]), (r9 I:kotlin.jvm.functions.Function1\<? super S extends kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot\<?\>, kotlin.Unit\> A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x001c \-\> B:31:0x0012, BACK_EDGE: B:33:0x001a \-\> B:31:0x0012, CROSS_EDGE: B:37:0x0022 \-\> B:23:?, CROSS_EDGE: B:28:0x000c \-\> B:37:0x0022\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0019\-0x0020: r6 'slot' Lkotlinx\/coroutines\/flow\/internal\/AbstractSharedFlowSlot;\l  0x001a\-0x0020: r7 '$i$a$\-forEach\-AbstractSharedFlow$forEachSlotLocked$1' I\l  0x0016\-0x0021: r5 'element$iv' Ljava\/lang\/Object;\l  0x000f\-0x0022: r1 '$this$forEach$iv' [Ljava\/lang\/Object;\l  0x0010\-0x0022: r2 '$i$f$forEach' I\l  0x0001\-0x0022: r0 '$i$f$forEachSlotLocked' I\l  \-1 \-0x0022: r9 'block' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [S extends kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot\<?\>]\lSIGNATURE: (Lkotlin\/jvm\/functions\/Function1\<\-TS;Lkotlin\/Unit;\>;)V\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_23;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_37[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_38;
Node_32 -> Node_33;
Node_33 -> Node_39[style=dashed];
Node_33 -> Node_41;
Node_39 -> Node_34;
Node_34 -> Node_42;
Node_42 -> Node_40;
Node_40 -> Node_31;
Node_41 -> Node_40;
Node_38 -> Node_43;
Node_43 -> Node_23;
Node_37 -> Node_23;
}

