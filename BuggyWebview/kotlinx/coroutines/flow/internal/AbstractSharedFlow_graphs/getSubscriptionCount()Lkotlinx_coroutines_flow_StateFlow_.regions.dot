digraph "CFG forkotlinx.coroutines.flow.internal.AbstractSharedFlow.getSubscriptionCount()Lkotlinx\/coroutines\/flow\/StateFlow;" {
subgraph cluster_Region_1237716953 {
label = "R(2:1|11) | DECL_VAR: kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow it\l";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_1439812578 {
label = "Synchronized:R(2:2|(2:5|(1:7)))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0001}"];
subgraph cluster_Region_621034695 {
label = "R(2:5|(1:7))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{, blocks: (B:22:0x0003, B:24:0x0007), top: B:32:0x0003 \}\lCatch: all \-\> 0x001b\l|kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow r2 = r5._subscriptionCount     \/\/ Catch: java.lang.Throwable \-\> L1b\l}"];
subgraph cluster_IfRegion_734638395 {
label = "IF [B:23:0x0005] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0005|if (r2 == null) goto L7\l}"];
subgraph cluster_Region_2017971694 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0007|TRY_LEAVE\lTryCatch #0 \{, blocks: (B:22:0x0003, B:24:0x0007), top: B:32:0x0003 \}\lCatch: all \-\> 0x001b\l|kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow r2 = new kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow(getNCollectors())     \/\/ Catch: java.lang.Throwable \-\> L1b\lr5._subscriptionCount = r2     \/\/ Catch: java.lang.Throwable \-\> L1b\l}"];
}
}
}
}
Node_28 [shape=record,label="{28\:\ 0x001a|RETURN\l|return r2\l}"];
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0000}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0002}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_33 [shape=record,color=red,label="{33\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0016|DONT_GENERATE\lPHI: r2 \l  PHI: (r2v1 'it' kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow) = (r2v0 'it' kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow), (r2v3 'it' kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow) binds: [B:23:0x0005, B:24:0x0007] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit()\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0018}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x001b|REMOVE\lExcHandler: all \-\> 0x001b\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x001d|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.flow.StateFlow\<java.lang.Integer\> kotlinx.coroutines.flow.internal.AbstractSharedFlow.getSubscriptionCount((r5v0 'this' kotlinx.coroutines.flow.internal.AbstractSharedFlow\<S extends kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot\<?\>\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x001d \-\> B:18:?, CROSS_EDGE: B:23:0x0005 \-\> B:26:0x0016, CROSS_EDGE: B:32:0x0003 \-\> B:29:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot\<?\>]\lSIGNATURE: ()Lkotlinx\/coroutines\/flow\/StateFlow\<Ljava\/lang\/Integer;\>;\l}"];
MethodNode -> Node_17;Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_26[style=dashed];
Node_24 -> Node_26;
Node_24 -> Node_33;
Node_28 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_32;
Node_32 -> Node_22;
Node_32 -> Node_29;
Node_33 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_31;
Node_31 -> Node_18;
}

