digraph "CFG forkotlinx.coroutines.flow.internal.AbstractSharedFlow.access$getSlots(Lkotlinx\/coroutines\/flow\/internal\/AbstractSharedFlow;)[Lkotlinx\/coroutines\/flow\/internal\/AbstractSharedFlowSlot;" {
subgraph cluster_Region_1843942638 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0002|RETURN\l|return r1.slots\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] kotlinx.coroutines.flow.internal.AbstractSharedFlow.access$getSlots((r1v0 '$this' kotlinx.coroutines.flow.internal.AbstractSharedFlow A[D('$this' kotlinx.coroutines.flow.internal.AbstractSharedFlow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: IGET  \l  (r1 I:kotlinx.coroutines.flow.internal.AbstractSharedFlow A[D('$this' kotlinx.coroutines.flow.internal.AbstractSharedFlow)])\l kotlinx.coroutines.flow.internal.AbstractSharedFlow.slots kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[]\lTYPE_VARS: [S extends kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot\<?\>]\l}"];
MethodNode -> Node_4;Node_7 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
}

