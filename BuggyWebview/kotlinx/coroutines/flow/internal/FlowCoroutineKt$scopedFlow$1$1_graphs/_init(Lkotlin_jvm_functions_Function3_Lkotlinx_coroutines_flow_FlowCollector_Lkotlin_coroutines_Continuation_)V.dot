digraph "CFG forkotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.\<init\>(Lkotlin\/jvm\/functions\/Function3;Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|r1.$block = r2\lr1.$this_unsafeFlow = r3\lsuper(2, r4)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.\<init\>((r1v0 'this' kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1 A[IMMUTABLE_TYPE, THIS]), (r2v0 kotlin.jvm.functions.Function3\<? super kotlinx.coroutines.CoroutineScope, ? super kotlinx.coroutines.flow.FlowCollector\<? super R\>, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlinx.coroutines.flow.FlowCollector\<? super R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | TYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r2v0, resolved type: kotlin.jvm.functions.Function3\<? super kotlinx.coroutines.CoroutineScope, ? super kotlinx.coroutines.flow.FlowCollector\<? super R\>, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>\l \-\> Multi\-variable search result rejected for r3v0, resolved type: kotlinx.coroutines.flow.FlowCollector\<? super R\>\}\lSIGNATURE: (Lkotlin\/jvm\/functions\/Function3\<\-Lkotlinx\/coroutines\/CoroutineScope;\-Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TR;\>;\-Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;+Ljava\/lang\/Object;\>;Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TR;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlinx\/coroutines\/flow\/internal\/FlowCoroutineKt$scopedFlow$1$1;\>;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

