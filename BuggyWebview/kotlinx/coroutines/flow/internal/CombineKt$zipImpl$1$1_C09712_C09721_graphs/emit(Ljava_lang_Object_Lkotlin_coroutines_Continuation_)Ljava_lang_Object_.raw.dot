digraph "CFG forkotlinx.coroutines.flow.internal.CombineKt.zipImpl.1.1.2.1.emit(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r14 I:??[OBJECT, ARRAY]) kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0014 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1) = (kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1) kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0014 \l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|0x000e: IGET  (r14 I:int) = (r0 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1) kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1.label int \l0x0010: ARITH  (r14 I:int) = (r14 I:int) \- (r2 I:int) \l0x0011: IPUT  (r14 I:int), (r0 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1) kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1.label int \l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|0x0019: MOVE  (r14 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r0 I:java.lang.Object) = \l  (r14 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1.result java.lang.Object \l0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0020: IGET  (r2 I:int) = \l  (r14 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1.label int  (LINE:130)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0022|0x0022: SWITCH  (r2 I:??)\l case 0: goto B:31:0x0031\l case 1: goto B:30:0x002d\l default: goto B:28:0x0025 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0025|0x0025: NEW_INSTANCE  (r13 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:137)\l0x0027: CONST_STR  (r14 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x0029: INVOKE  (r13 I:java.lang.IllegalStateException), (r14 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x002c|0x002c: THROW  (r13 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x002d|0x002d: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:130)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0055|0x0055: SGET  (r13 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:137)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0057|RETURN\l|0x0057: RETURN  (r13 I:java.lang.Object) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0031|0x0031: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0034: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY]) \l0x0035: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY]) \l0x0036: IGET  (r13 I:kotlin.coroutines.CoroutineContext) = \l  (r2 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1 A[D('this' kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1)])\l kotlinx.coroutines.flow.internal.CombineKt.zipImpl.1.1.2.1.$scopeContext kotlin.coroutines.CoroutineContext  (LINE:131)\l0x0038: SGET  (r9 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l0x003a: IGET  (r10 I:java.lang.Object) = \l  (r2 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1 A[D('this' kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1)])\l kotlinx.coroutines.flow.internal.CombineKt.zipImpl.1.1.2.1.$cnt java.lang.Object \l0x003c: NEW_INSTANCE  (r11 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1) =  kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1 \l0x003e: IGET  (r4 I:kotlinx.coroutines.channels.ReceiveChannel\<java.lang.Object\>) = \l  (r2 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1 A[D('this' kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1)])\l kotlinx.coroutines.flow.internal.CombineKt.zipImpl.1.1.2.1.$second kotlinx.coroutines.channels.ReceiveChannel \l0x0040: IGET  (r5 I:kotlinx.coroutines.flow.FlowCollector\<R\>) = \l  (r2 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1 A[D('this' kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1)])\l kotlinx.coroutines.flow.internal.CombineKt.zipImpl.1.1.2.1.$this_unsafeFlow kotlinx.coroutines.flow.FlowCollector \l0x0042: IGET  (r6 I:kotlin.jvm.functions.Function3\<T1, T2, kotlin.coroutines.Continuation\<? super R\>, java.lang.Object\>) = \l  (r2 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1 A[D('this' kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1)])\l kotlinx.coroutines.flow.internal.CombineKt.zipImpl.1.1.2.1.$transform kotlin.jvm.functions.Function3 \l0x0044: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0045: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY]) \l0x0046: INVOKE  \l  (r3 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1)\l  (r4 I:kotlinx.coroutines.channels.ReceiveChannel)\l  (r5 I:kotlinx.coroutines.flow.FlowCollector)\l  (r6 I:kotlin.jvm.functions.Function3)\l  (r7 I:java.lang.Object A[D('value' java.lang.Object)])\l  (r8 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.internal.CombineKt.zipImpl.1.1.2.1.1.\<init\>(kotlinx.coroutines.channels.ReceiveChannel, kotlinx.coroutines.flow.FlowCollector, kotlin.jvm.functions.Function3, java.lang.Object, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.channels.ReceiveChannel\<? extends java.lang.Object\>, kotlinx.coroutines.flow.FlowCollector\<? super R\>, kotlin.jvm.functions.Function3\<? super T1, ? super T2, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\>, T1, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1\>):void (m)]\l0x0049: CHECK_CAST (r11 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r11 I:??[OBJECT, ARRAY]) \l0x004b: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x004c: IPUT  \l  (r3 I:int)\l  (r14 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1.label int \l0x004e: INVOKE  (r13 I:java.lang.Object) = \l  (r13 I:kotlin.coroutines.CoroutineContext)\l  (r9 I:java.lang.Object)\l  (r10 I:java.lang.Object)\l  (r11 I:kotlin.jvm.functions.Function2)\l  (r14 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: STATIC call: kotlinx.coroutines.flow.internal.ChannelFlowKt.withContextUndispatched(kotlin.coroutines.CoroutineContext, java.lang.Object, java.lang.Object, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation):java.lang.Object A[MD:\<T, V\>:(kotlin.coroutines.CoroutineContext, V, java.lang.Object, kotlin.jvm.functions.Function2\<? super V, ? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\>, kotlin.coroutines.Continuation\<? super T\>):java.lang.Object (m)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0052|0x0052: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0055 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0054|RETURN\l|0x0054: RETURN  (r1 I:java.lang.Object)  (LINE:130)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1) =  kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1 \l0x0016: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1)\l  (r12 I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1)\l  (r14 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1.\<init\>(kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1\<? super T\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1\>):void (m)]\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.internal.CombineKt.zipImpl.1.1.2.1.emit((r12 'this' I:kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1\<T\> A[IMMUTABLE_TYPE, THIS]), (r13 I:T1 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:35:0x0057 \-\> B:19:?, CROSS_EDGE: B:33:0x0054 \-\> B:19:?, CROSS_EDGE: B:32:0x0052 \-\> B:34:0x0055, CROSS_EDGE: B:25:0x0014 \-\> B:26:0x0019, CROSS_EDGE: B:21:0x0002 \-\> B:25:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (TT1;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x001c\-0x0025: r0 '$result' Ljava\/lang\/Object;\l  0x001a\-0x0025: r14 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x0035\-0x0052: r2 'this' Lkotlinx\/coroutines\/flow\/internal\/CombineKt$zipImpl$1$1$2$1;\l  0x0036\-0x0052: r7 'value' Ljava\/lang\/Object;\l  0x002d\-0x005f: r0 '$result' Ljava\/lang\/Object;\l  0x002d\-0x005f: r14 '$continuation' Lkotlin\/coroutines\/Continuation;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.FlowCollector.emit(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_30;
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_19;
Node_30 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_19;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_19;
Node_25 -> Node_26;
}

