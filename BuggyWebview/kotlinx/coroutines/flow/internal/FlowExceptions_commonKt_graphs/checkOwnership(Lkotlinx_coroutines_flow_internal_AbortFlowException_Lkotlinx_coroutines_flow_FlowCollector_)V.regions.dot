digraph "CFG forkotlinx.coroutines.flow.internal.FlowExceptions_commonKt.checkOwnership(Lkotlinx\/coroutines\/flow\/internal\/AbortFlowException;Lkotlinx\/coroutines\/flow\/FlowCollector;)V" {
subgraph cluster_Region_526645913 {
label = "R(1:(1:(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_331615497 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1983821887 {
label = "IF [B:9:0x0004] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0004|if (r1.getOwner() != r2) goto L5\l}"];
subgraph cluster_Region_1953411753 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0007|throw r1\l}"];
}
}
}
}
Node_6 [shape=record,color=red,label="{6\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0000}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0006}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.flow.internal.FlowExceptions_commonKt.checkOwnership((r1v0 '$this$checkOwnership' kotlinx.coroutines.flow.internal.AbortFlowException A[D('$this$checkOwnership' kotlinx.coroutines.flow.internal.AbortFlowException), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 kotlinx.coroutines.flow.FlowCollector\<?\> A[D('owner' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0007 \-\> B:7:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/internal\/AbortFlowException;Lkotlinx\/coroutines\/flow\/FlowCollector\<*\>;)V\l}"];
MethodNode -> Node_6;Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_7;
}

