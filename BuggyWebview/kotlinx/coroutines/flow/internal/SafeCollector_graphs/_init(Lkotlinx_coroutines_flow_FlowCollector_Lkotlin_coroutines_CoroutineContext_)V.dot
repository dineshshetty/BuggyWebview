digraph "CFG forkotlinx.coroutines.flow.internal.SafeCollector.\<init\>(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/CoroutineContext;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|super(kotlinx.coroutines.flow.internal.NoOpContinuation.INSTANCE, kotlin.coroutines.EmptyCoroutineContext.INSTANCE)\lr2.collector = r3\lr2.collectContext = r4\lr2.collectContextSize = ((java.lang.Number) r4.fold(0, kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1.INSTANCE)).intValue()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.flow.internal.SafeCollector.\<init\>((r2v0 'this' kotlinx.coroutines.flow.internal.SafeCollector\<T\> A[IMMUTABLE_TYPE, THIS]), (r3v0 kotlinx.coroutines.flow.FlowCollector\<? super T\> A[D('collector' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'collectContext' kotlin.coroutines.CoroutineContext A[D('collectContext' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r3v0, resolved type: kotlinx.coroutines.flow.FlowCollector\<? super T\>\}\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TT;\>;Lkotlin\/coroutines\/CoroutineContext;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

