digraph "CFG forkotlinx.coroutines.flow.internal.SafeCollector.exceptionTransparencyViolated(Lkotlinx\/coroutines\/flow\/internal\/DownstreamExceptionContext;Ljava\/lang\/Object;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:135)\l0x0002: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0004: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0007: CONST_STR  (r2 I:java.lang.String) =  \"n            Flow exception transparency is violated:n                Previous 'emit' call has thrown exception \" \l0x0009: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x000c: IGET  (r2 I:java.lang.Throwable) = \l  (r4 I:kotlinx.coroutines.flow.internal.DownstreamExceptionContext A[D('exception' kotlinx.coroutines.flow.internal.DownstreamExceptionContext)])\l kotlinx.coroutines.flow.internal.DownstreamExceptionContext.e java.lang.Throwable  (LINE:137)\l0x000e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)] (LINE:135)\l0x0012: CONST_STR  (r2 I:java.lang.String) =  \", but then emission attempt of value '\"  (LINE:135)\l0x0014: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0018: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.Object A[D('value' java.lang.Object)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)] (LINE:135)\l0x001c: CONST_STR  (r2 I:java.lang.String) =  \"' has been detected.n                Emissions from 'catch' blocks are prohibited in order to avoid unspecified behaviour, 'Flow.catch' operator can be used instead.n                For a more detailed explanation, please refer to Flow documentation.n            \"  (LINE:135)\l0x001e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0021: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0025: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.String) type: STATIC call: kotlin.text.StringsKt.trimIndent(java.lang.String):java.lang.String A[MD:(java.lang.String):java.lang.String (m)] (LINE:140)\l0x0029: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x002d: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|0x0030: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.flow.internal.SafeCollector.exceptionTransparencyViolated((r3 'this' I:kotlinx.coroutines.flow.internal.SafeCollector\<T\> A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlinx.coroutines.flow.internal.DownstreamExceptionContext A[D('exception' kotlinx.coroutines.flow.internal.DownstreamExceptionContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Object A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0030: r4 'exception' Lkotlinx\/coroutines\/flow\/internal\/DownstreamExceptionContext;\l  \-1 \-0x0030: r5 'value' Ljava\/lang\/Object;\lTYPE_VARS: [T]\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [135=5]\}\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

