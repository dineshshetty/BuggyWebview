digraph "CFG forkotlinx.coroutines.flow.internal.SafeCollector.emit(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$completion' kotlin.coroutines.Continuation)])  (LINE:64)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_20 [shape=record,label="{20\:\ 0x0003|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x001b, blocks: (B:20:0x0003), top: B:32:0x0003 \}\lCatch: all \-\> 0x001b\l|0x0003: INVOKE  (r2 I:java.lang.Object) = \l  (r5 I:kotlinx.coroutines.flow.internal.SafeCollector)\l  (r0 I:kotlin.coroutines.Continuation A[D('uCont' kotlin.coroutines.Continuation)])\l  (r6 I:java.lang.Object A[D('value' java.lang.Object)])\l type: DIRECT call: kotlinx.coroutines.flow.internal.SafeCollector.emit(kotlin.coroutines.Continuation, java.lang.Object):java.lang.Object A[Catch: all \-\> 0x001b, MD:(kotlin.coroutines.Continuation\<? super kotlin.Unit\>, T):java.lang.Object (m), TRY_ENTER, TRY_LEAVE] (LINE:66)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008|0x0008: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:64)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0011 \l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|0x000e: INVOKE  (r7 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)]) type: STATIC call: kotlin.coroutines.jvm.internal.DebugProbesKt.probeCoroutineSuspended(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<?\>):void (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|0x0011: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0015|0x0015: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0018 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0017|RETURN\l|0x0017: RETURN  (r2 I:java.lang.Object) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0018|0x0018: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_28 [shape=record,label="{28\:\ 0x001a|RETURN\l|0x001a: RETURN  (r0 I:java.lang.Object) \l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x001b|ExcHandler: all \-\> 0x001b\l|0x001b: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x001b] (LINE:67)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001c|0x001c: NEW_INSTANCE  (r3 I:kotlinx.coroutines.flow.internal.DownstreamExceptionContext) =  kotlinx.coroutines.flow.internal.DownstreamExceptionContext  (LINE:71)\l0x001e: INVOKE  (r4 I:kotlin.coroutines.CoroutineContext) = (r0 I:kotlin.coroutines.Continuation A[D('uCont' kotlin.coroutines.Continuation)]) type: INTERFACE call: kotlin.coroutines.Continuation.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)]\l0x0022: INVOKE  \l  (r3 I:kotlinx.coroutines.flow.internal.DownstreamExceptionContext)\l  (r2 I:java.lang.Throwable A[D('e' java.lang.Throwable)])\l  (r4 I:kotlin.coroutines.CoroutineContext)\l type: DIRECT call: kotlinx.coroutines.flow.internal.DownstreamExceptionContext.\<init\>(java.lang.Throwable, kotlin.coroutines.CoroutineContext):void A[MD:(java.lang.Throwable, kotlin.coroutines.CoroutineContext):void (m)]\l0x0025: CHECK_CAST (r3 I:kotlin.coroutines.CoroutineContext) = (kotlin.coroutines.CoroutineContext) (r3 I:??[OBJECT, ARRAY]) \l0x0027: IPUT  (r3 I:kotlin.coroutines.CoroutineContext), (r5 I:kotlinx.coroutines.flow.internal.SafeCollector) kotlinx.coroutines.flow.internal.SafeCollector.lastEmissionContext kotlin.coroutines.CoroutineContext \l}"];
Node_31 [shape=record,label="{31\:\ 0x0029|0x0029: THROW  (r2 I:java.lang.Throwable A[D('e' java.lang.Throwable)])  (LINE:72)\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.internal.SafeCollector.emit((r5 'this' I:kotlinx.coroutines.flow.internal.SafeCollector\<T\> A[IMMUTABLE_TYPE, THIS]), (r6 I:T A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x001a \-\> B:18:?, CROSS_EDGE: B:22:0x000c \-\> B:24:0x0011, CROSS_EDGE: B:31:0x0029 \-\> B:18:?, CROSS_EDGE: B:32:0x0003 \-\> B:29:0x001b\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x001b, blocks: (B:20:0x0003), top: B:32:0x0003 \}\lTYPE_VARS: [T]\lSIGNATURE: (TT;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x0001\-0x0008: r0 'uCont' Lkotlin\/coroutines\/Continuation;\l  0x0002\-0x0008: r1 '$i$a$\-suspendCoroutineUninterceptedOrReturn\-SafeCollector$emit$2' I\l  0x001b\-0x0029: r0 'uCont' Lkotlin\/coroutines\/Continuation;\l  0x001b\-0x0029: r1 '$i$a$\-suspendCoroutineUninterceptedOrReturn\-SafeCollector$emit$2' I\l  0x001c\-0x0029: r2 'e' Ljava\/lang\/Throwable;\l  \-1 \-0x0029: r6 'value' Ljava\/lang\/Object;\l  \-1 \-0x0029: r7 '$completion' Lkotlin\/coroutines\/Continuation;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.FlowCollector.emit(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_32;
Node_32 -> Node_20;
Node_32 -> Node_29;
Node_20 -> Node_21;
Node_20 -> Node_33;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_18;
Node_27 -> Node_28;
Node_28 -> Node_18;
Node_33 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_18;
}

