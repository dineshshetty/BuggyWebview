digraph "CFG forkotlinx.coroutines.flow.internal.SafeCollector.\<init\>(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/CoroutineContext;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.flow.internal.NoOpContinuation) =  kotlinx.coroutines.flow.internal.NoOpContinuation.INSTANCE kotlinx.coroutines.flow.internal.NoOpContinuation  (LINE:24)\l0x0002: CHECK_CAST (r0 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r0 I:??[OBJECT, ARRAY]) \l0x0004: SGET  (r1 I:kotlin.coroutines.EmptyCoroutineContext) =  kotlin.coroutines.EmptyCoroutineContext.INSTANCE kotlin.coroutines.EmptyCoroutineContext \l0x0006: CHECK_CAST (r1 I:kotlin.coroutines.CoroutineContext) = (kotlin.coroutines.CoroutineContext) (r1 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  \l  (r2 I:kotlin.coroutines.jvm.internal.ContinuationImpl)\l  (r0 I:kotlin.coroutines.Continuation)\l  (r1 I:kotlin.coroutines.CoroutineContext)\l type: DIRECT call: kotlin.coroutines.jvm.internal.ContinuationImpl.\<init\>(kotlin.coroutines.Continuation, kotlin.coroutines.CoroutineContext):void A[MD:(kotlin.coroutines.Continuation\<java.lang.Object\>, kotlin.coroutines.CoroutineContext):void (m)]\l0x000b: IPUT  \l  (r3 I:kotlinx.coroutines.flow.FlowCollector\<T\> A[D('collector' kotlinx.coroutines.flow.FlowCollector)])\l  (r2 I:kotlinx.coroutines.flow.internal.SafeCollector)\l kotlinx.coroutines.flow.internal.SafeCollector.collector kotlinx.coroutines.flow.FlowCollector  (LINE:22)\l0x000d: IPUT  \l  (r4 I:kotlin.coroutines.CoroutineContext A[D('collectContext' kotlin.coroutines.CoroutineContext)])\l  (r2 I:kotlinx.coroutines.flow.internal.SafeCollector)\l kotlinx.coroutines.flow.internal.SafeCollector.collectContext kotlin.coroutines.CoroutineContext  (LINE:23)\l0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:31)\l0x0010: INVOKE  (r0 I:java.lang.Integer) = (r0 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0014: SGET  (r1 I:kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1) =  kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1.INSTANCE kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 \l0x0016: CHECK_CAST (r1 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r1 I:??[OBJECT, ARRAY]) \l0x0018: INVOKE  (r0 I:java.lang.Object) = \l  (r4 I:kotlin.coroutines.CoroutineContext A[D('collectContext' kotlin.coroutines.CoroutineContext)])\l  (r0 I:java.lang.Object)\l  (r1 I:kotlin.jvm.functions.Function2)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.fold(java.lang.Object, kotlin.jvm.functions.Function2):java.lang.Object A[MD:\<R\>:(R, kotlin.jvm.functions.Function2\<? super R, ? super kotlin.coroutines.CoroutineContext$Element, ? extends R\>):R (m)]\l0x001c: CHECK_CAST (r0 I:java.lang.Number) = (java.lang.Number) (r0 I:??[OBJECT, ARRAY]) \l0x001e: INVOKE  (r0 I:int) = (r0 I:java.lang.Number) type: VIRTUAL call: java.lang.Number.intValue():int A[MD:():int (c)]\l0x0022: IPUT  (r0 I:int), (r2 I:kotlinx.coroutines.flow.internal.SafeCollector) kotlinx.coroutines.flow.internal.SafeCollector.collectContextSize int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|RETURN\l|0x0024: RETURN    (LINE:21)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.flow.internal.SafeCollector.\<init\>((r2 'this' I:kotlinx.coroutines.flow.internal.SafeCollector\<T\> A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlinx.coroutines.flow.FlowCollector\<? super T\> A[D('collector' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.CoroutineContext A[D('collectContext' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0024: r3 'collector' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  \-1 \-0x0024: r4 'collectContext' Lkotlin\/coroutines\/CoroutineContext;\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TT;\>;Lkotlin\/coroutines\/CoroutineContext;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

