digraph "CFG forkotlinx.coroutines.flow.internal.SafeCollector.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Throwable) = (r5 I:java.lang.Object A[D('result' java.lang.Object)]) type: STATIC call: kotlin.Result.exceptionOrNull\-impl(java.lang.Object):java.lang.Throwable A[MD:(java.lang.Object):java.lang.Throwable (m)] (LINE:47)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0007 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:157)\l0x0008: NEW_INSTANCE  (r2 I:kotlinx.coroutines.flow.internal.DownstreamExceptionContext) =  kotlinx.coroutines.flow.internal.DownstreamExceptionContext  (LINE:47)\l0x000a: INVOKE  (r3 I:kotlin.coroutines.CoroutineContext) = (r4 I:kotlinx.coroutines.flow.internal.SafeCollector) type: VIRTUAL call: kotlinx.coroutines.flow.internal.SafeCollector.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)]\l0x000e: INVOKE  \l  (r2 I:kotlinx.coroutines.flow.internal.DownstreamExceptionContext)\l  (r0 I:java.lang.Throwable A[D('it' java.lang.Throwable)])\l  (r3 I:kotlin.coroutines.CoroutineContext)\l type: DIRECT call: kotlinx.coroutines.flow.internal.DownstreamExceptionContext.\<init\>(java.lang.Throwable, kotlin.coroutines.CoroutineContext):void A[MD:(java.lang.Throwable, kotlin.coroutines.CoroutineContext):void (m)]\l0x0011: CHECK_CAST (r2 I:kotlin.coroutines.CoroutineContext) = (kotlin.coroutines.CoroutineContext) (r2 I:??[OBJECT, ARRAY]) \l0x0013: IPUT  (r2 I:kotlin.coroutines.CoroutineContext), (r4 I:kotlinx.coroutines.flow.internal.SafeCollector) kotlinx.coroutines.flow.internal.SafeCollector.lastEmissionContext kotlin.coroutines.CoroutineContext \l}"];
Node_18 [shape=record,label="{18\:\ 0x0015|0x0015: IGET  (r0 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('it' java.lang.Throwable)]) = (r4 I:kotlinx.coroutines.flow.internal.SafeCollector) kotlinx.coroutines.flow.internal.SafeCollector.completion kotlin.coroutines.Continuation  (LINE:48)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0017|0x0017: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x001a \l}"];
Node_21 [shape=record,label="{21\:\ 0x001a|0x001a: INVOKE  (r0 I:kotlin.coroutines.Continuation), (r5 I:java.lang.Object A[D('result' java.lang.Object)]) type: INTERFACE call: kotlin.coroutines.Continuation.resumeWith(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x001d|0x001d: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:49)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0021|RETURN\l|0x0021: RETURN  (r0 I:java.lang.Object) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.internal.SafeCollector.invokeSuspend((r4 'this' I:kotlinx.coroutines.flow.internal.SafeCollector\<T\> A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Object A[D('result' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0017 \-\> B:22:0x001d, CROSS_EDGE: B:15:0x0004 \-\> B:18:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x0015: r0 'it' Ljava\/lang\/Throwable;\l  0x0008\-0x0015: r1 '$i$a$\-onFailure\-SafeCollector$invokeSuspend$1' I\l  \-1 \-0x0021: r5 'result' Ljava\/lang\/Object;\lTYPE_VARS: [T]\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_22[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

