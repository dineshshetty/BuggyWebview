digraph "CFG forkotlinx.coroutines.flow.internal.ChannelFlowTransformLatest.\<init\>(Lkotlin\/jvm\/functions\/Function3;Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/channels\/BufferOverflow;ILkotlin\/jvm\/internal\/DefaultConstructorMarker;)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000}"];
Node_19 [shape=record,label="{19\:\ 0x0002|if ((r12 & 4) == 0) goto L15\l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|r3 = kotlin.coroutines.EmptyCoroutineContext.INSTANCE\l}"];
Node_22 [shape=record,label="{22\:\ 0x000b|PHI: r3 \l  PHI: (r3v1 kotlin.coroutines.CoroutineContext) = (r3v0 kotlin.coroutines.CoroutineContext), (r3v2 kotlin.coroutines.EmptyCoroutineContext) binds: [B:21:0x000a, B:20:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|if ((r12 & 8) == 0) goto L14\l}"];
Node_24 [shape=record,label="{24\:\ 0x000f|r4 = \-2\l}"];
Node_26 [shape=record,label="{26\:\ 0x0013|PHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:25:0x0012, B:24:0x000f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0015|if ((r12 & 16) == 0) goto L13\l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|r5 = kotlinx.coroutines.channels.BufferOverflow.SUSPEND\l}"];
Node_30 [shape=record,label="{30\:\ 0x001c|PHI: r5 \l  PHI: (r5v1 kotlinx.coroutines.channels.BufferOverflow) = (r5v0 kotlinx.coroutines.channels.BufferOverflow), (r5v2 kotlinx.coroutines.channels.BufferOverflow) binds: [B:29:0x001b, B:28:0x0017] A[DONT_GENERATE, DONT_INLINE]\l|this(r7, r8, r3, r4, r5)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x001b|r5 = r11\l}"];
Node_25 [shape=record,label="{25\:\ 0x0012|r4 = r10\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|r3 = r9\l}"];
MethodNode[shape=record,label="{public \/* synthetic *\/ void kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest.\<init\>((r6v0 'this' kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest\<T, R\> A[IMMUTABLE_TYPE, THIS]), (r7v0 kotlin.jvm.functions.Function3 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlinx.coroutines.flow.Flow A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 kotlin.coroutines.CoroutineContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 kotlinx.coroutines.channels.BufferOverflow A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 kotlin.jvm.internal.DefaultConstructorMarker A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:29:0x001b \-\> B:30:0x001c, CROSS_EDGE: B:25:0x0012 \-\> B:26:0x0013, CROSS_EDGE: B:21:0x000a \-\> B:22:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [13=4]\}\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_17;
Node_29 -> Node_30;
Node_25 -> Node_26;
Node_21 -> Node_22;
}

