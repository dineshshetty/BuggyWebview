digraph "CFG forkotlinx.coroutines.flow.internal.SubscriptionCountStateFlow.getValue()Ljava\/lang\/Integer;" {
subgraph cluster_Region_1095986311 {
label = "R(2:1|7) | DECL_VAR: java.lang.Integer null\l";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_1487587876 {
label = "Synchronized:R(2:2|(1:5))";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0001}"];
subgraph cluster_Region_340463862 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0003|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{, blocks: (B:18:0x0003), top: B:24:0x0003 \}\lCatch: all \-\> 0x0014\l|java.lang.Integer r1 = java.lang.Integer.valueOf(getLastReplayedLocked().intValue())     \/\/ Catch: java.lang.Throwable \-\> L14\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x0013|RETURN\l|return r1\l}"];
}
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0000}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0002}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0011|DONT_GENERATE\l|monitor\-exit()\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0014|REMOVE\lExcHandler: all \-\> 0x0014\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0016|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{public java.lang.Integer kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow.getValue((r3v0 'this' kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0016 \-\> B:14:?, CROSS_EDGE: B:24:0x0003 \-\> B:21:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lREPLACED_BY: kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow.getValue():java.lang.Integer\lBRIDGED_BY: kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow.getValue():java.lang.Integer\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.StateFlow.getValue():T]\l}"];
MethodNode -> Node_13;Node_16 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_25;
Node_20 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_24;
Node_24 -> Node_18;
Node_24 -> Node_21;
Node_19 -> Node_20;
Node_25 -> Node_21;
Node_21 -> Node_23;
Node_23 -> Node_14;
}

