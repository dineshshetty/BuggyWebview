digraph "CFG forkotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2.1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r7 I:kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1) kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2.1.label int  (LINE:67)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:37:0x0018\l case 1: goto B:32:0x0011\l default: goto B:30:0x0009 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0009|0x0009: NEW_INSTANCE  (r8 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:73)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r8 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0010|0x0010: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0011|0x0011: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY])  (LINE:67)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0012|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ 0x0012|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0016, blocks: (B:33:0x0012), top: B:48:0x0012 \}\lCatch: all \-\> 0x0016\l|0x0012: INVOKE  (r8 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[Catch: all \-\> 0x0016, MD:(java.lang.Object):void (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0031|0x0031: IGET  (r1 I:kotlinx.coroutines.sync.Semaphore A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1)]) = \l  (r0 I:kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1 A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1)])\l kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2.1.$semaphore kotlinx.coroutines.sync.Semaphore  (LINE:71)\l0x0033: INVOKE  (r1 I:kotlinx.coroutines.sync.Semaphore) type: INTERFACE call: kotlinx.coroutines.sync.Semaphore.release():void A[MD:():void (m)]\l0x0037: SGET  (r1 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:73)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0039|RETURN\l|0x0039: RETURN  (r1 I:java.lang.Object) \l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x0016|ExcHandler: all \-\> 0x0016\l|0x0016: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0016] (LINE:70)\l}"];
Node_46 [shape=record,label="{46\:\ 0x003e|0x003e: IGET  (r2 I:kotlinx.coroutines.sync.Semaphore) = \l  (r0 I:kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1 A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1)])\l kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2.1.$semaphore kotlinx.coroutines.sync.Semaphore  (LINE:71)\l0x0040: INVOKE  (r2 I:kotlinx.coroutines.sync.Semaphore) type: INTERFACE call: kotlinx.coroutines.sync.Semaphore.release():void A[MD:():void (m)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0043|0x0043: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0018|0x0018: INVOKE  (r8 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:67)\l0x001b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x001d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_38 [shape=record,label="{38\:\ 0x001d|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x003a, blocks: (B:38:0x001d), top: B:50:0x001d \}\lCatch: all \-\> 0x003a\l|0x001d: IGET  (r2 I:kotlinx.coroutines.flow.Flow\<T\>) = \l  (r1 I:kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1 A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1)])\l kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2.1.$inner kotlinx.coroutines.flow.Flow A[Catch: all \-\> 0x003a, TRY_ENTER] (LINE:69)\l0x001f: IGET  (r3 I:kotlinx.coroutines.flow.internal.SendingCollector\<T\>) = \l  (r1 I:kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1 A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1)])\l kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2.1.$collector kotlinx.coroutines.flow.internal.SendingCollector A[Catch: all \-\> 0x003a]\l0x0021: CHECK_CAST (r3 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x003a]\l0x0023: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1)]) \l0x0024: CHECK_CAST (r4 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r4 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x003a]\l0x0026: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0027: IPUT  \l  (r5 I:int)\l  (r1 I:kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1 A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1)])\l kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2.1.label int A[Catch: all \-\> 0x003a]\l0x0029: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:kotlinx.coroutines.flow.Flow)\l  (r3 I:kotlinx.coroutines.flow.FlowCollector)\l  (r4 I:kotlin.coroutines.Continuation)\l type: INTERFACE call: kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[Catch: all \-\> 0x003a, MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m), TRY_LEAVE]\l}"];
Node_39 [shape=record,label="{39\:\ 0x002d|0x002d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0030 \l}"];
Node_40 [shape=record,label="{40\:\ 0x002f|RETURN\l|0x002f: RETURN  (r0 I:java.lang.Object)  (LINE:67)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0030|0x0030: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1)])  (LINE:69)\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_44 [shape=record,label="{44\:\ 0x003a|ExcHandler: all \-\> 0x003a\l|0x003a: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x003a] (LINE:70)\l}"];
Node_45 [shape=record,label="{45\:\ 0x003b|0x003b: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1)]) \l0x003c: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1)]) = (r0 I:??[OBJECT, ARRAY]) \l0x003d: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2.1.invokeSuspend((r7 'this' I:kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1 A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:43:0x0039 \-\> B:27:?, CROSS_EDGE: B:47:0x0043 \-\> B:27:?, CROSS_EDGE: B:48:0x0012 \-\> B:35:0x0016, CROSS_EDGE: B:40:0x002f \-\> B:27:?, CROSS_EDGE: B:41:0x0030 \-\> B:42:0x0031, CROSS_EDGE: B:45:0x003b \-\> B:46:0x003e, CROSS_EDGE: B:50:0x001d \-\> B:44:0x003a\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0016, blocks: (B:33:0x0012), top: B:48:0x0012 \}, TryCatch #1 \{all \-\> 0x003a, blocks: (B:38:0x001d), top: B:50:0x001d \}\lDebug Info:\l  0x0012\-0x0018: r0 'this' Lkotlinx\/coroutines\/flow\/internal\/ChannelFlowMerge$collectTo$2$1;\l  0x0012\-0x0018: r8 '$result' Ljava\/lang\/Object;\l  0x001c\-0x0031: r1 'this' Lkotlinx\/coroutines\/flow\/internal\/ChannelFlowMerge$collectTo$2$1;\l  0x0031\-0x003a: r0 'this' Lkotlinx\/coroutines\/flow\/internal\/ChannelFlowMerge$collectTo$2$1;\l  0x003a\-0x003e: r1 'this' Lkotlinx\/coroutines\/flow\/internal\/ChannelFlowMerge$collectTo$2$1;\l  0x003e\-0x004b: r0 'this' Lkotlinx\/coroutines\/flow\/internal\/ChannelFlowMerge$collectTo$2$1;\l  0x001c\-0x004b: r8 '$result' Ljava\/lang\/Object;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [67=4]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_32;
Node_29 -> Node_37;
Node_30 -> Node_31;
Node_31 -> Node_27;
Node_32 -> Node_48;
Node_48 -> Node_33;
Node_48 -> Node_35;
Node_33 -> Node_42;
Node_33 -> Node_49;
Node_42 -> Node_43;
Node_43 -> Node_27;
Node_49 -> Node_35;
Node_35 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_27;
Node_37 -> Node_50;
Node_50 -> Node_38;
Node_50 -> Node_44;
Node_38 -> Node_39;
Node_38 -> Node_51;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_27;
Node_41 -> Node_42;
Node_51 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46;
}

