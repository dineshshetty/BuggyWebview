digraph "CFG forkotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge.collectTo(Lkotlinx\/coroutines\/channels\/ProducerScope;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|kotlinx.coroutines.flow.internal.SendingCollector r0 = new kotlinx.coroutines.flow.internal.SendingCollector(r14)\ljava.lang.Iterable\<kotlinx.coroutines.flow.Flow\<T\>\> r1 = r13.flows\ljava.util.Iterator r3 = r1.iterator()\l}"];
Node_12 [shape=record,label="{12\:\ 0x000f|LOOP_START\lLOOP:0: B:12:0x000f\-\>B:14:0x0015\l}"];
Node_13 [shape=record,label="{13\:\ 0x0013|if (r3.hasNext() == false) goto L5\l}"];
Node_14 [shape=record,label="{14\:\ 0x0015|LOOP_END\lLOOP:0: B:12:0x000f\-\>B:14:0x0015\l|java.lang.Object r4 = r3.next()\lkotlinx.coroutines.flow.Flow r5 = (kotlinx.coroutines.flow.Flow) r4\lkotlinx.coroutines.Job r0 = kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default(r14, null, null, new kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1(r5, r0, null), 3, null)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0031|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031}"];
Node_16 [shape=record,label="{16\:\ 0x0034|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge.collectTo((r13v0 'this' kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge\<T\> A[IMMUTABLE_TYPE, THIS]), (r14v0 kotlinx.coroutines.channels.ProducerScope\<? super T\> A[D('scope' kotlinx.coroutines.channels.ProducerScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x0015 \-\> B:12:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlinx\/coroutines\/channels\/ProducerScope\<\-TT;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.internal.ChannelFlow.collectTo(kotlinx.coroutines.channels.ProducerScope\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_12;
Node_17 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_10;
}

