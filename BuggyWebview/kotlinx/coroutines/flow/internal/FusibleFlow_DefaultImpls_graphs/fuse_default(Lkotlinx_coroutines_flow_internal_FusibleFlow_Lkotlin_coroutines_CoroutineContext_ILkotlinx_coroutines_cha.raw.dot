digraph "CFG forkotlinx.coroutines.flow.internal.FusibleFlow.DefaultImpls.fuse$default(Lkotlinx\/coroutines\/flow\/internal\/FusibleFlow;Lkotlin\/coroutines\/CoroutineContext;ILkotlinx\/coroutines\/channels\/BufferOverflow;ILjava\/lang\/Object;)Lkotlinx\/coroutines\/flow\/Flow;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001a  (LINE:30)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0002|0x0002: ARITH  (r5 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|0x0004: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x000a \l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|0x0006: SGET  (r1 I:kotlin.coroutines.EmptyCoroutineContext) =  kotlin.coroutines.EmptyCoroutineContext.INSTANCE kotlin.coroutines.EmptyCoroutineContext  (LINE:31)\l0x0008: CHECK_CAST (r1 I:kotlin.coroutines.CoroutineContext) = (kotlin.coroutines.CoroutineContext) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|0x000a: ARITH  (r5 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char])  (LINE:30)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|0x000c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x000f \l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|0x000e: CONST  (r2 I:??[int, float, short, byte, char]) = (\-3 ??[int, float, short, byte, char])  (LINE:32)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|0x000f: ARITH  (r4 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char])  (LINE:30)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|0x0011: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0015 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0013|0x0013: SGET  (r3 I:kotlinx.coroutines.channels.BufferOverflow) =  kotlinx.coroutines.channels.BufferOverflow.SUSPEND kotlinx.coroutines.channels.BufferOverflow  (LINE:33)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0015|0x0015: INVOKE  (r0 I:kotlinx.coroutines.flow.Flow) = \l  (r0 I:kotlinx.coroutines.flow.internal.FusibleFlow)\l  (r1 I:kotlin.coroutines.CoroutineContext)\l  (r2 I:int)\l  (r3 I:kotlinx.coroutines.channels.BufferOverflow)\l type: INTERFACE call: kotlinx.coroutines.flow.internal.FusibleFlow.fuse(kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.channels.BufferOverflow):kotlinx.coroutines.flow.Flow A[MD:(kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.channels.BufferOverflow):kotlinx.coroutines.flow.Flow\<T\> (m)] (LINE:30)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0019|RETURN\l|0x0019: RETURN  (r0 I:kotlinx.coroutines.flow.Flow) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|0x001a: NEW_INSTANCE  (r0 I:java.lang.UnsupportedOperationException) =  java.lang.UnsupportedOperationException \l0x001c: CONST_STR  (r1 I:java.lang.String) =  \"Super calls with default arguments not supported in this target, function: fuse\" \l0x001e: INVOKE  (r0 I:java.lang.UnsupportedOperationException), (r1 I:java.lang.String) type: DIRECT call: java.lang.UnsupportedOperationException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|0x0021: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ kotlinx.coroutines.flow.Flow kotlinx.coroutines.flow.internal.FusibleFlow.DefaultImpls.fuse$default((r0 I:kotlinx.coroutines.flow.internal.FusibleFlow A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:kotlin.coroutines.CoroutineContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlinx.coroutines.channels.BufferOverflow A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:26:0x0011 \-\> B:28:0x0015, CROSS_EDGE: B:23:0x000c \-\> B:25:0x000f, CROSS_EDGE: B:20:0x0004 \-\> B:22:0x000a, CROSS_EDGE: B:31:0x0021 \-\> B:17:?\lINLINE_NOT_NEEDED\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [30=4]\}\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_30;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_17;
Node_30 -> Node_31;
Node_31 -> Node_17;
}

