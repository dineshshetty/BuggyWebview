digraph "CFG forkotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2.emit(Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000}"];
Node_26 [shape=record,label="{26\:\ 0x0002|if ((r11 instanceof kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1) == false) goto L21\l}"];
Node_27 [shape=record,label="{27\:\ 0x0004|kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1 r0 = (kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1) r11\l}"];
Node_28 [shape=record,label="{28\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) == 0) goto L21\l}"];
Node_29 [shape=record,label="{29\:\ 0x000e|r0.label = r0.label \- Integer.MIN_VALUE\l}"];
Node_31 [shape=record,label="{31\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1) = (r0v1 kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1), (r0v5 kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1) binds: [B:30:0x0014, B:29:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r11 = r0\ljava.lang.Object r0 = r11.result\ljava.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_32 [shape=record,label="{32\:\ 0x0022|switch(r11.label) \{\l    case 0: goto L14;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
Node_33 [shape=record,label="{33\:\ 0x0025}"];
Node_34 [shape=record,label="{34\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x002d|kotlinx.coroutines.flow.Flow r10 = (kotlinx.coroutines.flow.Flow) r11.L$1\lkotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2 r1 = (kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2) r11.L$0\lkotlin.ResultKt.throwOnFailure(r0)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0056|PHI: r1 r10 \l  PHI: (r1v2 kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2) = (r1v1 kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2), (r1v4 kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2) binds: [B:43:0x0055, B:35:0x002d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 kotlinx.coroutines.flow.Flow\<? extends T\>) = (r10v0 kotlinx.coroutines.flow.Flow\<? extends T\>), (r10v3 kotlinx.coroutines.flow.Flow\<? extends T\>) binds: [B:43:0x0055, B:35:0x002d] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.Job r0 = kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default(r1.$scope, null, null, new kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2.C09651(r10, r1.$collector, r1.$semaphore, null), 3, null)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0070|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
Node_36 [shape=record,label="{36\:\ 0x0039|kotlin.ResultKt.throwOnFailure(r0)\lkotlinx.coroutines.Job r3 = r9.$job\l}"];
Node_37 [shape=record,label="{37\:\ 0x003f|if (r3 != null) goto L16\l}"];
Node_39 [shape=record,label="{39\:\ 0x0042|kotlinx.coroutines.JobKt.ensureActive(r3)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0045|kotlinx.coroutines.sync.Semaphore r3 = r9.$semaphore\lr11.L$0 = r9\lr11.L$1 = r10\lr11.label = 1\l}"];
Node_41 [shape=record,label="{41\:\ 0x0052|if (r3.acquire(r11) != r1) goto L20\l}"];
Node_42 [shape=record,label="{42\:\ 0x0054|RETURN\l|return r1\l}"];
Node_43 [shape=record,label="{43\:\ 0x0055|r1 = r9\l}"];
Node_30 [shape=record,label="{30\:\ 0x0014|kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1 r0 = new kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1(r9, r11)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2.emit((r9v0 'this' kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2\<T\> A[IMMUTABLE_TYPE, THIS]), (r10v0 kotlinx.coroutines.flow.Flow\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:45:0x0070 \-\> B:24:?, CROSS_EDGE: B:42:0x0054 \-\> B:24:?, CROSS_EDGE: B:43:0x0055 \-\> B:44:0x0056, CROSS_EDGE: B:37:0x003f \-\> B:40:0x0045, CROSS_EDGE: B:30:0x0014 \-\> B:31:0x0019, CROSS_EDGE: B:26:0x0002 \-\> B:30:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_30;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_35;
Node_32 -> Node_36;
Node_33 -> Node_34;
Node_34 -> Node_24;
Node_35 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_24;
Node_36 -> Node_37;
Node_37 -> Node_39;
Node_37 -> Node_40[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_24;
Node_43 -> Node_44;
Node_30 -> Node_31;
}

