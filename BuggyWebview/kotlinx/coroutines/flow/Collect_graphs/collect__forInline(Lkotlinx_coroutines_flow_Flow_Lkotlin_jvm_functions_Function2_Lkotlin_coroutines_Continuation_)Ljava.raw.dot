digraph "CFG forkotlinx.coroutines.flow.FlowKt__CollectKt.collect$$forInline(Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/jvm\/functions\/Function2;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: NEW_INSTANCE  (r1 I:kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3) =  kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3  (LINE:115)\l0x0003: INVOKE  \l  (r1 I:kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3)\l  (r4 I:kotlin.jvm.functions.Function2 A[D('action' kotlin.jvm.functions.Function2)])\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3.\<init\>(kotlin.jvm.functions.Function2):void A[MD:(kotlin.jvm.functions.Function2\<? super T, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>):void (m)]\l0x0006: CHECK_CAST (r1 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r1 I:??[OBJECT, ARRAY]) \l0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x000c: INVOKE  \l  (r3 I:kotlinx.coroutines.flow.Flow A[D('$this$collect' kotlinx.coroutines.flow.Flow)])\l  (r1 I:kotlinx.coroutines.flow.FlowCollector)\l  (r5 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l0x000f: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0010: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x0013: SGET  (r1 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|RETURN\l|0x0015: RETURN  (r1 I:java.lang.Object)  (LINE:117)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final \/* synthetic *\/ java.lang.Object kotlinx.coroutines.flow.FlowKt__CollectKt.collect$$forInline((r3 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$collect' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function2\<? super T, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\> A[D('action' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>HIDDEN:Lkotlin\/DeprecationLevel;\}, message=Backwards compatibility with JS and K\/N\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0015: r0 '$i$f$collect' I\l  \-1 \-0x0015: r3 '$this$collect' Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x0015: r4 'action' Lkotlin\/jvm\/functions\/Function2;\l  \-1 \-0x0015: r5 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlin\/jvm\/functions\/Function2\<\-TT;\-Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

