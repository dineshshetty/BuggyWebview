digraph "CFG forkotlinx.coroutines.flow.FlowKt__CollectKt.collectIndexed(Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/jvm\/functions\/Function3;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: NEW_INSTANCE  (r1 I:kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2) =  kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2  (LINE:60)\l0x0003: INVOKE  \l  (r1 I:kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2)\l  (r4 I:kotlin.jvm.functions.Function3 A[D('action' kotlin.jvm.functions.Function3)])\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2.\<init\>(kotlin.jvm.functions.Function3):void A[MD:(kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super T, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>):void (m)]\l0x0006: CHECK_CAST (r1 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r1 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  (r1 I:java.lang.Object) = \l  (r3 I:kotlinx.coroutines.flow.Flow A[D('$this$collectIndexed' kotlinx.coroutines.flow.Flow)])\l  (r1 I:kotlinx.coroutines.flow.FlowCollector)\l  (r5 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l0x000c: INVOKE  (r2 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0013 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0012|RETURN\l|0x0012: RETURN  (r1 I:java.lang.Object) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0013|0x0013: SGET  (r1 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_13 [shape=record,label="{13\:\ 0x0015|RETURN\l|0x0015: RETURN  (r1 I:java.lang.Object)  (LINE:63)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.FlowKt__CollectKt.collectIndexed((r3 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$collectIndexed' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super T, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\> A[D('action' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0015 \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0015: r0 '$i$f$collectIndexed' I\l  \-1 \-0x0015: r3 '$this$collectIndexed' Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x0015: r4 'action' Lkotlin\/jvm\/functions\/Function3;\l  \-1 \-0x0015: r5 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlin\/jvm\/functions\/Function3\<\-Ljava\/lang\/Integer;\-TT;\-Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

