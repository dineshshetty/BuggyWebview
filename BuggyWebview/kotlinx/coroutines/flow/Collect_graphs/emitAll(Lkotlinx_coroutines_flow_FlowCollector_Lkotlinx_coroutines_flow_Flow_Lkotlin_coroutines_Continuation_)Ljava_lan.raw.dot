digraph "CFG forkotlinx.coroutines.flow.FlowKt__CollectKt.emitAll(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r2 I:kotlinx.coroutines.flow.FlowCollector A[D('$this$emitAll' kotlinx.coroutines.flow.FlowCollector)]) type: STATIC call: kotlinx.coroutines.flow.FlowKt.ensureActive(kotlinx.coroutines.flow.FlowCollector):void A[MD:(kotlinx.coroutines.flow.FlowCollector\<?\>):void (m)] (LINE:108)\l0x0003: INVOKE  (r0 I:java.lang.Object) = \l  (r3 I:kotlinx.coroutines.flow.Flow A[D('flow' kotlinx.coroutines.flow.Flow)])\l  (r2 I:kotlinx.coroutines.flow.FlowCollector A[D('$this$emitAll' kotlinx.coroutines.flow.FlowCollector)])\l  (r4 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)] (LINE:109)\l0x0007: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x000e \l}"];
Node_11 [shape=record,label="{11\:\ 0x000d|RETURN\l|0x000d: RETURN  (r0 I:java.lang.Object) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x000e|0x000e: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_13 [shape=record,label="{13\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:java.lang.Object)  (LINE:110)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.FlowKt__CollectKt.emitAll((r2 I:kotlinx.coroutines.flow.FlowCollector\<? super T\> A[D('$this$emitAll' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('flow' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0010 \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0010: r2 '$this$emitAll' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  \-1 \-0x0010: r3 'flow' Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x0010: r4 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TT;\>;Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

