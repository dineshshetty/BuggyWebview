digraph "CFG forkotlinx.coroutines.flow.FlowKt__CollectKt.collectLatest(Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/jvm\/functions\/Function2;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.flow.Flow) = \l  (r4 I:kotlinx.coroutines.flow.Flow A[D('$this$collectLatest' kotlinx.coroutines.flow.Flow)])\l  (r5 I:kotlin.jvm.functions.Function2 A[D('action' kotlin.jvm.functions.Function2)])\l type: STATIC call: kotlinx.coroutines.flow.FlowKt.mapLatest(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2):kotlinx.coroutines.flow.Flow A[MD:\<T, R\>:(kotlinx.coroutines.flow.Flow\<? extends T\>, kotlin.jvm.functions.Function2\<? super T, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\>):kotlinx.coroutines.flow.Flow\<R\> (m)] (LINE:100)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0007: INVOKE  (r0 I:kotlinx.coroutines.flow.Flow) = \l  (r0 I:kotlinx.coroutines.flow.Flow)\l  (r1 I:int)\l  (r2 I:kotlinx.coroutines.channels.BufferOverflow)\l  (r3 I:int)\l  (r2 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.flow.FlowKt.buffer$default(kotlinx.coroutines.flow.Flow, int, kotlinx.coroutines.channels.BufferOverflow, int, java.lang.Object):kotlinx.coroutines.flow.Flow A[MD:(kotlinx.coroutines.flow.Flow, int, kotlinx.coroutines.channels.BufferOverflow, int, java.lang.Object):kotlinx.coroutines.flow.Flow (m)]\l0x000b: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.flow.Flow)\l  (r6 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: STATIC call: kotlinx.coroutines.flow.FlowKt.collect(kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.Flow\<?\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l0x000f: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0016 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|RETURN\l|0x0015: RETURN  (r0 I:java.lang.Object) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|0x0016: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_13 [shape=record,label="{13\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:java.lang.Object)  (LINE:101)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.FlowKt__CollectKt.collectLatest((r4 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$collectLatest' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function2\<? super T, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\> A[D('action' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0018 \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r4 '$this$collectLatest' Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x0018: r5 'action' Lkotlin\/jvm\/functions\/Function2;\l  \-1 \-0x0018: r6 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlin\/jvm\/functions\/Function2\<\-TT;\-Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

