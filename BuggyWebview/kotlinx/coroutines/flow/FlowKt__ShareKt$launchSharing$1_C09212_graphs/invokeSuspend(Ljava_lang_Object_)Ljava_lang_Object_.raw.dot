digraph "CFG forkotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.2.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r6 I:kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2) kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.2.label int  (LINE:225)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:29:0x0016\l case 1: goto B:28:0x0011\l default: goto B:26:0x0009 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0009|0x0009: NEW_INSTANCE  (r7 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:237)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r7 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|0x0010: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0011|0x0011: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY])  (LINE:225)\l0x0012: INVOKE  (r7 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0054|0x0054: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2)]) = (r0 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2)]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0055|0x0055: SGET  (r0 I:kotlin.Unit A[D('this' kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2)]) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:237)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0057|RETURN\l|0x0057: RETURN  (r0 I:java.lang.Object) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0016|0x0016: INVOKE  (r7 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0019: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2)])\l kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.2.L$0 java.lang.Object \l0x001c: CHECK_CAST (r2 I:kotlinx.coroutines.flow.SharingCommand) = (kotlinx.coroutines.flow.SharingCommand) (r2 I:??[OBJECT, ARRAY]) \l0x001f: SGET  (r3 I:int[]) =  kotlinx.coroutines.flow.FlowKt__ShareKt.launchSharing.1.2.WhenMappings.$EnumSwitchMapping$0 int[] \l0x0021: INVOKE  (r2 I:int) = (r2 I:kotlinx.coroutines.flow.SharingCommand) type: VIRTUAL call: kotlinx.coroutines.flow.SharingCommand.ordinal():int A[MD:():int (c)]\l0x0025: AGET  (r2 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][]), (r2 I:??[int, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0027|0x0027: SWITCH  (r2 I:??)\l case 1: goto B:37:0x0040\l case 2: goto B:42:0x0055\l case 3: goto B:32:0x002b\l default: goto B:42:0x0055 \l}"];
Node_32 [shape=record,label="{32\:\ 0x002b|0x002b: IGET  (r0 I:T) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2)])\l kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.2.$initialValue java.lang.Object  (LINE:230)\l0x002d: SGET  (r2 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.flow.SharedFlowKt.NO_VALUE kotlinx.coroutines.internal.Symbol \l}"];
Node_33 [shape=record,label="{33\:\ 0x002f|0x002f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0037 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0031|0x0031: IGET  (r0 I:kotlinx.coroutines.flow.MutableSharedFlow\<T\>) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2)])\l kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.2.$shared kotlinx.coroutines.flow.MutableSharedFlow  (LINE:231)\l0x0033: INVOKE  (r0 I:kotlinx.coroutines.flow.MutableSharedFlow) type: INTERFACE call: kotlinx.coroutines.flow.MutableSharedFlow.resetReplayCache():void A[MD:():void (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0037|0x0037: IGET  (r0 I:kotlinx.coroutines.flow.MutableSharedFlow\<T\>) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2)])\l kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.2.$shared kotlinx.coroutines.flow.MutableSharedFlow  (LINE:233)\l0x0039: IGET  (r2 I:T) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2)])\l kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.2.$initialValue java.lang.Object \l0x003b: INVOKE  (r0 I:kotlinx.coroutines.flow.MutableSharedFlow), (r2 I:java.lang.Object) type: INTERFACE call: kotlinx.coroutines.flow.MutableSharedFlow.tryEmit(java.lang.Object):boolean A[MD:(T):boolean (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0040|0x0040: IGET  (r2 I:kotlinx.coroutines.flow.Flow\<T\>) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2)])\l kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.2.$upstream kotlinx.coroutines.flow.Flow \l0x0042: IGET  (r3 I:kotlinx.coroutines.flow.MutableSharedFlow\<T\>) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2)])\l kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.2.$shared kotlinx.coroutines.flow.MutableSharedFlow \l0x0044: CHECK_CAST (r3 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r3 I:??[OBJECT, ARRAY]) \l0x0046: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2)]) \l0x0047: CHECK_CAST (r4 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r4 I:??[OBJECT, ARRAY]) \l0x0049: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x004a: IPUT  \l  (r5 I:int)\l  (r1 I:kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2)])\l kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.2.label int \l0x004c: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:kotlinx.coroutines.flow.Flow)\l  (r3 I:kotlinx.coroutines.flow.FlowCollector)\l  (r4 I:kotlin.coroutines.Continuation)\l type: INTERFACE call: kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0050|0x0050: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0053 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0052|RETURN\l|0x0052: RETURN  (r0 I:java.lang.Object)  (LINE:225)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0053|0x0053: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2)])  (LINE:227)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.2.invokeSuspend((r6 'this' I:kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2 A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:43:0x0057 \-\> B:23:?, CROSS_EDGE: B:34:0x0031 \-\> B:42:0x0055, CROSS_EDGE: B:35:0x0037 \-\> B:42:0x0055, CROSS_EDGE: B:39:0x0052 \-\> B:23:?, CROSS_EDGE: B:40:0x0053 \-\> B:41:0x0054, CROSS_EDGE: B:30:0x0027 \-\> B:42:0x0055\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0016: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ShareKt$launchSharing$1$2;\l  0x0012\-0x0016: r7 '$result' Ljava\/lang\/Object;\l  0x001e\-0x001f: r2 'it' Lkotlinx\/coroutines\/flow\/SharingCommand;\l  0x001a\-0x0054: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ShareKt$launchSharing$1$2;\l  0x0054\-0x0055: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ShareKt$launchSharing$1$2;\l  0x0055\-0x0069: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ShareKt$launchSharing$1$2;\l  0x001a\-0x0069: r7 '$result' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_23;
Node_28 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_23;
Node_29 -> Node_30;
Node_30 -> Node_32;
Node_30 -> Node_37;
Node_30 -> Node_42;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_42;
Node_35 -> Node_42;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_23;
Node_40 -> Node_41;
}

