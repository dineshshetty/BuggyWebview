digraph "CFG forkotlinx.coroutines.flow.SharedFlowKt.MutableSharedFlow(IILkotlinx\/coroutines\/channels\/BufferOverflow;)Lkotlinx\/coroutines\/flow\/MutableSharedFlow;" {
subgraph cluster_Region_1818224497 {
label = "R(2:1|(2:(1:27)|(1:(2:(1:24)|(2:(1:12)|(2:(1:22)|(3:14|15|18)))))))";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0000|boolean r0 = true\l}"];
subgraph cluster_Region_1798546609 {
label = "R(2:(1:27)|(1:(2:(1:24)|(2:(1:12)|(2:(1:22)|(3:14|15|18))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2083319250 {
label = "IF [B:36:0x0007] THEN: R(1:27) ELSE: null";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0007|PHI: r2 \l  PHI: (r2v1 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r3 \>= 0) == false) goto L26\l}"];
subgraph cluster_Region_733285965 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x0067|throw new java.lang.IllegalArgumentException(kotlin.jvm.internal.Intrinsics.stringPlus(\"replay cannot be negative, but was \", java.lang.Integer.valueOf(r3)).toString())\l}"];
}
}
subgraph cluster_Region_1551710960 {
label = "R(1:(2:(1:24)|(2:(1:12)|(2:(1:22)|(3:14|15|18)))))";
node [shape=record,color=blue];
subgraph cluster_Region_714939362 {
label = "R(2:(1:24)|(2:(1:12)|(2:(1:22)|(3:14|15|18))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_826548510 {
label = "IF [B:40:0x000e] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x000e|PHI: r2 \l  PHI: (r2v4 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r4 \>= 0) == false) goto L23\l}"];
subgraph cluster_Region_847287837 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0052|throw new java.lang.IllegalArgumentException(kotlin.jvm.internal.Intrinsics.stringPlus(\"extraBufferCapacity cannot be negative, but was \", java.lang.Integer.valueOf(r4)).toString())\l}"];
}
}
subgraph cluster_Region_119508999 {
label = "R(2:(1:12)|(2:(1:22)|(3:14|15|18)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1168099597 {
label = "IF [B:41:0x0010, B:42:0x0012, B:44:0x0016] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0010|if (r3 \<= 0) goto L9\l}"];
Node_42 [shape=record,label="{42\:\ 0x0012|ADDED_TO_REGION\l|if (r4 \<= 0) goto L10\l}"];
Node_44 [shape=record,label="{44\:\ 0x0016|ADDED_TO_REGION\l|if (r5 != kotlinx.coroutines.channels.BufferOverflow.SUSPEND) goto L12\l}"];
subgraph cluster_Region_1859140743 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0019|r0 = false\l}"];
}
}
subgraph cluster_Region_1430477937 {
label = "R(2:(1:22)|(3:14|15|18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_682822725 {
label = "IF [B:47:0x001a] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x001a|PHI: r0 \l  PHI: (r0v7 boolean) = (r0v0 boolean), (r0v0 boolean), (r0v0 boolean), (r0v12 boolean) binds: [B:41:0x0010, B:42:0x0012, B:44:0x0016, B:46:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L21\l}"];
subgraph cluster_Region_1673857210 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x003d|throw new java.lang.IllegalArgumentException(kotlin.jvm.internal.Intrinsics.stringPlus(\"replay or extraBufferCapacity must be positive with non\-default onBufferOverflow strategy \", r5).toString())\l}"];
}
}
subgraph cluster_Region_612126236 {
label = "R(3:14|15|18)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x001c|int int r0 = r3 + r4\l}"];
Node_49 [shape=record,label="{49\:\ 0x001e|int r1 = r0 \< 0 ? Integer.MAX_VALUE : r0\l}"];
Node_53 [shape=record,label="{53\:\ 0x002c|RETURN\l|return new kotlinx.coroutines.flow.SharedFlowImpl(r3, r1, r5)\l}"];
}
}
}
}
}
}
}
Node_30 [shape=record,color=red,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0002}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0004}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0009}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x000b}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0014}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0020}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0025|PHI: r1 \l  PHI: (r1v8 'bufferCapacity' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_31 [shape=record,color=red,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0024}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x002d}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x003e}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x000d}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x0053}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0006}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.MutableSharedFlow\<T\> kotlinx.coroutines.flow.SharedFlowKt.MutableSharedFlow((r3v0 'replay' int A[D('replay' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'extraBufferCapacity' int A[D('extraBufferCapacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:51:0x0024 \-\> B:52:0x0025, CROSS_EDGE: B:55:0x003d \-\> B:31:?, CROSS_EDGE: B:44:0x0016 \-\> B:47:0x001a, CROSS_EDGE: B:42:0x0012 \-\> B:47:0x001a, CROSS_EDGE: B:41:0x0010 \-\> B:47:0x001a, CROSS_EDGE: B:57:0x0052 \-\> B:31:?, CROSS_EDGE: B:39:0x000d \-\> B:40:0x000e, CROSS_EDGE: B:59:0x0067 \-\> B:31:?, CROSS_EDGE: B:35:0x0006 \-\> B:36:0x0007\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(IILkotlinx\/coroutines\/channels\/BufferOverflow;)Lkotlinx\/coroutines\/flow\/MutableSharedFlow\<TT;\>;\l}"];
MethodNode -> Node_30;Node_32 -> Node_33;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_58;
Node_59 -> Node_31;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_56;
Node_57 -> Node_31;
Node_41 -> Node_42;
Node_41 -> Node_47[style=dashed];
Node_42 -> Node_43;
Node_42 -> Node_47[style=dashed];
Node_44 -> Node_46;
Node_44 -> Node_47[style=dashed];
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_54;
Node_55 -> Node_31;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_49 -> Node_51;
Node_53 -> Node_31;
Node_30 -> Node_32;
Node_33 -> Node_34;
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_37 -> Node_38;
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_43 -> Node_44;
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_51 -> Node_52;
Node_54 -> Node_55;
Node_56 -> Node_57;
Node_39 -> Node_40;
Node_58 -> Node_59;
Node_35 -> Node_36;
}

