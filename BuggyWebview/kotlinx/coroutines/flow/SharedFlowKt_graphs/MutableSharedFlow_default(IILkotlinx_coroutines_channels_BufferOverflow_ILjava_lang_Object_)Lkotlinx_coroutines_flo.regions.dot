digraph "CFG forkotlinx.coroutines.flow.SharedFlowKt.MutableSharedFlow$default(IILkotlinx\/coroutines\/channels\/BufferOverflow;ILjava\/lang\/Object;)Lkotlinx\/coroutines\/flow\/MutableSharedFlow;" {
subgraph cluster_Region_404829037 {
label = "R(4:(1:3)|(1:6)|(1:9)|11)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_592266949 {
label = "IF [B:16:0x0003] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0003|if ((r4 & 1) != 0) goto L3\l}"];
subgraph cluster_Region_1814177289 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0005|r1 = 0\l}"];
}
}
subgraph cluster_IfRegion_669610991 {
label = "IF [B:19:0x0008] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0008|if ((r4 & 2) != 0) goto L6\l}"];
subgraph cluster_Region_910333476 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x000a|r2 = 0\l}"];
}
}
subgraph cluster_IfRegion_2146469191 {
label = "IF [B:22:0x000d] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000d|if ((r4 & 4) != 0) goto L9\l}"];
subgraph cluster_Region_44033758 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000f|kotlinx.coroutines.channels.BufferOverflow r3 = kotlinx.coroutines.channels.BufferOverflow.SUSPEND\l}"];
}
}
Node_25 [shape=record,label="{25\:\ 0x0015|RETURN\l|return MutableSharedFlow(r1, r2, r3)\l}"];
}
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0000}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0006|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v3 int) binds: [B:16:0x0003, B:17:0x0005] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000b|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:19:0x0008, B:20:0x000a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0011|PHI: r3 \l  PHI: (r3v1 kotlinx.coroutines.channels.BufferOverflow) = (r3v0 kotlinx.coroutines.channels.BufferOverflow), (r3v2 kotlinx.coroutines.channels.BufferOverflow) binds: [B:22:0x000d, B:23:0x000f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ kotlinx.coroutines.flow.MutableSharedFlow kotlinx.coroutines.flow.SharedFlowKt.MutableSharedFlow$default((r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlinx.coroutines.channels.BufferOverflow A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:22:0x000d \-\> B:24:0x0011, CROSS_EDGE: B:19:0x0008 \-\> B:21:0x000b, CROSS_EDGE: B:16:0x0003 \-\> B:18:0x0006\lINLINE_NOT_NEEDED\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [264=4]\}\l}"];
MethodNode -> Node_13;Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_25 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_21 -> Node_22;
Node_24 -> Node_25;
}

