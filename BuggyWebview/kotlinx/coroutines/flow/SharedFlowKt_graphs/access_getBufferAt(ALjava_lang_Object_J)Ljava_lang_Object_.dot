digraph "CFG forkotlinx.coroutines.flow.SharedFlowKt.access$getBufferAt([Ljava\/lang\/Object;J)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|return getBufferAt(r1, r2)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ java.lang.Object kotlinx.coroutines.flow.SharedFlowKt.access$getBufferAt((r1v0 '$receiver' java.lang.Object[] A[D('$receiver' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'index' long A[D('index' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  (r1 I:java.lang.Object[] A[D('$receiver' java.lang.Object[])]), (r2 I:long A[D('index' long)]) type: STATIC call: kotlinx.coroutines.flow.SharedFlowKt.getBufferAt(java.lang.Object[], long):java.lang.Object\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

