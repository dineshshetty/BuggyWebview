digraph "CFG forkotlinx.coroutines.flow.FlowKt__MergeKt.flattenMerge(Lkotlinx\/coroutines\/flow\/Flow;I)Lkotlinx\/coroutines\/flow\/Flow;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0001|if (r10 \<= 0) goto L13\l}"];
Node_18 [shape=record,label="{18\:\ 0x0003|r1 = true\l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v5 boolean) binds: [B:19:0x0005, B:18:0x0003] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008|if (r10 != 1) goto L9\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return kotlinx.coroutines.flow.FlowKt.flattenConcat(r9)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x000f}"];
Node_24 [shape=record,label="{24\:\ 0x001f|RETURN\lORIG_RETURN\l|return new kotlinx.coroutines.flow.internal.ChannelFlowMerge(r9, r10, null, 0, null, 28, null)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0020}"];
Node_26 [shape=record,label="{26\:\ 0x0034|throw new java.lang.IllegalArgumentException(kotlin.jvm.internal.Intrinsics.stringPlus(\"Expected positive concurrency level, but had \", java.lang.Integer.valueOf(r10)).toString())\l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|r1 = false\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.Flow\<T\> kotlinx.coroutines.flow.FlowKt__MergeKt.flattenMerge((r9v0 kotlinx.coroutines.flow.Flow\<? extends kotlinx.coroutines.flow.Flow\<? extends T\>\> A[D('$this$flattenMerge' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'concurrency' int A[D('concurrency' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x000f \-\> B:24:0x001f, CROSS_EDGE: B:26:0x0034 \-\> B:15:?, CROSS_EDGE: B:19:0x0005 \-\> B:20:0x0006\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;\>;I)Lkotlinx\/coroutines\/flow\/Flow\<TT;\>;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_27;
Node_27 -> Node_15;
Node_23 -> Node_24;
Node_24 -> Node_15;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_19 -> Node_20;
}

