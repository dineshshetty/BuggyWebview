digraph "CFG forkotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1.collect(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1108835784 {
label = "R(5:(2:3|(4:5|6|7|15))|28|6|7|15) | DECL_VAR: kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1 null, kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1 null, kotlinx.coroutines.flow.FlowCollector $this$take_u24lambda_u2d4\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_209070006 {
label = "IF [B:3:0x0002] THEN: R(2:3|(4:5|6|7|15)) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if ((r10 instanceof kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1.C09091) != false) goto L3\l}"];
subgraph cluster_Region_197010205 {
label = "R(2:3|(4:5|6|7|15))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0004|kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1 r0 = (kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1.C09091) r10\l}"];
subgraph cluster_IfRegion_1070542304 {
label = "IF [B:5:0x000c] THEN: R(4:5|6|7|15) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) != 0) goto L5\l}"];
subgraph cluster_Region_47251163 {
label = "R(4:5|6|7|15)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000e|r0.label \-= Integer.MIN_VALUE\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1), (r0v5 kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1) binds: [B:7:0x0014, B:6:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r10 = r0\ljava.lang.Object java.lang.Object r0 = r10.result\ljava.lang.Object java.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_626744440 {
label = "Switch: 3
 case 0 -> R(2:19|(2:21|(1:(1:23))))
 case 1 -> R(2:11|(1:13))
 case default -> R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0022|switch(r10.label) \{\l    case 0: goto L19;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
subgraph cluster_Region_1549390784 {
label = "R(2:19|(2:21|(1:(1:23))))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0038|kotlin.ResultKt.throwOnFailure(r0)\lkotlin.jvm.internal.Ref$IntRef kotlin.jvm.internal.Ref.IntRef r4 = new kotlin.jvm.internal.Ref.IntRef()\l}"];
subgraph cluster_TryCatchRegion_1314139433 {
label = "Try: R(2:21|(1:(1:23))) catches: R(4:26|27|18|15)";
node [shape=record,color=blue];
subgraph cluster_Region_1557892134 {
label = "R(2:21|(1:(1:23)))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0046|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{AbortFlowException \-\> 0x0060, blocks: (B:18:0x0046), top: B:28:0x0046 \}\lCatch: AbortFlowException \-\> 0x0060\l|r10.L$0 = r9     \/\/ Catch: kotlinx.coroutines.flow.internal.FlowExceptions \-\> L60\lr10.label = 1     \/\/ Catch: kotlinx.coroutines.flow.internal.FlowExceptions \-\> L60\l}"];
subgraph cluster_Region_1375291534 {
label = "R(1:(1:23))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_646445675 {
label = "IF [B:19:0x005a] THEN: R(1:23) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x005a|if (r8.$this_take$inlined.collect(new kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1(r4, r8.$count$inlined, r9), r10) == r1) goto L23\l}"];
subgraph cluster_Region_1095122600 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x005c|RETURN\l|return r1\l}"];
}
}
}
}
subgraph cluster_Region_51469752 {
label = "R(4:26|27|18|15) | ExcHandler: AbortFlowException \-\> 0x0060\l";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0060|ExcHandler: AbortFlowException \-\> 0x0060\l|kotlinx.coroutines.flow.internal.AbortFlowException r2 = e\l}"];
Node_24 [shape=record,label="{24\:\ 0x0061|r1 = r9\l}"];
Node_25 [shape=record,label="{25\:\ 0x0063|PHI: r1 r2 \l  PHI: (r1v3 '$this$take_u24lambda_u2d4' kotlinx.coroutines.flow.FlowCollector) = (r1v1 '$this$take_u24lambda_u2d4' kotlinx.coroutines.flow.FlowCollector), (r1v5 '$this$take_u24lambda_u2d4' kotlinx.coroutines.flow.FlowCollector) binds: [B:24:0x0061, B:15:0x0036] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 'e' kotlinx.coroutines.flow.internal.AbortFlowException) = (r2v2 'e' kotlinx.coroutines.flow.internal.AbortFlowException), (r2v4 'e' kotlinx.coroutines.flow.internal.AbortFlowException) binds: [B:24:0x0061, B:15:0x0036] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.flow.internal.FlowExceptions_commonKt.checkOwnership(r2, r1)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0069|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
}
}
subgraph cluster_Region_589626950 {
label = "R(2:11|(1:13))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002d|kotlinx.coroutines.flow.FlowCollector r1 = (kotlinx.coroutines.flow.FlowCollector) r10.L$0\l}"];
subgraph cluster_TryCatchRegion_1821351568 {
label = "Try: R(1:13) catches: R(3:17|18|15)";
node [shape=record,color=blue];
subgraph cluster_Region_1158954626 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0032|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{AbortFlowException \-\> 0x0036, blocks: (B:13:0x0032), top: B:30:0x0032 \}\lCatch: AbortFlowException \-\> 0x0036\l|kotlin.ResultKt.throwOnFailure(r0)     \/\/ Catch: kotlinx.coroutines.flow.internal.FlowExceptions \-\> L36\l}"];
}
subgraph cluster_Region_711532236 {
label = "R(3:17|18|15) | ExcHandler: AbortFlowException \-\> 0x0036\l";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0036|ExcHandler: AbortFlowException \-\> 0x0036\l|kotlinx.coroutines.flow.internal.AbortFlowException r2 = e\l}"];
Node_25 [shape=record,label="{25\:\ 0x0063|PHI: r1 r2 \l  PHI: (r1v3 '$this$take_u24lambda_u2d4' kotlinx.coroutines.flow.FlowCollector) = (r1v1 '$this$take_u24lambda_u2d4' kotlinx.coroutines.flow.FlowCollector), (r1v5 '$this$take_u24lambda_u2d4' kotlinx.coroutines.flow.FlowCollector) binds: [B:24:0x0061, B:15:0x0036] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 'e' kotlinx.coroutines.flow.internal.AbortFlowException) = (r2v2 'e' kotlinx.coroutines.flow.internal.AbortFlowException), (r2v4 'e' kotlinx.coroutines.flow.internal.AbortFlowException) binds: [B:24:0x0061, B:15:0x0036] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.flow.internal.FlowExceptions_commonKt.checkOwnership(r2, r1)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0069|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
}
}
subgraph cluster_Region_1161511885 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
}
}
Node_27 [shape=record,label="{27\:\ 0x0069|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x0014|kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1 r0 = new kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1.C09091(r10)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1), (r0v5 kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1) binds: [B:7:0x0014, B:6:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r10 = r0\ljava.lang.Object java.lang.Object r0 = r10.result\ljava.lang.Object java.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_1558433478 {
label = "Switch: 0";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0022|switch(r10.label) \{\l    case 0: goto L19;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
}
Node_27 [shape=record,label="{27\:\ 0x0069|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
subgraph cluster_Region_711532236 {
label = "R(3:17|18|15) | ExcHandler: AbortFlowException \-\> 0x0036\l";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0036|ExcHandler: AbortFlowException \-\> 0x0036\l|kotlinx.coroutines.flow.internal.AbortFlowException r2 = e\l}"];
Node_25 [shape=record,label="{25\:\ 0x0063|PHI: r1 r2 \l  PHI: (r1v3 '$this$take_u24lambda_u2d4' kotlinx.coroutines.flow.FlowCollector) = (r1v1 '$this$take_u24lambda_u2d4' kotlinx.coroutines.flow.FlowCollector), (r1v5 '$this$take_u24lambda_u2d4' kotlinx.coroutines.flow.FlowCollector) binds: [B:24:0x0061, B:15:0x0036] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 'e' kotlinx.coroutines.flow.internal.AbortFlowException) = (r2v2 'e' kotlinx.coroutines.flow.internal.AbortFlowException), (r2v4 'e' kotlinx.coroutines.flow.internal.AbortFlowException) binds: [B:24:0x0061, B:15:0x0036] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.flow.internal.FlowExceptions_commonKt.checkOwnership(r2, r1)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0069|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
subgraph cluster_Region_51469752 {
label = "R(4:26|27|18|15) | ExcHandler: AbortFlowException \-\> 0x0060\l";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0060|ExcHandler: AbortFlowException \-\> 0x0060\l|kotlinx.coroutines.flow.internal.AbortFlowException r2 = e\l}"];
Node_24 [shape=record,label="{24\:\ 0x0061|r1 = r9\l}"];
Node_25 [shape=record,label="{25\:\ 0x0063|PHI: r1 r2 \l  PHI: (r1v3 '$this$take_u24lambda_u2d4' kotlinx.coroutines.flow.FlowCollector) = (r1v1 '$this$take_u24lambda_u2d4' kotlinx.coroutines.flow.FlowCollector), (r1v5 '$this$take_u24lambda_u2d4' kotlinx.coroutines.flow.FlowCollector) binds: [B:24:0x0061, B:15:0x0036] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 'e' kotlinx.coroutines.flow.internal.AbortFlowException) = (r2v2 'e' kotlinx.coroutines.flow.internal.AbortFlowException), (r2v4 'e' kotlinx.coroutines.flow.internal.AbortFlowException) binds: [B:24:0x0061, B:15:0x0036] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.flow.internal.FlowExceptions_commonKt.checkOwnership(r2, r1)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0069|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0025}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0032|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0066}"];
Node_31 [shape=record,color=red,label="{31\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0046|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x005d}"];
Node_29 [shape=record,color=red,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1.collect((r8v0 'this' kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1 A[IMMUTABLE_TYPE, THIS]), (r9v0 kotlinx.coroutines.flow.FlowCollector\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:27:0x0069 \-\> B:1:?, CROSS_EDGE: B:25:0x0063 \-\> B:26:0x0066, CROSS_EDGE: B:30:0x0032 \-\> B:15:0x0036, CROSS_EDGE: B:20:0x005c \-\> B:1:?, CROSS_EDGE: B:21:0x005d \-\> B:26:0x0066, CROSS_EDGE: B:24:0x0061 \-\> B:25:0x0063, CROSS_EDGE: B:28:0x0046 \-\> B:23:0x0060, CROSS_EDGE: B:7:0x0014 \-\> B:8:0x0019, CROSS_EDGE: B:3:0x0002 \-\> B:7:0x0014\lINLINE_NOT_NEEDED\lTryCatch #0 \{AbortFlowException \-\> 0x0060, blocks: (B:18:0x0046), top: B:28:0x0046 \}, TryCatch #1 \{AbortFlowException \-\> 0x0036, blocks: (B:13:0x0032), top: B:30:0x0032 \}\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TT;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lJadxCommentsAttr\{\l WARN: \l \-\> Removed duplicated region for block: B:17:0x0038 \l \-\> Removed duplicated region for block: B:12:0x002d \l \-\> Removed duplicated region for block: B:10:0x0025 \l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [105=4]\}\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_9 -> Node_17;
Node_17 -> Node_28;
Node_18 -> Node_19;
Node_18 -> Node_29;
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_1;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_1;
Node_12 -> Node_30;
Node_13 -> Node_26;
Node_13 -> Node_31;
Node_15 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_1;
Node_11 -> Node_1;
Node_27 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_9 -> Node_17;
Node_27 -> Node_1;
Node_15 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_1;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_10 -> Node_11;
Node_30 -> Node_13;
Node_30 -> Node_15;
Node_26 -> Node_27;
Node_31 -> Node_15;
Node_28 -> Node_18;
Node_28 -> Node_23;
Node_21 -> Node_26;
Node_29 -> Node_23;
}

