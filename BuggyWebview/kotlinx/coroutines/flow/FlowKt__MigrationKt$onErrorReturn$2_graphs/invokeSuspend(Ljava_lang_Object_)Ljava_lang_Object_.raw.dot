digraph "CFG forkotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r6 I:kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2) kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.label int  (LINE:303)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:23:0x0016\l case 1: goto B:22:0x0011\l default: goto B:20:0x0009 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: NEW_INSTANCE  (r7 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:307)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r7 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|0x0010: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY])  (LINE:303)\l0x0012: INVOKE  (r7 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0043|0x0043: SGET  (r1 I:kotlin.Unit A[D('this' kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2)]) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:307)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0045|RETURN\l|0x0045: RETURN  (r1 I:java.lang.Object) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|0x0016: INVOKE  (r7 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0019: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2 A[D('this' kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2)])\l kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.L$0 java.lang.Object \l0x001c: CHECK_CAST (r2 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r2 I:??[OBJECT, ARRAY]) \l0x001e: IGET  (r3 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2 A[D('this' kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2)])\l kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.L$1 java.lang.Object \l0x0020: CHECK_CAST (r3 I:java.lang.Throwable) = (java.lang.Throwable) (r3 I:??[OBJECT, ARRAY]) \l0x0022: IGET  (r4 I:kotlin.jvm.functions.Function1\<java.lang.Throwable, java.lang.Boolean\>) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2 A[D('this' kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2)])\l kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.$predicate kotlin.jvm.functions.Function1  (LINE:305)\l0x0024: INVOKE  (r4 I:java.lang.Object) = (r4 I:kotlin.jvm.functions.Function1), (r3 I:java.lang.Object A[D('e' java.lang.Throwable)]) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0028: CHECK_CAST (r4 I:java.lang.Boolean) = (java.lang.Boolean) (r4 I:??[OBJECT, ARRAY]) \l0x002a: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x002e|0x002e: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0046 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0030|0x0030: IGET  (r3 I:T A[D('e' java.lang.Throwable)]) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2 A[D('this' kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2)])\l kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.$fallback java.lang.Object  (LINE:306)\l0x0032: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2)]) \l0x0033: CHECK_CAST (r4 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r4 I:??[OBJECT, ARRAY]) \l0x0035: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0036: IPUT  \l  (r5 I:java.lang.Object)\l  (r1 I:kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2 A[D('this' kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2)])\l kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.L$0 java.lang.Object \l0x0038: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0039: IPUT  \l  (r5 I:int)\l  (r1 I:kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2 A[D('this' kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2)])\l kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.label int \l0x003b: INVOKE  (r2 I:java.lang.Object A[D('$this$catch' kotlinx.coroutines.flow.FlowCollector)]) = \l  (r2 I:kotlinx.coroutines.flow.FlowCollector A[D('$this$catch' kotlinx.coroutines.flow.FlowCollector)])\l  (r3 I:java.lang.Object)\l  (r4 I:kotlin.coroutines.Continuation)\l type: INTERFACE call: kotlinx.coroutines.flow.FlowCollector.emit(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x003f|0x003f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$catch' kotlinx.coroutines.flow.FlowCollector)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0042 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0041|RETURN\l|0x0041: RETURN  (r0 I:java.lang.Object)  (LINE:303)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0042|0x0042: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2)])  (LINE:306)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0046|0x0046: THROW  (r3 I:java.lang.Throwable A[D('e' java.lang.Throwable)])  (LINE:305)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.invokeSuspend((r6 'this' I:kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2 A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0045 \-\> B:17:?, CROSS_EDGE: B:27:0x0041 \-\> B:17:?, CROSS_EDGE: B:28:0x0042 \-\> B:29:0x0043, CROSS_EDGE: B:31:0x0046 \-\> B:17:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0016: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__MigrationKt$onErrorReturn$2;\l  0x0012\-0x0016: r7 '$result' Ljava\/lang\/Object;\l  0x0022\-0x0030: r3 'e' Ljava\/lang\/Throwable;\l  0x001e\-0x003f: r2 '$this$catch' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x001a\-0x0043: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__MigrationKt$onErrorReturn$2;\l  0x0043\-0x0046: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__MigrationKt$onErrorReturn$2;\l  0x0046\-0x004f: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__MigrationKt$onErrorReturn$2;\l  0x0046\-0x004f: r2 '$this$catch' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x0046\-0x004f: r3 'e' Ljava\/lang\/Throwable;\l  0x001a\-0x004f: r7 '$result' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_22;
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_22 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_17;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_31;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_17;
Node_28 -> Node_29;
Node_31 -> Node_17;
}

