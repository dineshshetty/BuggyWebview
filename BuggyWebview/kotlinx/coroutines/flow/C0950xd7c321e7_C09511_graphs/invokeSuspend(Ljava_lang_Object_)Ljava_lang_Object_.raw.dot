digraph "CFG forkotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2.1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r9 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1) kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2.1.label int  (LINE:269)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:7:0x0017\l case 1: goto B:6:0x0011\l default: goto B:4:0x0009 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: NEW_INSTANCE  (r10 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:337)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r10 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY])  (LINE:269)\l0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: INVOKE  (r10 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|0x0042: SGET  (r1 I:kotlin.Unit A[D('$i$a$\-combineTransformUnsafe\-FlowKt__ZipKt$combineTransform$2' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:337)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|RETURN\l|0x0044: RETURN  (r1 I:java.lang.Object A[D('$i$a$\-combineTransformUnsafe\-FlowKt__ZipKt$combineTransform$2' int)]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: INVOKE  (r10 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x001a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY]) \l0x001b: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2.1.L$0 java.lang.Object \l0x001d: CHECK_CAST (r2 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r2 I:??[OBJECT, ARRAY]) \l0x001f: IGET  (r3 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2.1.L$1 java.lang.Object \l0x0021: CHECK_CAST (r3 I:java.lang.Object[]) = (java.lang.Object[]) (r3 I:??[OBJECT, ARRAY]) \l0x0023: MOVE  (r4 I:??[OBJECT, ARRAY]) = \l  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1)])\l  (LINE:273)\l0x0024: CHECK_CAST (r4 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r4 I:??[OBJECT, ARRAY]) \l0x0026: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0027: IGET  (r5 I:kotlin.jvm.functions.Function4) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2.1.$transform$inlined kotlin.jvm.functions.Function4  (LINE:333)\l0x0029: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:334)\l0x002a: AGET  (r6 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][] A[D('args' java.lang.Object[])]), (r6 I:??[int, short, byte, char]) \l0x002c: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:335)\l0x002d: AGET  (r8 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][] A[D('args' java.lang.Object[])]), (r7 I:??[int, short, byte, char]) \l0x002f: IPUT  \l  (r7 I:int)\l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1 A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1)])\l kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2.1.label int  (LINE:333)\l0x0031: CONST  (r3 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l0x0032: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x0035: INVOKE  (r2 I:java.lang.Object) = \l  (r5 I:kotlin.jvm.functions.Function4)\l  (r2 I:java.lang.Object)\l  (r6 I:java.lang.Object)\l  (r8 I:java.lang.Object)\l  (r1 I:java.lang.Object A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1)])\l type: INTERFACE call: kotlin.jvm.functions.Function4.invoke(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2, P3, P4):R (m)]\l0x0039: CONST  (r3 I:??[int, float, short, byte, char]) = (7 ??[int, float, short, byte, char]) \l0x003a: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x003d|0x003d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0040 \l}"];
Node_9 [shape=record,label="{9\:\ 0x003f|RETURN\l|0x003f: RETURN  (r0 I:java.lang.Object)  (LINE:269)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|0x0040: MOVE  (r0 I:??[OBJECT, ARRAY]) = \l  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1)])\l  (LINE:333)\l0x0041: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1)]) = \l  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$a$\-combineTransformUnsafe\-FlowKt__ZipKt$combineTransform$2' int)])\l \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2.1.invokeSuspend((r9 'this' I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1 A[IMMUTABLE_TYPE, THIS]), (r10 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0044 \-\> B:1:?, CROSS_EDGE: B:9:0x003f \-\> B:1:?, CROSS_EDGE: B:10:0x0040 \-\> B:11:0x0042\lDebug Info:\l  0x0012\-0x0017: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1;\l  0x0013\-0x0017: r1 '$i$a$\-combineTransformUnsafe\-FlowKt__ZipKt$combineTransform$2' I\l  0x0012\-0x0017: r10 '$result' Ljava\/lang\/Object;\l  0x001f\-0x0026: r2 '$this$combineInternal' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x0023\-0x0026: r3 'it' [Ljava\/lang\/Object;\l  0x0026\-0x0029: r2 '$this$combineTransform_u24lambda_u2d2' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x0026\-0x002f: r3 'args' [Ljava\/lang\/Object;\l  0x0027\-0x0042: r4 '$i$a$\-combineTransformUnsafe\-FlowKt__ZipKt$combineTransform$2' I\l  0x001b\-0x0042: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1;\l  0x0042\-0x0044: r1 '$i$a$\-combineTransformUnsafe\-FlowKt__ZipKt$combineTransform$2' I\l  0x0042\-0x004d: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1;\l  0x001b\-0x004d: r10 '$result' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_1;
Node_10 -> Node_11;
}

