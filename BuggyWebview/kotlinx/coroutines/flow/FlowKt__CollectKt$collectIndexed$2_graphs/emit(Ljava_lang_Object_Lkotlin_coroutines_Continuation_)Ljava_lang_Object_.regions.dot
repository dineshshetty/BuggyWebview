digraph "CFG forkotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2.emit(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1420079 {
label = "R(2:1|(2:(2:3|4)|(1:10)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0000|kotlin.jvm.functions.Function3\<java.lang.Integer, T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>, java.lang.Object\> kotlin.jvm.functions.Function3\<java.lang.Integer, T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>, java.lang.Object\> r0 = r4.$action\lint int r1 = r4.index\lr4.index = r1 + 1\l}"];
subgraph cluster_Region_1345548659 {
label = "R(2:(2:3|4)|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_559335001 {
label = "IF [B:14:0x0009] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0009|if (r1 \>= 0) goto L3\l}"];
subgraph cluster_Region_1616890859 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x000c|java.lang.Object java.lang.Object r0 = r0.invoke(kotlin.coroutines.jvm.internal.boxing.boxInt(r1), r5, r6)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0018|RETURN\l|return r0 == kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED() ? r0 : kotlin.Unit.INSTANCE\l}"];
}
}
subgraph cluster_Region_1087961437 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0025|throw new java.lang.ArithmeticException(\"Index overflow has happened\")\l}"];
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x001a}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x001b}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x001d}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x001e}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2.emit((r4v0 'this' kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2 A[IMMUTABLE_TYPE, THIS]), (r5v0 T A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x001d \-\> B:12:?, CROSS_EDGE: B:21:0x0025 \-\> B:12:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (TT;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.FlowCollector.emit(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_11;Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_20[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18;
Node_21 -> Node_12;
Node_11 -> Node_13;
Node_17 -> Node_12;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
}

