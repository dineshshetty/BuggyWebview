digraph "CFG forkotlinx.coroutines.flow.FlowKt__LimitKt.transformWhile(Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/jvm\/functions\/Function3;)Lkotlinx\/coroutines\/flow\/Flow;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1) =  kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1  (LINE:118)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1)\l  (r2 I:kotlinx.coroutines.flow.Flow A[D('$this$transformWhile' kotlinx.coroutines.flow.Flow)])\l  (r3 I:kotlin.jvm.functions.Function3 A[D('transform' kotlin.jvm.functions.Function3)])\l  (r1 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.\<init\>(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.Flow\<? extends T\>, kotlin.jvm.functions.Function3\<? super kotlinx.coroutines.flow.FlowCollector\<? super R\>, ? super T, ? super kotlin.coroutines.Continuation\<? super java.lang.Boolean\>, ? extends java.lang.Object\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1\>):void (m)]\l0x0006: CHECK_CAST (r0 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r0 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  (r0 I:kotlinx.coroutines.flow.Flow) = (r0 I:kotlin.jvm.functions.Function2) type: STATIC call: kotlinx.coroutines.flow.FlowKt.flow(kotlin.jvm.functions.Function2):kotlinx.coroutines.flow.Flow A[MD:\<T\>:(kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.flow.FlowCollector\<? super T\>, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>):kotlinx.coroutines.flow.Flow\<T\> (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:kotlinx.coroutines.flow.Flow\<R\>)  (LINE:123)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.Flow\<R\> kotlinx.coroutines.flow.FlowKt__LimitKt.transformWhile((r2 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$transformWhile' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.jvm.functions.Function3\<? super kotlinx.coroutines.flow.FlowCollector\<? super R\>, ? super T, ? super kotlin.coroutines.Continuation\<? super java.lang.Boolean\>, ? extends java.lang.Object\> A[D('transform' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000c: r2 '$this$transformWhile' Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x000c: r3 'transform' Lkotlin\/jvm\/functions\/Function3;\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlin\/jvm\/functions\/Function3\<\-Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TR;\>;\-TT;\-Lkotlin\/coroutines\/Continuation\<\-Ljava\/lang\/Boolean;\>;+Ljava\/lang\/Object;\>;)Lkotlinx\/coroutines\/flow\/Flow\<TR;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

