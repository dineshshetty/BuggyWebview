digraph "CFG forkotlinx.coroutines.flow.FlowKt__ErrorsKt.catchImpl(Lkotlinx\/coroutines\/flow\/Flow;Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_44 [shape=record,label="{44\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x0000}"];
Node_47 [shape=record,label="{47\:\ 0x0002|if ((r7 instanceof kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1) == false) goto L40\l}"];
Node_48 [shape=record,label="{48\:\ 0x0004|kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1 r0 = (kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1) r7\l}"];
Node_49 [shape=record,label="{49\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) == 0) goto L40\l}"];
Node_50 [shape=record,label="{50\:\ 0x000e|r0.label = r0.label \- Integer.MIN_VALUE\l}"];
Node_52 [shape=record,label="{52\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1), (r0v5 kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1) binds: [B:51:0x0014, B:50:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r7 = r0\ljava.lang.Object r0 = r7.result\ljava.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_53 [shape=record,label="{53\:\ 0x0022|switch(r7.label) \{\l    case 0: goto L30;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
Node_54 [shape=record,label="{54\:\ 0x0025}"];
Node_55 [shape=record,label="{55\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_45 [shape=record,label="{45\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_56 [shape=record,label="{56\:\ 0x002d|kotlin.jvm.internal.Ref$ObjectRef r5 = (kotlin.jvm.internal.Ref.ObjectRef) r7.L$0\l}"];
Node_83 [shape=record,label="{83\:\ 0x0031|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_57 [shape=record,label="{57\:\ 0x0031|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0035, blocks: (B:57:0x0031), top: B:83:0x0031 \}\lCatch: all \-\> 0x0035\l|kotlin.ResultKt.throwOnFailure(r0)     \/\/ Catch: java.lang.Throwable \-\> L35\l}"];
Node_84 [shape=record,label="{84\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_87 [shape=record,label="{87\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_59 [shape=record,label="{59\:\ 0x0035|ExcHandler: all \-\> 0x0035\l|java.lang.Throwable r6 = th\l}"];
Node_70 [shape=record,label="{70\:\ 0x0059|PHI: r5 r6 \l  PHI: (r5v3 'fromDownstream' kotlin.jvm.internal.Ref$ObjectRef) = (r5v1 'fromDownstream' kotlin.jvm.internal.Ref$ObjectRef), (r5v5 'fromDownstream' kotlin.jvm.internal.Ref$ObjectRef) binds: [B:69:0x0058, B:59:0x0035] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v3 'e' java.lang.Throwable) = (r6v1 'e' java.lang.Throwable), (r6v4 'e' java.lang.Throwable) binds: [B:69:0x0058, B:59:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Throwable r1 = (java.lang.Throwable) r5.element\l}"];
Node_71 [shape=record,label="{71\:\ 0x0061|if (isSameExceptionAs$FlowKt__ErrorsKt(r6, r1) != false) goto L29\l}"];
Node_72 [shape=record,label="{72\:\ 0x0063}"];
Node_73 [shape=record,label="{73\:\ 0x006b|if (isCancellationCause$FlowKt__ErrorsKt(r6, r7.getContext()) != false) goto L29\l}"];
Node_74 [shape=record,label="{74\:\ 0x006d|if (r1 != null) goto L23\l}"];
Node_75 [shape=record,label="{75\:\ 0x006f|RETURN\l|return r6\l}"];
Node_76 [shape=record,label="{76\:\ 0x0070}"];
Node_77 [shape=record,label="{77\:\ 0x0072|if ((r6 instanceof java.util.concurrent.CancellationException) == false) goto L27\l}"];
Node_78 [shape=record,label="{78\:\ 0x0074|kotlin.Exceptions.addSuppressed(r1, r6)\l}"];
Node_79 [shape=record,label="{79\:\ 0x0077|throw r1\l}"];
Node_80 [shape=record,label="{80\:\ 0x0078|kotlin.Exceptions.addSuppressed(r6, r1)\l}"];
Node_81 [shape=record,label="{81\:\ 0x007b|throw r6\l}"];
Node_82 [shape=record,label="{82\:\ 0x007c|throw r6\l}"];
Node_61 [shape=record,label="{61\:\ 0x0037|kotlin.ResultKt.throwOnFailure(r0)\lkotlin.jvm.internal.Ref$ObjectRef r2 = new kotlin.jvm.internal.Ref.ObjectRef()\l}"];
Node_85 [shape=record,label="{85\:\ 0x0040|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_62 [shape=record,label="{62\:\ 0x0040|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x0057, blocks: (B:62:0x0040), top: B:85:0x0040 \}\lCatch: all \-\> 0x0057\l|r7.L$0 = r2     \/\/ Catch: java.lang.Throwable \-\> L57\lr7.label = 1     \/\/ Catch: java.lang.Throwable \-\> L57\l}"];
Node_63 [shape=record,label="{63\:\ 0x0050|if (r5.collect(new kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2\<\>(r6, r2), r7) != r1) goto L35\l}"];
Node_64 [shape=record,label="{64\:\ 0x0052|RETURN\l|return r1\l}"];
Node_65 [shape=record,label="{65\:\ 0x0053}"];
Node_66 [shape=record,label="{66\:\ 0x0054|RETURN\lORIG_RETURN\l|return null\l}"];
Node_86 [shape=record,label="{86\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_68 [shape=record,label="{68\:\ 0x0057|ExcHandler: all \-\> 0x0057\l|java.lang.Throwable r6 = th\l}"];
Node_69 [shape=record,label="{69\:\ 0x0058|r5 = r2\l}"];
Node_51 [shape=record,label="{51\:\ 0x0014|kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1 r0 = new kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1(r7)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.FlowKt__ErrorsKt.catchImpl((r5v0 kotlinx.coroutines.flow.Flow\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlinx.coroutines.flow.FlowCollector\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.coroutines.Continuation\<? super java.lang.Throwable\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:67:0x0056 \-\> B:45:?, CROSS_EDGE: B:75:0x006f \-\> B:45:?, CROSS_EDGE: B:79:0x0077 \-\> B:45:?, CROSS_EDGE: B:81:0x007b \-\> B:45:?, CROSS_EDGE: B:82:0x007c \-\> B:45:?, CROSS_EDGE: B:71:0x0061 \-\> B:82:0x007c, CROSS_EDGE: B:83:0x0031 \-\> B:59:0x0035, CROSS_EDGE: B:64:0x0052 \-\> B:45:?, CROSS_EDGE: B:65:0x0053 \-\> B:66:0x0054, CROSS_EDGE: B:69:0x0058 \-\> B:70:0x0059, CROSS_EDGE: B:85:0x0040 \-\> B:68:0x0057, CROSS_EDGE: B:51:0x0014 \-\> B:52:0x0019, CROSS_EDGE: B:47:0x0002 \-\> B:51:0x0014\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0035, blocks: (B:57:0x0031), top: B:83:0x0031 \}, TryCatch #1 \{all \-\> 0x0057, blocks: (B:62:0x0040), top: B:85:0x0040 \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TT;\>;Lkotlin\/coroutines\/Continuation\<\-Ljava\/lang\/Throwable;\>;)Ljava\/lang\/Object;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [151=4]\}\l}"];
MethodNode -> Node_44;Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_51;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_53 -> Node_56;
Node_53 -> Node_61;
Node_54 -> Node_55;
Node_55 -> Node_45;
Node_56 -> Node_83;
Node_83 -> Node_57;
Node_83 -> Node_59;
Node_57 -> Node_84;
Node_57 -> Node_87;
Node_84 -> Node_59;
Node_87 -> Node_45;
Node_59 -> Node_70;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_82;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_82;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_75 -> Node_45;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_80;
Node_78 -> Node_79;
Node_79 -> Node_45;
Node_80 -> Node_81;
Node_81 -> Node_45;
Node_82 -> Node_45;
Node_61 -> Node_85;
Node_85 -> Node_62;
Node_85 -> Node_68;
Node_62 -> Node_63;
Node_62 -> Node_86;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_45;
Node_65 -> Node_66;
Node_66 -> Node_45;
Node_86 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_51 -> Node_52;
}

