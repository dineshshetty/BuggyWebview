digraph "CFG forkotlinx.coroutines.flow.FlowKt__ErrorsKt.retry(Lkotlinx\/coroutines\/flow\/Flow;JLkotlin\/jvm\/functions\/Function2;)Lkotlinx\/coroutines\/flow\/Flow;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST  (r0 I:??[long, double]) = (0 ??[long, double])  (LINE:94)\l0x0002: CMP_L  (r2 I:int) = (r4 I:long A[D('retries' long)]), (r0 I:long) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:16:0x0008 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0018 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3) =  kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3  (LINE:95)\l0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3)\l  (r4 I:long A[D('retries' long)])\l  (r6 I:kotlin.jvm.functions.Function2 A[D('predicate' kotlin.jvm.functions.Function2)])\l  (r1 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3.\<init\>(long, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation):void A[MD:(long, kotlin.jvm.functions.Function2\<? super java.lang.Throwable, ? super kotlin.coroutines.Continuation\<? super java.lang.Boolean\>, ? extends java.lang.Object\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3\>):void (m)]\l0x0011: CHECK_CAST (r0 I:kotlin.jvm.functions.Function4) = (kotlin.jvm.functions.Function4) (r0 I:??[OBJECT, ARRAY]) \l0x0013: INVOKE  (r0 I:kotlinx.coroutines.flow.Flow) = \l  (r3 I:kotlinx.coroutines.flow.Flow A[D('$this$retry' kotlinx.coroutines.flow.Flow)])\l  (r0 I:kotlin.jvm.functions.Function4)\l type: STATIC call: kotlinx.coroutines.flow.FlowKt.retryWhen(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function4):kotlinx.coroutines.flow.Flow A[MD:\<T\>:(kotlinx.coroutines.flow.Flow\<? extends T\>, kotlin.jvm.functions.Function4\<? super kotlinx.coroutines.flow.FlowCollector\<? super T\>, ? super java.lang.Throwable, ? super java.lang.Long, ? super kotlin.coroutines.Continuation\<? super java.lang.Boolean\>, ? extends java.lang.Object\>):kotlinx.coroutines.flow.Flow\<T\> (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:kotlinx.coroutines.flow.Flow\<T\>) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0018|0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:226)\l0x0019: INVOKE  (r1 I:java.lang.Long) = (r4 I:long A[D('retries' long)]) type: STATIC call: java.lang.Long.valueOf(long):java.lang.Long A[MD:(long):java.lang.Long (c)] (LINE:94)\l0x001d: CONST_STR  (r2 I:java.lang.String) =  \"Expected positive amount of retries, but had \" \l0x001f: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-FlowKt__ErrorsKt$retry$2' int)]) = (r2 I:java.lang.String), (r1 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x0023: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0025: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0029: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x002c|0x002c: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.Flow\<T\> kotlinx.coroutines.flow.FlowKt__ErrorsKt.retry((r3 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$retry' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('retries' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function2\<? super java.lang.Throwable, ? super kotlin.coroutines.Continuation\<? super java.lang.Boolean\>, ? extends java.lang.Object\> A[D('predicate' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x002c \-\> B:12:?, CROSS_EDGE: B:16:0x0008 \-\> B:17:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0019\-0x0023: r0 '$i$a$\-require\-FlowKt__ErrorsKt$retry$2' I\l  \-1 \-0x002c: r3 '$this$retry' Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x002c: r4 'retries' J\l  \-1 \-0x002c: r6 'predicate' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;JLkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Throwable;\-Lkotlin\/coroutines\/Continuation\<\-Ljava\/lang\/Boolean;\>;+Ljava\/lang\/Object;\>;)Lkotlinx\/coroutines\/flow\/Flow\<TT;\>;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

