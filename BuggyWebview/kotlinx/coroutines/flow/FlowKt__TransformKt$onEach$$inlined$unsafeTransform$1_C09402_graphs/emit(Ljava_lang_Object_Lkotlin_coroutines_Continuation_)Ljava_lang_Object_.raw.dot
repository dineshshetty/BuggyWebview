digraph "CFG forkotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1.2.emit(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r9 I:??[OBJECT, ARRAY]) kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1) = (kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1) kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$.inlined.unsafeTransform.1.2.1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IGET  (r9 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1) kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$.inlined.unsafeTransform.1.2.1.label int \l0x0010: ARITH  (r9 I:int) = (r9 I:int) \- (r2 I:int) \l0x0011: IPUT  (r9 I:int), (r0 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1) kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$.inlined.unsafeTransform.1.2.1.label int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r0 I:java.lang.Object) = \l  (r9 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$.inlined.unsafeTransform.1.2.1.result java.lang.Object \l0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0020: IGET  (r2 I:int) = \l  (r9 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$.inlined.unsafeTransform.1.2.1.label int  (LINE:48)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: SWITCH  (r2 I:??)\l case 0: goto B:14:0x003d\l case 1: goto B:13:0x0032\l case 2: goto B:12:0x002d\l default: goto B:10:0x0025 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: NEW_INSTANCE  (r8 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:224)\l0x0027: CONST_STR  (r9 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x0029: INVOKE  (r8 I:java.lang.IllegalStateException), (r9 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:48)\l0x002e: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0071|0x0071: SGET  (r8 I:kotlin.Unit A[D('$i$a$\-unsafeTransform\-FlowKt__TransformKt$onEach$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:224)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0073|RETURN\l|0x0073: RETURN  (r8 I:java.lang.Object A[D('$i$a$\-unsafeTransform\-FlowKt__TransformKt$onEach$1' int)]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$a$\-unsafeTransform\-FlowKt__TransformKt$onEach$1' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0033: IGET  (r2 I:java.lang.Object) = \l  (r9 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$.inlined.unsafeTransform.1.2.1.L$1 java.lang.Object \l0x0035: CHECK_CAST (r2 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r2 I:??[OBJECT, ARRAY]) \l0x0037: IGET  (r3 I:java.lang.Object) = \l  (r9 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$.inlined.unsafeTransform.1.2.1.L$0 java.lang.Object \l0x0039: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0062|0x0062: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$a$\-unsafeTransform\-FlowKt__TransformKt$onEach$1' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:224)\l0x0063: IPUT  \l  (r4 I:java.lang.Object)\l  (r9 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$.inlined.unsafeTransform.1.2.1.L$0 java.lang.Object \l0x0065: IPUT  \l  (r4 I:java.lang.Object)\l  (r9 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$.inlined.unsafeTransform.1.2.1.L$1 java.lang.Object \l0x0067: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0068: IPUT  \l  (r4 I:int)\l  (r9 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$.inlined.unsafeTransform.1.2.1.label int \l0x006a: INVOKE  (r2 I:java.lang.Object A[D('$this$onEach_u24lambda_u2d7' kotlinx.coroutines.flow.FlowCollector)]) = \l  (r2 I:kotlinx.coroutines.flow.FlowCollector A[D('$this$onEach_u24lambda_u2d7' kotlinx.coroutines.flow.FlowCollector)])\l  (r3 I:java.lang.Object A[D('value' java.lang.Object)])\l  (r9 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.flow.FlowCollector.emit(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x006e|0x006e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$onEach_u24lambda_u2d7' kotlinx.coroutines.flow.FlowCollector)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0071 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0070|RETURN\l|0x0070: RETURN  (r1 I:java.lang.Object)  (LINE:48)\l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0040: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0041: IGET  (r3 I:kotlinx.coroutines.flow.FlowCollector) = \l  (r2 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2)])\l kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1.2.$this_unsafeFlow kotlinx.coroutines.flow.FlowCollector  (LINE:53)\l0x0043: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$continuation' kotlin.coroutines.Continuation)]) \l0x0044: CHECK_CAST (r4 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r4 I:??[OBJECT, ARRAY]) \l0x0046: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0047: IGET  (r5 I:kotlin.jvm.functions.Function2) = \l  (r2 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2)])\l kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1.2.$action$inlined kotlin.jvm.functions.Function2  (LINE:223)\l0x0049: IPUT  \l  (r8 I:java.lang.Object A[D('value' java.lang.Object)])\l  (r9 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$.inlined.unsafeTransform.1.2.1.L$0 java.lang.Object \l0x004b: IPUT  \l  (r3 I:java.lang.Object A[D('$this$onEach_u24lambda_u2d7' kotlinx.coroutines.flow.FlowCollector)])\l  (r9 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$.inlined.unsafeTransform.1.2.1.L$1 java.lang.Object \l0x004d: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x004e: IPUT  \l  (r6 I:int)\l  (r9 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$.inlined.unsafeTransform.1.2.1.label int \l0x0050: CONST  (r6 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l0x0051: INVOKE  (r6 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x0054: INVOKE  (r5 I:java.lang.Object) = \l  (r5 I:kotlin.jvm.functions.Function2)\l  (r8 I:java.lang.Object A[D('value' java.lang.Object)])\l  (r9 I:java.lang.Object A[D('$continuation' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x0058: CONST  (r6 I:??[int, float, short, byte, char]) = (7 ??[int, float, short, byte, char]) \l0x0059: INVOKE  (r6 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x005c|0x005c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x005f \l}"];
Node_16 [shape=record,label="{16\:\ 0x005e|RETURN\l|0x005e: RETURN  (r1 I:java.lang.Object)  (LINE:48)\l}"];
Node_17 [shape=record,label="{17\:\ 0x005f|0x005f: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('$this$onEach_u24lambda_u2d7' kotlinx.coroutines.flow.FlowCollector)])  (LINE:223)\l0x0060: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('$this$onEach_u24lambda_u2d7' kotlinx.coroutines.flow.FlowCollector)]) = (r8 I:??[OBJECT, ARRAY] A[D('value' java.lang.Object)]) \l0x0061: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('value' java.lang.Object)]) = \l  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$a$\-unsafeTransform\-FlowKt__TransformKt$onEach$1' int)])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1) =  kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1 \l0x0016: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1)\l  (r7 I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2)\l  (r9 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$.inlined.unsafeTransform.1.2.1.\<init\>(kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2, kotlin.coroutines.Continuation):void (m)]\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1.2.emit((r7 'this' I:kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2\<T\> A[IMMUTABLE_TYPE, THIS]), (r8 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:22:0x0073 \-\> B:1:?, CROSS_EDGE: B:20:0x0070 \-\> B:1:?, CROSS_EDGE: B:19:0x006e \-\> B:21:0x0071, CROSS_EDGE: B:16:0x005e \-\> B:1:?, CROSS_EDGE: B:17:0x005f \-\> B:18:0x0062, CROSS_EDGE: B:7:0x0014 \-\> B:8:0x0019, CROSS_EDGE: B:3:0x0002 \-\> B:7:0x0014\lTYPE_VARS: [T]\lSIGNATURE: (TT;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x001c\-0x0025: r0 '$result' Ljava\/lang\/Object;\l  0x001a\-0x0025: r9 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x002e\-0x0032: r8 '$i$a$\-unsafeTransform\-FlowKt__TransformKt$onEach$1' I\l  0x0037\-0x003d: r2 '$this$onEach_u24lambda_u2d7' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x0039\-0x003d: r3 'value' Ljava\/lang\/Object;\l  0x0033\-0x003d: r8 '$i$a$\-unsafeTransform\-FlowKt__TransformKt$onEach$1' I\l  0x0041\-0x005c: r2 'this' Lkotlinx\/coroutines\/flow\/FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2;\l  0x0047\-0x0062: r4 '$i$a$\-unsafeTransform\-FlowKt__TransformKt$onEach$1' I\l  0x0043\-0x0062: r3 '$this$onEach_u24lambda_u2d7' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x0041\-0x0062: r8 'value' Ljava\/lang\/Object;\l  0x0062\-0x006e: r2 '$this$onEach_u24lambda_u2d7' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x0062\-0x006e: r3 'value' Ljava\/lang\/Object;\l  0x0062\-0x0073: r8 '$i$a$\-unsafeTransform\-FlowKt__TransformKt$onEach$1' I\l  0x002d\-0x007d: r0 '$result' Ljava\/lang\/Object;\l  0x002d\-0x007d: r9 '$continuation' Lkotlin\/coroutines\/Continuation;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [48=4]\}\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.FlowCollector.emit(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_9 -> Node_13;
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_12 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_1;
Node_13 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_1;
Node_17 -> Node_18;
Node_7 -> Node_8;
}

