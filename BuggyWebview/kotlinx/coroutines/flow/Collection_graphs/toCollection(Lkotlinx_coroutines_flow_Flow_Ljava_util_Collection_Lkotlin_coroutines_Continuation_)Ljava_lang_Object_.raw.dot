digraph "CFG forkotlinx.coroutines.flow.FlowKt__CollectionKt.toCollection(Lkotlinx\/coroutines\/flow\/Flow;Ljava\/util\/Collection;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r6 I:??[OBJECT, ARRAY]) kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0014 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1) = (kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1) kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0014 \l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|0x000e: IGET  (r6 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1) kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.label int \l0x0010: ARITH  (r6 I:int) = (r6 I:int) \- (r2 I:int) \l0x0011: IPUT  (r6 I:int), (r0 I:kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1) kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.label int \l}"];
Node_27 [shape=record,label="{27\:\ 0x0019|0x0019: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r0 I:java.lang.Object) = (r6 I:kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.result java.lang.Object \l0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0020: IGET  (r2 I:int) = (r6 I:kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.label int  (LINE:25)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|0x0022: SWITCH  (r2 I:??)\l case 0: goto B:32:0x0035\l case 1: goto B:31:0x002d\l default: goto B:29:0x0025 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0025|0x0025: NEW_INSTANCE  (r4 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:29)\l0x0027: CONST_STR  (r5 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x0029: INVOKE  (r4 I:java.lang.IllegalStateException), (r5 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x002c|0x002c: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x002d|0x002d: IGET  (r4 I:java.lang.Object) = (r6 I:kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.L$0 java.lang.Object  (LINE:25)\l0x002f: CHECK_CAST (r4 I:java.util.Collection) = (java.util.Collection) (r4 I:??[OBJECT, ARRAY]) \l0x0031: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x004c: RETURN  (r4 I:java.lang.Object A[D('destination' java.util.Collection)]) A[SYNTHETIC] (LINE:29)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0035|0x0035: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0038: NEW_INSTANCE  (r2 I:kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2) =  kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2  (LINE:26)\l0x003a: INVOKE  \l  (r2 I:kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2)\l  (r5 I:java.util.Collection A[D('destination' java.util.Collection)])\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2.\<init\>(java.util.Collection):void A[MD:(java.util.Collection):void (m)]\l0x003d: CHECK_CAST (r2 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r2 I:??[OBJECT, ARRAY]) \l0x003f: IPUT  \l  (r5 I:java.lang.Object A[D('destination' java.util.Collection)])\l  (r6 I:kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.L$0 java.lang.Object \l0x0041: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0042: IPUT  \l  (r3 I:int)\l  (r6 I:kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.label int \l0x0044: INVOKE  (r4 I:java.lang.Object A[D('$this$toCollection' kotlinx.coroutines.flow.Flow)]) = \l  (r4 I:kotlinx.coroutines.flow.Flow A[D('$this$toCollection' kotlinx.coroutines.flow.Flow)])\l  (r2 I:kotlinx.coroutines.flow.FlowCollector)\l  (r6 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0048|0x0048: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$toCollection' kotlinx.coroutines.flow.Flow)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x004b \l}"];
Node_34 [shape=record,label="{34\:\ 0x004a|RETURN\l|0x004a: RETURN  (r1 I:java.lang.Object)  (LINE:25)\l}"];
Node_35 [shape=record,label="{35\:\ 0x004b|0x004b: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('destination' java.util.Collection)])  (LINE:26)\l}"];
Node_36 [shape=record,label="{36\:\ 0x004c|RETURN\lORIG_RETURN\l|0x004c: RETURN  (r4 I:java.lang.Object A[D('destination' java.util.Collection)])  (LINE:29)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1) =  kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1 \l0x0016: INVOKE  (r0 I:kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1), (r6 I:kotlin.coroutines.Continuation) type: DIRECT call: kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.\<init\>(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1\>):void (m)]\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.FlowKt__CollectionKt.toCollection((r4 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:C extends java.util.Collection\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.coroutines.Continuation\<? super C extends java.util.Collection\<? super T\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:36:0x004c \-\> B:20:?, CROSS_EDGE: B:34:0x004a \-\> B:20:?, CROSS_EDGE: B:35:0x004b \-\> B:36:0x004c, CROSS_EDGE: B:26:0x0014 \-\> B:27:0x0019, CROSS_EDGE: B:22:0x0002 \-\> B:26:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x0025: r0 '$result' Ljava\/lang\/Object;\l  0x001a\-0x0025: r6 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x0031\-0x0035: r4 'destination' Ljava\/util\/Collection;\l  0x0038\-0x0048: r4 '$this$toCollection' Lkotlinx\/coroutines\/flow\/Flow;\l  0x0038\-0x004c: r5 'destination' Ljava\/util\/Collection;\l  0x002d\-0x0055: r0 '$result' Ljava\/lang\/Object;\l  0x004c\-0x0055: r4 'destination' Ljava\/util\/Collection;\l  0x002d\-0x0055: r6 '$continuation' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [C extends java.util.Collection\<? super T\>, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;C::Ljava\/util\/Collection\<\-TT;\>;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;TC;Lkotlin\/coroutines\/Continuation\<\-TC;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_31;
Node_28 -> Node_32;
Node_29 -> Node_30;
Node_30 -> Node_20;
Node_31 -> Node_37;
Node_37 -> Node_20;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_20;
Node_35 -> Node_36;
Node_36 -> Node_20;
Node_26 -> Node_27;
}

