digraph "CFG forkotlinx.coroutines.flow.FlowKt__ReduceKt$single$2.emit(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:kotlin.jvm.internal.Ref$ObjectRef\<java.lang.Object\>) = (r2 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2) kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2.$result kotlin.jvm.internal.Ref$ObjectRef  (LINE:58)\l0x0002: IGET  (r0 I:T) = (r0 I:kotlin.jvm.internal.Ref$ObjectRef) kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object \l0x0004: SGET  (r1 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL kotlinx.coroutines.internal.Symbol \l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x000a \l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|0x0008: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0014 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|0x000d: IGET  (r0 I:kotlin.jvm.internal.Ref$ObjectRef\<java.lang.Object\>) = (r2 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2) kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2.$result kotlin.jvm.internal.Ref$ObjectRef  (LINE:59)\l0x000f: IPUT  (r3 I:T A[D('value' java.lang.Object)]), (r0 I:kotlin.jvm.internal.Ref$ObjectRef) kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object \l0x0011: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:60)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:java.lang.Object) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|0x0014: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:173)\l0x0016: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException A[D('$i$a$\-require\-FlowKt__ReduceKt$single$2$1' int)]) =  java.lang.IllegalArgumentException \l0x0018: CONST_STR  (r1 I:java.lang.String) =  \"Flow has more than one element\" \l0x001a: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x001e: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0021|0x0021: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2.emit((r2 'this' I:kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2\<T\> A[IMMUTABLE_TYPE, THIS]), (r3 I:T A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0021 \-\> B:12:?, CROSS_EDGE: B:16:0x000a \-\> B:17:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (TT;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x0015\-0x0016: r0 '$i$a$\-require\-FlowKt__ReduceKt$single$2$1' I\l  \-1 \-0x0021: r3 'value' Ljava\/lang\/Object;\l  \-1 \-0x0021: r4 '$completion' Lkotlin\/coroutines\/Continuation;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.FlowCollector.emit(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

