digraph "CFG forkotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.emit(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r9 I:??[OBJECT, ARRAY]) kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0014 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1) = (kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1) kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0014 \l}"];
Node_33 [shape=record,label="{33\:\ 0x000e|0x000e: IGET  (r9 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1) kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.1.label int \l0x0010: ARITH  (r9 I:int) = (r9 I:int) \- (r2 I:int) \l0x0011: IPUT  (r9 I:int), (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1) kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.1.label int \l}"];
Node_35 [shape=record,label="{35\:\ 0x0019|0x0019: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r0 I:java.lang.Object) = \l  (r9 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.1.result java.lang.Object \l0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0020: IGET  (r2 I:int) = \l  (r9 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.1.label int \l0x0022: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0023|0x0023: SWITCH  (r2 I:??)\l case 0: goto B:40:0x003a\l case 1: goto B:39:0x002e\l default: goto B:37:0x0026 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0026|0x0026: NEW_INSTANCE  (r8 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:134)\l0x0028: CONST_STR  (r9 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x002a: INVOKE  (r8 I:java.lang.IllegalStateException), (r9 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x002d|0x002d: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x002e|0x002e: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:143)\l0x002f: IGET  (r1 I:java.lang.Object) = \l  (r9 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.1.L$1 java.lang.Object \l0x0031: IGET  (r2 I:java.lang.Object) = \l  (r9 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.1.L$0 java.lang.Object \l0x0033: CHECK_CAST (r2 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2) = (kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2) (r2 I:??[OBJECT, ARRAY]) \l0x0035: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0038: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x005b|0x005b: CHECK_CAST (r5 I:java.lang.Boolean) = (java.lang.Boolean) (r5 I:??[OBJECT, ARRAY]) \l0x005d: INVOKE  (r4 I:boolean) = (r5 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0061|0x0061: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x006b \l}"];
Node_46 [shape=record,label="{46\:\ 0x0063|0x0063: IGET  (r3 I:kotlin.jvm.internal.Ref$ObjectRef) = \l  (r2 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2)])\l kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.$result$inlined kotlin.jvm.internal.Ref$ObjectRef  (LINE:144)\l0x0065: IPUT  (r1 I:T A[D('it' java.lang.Object)]), (r3 I:kotlin.jvm.internal.Ref$ObjectRef) kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object \l0x0067: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:145)\l}"];
Node_49 [shape=record,label="{49\:\ 0x006b|0x006b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0070 \l}"];
Node_50 [shape=record,label="{50\:\ 0x006d|0x006d: SGET  (r8 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:134)\l}"];
Node_51 [shape=record,label="{51\:\ 0x006f|RETURN\l|0x006f: RETURN  (r8 I:java.lang.Object) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0070|0x0070: NEW_INSTANCE  (r8 I:kotlinx.coroutines.flow.internal.AbortFlowException) =  kotlinx.coroutines.flow.internal.AbortFlowException  (LINE:132)\l0x0072: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2)]) \l0x0073: CHECK_CAST (r1 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r1 I:??[OBJECT, ARRAY]) \l0x0075: INVOKE  (r8 I:kotlinx.coroutines.flow.internal.AbortFlowException), (r1 I:kotlinx.coroutines.flow.FlowCollector) type: DIRECT call: kotlinx.coroutines.flow.internal.AbortFlowException.\<init\>(kotlinx.coroutines.flow.FlowCollector):void A[MD:(kotlinx.coroutines.flow.FlowCollector\<?\>):void (m)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0078|0x0078: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_40 [shape=record,label="{40\:\ 0x003a|0x003a: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x003d: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x003e: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$continuation' kotlin.coroutines.Continuation)])  (LINE:131)\l0x003f: CHECK_CAST (r4 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r4 I:??[OBJECT, ARRAY]) \l0x0041: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0042: IGET  (r5 I:kotlin.jvm.functions.Function2) = \l  (r2 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2 A[D('this' kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2)])\l kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.$predicate$inlined kotlin.jvm.functions.Function2  (LINE:143)\l0x0044: IPUT  \l  (r2 I:java.lang.Object A[D('this' kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2)])\l  (r9 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.1.L$0 java.lang.Object \l0x0046: IPUT  \l  (r8 I:java.lang.Object A[D('it' java.lang.Object)])\l  (r9 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.1.L$1 java.lang.Object \l0x0048: IPUT  \l  (r3 I:int)\l  (r9 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.1.label int \l0x004a: CONST  (r6 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l0x004b: INVOKE  (r6 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x004e: INVOKE  (r5 I:java.lang.Object) = \l  (r5 I:kotlin.jvm.functions.Function2)\l  (r8 I:java.lang.Object A[D('it' java.lang.Object)])\l  (r9 I:java.lang.Object A[D('$continuation' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x0052: CONST  (r6 I:??[int, float, short, byte, char]) = (7 ??[int, float, short, byte, char]) \l0x0053: INVOKE  (r6 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0056|0x0056: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0059 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0058|RETURN\l|0x0058: RETURN  (r1 I:java.lang.Object) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0059|0x0059: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('it' java.lang.Object)]) \l0x005a: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('it' java.lang.Object)]) = \l  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$a$\-collectWhile\-FlowKt__ReduceKt$firstOrNull$4' int)])\l \l}"];
Node_34 [shape=record,label="{34\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1) =  kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1 \l0x0016: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1)\l  (r7 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2)\l  (r9 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.1.\<init\>(kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2, kotlin.coroutines.Continuation):void (m)]\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.emit((r7 'this' I:kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2 A[IMMUTABLE_TYPE, THIS]), (r8 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:51:0x006f \-\> B:28:?, CROSS_EDGE: B:53:0x0078 \-\> B:28:?, CROSS_EDGE: B:45:0x0061 \-\> B:49:0x006b, CROSS_EDGE: B:42:0x0058 \-\> B:28:?, CROSS_EDGE: B:43:0x0059 \-\> B:44:0x005b, CROSS_EDGE: B:34:0x0014 \-\> B:35:0x0019, CROSS_EDGE: B:30:0x0002 \-\> B:34:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (TT;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x001c\-0x0026: r0 '$result' Ljava\/lang\/Object;\l  0x001a\-0x0026: r9 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x0031\-0x003a: r1 'it' Ljava\/lang\/Object;\l  0x0035\-0x003a: r2 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2;\l  0x002f\-0x003a: r8 '$i$a$\-collectWhile\-FlowKt__ReduceKt$firstOrNull$4' I\l  0x003e\-0x0041: r8 'value' Ljava\/lang\/Object;\l  0x0042\-0x005b: r4 '$i$a$\-collectWhile\-FlowKt__ReduceKt$firstOrNull$4' I\l  0x0041\-0x005b: r8 'it' Ljava\/lang\/Object;\l  0x005b\-0x006b: r1 'it' Ljava\/lang\/Object;\l  0x005b\-0x006b: r8 '$i$a$\-collectWhile\-FlowKt__ReduceKt$firstOrNull$4' I\l  0x002e\-0x0081: r0 '$result' Ljava\/lang\/Object;\l  0x003e\-0x0081: r2 'this' Lkotlinx\/coroutines\/flow\/FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2;\l  0x002e\-0x0081: r9 '$continuation' Lkotlin\/coroutines\/Continuation;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.FlowCollector.emit(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_39;
Node_36 -> Node_40;
Node_37 -> Node_38;
Node_38 -> Node_28;
Node_39 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_49;
Node_46 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_52;
Node_50 -> Node_51;
Node_51 -> Node_28;
Node_52 -> Node_53;
Node_53 -> Node_28;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_28;
Node_43 -> Node_44;
Node_34 -> Node_35;
}

