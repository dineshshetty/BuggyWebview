digraph "CFG forkotlinx.coroutines.flow.SharedFlowSlot.allocateLocked(Ljava\/lang\/Object;)Z" {
subgraph cluster_Region_621349519 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|RETURN\l|return allocateLocked(r2)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ boolean kotlinx.coroutines.flow.SharedFlowSlot.allocateLocked((r1v0 'this' kotlinx.coroutines.flow.SharedFlowSlot A[IMMUTABLE_TYPE, THIS]), (r2v0 kotlinx.coroutines.flow.SharedFlowImpl\<?\> A[D('flow' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l DEBUG: \l \-\> Method arguments types fixed to match base method, original types: [java.lang.Object]\}\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot.allocateLocked(F):boolean]\l}"];
MethodNode -> Node_0;Node_3 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
}

