digraph "CFG forkotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|java.lang.Object r0 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_23 [shape=record,label="{23\:\ 0x0006|switch(r7.label) \{\l    case 0: goto L15;\l    case 1: goto L14;\l    case 2: goto L13;\l    case 3: goto L6;\l    default: goto L3;\l\}\l}"];
Node_24 [shape=record,label="{24\:\ 0x0009}"];
Node_25 [shape=record,label="{25\:\ 0x0010|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|r1 = r7\lkotlinx.coroutines.channels.ProducerScope r2 = (kotlinx.coroutines.channels.ProducerScope) r1.L$0\lkotlin.ResultKt.throwOnFailure(r8)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0046|PHI: r1 r2 \l  PHI: (r1v5 kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3) = (r1v1 kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3), (r1v2 kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3), (r1v4 kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3), (r1v6 kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3) binds: [B:30:0x0042, B:28:0x0023, B:37:0x0069, B:26:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v7 '$this$produce' kotlinx.coroutines.channels.ProducerScope) = (r2v1 '$this$produce' kotlinx.coroutines.channels.ProducerScope), (r2v3 '$this$produce' kotlinx.coroutines.channels.ProducerScope), (r2v6 '$this$produce' kotlinx.coroutines.channels.ProducerScope), (r2v9 '$this$produce' kotlinx.coroutines.channels.ProducerScope) binds: [B:30:0x0042, B:28:0x0023, B:37:0x0069, B:26:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|r1.L$0 = r2\lr1.label = 2\l}"];
Node_34 [shape=record,label="{34\:\ 0x0058|if (r2.getChannel().send(kotlin.Unit.INSTANCE, r1) != r0) goto L10\l}"];
Node_35 [shape=record,label="{35\:\ 0x005a|RETURN\l|return r0\l}"];
Node_36 [shape=record,label="{36\:\ 0x005b|PHI: r1 r2 \l  PHI: (r1v4 kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3) = (r1v3 kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3), (r1v5 kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3) binds: [B:27:0x001a, B:34:0x0058] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v6 '$this$produce' kotlinx.coroutines.channels.ProducerScope) = (r2v5 '$this$produce' kotlinx.coroutines.channels.ProducerScope), (r2v7 '$this$produce' kotlinx.coroutines.channels.ProducerScope) binds: [B:27:0x001a, B:34:0x0058] A[DONT_GENERATE, DONT_INLINE]\l|r1.L$0 = r2\lr1.label = 3\l}"];
Node_37 [shape=record,label="{37\:\ 0x0069|if (kotlinx.coroutines.DelayKt.delay(r1.$delayMillis, r1) != r0) goto L7\l}"];
Node_38 [shape=record,label="{38\:\ 0x006b|RETURN\l|return r0\l}"];
Node_27 [shape=record,label="{27\:\ 0x001a|r1 = r7\lkotlinx.coroutines.channels.ProducerScope r2 = (kotlinx.coroutines.channels.ProducerScope) r1.L$0\lkotlin.ResultKt.throwOnFailure(r8)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0023|r1 = r7\lkotlinx.coroutines.channels.ProducerScope r2 = (kotlinx.coroutines.channels.ProducerScope) r1.L$0\lkotlin.ResultKt.throwOnFailure(r8)\l}"];
Node_29 [shape=record,label="{29\:\ 0x002c|kotlin.ResultKt.throwOnFailure(r8)\lr1 = r7\lkotlinx.coroutines.channels.ProducerScope r2 = (kotlinx.coroutines.channels.ProducerScope) r1.L$0\lr1.L$0 = r2\lr1.label = 1\l}"];
Node_30 [shape=record,label="{30\:\ 0x0042|if (kotlinx.coroutines.DelayKt.delay(r1.$initialDelayMillis, r1) != r0) goto L7\l}"];
Node_31 [shape=record,label="{31\:\ 0x0044|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.invokeSuspend((r7v0 'this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 A[IMMUTABLE_TYPE, THIS]), (r8v0 '$result' java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:35:0x005a \-\> B:21:?, CROSS_EDGE: B:38:0x006b \-\> B:21:?, BACK_EDGE: B:37:0x0069 \-\> B:33:0x0046, CROSS_EDGE: B:27:0x001a \-\> B:36:0x005b, CROSS_EDGE: B:28:0x0023 \-\> B:33:0x0046, CROSS_EDGE: B:31:0x0044 \-\> B:21:?, CROSS_EDGE: B:30:0x0042 \-\> B:33:0x0046\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Unsupported multi\-entry loop pattern (BACK_EDGE: B:37:0x0069 \-\> B:33:0x0046). Please submit an issue!!!\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [313=5]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_26;
Node_23 -> Node_27;
Node_23 -> Node_28;
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_21;
Node_26 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_21;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_33;
Node_38 -> Node_21;
Node_27 -> Node_36;
Node_28 -> Node_33;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_21;
}

