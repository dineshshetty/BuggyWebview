digraph "CFG forkotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r7 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3) kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.label int  (LINE:313)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:29:0x002c\l case 1: goto B:28:0x0023\l case 2: goto B:27:0x001a\l case 3: goto B:26:0x0011\l default: goto B:24:0x0009 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|0x0009: NEW_INSTANCE  (r8 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:317)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r8 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0010|0x0010: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|0x0011: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY])  (LINE:313)\l0x0012: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.L$0 java.lang.Object \l0x0014: CHECK_CAST (r2 I:kotlinx.coroutines.channels.ProducerScope) = (kotlinx.coroutines.channels.ProducerScope) (r2 I:??[OBJECT, ARRAY]) \l0x0016: INVOKE  (r8 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0046|0x0046: INVOKE  (r3 I:kotlinx.coroutines.channels.SendChannel) = (r2 I:kotlinx.coroutines.channels.ProducerScope A[D('$this$produce' kotlinx.coroutines.channels.ProducerScope)]) type: INTERFACE call: kotlinx.coroutines.channels.ProducerScope.getChannel():kotlinx.coroutines.channels.SendChannel A[MD:():kotlinx.coroutines.channels.SendChannel\<E\> (m)] (LINE:316)\l0x004a: SGET  (r4 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l0x004c: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)]) \l0x004d: CHECK_CAST (r5 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r5 I:??[OBJECT, ARRAY]) \l0x004f: IPUT  \l  (r2 I:java.lang.Object A[D('$this$produce' kotlinx.coroutines.channels.ProducerScope)])\l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.L$0 java.lang.Object \l0x0051: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0052: IPUT  \l  (r6 I:int)\l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.label int \l0x0054: INVOKE  (r3 I:java.lang.Object) = (r3 I:kotlinx.coroutines.channels.SendChannel), (r4 I:java.lang.Object), (r5 I:kotlin.coroutines.Continuation) type: INTERFACE call: kotlinx.coroutines.channels.SendChannel.send(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(E, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0058|0x0058: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x005b \l}"];
Node_35 [shape=record,label="{35\:\ 0x005a|RETURN\l|0x005a: RETURN  (r0 I:java.lang.Object)  (LINE:313)\l}"];
Node_36 [shape=record,label="{36\:\ 0x005b|0x005b: IGET  (r3 I:long) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.$delayMillis long  (LINE:317)\l0x005d: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)]) \l0x005e: CHECK_CAST (r5 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r5 I:??[OBJECT, ARRAY]) \l0x0060: IPUT  \l  (r2 I:java.lang.Object A[D('$this$produce' kotlinx.coroutines.channels.ProducerScope)])\l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.L$0 java.lang.Object \l0x0062: CONST  (r6 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0063: IPUT  \l  (r6 I:int)\l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.label int \l0x0065: INVOKE  (r3 I:java.lang.Object) = (r3 I:long), (r5 I:kotlin.coroutines.Continuation) type: STATIC call: kotlinx.coroutines.DelayKt.delay(long, kotlin.coroutines.Continuation):java.lang.Object A[MD:(long, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0069|0x0069: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0046 \l}"];
Node_38 [shape=record,label="{38\:\ 0x006b|RETURN\l|0x006b: RETURN  (r0 I:java.lang.Object)  (LINE:313)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001a|0x001a: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)]) = (r7 I:??[OBJECT, ARRAY]) \l0x001b: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.L$0 java.lang.Object \l0x001d: CHECK_CAST (r2 I:kotlinx.coroutines.channels.ProducerScope) = (kotlinx.coroutines.channels.ProducerScope) (r2 I:??[OBJECT, ARRAY]) \l0x001f: INVOKE  (r8 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0023|0x0023: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)]) = (r7 I:??[OBJECT, ARRAY]) \l0x0024: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.L$0 java.lang.Object \l0x0026: CHECK_CAST (r2 I:kotlinx.coroutines.channels.ProducerScope) = (kotlinx.coroutines.channels.ProducerScope) (r2 I:??[OBJECT, ARRAY]) \l0x0028: INVOKE  (r8 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x002c|0x002c: INVOKE  (r8 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x002f: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0030: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.L$0 java.lang.Object \l0x0032: CHECK_CAST (r2 I:kotlinx.coroutines.channels.ProducerScope) = (kotlinx.coroutines.channels.ProducerScope) (r2 I:??[OBJECT, ARRAY]) \l0x0034: IGET  (r3 I:long) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.$initialDelayMillis long  (LINE:314)\l0x0036: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)]) \l0x0037: CHECK_CAST (r5 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r5 I:??[OBJECT, ARRAY]) \l0x0039: IPUT  \l  (r2 I:java.lang.Object A[D('$this$produce' kotlinx.coroutines.channels.ProducerScope)])\l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.L$0 java.lang.Object \l0x003b: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x003c: IPUT  \l  (r6 I:int)\l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.label int \l0x003e: INVOKE  (r3 I:java.lang.Object) = (r3 I:long), (r5 I:kotlin.coroutines.Continuation) type: STATIC call: kotlinx.coroutines.DelayKt.delay(long, kotlin.coroutines.Continuation):java.lang.Object A[MD:(long, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0042|0x0042: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0046 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0044|RETURN\l|0x0044: RETURN  (r0 I:java.lang.Object)  (LINE:313)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.invokeSuspend((r7 'this' I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:35:0x005a \-\> B:21:?, CROSS_EDGE: B:38:0x006b \-\> B:21:?, BACK_EDGE: B:37:0x0069 \-\> B:33:0x0046, CROSS_EDGE: B:27:0x001a \-\> B:36:0x005b, CROSS_EDGE: B:28:0x0023 \-\> B:33:0x0046, CROSS_EDGE: B:31:0x0044 \-\> B:21:?, CROSS_EDGE: B:30:0x0042 \-\> B:33:0x0046\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x001a: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__DelayKt$fixedPeriodTicker$3;\l  0x0016\-0x001a: r2 '$this$produce' Lkotlinx\/coroutines\/channels\/ProducerScope;\l  0x0012\-0x001a: r8 '$result' Ljava\/lang\/Object;\l  0x001b\-0x0023: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__DelayKt$fixedPeriodTicker$3;\l  0x001f\-0x0023: r2 '$this$produce' Lkotlinx\/coroutines\/channels\/ProducerScope;\l  0x001b\-0x0023: r8 '$result' Ljava\/lang\/Object;\l  0x0024\-0x002c: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__DelayKt$fixedPeriodTicker$3;\l  0x0028\-0x002c: r2 '$this$produce' Lkotlinx\/coroutines\/channels\/ProducerScope;\l  0x0024\-0x002c: r8 '$result' Ljava\/lang\/Object;\l  0x0030\-0x0079: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__DelayKt$fixedPeriodTicker$3;\l  0x0034\-0x0079: r2 '$this$produce' Lkotlinx\/coroutines\/channels\/ProducerScope;\l  0x0030\-0x0079: r8 '$result' Ljava\/lang\/Object;\lJadxCommentsAttr\{\l WARN: \l \-\> Unsupported multi\-entry loop pattern (BACK_EDGE: B:37:0x0069 \-\> B:33:0x0046). Please submit an issue!!!\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [313=5]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_26;
Node_23 -> Node_27;
Node_23 -> Node_28;
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_21;
Node_26 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_21;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_33;
Node_38 -> Node_21;
Node_27 -> Node_36;
Node_28 -> Node_33;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_21;
}

