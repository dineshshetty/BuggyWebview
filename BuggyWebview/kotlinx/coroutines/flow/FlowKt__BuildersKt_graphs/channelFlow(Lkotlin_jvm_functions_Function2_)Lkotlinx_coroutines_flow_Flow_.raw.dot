digraph "CFG forkotlinx.coroutines.flow.FlowKt__BuildersKt.channelFlow(Lkotlin\/jvm\/functions\/Function2;)Lkotlinx\/coroutines\/flow\/Flow;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r7 I:kotlinx.coroutines.flow.ChannelFlowBuilder) =  kotlinx.coroutines.flow.ChannelFlowBuilder  (LINE:246)\l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: CONST  (r5 I:??[int, float, short, byte, char]) = (14 ??[int, float, short, byte, char]) \l0x0007: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0009: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('block' kotlin.jvm.functions.Function2)]) \l0x000a: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.ChannelFlowBuilder)\l  (r1 I:kotlin.jvm.functions.Function2)\l  (r2 I:kotlin.coroutines.CoroutineContext)\l  (r3 I:int)\l  (r4 I:kotlinx.coroutines.channels.BufferOverflow)\l  (r5 I:int)\l  (r6 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlinx.coroutines.flow.ChannelFlowBuilder.\<init\>(kotlin.jvm.functions.Function2, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.channels.BufferOverflow, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(kotlin.jvm.functions.Function2, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.channels.BufferOverflow, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l0x000d: CHECK_CAST (r7 I:kotlinx.coroutines.flow.Flow) = (kotlinx.coroutines.flow.Flow) (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|0x000f: RETURN  (r7 I:kotlinx.coroutines.flow.Flow\<T\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.Flow\<T\> kotlinx.coroutines.flow.FlowKt__BuildersKt.channelFlow((r8 I:kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.channels.ProducerScope\<? super T\>, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\> A[D('block' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000f: r8 'block' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/jvm\/functions\/Function2\<\-Lkotlinx\/coroutines\/channels\/ProducerScope\<\-TT;\>;\-Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;+Ljava\/lang\/Object;\>;)Lkotlinx\/coroutines\/flow\/Flow\<TT;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

