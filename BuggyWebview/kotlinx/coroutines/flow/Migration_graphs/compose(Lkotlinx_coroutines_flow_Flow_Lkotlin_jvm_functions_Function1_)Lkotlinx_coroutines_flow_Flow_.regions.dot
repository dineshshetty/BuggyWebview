digraph "CFG forkotlinx.coroutines.flow.FlowKt__MigrationKt.compose(Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/jvm\/functions\/Function1;)Lkotlinx\/coroutines\/flow\/Flow;" {
subgraph cluster_Region_700719653 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlinx.coroutines.flow.FlowKt.noImpl()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|throw new kotlin.ExceptionsH()\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.Flow\<R\> kotlinx.coroutines.flow.FlowKt__MigrationKt.compose((r1v0 kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$compose' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 kotlin.jvm.functions.Function1\<? super kotlinx.coroutines.flow.Flow\<? extends T\>, ? extends kotlinx.coroutines.flow.Flow\<? extends R\>\> A[D('transformer' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>ERROR:Lkotlin\/DeprecationLevel;\}, message=Flow analogue of 'compose' is 'let', replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=let(transformer), imports=[[]]\}\}\}\}\}\}\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;+Lkotlinx\/coroutines\/flow\/Flow\<+TR;\>;\>;)Lkotlinx\/coroutines\/flow\/Flow\<TR;\>;\l}"];
MethodNode -> Node_4;Node_6 -> Node_7;
Node_7 -> Node_5;
Node_4 -> Node_6;
}

