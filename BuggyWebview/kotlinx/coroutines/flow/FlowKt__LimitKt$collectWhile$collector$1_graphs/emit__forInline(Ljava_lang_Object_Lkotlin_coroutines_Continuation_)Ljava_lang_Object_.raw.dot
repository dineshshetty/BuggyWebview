digraph "CFG forkotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1.emit$$forInline(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0001: INVOKE  (r0 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x0004: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1) =  kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1 \l0x0006: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1)\l  (r2 I:kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1)\l  (r4 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1.\<init\>(kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1\>):void (m)]\l0x0009: CONST  (r0 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l0x000a: INVOKE  (r0 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x000d: IGET  (r0 I:kotlin.jvm.functions.Function2\<T, kotlin.coroutines.Continuation\<? super java.lang.Boolean\>, java.lang.Object\>) = (r2 I:kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1) kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1.$predicate kotlin.jvm.functions.Function2  (LINE:131)\l0x000f: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:kotlin.jvm.functions.Function2)\l  (r3 I:java.lang.Object A[D('value' java.lang.Object)])\l  (r4 I:java.lang.Object A[D('$completion' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x0013: CHECK_CAST (r0 I:java.lang.Boolean) = (java.lang.Boolean) (r0 I:??[OBJECT, ARRAY]) \l0x0015: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|0x0019: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x001e \l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|0x001b: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:134)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|RETURN\l|0x001d: RETURN  (r0 I:java.lang.Object) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x001e|0x001e: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.internal.AbortFlowException) =  kotlinx.coroutines.flow.internal.AbortFlowException  (LINE:132)\l0x0020: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x0021: CHECK_CAST (r1 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r1 I:??[OBJECT, ARRAY]) \l0x0023: INVOKE  (r0 I:kotlinx.coroutines.flow.internal.AbortFlowException), (r1 I:kotlinx.coroutines.flow.FlowCollector) type: DIRECT call: kotlinx.coroutines.flow.internal.AbortFlowException.\<init\>(kotlinx.coroutines.flow.FlowCollector):void A[MD:(kotlinx.coroutines.flow.FlowCollector\<?\>):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|0x0026: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1.emit$$forInline((r2 'this' I:kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1 A[IMMUTABLE_TYPE, THIS]), (r3 I:T A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0026 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0026: r3 'value' Ljava\/lang\/Object;\l  \-1 \-0x0026: r4 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: EMPTY\lSIGNATURE: (TT;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

