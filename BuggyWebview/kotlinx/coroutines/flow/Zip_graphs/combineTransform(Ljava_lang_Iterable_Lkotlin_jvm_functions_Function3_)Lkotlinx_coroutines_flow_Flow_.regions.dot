digraph "CFG forkotlinx.coroutines.flow.FlowKt__ZipKt.combineTransform(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function3;)Lkotlinx\/coroutines\/flow\/Flow;" {
subgraph cluster_Region_1715420332 {
label = "R(2:1|(2:(2:3|4)|(1:7)))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0000|java.util.Collection java.util.Collection r1 = kotlin.collections.CollectionsKt.toList(r6)\ljava.lang.Object[] java.lang.Object[] r4 = r1.toArray(new kotlinx.coroutines.flow.Flow[0])\l}"];
subgraph cluster_Region_55683698 {
label = "R(2:(2:3|4)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1651685038 {
label = "IF [B:19:0x0011] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0011|if (r4 != null) goto L3\l}"];
subgraph cluster_Region_831087694 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0013|kotlinx.coroutines.flow.Flow[] kotlinx.coroutines.flow.Flow[] r1 = (kotlinx.coroutines.flow.Flow[]) r4\lkotlin.jvm.internal.Intrinsics.needClassReification()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0025|RETURN\l|return kotlinx.coroutines.flow.FlowKt.flow(new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7(r1, r7, null))\l}"];
}
}
subgraph cluster_Region_771987209 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x002d|throw new java.lang.NullPointerException(\"null cannot be cast to non\-null type kotlin.Array\<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray\>\")\l}"];
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0026}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlinx.coroutines.flow.Flow\<R\> kotlinx.coroutines.flow.FlowKt__ZipKt.combineTransform((r6v0 java.lang.Iterable\<? extends kotlinx.coroutines.flow.Flow\<? extends T\>\> A[D('flows' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.jvm.functions.Function3\<? super kotlinx.coroutines.flow.FlowCollector\<? super R\>, ? super T[], ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\> A[D('transform' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:23:0x002d \-\> B:17:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;\>;Lkotlin\/jvm\/functions\/Function3\<\-Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TR;\>;\-[TT;\-Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;+Ljava\/lang\/Object;\>;)Lkotlinx\/coroutines\/flow\/Flow\<TR;\>;\l}"];
MethodNode -> Node_16;Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_22[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_23 -> Node_17;
Node_16 -> Node_18;
Node_22 -> Node_23;
}

