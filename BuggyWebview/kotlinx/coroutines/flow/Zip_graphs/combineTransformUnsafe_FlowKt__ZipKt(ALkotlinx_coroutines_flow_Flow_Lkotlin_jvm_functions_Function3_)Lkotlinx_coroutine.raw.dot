digraph "CFG forkotlinx.coroutines.flow.FlowKt__ZipKt.combineTransformUnsafe$FlowKt__ZipKt([Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/jvm\/functions\/Function3;)Lkotlinx\/coroutines\/flow\/Flow;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: INVOKE   type: STATIC call: kotlin.jvm.internal.Intrinsics.needClassReification():void A[MD:():void (m)] (LINE:272)\l0x0004: NEW_INSTANCE  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1) =  kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1 \l0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: INVOKE  \l  (r1 I:kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1)\l  (r3 I:kotlinx.coroutines.flow.Flow[] A[D('flows' kotlinx.coroutines.flow.Flow[])])\l  (r4 I:kotlin.jvm.functions.Function3 A[D('transform' kotlin.jvm.functions.Function3)])\l  (r2 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.\<init\>(kotlinx.coroutines.flow.Flow[], kotlin.jvm.functions.Function3, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.Flow\<? extends T\>[], kotlin.jvm.functions.Function3\<? super kotlinx.coroutines.flow.FlowCollector\<? super R\>, ? super T[], ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1\>):void (m)]\l0x000a: CHECK_CAST (r1 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r1 I:??[OBJECT, ARRAY]) \l0x000c: INVOKE  (r1 I:kotlinx.coroutines.flow.Flow) = (r1 I:kotlin.jvm.functions.Function2) type: STATIC call: kotlinx.coroutines.flow.FlowKt.flow(kotlin.jvm.functions.Function2):kotlinx.coroutines.flow.Flow A[MD:\<T\>:(kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.flow.FlowCollector\<? super T\>, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>):kotlinx.coroutines.flow.Flow\<T\> (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0010|RETURN\l|0x0010: RETURN  (r1 I:kotlinx.coroutines.flow.Flow\<R\>)  (LINE:274)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final \/* synthetic *\/ kotlinx.coroutines.flow.Flow\<R\> kotlinx.coroutines.flow.FlowKt__ZipKt.combineTransformUnsafe$FlowKt__ZipKt((r3 I:kotlinx.coroutines.flow.Flow\<? extends T\>[] A[D('flows' kotlinx.coroutines.flow.Flow[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function3\<? super kotlinx.coroutines.flow.FlowCollector\<? super R\>, ? super T[], ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\> A[D('transform' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0001: INVOKE   type: STATIC call: kotlin.jvm.internal.Intrinsics.needClassReification():void\lDebug Info:\l  0x0001\-0x0010: r0 '$i$f$combineTransformUnsafe' I\l  \-1 \-0x0010: r3 'flows' [Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x0010: r4 'transform' Lkotlin\/jvm\/functions\/Function3;\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>([Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlin\/jvm\/functions\/Function3\<\-Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TR;\>;\-[TT;\-Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;+Ljava\/lang\/Object;\>;)Lkotlinx\/coroutines\/flow\/Flow\<TR;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

