digraph "CFG forkotlinx.coroutines.flow.SharingConfig.\<init\>(Lkotlinx\/coroutines\/flow\/Flow;ILkotlinx\/coroutines\/channels\/BufferOverflow;Lkotlin\/coroutines\/CoroutineContext;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:151)\l0x0003: IPUT  \l  (r1 I:kotlinx.coroutines.flow.Flow\<T\> A[D('upstream' kotlinx.coroutines.flow.Flow)])\l  (r0 I:kotlinx.coroutines.flow.SharingConfig)\l kotlinx.coroutines.flow.SharingConfig.upstream kotlinx.coroutines.flow.Flow  (LINE:152)\l0x0005: IPUT  (r2 I:int A[D('extraBufferCapacity' int)]), (r0 I:kotlinx.coroutines.flow.SharingConfig) kotlinx.coroutines.flow.SharingConfig.extraBufferCapacity int  (LINE:153)\l0x0007: IPUT  \l  (r3 I:kotlinx.coroutines.channels.BufferOverflow A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow)])\l  (r0 I:kotlinx.coroutines.flow.SharingConfig)\l kotlinx.coroutines.flow.SharingConfig.onBufferOverflow kotlinx.coroutines.channels.BufferOverflow  (LINE:154)\l0x0009: IPUT  \l  (r4 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlinx.coroutines.flow.SharingConfig)\l kotlinx.coroutines.flow.SharingConfig.context kotlin.coroutines.CoroutineContext  (LINE:155)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|RETURN\l|0x000b: RETURN    (LINE:151)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.flow.SharingConfig.\<init\>((r0 'this' I:kotlinx.coroutines.flow.SharingConfig\<T\> A[IMMUTABLE_TYPE, THIS]), (r1 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('upstream' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('extraBufferCapacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlinx.coroutines.channels.BufferOverflow A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000b: r1 'upstream' Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x000b: r2 'extraBufferCapacity' I\l  \-1 \-0x000b: r3 'onBufferOverflow' Lkotlinx\/coroutines\/channels\/BufferOverflow;\l  \-1 \-0x000b: r4 'context' Lkotlin\/coroutines\/CoroutineContext;\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;ILkotlinx\/coroutines\/channels\/BufferOverflow;Lkotlin\/coroutines\/CoroutineContext;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

