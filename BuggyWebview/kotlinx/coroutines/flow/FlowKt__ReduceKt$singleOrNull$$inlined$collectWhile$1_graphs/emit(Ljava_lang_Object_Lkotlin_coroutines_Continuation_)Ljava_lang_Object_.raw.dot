digraph "CFG forkotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1.emit(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('value' java.lang.Object)])  (LINE:131)\l0x0001: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$completion' kotlin.coroutines.Continuation)]) \l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: IGET  (r3 I:kotlin.jvm.internal.Ref$ObjectRef) = (r5 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1) kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1.$result$inlined kotlin.jvm.internal.Ref$ObjectRef  (LINE:143)\l0x0005: IGET  (r3 I:T) = (r3 I:kotlin.jvm.internal.Ref$ObjectRef) kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object \l0x0007: SGET  (r4 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL kotlinx.coroutines.internal.Symbol \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r3 I:kotlin.jvm.internal.Ref$ObjectRef) = (r5 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1) kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1.$result$inlined kotlin.jvm.internal.Ref$ObjectRef  (LINE:144)\l0x000d: IPUT  (r0 I:T A[D('it' java.lang.Object)]), (r3 I:kotlin.jvm.internal.Ref$ObjectRef) kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object \l0x000f: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:145)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001e \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:134)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|RETURN\l|0x001d: RETURN  (r0 I:java.lang.Object) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.internal.AbortFlowException) =  kotlinx.coroutines.flow.internal.AbortFlowException  (LINE:132)\l0x0020: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY]) \l0x0021: CHECK_CAST (r1 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r1 I:??[OBJECT, ARRAY]) \l0x0023: INVOKE  (r0 I:kotlinx.coroutines.flow.internal.AbortFlowException), (r1 I:kotlinx.coroutines.flow.FlowCollector) type: DIRECT call: kotlinx.coroutines.flow.internal.AbortFlowException.\<init\>(kotlinx.coroutines.flow.FlowCollector):void A[MD:(kotlinx.coroutines.flow.FlowCollector\<?\>):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IGET  (r3 I:kotlin.jvm.internal.Ref$ObjectRef) = (r5 I:kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1) kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1.$result$inlined kotlin.jvm.internal.Ref$ObjectRef  (LINE:148)\l0x0013: SGET  (r4 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL kotlinx.coroutines.internal.Symbol \l0x0015: IPUT  (r4 I:T), (r3 I:kotlin.jvm.internal.Ref$ObjectRef) kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object \l0x0017: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:149)\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1.emit((r5 'this' I:kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1 A[IMMUTABLE_TYPE, THIS]), (r6 I:T A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0026 \-\> B:1:?, CROSS_EDGE: B:5:0x0011 \-\> B:7:0x0019\lDebug Info:\l  0x0001\-0x0019: r0 'it' Ljava\/lang\/Object;\l  0x0002\-0x0019: r1 '$completion' Lkotlin\/coroutines\/Continuation;\l  0x0003\-0x0019: r2 '$i$a$\-collectWhile\-FlowKt__ReduceKt$singleOrNull$2' I\l  \-1 \-0x0026: r6 'value' Ljava\/lang\/Object;\l  \-1 \-0x0026: r7 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: EMPTY\lSIGNATURE: (TT;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.FlowCollector.emit(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_5 -> Node_7;
}

