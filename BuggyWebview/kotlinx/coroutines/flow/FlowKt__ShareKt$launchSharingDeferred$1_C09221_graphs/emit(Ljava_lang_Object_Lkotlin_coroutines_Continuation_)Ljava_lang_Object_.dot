digraph "CFG forkotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.1.emit(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|kotlinx.coroutines.flow.MutableStateFlow r0 = r10.$state.element\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|if (r0 != null) goto L9\l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|r0 = null\l}"];
Node_16 [shape=record,label="{16\:\ 0x0010|PHI: r0 \l  PHI: (r0v4 kotlin.Unit) = (r0v3 kotlin.Unit), (r0v7 kotlin.Unit) binds: [B:15:0x000a, B:14:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != null) goto L6\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|kotlinx.coroutines.CoroutineScope r0 = r10.$$this$launch\lkotlin.jvm.internal.Ref$ObjectRef\<kotlinx.coroutines.flow.MutableStateFlow\<T\>\> r1 = r10.$state\lkotlinx.coroutines.CompletableDeferred\<kotlinx.coroutines.flow.StateFlow\<T\>\> r2 = r10.$result\lkotlinx.coroutines.flow.MutableStateFlow r4 = (T) kotlinx.coroutines.flow.StateFlowKt.MutableStateFlow(r11)\lr2.complete(new kotlinx.coroutines.flow.ReadonlyStateFlow((kotlinx.coroutines.flow.StateFlow) r4, kotlinx.coroutines.JobKt.getJob(r0.getCoroutineContext())))\lr1.element = r4\l}"];
Node_18 [shape=record,label="{18\:\ 0x0037}"];
Node_19 [shape=record,label="{19\:\ 0x0039|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|r0.setValue(r11)\lkotlin.Unit r0 = kotlin.Unit.INSTANCE\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.1.emit((r10v0 'this' kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1\<T\> A[IMMUTABLE_TYPE, THIS]), (r11v0 T A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0010 \-\> B:18:0x0037, CROSS_EDGE: B:15:0x000a \-\> B:16:0x0010\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (TT;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.FlowCollector.emit(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
Node_15 -> Node_16;
}

