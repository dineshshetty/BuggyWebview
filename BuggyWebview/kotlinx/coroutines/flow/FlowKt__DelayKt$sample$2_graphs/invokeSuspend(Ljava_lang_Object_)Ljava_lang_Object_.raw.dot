digraph "CFG forkotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_45 [shape=record,label="{45\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY])  (LINE:278)\l0x0006: IGET  (r2 I:int) = (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2) kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.label int \l0x0008: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0009|0x0009: SWITCH  (r2 I:??)\l case 0: goto B:52:0x0035\l case 1: goto B:51:0x0014\l default: goto B:49:0x000c \l}"];
Node_49 [shape=record,label="{49\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:304)\l0x000e: CONST_STR  (r1 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x0010: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_50 [shape=record,label="{50\:\ 0x0013|0x0013: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_46 [shape=record,label="{46\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ 0x0014|0x0014: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY])  (LINE:278)\l0x0016: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY]) \l0x0018: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: IGET  (r6 I:java.lang.Object) = (r2 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)]) kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.L$3 java.lang.Object \l0x001b: CHECK_CAST (r6 I:kotlinx.coroutines.channels.ReceiveChannel) = (kotlinx.coroutines.channels.ReceiveChannel) (r6 I:??[OBJECT, ARRAY]) \l0x001d: IGET  (r7 I:java.lang.Object) = (r2 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)]) kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.L$2 java.lang.Object \l0x001f: CHECK_CAST (r7 I:kotlin.jvm.internal.Ref$ObjectRef) = (kotlin.jvm.internal.Ref$ObjectRef) (r7 I:??[OBJECT, ARRAY]) \l0x0021: IGET  (r8 I:java.lang.Object) = (r2 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)]) kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.L$1 java.lang.Object \l0x0023: CHECK_CAST (r8 I:kotlinx.coroutines.channels.ReceiveChannel) = (kotlinx.coroutines.channels.ReceiveChannel) (r8 I:??[OBJECT, ARRAY]) \l0x0025: IGET  (r9 I:java.lang.Object) = (r2 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)]) kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.L$0 java.lang.Object \l0x0027: CHECK_CAST (r9 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r9 I:??[OBJECT, ARRAY]) \l0x0029: INVOKE  (r4 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x002c: MOVE  (r15 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x002d: MOVE  (r16 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)]) \l0x002f: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)]) = (r0 I:??[OBJECT, ARRAY]) \l0x0030: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) \l0x0031: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) = (r16 I:??[OBJECT, ARRAY]) \l}"];
Node_79 [shape=record,label="{79\:\ 0x00d3|0x00d3: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY]) \l0x00d5: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('$i$f$select' int)]) = (r0 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) \l0x00d6: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x006f|0x006f: IGET  (r0 I:T) = (r7 I:kotlin.jvm.internal.Ref$ObjectRef A[D('lastValue' kotlin.jvm.internal.Ref$ObjectRef)]) kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object  (LINE:284)\l0x0071: SGET  (r10 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.flow.internal.NullSurrogateKt.DONE kotlinx.coroutines.internal.Symbol \l}"];
Node_54 [shape=record,label="{54\:\ 0x0073|0x0073: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x00d8 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0075|0x0075: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:285)\l0x0077: IPUT  \l  (r9 I:java.lang.Object A[D('downstream' kotlinx.coroutines.flow.FlowCollector)])\l  (r4 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.L$0 java.lang.Object  (LINE:352)\l0x0079: IPUT  \l  (r8 I:java.lang.Object A[D('values' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r4 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.L$1 java.lang.Object \l0x007b: IPUT  \l  (r7 I:java.lang.Object A[D('lastValue' kotlin.jvm.internal.Ref$ObjectRef)])\l  (r4 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.L$2 java.lang.Object \l0x007d: IPUT  \l  (r6 I:java.lang.Object A[D('ticker' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r4 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.L$3 java.lang.Object \l0x007f: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0080: IPUT  \l  (r0 I:int)\l  (r4 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.label int \l0x0082: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)]) \l0x0083: CHECK_CAST (r11 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r11 I:??[OBJECT, ARRAY]) \l0x0085: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0086: NEW_INSTANCE  (r0 I:kotlinx.coroutines.selects.SelectBuilderImpl) =  kotlinx.coroutines.selects.SelectBuilderImpl  (LINE:353)\l0x0088: INVOKE  \l  (r0 I:kotlinx.coroutines.selects.SelectBuilderImpl)\l  (r11 I:kotlin.coroutines.Continuation A[D('uCont$iv' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.selects.SelectBuilderImpl.\<init\>(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<? super R\>):void (m)]\l0x008b: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_88 [shape=record,label="{88\:\ 0x008d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_56 [shape=record,label="{56\:\ 0x008d|TRY_ENTER\lTRY_LEAVE\lTryCatch #3 \{all \-\> 0x00b9, blocks: (B:56:0x008d), top: B:88:0x008d \}\lCatch: all \-\> 0x00b9\l|0x008d: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY] A[D('scope$iv' kotlinx.coroutines.selects.SelectBuilderImpl)]) A[TRY_ENTER] (LINE:355)\l0x008e: CHECK_CAST (r0 I:kotlinx.coroutines.selects.SelectBuilder) = (kotlinx.coroutines.selects.SelectBuilder) (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x00b9]\l0x0090: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0091: INVOKE  (r15 I:kotlinx.coroutines.selects.SelectClause1) = (r8 I:kotlinx.coroutines.channels.ReceiveChannel A[D('values' kotlinx.coroutines.channels.ReceiveChannel)]) type: INTERFACE call: kotlinx.coroutines.channels.ReceiveChannel.getOnReceiveCatching():kotlinx.coroutines.selects.SelectClause1 A[Catch: all \-\> 0x00b9, MD:():kotlinx.coroutines.selects.SelectClause1\<kotlinx.coroutines.channels.ChannelResult\<E\>\> (m), TRY_LEAVE] (LINE:286)\l}"];
Node_86 [shape=record,label="{86\:\ 0x0095|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_57 [shape=record,label="{57\:\ 0x0095|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{all \-\> 0x00b6, blocks: (B:57:0x0095, B:60:0x009b), top: B:86:0x0095 \}\lCatch: all \-\> 0x00b6\l|0x0095: NEW_INSTANCE  (r3 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1) =  kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1 A[Catch: all \-\> 0x00b6, TRY_ENTER, TRY_LEAVE]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0097|0x0097: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_84 [shape=record,label="{84\:\ 0x0098|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_59 [shape=record,label="{59\:\ 0x0098|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x00b3, blocks: (B:59:0x0098), top: B:84:0x0098 \}\lCatch: all \-\> 0x00b3\l|0x0098: INVOKE  \l  (r3 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1)\l  (r7 I:kotlin.jvm.internal.Ref$ObjectRef A[D('lastValue' kotlin.jvm.internal.Ref$ObjectRef)])\l  (r6 I:kotlinx.coroutines.channels.ReceiveChannel A[D('ticker' kotlinx.coroutines.channels.ReceiveChannel)])\l  (r1 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1.\<init\>(kotlin.jvm.internal.Ref$ObjectRef, kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.Continuation):void A[Catch: all \-\> 0x00b3, MD:(kotlin.jvm.internal.Ref$ObjectRef\<java.lang.Object\>, kotlinx.coroutines.channels.ReceiveChannel\<kotlin.Unit\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1\>):void (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_60 [shape=record,label="{60\:\ 0x009b|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{all \-\> 0x00b6, blocks: (B:57:0x0095, B:60:0x009b), top: B:86:0x0095 \}\lCatch: all \-\> 0x00b6\l|0x009b: CHECK_CAST (r3 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x00b6, TRY_ENTER]\l0x009d: INVOKE  \l  (r0 I:kotlinx.coroutines.selects.SelectBuilder A[D('$this$invokeSuspend_u24lambda_u2d0' kotlinx.coroutines.selects.SelectBuilder)])\l  (r15 I:kotlinx.coroutines.selects.SelectClause1)\l  (r3 I:kotlin.jvm.functions.Function2)\l type: INTERFACE call: kotlinx.coroutines.selects.SelectBuilder.invoke(kotlinx.coroutines.selects.SelectClause1, kotlin.jvm.functions.Function2):void A[Catch: all \-\> 0x00b6, MD:\<Q\>:(kotlinx.coroutines.selects.SelectClause1\<? extends Q\>, kotlin.jvm.functions.Function2\<? super Q, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\>):void (m)]\l0x00a0: INVOKE  (r1 I:kotlinx.coroutines.selects.SelectClause1) = (r6 I:kotlinx.coroutines.channels.ReceiveChannel A[D('ticker' kotlinx.coroutines.channels.ReceiveChannel)]) type: INTERFACE call: kotlinx.coroutines.channels.ReceiveChannel.getOnReceive():kotlinx.coroutines.selects.SelectClause1 A[Catch: all \-\> 0x00b6, MD:():kotlinx.coroutines.selects.SelectClause1\<E\> (m)] (LINE:297)\l0x00a4: NEW_INSTANCE  (r3 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2) =  kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2 A[Catch: all \-\> 0x00b6, TRY_LEAVE]\l}"];
Node_61 [shape=record,label="{61\:\ 0x00a6|0x00a6: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_82 [shape=record,label="{82\:\ 0x00a7|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_62 [shape=record,label="{62\:\ 0x00a7|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x00b1, blocks: (B:62:0x00a7), top: B:82:0x00a7 \}\lCatch: all \-\> 0x00b1\l|0x00a7: INVOKE  \l  (r3 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2)\l  (r7 I:kotlin.jvm.internal.Ref$ObjectRef A[D('lastValue' kotlin.jvm.internal.Ref$ObjectRef)])\l  (r9 I:kotlinx.coroutines.flow.FlowCollector A[D('downstream' kotlinx.coroutines.flow.FlowCollector)])\l  (r15 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.\<init\>(kotlin.jvm.internal.Ref$ObjectRef, kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):void A[Catch: all \-\> 0x00b1, MD:(kotlin.jvm.internal.Ref$ObjectRef\<java.lang.Object\>, kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2\>):void (m), TRY_ENTER]\l0x00aa: CHECK_CAST (r3 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x00b1]\l0x00ac: INVOKE  \l  (r0 I:kotlinx.coroutines.selects.SelectBuilder A[D('$this$invokeSuspend_u24lambda_u2d0' kotlinx.coroutines.selects.SelectBuilder)])\l  (r1 I:kotlinx.coroutines.selects.SelectClause1)\l  (r3 I:kotlin.jvm.functions.Function2)\l type: INTERFACE call: kotlinx.coroutines.selects.SelectBuilder.invoke(kotlinx.coroutines.selects.SelectClause1, kotlin.jvm.functions.Function2):void A[Catch: all \-\> 0x00b1, MD:\<Q\>:(kotlinx.coroutines.selects.SelectClause1\<? extends Q\>, kotlin.jvm.functions.Function2\<? super Q, ? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\>):void (m), TRY_LEAVE]\l}"];
Node_73 [shape=record,label="{73\:\ 0x00be|0x00be: INVOKE  (r0 I:java.lang.Object) = (r13 I:kotlinx.coroutines.selects.SelectBuilderImpl A[D('scope$iv' kotlinx.coroutines.selects.SelectBuilderImpl)]) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.getResult():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:359)\l0x00c2: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:352)\l}"];
Node_74 [shape=record,label="{74\:\ 0x00c6|0x00c6: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:76:0x00ce \l}"];
Node_75 [shape=record,label="{75\:\ 0x00c8|0x00c8: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)]) \l0x00c9: CHECK_CAST (r1 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r1 I:??[OBJECT, ARRAY]) \l0x00cb: INVOKE  (r1 I:kotlin.coroutines.Continuation) type: STATIC call: kotlin.coroutines.jvm.internal.DebugProbesKt.probeCoroutineSuspended(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<?\>):void (m)]\l}"];
Node_76 [shape=record,label="{76\:\ 0x00ce|0x00ce: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:78:0x00d1 \l}"];
Node_77 [shape=record,label="{77\:\ 0x00d0|RETURN\l|0x00d0: RETURN  (r2 I:java.lang.Object)  (LINE:278)\l}"];
Node_78 [shape=record,label="{78\:\ 0x00d1|0x00d1: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)])  (LINE:352)\l0x00d2: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$result' java.lang.Object)]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$f$select' int)]) \l}"];
Node_83 [shape=record,label="{83\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_64 [shape=record,label="{64\:\ 0x00b1|ExcHandler: all \-\> 0x00b1\l|0x00b1: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x00b1] (LINE:356)\l}"];
Node_72 [shape=record,label="{72\:\ 0x00bb|0x00bb: INVOKE  \l  (r13 I:kotlinx.coroutines.selects.SelectBuilderImpl A[D('scope$iv' kotlinx.coroutines.selects.SelectBuilderImpl)])\l  (r0 I:java.lang.Throwable A[D('e$iv' java.lang.Throwable)])\l type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.handleBuilderException(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (m)] (LINE:357)\l}"];
Node_85 [shape=record,label="{85\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_66 [shape=record,label="{66\:\ 0x00b3|ExcHandler: all \-\> 0x00b3\l|0x00b3: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x00b3]\l}"];
Node_67 [shape=record,label="{67\:\ 0x00b4|0x00b4: MOVE  (r15 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_87 [shape=record,label="{87\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_68 [shape=record,label="{68\:\ 0x00b6|ExcHandler: all \-\> 0x00b6\l|0x00b6: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x00b6]\l}"];
Node_69 [shape=record,label="{69\:\ 0x00b7|0x00b7: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_89 [shape=record,label="{89\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_70 [shape=record,label="{70\:\ 0x00b9|ExcHandler: all \-\> 0x00b9\l|0x00b9: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x00b9]\l}"];
Node_71 [shape=record,label="{71\:\ 0x00ba|0x00ba: MOVE  (r15 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_80 [shape=record,label="{80\:\ 0x00d8|0x00d8: SGET  (r0 I:kotlin.Unit A[D('$result' java.lang.Object)]) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:304)\l}"];
Node_81 [shape=record,label="{81\:\ 0x00da|RETURN\l|0x00da: RETURN  (r0 I:java.lang.Object) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0035|0x0035: INVOKE  (r18 I:java.lang.Object) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0038: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY]) \l0x003a: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY]) \l0x003c: IGET  (r5 I:java.lang.Object) = (r2 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)]) kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.L$0 java.lang.Object \l0x003e: CHECK_CAST (r5 I:kotlinx.coroutines.CoroutineScope) = (kotlinx.coroutines.CoroutineScope) (r5 I:??[OBJECT, ARRAY]) \l0x0040: IGET  (r6 I:java.lang.Object) = (r2 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)]) kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.L$1 java.lang.Object \l0x0042: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0043: CHECK_CAST (r13 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r13 I:??[OBJECT, ARRAY]) \l0x0045: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:279)\l0x0046: CONST  (r8 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0047: NEW_INSTANCE  (r6 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1) =  kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1 \l0x0049: IGET  (r9 I:kotlinx.coroutines.flow.Flow\<T\>) = (r2 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)]) kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.$this_sample kotlinx.coroutines.flow.Flow \l0x004b: INVOKE  \l  (r6 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1)\l  (r9 I:kotlinx.coroutines.flow.Flow)\l  (r3 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1.\<init\>(kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.Flow\<? extends T\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1\>):void (m)]\l0x004e: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x004f: CHECK_CAST (r9 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r9 I:??[OBJECT, ARRAY]) \l0x0051: CONST  (r10 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0052: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0053: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('$this$scopedFlow' kotlinx.coroutines.CoroutineScope)]) \l0x0054: INVOKE  (r14 I:kotlinx.coroutines.channels.ReceiveChannel) = \l  (r6 I:kotlinx.coroutines.CoroutineScope)\l  (r7 I:kotlin.coroutines.CoroutineContext)\l  (r8 I:int)\l  (r9 I:kotlin.jvm.functions.Function2)\l  (r10 I:int)\l  (r11 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.channels.ProduceKt.produce$default(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlin.jvm.functions.Function2, int, java.lang.Object):kotlinx.coroutines.channels.ReceiveChannel A[MD:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlin.jvm.functions.Function2, int, java.lang.Object):kotlinx.coroutines.channels.ReceiveChannel (m)]\l0x0058: NEW_INSTANCE  (r6 I:kotlin.jvm.internal.Ref$ObjectRef) =  kotlin.jvm.internal.Ref$ObjectRef  (LINE:282)\l0x005a: INVOKE  (r6 I:kotlin.jvm.internal.Ref$ObjectRef) type: DIRECT call: kotlin.jvm.internal.Ref.ObjectRef.\<init\>():void A[MD:():void (m)]\l0x005d: MOVE  (r15 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x005e: IGET  (r7 I:long) = (r2 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)]) kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.$periodMillis long  (LINE:283)\l0x0060: CONST  (r9 I:??[long, double]) = (0 ??[long, double]) \l0x0062: CONST  (r11 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0063: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0064: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('$this$scopedFlow' kotlinx.coroutines.CoroutineScope)]) \l0x0065: INVOKE  (r6 I:kotlinx.coroutines.channels.ReceiveChannel) = (r6 I:kotlinx.coroutines.CoroutineScope), (r7 I:long), (r9 I:long), (r11 I:int), (r12 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.flow.FlowKt.fixedPeriodTicker$default(kotlinx.coroutines.CoroutineScope, long, long, int, java.lang.Object):kotlinx.coroutines.channels.ReceiveChannel A[MD:(kotlinx.coroutines.CoroutineScope, long, long, int, java.lang.Object):kotlinx.coroutines.channels.ReceiveChannel (m)]\l0x0069: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('$this$scopedFlow' kotlinx.coroutines.CoroutineScope)]) = (r4 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) \l0x006a: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY] A[D('downstream' kotlinx.coroutines.flow.FlowCollector)]) \l0x006b: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY] A[D('values' kotlinx.coroutines.channels.ReceiveChannel)]) \l0x006c: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY] A[D('lastValue' kotlin.jvm.internal.Ref$ObjectRef)]) \l0x006d: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) = (r2 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)]) \l0x006e: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2)]) = (r0 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2.invokeSuspend((r17 'this' I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2 A[IMMUTABLE_TYPE, THIS]), (r18 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:77:0x00d0 \-\> B:46:?, BACK_EDGE: B:78:0x00d1 \-\> B:79:0x00d3, CROSS_EDGE: B:74:0x00c6 \-\> B:76:0x00ce, CROSS_EDGE: B:72:0x00bb \-\> B:73:0x00be, CROSS_EDGE: B:82:0x00a7 \-\> B:64:0x00b1, CROSS_EDGE: B:67:0x00b4 \-\> B:72:0x00bb, CROSS_EDGE: B:84:0x0098 \-\> B:66:0x00b3, CROSS_EDGE: B:69:0x00b7 \-\> B:72:0x00bb, CROSS_EDGE: B:86:0x0095 \-\> B:68:0x00b6, CROSS_EDGE: B:71:0x00ba \-\> B:72:0x00bb, CROSS_EDGE: B:88:0x008d \-\> B:70:0x00b9, CROSS_EDGE: B:81:0x00da \-\> B:46:?, CROSS_EDGE: B:52:0x0035 \-\> B:53:0x006f\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x00b1, blocks: (B:62:0x00a7), top: B:82:0x00a7 \}, TryCatch #1 \{all \-\> 0x00b3, blocks: (B:59:0x0098), top: B:84:0x0098 \}, TryCatch #2 \{all \-\> 0x00b6, blocks: (B:57:0x0095, B:60:0x009b), top: B:86:0x0095 \}, TryCatch #3 \{all \-\> 0x00b9, blocks: (B:56:0x008d), top: B:88:0x008d \}\lDebug Info:\l  0x0016\-0x0035: r2 'this' Lkotlinx\/coroutines\/flow\/FlowKt__DelayKt$sample$2;\l  0x0018\-0x0035: r4 '$result' Ljava\/lang\/Object;\l  0x0019\-0x0035: r5 '$i$f$select' I\l  0x001d\-0x0035: r6 'ticker' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l  0x0021\-0x0035: r7 'lastValue' Lkotlin\/jvm\/internal\/Ref$ObjectRef;\l  0x0025\-0x0035: r8 'values' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l  0x0029\-0x0035: r9 'downstream' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x003a\-0x006f: r2 'this' Lkotlinx\/coroutines\/flow\/FlowKt__DelayKt$sample$2;\l  0x0045\-0x006f: r13 'downstream' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x0058\-0x006f: r14 'values' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l  0x005e\-0x006f: r15 'lastValue' Lkotlin\/jvm\/internal\/Ref$ObjectRef;\l  0x003c\-0x006f: r4 '$result' Ljava\/lang\/Object;\l  0x0040\-0x006f: r5 '$this$scopedFlow' Lkotlinx\/coroutines\/CoroutineScope;\l  0x0090\-0x00b0: r0 '$this$invokeSuspend_u24lambda_u2d0' Lkotlinx\/coroutines\/selects\/SelectBuilder;\l  0x0091\-0x00b0: r14 '$i$a$\-select\-FlowKt__DelayKt$sample$2$1' I\l  0x00bb\-0x00be: r0 'e$iv' Ljava\/lang\/Throwable;\l  0x0085\-0x00c2: r11 'uCont$iv' Lkotlin\/coroutines\/Continuation;\l  0x0086\-0x00c2: r12 '$i$a$\-suspendCoroutineUninterceptedOrReturn\-SelectKt$select$3$iv' I\l  0x008c\-0x00c2: r13 'scope$iv' Lkotlinx\/coroutines\/selects\/SelectBuilderImpl;\l  0x0076\-0x00d3: r10 '$i$f$select' I\l  0x006f\-0x00d3: r5 '$result' Ljava\/lang\/Object;\l  0x00d3\-0x00d7: r5 '$i$f$select' I\l  0x00d3\-0x00d8: r0 '$result' Ljava\/lang\/Object;\l  0x006f\-0x00e3: r4 'this' Lkotlinx\/coroutines\/flow\/FlowKt__DelayKt$sample$2;\l  0x00d8\-0x00e3: r5 '$result' Ljava\/lang\/Object;\l  0x006f\-0x00e3: r6 'ticker' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l  0x006f\-0x00e3: r7 'lastValue' Lkotlin\/jvm\/internal\/Ref$ObjectRef;\l  0x006f\-0x00e3: r8 'values' Lkotlinx\/coroutines\/channels\/ReceiveChannel;\l  0x006f\-0x00e3: r9 'downstream' Lkotlinx\/coroutines\/flow\/FlowCollector;\lJadxCommentsAttr\{\l WARN: \l \-\> Unsupported multi\-entry loop pattern (BACK_EDGE: B:78:0x00d1 \-\> B:79:0x00d3). Please submit an issue!!!\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_45;Node_45 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_48 -> Node_51;
Node_48 -> Node_52;
Node_49 -> Node_50;
Node_50 -> Node_46;
Node_51 -> Node_79;
Node_79 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_80;
Node_55 -> Node_88;
Node_88 -> Node_56;
Node_88 -> Node_70;
Node_56 -> Node_86;
Node_56 -> Node_89;
Node_86 -> Node_57;
Node_86 -> Node_68;
Node_57 -> Node_58;
Node_57 -> Node_87;
Node_58 -> Node_84;
Node_84 -> Node_59;
Node_84 -> Node_66;
Node_59 -> Node_60;
Node_59 -> Node_85;
Node_60 -> Node_61;
Node_61 -> Node_82;
Node_82 -> Node_62;
Node_82 -> Node_64;
Node_62 -> Node_73;
Node_62 -> Node_83;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_78;
Node_77 -> Node_46;
Node_78 -> Node_79;
Node_83 -> Node_64;
Node_64 -> Node_72;
Node_72 -> Node_73;
Node_85 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_72;
Node_87 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_72;
Node_89 -> Node_70;
Node_70 -> Node_71;
Node_71 -> Node_72;
Node_80 -> Node_81;
Node_81 -> Node_46;
Node_52 -> Node_53;
}

