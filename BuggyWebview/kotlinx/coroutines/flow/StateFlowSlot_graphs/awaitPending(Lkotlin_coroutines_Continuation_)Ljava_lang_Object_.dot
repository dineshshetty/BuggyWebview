digraph "CFG forkotlinx.coroutines.flow.StateFlowSlot.awaitPending(Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|r5 = true\lkotlinx.coroutines.CancellableContinuationImpl r3 = new kotlinx.coroutines.CancellableContinuationImpl(kotlin.coroutines.intrinsics.IntrinsicsKt.intercepted(r11), 1)\lr3.initCancellability()\lkotlinx.coroutines.CancellableContinuation r4 = r3\l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L8\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a}"];
Node_5 [shape=record,label="{5\:\ 0x0021|if (((r10._state instanceof kotlinx.coroutines.CancellableContinuationImpl) ^ 1) == 0) goto L5\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024}"];
Node_8 [shape=record,label="{8\:\ 0x0029|throw new java.lang.AssertionError()\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|java.util.concurrent.atomic.AtomicReferenceFieldUpdater r7 = kotlinx.coroutines.flow.StateFlowSlot._state$FU\lkotlinx.coroutines.internal.Symbol r8 = kotlinx.coroutines.flow.StateFlowKt.NONE\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|if (androidx.concurrent.futures.C0125xc40028dd.m112m(r7, r10, r8, r4) == false) goto L10\l}"];
Node_12 [shape=record,label="{12\:\ 0x0037}"];
Node_13 [shape=record,label="{13\:\ 0x003b|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L18\l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|java.lang.Object r8 = r10._state\lkotlinx.coroutines.internal.Symbol r9 = kotlinx.coroutines.flow.StateFlowKt.PENDING\l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|if (r8 != r9) goto L14\l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|r5 = false\l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|PHI: r5 \l  PHI: (r5v3 boolean) = (r5v0 boolean), (r5v5 boolean) binds: [B:15:0x0044, B:17:0x0047] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 == false) goto L16\l}"];
Node_20 [shape=record,label="{20\:\ 0x004b}"];
Node_21 [shape=record,label="{21\:\ 0x0050|throw new java.lang.AssertionError()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0051|kotlin.Result$Companion r7 = kotlin.Result.Companion\lr4.resumeWith(kotlin.Result.m144constructorimpl(kotlin.Unit.INSTANCE))\l}"];
Node_23 [shape=record,label="{23\:\ 0x0060|java.lang.Object r1 = r3.getResult()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0068|if (r1 != kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()) goto L22\l}"];
Node_25 [shape=record,label="{25\:\ 0x006a|kotlin.coroutines.jvm.internal.DebugProbes.probeCoroutineSuspended(r11)\l}"];
Node_26 [shape=record,label="{26\:\ 0x006d}"];
Node_27 [shape=record,label="{27\:\ 0x0072|if (r1 != kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()) goto L25\l}"];
Node_28 [shape=record,label="{28\:\ 0x0074|RETURN\l|return r1\l}"];
Node_29 [shape=record,label="{29\:\ 0x0075}"];
Node_30 [shape=record,label="{30\:\ 0x0077|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.StateFlowSlot.awaitPending((r10v0 'this' kotlinx.coroutines.flow.StateFlowSlot A[IMMUTABLE_TYPE, THIS]), (r11v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0050 \-\> B:1:?, CROSS_EDGE: B:28:0x0074 \-\> B:1:?, CROSS_EDGE: B:30:0x0077 \-\> B:1:?, CROSS_EDGE: B:24:0x0068 \-\> B:26:0x006d, CROSS_EDGE: B:15:0x0044 \-\> B:18:0x0048, CROSS_EDGE: B:13:0x003b \-\> B:22:0x0051, CROSS_EDGE: B:10:0x0034 \-\> B:23:0x0060, CROSS_EDGE: B:3:0x0018 \-\> B:9:0x002a\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_23[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_22;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_22[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_1;
Node_29 -> Node_30;
Node_30 -> Node_1;
}

