digraph "CFG forkotlinx.coroutines.flow.StateFlowSlot.freeLocked(Lkotlinx\/coroutines\/flow\/StateFlowImpl;)[Lkotlin\/coroutines\/Continuation;" {
subgraph cluster_Region_825152835 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|r1._state = null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|RETURN\l|return kotlinx.coroutines.flow.internal.AbstractSharedFlowKt.EMPTY_RESUMES\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlin.coroutines.Continuation\<kotlin.Unit\>[] kotlinx.coroutines.flow.StateFlowSlot.freeLocked((r1v0 'this' kotlinx.coroutines.flow.StateFlowSlot A[IMMUTABLE_TYPE, THIS]), (r2v0 kotlinx.coroutines.flow.StateFlowImpl\<?\> A[D('flow' kotlinx.coroutines.flow.StateFlowImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/StateFlowImpl\<*\>;)[Lkotlin\/coroutines\/Continuation\<Lkotlin\/Unit;\>;\lRENAME_REASON:avoid collision after fix types in other method\lREPLACED_BY: kotlinx.coroutines.flow.StateFlowSlot.freeLocked(kotlinx.coroutines.flow.StateFlowImpl\<?\>):kotlin.coroutines.Continuation[]\lBRIDGED_BY: kotlinx.coroutines.flow.StateFlowSlot.freeLocked(kotlinx.coroutines.flow.StateFlowImpl\<?\>):kotlin.coroutines.Continuation[]\lJadxCommentsAttr\{\l DEBUG: \l \-\> Method merged with bridge method\}\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot.freeLocked(F):kotlin.coroutines.Continuation\<kotlin.Unit\>[]]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_1;
Node_0 -> Node_2;
}

