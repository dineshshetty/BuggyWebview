digraph "CFG forkotlinx.coroutines.flow.StateFlowSlot.awaitPending(Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:300)\l0x0001: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('$completion' kotlin.coroutines.Continuation)])  (LINE:434)\l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: NEW_INSTANCE  (r3 I:kotlinx.coroutines.CancellableContinuationImpl) =  kotlinx.coroutines.CancellableContinuationImpl  (LINE:435)\l0x0005: INVOKE  (r4 I:kotlin.coroutines.Continuation) = (r1 I:kotlin.coroutines.Continuation A[D('uCont$iv' kotlin.coroutines.Continuation)]) type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.intercepted(kotlin.coroutines.Continuation):kotlin.coroutines.Continuation A[MD:\<T\>:(kotlin.coroutines.Continuation\<? super T\>):kotlin.coroutines.Continuation\<T\> (m)]\l0x0009: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000a: INVOKE  (r3 I:kotlinx.coroutines.CancellableContinuationImpl), (r4 I:kotlin.coroutines.Continuation), (r5 I:int) type: DIRECT call: kotlinx.coroutines.CancellableContinuationImpl.\<init\>(kotlin.coroutines.Continuation, int):void A[MD:(kotlin.coroutines.Continuation\<? super T\>, int):void (m)]\l0x000d: INVOKE  \l  (r3 I:kotlinx.coroutines.CancellableContinuationImpl A[D('cancellable$iv' kotlinx.coroutines.CancellableContinuationImpl)])\l type: VIRTUAL call: kotlinx.coroutines.CancellableContinuationImpl.initCancellability():void A[MD:():void (m)] (LINE:441)\l0x0010: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('cancellable$iv' kotlinx.coroutines.CancellableContinuationImpl)])  (LINE:442)\l0x0011: CHECK_CAST (r4 I:kotlinx.coroutines.CancellableContinuation) = (kotlinx.coroutines.CancellableContinuation) (r4 I:??[OBJECT, ARRAY]) \l0x0013: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: INVOKE  (r7 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:301)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002a \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:433)\l0x001b: IGET  (r8 I:java.lang.Object) = (r10 I:kotlinx.coroutines.flow.StateFlowSlot) kotlinx.coroutines.flow.StateFlowSlot._state java.lang.Object  (LINE:301)\l0x001d: INSTANCE_OF  (r8 I:boolean) = (r8 I:??[OBJECT, ARRAY]) kotlinx.coroutines.CancellableContinuationImpl \l0x001f: ARITH  (r7 I:??[int, boolean] A[D('$i$a$\-assert\-StateFlowSlot$awaitPending$2$1' int)]) = (r8 I:??[int, boolean, short, byte, char]) ^ (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0024 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: NEW_INSTANCE  (r5 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0026: INVOKE  (r5 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: SGET  (r7 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.flow.StateFlowSlot._state$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:302)\l0x002c: INVOKE  (r8 I:kotlinx.coroutines.internal.Symbol) =  type: STATIC call: kotlinx.coroutines.flow.StateFlowKt.access$getNONE$p():kotlinx.coroutines.internal.Symbol A[MD:():kotlinx.coroutines.internal.Symbol (m)]\l0x0030: INVOKE  (r7 I:boolean) = \l  (r7 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r10 I:java.lang.Object)\l  (r8 I:java.lang.Object)\l  (r4 I:java.lang.Object A[D('cont' kotlinx.coroutines.CancellableContinuation)])\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0037 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|0x0037: INVOKE  (r7 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:304)\l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0051 \l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:433)\l0x003e: IGET  (r8 I:java.lang.Object) = (r10 I:kotlinx.coroutines.flow.StateFlowSlot) kotlinx.coroutines.flow.StateFlowSlot._state java.lang.Object  (LINE:304)\l0x0040: INVOKE  (r9 I:kotlinx.coroutines.internal.Symbol) =  type: STATIC call: kotlinx.coroutines.flow.StateFlowKt.access$getPENDING$p():kotlinx.coroutines.internal.Symbol A[MD:():kotlinx.coroutines.internal.Symbol (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|0x0044: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0047 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|0x0047: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|0x0048: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004b \l}"];
Node_20 [shape=record,label="{20\:\ 0x004b|0x004b: NEW_INSTANCE  (r5 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x004d: INVOKE  (r5 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0050|0x0050: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0051|0x0051: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('cont' kotlinx.coroutines.CancellableContinuation)])  (LINE:305)\l0x0052: CHECK_CAST (r5 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r5 I:??[OBJECT, ARRAY]) \l0x0054: SGET  (r7 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion \l0x0056: SGET  (r7 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l0x0058: INVOKE  (r7 I:java.lang.Object) = (r7 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[MD:\<T\>:(java.lang.Object):java.lang.Object (m)]\l0x005c: INVOKE  (r5 I:kotlin.coroutines.Continuation), (r7 I:java.lang.Object) type: INTERFACE call: kotlin.coroutines.Continuation.resumeWith(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0060|0x0060: INVOKE  (r1 I:java.lang.Object A[D('uCont$iv' kotlin.coroutines.Continuation)]) = \l  (r3 I:kotlinx.coroutines.CancellableContinuationImpl A[D('cancellable$iv' kotlinx.coroutines.CancellableContinuationImpl)])\l type: VIRTUAL call: kotlinx.coroutines.CancellableContinuationImpl.getResult():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:443)\l0x0064: INVOKE  (r2 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:434)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0068|0x0068: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x006d \l}"];
Node_25 [shape=record,label="{25\:\ 0x006a|0x006a: INVOKE  (r11 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)]) type: STATIC call: kotlin.coroutines.jvm.internal.DebugProbesKt.probeCoroutineSuspended(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<?\>):void (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x006d|0x006e: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0072|0x0072: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0075 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0074|RETURN\l|0x0074: RETURN  (r1 I:java.lang.Object) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0075|0x0075: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_30 [shape=record,label="{30\:\ 0x0077|RETURN\l|0x0077: RETURN  (r0 I:java.lang.Object)  (LINE:306)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.StateFlowSlot.awaitPending((r10 'this' I:kotlinx.coroutines.flow.StateFlowSlot A[IMMUTABLE_TYPE, THIS]), (r11 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0050 \-\> B:1:?, CROSS_EDGE: B:28:0x0074 \-\> B:1:?, CROSS_EDGE: B:30:0x0077 \-\> B:1:?, CROSS_EDGE: B:24:0x0068 \-\> B:26:0x006d, CROSS_EDGE: B:15:0x0044 \-\> B:18:0x0048, CROSS_EDGE: B:13:0x003b \-\> B:22:0x0051, CROSS_EDGE: B:10:0x0034 \-\> B:23:0x0060, CROSS_EDGE: B:3:0x0018 \-\> B:9:0x002a\lDebug Info:\l  0x001b\-0x001f: r7 '$i$a$\-assert\-StateFlowSlot$awaitPending$2$1' I\l  0x003e\-0x0048: r7 '$i$a$\-assert\-StateFlowSlot$awaitPending$2$2' I\l  0x0013\-0x0060: r4 'cont' Lkotlinx\/coroutines\/CancellableContinuation;\l  0x0014\-0x0060: r6 '$i$a$\-suspendCancellableCoroutine\-StateFlowSlot$awaitPending$2' I\l  0x0002\-0x0064: r1 'uCont$iv' Lkotlin\/coroutines\/Continuation;\l  0x0003\-0x0064: r2 '$i$a$\-suspendCoroutineUninterceptedOrReturn\-CancellableContinuationKt$suspendCancellableCoroutine$2$iv' I\l  0x000d\-0x0064: r3 'cancellable$iv' Lkotlinx\/coroutines\/CancellableContinuationImpl;\l  0x0001\-0x006e: r0 '$i$f$suspendCancellableCoroutine' I\l  \-1 \-0x0077: r11 '$completion' Lkotlin\/coroutines\/Continuation;\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_23[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_22;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_22[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_1;
Node_29 -> Node_30;
Node_30 -> Node_1;
}

