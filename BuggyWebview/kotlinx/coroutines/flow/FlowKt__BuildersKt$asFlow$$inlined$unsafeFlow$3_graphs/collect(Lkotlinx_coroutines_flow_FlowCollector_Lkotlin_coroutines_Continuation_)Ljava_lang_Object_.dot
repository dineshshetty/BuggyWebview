digraph "CFG forkotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3.collect(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000}"];
Node_29 [shape=record,label="{29\:\ 0x0002|if ((r10 instanceof kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3.C08921) == false) goto L24\l}"];
Node_30 [shape=record,label="{30\:\ 0x0004|kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1 r0 = (kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3.C08921) r10\l}"];
Node_31 [shape=record,label="{31\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) == 0) goto L24\l}"];
Node_32 [shape=record,label="{32\:\ 0x000e|r0.label = r0.label \- Integer.MIN_VALUE\l}"];
Node_34 [shape=record,label="{34\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1), (r0v5 kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1) binds: [B:33:0x0014, B:32:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r10 = r0\ljava.lang.Object r0 = r10.result\ljava.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_35 [shape=record,label="{35\:\ 0x0022|switch(r10.label) \{\l    case 0: goto L23;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
Node_36 [shape=record,label="{36\:\ 0x0025}"];
Node_37 [shape=record,label="{37\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x002d|java.util.Iterator r4 = (java.util.Iterator) r10.L$1\lkotlinx.coroutines.flow.FlowCollector r5 = (kotlinx.coroutines.flow.FlowCollector) r10.L$0\lkotlin.ResultKt.throwOnFailure(r0)\l}"];
Node_51 [shape=record,label="{51\:\ 0x004f|SYNTHETIC\lPHI: r4 r5 \l  PHI: (r4v2 java.util.Iterator) = (r4v1 java.util.Iterator), (r4v4 java.util.Iterator) binds: [B:39:0x003c, B:38:0x002d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 '$this$asFlow_u24lambda_u2d3' kotlinx.coroutines.flow.FlowCollector) = (r5v1 '$this$asFlow_u24lambda_u2d3' kotlinx.coroutines.flow.FlowCollector), (r5v4 '$this$asFlow_u24lambda_u2d3' kotlinx.coroutines.flow.FlowCollector) binds: [B:39:0x003c, B:38:0x002d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_40 [shape=record,label="{40\:\ 0x004f|LOOP_START\lLOOP:0: B:40:0x004f\-\>B:45:0x0068\l}"];
Node_41 [shape=record,label="{41\:\ 0x0053|if (r4.hasNext() == false) goto L20\l}"];
Node_42 [shape=record,label="{42\:\ 0x0055|java.lang.Object r3 = r4.next()\lr10.L$0 = r5\lr10.L$1 = r4\lr10.label = 1\l}"];
Node_43 [shape=record,label="{43\:\ 0x0065|if (r5.emit(r3, r10) != r1) goto L17\l}"];
Node_45 [shape=record,label="{45\:\ 0x0068|LOOP_END\lLOOP:0: B:40:0x004f\-\>B:45:0x0068\l}"];
Node_50 [shape=record,label="{50\:\ 0x0067|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0067|RETURN\l|return r1\l}"];
Node_49 [shape=record,label="{49\:\ 0x006a|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x006a}"];
Node_48 [shape=record,label="{48\:\ 0x006e|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
Node_39 [shape=record,label="{39\:\ 0x003c|kotlin.ResultKt.throwOnFailure(r0)\ljava.lang.Iterable r2 = r8.$this_asFlow$inlined\lr4 = r2.iterator()\lr5 = r9\l}"];
Node_33 [shape=record,label="{33\:\ 0x0014|kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1 r0 = new kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3.C08921(r10)\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3.collect((r8v0 'this' kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3 A[IMMUTABLE_TYPE, THIS]), (r9v0 kotlinx.coroutines.flow.FlowCollector\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:44:0x0067 \-\> B:27:?, BACK_EDGE: B:45:0x0068 \-\> B:40:0x004f, CROSS_EDGE: B:48:0x006e \-\> B:27:?, CROSS_EDGE: B:39:0x003c \-\> B:40:0x004f, CROSS_EDGE: B:33:0x0014 \-\> B:34:0x0019, CROSS_EDGE: B:29:0x0002 \-\> B:33:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TT;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_38;
Node_35 -> Node_39;
Node_36 -> Node_37;
Node_37 -> Node_27;
Node_38 -> Node_51;
Node_51 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_49;
Node_42 -> Node_43;
Node_43 -> Node_45;
Node_43 -> Node_50[style=dashed];
Node_45 -> Node_40;
Node_50 -> Node_44;
Node_44 -> Node_27;
Node_49 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_27;
Node_39 -> Node_51;
Node_33 -> Node_34;
}

