digraph "CFG forkotlinx.coroutines.flow.StartedLazily$command$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r8 I:kotlinx.coroutines.flow.StartedLazily$command$1) kotlinx.coroutines.flow.StartedLazily$command$1.label int  (LINE:153)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:20:0x0016\l case 1: goto B:19:0x0011\l default: goto B:17:0x0009 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0009|0x0009: NEW_INSTANCE  (r9 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:155)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r9 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|0x0010: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|0x0011: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY])  (LINE:153)\l0x0012: INVOKE  (r9 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x003a|0x003a: NEW_INSTANCE  (r1 I:kotlin.KotlinNothingValueException A[D('this' kotlinx.coroutines.flow.StartedLazily$command$1)]) =  kotlin.KotlinNothingValueException \l0x003c: INVOKE  (r1 I:kotlin.KotlinNothingValueException) type: DIRECT call: kotlin.KotlinNothingValueException.\<init\>():void A[MD:():void (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x003f|0x003f: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|0x0016: INVOKE  (r9 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0019: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r2 I:java.lang.Object) = (r1 I:kotlinx.coroutines.flow.StartedLazily$command$1 A[D('this' kotlinx.coroutines.flow.StartedLazily$command$1)]) kotlinx.coroutines.flow.StartedLazily$command$1.L$0 java.lang.Object \l0x001c: CHECK_CAST (r2 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r2 I:??[OBJECT, ARRAY]) \l0x001e: NEW_INSTANCE  (r3 I:kotlin.jvm.internal.Ref$BooleanRef) =  kotlin.jvm.internal.Ref$BooleanRef  (LINE:154)\l0x0020: INVOKE  (r3 I:kotlin.jvm.internal.Ref$BooleanRef) type: DIRECT call: kotlin.jvm.internal.Ref.BooleanRef.\<init\>():void A[MD:():void (m)]\l0x0023: IGET  (r4 I:kotlinx.coroutines.flow.StateFlow\<java.lang.Integer\>) = (r1 I:kotlinx.coroutines.flow.StartedLazily$command$1 A[D('this' kotlinx.coroutines.flow.StartedLazily$command$1)]) kotlinx.coroutines.flow.StartedLazily$command$1.$subscriptionCount kotlinx.coroutines.flow.StateFlow  (LINE:155)\l0x0025: NEW_INSTANCE  (r5 I:kotlinx.coroutines.flow.StartedLazily$command$1$1) =  kotlinx.coroutines.flow.StartedLazily$command$1$1 \l0x0027: INVOKE  \l  (r5 I:kotlinx.coroutines.flow.StartedLazily$command$1$1)\l  (r3 I:kotlin.jvm.internal.Ref$BooleanRef A[D('started' kotlin.jvm.internal.Ref$BooleanRef)])\l  (r2 I:kotlinx.coroutines.flow.FlowCollector A[D('$this$flow' kotlinx.coroutines.flow.FlowCollector)])\l type: DIRECT call: kotlinx.coroutines.flow.StartedLazily$command$1.1.\<init\>(kotlin.jvm.internal.Ref$BooleanRef, kotlinx.coroutines.flow.FlowCollector):void A[MD:(kotlin.jvm.internal.Ref$BooleanRef, kotlinx.coroutines.flow.FlowCollector\<? super kotlinx.coroutines.flow.SharingCommand\>):void (m)]\l0x002a: CHECK_CAST (r5 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r5 I:??[OBJECT, ARRAY]) \l0x002c: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.StartedLazily$command$1)]) \l0x002d: CHECK_CAST (r6 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r6 I:??[OBJECT, ARRAY]) \l0x002f: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0030: IPUT  \l  (r7 I:int)\l  (r1 I:kotlinx.coroutines.flow.StartedLazily$command$1 A[D('this' kotlinx.coroutines.flow.StartedLazily$command$1)])\l kotlinx.coroutines.flow.StartedLazily$command$1.label int \l0x0032: INVOKE  (r2 I:java.lang.Object A[D('$this$flow' kotlinx.coroutines.flow.FlowCollector)]) = \l  (r4 I:kotlinx.coroutines.flow.StateFlow)\l  (r5 I:kotlinx.coroutines.flow.FlowCollector)\l  (r6 I:kotlin.coroutines.Continuation)\l type: INTERFACE call: kotlinx.coroutines.flow.StateFlow.collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<?\>):java.lang.Object (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0036|0x0036: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$flow' kotlinx.coroutines.flow.FlowCollector)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0039 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0038|RETURN\l|0x0038: RETURN  (r0 I:java.lang.Object)  (LINE:153)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0039|0x0039: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.StartedLazily$command$1)])  (LINE:155)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.StartedLazily$command$1.invokeSuspend((r8 'this' I:kotlinx.coroutines.flow.StartedLazily$command$1 A[IMMUTABLE_TYPE, THIS]), (r9 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x003f \-\> B:14:?, CROSS_EDGE: B:22:0x0038 \-\> B:14:?, CROSS_EDGE: B:23:0x0039 \-\> B:24:0x003a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0016: r0 'this' Lkotlinx\/coroutines\/flow\/StartedLazily$command$1;\l  0x0012\-0x0016: r9 '$result' Ljava\/lang\/Object;\l  0x001e\-0x0036: r2 '$this$flow' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x0023\-0x0036: r3 'started' Lkotlin\/jvm\/internal\/Ref$BooleanRef;\l  0x001a\-0x003a: r1 'this' Lkotlinx\/coroutines\/flow\/StartedLazily$command$1;\l  0x003a\-0x0047: r0 'this' Lkotlinx\/coroutines\/flow\/StartedLazily$command$1;\l  0x001a\-0x0047: r9 '$result' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_19;
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_14;
Node_19 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_14;
Node_23 -> Node_24;
}

