digraph "CFG forkotlinx.coroutines.flow.StateFlowKt.MutableStateFlow(Ljava\/lang\/Object;)Lkotlinx\/coroutines\/flow\/MutableStateFlow;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000}"];
Node_11 [shape=record,label="{11\:\ 0x0002|if (r2 != null) goto L7\l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|kotlinx.coroutines.internal.Symbol r1 = kotlinx.coroutines.flow.internal.NullSurrogate.NULL\l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|PHI: r1 \l  PHI: (r1v1 java.lang.Object) = (r1v0 java.lang.Object), (r1v2 java.lang.Object) binds: [B:13:0x0007, B:12:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|RETURN\l|return new kotlinx.coroutines.flow.StateFlowImpl(r1)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0007|r1 = r2\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.MutableStateFlow\<T\> kotlinx.coroutines.flow.StateFlowKt.MutableStateFlow((r2v0 T A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0007 \-\> B:14:0x0008\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(TT;)Lkotlinx\/coroutines\/flow\/MutableStateFlow\<TT;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

