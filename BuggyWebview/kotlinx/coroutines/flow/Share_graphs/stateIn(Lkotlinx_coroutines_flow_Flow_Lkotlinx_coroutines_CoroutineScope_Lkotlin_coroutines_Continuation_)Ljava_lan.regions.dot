digraph "CFG forkotlinx.coroutines.flow.FlowKt__ShareKt.stateIn(Lkotlinx\/coroutines\/flow\/Flow;Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1877660568 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlinx.coroutines.flow.SharingConfig kotlinx.coroutines.flow.SharingConfig r1 = configureSharing$FlowKt__ShareKt(r4, 1)\lkotlinx.coroutines.CompletableDeferred kotlinx.coroutines.CompletableDeferred r0 = kotlinx.coroutines.CompletableDeferredKt.CompletableDeferred$default(null, 1, null)\llaunchSharingDeferred$FlowKt__ShareKt(r5, r1.context, r1.upstream, r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|RETURN\l|return r0.await(r6)\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.FlowKt__ShareKt.stateIn((r4v0 kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$stateIn' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'scope' kotlinx.coroutines.CoroutineScope A[D('scope' kotlinx.coroutines.CoroutineScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.StateFlow\<? extends T\>\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/Continuation\<\-Lkotlinx\/coroutines\/flow\/StateFlow\<+TT;\>;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_4;Node_6 -> Node_7;
Node_7 -> Node_5;
Node_4 -> Node_6;
}

