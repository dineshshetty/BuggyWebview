digraph "CFG forkotlinx.coroutines.flow.FlowKt__ShareKt.asSharedFlow(Lkotlinx\/coroutines\/flow\/MutableSharedFlow;)Lkotlinx\/coroutines\/flow\/SharedFlow;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.ReadonlySharedFlow) =  kotlinx.coroutines.flow.ReadonlySharedFlow  (LINE:362)\l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('$this$asSharedFlow' kotlinx.coroutines.flow.MutableSharedFlow)]) \l0x0003: CHECK_CAST (r1 I:kotlinx.coroutines.flow.SharedFlow) = (kotlinx.coroutines.flow.SharedFlow) (r1 I:??[OBJECT, ARRAY]) \l0x0005: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.ReadonlySharedFlow)\l  (r1 I:kotlinx.coroutines.flow.SharedFlow)\l  (r2 I:kotlinx.coroutines.Job)\l type: DIRECT call: kotlinx.coroutines.flow.ReadonlySharedFlow.\<init\>(kotlinx.coroutines.flow.SharedFlow, kotlinx.coroutines.Job):void A[MD:(kotlinx.coroutines.flow.SharedFlow\<? extends T\>, kotlinx.coroutines.Job):void (m)]\l0x0009: CHECK_CAST (r0 I:kotlinx.coroutines.flow.SharedFlow) = (kotlinx.coroutines.flow.SharedFlow) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|RETURN\l|0x000b: RETURN  (r0 I:kotlinx.coroutines.flow.SharedFlow\<T\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.SharedFlow\<T\> kotlinx.coroutines.flow.FlowKt__ShareKt.asSharedFlow((r3 I:kotlinx.coroutines.flow.MutableSharedFlow\<T\> A[D('$this$asSharedFlow' kotlinx.coroutines.flow.MutableSharedFlow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000b: r3 '$this$asSharedFlow' Lkotlinx\/coroutines\/flow\/MutableSharedFlow;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/MutableSharedFlow\<TT;\>;)Lkotlinx\/coroutines\/flow\/SharedFlow\<TT;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

