digraph "CFG forkotlinx.coroutines.flow.FlowKt__ShareKt.configureSharing$FlowKt__ShareKt(Lkotlinx\/coroutines\/flow\/Flow;I)Lkotlinx\/coroutines\/flow\/SharingConfig;" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|r1 = 1\l}"];
Node_35 [shape=record,label="{35\:\ 0x0006|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L11\l}"];
Node_36 [shape=record,label="{36\:\ 0x0008}"];
Node_37 [shape=record,label="{37\:\ 0x0009|if (r8 \< 0) goto L10\l}"];
Node_38 [shape=record,label="{38\:\ 0x000b|r0 = 1\l}"];
Node_40 [shape=record,label="{40\:\ 0x000e|PHI: r0 \l  PHI: (r0v7 int) = (r0v6 int), (r0v9 int) binds: [B:39:0x000d, B:38:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == 0) goto L7\l}"];
Node_42 [shape=record,label="{42\:\ 0x0011}"];
Node_43 [shape=record,label="{43\:\ 0x0016|throw new java.lang.AssertionError()\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x000d|r0 = 0\l}"];
Node_44 [shape=record,label="{44\:\ 0x0017|int r0 = kotlin.ranges.RangesKt.coerceAtLeast(r8, kotlinx.coroutines.channels.Channel.Factory.getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core()) \- r8\l}"];
Node_45 [shape=record,label="{45\:\ 0x0024|if ((r7 instanceof kotlinx.coroutines.flow.internal.ChannelFlow) == false) goto L28\l}"];
Node_46 [shape=record,label="{46\:\ 0x0026|kotlinx.coroutines.flow.Flow r3 = ((kotlinx.coroutines.flow.internal.ChannelFlow) r7).dropChannelOperators()\l}"];
Node_47 [shape=record,label="{47\:\ 0x002d|if (r3 == null) goto L28\l}"];
Node_48 [shape=record,label="{48\:\ 0x002f}"];
Node_49 [shape=record,label="{49\:\ 0x0037|switch(((kotlinx.coroutines.flow.internal.ChannelFlow) r7).capacity) \{\l    case \-3: goto L20;\l    case \-2: goto L20;\l    case \-1: goto L17;\l    case 0: goto L20;\l    default: goto L17;\l\}\l}"];
Node_50 [shape=record,label="{50\:\ 0x003a|int r1 = ((kotlinx.coroutines.flow.internal.ChannelFlow) r7).capacity\l}"];
Node_60 [shape=record,label="{60\:\ 0x0059|PHI: r1 \l  PHI: (r1v8 int) = (r1v0 int), (r1v2 int), (r1v6 int), (r1v7 int), (r1v11 int) binds: [B:57:0x0055, B:59:0x0058, B:56:0x0053, B:55:0x0051, B:50:0x003a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_61 [shape=record,label="{61\:\ 0x0066|RETURN\l|return new kotlinx.coroutines.flow.SharingConfig\<\>(r3, r1, ((kotlinx.coroutines.flow.internal.ChannelFlow) r7).onBufferOverflow, ((kotlinx.coroutines.flow.internal.ChannelFlow) r7).context)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0040}"];
Node_52 [shape=record,label="{52\:\ 0x0048|if (((kotlinx.coroutines.flow.internal.ChannelFlow) r7).onBufferOverflow != kotlinx.coroutines.channels.BufferOverflow.SUSPEND) goto L26\l}"];
Node_53 [shape=record,label="{53\:\ 0x004a}"];
Node_54 [shape=record,label="{54\:\ 0x004f|if (((kotlinx.coroutines.flow.internal.ChannelFlow) r7).capacity != 0) goto L25\l}"];
Node_55 [shape=record,label="{55\:\ 0x0051|r1 = 0\l}"];
Node_56 [shape=record,label="{56\:\ 0x0053|r1 = r0\l}"];
Node_57 [shape=record,label="{57\:\ 0x0055|if (r8 != 0) goto L27\l}"];
Node_59 [shape=record,label="{59\:\ 0x0058|r1 = 0\l}"];
Node_62 [shape=record,label="{62\:\ 0x0067}"];
Node_63 [shape=record,label="{63\:\ 0x0074|RETURN\l|return new kotlinx.coroutines.flow.SharingConfig\<\>(r7, r0, kotlinx.coroutines.channels.BufferOverflow.SUSPEND, kotlin.coroutines.EmptyCoroutineContext.INSTANCE)\l}"];
MethodNode[shape=record,label="{private static final kotlinx.coroutines.flow.SharingConfig\<T\> kotlinx.coroutines.flow.FlowKt__ShareKt.configureSharing$FlowKt__ShareKt((r7v0 kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$configureSharing' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'replay' int A[D('replay' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:61:0x0066 \-\> B:33:?, CROSS_EDGE: B:55:0x0051 \-\> B:60:0x0059, CROSS_EDGE: B:56:0x0053 \-\> B:60:0x0059, CROSS_EDGE: B:59:0x0058 \-\> B:60:0x0059, CROSS_EDGE: B:57:0x0055 \-\> B:60:0x0059, CROSS_EDGE: B:63:0x0074 \-\> B:33:?, CROSS_EDGE: B:45:0x0024 \-\> B:62:0x0067, CROSS_EDGE: B:39:0x000d \-\> B:40:0x000e, CROSS_EDGE: B:35:0x0006 \-\> B:44:0x0017\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;I)Lkotlinx\/coroutines\/flow\/SharingConfig\<TT;\>;\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_44;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_40 -> Node_42;
Node_40 -> Node_44[style=dashed];
Node_42 -> Node_43;
Node_43 -> Node_33;
Node_39 -> Node_40;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_62;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_62;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_49 -> Node_51;
Node_50 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_33;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_57;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_60;
Node_56 -> Node_60;
Node_57 -> Node_59;
Node_57 -> Node_60[style=dashed];
Node_59 -> Node_60;
Node_62 -> Node_63;
Node_63 -> Node_33;
}

