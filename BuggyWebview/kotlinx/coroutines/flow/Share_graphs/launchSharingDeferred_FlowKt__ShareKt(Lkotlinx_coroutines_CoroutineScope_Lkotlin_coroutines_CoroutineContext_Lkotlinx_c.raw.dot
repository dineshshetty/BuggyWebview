digraph "CFG forkotlinx.coroutines.flow.FlowKt__ShareKt.launchSharingDeferred$FlowKt__ShareKt(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;Lkotlinx\/coroutines\/flow\/Flow;Lkotlinx\/coroutines\/CompletableDeferred;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1) =  kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1  (LINE:337)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1)\l  (r10 I:kotlinx.coroutines.flow.Flow A[D('upstream' kotlinx.coroutines.flow.Flow)])\l  (r11 I:kotlinx.coroutines.CompletableDeferred A[D('result' kotlinx.coroutines.CompletableDeferred)])\l  (r1 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.\<init\>(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.CompletableDeferred, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.Flow\<? extends T\>, kotlinx.coroutines.CompletableDeferred\<kotlinx.coroutines.flow.StateFlow\<T\>\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1\>):void (m)]\l0x0006: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0007: CHECK_CAST (r5 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r5 I:??[OBJECT, ARRAY]) \l0x0009: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x000b: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$this$launchSharingDeferred' kotlinx.coroutines.CoroutineScope)]) \l0x000d: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('context' kotlin.coroutines.CoroutineContext)]) \l0x000e: INVOKE  \l  (r2 I:kotlinx.coroutines.CoroutineScope)\l  (r3 I:kotlin.coroutines.CoroutineContext)\l  (r4 I:kotlinx.coroutines.CoroutineStart)\l  (r5 I:kotlin.jvm.functions.Function2)\l  (r6 I:int)\l  (r7 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.BuildersKt.launch$default(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function2, int, java.lang.Object):kotlinx.coroutines.Job A[MD:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function2, int, java.lang.Object):kotlinx.coroutines.Job (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|0x0011: RETURN    (LINE:354)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final void kotlinx.coroutines.flow.FlowKt__ShareKt.launchSharingDeferred$FlowKt__ShareKt((r8 I:kotlinx.coroutines.CoroutineScope A[D('$this$launchSharingDeferred' kotlinx.coroutines.CoroutineScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('upstream' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlinx.coroutines.CompletableDeferred\<kotlinx.coroutines.flow.StateFlow\<T\>\> A[D('result' kotlinx.coroutines.CompletableDeferred), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0011: r8 '$this$launchSharingDeferred' Lkotlinx\/coroutines\/CoroutineScope;\l  \-1 \-0x0011: r9 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x0011: r10 'upstream' Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x0011: r11 'result' Lkotlinx\/coroutines\/CompletableDeferred;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlinx\/coroutines\/CompletableDeferred\<Lkotlinx\/coroutines\/flow\/StateFlow\<TT;\>;\>;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

