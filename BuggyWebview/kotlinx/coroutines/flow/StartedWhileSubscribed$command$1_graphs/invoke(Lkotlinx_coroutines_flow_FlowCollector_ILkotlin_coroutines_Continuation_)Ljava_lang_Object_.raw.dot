digraph "CFG forkotlinx.coroutines.flow.StartedWhileSubscribed$command$1.invoke(Lkotlinx\/coroutines\/flow\/FlowCollector;ILkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.StartedWhileSubscribed$command$1) =  kotlinx.coroutines.flow.StartedWhileSubscribed$command$1 \l0x0002: IGET  (r1 I:kotlinx.coroutines.flow.StartedWhileSubscribed) = (r2 I:kotlinx.coroutines.flow.StartedWhileSubscribed$command$1) kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.this$0 kotlinx.coroutines.flow.StartedWhileSubscribed \l0x0004: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.StartedWhileSubscribed$command$1)\l  (r1 I:kotlinx.coroutines.flow.StartedWhileSubscribed)\l  (r5 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.\<init\>(kotlinx.coroutines.flow.StartedWhileSubscribed, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.StartedWhileSubscribed, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.StartedWhileSubscribed$command$1\>):void (m)]\l0x0007: IPUT  (r3 I:java.lang.Object), (r0 I:kotlinx.coroutines.flow.StartedWhileSubscribed$command$1) kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.L$0 java.lang.Object \l0x0009: IPUT  (r4 I:int), (r0 I:kotlinx.coroutines.flow.StartedWhileSubscribed$command$1) kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.I$0 int \l0x000b: SGET  (r1 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l0x000d: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlinx.coroutines.flow.StartedWhileSubscribed$command$1), (r1 I:java.lang.Object) type: VIRTUAL call: kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.invokeSuspend(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):java.lang.Object (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:java.lang.Object) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.invoke((r2 'this' I:kotlinx.coroutines.flow.StartedWhileSubscribed$command$1 A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlinx.coroutines.flow.FlowCollector\<? super kotlinx.coroutines.flow.SharingCommand\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | SIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-Lkotlinx\/coroutines\/flow\/SharingCommand;\>;ILkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

