digraph "CFG forkotlinx.coroutines.flow.StartedWhileSubscribed$command$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|java.lang.Object r0 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|switch(r8.label) \{\l    case 0: goto L25;\l    case 1: goto L24;\l    case 2: goto L18;\l    case 3: goto L14;\l    case 4: goto L9;\l    case 5: goto L6;\l    default: goto L3;\l\}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009}"];
Node_5 [shape=record,label="{5\:\ 0x0010|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|kotlin.ResultKt.throwOnFailure(r9)\l}"];
Node_34 [shape=record,label="{34\:\ 0x00b1}"];
Node_35 [shape=record,label="{35\:\ 0x00b3|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|r1 = r8\lkotlinx.coroutines.flow.FlowCollector r2 = (kotlinx.coroutines.flow.FlowCollector) r1.L$0\lkotlin.ResultKt.throwOnFailure(r9)\l}"];
Node_29 [shape=record,label="{29\:\ 0x009d|PHI: r1 r2 \l  PHI: (r1v6 kotlinx.coroutines.flow.StartedWhileSubscribed$command$1) = (r1v2 kotlinx.coroutines.flow.StartedWhileSubscribed$command$1), (r1v4 kotlinx.coroutines.flow.StartedWhileSubscribed$command$1), (r1v7 kotlinx.coroutines.flow.StartedWhileSubscribed$command$1) binds: [B:22:0x0075, B:27:0x009a, B:7:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v9 '$this$transformLatest' kotlinx.coroutines.flow.FlowCollector) = (r2v3 '$this$transformLatest' kotlinx.coroutines.flow.FlowCollector), (r2v6 '$this$transformLatest' kotlinx.coroutines.flow.FlowCollector), (r2v12 '$this$transformLatest' kotlinx.coroutines.flow.FlowCollector) binds: [B:22:0x0075, B:27:0x009a, B:7:0x0017] A[DONT_GENERATE, DONT_INLINE]\l|r1.L$0 = null\lr1.label = 5\l}"];
Node_30 [shape=record,label="{30\:\ 0x00ac|if (r2.emit(kotlinx.coroutines.flow.SharingCommand.STOP_AND_RESET_REPLAY_CACHE, r1) != r0) goto L13\l}"];
Node_31 [shape=record,label="{31\:\ 0x00ae|RETURN\l|return r0\l}"];
Node_32 [shape=record,label="{32\:\ 0x00af}"];
Node_8 [shape=record,label="{8\:\ 0x0021|r1 = r8\lkotlinx.coroutines.flow.FlowCollector r2 = (kotlinx.coroutines.flow.FlowCollector) r1.L$0\lkotlin.ResultKt.throwOnFailure(r9)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0088|PHI: r1 r2 \l  PHI: (r1v4 kotlinx.coroutines.flow.StartedWhileSubscribed$command$1) = (r1v2 kotlinx.coroutines.flow.StartedWhileSubscribed$command$1), (r1v5 kotlinx.coroutines.flow.StartedWhileSubscribed$command$1) binds: [B:24:0x0085, B:8:0x0021] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v6 '$this$transformLatest' kotlinx.coroutines.flow.FlowCollector) = (r2v3 '$this$transformLatest' kotlinx.coroutines.flow.FlowCollector), (r2v8 '$this$transformLatest' kotlinx.coroutines.flow.FlowCollector) binds: [B:24:0x0085, B:8:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|long r3 = r1.this$0.replayExpiration\lr1.L$0 = r2\lr1.label = 4\l}"];
Node_27 [shape=record,label="{27\:\ 0x009a|if (kotlinx.coroutines.DelayKt.delay(r3, r1) != r0) goto L10\l}"];
Node_28 [shape=record,label="{28\:\ 0x009c|RETURN\l|return r0\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|r1 = r8\lkotlinx.coroutines.flow.FlowCollector r2 = (kotlinx.coroutines.flow.FlowCollector) r1.L$0\lkotlin.ResultKt.throwOnFailure(r9)\l}"];
Node_21 [shape=record,label="{21\:\ 0x006b|PHI: r1 r2 \l  PHI: (r1v2 kotlinx.coroutines.flow.StartedWhileSubscribed$command$1) = (r1v1 kotlinx.coroutines.flow.StartedWhileSubscribed$command$1), (r1v3 kotlinx.coroutines.flow.StartedWhileSubscribed$command$1) binds: [B:19:0x0068, B:9:0x002a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 '$this$transformLatest' kotlinx.coroutines.flow.FlowCollector) = (r2v1 '$this$transformLatest' kotlinx.coroutines.flow.FlowCollector), (r2v5 '$this$transformLatest' kotlinx.coroutines.flow.FlowCollector) binds: [B:19:0x0068, B:9:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|long r3 = r1.this$0.replayExpiration\l}"];
Node_22 [shape=record,label="{22\:\ 0x0075|if ((r3 \> 0 ? 1 : (r3 == 0 ? 0 : \-1)) \<= 0) goto L10\l}"];
Node_23 [shape=record,label="{23\:\ 0x0077|r1.L$0 = r2\lr1.label = 3\l}"];
Node_24 [shape=record,label="{24\:\ 0x0085|if (r2.emit(kotlinx.coroutines.flow.SharingCommand.STOP, r1) != r0) goto L15\l}"];
Node_25 [shape=record,label="{25\:\ 0x0087|RETURN\l|return r0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|kotlin.ResultKt.throwOnFailure(r9)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|kotlin.ResultKt.throwOnFailure(r9)\lr1 = r8\lkotlinx.coroutines.flow.FlowCollector r2 = (kotlinx.coroutines.flow.FlowCollector) r1.L$0\lint r3 = r1.I$0\l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|if (r3 \<= 0) goto L31\l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|r1.label = 1\l}"];
Node_14 [shape=record,label="{14\:\ 0x0051|if (r2.emit(kotlinx.coroutines.flow.SharingCommand.START, r1) != r0) goto L30\l}"];
Node_15 [shape=record,label="{15\:\ 0x0053|RETURN\l|return r0\l}"];
Node_16 [shape=record,label="{16\:\ 0x0054}"];
Node_18 [shape=record,label="{18\:\ 0x0056|long r3 = r1.this$0.stopTimeout\lr1.L$0 = r2\lr1.label = 2\l}"];
Node_19 [shape=record,label="{19\:\ 0x0068|if (kotlinx.coroutines.DelayKt.delay(r3, r1) != r0) goto L19\l}"];
Node_20 [shape=record,label="{20\:\ 0x006a|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.invokeSuspend((r8v0 'this' kotlinx.coroutines.flow.StartedWhileSubscribed$command$1 A[IMMUTABLE_TYPE, THIS]), (r9v0 '$result' java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:35:0x00b3 \-\> B:1:?, CROSS_EDGE: B:31:0x00ae \-\> B:1:?, CROSS_EDGE: B:32:0x00af \-\> B:34:0x00b1, CROSS_EDGE: B:28:0x009c \-\> B:1:?, CROSS_EDGE: B:27:0x009a \-\> B:29:0x009d, CROSS_EDGE: B:25:0x0087 \-\> B:1:?, CROSS_EDGE: B:24:0x0085 \-\> B:26:0x0088, CROSS_EDGE: B:22:0x0075 \-\> B:29:0x009d, CROSS_EDGE: B:10:0x0033 \-\> B:34:0x00b1, CROSS_EDGE: B:15:0x0053 \-\> B:1:?, CROSS_EDGE: B:16:0x0054 \-\> B:34:0x00b1, CROSS_EDGE: B:20:0x006a \-\> B:1:?, CROSS_EDGE: B:19:0x0068 \-\> B:21:0x006b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [176=7]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_3 -> Node_7;
Node_3 -> Node_8;
Node_3 -> Node_9;
Node_3 -> Node_10;
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_1;
Node_7 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_1;
Node_32 -> Node_34;
Node_8 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_1;
Node_9 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_29;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_1;
Node_10 -> Node_34;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_18;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_1;
Node_16 -> Node_34;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_1;
}

