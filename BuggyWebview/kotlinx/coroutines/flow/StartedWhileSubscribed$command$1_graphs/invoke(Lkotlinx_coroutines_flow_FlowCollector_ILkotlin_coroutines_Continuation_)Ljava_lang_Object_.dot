digraph "CFG forkotlinx.coroutines.flow.StartedWhileSubscribed$command$1.invoke(Lkotlinx\/coroutines\/flow\/FlowCollector;ILkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlinx.coroutines.flow.StartedWhileSubscribed$command$1 r0 = new kotlinx.coroutines.flow.StartedWhileSubscribed$command$1(r2.this$0, r5)\lr0.L$0 = r3\lr0.I$0 = r4\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|RETURN\l|return r0.invokeSuspend(kotlin.Unit.INSTANCE)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.invoke((r2v0 'this' kotlinx.coroutines.flow.StartedWhileSubscribed$command$1 A[IMMUTABLE_TYPE, THIS]), (r3v0 kotlinx.coroutines.flow.FlowCollector\<? super kotlinx.coroutines.flow.SharingCommand\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-Lkotlinx\/coroutines\/flow\/SharingCommand;\>;ILkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

