digraph "CFG forkotlinx.coroutines.flow.DistinctFlowImpl.collect(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|kotlin.jvm.internal.Ref$ObjectRef r0 = new kotlin.jvm.internal.Ref.ObjectRef()\lr0.element = (T) kotlinx.coroutines.flow.internal.NullSurrogate.NULL\ljava.lang.Object r1 = r3.upstream.collect(new kotlinx.coroutines.flow.DistinctFlowImpl$collect$2(r3, r0, r4), r5)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|if (r1 != kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()) goto L5\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|RETURN\l|return r1\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d}"];
Node_13 [shape=record,label="{13\:\ 0x001f|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.DistinctFlowImpl.collect((r3v0 'this' kotlinx.coroutines.flow.DistinctFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r4v0 kotlinx.coroutines.flow.FlowCollector\<? super T\> A[D('collector' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001f \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TT;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

