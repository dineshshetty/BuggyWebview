digraph "CFG forkotlinx.coroutines.flow.FlowKt__ContextKt.checkFlowContext$FlowKt__ContextKt(Lkotlin\/coroutines\/CoroutineContext;)V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.Job$Key) =  kotlinx.coroutines.Job.Key kotlinx.coroutines.Job$Key  (LINE:281)\l0x0002: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r0 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x000c \l}"];
Node_24 [shape=record,label="{24\:\ 0x000a|0x000a: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0010 \l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|RETURN\l|0x000f: RETURN    (LINE:284)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0010|0x0010: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:281)\l0x0011: CONST_STR  (r1 I:java.lang.String) =  \"Flow context cannot contain job in it. Had \"  (LINE:282)\l0x0013: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-FlowKt__ContextKt$checkFlowContext$1' int)]) = (r1 I:java.lang.String), (r2 I:java.lang.Object A[D('context' kotlin.coroutines.CoroutineContext)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x0017: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:281)\l0x0019: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x001d: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0020|0x0020: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000c|0x000c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private static final void kotlinx.coroutines.flow.FlowKt__ContextKt.checkFlowContext$FlowKt__ContextKt((r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:29:0x0020 \-\> B:21:?, CROSS_EDGE: B:25:0x000c \-\> B:26:0x000d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0017: r0 '$i$a$\-require\-FlowKt__ContextKt$checkFlowContext$1' I\l  \-1 \-0x0020: r2 'context' Lkotlin\/coroutines\/CoroutineContext;\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_21;
Node_28 -> Node_29;
Node_29 -> Node_21;
Node_25 -> Node_26;
}

