digraph "CFG forkotlinx.coroutines.flow.FlowKt__ContextKt.buffer(Lkotlinx\/coroutines\/flow\/Flow;ILkotlinx\/coroutines\/channels\/BufferOverflow;)Lkotlinx\/coroutines\/flow\/Flow;" {
Node_58 [shape=record,label="{58\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_60 [shape=record,label="{60\:\ 0x0000|r0 = false\l}"];
Node_61 [shape=record,label="{61\:\ 0x0003|if (r11 \>= 0) goto L27\l}"];
Node_62 [shape=record,label="{62\:\ 0x0005}"];
Node_63 [shape=record,label="{63\:\ 0x0006|if (r11 == (\-2)) goto L27\l}"];
Node_64 [shape=record,label="{64\:\ 0x0008|if (r11 != (\-1)) goto L6\l}"];
Node_66 [shape=record,label="{66\:\ 0x000b|r3 = false\l}"];
Node_68 [shape=record,label="{68\:\ 0x000e|PHI: r3 \l  PHI: (r3v1 boolean) = (r3v0 boolean), (r3v6 boolean) binds: [B:67:0x000d, B:66:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == false) goto L25\l}"];
Node_69 [shape=record,label="{69\:\ 0x0010|if (r11 != (\-1)) goto L24\l}"];
Node_70 [shape=record,label="{70\:\ 0x0012}"];
Node_71 [shape=record,label="{71\:\ 0x0014|if (r12 != kotlinx.coroutines.channels.BufferOverflow.SUSPEND) goto L11\l}"];
Node_73 [shape=record,label="{73\:\ 0x0017|PHI: r0 \l  PHI: (r0v5 boolean) = (r0v4 boolean), (r0v0 boolean) binds: [B:72:0x0016, B:71:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L22\l}"];
Node_74 [shape=record,label="{74\:\ 0x0019|r0 = r11\lr1 = r12\l}"];
Node_75 [shape=record,label="{75\:\ 0x001b|if (r0 != (\-1)) goto L15\l}"];
Node_76 [shape=record,label="{76\:\ 0x001d|r0 = 0\lkotlinx.coroutines.channels.BufferOverflow r1 = kotlinx.coroutines.channels.BufferOverflow.DROP_OLDEST\l}"];
Node_77 [shape=record,label="{77\:\ 0x0020|PHI: r0 r1 \l  PHI: (r0v9 'capacity' int) = (r0v8 'capacity' int), (r0v10 'capacity' int) binds: [B:75:0x001b, B:76:0x001d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v6 'onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow) = (r1v5 'onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow), (r1v7 'onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow) binds: [B:75:0x001b, B:76:0x001d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_78 [shape=record,label="{78\:\ 0x0023|if ((r10 instanceof kotlinx.coroutines.flow.internal.FusibleFlow) == false) goto L20\l}"];
Node_79 [shape=record,label="{79\:\ 0x0025}"];
Node_86 [shape=record,label="{86\:\ ?|SYNTHETIC\lRETURN\l|return kotlinx.coroutines.flow.internal.FusibleFlow.DefaultImpls.fuse$default((kotlinx.coroutines.flow.internal.FusibleFlow) r10, null, r0, r1, 1, null)\l}"];
Node_59 [shape=record,label="{59\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_80 [shape=record,label="{80\:\ 0x0032}"];
Node_81 [shape=record,label="{81\:\ 0x0041|RETURN\lORIG_RETURN\l|return new kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl(r10, null, r0, r1, 2, null)\l}"];
Node_82 [shape=record,label="{82\:\ 0x0042}"];
Node_83 [shape=record,label="{83\:\ 0x004f|throw new java.lang.IllegalArgumentException(\"CONFLATED capacity cannot be used with non\-default onBufferOverflow\".toString())\l}"];
Node_72 [shape=record,label="{72\:\ 0x0016|r0 = true\l}"];
Node_84 [shape=record,label="{84\:\ 0x0050}"];
Node_85 [shape=record,label="{85\:\ 0x0064|throw new java.lang.IllegalArgumentException(kotlin.jvm.internal.Intrinsics.stringPlus(\"Buffer size should be non\-negative, BUFFERED, or CONFLATED, but was \", java.lang.Integer.valueOf(r11)).toString())\l}"];
Node_67 [shape=record,label="{67\:\ 0x000d|r3 = true\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.Flow\<T\> kotlinx.coroutines.flow.FlowKt__ContextKt.buffer((r10v0 kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$buffer' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'capacity' int A[D('capacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow A[D('onBufferOverflow' kotlinx.coroutines.channels.BufferOverflow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:80:0x0032 \-\> B:81:0x0041, CROSS_EDGE: B:75:0x001b \-\> B:77:0x0020, CROSS_EDGE: B:83:0x004f \-\> B:59:?, CROSS_EDGE: B:71:0x0014 \-\> B:73:0x0017, CROSS_EDGE: B:69:0x0010 \-\> B:72:0x0016, CROSS_EDGE: B:85:0x0064 \-\> B:59:?, CROSS_EDGE: B:67:0x000d \-\> B:68:0x000e, CROSS_EDGE: B:63:0x0006 \-\> B:67:0x000d, CROSS_EDGE: B:61:0x0003 \-\> B:67:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;ILkotlinx\/coroutines\/channels\/BufferOverflow;)Lkotlinx\/coroutines\/flow\/Flow\<TT;\>;\l}"];
MethodNode -> Node_58;Node_58 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_67;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_67;
Node_64 -> Node_66;
Node_64 -> Node_67[style=dashed];
Node_66 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_84;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_72;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_82;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_77;
Node_76 -> Node_77;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_80;
Node_79 -> Node_86;
Node_86 -> Node_59;
Node_80 -> Node_81;
Node_81 -> Node_59;
Node_82 -> Node_83;
Node_83 -> Node_59;
Node_72 -> Node_73;
Node_84 -> Node_85;
Node_85 -> Node_59;
Node_67 -> Node_68;
}

