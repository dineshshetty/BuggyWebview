digraph "CFG forkotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r8 I:kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1) kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.label int  (LINE:118)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:11:0x001d\l case 1: goto B:6:0x0011\l default: goto B:4:0x0009 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: NEW_INSTANCE  (r9 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:120)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r9 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY])  (LINE:118)\l0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: IGET  (r2 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1 A[D('this' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1)])\l kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.L$0 java.lang.Object \l0x0015: CHECK_CAST (r2 I:kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1) = (kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{AbortFlowException \-\> 0x001b, blocks: (B:7:0x0017), top: B:24:0x0017 \}\lCatch: AbortFlowException \-\> 0x001b\l|0x0017: INVOKE  (r9 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[Catch: AbortFlowException \-\> 0x001b, MD:(java.lang.Object):void (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0051|0x0052: SGET  (r1 I:kotlin.Unit A[D('$i$f$collectWhile' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_21 [shape=record,label="{21\:\ 0x0054|RETURN\l|0x0054: RETURN  (r1 I:java.lang.Object)  (LINE:120)\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|ExcHandler: AbortFlowException \-\> 0x001b\l|0x001b: MOVE_EXCEPTION  (r3 I:kotlinx.coroutines.flow.internal.AbortFlowException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: AbortFlowException \-\> 0x001b] (LINE:154)\l}"];
Node_19 [shape=record,label="{19\:\ 0x004b|0x004b: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('collector$iv' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1)]) = \l  (r2 I:??[OBJECT, ARRAY] A[D('collector$iv' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1)])\l  (LINE:155)\l0x004c: CHECK_CAST (r4 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r4 I:??[OBJECT, ARRAY]) \l0x004e: INVOKE  \l  (r3 I:kotlinx.coroutines.flow.internal.AbortFlowException A[D('e$iv' kotlinx.coroutines.flow.internal.AbortFlowException)])\l  (r4 I:kotlinx.coroutines.flow.FlowCollector)\l type: STATIC call: kotlinx.coroutines.flow.internal.FlowExceptions_commonKt.checkOwnership(kotlinx.coroutines.flow.internal.AbortFlowException, kotlinx.coroutines.flow.FlowCollector):void A[MD:(kotlinx.coroutines.flow.internal.AbortFlowException, kotlinx.coroutines.flow.FlowCollector\<?\>):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|0x001d: INVOKE  (r9 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:118)\l0x0020: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x0021: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1 A[D('this' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1)])\l kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.L$0 java.lang.Object \l0x0023: CHECK_CAST (r2 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r2 I:??[OBJECT, ARRAY]) \l0x0025: IGET  (r3 I:kotlinx.coroutines.flow.Flow\<T\>) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1 A[D('this' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1)])\l kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.$this_transformWhile kotlinx.coroutines.flow.Flow  (LINE:120)\l0x0027: IGET  (r4 I:kotlin.jvm.functions.Function3\<kotlinx.coroutines.flow.FlowCollector\<? super R\>, T, kotlin.coroutines.Continuation\<? super java.lang.Boolean\>, java.lang.Object\>) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1 A[D('this' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1)])\l kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.$transform kotlin.jvm.functions.Function3 \l0x0029: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002a: NEW_INSTANCE  (r6 I:kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1) =  kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1  (LINE:143)\l0x002c: INVOKE  \l  (r6 I:kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1)\l  (r4 I:kotlin.jvm.functions.Function3)\l  (r2 I:kotlinx.coroutines.flow.FlowCollector A[D('$this$flow' kotlinx.coroutines.flow.FlowCollector)])\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1.\<init\>(kotlin.jvm.functions.Function3, kotlinx.coroutines.flow.FlowCollector):void A[MD:(kotlin.jvm.functions.Function3, kotlinx.coroutines.flow.FlowCollector):void (m)]\l0x002f: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0031|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{AbortFlowException \-\> 0x0047, blocks: (B:12:0x0031), top: B:22:0x0031 \}\lCatch: AbortFlowException \-\> 0x0047\l|0x0031: MOVE  (r2 I:??[OBJECT, ARRAY]) = \l  (r4 I:??[OBJECT, ARRAY] A[D('collector$iv' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1)])\l A[TRY_ENTER] (LINE:153)\l0x0032: CHECK_CAST (r2 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r2 I:??[OBJECT, ARRAY]) A[Catch: AbortFlowException \-\> 0x0047]\l0x0034: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1)]) \l0x0035: CHECK_CAST (r6 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r6 I:??[OBJECT, ARRAY]) A[Catch: AbortFlowException \-\> 0x0047]\l0x0037: IPUT  \l  (r4 I:java.lang.Object A[D('collector$iv' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1)])\l  (r1 I:kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1 A[D('this' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1)])\l kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.L$0 java.lang.Object A[Catch: AbortFlowException \-\> 0x0047]\l0x0039: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x003a: IPUT  \l  (r7 I:int)\l  (r1 I:kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1 A[D('this' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1)])\l kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.label int A[Catch: AbortFlowException \-\> 0x0047]\l0x003c: INVOKE  (r2 I:java.lang.Object) = \l  (r3 I:kotlinx.coroutines.flow.Flow A[D('$this$collectWhile$iv' kotlinx.coroutines.flow.Flow)])\l  (r2 I:kotlinx.coroutines.flow.FlowCollector)\l  (r6 I:kotlin.coroutines.Continuation)\l type: INTERFACE call: kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[Catch: AbortFlowException \-\> 0x0047, MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m), TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|0x0040: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0043 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|RETURN\l|0x0042: RETURN  (r0 I:java.lang.Object)  (LINE:118)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0043|0x0043: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1)])  (LINE:153)\l0x0044: MOVE  (r2 I:??[OBJECT, ARRAY]) = \l  (r4 I:??[OBJECT, ARRAY] A[D('collector$iv' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1)])\l \l0x0045: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$f$collectWhile' int)]) \l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|ExcHandler: AbortFlowException \-\> 0x0047\l|0x0047: MOVE_EXCEPTION  (r3 I:kotlinx.coroutines.flow.internal.AbortFlowException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: AbortFlowException \-\> 0x0047] (LINE:154)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|0x0048: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1)]) \l0x0049: MOVE  (r2 I:??[OBJECT, ARRAY]) = \l  (r4 I:??[OBJECT, ARRAY] A[D('collector$iv' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1)])\l \l0x004a: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$f$collectWhile' int)]) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.invokeSuspend((r8 'this' I:kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1 A[IMMUTABLE_TYPE, THIS]), (r9 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:21:0x0054 \-\> B:1:?, CROSS_EDGE: B:19:0x004b \-\> B:20:0x0051, CROSS_EDGE: B:24:0x0017 \-\> B:9:0x001b, CROSS_EDGE: B:14:0x0042 \-\> B:1:?, CROSS_EDGE: B:15:0x0043 \-\> B:20:0x0051, CROSS_EDGE: B:18:0x0048 \-\> B:19:0x004b, CROSS_EDGE: B:22:0x0031 \-\> B:17:0x0047\lDebug Info:\l  0x0012\-0x001d: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__LimitKt$transformWhile$1;\l  0x0013\-0x001d: r1 '$i$f$collectWhile' I\l  0x0017\-0x001d: r2 'collector$iv' Lkotlinx\/coroutines\/flow\/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1;\l  0x0012\-0x001d: r9 '$result' Ljava\/lang\/Object;\l  0x0025\-0x0030: r2 '$this$flow' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x0027\-0x0040: r3 '$this$collectWhile$iv' Lkotlinx\/coroutines\/flow\/Flow;\l  0x0030\-0x0046: r4 'collector$iv' Lkotlinx\/coroutines\/flow\/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1;\l  0x002a\-0x0046: r5 '$i$f$collectWhile' I\l  0x0021\-0x0046: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__LimitKt$transformWhile$1;\l  0x0046\-0x0047: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__LimitKt$transformWhile$1;\l  0x0046\-0x0047: r2 'collector$iv' Lkotlinx\/coroutines\/flow\/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1;\l  0x0046\-0x0047: r1 '$i$f$collectWhile' I\l  0x0047\-0x004b: r4 'collector$iv' Lkotlinx\/coroutines\/flow\/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1;\l  0x0047\-0x004b: r5 '$i$f$collectWhile' I\l  0x0047\-0x004b: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__LimitKt$transformWhile$1;\l  0x004b\-0x0051: r3 'e$iv' Lkotlinx\/coroutines\/flow\/internal\/AbortFlowException;\l  0x004b\-0x0052: r1 '$i$f$collectWhile' I\l  0x004b\-0x0052: r2 'collector$iv' Lkotlinx\/coroutines\/flow\/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1;\l  0x004b\-0x005d: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__LimitKt$transformWhile$1;\l  0x0021\-0x005d: r9 '$result' Ljava\/lang\/Object;\lTryCatch #0 \{AbortFlowException \-\> 0x0047, blocks: (B:12:0x0031), top: B:22:0x0031 \}, TryCatch #1 \{AbortFlowException \-\> 0x001b, blocks: (B:7:0x0017), top: B:24:0x0017 \}\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [118=4]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_24;
Node_24 -> Node_7;
Node_24 -> Node_9;
Node_7 -> Node_20;
Node_7 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_25 -> Node_9;
Node_9 -> Node_19;
Node_19 -> Node_20;
Node_11 -> Node_22;
Node_22 -> Node_12;
Node_22 -> Node_17;
Node_12 -> Node_13;
Node_12 -> Node_23;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_1;
Node_15 -> Node_20;
Node_23 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

