digraph "CFG forkotlinx.coroutines.flow.SubscribedFlowCollector.onSubscription(Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_33 [shape=record,label="{33\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r8 I:??[OBJECT, ARRAY]) kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0014 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1) = (kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1) kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0014 \l}"];
Node_39 [shape=record,label="{39\:\ 0x000e|0x000e: IGET  (r8 I:int) = (r0 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1) kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1.label int \l0x0010: ARITH  (r8 I:int) = (r8 I:int) \- (r2 I:int) \l0x0011: IPUT  (r8 I:int), (r0 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1) kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1.label int \l}"];
Node_41 [shape=record,label="{41\:\ 0x0019|0x0019: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r0 I:java.lang.Object) = \l  (r8 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1.result java.lang.Object \l0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0020: IGET  (r2 I:int) = \l  (r8 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1.label int  (LINE:416)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0022|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_42 [shape=record,label="{42\:\ 0x0022|0x0022: SWITCH  (r2 I:??)\l case 0: goto B:49:0x003d\l case 1: goto B:46:0x0031\l case 2: goto B:45:0x002d\l default: goto B:43:0x0025 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0025|0x0025: NEW_INSTANCE  (r8 I:java.lang.IllegalStateException A[D('$continuation' kotlin.coroutines.Continuation)]) =  java.lang.IllegalStateException  (LINE:424)\l0x0027: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x0029: INVOKE  (r8 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x002c|0x002c: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_34 [shape=record,label="{34\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x002d|0x002d: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:416)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0079|0x0079: SGET  (r1 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:424)\l}"];
Node_59 [shape=record,label="{59\:\ 0x007b|RETURN\l|0x007b: RETURN  (r1 I:java.lang.Object) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0031|0x0031: IGET  (r2 I:java.lang.Object) = \l  (r8 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1.L$1 java.lang.Object \l0x0033: CHECK_CAST (r2 I:kotlinx.coroutines.flow.internal.SafeCollector) = (kotlinx.coroutines.flow.internal.SafeCollector) (r2 I:??[OBJECT, ARRAY]) \l0x0035: IGET  (r3 I:java.lang.Object) = \l  (r8 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1.L$0 java.lang.Object \l0x0037: CHECK_CAST (r3 I:kotlinx.coroutines.flow.SubscribedFlowCollector) = (kotlinx.coroutines.flow.SubscribedFlowCollector) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0039|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x007d, blocks: (B:47:0x0039, B:50:0x004e), top: B:64:0x0022 \}\lCatch: all \-\> 0x007d\l|0x0039: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[Catch: all \-\> 0x007d, MD:(java.lang.Object):void (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_53 [shape=record,label="{53\:\ 0x005e|0x005e: INVOKE  \l  (r2 I:kotlinx.coroutines.flow.internal.SafeCollector A[D('safeCollector' kotlinx.coroutines.flow.internal.SafeCollector)])\l type: VIRTUAL call: kotlinx.coroutines.flow.internal.SafeCollector.releaseIntercepted():void A[MD:():void (m)] (LINE:421)\l0x0062: IGET  (r2 I:kotlinx.coroutines.flow.FlowCollector\<T\>) = (r3 I:kotlinx.coroutines.flow.SubscribedFlowCollector A[D('this' kotlinx.coroutines.flow.SubscribedFlowCollector)]) kotlinx.coroutines.flow.SubscribedFlowCollector.collector kotlinx.coroutines.flow.FlowCollector  (LINE:423)\l0x0064: INSTANCE_OF  (r4 I:boolean) = (r2 I:??[OBJECT, ARRAY]) kotlinx.coroutines.flow.SubscribedFlowCollector \l}"];
Node_54 [shape=record,label="{54\:\ 0x0066|0x0066: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0079 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0068|0x0068: CHECK_CAST (r2 I:kotlinx.coroutines.flow.SubscribedFlowCollector) = (kotlinx.coroutines.flow.SubscribedFlowCollector) (r2 I:??[OBJECT, ARRAY]) \l0x006a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x006b: IPUT  \l  (r4 I:java.lang.Object)\l  (r8 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1.L$0 java.lang.Object \l0x006d: IPUT  \l  (r4 I:java.lang.Object)\l  (r8 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1.L$1 java.lang.Object \l0x006f: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0070: IPUT  \l  (r4 I:int)\l  (r8 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1.label int \l0x0072: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:kotlinx.coroutines.flow.SubscribedFlowCollector)\l  (r8 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: VIRTUAL call: kotlinx.coroutines.flow.SubscribedFlowCollector.onSubscription(kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_56 [shape=record,label="{56\:\ 0x0076|0x0076: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0079 \l}"];
Node_57 [shape=record,label="{57\:\ 0x0078|RETURN\l|0x0078: RETURN  (r1 I:java.lang.Object)  (LINE:416)\l}"];
Node_65 [shape=record,label="{65\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_49 [shape=record,label="{49\:\ 0x003d|0x003d: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0040: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0041: NEW_INSTANCE  (r2 I:kotlinx.coroutines.flow.internal.SafeCollector) =  kotlinx.coroutines.flow.internal.SafeCollector  (LINE:417)\l0x0043: IGET  (r4 I:kotlinx.coroutines.flow.FlowCollector\<T\>) = (r3 I:kotlinx.coroutines.flow.SubscribedFlowCollector A[D('this' kotlinx.coroutines.flow.SubscribedFlowCollector)]) kotlinx.coroutines.flow.SubscribedFlowCollector.collector kotlinx.coroutines.flow.FlowCollector \l0x0045: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0046: INVOKE  (r6 I:kotlin.coroutines.CoroutineContext) = (r8 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)]) type: INTERFACE call: kotlin.coroutines.Continuation.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)] (LINE:427)\l0x004a: INVOKE  \l  (r2 I:kotlinx.coroutines.flow.internal.SafeCollector)\l  (r4 I:kotlinx.coroutines.flow.FlowCollector)\l  (r6 I:kotlin.coroutines.CoroutineContext)\l type: DIRECT call: kotlinx.coroutines.flow.internal.SafeCollector.\<init\>(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.CoroutineContext):void A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.CoroutineContext):void (m)] (LINE:417)\l}"];
Node_50 [shape=record,label="{50\:\ 0x004e|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x007d, blocks: (B:47:0x0039, B:50:0x004e), top: B:64:0x0022 \}\lCatch: all \-\> 0x007d\l|0x004e: IGET  (r4 I:kotlin.jvm.functions.Function2\<kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>, java.lang.Object\>) = (r3 I:kotlinx.coroutines.flow.SubscribedFlowCollector A[D('this' kotlinx.coroutines.flow.SubscribedFlowCollector)]) kotlinx.coroutines.flow.SubscribedFlowCollector.action kotlin.jvm.functions.Function2 A[Catch: all \-\> 0x007d, TRY_ENTER] (LINE:419)\l0x0050: IPUT  \l  (r3 I:java.lang.Object A[D('this' kotlinx.coroutines.flow.SubscribedFlowCollector)])\l  (r8 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1.L$0 java.lang.Object A[Catch: all \-\> 0x007d]\l0x0052: IPUT  \l  (r2 I:java.lang.Object A[D('safeCollector' kotlinx.coroutines.flow.internal.SafeCollector)])\l  (r8 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1.L$1 java.lang.Object A[Catch: all \-\> 0x007d]\l0x0054: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0055: IPUT  \l  (r5 I:int)\l  (r8 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1.label int A[Catch: all \-\> 0x007d]\l0x0057: INVOKE  (r4 I:java.lang.Object) = \l  (r4 I:kotlin.jvm.functions.Function2)\l  (r2 I:java.lang.Object A[D('safeCollector' kotlinx.coroutines.flow.internal.SafeCollector)])\l  (r8 I:java.lang.Object A[D('$continuation' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[Catch: all \-\> 0x007d, MD:(P1, P2):R (m), TRY_LEAVE]\l}"];
Node_51 [shape=record,label="{51\:\ 0x005b|0x005b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x005e \l}"];
Node_52 [shape=record,label="{52\:\ 0x005d|RETURN\l|0x005d: RETURN  (r1 I:java.lang.Object)  (LINE:416)\l}"];
Node_61 [shape=record,label="{61\:\ 0x007d|ExcHandler: all \-\> 0x007d\l|0x007d: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x007d] (LINE:420)\l}"];
Node_62 [shape=record,label="{62\:\ 0x007e|0x007e: INVOKE  \l  (r2 I:kotlinx.coroutines.flow.internal.SafeCollector A[D('safeCollector' kotlinx.coroutines.flow.internal.SafeCollector)])\l type: VIRTUAL call: kotlinx.coroutines.flow.internal.SafeCollector.releaseIntercepted():void A[MD:():void (m)] (LINE:421)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0081|0x0081: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1) =  kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1 \l0x0016: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1)\l  (r7 I:kotlinx.coroutines.flow.SubscribedFlowCollector)\l  (r8 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1.\<init\>(kotlinx.coroutines.flow.SubscribedFlowCollector, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.SubscribedFlowCollector\<T\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1\>):void (m)]\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.SubscribedFlowCollector.onSubscription((r7 'this' I:kotlinx.coroutines.flow.SubscribedFlowCollector\<T\> A[IMMUTABLE_TYPE, THIS]), (r8 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:59:0x007b \-\> B:34:?, CROSS_EDGE: B:57:0x0078 \-\> B:34:?, CROSS_EDGE: B:56:0x0076 \-\> B:58:0x0079, CROSS_EDGE: B:54:0x0066 \-\> B:58:0x0079, CROSS_EDGE: B:63:0x0081 \-\> B:34:?, CROSS_EDGE: B:52:0x005d \-\> B:34:?, CROSS_EDGE: B:51:0x005b \-\> B:53:0x005e, CROSS_EDGE: B:64:0x0022 \-\> B:61:0x007d, CROSS_EDGE: B:40:0x0014 \-\> B:41:0x0019, CROSS_EDGE: B:36:0x0002 \-\> B:40:0x0014\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x007d, blocks: (B:47:0x0039, B:50:0x004e), top: B:64:0x0022 \}\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x001c\-0x0025: r0 '$result' Ljava\/lang\/Object;\l  0x001a\-0x0025: r8 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x0035\-0x003d: r2 'safeCollector' Lkotlinx\/coroutines\/flow\/internal\/SafeCollector;\l  0x0039\-0x003d: r3 'this' Lkotlinx\/coroutines\/flow\/SubscribedFlowCollector;\l  0x0046\-0x004a: r5 '$i$f$currentCoroutineContext' I\l  0x004d\-0x0061: r2 'safeCollector' Lkotlinx\/coroutines\/flow\/internal\/SafeCollector;\l  0x0041\-0x0076: r3 'this' Lkotlinx\/coroutines\/flow\/SubscribedFlowCollector;\l  0x007d\-0x0081: r2 'safeCollector' Lkotlinx\/coroutines\/flow\/internal\/SafeCollector;\l  0x002d\-0x008b: r0 '$result' Ljava\/lang\/Object;\l  0x002d\-0x008b: r8 '$continuation' Lkotlin\/coroutines\/Continuation;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [416=4]\}\l}"];
MethodNode -> Node_33;Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_41 -> Node_64;
Node_64 -> Node_42;
Node_64 -> Node_61;
Node_42 -> Node_43;
Node_42 -> Node_45;
Node_42 -> Node_46;
Node_42 -> Node_49;
Node_43 -> Node_44;
Node_44 -> Node_34;
Node_45 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_34;
Node_46 -> Node_47;
Node_47 -> Node_53;
Node_53 -> Node_54;
Node_53 -> Node_65;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_58;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_34;
Node_65 -> Node_61;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_34;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_34;
Node_40 -> Node_41;
}

