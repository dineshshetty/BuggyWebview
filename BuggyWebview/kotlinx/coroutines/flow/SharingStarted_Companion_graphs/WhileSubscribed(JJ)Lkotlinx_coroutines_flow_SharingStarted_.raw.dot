digraph "CFG forkotlinx.coroutines.flow.SharingStarted.Companion.WhileSubscribed(JJ)Lkotlinx\/coroutines\/flow\/SharingStarted;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.StartedWhileSubscribed) =  kotlinx.coroutines.flow.StartedWhileSubscribed  (LINE:109)\l0x0002: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.StartedWhileSubscribed)\l  (r2 I:long A[D('stopTimeoutMillis' long)])\l  (r4 I:long A[D('replayExpirationMillis' long)])\l type: DIRECT call: kotlinx.coroutines.flow.StartedWhileSubscribed.\<init\>(long, long):void A[MD:(long, long):void (m)]\l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.flow.SharingStarted) = (kotlinx.coroutines.flow.SharingStarted) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:kotlinx.coroutines.flow.SharingStarted) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.flow.SharingStarted kotlinx.coroutines.flow.SharingStarted.Companion.WhileSubscribed((r1 'this' I:kotlinx.coroutines.flow.SharingStarted$Companion A[IMMUTABLE_TYPE, THIS]), (r2 I:long A[D('stopTimeoutMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('replayExpirationMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r2 'stopTimeoutMillis' J\l  \-1 \-0x0007: r4 'replayExpirationMillis' J\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

