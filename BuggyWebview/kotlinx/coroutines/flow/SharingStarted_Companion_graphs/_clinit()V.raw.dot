digraph "CFG forkotlinx.coroutines.flow.SharingStarted.Companion.\<clinit\>()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.SharingStarted$Companion) =  kotlinx.coroutines.flow.SharingStarted$Companion \l0x0002: INVOKE  (r0 I:kotlinx.coroutines.flow.SharingStarted$Companion) type: DIRECT call: kotlinx.coroutines.flow.SharingStarted.Companion.\<init\>():void A[MD:():void (m)]\l0x0005: SPUT  (r0 I:kotlinx.coroutines.flow.SharingStarted$Companion) kotlinx.coroutines.flow.SharingStarted.Companion.$$INSTANCE kotlinx.coroutines.flow.SharingStarted$Companion \l0x0007: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.StartedEagerly) =  kotlinx.coroutines.flow.StartedEagerly  (LINE:80)\l0x0009: INVOKE  (r0 I:kotlinx.coroutines.flow.StartedEagerly) type: DIRECT call: kotlinx.coroutines.flow.StartedEagerly.\<init\>():void A[MD:():void (m)]\l0x000c: CHECK_CAST (r0 I:kotlinx.coroutines.flow.SharingStarted) = (kotlinx.coroutines.flow.SharingStarted) (r0 I:??[OBJECT, ARRAY]) \l0x000e: SPUT  (r0 I:kotlinx.coroutines.flow.SharingStarted) kotlinx.coroutines.flow.SharingStarted.Companion.Eagerly kotlinx.coroutines.flow.SharingStarted \l0x0010: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.StartedLazily) =  kotlinx.coroutines.flow.StartedLazily  (LINE:85)\l0x0012: INVOKE  (r0 I:kotlinx.coroutines.flow.StartedLazily) type: DIRECT call: kotlinx.coroutines.flow.StartedLazily.\<init\>():void A[MD:():void (m)]\l0x0015: CHECK_CAST (r0 I:kotlinx.coroutines.flow.SharingStarted) = (kotlinx.coroutines.flow.SharingStarted) (r0 I:??[OBJECT, ARRAY]) \l0x0017: SPUT  (r0 I:kotlinx.coroutines.flow.SharingStarted) kotlinx.coroutines.flow.SharingStarted.Companion.Lazily kotlinx.coroutines.flow.SharingStarted \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|RETURN\l|0x0019: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlinx.coroutines.flow.SharingStarted.Companion.\<clinit\>()  | DONT_GENERATE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

