digraph "CFG forkotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1.emit(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1886772297 {
label = "R(4:(2:3|(3:5|6|7))|28|6|7) | DECL_VAR: kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1 null, kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1 null, kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1 null, java.lang.Object null\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1483302007 {
label = "IF [B:33:0x0002] THEN: R(2:3|(3:5|6|7)) ELSE: null";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0002|if ((r8 instanceof kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1) != false) goto L3\l}"];
subgraph cluster_Region_340107606 {
label = "R(2:3|(3:5|6|7))";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0004|kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1 r0 = (kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1) r8\l}"];
subgraph cluster_IfRegion_1452988403 {
label = "IF [B:35:0x000c] THEN: R(3:5|6|7) ELSE: null";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) != 0) goto L5\l}"];
subgraph cluster_Region_418882333 {
label = "R(3:5|6|7)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x000e|r0.label \-= Integer.MIN_VALUE\l}"];
Node_38 [shape=record,label="{38\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1), (r0v5 kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1) binds: [B:37:0x0014, B:36:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r8 = r0\ljava.lang.Object java.lang.Object r0 = r8.result\ljava.lang.Object java.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_913927560 {
label = "Switch: 4
 case 0 -> R(2:20|(2:(3:22|(1:24)|18)|(4:25|(1:27)|(2:14|(1:16))|18)))
 case 1, 3 -> R(2:19|18)
 case 2 -> R(3:11|(0)|18)
 case default -> R(1:9)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0023|switch(r8.label) \{\l    case 0: goto L20;\l    case 1: goto L19;\l    case 2: goto L11;\l    case 3: goto L19;\l    default: goto L8;\l\}\l}"];
subgraph cluster_Region_33757688 {
label = "R(2:20|(2:(3:22|(1:24)|18)|(4:25|(1:27)|(2:14|(1:16))|18)))";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x003d|kotlin.ResultKt.throwOnFailure(r0)\lr2 = r6\l}"];
subgraph cluster_Region_1977802580 {
label = "R(2:(3:22|(1:24)|18)|(4:25|(1:27)|(2:14|(1:16))|18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1146196930 {
label = "IF [B:45:0x0045] THEN: R(3:22|(1:24)|18) ELSE: null";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0045|if (r2.$matched.element == true) goto L22\l}"];
subgraph cluster_Region_1748002970 {
label = "R(3:22|(1:24)|18)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0047|kotlinx.coroutines.flow.FlowCollector\<T\> kotlinx.coroutines.flow.FlowCollector\<T\> r4 = r2.$this_unsafeFlow\lr8.label = 1\ljava.lang.Object java.lang.Object r7 = r4.emit(r7, r8)\l}"];
subgraph cluster_IfRegion_1055282380 {
label = "IF [B:47:0x004f] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x004f|if (r7 == r1) goto L24\l}"];
subgraph cluster_Region_122735241 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x0051|RETURN\l|return r1\l}"];
}
}
Node_50 [shape=record,label="{50\:\ 0x0054|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
}
subgraph cluster_Region_1371941851 {
label = "R(4:25|(1:27)|(2:14|(1:16))|18)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0055|kotlin.jvm.functions.Function2\<T, kotlin.coroutines.Continuation\<? super java.lang.Boolean\>, java.lang.Object\> kotlin.jvm.functions.Function2\<T, kotlin.coroutines.Continuation\<? super java.lang.Boolean\>, java.lang.Object\> r4 = r2.$predicate\lr8.L$0 = r2\lr8.L$1 = r7\lr8.label = 2\ljava.lang.Object r4 = r4.invoke(r7, r8)\l}"];
subgraph cluster_IfRegion_486989634 {
label = "IF [B:52:0x0062] THEN: R(1:27) ELSE: null";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x0062|if (r4 == r1) goto L27\l}"];
subgraph cluster_Region_522179271 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0064|RETURN\l|return r1\l}"];
}
}
subgraph cluster_IfRegion_1468538339 {
label = "IF [B:55:0x006b] THEN: R(2:14|(1:16)) ELSE: null";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x006b|if (((java.lang.Boolean) r4).booleanValue() == false) goto L14\l}"];
subgraph cluster_Region_1946977717 {
label = "R(2:14|(1:16))";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x006d|r2.$matched.element = true\lr8.L$0 = null\lr8.L$1 = null\lr8.label = 3\ljava.lang.Object java.lang.Object r7 = r2.$this_unsafeFlow.emit(r7, r8)\l}"];
subgraph cluster_IfRegion_324253148 {
label = "IF [B:57:0x007f] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x007f|if (r7 == r1) goto L16\l}"];
subgraph cluster_Region_316023229 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0081|RETURN\l|return r1\l}"];
}
}
}
}
Node_50 [shape=record,label="{50\:\ 0x0054|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
}
}
subgraph cluster_Region_305268000 {
label = "R(2:19|18)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0039|kotlin.ResultKt.throwOnFailure(r0)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0054|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
subgraph cluster_Region_165983121 {
label = "R(3:11|(0)|18)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x002e|java.lang.Object r7 = (T) r8.L$1\lkotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1 r2 = (kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1) r8.L$0\lkotlin.ResultKt.throwOnFailure(r0)\lr4 = r0\l}"];
subgraph cluster_IfRegion_1470987694 {
label = "IF [B:55:0x006b] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x006b|if (((java.lang.Boolean) r4).booleanValue() == false) goto L14\l}"];
subgraph cluster_Region_886444144 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_50 [shape=record,label="{50\:\ 0x0054|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
subgraph cluster_Region_2085706411 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x002d|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
}
}
}
}
}
}
Node_37 [shape=record,label="{37\:\ 0x0014|kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1 r0 = new kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1(r6, r8)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1), (r0v5 kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1) binds: [B:37:0x0014, B:36:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r8 = r0\ljava.lang.Object java.lang.Object r0 = r8.result\ljava.lang.Object java.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_1660645007 {
label = "Switch: 0";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0023|switch(r8.label) \{\l    case 0: goto L20;\l    case 1: goto L19;\l    case 2: goto L11;\l    case 3: goto L19;\l    default: goto L8;\l\}\l}"];
}
}
Node_30 [shape=record,color=red,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0000}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0026}"];
Node_31 [shape=record,color=red,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x0065|PHI: r2 r4 r7 \l  PHI: (r2v2 kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1) = (r2v1 kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1), (r2v4 kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1) binds: [B:52:0x0062, B:42:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v5 java.lang.Object) = (r4v3 java.lang.Object), (r4v11 java.lang.Object) binds: [B:52:0x0062, B:42:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v3 T) = (r7v0 T), (r7v5 T) binds: [B:52:0x0062, B:42:0x002e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x0052}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1.emit((r6v0 'this' kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1\<T\> A[IMMUTABLE_TYPE, THIS]), (r7v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:50:0x0054 \-\> B:31:?, CROSS_EDGE: B:58:0x0081 \-\> B:31:?, CROSS_EDGE: B:55:0x006b \-\> B:49:0x0052, CROSS_EDGE: B:43:0x0039 \-\> B:49:0x0052, CROSS_EDGE: B:48:0x0051 \-\> B:31:?, CROSS_EDGE: B:47:0x004f \-\> B:49:0x0052, CROSS_EDGE: B:53:0x0064 \-\> B:31:?, CROSS_EDGE: B:52:0x0062 \-\> B:54:0x0065, CROSS_EDGE: B:37:0x0014 \-\> B:38:0x0019, CROSS_EDGE: B:33:0x0002 \-\> B:37:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (TT;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lJadxCommentsAttr\{\l WARN: \l \-\> Removed duplicated region for block: B:56:0x006d \l \-\> Removed duplicated region for block: B:44:0x003d \l \-\> Removed duplicated region for block: B:43:0x0039 \l \-\> Removed duplicated region for block: B:42:0x002e \l \-\> Removed duplicated region for block: B:40:0x0026 \l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [35=5]\}\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.FlowCollector.emit(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_30;Node_33 -> Node_34;
Node_33 -> Node_37[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_42;
Node_39 -> Node_43;
Node_39 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_45 -> Node_51[style=dashed];
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_47 -> Node_49[style=dashed];
Node_48 -> Node_31;
Node_50 -> Node_31;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_52 -> Node_54[style=dashed];
Node_53 -> Node_31;
Node_55 -> Node_56;
Node_55 -> Node_49[style=dashed];
Node_56 -> Node_57;
Node_57 -> Node_49[style=dashed];
Node_57 -> Node_58;
Node_58 -> Node_31;
Node_50 -> Node_31;
Node_43 -> Node_49;
Node_50 -> Node_31;
Node_42 -> Node_54;
Node_55 -> Node_56;
Node_55 -> Node_49[style=dashed];
Node_50 -> Node_31;
Node_41 -> Node_31;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_42;
Node_39 -> Node_43;
Node_39 -> Node_44;
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_40 -> Node_41;
Node_54 -> Node_55;
Node_49 -> Node_50;
}

