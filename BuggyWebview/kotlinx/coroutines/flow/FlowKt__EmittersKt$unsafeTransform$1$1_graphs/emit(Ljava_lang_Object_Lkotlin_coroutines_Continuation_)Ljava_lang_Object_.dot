digraph "CFG forkotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1.emit(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000}"];
Node_21 [shape=record,label="{21\:\ 0x0002|if ((r8 instanceof kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1) == false) goto L17\l}"];
Node_22 [shape=record,label="{22\:\ 0x0004|kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1 r0 = (kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1) r8\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) == 0) goto L17\l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|r0.label = r0.label \- Integer.MIN_VALUE\l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1), (r0v5 kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1) binds: [B:25:0x0014, B:24:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r8 = r0\ljava.lang.Object r0 = r8.result\ljava.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_27 [shape=record,label="{27\:\ 0x0022|switch(r8.label) \{\l    case 0: goto L14;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
Node_28 [shape=record,label="{28\:\ 0x0025}"];
Node_29 [shape=record,label="{29\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x002d|kotlin.ResultKt.throwOnFailure(r0)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0043}"];
Node_35 [shape=record,label="{35\:\ 0x0045|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
Node_31 [shape=record,label="{31\:\ 0x0031|kotlin.ResultKt.throwOnFailure(r0)\lkotlin.jvm.functions.Function3\<kotlinx.coroutines.flow.FlowCollector\<? super R\>, T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>, java.lang.Object\> r3 = r6.$transform\lkotlinx.coroutines.flow.FlowCollector\<R\> r4 = r6.$this_unsafeFlow\lr8.label = 1\ljava.lang.Object r7 = r3.invoke(r4, r7, r8)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0040|if (r7 != r1) goto L12\l}"];
Node_33 [shape=record,label="{33\:\ 0x0042|RETURN\l|return r1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1 r0 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1(r6, r8)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1.emit((r6v0 'this' kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1\<T\> A[IMMUTABLE_TYPE, THIS]), (r7v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:35:0x0045 \-\> B:19:?, CROSS_EDGE: B:33:0x0042 \-\> B:19:?, CROSS_EDGE: B:32:0x0040 \-\> B:34:0x0043, CROSS_EDGE: B:25:0x0014 \-\> B:26:0x0019, CROSS_EDGE: B:21:0x0002 \-\> B:25:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (TT;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.FlowCollector.emit(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_30;
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_19;
Node_30 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_19;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_19;
Node_25 -> Node_26;
}

