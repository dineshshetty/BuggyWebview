digraph "CFG forkotlinx.coroutines.flow.AbstractFlow.collect(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000}"];
Node_29 [shape=record,label="{29\:\ 0x0002|if ((r7 instanceof kotlinx.coroutines.flow.AbstractFlow$collect$1) == false) goto L24\l}"];
Node_30 [shape=record,label="{30\:\ 0x0004|kotlinx.coroutines.flow.AbstractFlow$collect$1 r0 = (kotlinx.coroutines.flow.AbstractFlow$collect$1) r7\l}"];
Node_31 [shape=record,label="{31\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) == 0) goto L24\l}"];
Node_32 [shape=record,label="{32\:\ 0x000e|r0.label = r0.label \- Integer.MIN_VALUE\l}"];
Node_34 [shape=record,label="{34\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.AbstractFlow$collect$1) = (r0v1 kotlinx.coroutines.flow.AbstractFlow$collect$1), (r0v5 kotlinx.coroutines.flow.AbstractFlow$collect$1) binds: [B:33:0x0014, B:32:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r7 = r0\ljava.lang.Object r0 = r7.result\ljava.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_50 [shape=record,label="{50\:\ 0x0022|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x0022|switch(r7.label) \{\l    case 0: goto L17;\l    case 1: goto L12;\l    default: goto L9;\l\}\l}"];
Node_36 [shape=record,label="{36\:\ 0x0025}"];
Node_37 [shape=record,label="{37\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x002d|kotlinx.coroutines.flow.internal.SafeCollector r6 = (kotlinx.coroutines.flow.internal.SafeCollector) r7.L$0\l}"];
Node_39 [shape=record,label="{39\:\ 0x0031|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x005a, blocks: (B:39:0x0031, B:42:0x0044), top: B:50:0x0022 \}\lCatch: all \-\> 0x005a\l|kotlin.ResultKt.throwOnFailure(r0)     \/\/ Catch: java.lang.Throwable \-\> L5a\lr6 = r6\l}"];
Node_45 [shape=record,label="{45\:\ 0x0053|PHI: r6 \l  PHI: (r6v3 ??) = (r6v9 ??), (r6v10 ??) binds: [B:43:0x0050, B:39:0x0031] A[DONT_GENERATE, DONT_INLINE]\l|((kotlinx.coroutines.flow.internal.SafeCollector) r6).releaseIntercepted()\l}"];
Node_46 [shape=record,label="{46\:\ 0x0059|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_41 [shape=record,label="{41\:\ 0x0035|kotlin.ResultKt.throwOnFailure(r0)\lr6 = new kotlinx.coroutines.flow.internal.SafeCollector(r6, r7.getContext())\l}"];
Node_42 [shape=record,label="{42\:\ 0x0044|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x005a, blocks: (B:39:0x0031, B:42:0x0044), top: B:50:0x0022 \}\lCatch: all \-\> 0x005a\l|r7.L$0 = r6     \/\/ Catch: java.lang.Throwable \-\> L5a\lr7.label = 1     \/\/ Catch: java.lang.Throwable \-\> L5a\ljava.lang.Object r3 = collectSafely(r6, r7)     \/\/ Catch: java.lang.Throwable \-\> L5a\lr6 = r6\l}"];
Node_43 [shape=record,label="{43\:\ 0x0050|if (r3 != r1) goto L14\l}"];
Node_44 [shape=record,label="{44\:\ 0x0052|RETURN\l|return r1\l}"];
Node_47 [shape=record,label="{47\:\ 0x005a|ExcHandler: all \-\> 0x005a\lPHI: r6 \l  PHI: (r6v1 ??) = (r6v0 ??), (r6v3 ??) binds: [B:50:0x0022, B:51:?] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_48 [shape=record,label="{48\:\ 0x005b|r6.releaseIntercepted()\l}"];
Node_49 [shape=record,label="{49\:\ 0x005e|throw r1\l}"];
Node_33 [shape=record,label="{33\:\ 0x0014|kotlinx.coroutines.flow.AbstractFlow$collect$1 r0 = new kotlinx.coroutines.flow.AbstractFlow$collect$1(r5, r7)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.AbstractFlow.collect((r5v0 'this' ?? I:kotlinx.coroutines.flow.AbstractFlow\<T\> A[IMMUTABLE_TYPE, THIS]), (r6v0 ?? I:kotlinx.coroutines.flow.FlowCollector\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:46:0x0059 \-\> B:27:?, CROSS_EDGE: B:49:0x005e \-\> B:27:?, CROSS_EDGE: B:44:0x0052 \-\> B:27:?, CROSS_EDGE: B:43:0x0050 \-\> B:45:0x0053, CROSS_EDGE: B:50:0x0022 \-\> B:47:0x005a, CROSS_EDGE: B:33:0x0014 \-\> B:34:0x0019, CROSS_EDGE: B:29:0x0002 \-\> B:33:0x0014\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x005a, blocks: (B:39:0x0031, B:42:0x0044), top: B:50:0x0022 \}\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TT;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l \-\> Type inference failed for: r5v0, types: [kotlinx.coroutines.flow.AbstractFlow\<T\>, kotlinx.coroutines.flow.AbstractFlow]\l \-\> Type inference failed for: r6v0, types: [kotlinx.coroutines.flow.FlowCollector, kotlinx.coroutines.flow.FlowCollector\<? super T\>]\l \-\> Type inference failed for: r6v1, types: [kotlinx.coroutines.flow.internal.SafeCollector]\l \-\> Type inference failed for: r6v3, types: [kotlinx.coroutines.flow.internal.SafeCollector]\l \-\> Type inference failed for: r6v9\l \-\> Type inference failed for: r6v10\l DEBUG: \l \-\> Failed to insert an additional move for type inference into block B:50:0x0022\}\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_34 -> Node_50;
Node_50 -> Node_35;
Node_50 -> Node_47;
Node_35 -> Node_36;
Node_35 -> Node_38;
Node_35 -> Node_41;
Node_36 -> Node_37;
Node_37 -> Node_27;
Node_38 -> Node_39;
Node_39 -> Node_45;
Node_45 -> Node_46;
Node_45 -> Node_51;
Node_46 -> Node_27;
Node_51 -> Node_47;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_27;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_27;
Node_33 -> Node_34;
}

