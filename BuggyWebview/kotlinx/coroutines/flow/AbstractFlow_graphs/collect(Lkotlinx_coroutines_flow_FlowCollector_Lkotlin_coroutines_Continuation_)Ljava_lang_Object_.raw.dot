digraph "CFG forkotlinx.coroutines.flow.AbstractFlow.collect(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r7 I:??[OBJECT, ARRAY]) kotlinx.coroutines.flow.AbstractFlow$collect$1 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0014 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.flow.AbstractFlow$collect$1) = (kotlinx.coroutines.flow.AbstractFlow$collect$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.flow.AbstractFlow$collect$1) kotlinx.coroutines.flow.AbstractFlow$collect$1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0014 \l}"];
Node_32 [shape=record,label="{32\:\ 0x000e|0x000e: IGET  (r7 I:int) = (r0 I:kotlinx.coroutines.flow.AbstractFlow$collect$1) kotlinx.coroutines.flow.AbstractFlow$collect$1.label int \l0x0010: ARITH  (r7 I:int) = (r7 I:int) \- (r2 I:int) \l0x0011: IPUT  (r7 I:int), (r0 I:kotlinx.coroutines.flow.AbstractFlow$collect$1) kotlinx.coroutines.flow.AbstractFlow$collect$1.label int \l}"];
Node_34 [shape=record,label="{34\:\ 0x0019|0x0019: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r0 I:java.lang.Object) = (r7 I:kotlinx.coroutines.flow.AbstractFlow$collect$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.flow.AbstractFlow$collect$1.result java.lang.Object \l0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0020: IGET  (r2 I:int) = (r7 I:kotlinx.coroutines.flow.AbstractFlow$collect$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.flow.AbstractFlow$collect$1.label int  (LINE:227)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0022|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x0022|0x0022: SWITCH  (r2 I:??)\l case 0: goto B:41:0x0035\l case 1: goto B:38:0x002d\l default: goto B:36:0x0025 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0025|0x0025: NEW_INSTANCE  (r6 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:234)\l0x0027: CONST_STR  (r7 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x0029: INVOKE  (r6 I:java.lang.IllegalStateException), (r7 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x002c|0x002c: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x002d|0x002d: IGET  (r6 I:java.lang.Object) = (r7 I:kotlinx.coroutines.flow.AbstractFlow$collect$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.flow.AbstractFlow$collect$1.L$0 java.lang.Object  (LINE:227)\l0x002f: CHECK_CAST (r6 I:kotlinx.coroutines.flow.internal.SafeCollector) = (kotlinx.coroutines.flow.internal.SafeCollector) (r6 I:??[OBJECT, ARRAY]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0031|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x005a, blocks: (B:39:0x0031, B:42:0x0044), top: B:50:0x0022 \}\lCatch: all \-\> 0x005a\l|0x0031: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[Catch: all \-\> 0x005a, MD:(java.lang.Object):void (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0053|0x0053: INVOKE  \l  (r6 I:kotlinx.coroutines.flow.internal.SafeCollector A[D('safeCollector' kotlinx.coroutines.flow.internal.SafeCollector)])\l type: VIRTUAL call: kotlinx.coroutines.flow.internal.SafeCollector.releaseIntercepted():void A[MD:():void (m)] (LINE:232)\l0x0057: SGET  (r1 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:234)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0059|RETURN\l|0x0059: RETURN  (r1 I:java.lang.Object) \l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_41 [shape=record,label="{41\:\ 0x0035|0x0035: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0038: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY]) \l0x0039: NEW_INSTANCE  (r3 I:kotlinx.coroutines.flow.internal.SafeCollector) =  kotlinx.coroutines.flow.internal.SafeCollector  (LINE:228)\l0x003b: INVOKE  (r4 I:kotlin.coroutines.CoroutineContext) = (r7 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)]) type: INTERFACE call: kotlin.coroutines.Continuation.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)]\l0x003f: INVOKE  \l  (r3 I:kotlinx.coroutines.flow.internal.SafeCollector)\l  (r6 I:kotlinx.coroutines.flow.FlowCollector A[D('collector' kotlinx.coroutines.flow.FlowCollector)])\l  (r4 I:kotlin.coroutines.CoroutineContext)\l type: DIRECT call: kotlinx.coroutines.flow.internal.SafeCollector.\<init\>(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.CoroutineContext):void A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.CoroutineContext):void (m)]\l0x0042: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0044|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x005a, blocks: (B:39:0x0031, B:42:0x0044), top: B:50:0x0022 \}\lCatch: all \-\> 0x005a\l|0x0044: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('safeCollector' kotlinx.coroutines.flow.internal.SafeCollector)]) A[TRY_ENTER] (LINE:230)\l0x0045: CHECK_CAST (r3 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x005a]\l0x0047: IPUT  \l  (r6 I:java.lang.Object A[D('safeCollector' kotlinx.coroutines.flow.internal.SafeCollector)])\l  (r7 I:kotlinx.coroutines.flow.AbstractFlow$collect$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.AbstractFlow$collect$1.L$0 java.lang.Object A[Catch: all \-\> 0x005a]\l0x0049: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x004a: IPUT  (r4 I:int), (r7 I:kotlinx.coroutines.flow.AbstractFlow$collect$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.flow.AbstractFlow$collect$1.label int A[Catch: all \-\> 0x005a]\l0x004c: INVOKE  (r3 I:java.lang.Object) = \l  (r2 I:kotlinx.coroutines.flow.AbstractFlow A[D('this' kotlinx.coroutines.flow.AbstractFlow)])\l  (r3 I:kotlinx.coroutines.flow.FlowCollector)\l  (r7 I:kotlin.coroutines.Continuation A[D('$continuation' kotlin.coroutines.Continuation)])\l type: VIRTUAL call: kotlinx.coroutines.flow.AbstractFlow.collectSafely(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[Catch: all \-\> 0x005a, MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m), TRY_LEAVE]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0050|0x0050: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0053 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0052|RETURN\l|0x0052: RETURN  (r1 I:java.lang.Object)  (LINE:227)\l}"];
Node_47 [shape=record,label="{47\:\ 0x005a|ExcHandler: all \-\> 0x005a\l|0x005a: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x005a] (LINE:231)\l}"];
Node_48 [shape=record,label="{48\:\ 0x005b|0x005b: INVOKE  \l  (r6 I:kotlinx.coroutines.flow.internal.SafeCollector A[D('safeCollector' kotlinx.coroutines.flow.internal.SafeCollector)])\l type: VIRTUAL call: kotlinx.coroutines.flow.internal.SafeCollector.releaseIntercepted():void A[MD:():void (m)] (LINE:232)\l}"];
Node_49 [shape=record,label="{49\:\ 0x005e|0x005e: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.AbstractFlow$collect$1) =  kotlinx.coroutines.flow.AbstractFlow$collect$1 \l0x0016: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.AbstractFlow$collect$1)\l  (r5 I:kotlinx.coroutines.flow.AbstractFlow)\l  (r7 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.AbstractFlow$collect$1.\<init\>(kotlinx.coroutines.flow.AbstractFlow, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.AbstractFlow\<T\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.AbstractFlow$collect$1\>):void (m)]\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.AbstractFlow.collect((r5 'this' I:kotlinx.coroutines.flow.AbstractFlow\<T\> A[IMMUTABLE_TYPE, THIS]), (r6 I:kotlinx.coroutines.flow.FlowCollector\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:46:0x0059 \-\> B:27:?, CROSS_EDGE: B:49:0x005e \-\> B:27:?, CROSS_EDGE: B:44:0x0052 \-\> B:27:?, CROSS_EDGE: B:43:0x0050 \-\> B:45:0x0053, CROSS_EDGE: B:50:0x0022 \-\> B:47:0x005a, CROSS_EDGE: B:33:0x0014 \-\> B:34:0x0019, CROSS_EDGE: B:29:0x0002 \-\> B:33:0x0014\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x005a, blocks: (B:39:0x0031, B:42:0x0044), top: B:50:0x0022 \}\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TT;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x001c\-0x0025: r0 '$result' Ljava\/lang\/Object;\l  0x001a\-0x0025: r7 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x0031\-0x0035: r6 'safeCollector' Lkotlinx\/coroutines\/flow\/internal\/SafeCollector;\l  0x0039\-0x003f: r6 'collector' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x0039\-0x0050: r2 'this' Lkotlinx\/coroutines\/flow\/AbstractFlow;\l  0x002d\-0x0067: r0 '$result' Ljava\/lang\/Object;\l  0x0043\-0x0067: r6 'safeCollector' Lkotlinx\/coroutines\/flow\/internal\/SafeCollector;\l  0x002d\-0x0067: r7 '$continuation' Lkotlin\/coroutines\/Continuation;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_34 -> Node_50;
Node_50 -> Node_35;
Node_50 -> Node_47;
Node_35 -> Node_36;
Node_35 -> Node_38;
Node_35 -> Node_41;
Node_36 -> Node_37;
Node_37 -> Node_27;
Node_38 -> Node_39;
Node_39 -> Node_45;
Node_45 -> Node_46;
Node_45 -> Node_51;
Node_46 -> Node_27;
Node_51 -> Node_47;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_27;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_27;
Node_33 -> Node_34;
}

