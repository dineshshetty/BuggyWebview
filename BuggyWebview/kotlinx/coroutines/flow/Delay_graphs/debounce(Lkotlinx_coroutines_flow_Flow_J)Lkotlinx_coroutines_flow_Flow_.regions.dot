digraph "CFG forkotlinx.coroutines.flow.FlowKt__DelayKt.debounce(Lkotlinx\/coroutines\/flow\/Flow;J)Lkotlinx\/coroutines\/flow\/Flow;" {
subgraph cluster_Region_732716125 {
label = "R(1:(2:(1:6)|(1:12)))";
node [shape=record,color=blue];
subgraph cluster_Region_476637502 {
label = "R(2:(1:6)|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_24555031 {
label = "IF [B:20:0x0009] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0009|PHI: r2 \l  PHI: (r2v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r4 \>= 0) == true) goto L5\l}"];
subgraph cluster_Region_1818592435 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000d|RETURN\l|return r4 == 0 ? r3 : debounceInternal$FlowKt__DelayKt(r3, new kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2(r4))\l}"];
}
}
subgraph cluster_Region_627209174 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0029|throw new java.lang.IllegalArgumentException(\"Debounce timeout should not be negative\".toString())\l}"];
}
}
}
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0000}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0004}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0006}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000b}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x000f}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0010}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x001b}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x001c}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0008}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.Flow\<T\> kotlinx.coroutines.flow.FlowKt__DelayKt.debounce((r3v0 kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$debounce' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'timeoutMillis' long A[D('timeoutMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x001b \-\> B:15:?, CROSS_EDGE: B:27:0x0029 \-\> B:15:?, CROSS_EDGE: B:19:0x0008 \-\> B:20:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;J)Lkotlinx\/coroutines\/flow\/Flow\<TT;\>;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r3v0, resolved type: kotlinx.coroutines.flow.Flow\<? extends T\>\}\l}"];
MethodNode -> Node_14;Node_20 -> Node_21;
Node_20 -> Node_26[style=dashed];
Node_22 -> Node_23;
Node_22 -> Node_24;
Node_27 -> Node_15;
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_21 -> Node_22;
Node_23 -> Node_15;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_26 -> Node_27;
Node_19 -> Node_20;
}

