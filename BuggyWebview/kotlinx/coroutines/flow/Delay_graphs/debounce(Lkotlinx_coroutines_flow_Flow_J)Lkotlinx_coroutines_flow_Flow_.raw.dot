digraph "CFG forkotlinx.coroutines.flow.FlowKt__DelayKt.debounce(Lkotlinx\/coroutines\/flow\/Flow;J)Lkotlinx\/coroutines\/flow\/Flow;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST  (r0 I:??[long, double]) = (0 ??[long, double])  (LINE:67)\l0x0002: CMP_L  (r2 I:int) = (r4 I:long A[D('timeoutMillis' long)]), (r0 I:long) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IF  (r2 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:19:0x0008 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001c \l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|0x000b: CMP_L  (r2 I:int) = (r4 I:long A[D('timeoutMillis' long)]), (r0 I:long)  (LINE:68)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|0x000d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0010 \l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|RETURN\l|0x000f: RETURN  (r3 I:kotlinx.coroutines.flow.Flow\<T\> A[D('$this$debounce' kotlinx.coroutines.flow.Flow)]) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0010|0x0010: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2) =  kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2  (LINE:69)\l0x0012: INVOKE  (r0 I:kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2), (r4 I:long A[D('timeoutMillis' long)]) type: DIRECT call: kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2.\<init\>(long):void A[MD:(long):void (m)]\l0x0015: CHECK_CAST (r0 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r0 I:??[OBJECT, ARRAY]) \l0x0017: INVOKE  (r0 I:kotlinx.coroutines.flow.Flow) = \l  (r3 I:kotlinx.coroutines.flow.Flow A[D('$this$debounce' kotlinx.coroutines.flow.Flow)])\l  (r0 I:kotlin.jvm.functions.Function1)\l type: STATIC call: kotlinx.coroutines.flow.FlowKt__DelayKt.debounceInternal$FlowKt__DelayKt(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function1):kotlinx.coroutines.flow.Flow A[MD:\<T\>:(kotlinx.coroutines.flow.Flow\<? extends T\>, kotlin.jvm.functions.Function1\<? super T, java.lang.Long\>):kotlinx.coroutines.flow.Flow\<T\> (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x001b|RETURN\l|0x001b: RETURN  (r0 I:kotlinx.coroutines.flow.Flow\<T\>) \l}"];
Node_26 [shape=record,label="{26\:\ 0x001c|0x001c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:349)\l0x001e: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException A[D('$i$a$\-require\-FlowKt__DelayKt$debounce$1' int)]) =  java.lang.IllegalArgumentException \l0x0020: CONST_STR  (r1 I:java.lang.String) =  \"Debounce timeout should not be negative\" \l0x0022: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0026: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0029|0x0029: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.Flow\<T\> kotlinx.coroutines.flow.FlowKt__DelayKt.debounce((r3 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$debounce' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('timeoutMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x001b \-\> B:15:?, CROSS_EDGE: B:27:0x0029 \-\> B:15:?, CROSS_EDGE: B:19:0x0008 \-\> B:20:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;J)Lkotlinx\/coroutines\/flow\/Flow\<TT;\>;\lDebug Info:\l  0x001d\-0x001e: r0 '$i$a$\-require\-FlowKt__DelayKt$debounce$1' I\l  \-1 \-0x0029: r3 '$this$debounce' Lkotlinx\/coroutines\/flow\/Flow;\l  \-1 \-0x0029: r4 'timeoutMillis' J\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_15;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_26 -> Node_27;
Node_27 -> Node_15;
Node_19 -> Node_20;
}

