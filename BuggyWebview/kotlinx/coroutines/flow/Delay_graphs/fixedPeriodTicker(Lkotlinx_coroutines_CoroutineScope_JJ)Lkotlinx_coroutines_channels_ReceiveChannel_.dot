digraph "CFG forkotlinx.coroutines.flow.FlowKt__DelayKt.fixedPeriodTicker(Lkotlinx\/coroutines\/CoroutineScope;JJ)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|r0 = true\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|if ((r17 \> 0 ? 1 : (r17 == 0 ? 0 : \-1)) \< 0) goto L17\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|r4 = true\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|PHI: r4 \l  PHI: (r4v2 boolean) = (r4v1 boolean), (r4v4 boolean) binds: [B:24:0x000e, B:23:0x000c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|if (r4 == false) goto L15\l}"];
Node_27 [shape=record,label="{27\:\ 0x0013}"];
Node_28 [shape=record,label="{28\:\ 0x0015|if ((r19 \> 0 ? 1 : (r19 == 0 ? 0 : \-1)) \< 0) goto L8\l}"];
Node_30 [shape=record,label="{30\:\ 0x0018|r0 = false\l}"];
Node_31 [shape=record,label="{31\:\ 0x0019|PHI: r0 \l  PHI: (r0v4 boolean) = (r0v0 boolean), (r0v10 boolean) binds: [B:28:0x0015, B:30:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L13\l}"];
Node_32 [shape=record,label="{32\:\ 0x001b}"];
Node_33 [shape=record,label="{33\:\ 0x0033|RETURN\l|return kotlinx.coroutines.channels.Produce.produce$default(r16, null, 0, new kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3(r19, r17, null), 1, null)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0034|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Expected non\-negative initial delay, but has \")\lr1.append(r19)\lr1.append(\" ms\")\l}"];
Node_35 [shape=record,label="{35\:\ 0x0052|throw new java.lang.IllegalArgumentException(r1.toString().toString())\l}"];
Node_36 [shape=record,label="{36\:\ 0x0053|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Expected non\-negative delay, but has \")\lr1.append(r17)\lr1.append(\" ms\")\l}"];
Node_37 [shape=record,label="{37\:\ 0x0071|throw new java.lang.IllegalArgumentException(r1.toString().toString())\l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|r4 = false\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.channels.ReceiveChannel\<kotlin.Unit\> kotlinx.coroutines.flow.FlowKt__DelayKt.fixedPeriodTicker((r16v0 '$this$fixedPeriodTicker' kotlinx.coroutines.CoroutineScope A[D('$this$fixedPeriodTicker' kotlinx.coroutines.CoroutineScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 'delayMillis' long A[D('delayMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'initialDelayMillis' long A[D('initialDelayMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0052 \-\> B:20:?, CROSS_EDGE: B:28:0x0015 \-\> B:31:0x0019, CROSS_EDGE: B:37:0x0071 \-\> B:20:?, CROSS_EDGE: B:24:0x000e \-\> B:25:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlinx\/coroutines\/CoroutineScope;JJ)Lkotlinx\/coroutines\/channels\/ReceiveChannel\<Lkotlin\/Unit;\>;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_36;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_20;
Node_34 -> Node_35;
Node_35 -> Node_20;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_24 -> Node_25;
}

