digraph "CFG forkotlinx.coroutines.flow.FlowKt__DelayKt.fixedPeriodTicker(Lkotlinx\/coroutines\/CoroutineScope;JJ)Lkotlinx\/coroutines\/channels\/ReceiveChannel;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: MOVE  (r6 I:??[long, double]) = (r17 I:??[long, double] A[D('delayMillis' long)])  (LINE:311)\l0x0002: MOVE  (r8 I:??[long, double]) = (r19 I:??[long, double] A[D('initialDelayMillis' long)]) \l0x0004: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: CONST  (r2 I:??[long, double]) = (0 ??[long, double]) \l0x0008: CMP_L  (r4 I:int) = (r6 I:long), (r2 I:long) \l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|0x000a: IF  (r4 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:24:0x000e \l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|0x000c: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|0x000f: CONST_STR  (r5 I:java.lang.String) =  \" ms\" \l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|0x0011: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0053 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0013|0x0013: CMP_L  (r4 I:int) = (r8 I:long), (r2 I:long)  (LINE:312)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0015|0x0015: IF  (r4 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:30:0x0018 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0018|0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0019|0x0019: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0034 \l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|0x001b: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:313)\l0x001c: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001d: NEW_INSTANCE  (r10 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3) =  kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3 \l0x001f: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0020: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l0x0021: MOVE  (r1 I:??[long, double]) = (r19 I:??[long, double] A[D('initialDelayMillis' long)]) \l0x0023: MOVE  (r3 I:??[long, double]) = (r17 I:??[long, double] A[D('delayMillis' long)]) \l0x0025: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3)\l  (r1 I:long)\l  (r3 I:long)\l  (r5 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3.\<init\>(long, long, kotlin.coroutines.Continuation):void A[MD:(long, long, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3\>):void (m)]\l0x0028: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l0x0029: CHECK_CAST (r13 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r13 I:??[OBJECT, ARRAY]) \l0x002b: CONST  (r14 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x002c: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002d: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY] A[D('$this$fixedPeriodTicker' kotlinx.coroutines.CoroutineScope)]) \l0x002f: INVOKE  (r0 I:kotlinx.coroutines.channels.ReceiveChannel) = \l  (r10 I:kotlinx.coroutines.CoroutineScope)\l  (r11 I:kotlin.coroutines.CoroutineContext)\l  (r12 I:int)\l  (r13 I:kotlin.jvm.functions.Function2)\l  (r14 I:int)\l  (r15 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.channels.ProduceKt.produce$default(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlin.jvm.functions.Function2, int, java.lang.Object):kotlinx.coroutines.channels.ReceiveChannel A[MD:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlin.jvm.functions.Function2, int, java.lang.Object):kotlinx.coroutines.channels.ReceiveChannel (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0033|RETURN\l|0x0033: RETURN  (r0 I:kotlinx.coroutines.channels.ReceiveChannel\<kotlin.Unit\>) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0034|0x0034: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:349)\l0x0035: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:312)\l0x0037: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x003a: CONST_STR  (r2 I:java.lang.String) =  \"Expected non\-negative initial delay, but has \" \l0x003c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003f: INVOKE  (r1 I:java.lang.StringBuilder), (r8 I:long) type: VIRTUAL call: java.lang.StringBuilder.append(long):java.lang.StringBuilder A[MD:(long):java.lang.StringBuilder (c)]\l0x0042: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0045: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-FlowKt__DelayKt$fixedPeriodTicker$2' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0049: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x004b: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004f: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0052|0x0052: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0053|0x0053: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:349)\l0x0054: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:311)\l0x0056: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0059: CONST_STR  (r2 I:java.lang.String) =  \"Expected non\-negative delay, but has \" \l0x005b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x005e: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:long) type: VIRTUAL call: java.lang.StringBuilder.append(long):java.lang.StringBuilder A[MD:(long):java.lang.StringBuilder (c)]\l0x0061: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0064: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-FlowKt__DelayKt$fixedPeriodTicker$1' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0068: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x006a: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x006e: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0071|0x0071: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|0x000e: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.channels.ReceiveChannel\<kotlin.Unit\> kotlinx.coroutines.flow.FlowKt__DelayKt.fixedPeriodTicker((r16 I:kotlinx.coroutines.CoroutineScope A[D('$this$fixedPeriodTicker' kotlinx.coroutines.CoroutineScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:long A[D('delayMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:long A[D('initialDelayMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0052 \-\> B:20:?, CROSS_EDGE: B:28:0x0015 \-\> B:31:0x0019, CROSS_EDGE: B:37:0x0071 \-\> B:20:?, CROSS_EDGE: B:24:0x000e \-\> B:25:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0035\-0x0049: r0 '$i$a$\-require\-FlowKt__DelayKt$fixedPeriodTicker$2' I\l  0x0054\-0x0068: r0 '$i$a$\-require\-FlowKt__DelayKt$fixedPeriodTicker$1' I\l  \-1 \-0x0071: r16 '$this$fixedPeriodTicker' Lkotlinx\/coroutines\/CoroutineScope;\l  \-1 \-0x0071: r17 'delayMillis' J\l  \-1 \-0x0071: r19 'initialDelayMillis' J\lSIGNATURE: (Lkotlinx\/coroutines\/CoroutineScope;JJ)Lkotlinx\/coroutines\/channels\/ReceiveChannel\<Lkotlin\/Unit;\>;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_36;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_20;
Node_34 -> Node_35;
Node_35 -> Node_20;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_24 -> Node_25;
}

