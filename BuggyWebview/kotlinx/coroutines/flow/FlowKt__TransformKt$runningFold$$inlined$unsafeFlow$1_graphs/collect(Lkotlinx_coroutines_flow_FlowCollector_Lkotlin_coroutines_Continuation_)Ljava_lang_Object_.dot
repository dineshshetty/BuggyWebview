digraph "CFG forkotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1.collect(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000}"];
Node_25 [shape=record,label="{25\:\ 0x0002|if ((r10 instanceof kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1.C09421) == false) goto L21\l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1 r0 = (kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1.C09421) r10\l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) == 0) goto L21\l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|r0.label = r0.label \- Integer.MIN_VALUE\l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1), (r0v5 kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1) binds: [B:29:0x0014, B:28:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r10 = r0\ljava.lang.Object r0 = r10.result\ljava.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|switch(r10.label) \{\l    case 0: goto L18;\l    case 1: goto L14;\l    case 2: goto L11;\l    default: goto L8;\l\}\l}"];
Node_32 [shape=record,label="{32\:\ 0x0025}"];
Node_33 [shape=record,label="{33\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x002d|kotlin.ResultKt.throwOnFailure(r0)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0083}"];
Node_43 [shape=record,label="{43\:\ 0x0085|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
Node_35 [shape=record,label="{35\:\ 0x0032|kotlin.jvm.internal.Ref$ObjectRef r2 = (kotlin.jvm.internal.Ref.ObjectRef) r10.L$2\lkotlinx.coroutines.flow.FlowCollector r3 = (kotlinx.coroutines.flow.FlowCollector) r10.L$1\lkotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1 r4 = (kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1) r10.L$0\lkotlin.ResultKt.throwOnFailure(r0)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0067|PHI: r2 r3 r4 \l  PHI: (r2v4 'accumulator' kotlin.jvm.internal.Ref$ObjectRef) = (r2v3 'accumulator' kotlin.jvm.internal.Ref$ObjectRef), (r2v7 'accumulator' kotlin.jvm.internal.Ref$ObjectRef) binds: [B:37:0x0064, B:35:0x0032] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 '$this$runningFold_u24lambda_u2d8' kotlinx.coroutines.flow.FlowCollector) = (r3v0 '$this$runningFold_u24lambda_u2d8' kotlinx.coroutines.flow.FlowCollector), (r3v3 '$this$runningFold_u24lambda_u2d8' kotlinx.coroutines.flow.FlowCollector) binds: [B:37:0x0064, B:35:0x0032] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1) = (r4v0 kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1), (r4v3 kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1) binds: [B:37:0x0064, B:35:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|r10.L$0 = null\lr10.L$1 = null\lr10.L$2 = null\lr10.label = 2\l}"];
Node_40 [shape=record,label="{40\:\ 0x0080|if (r4.$this_runningFold$inlined.collect(new kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1(r2, r4.$operation$inlined, r3), r10) != r1) goto L12\l}"];
Node_41 [shape=record,label="{41\:\ 0x0082|RETURN\l|return r1\l}"];
Node_36 [shape=record,label="{36\:\ 0x0043|kotlin.ResultKt.throwOnFailure(r0)\lr4 = r8\lr3 = r9\lkotlin.jvm.internal.Ref$ObjectRef r2 = new kotlin.jvm.internal.Ref.ObjectRef()\lr2.element = r4.$initial$inlined\lT r5 = r2.element\lr10.L$0 = r4\lr10.L$1 = r3\lr10.L$2 = r2\lr10.label = 1\l}"];
Node_37 [shape=record,label="{37\:\ 0x0064|if (r3.emit(r5, r10) != r1) goto L15\l}"];
Node_38 [shape=record,label="{38\:\ 0x0066|RETURN\l|return r1\l}"];
Node_29 [shape=record,label="{29\:\ 0x0014|kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1 r0 = new kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1.C09421(r10)\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1.collect((r8v0 'this' kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1 A[IMMUTABLE_TYPE, THIS]), (r9v0 kotlinx.coroutines.flow.FlowCollector\<? super R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:43:0x0085 \-\> B:23:?, CROSS_EDGE: B:41:0x0082 \-\> B:23:?, CROSS_EDGE: B:40:0x0080 \-\> B:42:0x0083, CROSS_EDGE: B:38:0x0066 \-\> B:23:?, CROSS_EDGE: B:37:0x0064 \-\> B:39:0x0067, CROSS_EDGE: B:29:0x0014 \-\> B:30:0x0019, CROSS_EDGE: B:25:0x0002 \-\> B:29:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlinx\/coroutines\/flow\/FlowCollector\<\-TR;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r5v0, types: [T, java.lang.Object]\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [105=4]\}\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_34;
Node_31 -> Node_35;
Node_31 -> Node_36;
Node_32 -> Node_33;
Node_33 -> Node_23;
Node_34 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_23;
Node_35 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_23;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_23;
Node_29 -> Node_30;
}

