digraph "CFG forkotlinx.coroutines.flow.StateFlowImpl.createSlotArray(I)[Lkotlinx\/coroutines\/flow\/internal\/AbstractSharedFlowSlot;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.flow.StateFlowSlot[]) = (r1 I:kotlinx.coroutines.flow.StateFlowImpl), (r2 I:int A[D('size' int)]) type: VIRTUAL call: kotlinx.coroutines.flow.StateFlowImpl.createSlotArray(int):kotlinx.coroutines.flow.StateFlowSlot[] A[MD:(int):kotlinx.coroutines.flow.StateFlowSlot[] (m)] (LINE:309)\l0x0004: CHECK_CAST (r0 I:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[]) = (kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[]) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:kotlinx.coroutines.flow.StateFlowSlot[]) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ kotlinx.coroutines.flow.StateFlowSlot[] kotlinx.coroutines.flow.StateFlowImpl.createSlotArray((r1 'this' I:kotlinx.coroutines.flow.StateFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0006: r2 'size' I\lTYPE_VARS: [T]\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.internal.AbstractSharedFlow.createSlotArray(int):S extends kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot\<?\>[]]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

