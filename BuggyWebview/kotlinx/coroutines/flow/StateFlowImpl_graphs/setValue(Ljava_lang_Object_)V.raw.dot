digraph "CFG forkotlinx.coroutines.flow.StateFlowImpl.setValue(Ljava\/lang\/Object;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0005  (LINE:318)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: SGET  (r0 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL kotlinx.coroutines.internal.Symbol \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: INVOKE  (r2 I:kotlinx.coroutines.flow.StateFlowImpl), (r1 I:java.lang.Object), (r0 I:java.lang.Object) type: DIRECT call: kotlinx.coroutines.flow.StateFlowImpl.updateState(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|RETURN\l|0x000a: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0005|0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('value' java.lang.Object)]) \l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.flow.StateFlowImpl.setValue((r2 'this' I:kotlinx.coroutines.flow.StateFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r3 I:T A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0005 \-\> B:12:0x0006\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (TT;)V\lDebug Info:\l  \-1 \-0x000a: r3 'value' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.MutableStateFlow.setValue(T):void]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
Node_11 -> Node_12;
}

