digraph "CFG forkotlinx.coroutines.flow.StateFlowImpl.getValue()Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL kotlinx.coroutines.internal.Symbol  (LINE:317)\l0x0002: IGET  (r1 I:java.lang.Object) = (r4 I:kotlinx.coroutines.flow.StateFlowImpl) kotlinx.coroutines.flow.StateFlowImpl._state java.lang.Object \l0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0005|0x0005: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value$iv' java.lang.Object)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('this_$iv' kotlinx.coroutines.internal.Symbol)])  \-\> B:13:?  (LINE:431)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0007|0x0007: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('value$iv' java.lang.Object)]) = (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|RETURN\lORIG_RETURN\l|0x0009: RETURN  (r1 I:T A[D('value$iv' java.lang.Object)])  (LINE:317)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0009: RETURN  (r1 I:T A[D('value$iv' java.lang.Object)]) A[SYNTHETIC] (LINE:317)\l}"];
MethodNode[shape=record,label="{public T kotlinx.coroutines.flow.StateFlowImpl.getValue((r4 'this' I:kotlinx.coroutines.flow.StateFlowImpl\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0005 \-\> B:12:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: ()TT;\lDebug Info:\l  0x0002\-0x0009: r0 'this_$iv' Lkotlinx\/coroutines\/internal\/Symbol;\l  0x0004\-0x0009: r1 'value$iv' Ljava\/lang\/Object;\l  0x0005\-0x0009: r2 '$i$f$unbox' I\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.StateFlow.getValue():T]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

