digraph "CFG forkotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r7 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2) kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.label int  (LINE:297)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:27:0x0016\l case 1: goto B:26:0x0011\l default: goto B:24:0x0009 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|0x0009: NEW_INSTANCE  (r8 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:301)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r8 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0010|0x0010: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|0x0011: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY])  (LINE:297)\l0x0012: INVOKE  (r8 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x003e|0x003e: SGET  (r1 I:kotlin.Unit A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2)]) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:301)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0040|RETURN\l|0x0040: RETURN  (r1 I:java.lang.Object) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|0x0016: INVOKE  (r8 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0019: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r2 I:kotlin.jvm.internal.Ref$ObjectRef\<java.lang.Object\>) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.$lastValue kotlin.jvm.internal.Ref$ObjectRef  (LINE:298)\l0x001c: IGET  (r2 I:T) = (r2 I:kotlin.jvm.internal.Ref$ObjectRef) kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object \l}"];
Node_28 [shape=record,label="{28\:\ 0x001e|0x001e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0023 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0020|0x0020: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_30 [shape=record,label="{30\:\ 0x0022|RETURN\l|0x0022: RETURN  (r0 I:java.lang.Object) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0023|0x0023: IGET  (r3 I:kotlin.jvm.internal.Ref$ObjectRef\<java.lang.Object\>) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.$lastValue kotlin.jvm.internal.Ref$ObjectRef  (LINE:299)\l0x0025: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0026: IPUT  (r4 I:T), (r3 I:kotlin.jvm.internal.Ref$ObjectRef) kotlin.jvm.internal.Ref.ObjectRef.element java.lang.Object \l0x0028: IGET  (r3 I:kotlinx.coroutines.flow.FlowCollector\<T\>) = \l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.$downstream kotlinx.coroutines.flow.FlowCollector  (LINE:300)\l0x002a: SGET  (r5 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL kotlinx.coroutines.internal.Symbol \l0x002c: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x002d|0x002d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' java.lang.Object)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('this_$iv' kotlinx.coroutines.internal.Symbol)])  \-\> B:34:0x0030  (LINE:349)\l}"];
Node_33 [shape=record,label="{33\:\ 0x002f|0x002f: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('value' java.lang.Object)]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0030|0x0030: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2)]) \l0x0031: CHECK_CAST (r4 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r4 I:??[OBJECT, ARRAY]) \l0x0033: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:300)\l0x0034: IPUT  \l  (r5 I:int)\l  (r1 I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2 A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2)])\l kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.label int \l0x0036: INVOKE  (r2 I:java.lang.Object) = (r3 I:kotlinx.coroutines.flow.FlowCollector), (r2 I:java.lang.Object), (r4 I:kotlin.coroutines.Continuation) type: INTERFACE call: kotlinx.coroutines.flow.FlowCollector.emit(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x003a|0x003a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x003d \l}"];
Node_36 [shape=record,label="{36\:\ 0x003c|RETURN\l|0x003c: RETURN  (r0 I:java.lang.Object)  (LINE:297)\l}"];
Node_37 [shape=record,label="{37\:\ 0x003d|0x003d: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2)])  (LINE:300)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.invokeSuspend((r7 'this' I:kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2 A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:39:0x0040 \-\> B:21:?, CROSS_EDGE: B:30:0x0022 \-\> B:21:?, CROSS_EDGE: B:36:0x003c \-\> B:21:?, CROSS_EDGE: B:37:0x003d \-\> B:38:0x003e, CROSS_EDGE: B:32:0x002d \-\> B:34:0x0030\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0016: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__DelayKt$sample$2$1$2;\l  0x0012\-0x0016: r8 '$result' Ljava\/lang\/Object;\l  0x0023\-0x0030: r2 'value' Ljava\/lang\/Object;\l  0x002c\-0x0030: r5 'this_$iv' Lkotlinx\/coroutines\/internal\/Symbol;\l  0x002d\-0x0030: r6 '$i$f$unbox' I\l  0x001a\-0x003e: r1 'this' Lkotlinx\/coroutines\/flow\/FlowKt__DelayKt$sample$2$1$2;\l  0x003e\-0x0049: r0 'this' Lkotlinx\/coroutines\/flow\/FlowKt__DelayKt$sample$2$1$2;\l  0x001a\-0x0049: r8 '$result' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_26;
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_21;
Node_26 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_21;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_21;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_21;
Node_37 -> Node_38;
}

