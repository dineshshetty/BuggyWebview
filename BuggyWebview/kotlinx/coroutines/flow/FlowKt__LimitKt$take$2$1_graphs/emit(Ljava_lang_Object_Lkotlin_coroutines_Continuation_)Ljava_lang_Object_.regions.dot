digraph "CFG forkotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1.emit(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_2096642698 {
label = "R(5:(2:3|(4:5|6|7|13))|22|6|7|13) | DECL_VAR: kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1 null, kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1 null, java.lang.Object value\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2044522780 {
label = "IF [B:27:0x0002] THEN: R(2:3|(4:5|6|7|13)) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0002|if ((r8 instanceof kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1) != false) goto L3\l}"];
subgraph cluster_Region_1776853014 {
label = "R(2:3|(4:5|6|7|13))";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0004|kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1 r0 = (kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1) r8\l}"];
subgraph cluster_IfRegion_1010191724 {
label = "IF [B:29:0x000c] THEN: R(4:5|6|7|13) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) != 0) goto L5\l}"];
subgraph cluster_Region_1689903420 {
label = "R(4:5|6|7|13)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x000e|r0.label \-= Integer.MIN_VALUE\l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1), (r0v5 kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1) binds: [B:31:0x0014, B:30:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r8 = r0\ljava.lang.Object java.lang.Object r0 = r8.result\ljava.lang.Object java.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_1083151108 {
label = "Switch: 3
 case 0 -> R(3:14|(2:16|(1:18))(2:19|(1:21))|1)
 case 1, 2 -> R(2:11|1)
 case default -> R(1:9)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0022|switch(r8.label) \{\l    case 0: goto L14;\l    case 1: goto L11;\l    case 2: goto L11;\l    default: goto L8;\l\}\l}"];
subgraph cluster_Region_1189751465 {
label = "R(3:14|(2:16|(1:18))(2:19|(1:21))|1)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0031|kotlin.ResultKt.throwOnFailure(r0)\lr6.$consumed.element++\l}"];
subgraph cluster_IfRegion_1285623294 {
label = "IF [B:38:0x0043] THEN: R(2:16|(1:18)) ELSE: R(2:19|(1:21))";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0043|if (r6.$consumed.element \< r6.$count) goto L16\l}"];
subgraph cluster_Region_2107559413 {
label = "R(2:16|(1:18))";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0045|kotlinx.coroutines.flow.FlowCollector\<T\> kotlinx.coroutines.flow.FlowCollector\<T\> r3 = r6.$this_unsafeFlow\lr8.label = 1\ljava.lang.Object java.lang.Object r7 = r3.emit(r7, r8)\l}"];
subgraph cluster_IfRegion_1293458732 {
label = "IF [B:40:0x004d] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x004d|if (r7 == r1) goto L18\l}"];
subgraph cluster_Region_992345832 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x004f|RETURN\l|return r1\l}"];
}
}
}
subgraph cluster_Region_1364863552 {
label = "R(2:19|(1:21))";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0053|kotlinx.coroutines.flow.FlowCollector\<T\> kotlinx.coroutines.flow.FlowCollector\<T\> r3 = r6.$this_unsafeFlow\lr8.label = 2\ljava.lang.Object r7 = kotlinx.coroutines.flow.Limit.emitAbort$FlowKt__LimitKt(r3, r7, r8)\l}"];
subgraph cluster_IfRegion_739062855 {
label = "IF [B:45:0x005c] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x005c|if (r7 == r1) goto L21\l}"];
subgraph cluster_Region_1684181156 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x005e|RETURN\l|return r1\l}"];
}
}
}
}
Node_InsnContainer_1963282891 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1292936932 {
label = "R(2:11|1)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x002d|kotlin.ResultKt.throwOnFailure(r0)\l}"];
Node_InsnContainer_1800346214 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1696360270 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
}
}
Node_43 [shape=record,label="{43\:\ 0x0052|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
}
}
}
Node_31 [shape=record,label="{31\:\ 0x0014|kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1 r0 = new kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1(r6, r8)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1) = (r0v1 kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1), (r0v5 kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1) binds: [B:31:0x0014, B:30:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r8 = r0\ljava.lang.Object java.lang.Object r0 = r8.result\ljava.lang.Object java.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_2051113302 {
label = "Switch: 0";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0022|switch(r8.label) \{\l    case 0: goto L14;\l    case 1: goto L11;\l    case 2: goto L11;\l    default: goto L8;\l\}\l}"];
}
Node_43 [shape=record,label="{43\:\ 0x0052|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0000}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0025}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0050}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1.emit((r6v0 'this' kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1\<T\> A[IMMUTABLE_TYPE, THIS]), (r7v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:43:0x0052 \-\> B:25:?, CROSS_EDGE: B:41:0x004f \-\> B:25:?, CROSS_EDGE: B:40:0x004d \-\> B:42:0x0050, CROSS_EDGE: B:46:0x005e \-\> B:25:?, CROSS_EDGE: B:45:0x005c \-\> B:42:0x0050, CROSS_EDGE: B:31:0x0014 \-\> B:32:0x0019, CROSS_EDGE: B:27:0x0002 \-\> B:31:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (TT;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lJadxCommentsAttr\{\l WARN: \l \-\> Removed duplicated region for block: B:37:0x0031 \l \-\> Removed duplicated region for block: B:36:0x002d \l \-\> Removed duplicated region for block: B:34:0x0025 \l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [55=4]\}\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.FlowCollector.emit(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_24;Node_27 -> Node_28;
Node_27 -> Node_31[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_36;
Node_33 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_38 -> Node_44[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_42[style=dashed];
Node_41 -> Node_25;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_45 -> Node_42[style=dashed];
Node_46 -> Node_25;
Node_36 -> Node_42;
Node_35 -> Node_25;
Node_43 -> Node_25;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_36;
Node_33 -> Node_37;
Node_43 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_34 -> Node_35;
Node_42 -> Node_43;
}

