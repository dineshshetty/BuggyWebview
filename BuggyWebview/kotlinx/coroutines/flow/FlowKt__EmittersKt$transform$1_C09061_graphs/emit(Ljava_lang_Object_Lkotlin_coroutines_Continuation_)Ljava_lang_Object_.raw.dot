digraph "CFG forkotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.1.emit(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r8 I:??[OBJECT, ARRAY]) kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0014 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1) = (kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1) kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0014 \l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|0x000e: IGET  (r8 I:int) = (r0 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1) kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1.label int \l0x0010: ARITH  (r8 I:int) = (r8 I:int) \- (r2 I:int) \l0x0011: IPUT  (r8 I:int), (r0 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1) kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1.label int \l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|0x0019: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r0 I:java.lang.Object) = \l  (r8 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1.result java.lang.Object \l0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0020: IGET  (r2 I:int) = \l  (r8 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1.label int  (LINE:40)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0022|0x0022: SWITCH  (r2 I:??)\l case 0: goto B:31:0x0031\l case 1: goto B:30:0x002d\l default: goto B:28:0x0025 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0025|0x0025: NEW_INSTANCE  (r7 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:42)\l0x0027: CONST_STR  (r8 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x0029: INVOKE  (r7 I:java.lang.IllegalStateException), (r8 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x002c|0x002c: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x002d|0x002d: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:40)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0043|0x0043: SGET  (r7 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:42)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0045|RETURN\l|0x0045: RETURN  (r7 I:java.lang.Object) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0031|0x0031: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0034: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0035: IGET  (r3 I:kotlin.jvm.functions.Function3\<kotlinx.coroutines.flow.FlowCollector\<? super R\>, T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>, java.lang.Object\>) = \l  (r2 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1 A[D('this' kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1)])\l kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.1.$transform kotlin.jvm.functions.Function3  (LINE:42)\l0x0037: IGET  (r4 I:kotlinx.coroutines.flow.FlowCollector\<R\>) = \l  (r2 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1 A[D('this' kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1)])\l kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.1.$$this$flow kotlinx.coroutines.flow.FlowCollector \l0x0039: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x003a: IPUT  \l  (r5 I:int)\l  (r8 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1.label int \l0x003c: INVOKE  (r7 I:java.lang.Object A[D('value' java.lang.Object)]) = \l  (r3 I:kotlin.jvm.functions.Function3)\l  (r4 I:java.lang.Object)\l  (r7 I:java.lang.Object A[D('value' java.lang.Object)])\l  (r8 I:java.lang.Object A[D('$continuation' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlin.jvm.functions.Function3.invoke(java.lang.Object, java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2, P3):R (m)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0040|0x0040: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0043 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0042|RETURN\l|0x0042: RETURN  (r1 I:java.lang.Object)  (LINE:40)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1) =  kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1 \l0x0016: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1)\l  (r6 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1)\l  (r8 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1.\<init\>(kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1\<? super T\>, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1\>):void (m)]\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.1.emit((r6 'this' I:kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1\<T\> A[IMMUTABLE_TYPE, THIS]), (r7 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:35:0x0045 \-\> B:19:?, CROSS_EDGE: B:33:0x0042 \-\> B:19:?, CROSS_EDGE: B:32:0x0040 \-\> B:34:0x0043, CROSS_EDGE: B:25:0x0014 \-\> B:26:0x0019, CROSS_EDGE: B:21:0x0002 \-\> B:25:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (TT;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x001c\-0x0025: r0 '$result' Ljava\/lang\/Object;\l  0x001a\-0x0025: r8 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x0035\-0x0040: r2 'this' Lkotlinx\/coroutines\/flow\/FlowKt__EmittersKt$transform$1$1;\l  0x0035\-0x0040: r7 'value' Ljava\/lang\/Object;\l  0x002d\-0x004d: r0 '$result' Ljava\/lang\/Object;\l  0x002d\-0x004d: r8 '$continuation' Lkotlin\/coroutines\/Continuation;\lMETHOD_OVERRIDE: [kotlinx.coroutines.flow.FlowCollector.emit(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_30;
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_19;
Node_30 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_19;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_19;
Node_25 -> Node_26;
}

