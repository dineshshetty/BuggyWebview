digraph "CFG forkotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1.collect$$forInline(Lkotlinx\/coroutines\/flow\/FlowCollector;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0001: INVOKE  (r0 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x0004: NEW_INSTANCE  (r0 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1) =  kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1 \l0x0006: INVOKE  \l  (r0 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1)\l  (r6 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1)\l  (r8 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1.1.\<init\>(kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1, kotlin.coroutines.Continuation):void (m)]\l0x0009: CONST  (r0 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l0x000a: INVOKE  (r0 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x000d: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('collector' kotlinx.coroutines.flow.FlowCollector)])  (LINE:108)\l0x000e: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$completion' kotlin.coroutines.Continuation)]) \l0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: IGET  (r3 I:kotlinx.coroutines.flow.Flow) = (r6 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1) kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1.$this_unsafeTransform$inlined kotlinx.coroutines.flow.Flow  (LINE:113)\l0x0012: NEW_INSTANCE  (r4 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1) =  kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1 \l0x0014: IGET  (r5 I:kotlin.jvm.functions.Function3) = (r6 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1) kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1.$transform$inlined kotlin.jvm.functions.Function3 \l0x0016: INVOKE  \l  (r4 I:kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1)\l  (r5 I:kotlin.jvm.functions.Function3)\l  (r0 I:kotlinx.coroutines.flow.FlowCollector A[D('$this$unsafeTransform_u24lambda_u2d0' kotlinx.coroutines.flow.FlowCollector)])\l type: DIRECT call: kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1.\<init\>(kotlin.jvm.functions.Function3, kotlinx.coroutines.flow.FlowCollector):void A[MD:(kotlin.jvm.functions.Function3\<? super kotlinx.coroutines.flow.FlowCollector\<? super R\>, ? super T, ? super kotlin.coroutines.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\>, kotlinx.coroutines.flow.FlowCollector\<? super R\>):void (m)]\l0x0019: CHECK_CAST (r4 I:kotlinx.coroutines.flow.FlowCollector) = (kotlinx.coroutines.flow.FlowCollector) (r4 I:??[OBJECT, ARRAY]) \l0x001b: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001c: INVOKE  (r5 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x001f: INVOKE  \l  (r3 I:kotlinx.coroutines.flow.Flow)\l  (r4 I:kotlinx.coroutines.flow.FlowCollector)\l  (r8 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: INTERFACE call: kotlinx.coroutines.flow.Flow.collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation):java.lang.Object A[MD:(kotlinx.coroutines.flow.FlowCollector\<? super T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l0x0022: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0023: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x0027: SGET  (r0 I:kotlin.Unit A[D('$this$unsafeTransform_u24lambda_u2d0' kotlinx.coroutines.flow.FlowCollector)]) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|RETURN\l|0x0029: RETURN  (r0 I:java.lang.Object)  (LINE:109)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1.collect$$forInline((r6 'this' I:kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1 A[IMMUTABLE_TYPE, THIS]), (r7 I:kotlinx.coroutines.flow.FlowCollector A[D('collector' kotlinx.coroutines.flow.FlowCollector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  0x000e\-0x0027: r0 '$this$unsafeTransform_u24lambda_u2d0' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  0x000f\-0x0027: r1 '$completion' Lkotlin\/coroutines\/Continuation;\l  0x0010\-0x0027: r2 '$i$a$\-unsafeFlow\-FlowKt__EmittersKt$unsafeTransform$1' I\l  \-1 \-0x0029: r7 'collector' Lkotlinx\/coroutines\/flow\/FlowCollector;\l  \-1 \-0x0029: r8 '$completion' Lkotlin\/coroutines\/Continuation;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

