digraph "CFG forkotlinx.coroutines.flow.FlowKt__CountKt.count(Lkotlinx\/coroutines\/flow\/Flow;Lkotlin\/jvm\/functions\/Function2;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000}"];
Node_22 [shape=record,label="{22\:\ 0x0002|if ((r7 instanceof kotlinx.coroutines.flow.FlowKt__CountKt$count$3) == false) goto L18\l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|kotlinx.coroutines.flow.FlowKt__CountKt$count$3 r0 = (kotlinx.coroutines.flow.FlowKt__CountKt$count$3) r7\l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|if ((r0.label & Integer.MIN_VALUE) == 0) goto L18\l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|r0.label = r0.label \- Integer.MIN_VALUE\l}"];
Node_27 [shape=record,label="{27\:\ 0x0019|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.flow.FlowKt__CountKt$count$3) = (r0v1 kotlinx.coroutines.flow.FlowKt__CountKt$count$3), (r0v5 kotlinx.coroutines.flow.FlowKt__CountKt$count$3) binds: [B:26:0x0014, B:25:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r7 = r0\ljava.lang.Object r0 = r7.result\ljava.lang.Object r1 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|switch(r7.label) \{\l    case 0: goto L14;\l    case 1: goto L11;\l    default: goto L8;\l\}\l}"];
Node_29 [shape=record,label="{29\:\ 0x0025}"];
Node_30 [shape=record,label="{30\:\ 0x002c|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x002d|kotlin.jvm.internal.Ref$IntRef r5 = (kotlin.jvm.internal.Ref.IntRef) r7.L$0\lkotlin.ResultKt.throwOnFailure(r0)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0051|PHI: r5 \l  PHI: (r5v3 'i' kotlin.jvm.internal.Ref$IntRef) = (r5v2 'i' kotlin.jvm.internal.Ref$IntRef), (r5v5 'i' kotlin.jvm.internal.Ref$IntRef) binds: [B:35:0x0050, B:31:0x002d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0057|RETURN\l|return kotlin.coroutines.jvm.internal.boxing.boxInt(r5.element)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0035|kotlin.ResultKt.throwOnFailure(r0)\lkotlin.jvm.internal.Ref$IntRef r2 = new kotlin.jvm.internal.Ref.IntRef()\lr7.L$0 = r2\lr7.label = 1\l}"];
Node_33 [shape=record,label="{33\:\ 0x004d|if (r5.collect(new kotlinx.coroutines.flow.FlowKt__CountKt$count$4\<\>(r6, r2), r7) != r1) goto L17\l}"];
Node_34 [shape=record,label="{34\:\ 0x004f|RETURN\l|return r1\l}"];
Node_35 [shape=record,label="{35\:\ 0x0050|r5 = r2\l}"];
Node_26 [shape=record,label="{26\:\ 0x0014|kotlinx.coroutines.flow.FlowKt__CountKt$count$3 r0 = new kotlinx.coroutines.flow.FlowKt__CountKt$count$3(r7)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.flow.FlowKt__CountKt.count((r5v0 kotlinx.coroutines.flow.Flow\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlin.jvm.functions.Function2\<? super T, ? super kotlin.coroutines.Continuation\<? super java.lang.Boolean\>, ? extends java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.coroutines.Continuation\<? super java.lang.Integer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:37:0x0057 \-\> B:20:?, CROSS_EDGE: B:34:0x004f \-\> B:20:?, CROSS_EDGE: B:35:0x0050 \-\> B:36:0x0051, CROSS_EDGE: B:26:0x0014 \-\> B:27:0x0019, CROSS_EDGE: B:22:0x0002 \-\> B:26:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;Lkotlin\/jvm\/functions\/Function2\<\-TT;\-Lkotlin\/coroutines\/Continuation\<\-Ljava\/lang\/Boolean;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-Ljava\/lang\/Integer;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_31;
Node_28 -> Node_32;
Node_29 -> Node_30;
Node_30 -> Node_20;
Node_31 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_20;
Node_35 -> Node_36;
Node_26 -> Node_27;
}

