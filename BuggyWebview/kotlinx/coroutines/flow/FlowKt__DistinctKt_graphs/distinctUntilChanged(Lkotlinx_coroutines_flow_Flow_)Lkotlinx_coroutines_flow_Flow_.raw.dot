digraph "CFG forkotlinx.coroutines.flow.FlowKt__DistinctKt.distinctUntilChanged(Lkotlinx\/coroutines\/flow\/Flow;)Lkotlinx\/coroutines\/flow\/Flow;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0001|0x0001: INSTANCE_OF  (r0 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('$this$distinctUntilChanged' kotlinx.coroutines.flow.Flow)]) kotlinx.coroutines.flow.StateFlow  (LINE:25)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0007 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$distinctUntilChanged' kotlinx.coroutines.flow.Flow)]) \l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x000f: RETURN  (r0 I:kotlinx.coroutines.flow.Flow\<T\>) A[SYNTHETIC] (LINE:27)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0007|0x0007: SGET  (r0 I:kotlin.jvm.functions.Function1\<java.lang.Object, java.lang.Object\>) =  kotlinx.coroutines.flow.FlowKt__DistinctKt.defaultKeySelector kotlin.jvm.functions.Function1  (LINE:26)\l0x0009: SGET  (r1 I:kotlin.jvm.functions.Function2\<java.lang.Object, java.lang.Object, java.lang.Boolean\>) =  kotlinx.coroutines.flow.FlowKt__DistinctKt.defaultAreEquivalent kotlin.jvm.functions.Function2 \l0x000b: INVOKE  (r0 I:kotlinx.coroutines.flow.Flow) = \l  (r2 I:kotlinx.coroutines.flow.Flow A[D('$this$distinctUntilChanged' kotlinx.coroutines.flow.Flow)])\l  (r0 I:kotlin.jvm.functions.Function1)\l  (r1 I:kotlin.jvm.functions.Function2)\l type: STATIC call: kotlinx.coroutines.flow.FlowKt__DistinctKt.distinctUntilChangedBy$FlowKt__DistinctKt(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2):kotlinx.coroutines.flow.Flow A[MD:\<T\>:(kotlinx.coroutines.flow.Flow\<? extends T\>, kotlin.jvm.functions.Function1\<? super T, ? extends java.lang.Object\>, kotlin.jvm.functions.Function2\<java.lang.Object, java.lang.Object, java.lang.Boolean\>):kotlinx.coroutines.flow.Flow\<T\> (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x000f|RETURN\lORIG_RETURN\l|0x000f: RETURN  (r0 I:kotlinx.coroutines.flow.Flow\<T\>)  (LINE:27)\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.Flow\<T\> kotlinx.coroutines.flow.FlowKt__DistinctKt.distinctUntilChanged((r2 I:kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$distinctUntilChanged' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0007 \-\> B:14:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;)Lkotlinx\/coroutines\/flow\/Flow\<TT;\>;\lDebug Info:\l  \-1 \-0x000f: r2 '$this$distinctUntilChanged' Lkotlinx\/coroutines\/flow\/Flow;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

