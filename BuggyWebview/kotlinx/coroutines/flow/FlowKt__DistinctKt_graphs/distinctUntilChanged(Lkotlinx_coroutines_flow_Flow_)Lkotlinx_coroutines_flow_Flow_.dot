digraph "CFG forkotlinx.coroutines.flow.FlowKt__DistinctKt.distinctUntilChanged(Lkotlinx\/coroutines\/flow\/Flow;)Lkotlinx\/coroutines\/flow\/Flow;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0001}"];
Node_11 [shape=record,label="{11\:\ 0x0003|if ((r2 instanceof kotlinx.coroutines.flow.StateFlow) == false) goto L6\l}"];
Node_12 [shape=record,label="{12\:\ 0x0005}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0007}"];
Node_14 [shape=record,label="{14\:\ 0x000f|RETURN\lORIG_RETURN\l|return distinctUntilChangedBy$FlowKt__DistinctKt(r2, kotlinx.coroutines.flow.FlowKt__DistinctKt.defaultKeySelector, kotlinx.coroutines.flow.FlowKt__DistinctKt.defaultAreEquivalent)\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.flow.Flow\<T\> kotlinx.coroutines.flow.FlowKt__DistinctKt.distinctUntilChanged((r2v0 kotlinx.coroutines.flow.Flow\<? extends T\> A[D('$this$distinctUntilChanged' kotlinx.coroutines.flow.Flow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0007 \-\> B:14:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/flow\/Flow\<+TT;\>;)Lkotlinx\/coroutines\/flow\/Flow\<TT;\>;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r2v0, resolved type: kotlinx.coroutines.flow.Flow\<? extends T\>\}\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

