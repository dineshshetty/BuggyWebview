digraph "CFG forkotlinx.coroutines.selects.SelectBuilderImpl.AtomicSelectOp.prepareSelectOp()Ljava\/lang\/Object;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.selects.SelectBuilderImpl\<?\>) = (r8 I:kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp) kotlinx.coroutines.selects.SelectBuilderImpl.AtomicSelectOp.impl kotlinx.coroutines.selects.SelectBuilderImpl  (LINE:597)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0003|LOOP_START\lLOOP:0: B:28:0x0003\-\>B:47:0x0003\l|0x0004: IGET  (r2 I:java.lang.Object) = (r0 I:kotlinx.coroutines.selects.SelectBuilderImpl A[D('$this$loop$iv' kotlinx.coroutines.selects.SelectBuilderImpl)]) kotlinx.coroutines.selects.SelectBuilderImpl._state java.lang.Object  (LINE:661)\l0x0006: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:599)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0009|0x0009: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('state' java.lang.Object)]) != (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x000c \l}"];
Node_31 [shape=record,label="{31\:\ 0x000c|0x000c: INSTANCE_OF  (r5 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.internal.OpDescriptor  (LINE:600)\l}"];
Node_32 [shape=record,label="{32\:\ 0x000e|0x000e: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0019 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0019|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0019|0x0019: INVOKE  (r5 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.getNOT_SELECTED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:601)\l}"];
Node_35 [shape=record,label="{35\:\ 0x001d|0x001d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('state' java.lang.Object)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0030 \l}"];
Node_36 [shape=record,label="{36\:\ 0x001f|0x001f: IGET  (r5 I:kotlinx.coroutines.selects.SelectBuilderImpl\<?\>) = (r8 I:kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp) kotlinx.coroutines.selects.SelectBuilderImpl.AtomicSelectOp.impl kotlinx.coroutines.selects.SelectBuilderImpl  (LINE:602)\l0x0021: SGET  (r6 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.selects.SelectBuilderImpl._state$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater \l0x0023: INVOKE  (r7 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.getNOT_SELECTED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0027: INVOKE  (r5 I:boolean) = \l  (r6 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r5 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l  (r8 I:java.lang.Object)\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x002b|0x002b: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0003 \l}"];
Node_44 [shape=record,label="{44\:\ 0x002d|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x002d|RETURN\l|0x002d: RETURN  (r4 I:java.lang.Object)  (LINE:603)\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_48 [shape=record,label="{48\:\ 0x0003|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0003|LOOP_END\lSYNTHETIC\lLOOP:0: B:28:0x0003\-\>B:47:0x0003\l}"];
Node_45 [shape=record,label="{45\:\ 0x0030|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0030|0x0030: INVOKE  (r4 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.getALREADY_SELECTED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:605)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0034|RETURN\l|0x0034: RETURN  (r4 I:java.lang.Object) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0010|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0010|0x0010: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) \l0x0011: CHECK_CAST (r4 I:kotlinx.coroutines.internal.OpDescriptor) = (kotlinx.coroutines.internal.OpDescriptor) (r4 I:??[OBJECT, ARRAY]) \l0x0013: IGET  (r5 I:kotlinx.coroutines.selects.SelectBuilderImpl\<?\>) = (r8 I:kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp) kotlinx.coroutines.selects.SelectBuilderImpl.AtomicSelectOp.impl kotlinx.coroutines.selects.SelectBuilderImpl \l0x0015: INVOKE  (r4 I:kotlinx.coroutines.internal.OpDescriptor), (r5 I:java.lang.Object) type: VIRTUAL call: kotlinx.coroutines.internal.OpDescriptor.perform(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):java.lang.Object (m)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x0003|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x000b|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x000b|RETURN\l|0x000b: RETURN  (r4 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{private final java.lang.Object kotlinx.coroutines.selects.SelectBuilderImpl.AtomicSelectOp.prepareSelectOp((r8 'this' I:kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:33:0x0010 \-\> B:28:0x0003, CROSS_EDGE: B:38:0x002d \-\> B:26:?, BACK_EDGE: B:37:0x002b \-\> B:28:0x0003, CROSS_EDGE: B:41:0x0034 \-\> B:26:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x002f: r2 'state' Ljava\/lang\/Object;\l  0x0007\-0x002f: r3 '$i$a$\-loop\-SelectBuilderImpl$AtomicSelectOp$prepareSelectOp$1' I\l  0x0002\-0x0034: r0 '$this$loop$iv' Lkotlinx\/coroutines\/selects\/SelectBuilderImpl;\l  0x0003\-0x0034: r1 '$i$f$loop' I\l  0x0030\-0x0034: r2 'state' Ljava\/lang\/Object;\l  0x0030\-0x0034: r3 '$i$a$\-loop\-SelectBuilderImpl$AtomicSelectOp$prepareSelectOp$1' I\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_31;
Node_29 -> Node_42[style=dashed];
Node_31 -> Node_32;
Node_32 -> Node_43;
Node_32 -> Node_46[style=dashed];
Node_43 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_45;
Node_36 -> Node_37;
Node_37 -> Node_44[style=dashed];
Node_37 -> Node_48;
Node_44 -> Node_38;
Node_38 -> Node_26;
Node_48 -> Node_47;
Node_47 -> Node_28;
Node_45 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_26;
Node_46 -> Node_33;
Node_33 -> Node_49;
Node_49 -> Node_47;
Node_42 -> Node_30;
Node_30 -> Node_26;
}

