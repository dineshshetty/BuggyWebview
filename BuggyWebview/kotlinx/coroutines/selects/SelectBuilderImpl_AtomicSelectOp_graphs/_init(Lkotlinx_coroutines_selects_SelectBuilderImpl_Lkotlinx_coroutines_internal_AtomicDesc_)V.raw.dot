digraph "CFG forkotlinx.coroutines.selects.SelectBuilderImpl.AtomicSelectOp.\<init\>(Lkotlinx\/coroutines\/selects\/SelectBuilderImpl;Lkotlinx\/coroutines\/internal\/AtomicDesc;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r2 I:kotlinx.coroutines.internal.AtomicOp) type: DIRECT call: kotlinx.coroutines.internal.AtomicOp.\<init\>():void A[MD:():void (m)] (LINE:567)\l0x0003: IPUT  \l  (r3 I:kotlinx.coroutines.selects.SelectBuilderImpl\<?\> A[D('impl' kotlinx.coroutines.selects.SelectBuilderImpl)])\l  (r2 I:kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp)\l kotlinx.coroutines.selects.SelectBuilderImpl.AtomicSelectOp.impl kotlinx.coroutines.selects.SelectBuilderImpl  (LINE:565)\l0x0005: IPUT  \l  (r4 I:kotlinx.coroutines.internal.AtomicDesc A[D('desc' kotlinx.coroutines.internal.AtomicDesc)])\l  (r2 I:kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp)\l kotlinx.coroutines.selects.SelectBuilderImpl.AtomicSelectOp.desc kotlinx.coroutines.internal.AtomicDesc  (LINE:566)\l0x0007: INVOKE  (r0 I:kotlinx.coroutines.selects.SeqNumber) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.access$getSelectOpSequenceNumber$p():kotlinx.coroutines.selects.SeqNumber A[MD:():kotlinx.coroutines.selects.SeqNumber (m)] (LINE:569)\l0x000b: INVOKE  (r0 I:long) = (r0 I:kotlinx.coroutines.selects.SeqNumber) type: VIRTUAL call: kotlinx.coroutines.selects.SeqNumber.next():long A[MD:():long (m)]\l0x000f: IPUT  (r0 I:long), (r2 I:kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp) kotlinx.coroutines.selects.SelectBuilderImpl.AtomicSelectOp.opSequence long \l0x0012: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY])  (LINE:572)\l0x0013: CHECK_CAST (r0 I:kotlinx.coroutines.internal.AtomicOp) = (kotlinx.coroutines.internal.AtomicOp) (r0 I:??[OBJECT, ARRAY]) \l0x0015: INVOKE  \l  (r4 I:kotlinx.coroutines.internal.AtomicDesc A[D('desc' kotlinx.coroutines.internal.AtomicDesc)])\l  (r0 I:kotlinx.coroutines.internal.AtomicOp)\l type: VIRTUAL call: kotlinx.coroutines.internal.AtomicDesc.setAtomicOp(kotlinx.coroutines.internal.AtomicOp):void A[MD:(kotlinx.coroutines.internal.AtomicOp\<?\>):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|RETURN\l|0x0019: RETURN    (LINE:564)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.selects.SelectBuilderImpl.AtomicSelectOp.\<init\>((r2 'this' I:kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlinx.coroutines.selects.SelectBuilderImpl\<?\> A[D('impl' kotlinx.coroutines.selects.SelectBuilderImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlinx.coroutines.internal.AtomicDesc A[D('desc' kotlinx.coroutines.internal.AtomicDesc), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0019: r3 'impl' Lkotlinx\/coroutines\/selects\/SelectBuilderImpl;\l  \-1 \-0x0019: r4 'desc' Lkotlinx\/coroutines\/internal\/AtomicDesc;\lSIGNATURE: (Lkotlinx\/coroutines\/selects\/SelectBuilderImpl\<*\>;Lkotlinx\/coroutines\/internal\/AtomicDesc;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

