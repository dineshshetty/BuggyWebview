digraph "CFG forkotlinx.coroutines.selects.SelectBuilderImpl.PairSelectOp.getAtomicOp()Lkotlinx\/coroutines\/internal\/AtomicOp;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp) = (r1 I:kotlinx.coroutines.selects.SelectBuilderImpl$PairSelectOp) kotlinx.coroutines.selects.SelectBuilderImpl.PairSelectOp.otherOp kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp  (LINE:556)\l0x0002: INVOKE  (r0 I:kotlinx.coroutines.internal.AtomicOp) = (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.PrepareOp.getAtomicOp():kotlinx.coroutines.internal.AtomicOp A[MD:():kotlinx.coroutines.internal.AtomicOp\<?\> (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:kotlinx.coroutines.internal.AtomicOp\<?\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.internal.AtomicOp\<?\> kotlinx.coroutines.selects.SelectBuilderImpl.PairSelectOp.getAtomicOp((r1 'this' I:kotlinx.coroutines.selects.SelectBuilderImpl$PairSelectOp A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lSIGNATURE: ()Lkotlinx\/coroutines\/internal\/AtomicOp\<*\>;\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.OpDescriptor.getAtomicOp():kotlinx.coroutines.internal.AtomicOp\<?\>]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

