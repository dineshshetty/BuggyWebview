digraph "CFG forkotlinx.coroutines.selects.SelectUnbiasedKt.selectUnbiased$$forInline(Lkotlin\/jvm\/functions\/Function1;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:21)\l0x0002: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x0005: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('$completion' kotlin.coroutines.Continuation)]) \l0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: NEW_INSTANCE  (r3 I:kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl) =  kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl  (LINE:22)\l0x0009: INVOKE  \l  (r3 I:kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl)\l  (r1 I:kotlin.coroutines.Continuation A[D('uCont' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl.\<init\>(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<? super R\>):void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x000d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0011, blocks: (B:3:0x000d), top: B:12:0x000d \}\lCatch: all \-\> 0x0011\l|0x000d: INVOKE  \l  (r5 I:kotlin.jvm.functions.Function1 A[D('builder' kotlin.jvm.functions.Function1)])\l  (r3 I:java.lang.Object A[D('scope' kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0011, MD:(P1):R (m), TRY_ENTER, TRY_LEAVE] (LINE:24)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: INVOKE  (r1 I:java.lang.Object A[D('uCont' kotlin.coroutines.Continuation)]) = \l  (r3 I:kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl A[D('scope' kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl)])\l type: VIRTUAL call: kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl.initSelectResult():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:28)\l0x0019: INVOKE  (r2 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:21)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0022 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: INVOKE  (r6 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)]) type: STATIC call: kotlin.coroutines.jvm.internal.DebugProbesKt.probeCoroutineSuspended(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<?\>):void (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0023: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|RETURN\l|0x0026: RETURN  (r1 I:java.lang.Object)  (LINE:29)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|ExcHandler: all \-\> 0x0011\l|0x0011: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0011] (LINE:25)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: INVOKE  \l  (r3 I:kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl A[D('scope' kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl)])\l  (r4 I:java.lang.Throwable A[D('e' java.lang.Throwable)])\l type: VIRTUAL call: kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl.handleBuilderException(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (m)] (LINE:26)\l}"];
MethodNode[shape=record,label="{private static final java.lang.Object kotlinx.coroutines.selects.SelectUnbiasedKt.selectUnbiased$$forInline((r5 I:kotlin.jvm.functions.Function1\<? super kotlinx.coroutines.selects.SelectBuilder\<? super R\>, kotlin.Unit\> A[D('builder' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.coroutines.Continuation\<? super R\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:8:0x001d \-\> B:10:0x0022, CROSS_EDGE: B:6:0x0012 \-\> B:7:0x0015, CROSS_EDGE: B:12:0x000d \-\> B:5:0x0011\lDebug Info:\l  0x0012\-0x0015: r4 'e' Ljava\/lang\/Throwable;\l  0x0006\-0x0019: r1 'uCont' Lkotlin\/coroutines\/Continuation;\l  0x0007\-0x0019: r2 '$i$a$\-suspendCoroutineUninterceptedOrReturn\-SelectUnbiasedKt$selectUnbiased$2' I\l  0x000c\-0x0019: r3 'scope' Lkotlinx\/coroutines\/selects\/UnbiasedSelectBuilderImpl;\l  0x0001\-0x0026: r0 '$i$f$selectUnbiased' I\l  \-1 \-0x0026: r5 'builder' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x0026: r6 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [R]\lTryCatch #0 \{all \-\> 0x0011, blocks: (B:3:0x000d), top: B:12:0x000d \}\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Lkotlin\/jvm\/functions\/Function1\<\-Lkotlinx\/coroutines\/selects\/SelectBuilder\<\-TR;\>;Lkotlin\/Unit;\>;Lkotlin\/coroutines\/Continuation\<\-TR;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_12;
Node_12 -> Node_3;
Node_12 -> Node_5;
Node_3 -> Node_7;
Node_3 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_13 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

