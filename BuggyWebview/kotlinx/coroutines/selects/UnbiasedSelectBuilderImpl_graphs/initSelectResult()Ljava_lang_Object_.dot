digraph "CFG forkotlinx.coroutines.selects.UnbiasedSelectBuilderImpl.initSelectResult()Ljava\/lang\/Object;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000}"];
Node_20 [shape=record,label="{20\:\ 0x0006|if (r6.instance.isSelected() != false) goto L3\l}"];
Node_29 [shape=record,label="{29\:\ 0x0033}"];
Node_30 [shape=record,label="{30\:\ 0x0039|RETURN\l|return r6.instance.getResult()\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0009|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|TRY_ENTER\lTryCatch #0 \{all \-\> 0x002d, blocks: (B:21:0x0009, B:22:0x0019, B:24:0x001f), top: B:31:0x0009 \}\lCatch: all \-\> 0x002d\l|java.util.Collections.shuffle(r6.clauses)     \/\/ Catch: java.lang.Throwable \-\> L2d\ljava.lang.Iterable r0 = r6.clauses     \/\/ Catch: java.lang.Throwable \-\> L2d\ljava.util.Iterator r2 = r0.iterator()     \/\/ Catch: java.lang.Throwable \-\> L2d\l}"];
Node_22 [shape=record,label="{22\:\ 0x0019|LOOP_START\lTryCatch #0 \{all \-\> 0x002d, blocks: (B:21:0x0009, B:22:0x0019, B:24:0x001f), top: B:31:0x0009 \}\lLOOP:0: B:22:0x0019\-\>B:24:0x001f\lCatch: all \-\> 0x002d\l}"];
Node_23 [shape=record,label="{23\:\ 0x001d|if (r2.hasNext() == false) goto L11\l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|TRY_LEAVE\lLOOP_END\lTryCatch #0 \{all \-\> 0x002d, blocks: (B:21:0x0009, B:22:0x0019, B:24:0x001f), top: B:31:0x0009 \}\lLOOP:0: B:22:0x0019\-\>B:24:0x001f\lCatch: all \-\> 0x002d\l|java.lang.Object r3 = r2.next()     \/\/ Catch: java.lang.Throwable \-\> L2d\lkotlin.jvm.functions.Function0 r4 = (kotlin.jvm.functions.Functions) r3     \/\/ Catch: java.lang.Throwable \-\> L2d\lr4.invoke()     \/\/ Catch: java.lang.Throwable \-\> L2d\l}"];
Node_33 [shape=record,label="{33\:\ 0x0033|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x002d|ExcHandler: all \-\> 0x002d\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_28 [shape=record,label="{28\:\ 0x002e|r6.instance.handleBuilderException(r0)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl.initSelectResult((r6v0 'this' kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl\<R\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x001f \-\> B:22:0x0019, CROSS_EDGE: B:23:0x001d \-\> B:29:0x0033, CROSS_EDGE: B:28:0x002e \-\> B:29:0x0033, CROSS_EDGE: B:31:0x0009 \-\> B:27:0x002d\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x002d, blocks: (B:21:0x0009, B:22:0x0019, B:24:0x001f), top: B:31:0x0009 \}\lTYPE_VARS: [R]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_29;
Node_20 -> Node_31[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_18;
Node_31 -> Node_21;
Node_31 -> Node_27;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_32;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_33;
Node_24 -> Node_22;
Node_33 -> Node_29;
Node_32 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
}

