digraph "CFG forkotlinx.coroutines.selects.WhileSelectKt.whileSelect(Lkotlin\/jvm\/functions\/Function1;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r10 I:??[OBJECT, ARRAY]) kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0014 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1) = (kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:int) = (r0 I:kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1) kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1.label int \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0014 \l}"];
Node_38 [shape=record,label="{38\:\ 0x000e|0x000e: IGET  (r10 I:int) = (r0 I:kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1) kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1.label int \l0x0010: ARITH  (r10 I:int) = (r10 I:int) \- (r2 I:int) \l0x0011: IPUT  (r10 I:int), (r0 I:kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1) kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1.label int \l}"];
Node_40 [shape=record,label="{40\:\ 0x0019|0x0019: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r0 I:java.lang.Object) = (r10 I:kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1.result java.lang.Object \l0x001c: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0020: IGET  (r2 I:int) = (r10 I:kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1.label int  (LINE:30)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0022|0x0022: SWITCH  (r2 I:??)\l case 0: goto B:45:0x003b\l case 1: goto B:44:0x002d\l default: goto B:42:0x0025 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0025|0x0025: NEW_INSTANCE  (r9 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:32)\l0x0027: CONST_STR  (r10 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x0029: INVOKE  (r9 I:java.lang.IllegalStateException), (r10 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x002c|0x002c: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x002d|0x002d: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:30)\l0x002e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002f: IGET  (r3 I:java.lang.Object) = (r10 I:kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1 A[D('$continuation' kotlin.coroutines.Continuation)]) kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1.L$0 java.lang.Object \l0x0031: CHECK_CAST (r3 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r3 I:??[OBJECT, ARRAY]) \l0x0033: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0036: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('builder' kotlin.jvm.functions.Function1)]) \l0x0037: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('builder' kotlin.jvm.functions.Function1)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$f$select' int)]) \l0x0038: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('$i$f$select' int)]) = (r1 I:??[OBJECT, ARRAY]) \l0x0039: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x0073|0x0074: CHECK_CAST (r0 I:java.lang.Boolean) = (java.lang.Boolean) (r0 I:??[OBJECT, ARRAY]) \l0x0076: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x007a|0x007a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0080 \l}"];
Node_59 [shape=record,label="{59\:\ 0x007c|0x007c: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) \l0x007d: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) = (r2 I:??[OBJECT, ARRAY]) \l0x007e: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('builder' kotlin.jvm.functions.Function1)]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0041|0x0041: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:31)\l0x0043: IPUT  \l  (r3 I:java.lang.Object A[D('builder' kotlin.jvm.functions.Function1)])\l  (r10 I:kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1.L$0 java.lang.Object  (LINE:37)\l0x0045: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0046: IPUT  \l  (r4 I:int)\l  (r10 I:kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1 A[D('$continuation' kotlin.coroutines.Continuation)])\l kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1.label int \l0x0048: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('$continuation' kotlin.coroutines.Continuation)]) \l0x0049: CHECK_CAST (r4 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r4 I:??[OBJECT, ARRAY]) \l0x004b: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x004c: NEW_INSTANCE  (r6 I:kotlinx.coroutines.selects.SelectBuilderImpl) =  kotlinx.coroutines.selects.SelectBuilderImpl  (LINE:38)\l0x004e: INVOKE  \l  (r6 I:kotlinx.coroutines.selects.SelectBuilderImpl)\l  (r4 I:kotlin.coroutines.Continuation A[D('uCont$iv' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.selects.SelectBuilderImpl.\<init\>(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<? super R\>):void (m)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x0052|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_47 [shape=record,label="{47\:\ 0x0052|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0056, blocks: (B:47:0x0052), top: B:62:0x0052 \}\lCatch: all \-\> 0x0056\l|0x0052: INVOKE  \l  (r3 I:kotlin.jvm.functions.Function1 A[D('builder' kotlin.jvm.functions.Function1)])\l  (r6 I:java.lang.Object A[D('scope$iv' kotlinx.coroutines.selects.SelectBuilderImpl)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0056, MD:(P1):R (m), TRY_ENTER, TRY_LEAVE] (LINE:40)\l}"];
Node_51 [shape=record,label="{51\:\ 0x005a|0x005a: INVOKE  (r4 I:java.lang.Object A[D('uCont$iv' kotlin.coroutines.Continuation)]) = (r6 I:kotlinx.coroutines.selects.SelectBuilderImpl A[D('scope$iv' kotlinx.coroutines.selects.SelectBuilderImpl)]) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.getResult():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:44)\l0x005e: INVOKE  (r5 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:37)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0062|0x0062: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x006a \l}"];
Node_53 [shape=record,label="{53\:\ 0x0064|0x0064: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('$continuation' kotlin.coroutines.Continuation)]) \l0x0065: CHECK_CAST (r5 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r5 I:??[OBJECT, ARRAY]) \l0x0067: INVOKE  (r5 I:kotlin.coroutines.Continuation) type: STATIC call: kotlin.coroutines.jvm.internal.DebugProbesKt.probeCoroutineSuspended(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<?\>):void (m)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x006a|0x006a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x006d \l}"];
Node_55 [shape=record,label="{55\:\ 0x006c|RETURN\l|0x006c: RETURN  (r1 I:java.lang.Object)  (LINE:30)\l}"];
Node_56 [shape=record,label="{56\:\ 0x006d|0x006d: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY])  (LINE:37)\l0x006e: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) \l0x006f: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('$result' java.lang.Object)]) = (r4 I:??[OBJECT, ARRAY]) \l0x0070: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('builder' kotlin.jvm.functions.Function1)]) \l0x0071: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('builder' kotlin.jvm.functions.Function1)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$f$select' int)]) \l0x0072: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('$i$f$select' int)]) = (r8 I:??[OBJECT, ARRAY]) \l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_49 [shape=record,label="{49\:\ 0x0056|ExcHandler: all \-\> 0x0056\l|0x0056: MOVE_EXCEPTION  (r7 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0056] (LINE:41)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0057|0x0057: INVOKE  \l  (r6 I:kotlinx.coroutines.selects.SelectBuilderImpl A[D('scope$iv' kotlinx.coroutines.selects.SelectBuilderImpl)])\l  (r7 I:java.lang.Throwable A[D('e$iv' java.lang.Throwable)])\l type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.handleBuilderException(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (m)] (LINE:42)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0080|0x0080: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:32)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0082|RETURN\l|0x0082: RETURN  (r0 I:java.lang.Object) \l}"];
Node_45 [shape=record,label="{45\:\ 0x003b|0x003b: INVOKE  (r0 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x003e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x003f: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('builder' kotlin.jvm.functions.Function1)]) \l0x0040: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('builder' kotlin.jvm.functions.Function1)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1) =  kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1 \l0x0016: INVOKE  (r0 I:kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1), (r10 I:kotlin.coroutines.Continuation) type: DIRECT call: kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1.\<init\>(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<? super kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1\>):void (m)]\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.selects.WhileSelectKt.whileSelect((r9 I:kotlin.jvm.functions.Function1\<? super kotlinx.coroutines.selects.SelectBuilder\<? super java.lang.Boolean\>, kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:55:0x006c \-\> B:33:?, BACK_EDGE: B:56:0x006d \-\> B:57:0x0073, CROSS_EDGE: B:52:0x0062 \-\> B:54:0x006a, CROSS_EDGE: B:50:0x0057 \-\> B:51:0x005a, CROSS_EDGE: B:62:0x0052 \-\> B:49:0x0056, CROSS_EDGE: B:61:0x0082 \-\> B:33:?, CROSS_EDGE: B:45:0x003b \-\> B:46:0x0041, CROSS_EDGE: B:39:0x0014 \-\> B:40:0x0019, CROSS_EDGE: B:35:0x0002 \-\> B:39:0x0014\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0056, blocks: (B:47:0x0052), top: B:62:0x0052 \}\lSIGNATURE: (Lkotlin\/jvm\/functions\/Function1\<\-Lkotlinx\/coroutines\/selects\/SelectBuilder\<\-Ljava\/lang\/Boolean;\>;Lkotlin\/Unit;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x001c\-0x0025: r0 '$result' Ljava\/lang\/Object;\l  0x001a\-0x0025: r10 '$continuation' Lkotlin\/coroutines\/Continuation;\l  0x002f\-0x003b: r2 '$i$f$select' I\l  0x0033\-0x003b: r3 'builder' Lkotlin\/jvm\/functions\/Function1;\l  0x002e\-0x003b: r9 '$i$f$whileSelect' I\l  0x003e\-0x0041: r9 'builder' Lkotlin\/jvm\/functions\/Function1;\l  0x0057\-0x005a: r7 'e$iv' Ljava\/lang\/Throwable;\l  0x004b\-0x005e: r4 'uCont$iv' Lkotlin\/coroutines\/Continuation;\l  0x004c\-0x005e: r5 '$i$a$\-suspendCoroutineUninterceptedOrReturn\-SelectKt$select$3$iv' I\l  0x0051\-0x005e: r6 'scope$iv' Lkotlinx\/coroutines\/selects\/SelectBuilderImpl;\l  0x002d\-0x0073: r0 '$result' Ljava\/lang\/Object;\l  0x0042\-0x0073: r2 '$i$f$select' I\l  0x0041\-0x0073: r3 'builder' Lkotlin\/jvm\/functions\/Function1;\l  0x0073\-0x0074: r3 '$i$f$select' I\l  0x0073\-0x008b: r1 '$result' Ljava\/lang\/Object;\l  0x0073\-0x008b: r4 'builder' Lkotlin\/jvm\/functions\/Function1;\l  0x0041\-0x008b: r9 '$i$f$whileSelect' I\l  0x002d\-0x008b: r10 '$continuation' Lkotlin\/coroutines\/Continuation;\lJadxCommentsAttr\{\l WARN: \l \-\> Unsupported multi\-entry loop pattern (BACK_EDGE: B:56:0x006d \-\> B:57:0x0073). Please submit an issue!!!\}\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_39;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_41 -> Node_44;
Node_41 -> Node_45;
Node_42 -> Node_43;
Node_43 -> Node_33;
Node_44 -> Node_57;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_46;
Node_46 -> Node_62;
Node_62 -> Node_47;
Node_62 -> Node_49;
Node_47 -> Node_51;
Node_47 -> Node_63;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_33;
Node_56 -> Node_57;
Node_63 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_60 -> Node_61;
Node_61 -> Node_33;
Node_45 -> Node_46;
Node_39 -> Node_40;
}

