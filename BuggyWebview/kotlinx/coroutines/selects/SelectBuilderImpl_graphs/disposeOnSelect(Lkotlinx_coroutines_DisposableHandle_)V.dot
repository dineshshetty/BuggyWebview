digraph "CFG forkotlinx.coroutines.selects.SelectBuilderImpl.disposeOnSelect(Lkotlinx\/coroutines\/DisposableHandle;)V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|kotlinx.coroutines.selects.SelectBuilderImpl$DisposeNode r0 = new kotlinx.coroutines.selects.SelectBuilderImpl.DisposeNode(r3)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|if (isSelected() != false) goto L7\l}"];
Node_13 [shape=record,label="{13\:\ 0x000b|addLast(r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0015|if (isSelected() != false) goto L7\l}"];
Node_15 [shape=record,label="{15\:\ 0x0017|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0018|r3.dispose()\l}"];
Node_17 [shape=record,label="{17\:\ 0x001b|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.selects.SelectBuilderImpl.disposeOnSelect((r2v0 'this' kotlinx.coroutines.selects.SelectBuilderImpl\<R\> A[IMMUTABLE_TYPE, THIS]), (r3v0 'handle' kotlinx.coroutines.DisposableHandle A[D('handle' kotlinx.coroutines.DisposableHandle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x001b \-\> B:10:?, CROSS_EDGE: B:12:0x0009 \-\> B:16:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: [R]\lMETHOD_OVERRIDE: [kotlinx.coroutines.selects.SelectInstance.disposeOnSelect(kotlinx.coroutines.DisposableHandle):void]\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_10;
Node_16 -> Node_17;
Node_17 -> Node_10;
}

