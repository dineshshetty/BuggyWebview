digraph "CFG forkotlinx.coroutines.selects.SelectBuilderImpl.initCancellability()V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext) = (r7 I:kotlinx.coroutines.selects.SelectBuilderImpl) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)] (LINE:328)\l0x0004: SGET  (r1 I:kotlinx.coroutines.Job$Key) =  kotlinx.coroutines.Job.Key kotlinx.coroutines.Job$Key \l0x0006: CHECK_CAST (r1 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r1 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext$Element) = (r0 I:kotlin.coroutines.CoroutineContext), (r1 I:kotlin.coroutines.CoroutineContext$Key) type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x000c: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x000d: CHECK_CAST (r1 I:kotlinx.coroutines.Job) = (kotlinx.coroutines.Job) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0012 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0011|RETURN\l|0x0011: RETURN   \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0012|0x0013: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:330)\l0x0014: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:329)\l0x0015: NEW_INSTANCE  (r0 I:kotlinx.coroutines.selects.SelectBuilderImpl$SelectOnCancelling) =  kotlinx.coroutines.selects.SelectBuilderImpl$SelectOnCancelling  (LINE:330)\l0x0017: INVOKE  \l  (r0 I:kotlinx.coroutines.selects.SelectBuilderImpl$SelectOnCancelling)\l  (r7 I:kotlinx.coroutines.selects.SelectBuilderImpl)\l type: DIRECT call: kotlinx.coroutines.selects.SelectBuilderImpl.SelectOnCancelling.\<init\>(kotlinx.coroutines.selects.SelectBuilderImpl):void A[MD:(kotlinx.coroutines.selects.SelectBuilderImpl):void (m)]\l0x001a: CHECK_CAST (r0 I:kotlinx.coroutines.CompletionHandlerBase) = (kotlinx.coroutines.CompletionHandlerBase) (r0 I:??[OBJECT, ARRAY]) \l0x001c: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001d: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('$i$f$getAsHandler' int)]) = (r0 I:??[OBJECT, ARRAY] A[D('$this$asHandler$iv' kotlinx.coroutines.CompletionHandlerBase)])  (LINE:702)\l0x001e: CHECK_CAST (r4 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r4 I:??[OBJECT, ARRAY] A[D('$i$f$getAsHandler' int)]) \l0x0020: CONST  (r5 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:329)\l0x0021: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0022: INVOKE  (r0 I:kotlinx.coroutines.DisposableHandle) = \l  (r1 I:kotlinx.coroutines.Job A[D('parent' kotlinx.coroutines.Job)])\l  (r2 I:boolean)\l  (r3 I:boolean)\l  (r4 I:kotlin.jvm.functions.Function1)\l  (r5 I:int)\l  (r6 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.Job.DefaultImpls.invokeOnCompletion$default(kotlinx.coroutines.Job, boolean, boolean, kotlin.jvm.functions.Function1, int, java.lang.Object):kotlinx.coroutines.DisposableHandle A[MD:(kotlinx.coroutines.Job, boolean, boolean, kotlin.jvm.functions.Function1, int, java.lang.Object):kotlinx.coroutines.DisposableHandle (m)]\l0x0026: INVOKE  \l  (r7 I:kotlinx.coroutines.selects.SelectBuilderImpl)\l  (r0 I:kotlinx.coroutines.DisposableHandle A[D('newRegistration' kotlinx.coroutines.DisposableHandle)])\l type: DIRECT call: kotlinx.coroutines.selects.SelectBuilderImpl.setParentHandle(kotlinx.coroutines.DisposableHandle):void A[MD:(kotlinx.coroutines.DisposableHandle):void (m)] (LINE:331)\l0x0029: INVOKE  (r2 I:boolean) = (r7 I:kotlinx.coroutines.selects.SelectBuilderImpl) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.isSelected():boolean A[MD:():boolean (m)] (LINE:333)\l}"];
Node_16 [shape=record,label="{16\:\ 0x002d|0x002d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x002f|0x002f: INVOKE  (r0 I:kotlinx.coroutines.DisposableHandle A[D('newRegistration' kotlinx.coroutines.DisposableHandle)]) type: INTERFACE call: kotlinx.coroutines.DisposableHandle.dispose():void A[MD:():void (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0032|RETURN\lORIG_RETURN\l|0x0032: RETURN    (LINE:334)\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0032: RETURN   A[SYNTHETIC] (LINE:334)\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.selects.SelectBuilderImpl.initCancellability((r7 'this' I:kotlinx.coroutines.selects.SelectBuilderImpl\<R\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0032 \-\> B:11:?, CROSS_EDGE: B:16:0x002d \-\> B:18:0x0032\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x0020: r0 '$this$asHandler$iv' Lkotlinx\/coroutines\/CompletionHandlerBase;\l  0x001d\-0x0020: r4 '$i$f$getAsHandler' I\l  0x0026\-0x0032: r0 'newRegistration' Lkotlinx\/coroutines\/DisposableHandle;\l  0x0012\-0x0032: r1 'parent' Lkotlinx\/coroutines\/Job;\lTYPE_VARS: [R]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

