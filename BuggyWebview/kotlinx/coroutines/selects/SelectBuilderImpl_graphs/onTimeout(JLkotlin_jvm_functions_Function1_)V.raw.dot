digraph "CFG forkotlinx.coroutines.selects.SelectBuilderImpl.onTimeout(JLkotlin\/jvm\/functions\/Function1;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST  (r0 I:??[long, double]) = (0 ??[long, double])  (LINE:640)\l0x0002: CMP_L  (r2 I:int) = (r4 I:long A[D('timeMillis' long)]), (r0 I:long) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IF  (r2 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:19:0x0014 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: INVOKE  (r0 I:boolean) = (r3 I:kotlinx.coroutines.selects.SelectBuilderImpl) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.trySelect():boolean A[MD:():boolean (m)] (LINE:641)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|0x000c: INVOKE  (r0 I:kotlin.coroutines.Continuation) = (r3 I:kotlinx.coroutines.selects.SelectBuilderImpl) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.getCompletion():kotlin.coroutines.Continuation A[MD:():kotlin.coroutines.Continuation\<R\> (m)] (LINE:642)\l0x0010: INVOKE  \l  (r6 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)])\l  (r0 I:kotlin.coroutines.Continuation)\l type: STATIC call: kotlinx.coroutines.intrinsics.UndispatchedKt.startCoroutineUnintercepted(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation):void A[MD:\<T\>:(kotlin.jvm.functions.Function1\<? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\>, kotlin.coroutines.Continuation\<? super T\>):void (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0013|RETURN\lORIG_RETURN\l|0x0013: RETURN    (LINE:643)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0013: RETURN   A[SYNTHETIC] (LINE:643)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|0x0014: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:645)\l0x0015: NEW_INSTANCE  (r1 I:kotlinx.coroutines.selects.SelectBuilderImpl$onTimeout$$inlined$Runnable$1) =  kotlinx.coroutines.selects.SelectBuilderImpl$onTimeout$$inlined$Runnable$1  (LINE:714)\l0x0017: INVOKE  \l  (r1 I:kotlinx.coroutines.selects.SelectBuilderImpl$onTimeout$$inlined$Runnable$1)\l  (r3 I:kotlinx.coroutines.selects.SelectBuilderImpl)\l  (r6 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)])\l type: DIRECT call: kotlinx.coroutines.selects.SelectBuilderImpl$onTimeout$$inlined$Runnable$1.\<init\>(kotlinx.coroutines.selects.SelectBuilderImpl, kotlin.jvm.functions.Function1):void A[MD:(kotlinx.coroutines.selects.SelectBuilderImpl, kotlin.jvm.functions.Function1):void (m)]\l0x001a: CHECK_CAST (r1 I:java.lang.Runnable) = (java.lang.Runnable) (r1 I:??[OBJECT, ARRAY]) \l0x001c: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('$i$f$Runnable' int)]) = (r1 I:??[OBJECT, ARRAY])  (LINE:645)\l0x001d: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext) = (r3 I:kotlinx.coroutines.selects.SelectBuilderImpl) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)] (LINE:651)\l0x0021: INVOKE  (r1 I:kotlinx.coroutines.Delay) = (r1 I:kotlin.coroutines.CoroutineContext) type: STATIC call: kotlinx.coroutines.DelayKt.getDelay(kotlin.coroutines.CoroutineContext):kotlinx.coroutines.Delay A[MD:(kotlin.coroutines.CoroutineContext):kotlinx.coroutines.Delay (m)]\l0x0025: INVOKE  (r2 I:kotlin.coroutines.CoroutineContext) = (r3 I:kotlinx.coroutines.selects.SelectBuilderImpl) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)]\l0x0029: INVOKE  (r1 I:kotlinx.coroutines.DisposableHandle) = \l  (r1 I:kotlinx.coroutines.Delay)\l  (r4 I:long A[D('timeMillis' long)])\l  (r0 I:java.lang.Runnable A[D('action' java.lang.Runnable)])\l  (r2 I:kotlin.coroutines.CoroutineContext)\l type: INTERFACE call: kotlinx.coroutines.Delay.invokeOnTimeout(long, java.lang.Runnable, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.DisposableHandle A[MD:(long, java.lang.Runnable, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.DisposableHandle (m)]\l0x002d: INVOKE  (r3 I:kotlinx.coroutines.selects.SelectBuilderImpl), (r1 I:kotlinx.coroutines.DisposableHandle) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.disposeOnSelect(kotlinx.coroutines.DisposableHandle):void A[MD:(kotlinx.coroutines.DisposableHandle):void (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0030|RETURN\l|0x0030: RETURN    (LINE:652)\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.selects.SelectBuilderImpl.onTimeout((r3 'this' I:kotlinx.coroutines.selects.SelectBuilderImpl\<R\> A[IMMUTABLE_TYPE, THIS]), (r4 I:long A[D('timeMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function1\<? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\> A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x000a \-\> B:18:0x0013, CROSS_EDGE: B:20:0x0030 \-\> B:12:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [R]\lSIGNATURE: (JLkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/coroutines\/Continuation\<\-TR;\>;+Ljava\/lang\/Object;\>;)V\lDebug Info:\l  0x0015\-0x001c: r0 '$i$f$Runnable' I\l  0x001d\-0x0030: r0 'action' Ljava\/lang\/Runnable;\l  \-1 \-0x0030: r4 'timeMillis' J\l  \-1 \-0x0030: r6 'block' Lkotlin\/jvm\/functions\/Function1;\lMETHOD_OVERRIDE: [kotlinx.coroutines.selects.SelectBuilder.onTimeout(long, kotlin.jvm.functions.Function1\<? super kotlin.coroutines.Continuation\<? super R\>, ? extends java.lang.Object\>):void]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_12;
Node_21 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
}

