digraph "CFG forkotlinx.coroutines.selects.SelectBuilderImpl.getResult()Ljava\/lang\/Object;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r4 I:kotlinx.coroutines.selects.SelectBuilderImpl) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.isSelected():boolean A[MD:():boolean (m)] (LINE:314)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0009 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0006|0x0006: INVOKE  (r4 I:kotlinx.coroutines.selects.SelectBuilderImpl) type: DIRECT call: kotlinx.coroutines.selects.SelectBuilderImpl.initCancellability():void A[MD:():void (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0009|0x0009: IGET  (r0 I:java.lang.Object) = (r4 I:kotlinx.coroutines.selects.SelectBuilderImpl) kotlinx.coroutines.selects.SelectBuilderImpl._result java.lang.Object  (LINE:315)\l0x000b: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.access$getUNDECIDED$p():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:316)\l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0028 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0011|0x0011: SGET  (r1 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.selects.SelectBuilderImpl._result$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:317)\l0x0013: INVOKE  (r2 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.access$getUNDECIDED$p():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0017: INVOKE  (r3 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x001b: INVOKE  (r1 I:boolean) = \l  (r1 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r4 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x001f|0x001f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0026 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0021|0x0021: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0025|RETURN\l|0x0025: RETURN  (r1 I:java.lang.Object) \l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0026|0x0026: IGET  (r0 I:java.lang.Object A[D('result' java.lang.Object)]) = (r4 I:kotlinx.coroutines.selects.SelectBuilderImpl) kotlinx.coroutines.selects.SelectBuilderImpl._result java.lang.Object  (LINE:318)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0028|0x0029: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.access$getRESUMED$p():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:321)\l}"];
Node_34 [shape=record,label="{34\:\ 0x002d|0x002d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x003a \l}"];
Node_35 [shape=record,label="{35\:\ 0x002f|0x002f: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) kotlinx.coroutines.CompletedExceptionally  (LINE:322)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0031|0x0031: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0034 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0033|RETURN\l|0x0033: RETURN  (r0 I:java.lang.Object A[D('result' java.lang.Object)])  (LINE:323)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0034|0x0034: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)])  (LINE:322)\l0x0035: CHECK_CAST (r1 I:kotlinx.coroutines.CompletedExceptionally) = (kotlinx.coroutines.CompletedExceptionally) (r1 I:??[OBJECT, ARRAY]) \l0x0037: IGET  (r1 I:java.lang.Throwable) = (r1 I:kotlinx.coroutines.CompletedExceptionally) kotlinx.coroutines.CompletedExceptionally.cause java.lang.Throwable \l}"];
Node_39 [shape=record,label="{39\:\ 0x0039|0x0039: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_40 [shape=record,label="{40\:\ 0x003a|0x003a: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:321)\l0x003c: CONST_STR  (r2 I:java.lang.String) =  \"Already resumed\" \l0x003e: INVOKE  (r1 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0041|0x0041: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.selects.SelectBuilderImpl.getResult((r4 'this' I:kotlinx.coroutines.selects.SelectBuilderImpl\<R\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x0033 \-\> B:22:?, CROSS_EDGE: B:39:0x0039 \-\> B:22:?, CROSS_EDGE: B:41:0x0041 \-\> B:22:?, CROSS_EDGE: B:27:0x000f \-\> B:33:0x0028, CROSS_EDGE: B:24:0x0004 \-\> B:26:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0041: r0 'result' Ljava\/lang\/Object;\lTYPE_VARS: [R]\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_33;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_22;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_40;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_22;
Node_38 -> Node_39;
Node_39 -> Node_22;
Node_40 -> Node_41;
Node_41 -> Node_22;
}

