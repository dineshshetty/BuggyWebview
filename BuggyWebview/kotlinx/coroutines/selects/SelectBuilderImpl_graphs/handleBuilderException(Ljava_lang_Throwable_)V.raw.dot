digraph "CFG forkotlinx.coroutines.selects.SelectBuilderImpl.handleBuilderException(Ljava\/lang\/Throwable;)V" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r4 I:kotlinx.coroutines.selects.SelectBuilderImpl) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.trySelect():boolean A[MD:():boolean (m)] (LINE:346)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0017 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|0x0006: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY])  (LINE:347)\l0x0007: CHECK_CAST (r0 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r0 I:??[OBJECT, ARRAY]) \l0x0009: SGET  (r1 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion \l0x000b: INVOKE  (r1 I:java.lang.Object) = (r5 I:java.lang.Throwable A[D('e' java.lang.Throwable)]) type: STATIC call: kotlin.ResultKt.createFailure(java.lang.Throwable):java.lang.Object A[MD:(java.lang.Throwable):java.lang.Object (m)]\l0x000f: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[MD:\<T\>:(java.lang.Object):java.lang.Object (m)]\l0x0013: INVOKE  (r0 I:kotlin.coroutines.Continuation), (r1 I:java.lang.Object) type: INTERFACE call: kotlin.coroutines.Continuation.resumeWith(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|0x004b: RETURN   A[SYNTHETIC] (LINE:360)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|0x0017: INSTANCE_OF  (r0 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('e' java.lang.Throwable)]) java.util.concurrent.CancellationException  (LINE:348)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0019|0x0019: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:? \l}"];
Node_30 [shape=record,label="{30\:\ 0x001b|0x001b: INVOKE  (r0 I:java.lang.Object) = (r4 I:kotlinx.coroutines.selects.SelectBuilderImpl) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.getResult():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:355)\l0x001f: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) kotlinx.coroutines.CompletedExceptionally  (LINE:356)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|0x0021: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0044 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|0x0023: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) \l0x0024: CHECK_CAST (r1 I:kotlinx.coroutines.CompletedExceptionally) = (kotlinx.coroutines.CompletedExceptionally) (r1 I:??[OBJECT, ARRAY]) \l0x0026: IGET  (r1 I:java.lang.Throwable) = (r1 I:kotlinx.coroutines.CompletedExceptionally) kotlinx.coroutines.CompletedExceptionally.cause java.lang.Throwable \l0x0028: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0029: INVOKE  (r3 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getRECOVER_STACK_TRACES():boolean A[MD:():boolean (m)] (LINE:703)\l}"];
Node_33 [shape=record,label="{33\:\ 0x002d|0x002d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0030 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0030|0x0030: INVOKE  (r3 I:java.lang.Throwable) = (r1 I:java.lang.Throwable A[D('exception$iv' java.lang.Throwable)]) type: STATIC call: kotlinx.coroutines.internal.StackTraceRecoveryKt.unwrapImpl(java.lang.Throwable):java.lang.Throwable A[MD:\<E extends java.lang.Throwable\>:(E extends java.lang.Throwable):E extends java.lang.Throwable (m)]\l0x0034: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('exception$iv' java.lang.Throwable)]) = (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0035|0x0035: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$f$unwrap' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:356)\l0x0036: INVOKE  (r3 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getRECOVER_STACK_TRACES():boolean A[MD:():boolean (m)] (LINE:703)\l}"];
Node_37 [shape=record,label="{37\:\ 0x003a|0x003a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x003e \l}"];
Node_38 [shape=record,label="{38\:\ 0x003c|0x003c: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('e' java.lang.Throwable)]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0042|0x0042: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:?  (LINE:356)\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|0x004b: RETURN   A[SYNTHETIC] (LINE:360)\l}"];
Node_39 [shape=record,label="{39\:\ 0x003e|0x003e: INVOKE  (r3 I:java.lang.Throwable) = (r5 I:java.lang.Throwable A[D('e' java.lang.Throwable)]) type: STATIC call: kotlinx.coroutines.internal.StackTraceRecoveryKt.unwrapImpl(java.lang.Throwable):java.lang.Throwable A[MD:\<E extends java.lang.Throwable\>:(E extends java.lang.Throwable):E extends java.lang.Throwable (m)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0044|0x0044: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext) = (r4 I:kotlinx.coroutines.selects.SelectBuilderImpl) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)] (LINE:357)\l0x0048: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext), (r5 I:java.lang.Throwable A[D('e' java.lang.Throwable)]) type: STATIC call: kotlinx.coroutines.CoroutineExceptionHandlerKt.handleCoroutineException(kotlin.coroutines.CoroutineContext, java.lang.Throwable):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Throwable):void (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x004b|RETURN\lORIG_RETURN\l|0x004b: RETURN    (LINE:360)\l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lRETURN\l|0x004b: RETURN   A[SYNTHETIC] (LINE:360)\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.selects.SelectBuilderImpl.handleBuilderException((r4 'this' I:kotlinx.coroutines.selects.SelectBuilderImpl\<R\> A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Throwable A[D('e' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:41:0x0044 \-\> B:42:0x004b, CROSS_EDGE: B:40:0x0042 \-\> B:42:0x004b, CROSS_EDGE: B:39:0x003e \-\> B:40:0x0042, CROSS_EDGE: B:33:0x002d \-\> B:36:0x0035, CROSS_EDGE: B:31:0x0021 \-\> B:41:0x0044, CROSS_EDGE: B:29:0x0019 \-\> B:42:0x004b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0028\-0x0035: r1 'exception$iv' Ljava\/lang\/Throwable;\l  0x0029\-0x0035: r2 '$i$f$unwrap' I\l  0x0036\-0x0042: r2 '$i$f$unwrap' I\l  0x001f\-0x004b: r0 'result' Ljava\/lang\/Object;\l  \-1 \-0x004b: r5 'e' Ljava\/lang\/Throwable;\lTYPE_VARS: [R]\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_43;
Node_43 -> Node_24;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_44;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_41;
Node_32 -> Node_33;
Node_33 -> Node_35;
Node_33 -> Node_36[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_45;
Node_45 -> Node_24;
Node_39 -> Node_40;
Node_41 -> Node_42;
Node_42 -> Node_24;
Node_44 -> Node_24;
}

