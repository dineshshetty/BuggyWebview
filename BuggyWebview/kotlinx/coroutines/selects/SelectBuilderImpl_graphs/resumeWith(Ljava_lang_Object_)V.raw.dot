digraph "CFG forkotlinx.coroutines.selects.SelectBuilderImpl.resumeWith(Ljava\/lang\/Object;)V" {
Node_45 [shape=record,label="{45\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY])  (LINE:296)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0002: INVOKE  (r2 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:662)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0006|0x0006: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0016 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0008|0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:663)\l0x0009: INVOKE  (r2 I:boolean A[D('$i$a$\-assert\-SelectBuilderImpl$doResume$1$iv' int)]) = (r0 I:kotlinx.coroutines.selects.SelectBuilderImpl A[D('this_$iv' kotlinx.coroutines.selects.SelectBuilderImpl)]) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.isSelected():boolean A[MD:():boolean (m)] (LINE:662)\l}"];
Node_50 [shape=record,label="{50\:\ 0x000d|0x000d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$i$a$\-assert\-SelectBuilderImpl$doResume$1$iv' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0010 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0010|0x0010: NEW_INSTANCE  (r2 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0012: INVOKE  (r2 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0015|0x0015: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_46 [shape=record,label="{46\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_54 [shape=record,label="{54\:\ 0x0016|0x0016: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('this_$iv' kotlinx.coroutines.selects.SelectBuilderImpl)])  (LINE:664)\l0x0017: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x0018|LOOP_START\lLOOP:0: B:55:0x0018\-\>B:85:0x0018\l|0x0019: IGET  (r4 I:java.lang.Object) = \l  (r2 I:kotlinx.coroutines.selects.SelectBuilderImpl A[D('$this$loop$iv$iv' kotlinx.coroutines.selects.SelectBuilderImpl)])\l kotlinx.coroutines.selects.SelectBuilderImpl._result java.lang.Object  (LINE:666)\l0x001b: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001d: INVOKE  (r6 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.access$getUNDECIDED$p():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:668)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0021|0x0021: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result$iv' java.lang.Object)]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x0037 \l}"];
Node_80 [shape=record,label="{80\:\ 0x0037|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x0037|0x0037: INVOKE  (r6 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:672)\l}"];
Node_61 [shape=record,label="{61\:\ 0x003b|0x003b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result$iv' java.lang.Object)]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:0x008c \l}"];
Node_62 [shape=record,label="{62\:\ 0x003d|0x003d: SGET  (r6 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.selects.SelectBuilderImpl._result$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater \l0x003f: INVOKE  (r7 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0043: INVOKE  (r8 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.access$getRESUMED$p():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0047: INVOKE  (r6 I:boolean) = \l  (r6 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r0 I:java.lang.Object A[D('this_$iv' kotlinx.coroutines.selects.SelectBuilderImpl)])\l  (r7 I:java.lang.Object)\l  (r8 I:java.lang.Object)\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_63 [shape=record,label="{63\:\ 0x004b|0x004b: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:86:0x0018 \l}"];
Node_83 [shape=record,label="{83\:\ 0x004d|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x004d|0x004d: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:673)\l0x004e: INVOKE  (r7 I:boolean) = (r13 I:java.lang.Object A[D('result' java.lang.Object)]) type: STATIC call: kotlin.Result.isFailure\-impl(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)] (LINE:297)\l}"];
Node_65 [shape=record,label="{65\:\ 0x0052|0x0052: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x0082 \l}"];
Node_66 [shape=record,label="{66\:\ 0x0054|0x0054: IGET  (r7 I:kotlin.coroutines.Continuation\<R\>) = (r12 I:kotlinx.coroutines.selects.SelectBuilderImpl) kotlinx.coroutines.selects.SelectBuilderImpl.uCont kotlin.coroutines.Continuation  (LINE:298)\l0x0056: INVOKE  (r8 I:java.lang.Throwable) = (r13 I:java.lang.Object A[D('result' java.lang.Object)]) type: STATIC call: kotlin.Result.exceptionOrNull\-impl(java.lang.Object):java.lang.Throwable A[MD:(java.lang.Object):java.lang.Throwable (m)]\l0x005a: INVOKE  (r8 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x005d: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x005e: SGET  (r10 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion  (LINE:674)\l0x0060: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0061: INVOKE  (r11 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getRECOVER_STACK_TRACES():boolean A[MD:():boolean (m)] (LINE:675)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0065|0x0065: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0074 \l}"];
Node_68 [shape=record,label="{68\:\ 0x0067|0x0067: INSTANCE_OF  (r11 I:boolean) = (r7 I:??[OBJECT, ARRAY] A[D('$this$resumeWithStackTrace$iv' kotlin.coroutines.Continuation)]) kotlin.coroutines.jvm.internal.CoroutineStackFrame \l}"];
Node_69 [shape=record,label="{69\:\ 0x0069|0x0069: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x006c \l}"];
Node_71 [shape=record,label="{71\:\ 0x006c|0x006c: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$resumeWithStackTrace$iv' kotlin.coroutines.Continuation)])  (LINE:676)\l0x006d: CHECK_CAST (r11 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame) = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) (r11 I:??[OBJECT, ARRAY]) \l0x006f: INVOKE  (r11 I:java.lang.Throwable) = \l  (r8 I:java.lang.Throwable A[D('exception$iv' java.lang.Throwable)])\l  (r11 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame)\l type: STATIC call: kotlinx.coroutines.internal.StackTraceRecoveryKt.access$recoverFromStackFrame(java.lang.Throwable, kotlin.coroutines.jvm.internal.CoroutineStackFrame):java.lang.Throwable A[MD:(java.lang.Throwable, kotlin.coroutines.jvm.internal.CoroutineStackFrame):java.lang.Throwable (m)]\l}"];
Node_73 [shape=record,label="{73\:\ 0x0075|0x0075: INVOKE  (r10 I:java.lang.Object) = (r11 I:java.lang.Throwable) type: STATIC call: kotlin.ResultKt.createFailure(java.lang.Throwable):java.lang.Object A[MD:(java.lang.Throwable):java.lang.Object (m)] (LINE:674)\l0x0079: INVOKE  (r10 I:java.lang.Object) = (r10 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[MD:\<T\>:(java.lang.Object):java.lang.Object (m)]\l0x007d: INVOKE  \l  (r7 I:kotlin.coroutines.Continuation A[D('$this$resumeWithStackTrace$iv' kotlin.coroutines.Continuation)])\l  (r10 I:java.lang.Object)\l type: INTERFACE call: kotlin.coroutines.Continuation.resumeWith(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_88 [shape=record,label="{88\:\ ?|SYNTHETIC\lRETURN\l|0x0089: RETURN   A[SYNTHETIC] (LINE:303)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0074|0x0074: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('exception$iv' java.lang.Throwable)])  (LINE:675)\l}"];
Node_74 [shape=record,label="{74\:\ 0x0082|0x0082: IGET  (r7 I:kotlin.coroutines.Continuation\<R\>) = (r12 I:kotlinx.coroutines.selects.SelectBuilderImpl) kotlinx.coroutines.selects.SelectBuilderImpl.uCont kotlin.coroutines.Continuation  (LINE:300)\l0x0084: INVOKE  (r7 I:kotlin.coroutines.Continuation), (r13 I:java.lang.Object A[D('result' java.lang.Object)]) type: INTERFACE call: kotlin.coroutines.Continuation.resumeWith(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_76 [shape=record,label="{76\:\ 0x0089|RETURN\lORIG_RETURN\l|0x0089: RETURN    (LINE:303)\l}"];
Node_86 [shape=record,label="{86\:\ 0x0018|SYNTHETIC\l}"];
Node_85 [shape=record,label="{85\:\ 0x0018|LOOP_END\lSYNTHETIC\lLOOP:0: B:55:0x0018\-\>B:85:0x0018\l}"];
Node_84 [shape=record,label="{84\:\ 0x008c|SYNTHETIC\l}"];
Node_78 [shape=record,label="{78\:\ 0x008c|0x008c: NEW_INSTANCE  (r6 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:680)\l0x008e: CONST_STR  (r7 I:java.lang.String) =  \"Already resumed\" \l0x0090: INVOKE  (r6 I:java.lang.IllegalStateException), (r7 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_79 [shape=record,label="{79\:\ 0x0093|0x0093: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_82 [shape=record,label="{82\:\ 0x0023|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0023|0x0023: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:669)\l0x0024: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:296)\l0x0025: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0026: INVOKE  (r6 I:java.lang.Object A[D('$i$a$\-doResume\-SelectBuilderImpl$resumeWith$1' int)]) = \l  (r13 I:java.lang.Object A[D('result' java.lang.Object)])\l  (r8 I:kotlin.jvm.functions.Function1)\l  (r7 I:int)\l  (r8 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.CompletionStateKt.toState$default(java.lang.Object, kotlin.jvm.functions.Function1, int, java.lang.Object):java.lang.Object A[MD:(java.lang.Object, kotlin.jvm.functions.Function1, int, java.lang.Object):java.lang.Object (m)]\l0x002a: SGET  (r7 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.selects.SelectBuilderImpl._result$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:670)\l0x002c: INVOKE  (r8 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.access$getUNDECIDED$p():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0030: INVOKE  (r7 I:boolean) = \l  (r7 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r0 I:java.lang.Object A[D('this_$iv' kotlinx.coroutines.selects.SelectBuilderImpl)])\l  (r8 I:java.lang.Object)\l  (r6 I:java.lang.Object A[D('update$iv' java.lang.Object)])\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0034|0x0034: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x0018 \l}"];
Node_81 [shape=record,label="{81\:\ 0x0089|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ ?|SYNTHETIC\lRETURN\l|0x0089: RETURN   A[SYNTHETIC] (LINE:303)\l}"];
Node_87 [shape=record,label="{87\:\ 0x0018|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.selects.SelectBuilderImpl.resumeWith((r12 'this' I:kotlinx.coroutines.selects.SelectBuilderImpl\<R\> A[IMMUTABLE_TYPE, THIS]), (r13 I:java.lang.Object A[D('result' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:76:0x0089 \-\> B:46:?, BACK_EDGE: B:58:0x0034 \-\> B:55:0x0018, CROSS_EDGE: B:73:0x0075 \-\> B:76:0x0089, CROSS_EDGE: B:72:0x0074 \-\> B:73:0x0075, CROSS_EDGE: B:67:0x0065 \-\> B:72:0x0074, CROSS_EDGE: B:74:0x0082 \-\> B:76:0x0089, BACK_EDGE: B:63:0x004b \-\> B:55:0x0018, CROSS_EDGE: B:79:0x0093 \-\> B:46:?, CROSS_EDGE: B:48:0x0006 \-\> B:54:0x0016\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x000d: r2 '$i$a$\-assert\-SelectBuilderImpl$doResume$1$iv' I\l  0x0024\-0x002a: r6 '$i$a$\-doResume\-SelectBuilderImpl$resumeWith$1' I\l  0x002a\-0x0037: r6 'update$iv' Ljava\/lang\/Object;\l  0x0061\-0x0075: r10 '$i$f$recoverStackTrace' I\l  0x0056\-0x0081: r7 '$this$resumeWithStackTrace$iv' Lkotlin\/coroutines\/Continuation;\l  0x005d\-0x0081: r8 'exception$iv' Ljava\/lang\/Throwable;\l  0x005e\-0x0081: r9 '$i$f$resumeWithStackTrace' I\l  0x004e\-0x0088: r6 '$i$a$\-doResume\-SelectBuilderImpl$resumeWith$2' I\l  0x0001\-0x0089: r0 'this_$iv' Lkotlinx\/coroutines\/selects\/SelectBuilderImpl;\l  0x0002\-0x0089: r1 '$i$f$doResume' I\l  0x0017\-0x0089: r2 '$this$loop$iv$iv' Lkotlinx\/coroutines\/selects\/SelectBuilderImpl;\l  0x0018\-0x0089: r3 '$i$f$loop' I\l  0x001b\-0x0089: r4 'result$iv' Ljava\/lang\/Object;\l  0x001c\-0x0089: r5 '$i$a$\-loop\-SelectBuilderImpl$doResume$2$iv' I\l  0x008a\-0x008b: r4 'result$iv' Ljava\/lang\/Object;\l  0x008a\-0x008b: r5 '$i$a$\-loop\-SelectBuilderImpl$doResume$2$iv' I\l  0x008a\-0x0093: r0 'this_$iv' Lkotlinx\/coroutines\/selects\/SelectBuilderImpl;\l  0x008a\-0x0093: r1 '$i$f$doResume' I\l  0x008a\-0x0093: r2 '$this$loop$iv$iv' Lkotlinx\/coroutines\/selects\/SelectBuilderImpl;\l  0x008a\-0x0093: r3 '$i$f$loop' I\l  0x008c\-0x0093: r4 'result$iv' Ljava\/lang\/Object;\l  0x008c\-0x0093: r5 '$i$a$\-loop\-SelectBuilderImpl$doResume$2$iv' I\l  \-1 \-0x0093: r13 'result' Ljava\/lang\/Object;\lTYPE_VARS: [R]\lMETHOD_OVERRIDE: [kotlin.coroutines.Continuation.resumeWith(java.lang.Object):void]\l}"];
MethodNode -> Node_45;Node_45 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_54;
Node_49 -> Node_50;
Node_50 -> Node_52;
Node_50 -> Node_54[style=dashed];
Node_52 -> Node_53;
Node_53 -> Node_46;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_80;
Node_56 -> Node_82[style=dashed];
Node_80 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_84;
Node_62 -> Node_63;
Node_63 -> Node_83[style=dashed];
Node_63 -> Node_86;
Node_83 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_74;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_72;
Node_68 -> Node_69;
Node_69 -> Node_71;
Node_69 -> Node_72[style=dashed];
Node_71 -> Node_73;
Node_73 -> Node_88;
Node_88 -> Node_46;
Node_72 -> Node_73;
Node_74 -> Node_76;
Node_76 -> Node_46;
Node_86 -> Node_85;
Node_85 -> Node_55;
Node_84 -> Node_78;
Node_78 -> Node_79;
Node_79 -> Node_46;
Node_82 -> Node_57;
Node_57 -> Node_58;
Node_58 -> Node_81[style=dashed];
Node_58 -> Node_87;
Node_81 -> Node_89;
Node_89 -> Node_46;
Node_87 -> Node_85;
}

