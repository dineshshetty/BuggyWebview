digraph "CFG forkotlinx.coroutines.selects.SelectBuilderImpl.isSelected()Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY])  (LINE:362)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|LOOP_START\lLOOP:0: B:17:0x0002\-\>B:23:0x0013\l|0x0003: IGET  (r2 I:java.lang.Object) = (r0 I:kotlinx.coroutines.selects.SelectBuilderImpl A[D('$this$loop$iv' kotlinx.coroutines.selects.SelectBuilderImpl)]) kotlinx.coroutines.selects.SelectBuilderImpl._state java.lang.Object  (LINE:705)\l0x0005: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: INVOKE  (r4 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.getNOT_SELECTED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:364)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('state' java.lang.Object)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x000f \l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|0x000f: INSTANCE_OF  (r4 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.internal.OpDescriptor  (LINE:365)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001b \l}"];
Node_23 [shape=record,label="{23\:\ 0x0013|LOOP_END\lLOOP:0: B:17:0x0002\-\>B:23:0x0013\l|0x0013: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) \l0x0014: CHECK_CAST (r4 I:kotlinx.coroutines.internal.OpDescriptor) = (kotlinx.coroutines.internal.OpDescriptor) (r4 I:??[OBJECT, ARRAY]) \l0x0016: INVOKE  (r4 I:kotlinx.coroutines.internal.OpDescriptor), (r5 I:java.lang.Object) type: VIRTUAL call: kotlinx.coroutines.internal.OpDescriptor.perform(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):java.lang.Object (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x001b|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x001b|RETURN\l|0x001b: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:366)\l0x001c: RETURN  (r4 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x000d|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|RETURN\l|0x000d: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: RETURN  (r4 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.selects.SelectBuilderImpl.isSelected((r5 'this' I:kotlinx.coroutines.selects.SelectBuilderImpl\<R\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x0013 \-\> B:17:0x0002, CROSS_EDGE: B:25:0x001c \-\> B:15:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x001a: r2 'state' Ljava\/lang\/Object;\l  0x0006\-0x001a: r3 '$i$a$\-loop\-SelectBuilderImpl$isSelected$1' I\l  0x0001\-0x001c: r0 '$this$loop$iv' Lkotlinx\/coroutines\/selects\/SelectBuilderImpl;\l  0x0002\-0x001c: r1 '$i$f$loop' I\l  0x001b\-0x001c: r2 'state' Ljava\/lang\/Object;\l  0x001b\-0x001c: r3 '$i$a$\-loop\-SelectBuilderImpl$isSelected$1' I\lTYPE_VARS: [R]\lMETHOD_OVERRIDE: [kotlinx.coroutines.selects.SelectInstance.isSelected():boolean]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_21;
Node_18 -> Node_27[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_17;
Node_26 -> Node_24;
Node_24 -> Node_15;
Node_27 -> Node_19;
Node_19 -> Node_15;
}

