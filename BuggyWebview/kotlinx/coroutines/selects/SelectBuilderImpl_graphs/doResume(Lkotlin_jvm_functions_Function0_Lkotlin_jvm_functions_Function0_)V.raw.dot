digraph "CFG forkotlinx.coroutines.selects.SelectBuilderImpl.doResume(Lkotlin\/jvm\/functions\/Function0;Lkotlin\/jvm\/functions\/Function0;)V" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: INVOKE  (r1 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:278)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0005|0x0005: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0015 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0007|0x0007: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:659)\l0x0008: INVOKE  (r1 I:boolean A[D('$i$a$\-assert\-SelectBuilderImpl$doResume$1' int)]) = (r8 I:kotlinx.coroutines.selects.SelectBuilderImpl) type: VIRTUAL call: kotlinx.coroutines.selects.SelectBuilderImpl.isSelected():boolean A[MD:():boolean (m)] (LINE:278)\l}"];
Node_37 [shape=record,label="{37\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$i$a$\-assert\-SelectBuilderImpl$doResume$1' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x000f \l}"];
Node_39 [shape=record,label="{39\:\ 0x000f|0x000f: NEW_INSTANCE  (r1 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0011: INVOKE  (r1 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0014|0x0014: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x0015|0x0015: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY])  (LINE:279)\l0x0016: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0017|LOOP_START\lLOOP:0: B:42:0x0017\-\>B:61:0x0017\l|0x0018: IGET  (r3 I:java.lang.Object) = (r1 I:kotlinx.coroutines.selects.SelectBuilderImpl A[D('$this$loop$iv' kotlinx.coroutines.selects.SelectBuilderImpl)]) kotlinx.coroutines.selects.SelectBuilderImpl._result java.lang.Object  (LINE:661)\l0x001a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001c: INVOKE  (r5 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.access$getUNDECIDED$p():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:281)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0020|0x0020: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0033 \l}"];
Node_57 [shape=record,label="{57\:\ 0x0033|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0033|0x0033: INVOKE  (r5 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:285)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0037|0x0037: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x004f \l}"];
Node_49 [shape=record,label="{49\:\ 0x0039|0x0039: SGET  (r5 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.selects.SelectBuilderImpl._result$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater \l0x003b: INVOKE  (r6 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x003f: INVOKE  (r7 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.access$getRESUMED$p():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0043: INVOKE  (r5 I:boolean) = \l  (r5 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r8 I:java.lang.Object)\l  (r6 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_50 [shape=record,label="{50\:\ 0x0047|0x0047: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x0017 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0049|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0049|0x0049: INVOKE  (r10 I:kotlin.jvm.functions.Function0 A[D('block' kotlin.jvm.functions.Function0)]) type: INTERFACE call: kotlin.jvm.functions.Function0.invoke():java.lang.Object A[MD:():R (m)] (LINE:286)\l}"];
Node_52 [shape=record,label="{52\:\ 0x004c|RETURN\l|0x004c: RETURN    (LINE:287)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0017|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0017|LOOP_END\lSYNTHETIC\lLOOP:0: B:42:0x0017\-\>B:61:0x0017\l}"];
Node_60 [shape=record,label="{60\:\ 0x004f|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x004f|0x004f: NEW_INSTANCE  (r5 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:289)\l0x0051: CONST_STR  (r6 I:java.lang.String) =  \"Already resumed\" \l0x0053: INVOKE  (r5 I:java.lang.IllegalStateException), (r6 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x0056|0x0056: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_58 [shape=record,label="{58\:\ 0x0022|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0022|0x0022: INVOKE  (r5 I:java.lang.Object) = (r9 I:kotlin.jvm.functions.Function0 A[D('value' kotlin.jvm.functions.Function0)]) type: INTERFACE call: kotlin.jvm.functions.Function0.invoke():java.lang.Object A[MD:():R (m)] (LINE:282)\l0x0026: SGET  (r6 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.selects.SelectBuilderImpl._result$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:283)\l0x0028: INVOKE  (r7 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.selects.SelectKt.access$getUNDECIDED$p():java.lang.Object A[MD:():java.lang.Object (m)]\l0x002c: INVOKE  (r6 I:boolean) = \l  (r6 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r8 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l  (r5 I:java.lang.Object A[D('update' java.lang.Object)])\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0030|0x0030: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x0017 \l}"];
Node_56 [shape=record,label="{56\:\ 0x0032|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0032|RETURN\l|0x0032: RETURN   \l}"];
Node_63 [shape=record,label="{63\:\ 0x0017|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final void kotlinx.coroutines.selects.SelectBuilderImpl.doResume((r8 'this' I:kotlinx.coroutines.selects.SelectBuilderImpl\<R\> A[IMMUTABLE_TYPE, THIS]), (r9 I:kotlin.jvm.functions.Function0\<? extends java.lang.Object\> A[D('value' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function0\<kotlin.Unit\> A[D('block' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:46:0x0032 \-\> B:33:?, BACK_EDGE: B:45:0x0030 \-\> B:42:0x0017, CROSS_EDGE: B:52:0x004c \-\> B:33:?, BACK_EDGE: B:50:0x0047 \-\> B:42:0x0017, CROSS_EDGE: B:55:0x0056 \-\> B:33:?, CROSS_EDGE: B:35:0x0005 \-\> B:41:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x000c: r1 '$i$a$\-assert\-SelectBuilderImpl$doResume$1' I\l  0x0026\-0x0033: r5 'update' Ljava\/lang\/Object;\l  0x001a\-0x004e: r3 'result' Ljava\/lang\/Object;\l  0x001b\-0x004e: r4 '$i$a$\-loop\-SelectBuilderImpl$doResume$2' I\l  0x0001\-0x0056: r0 '$i$f$doResume' I\l  0x0016\-0x0056: r1 '$this$loop$iv' Lkotlinx\/coroutines\/selects\/SelectBuilderImpl;\l  0x0017\-0x0056: r2 '$i$f$loop' I\l  0x004f\-0x0056: r3 'result' Ljava\/lang\/Object;\l  0x004f\-0x0056: r4 '$i$a$\-loop\-SelectBuilderImpl$doResume$2' I\l  \-1 \-0x0056: r9 'value' Lkotlin\/jvm\/functions\/Function0;\l  \-1 \-0x0056: r10 'block' Lkotlin\/jvm\/functions\/Function0;\lTYPE_VARS: [R]\lSIGNATURE: (Lkotlin\/jvm\/functions\/Function0\<+Ljava\/lang\/Object;\>;Lkotlin\/jvm\/functions\/Function0\<Lkotlin\/Unit;\>;)V\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_41;
Node_36 -> Node_37;
Node_37 -> Node_39;
Node_37 -> Node_41[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_33;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_57;
Node_43 -> Node_58[style=dashed];
Node_57 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_60;
Node_49 -> Node_50;
Node_50 -> Node_59[style=dashed];
Node_50 -> Node_62;
Node_59 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_33;
Node_62 -> Node_61;
Node_61 -> Node_42;
Node_60 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_33;
Node_58 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_56[style=dashed];
Node_45 -> Node_63;
Node_56 -> Node_46;
Node_46 -> Node_33;
Node_63 -> Node_61;
}

