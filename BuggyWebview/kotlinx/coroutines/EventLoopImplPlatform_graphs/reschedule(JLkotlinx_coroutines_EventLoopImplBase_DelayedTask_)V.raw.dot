digraph "CFG forkotlinx.coroutines.EventLoopImplPlatform.reschedule(JLkotlinx\/coroutines\/EventLoopImplBase$DelayedTask;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.DefaultExecutor) =  kotlinx.coroutines.DefaultExecutor.INSTANCE kotlinx.coroutines.DefaultExecutor  (LINE:17)\l0x0002: INVOKE  \l  (r0 I:kotlinx.coroutines.DefaultExecutor)\l  (r2 I:long A[D('now' long)])\l  (r4 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask A[D('delayedTask' kotlinx.coroutines.EventLoopImplBase$DelayedTask)])\l type: VIRTUAL call: kotlinx.coroutines.DefaultExecutor.schedule(long, kotlinx.coroutines.EventLoopImplBase$DelayedTask):void A[MD:(long, kotlinx.coroutines.EventLoopImplBase$DelayedTask):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|RETURN\l|0x0005: RETURN    (LINE:18)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void kotlinx.coroutines.EventLoopImplPlatform.reschedule((r1 'this' I:kotlinx.coroutines.EventLoopImplPlatform A[IMMUTABLE_TYPE, THIS]), (r2 I:long A[D('now' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask A[D('delayedTask' kotlinx.coroutines.EventLoopImplBase$DelayedTask), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0005: r2 'now' J\l  \-1 \-0x0005: r4 'delayedTask' Lkotlinx\/coroutines\/EventLoopImplBase$DelayedTask;\lMETHOD_OVERRIDE: [kotlinx.coroutines.EventLoopImplPlatform.reschedule(long, kotlinx.coroutines.EventLoopImplBase$DelayedTask):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

