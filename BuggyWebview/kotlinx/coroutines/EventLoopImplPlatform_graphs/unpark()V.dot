digraph "CFG forkotlinx.coroutines.EventLoopImplPlatform.unpark()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|java.lang.Thread r0 = getThread()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if (java.lang.Thread.currentThread() == r0) goto L12\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|kotlinx.coroutines.AbstractTimeSource r1 = kotlinx.coroutines.AbstractTimeSourceKt.getTimeSource()\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r1 != null) goto L11\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|r1 = null\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|PHI: r1 \l  PHI: (r1v3 kotlin.Unit) = (r1v2 kotlin.Unit), (r1v4 kotlin.Unit) binds: [B:7:0x0012, B:6:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != null) goto L10\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|java.util.concurrent.locks.LockSupport.unpark(r0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|r1.unpark(r0)\lkotlin.Unit r1 = kotlin.Unit.INSTANCE\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{protected final void kotlinx.coroutines.EventLoopImplPlatform.unpark((r2v0 'this' kotlinx.coroutines.EventLoopImplPlatform A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0017 \-\> B:10:0x001c, CROSS_EDGE: B:7:0x0012 \-\> B:8:0x0017, CROSS_EDGE: B:3:0x0008 \-\> B:10:0x001c\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_12 -> Node_1;
Node_7 -> Node_8;
Node_11 -> Node_1;
}

