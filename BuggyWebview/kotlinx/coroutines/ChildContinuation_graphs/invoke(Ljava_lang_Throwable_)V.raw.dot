digraph "CFG forkotlinx.coroutines.ChildContinuation.invoke(Ljava\/lang\/Throwable;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.CancellableContinuationImpl\<?\>) = (r2 I:kotlinx.coroutines.ChildContinuation) kotlinx.coroutines.ChildContinuation.child kotlinx.coroutines.CancellableContinuationImpl  (LINE:1474)\l0x0002: INVOKE  (r1 I:kotlinx.coroutines.JobSupport) = (r2 I:kotlinx.coroutines.ChildContinuation) type: VIRTUAL call: kotlinx.coroutines.ChildContinuation.getJob():kotlinx.coroutines.JobSupport A[MD:():kotlinx.coroutines.JobSupport (m)]\l0x0006: CHECK_CAST (r1 I:kotlinx.coroutines.Job) = (kotlinx.coroutines.Job) (r1 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  (r1 I:java.lang.Throwable) = (r0 I:kotlinx.coroutines.CancellableContinuationImpl), (r1 I:kotlinx.coroutines.Job) type: VIRTUAL call: kotlinx.coroutines.CancellableContinuationImpl.getContinuationCancellationCause(kotlinx.coroutines.Job):java.lang.Throwable A[MD:(kotlinx.coroutines.Job):java.lang.Throwable (m)]\l0x000c: INVOKE  (r0 I:kotlinx.coroutines.CancellableContinuationImpl), (r1 I:java.lang.Throwable) type: VIRTUAL call: kotlinx.coroutines.CancellableContinuationImpl.parentCancelled$kotlinx_coroutines_core(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|0x000f: RETURN    (LINE:1475)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.ChildContinuation.invoke((r2 'this' I:kotlinx.coroutines.ChildContinuation A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lMETHOD_OVERRIDE: [kotlinx.coroutines.CompletionHandlerBase.invoke(java.lang.Throwable):void]\lDebug Info:\l  \-1 \-0x000f: r3 'cause' Ljava\/lang\/Throwable;\lBRIDGED_BY: kotlinx.coroutines.ChildContinuation.invoke(java.lang.Throwable):kotlin.Unit\lRENAME_REASON:avoid collision after fix types in other method\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

