digraph "CFG forkotlinx.coroutines.ChildContinuation.invoke(Ljava\/lang\/Throwable;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlinx.coroutines.CancellableContinuationImpl\<?\> r0 = r2.child\lr0.parentCancelled$kotlinx_coroutines_core(r0.getContinuationCancellationCause(getJob()))\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.ChildContinuation.invoke((r2v0 'this' kotlinx.coroutines.ChildContinuation A[IMMUTABLE_TYPE, THIS]), (r3v0 'cause' java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lMETHOD_OVERRIDE: [kotlinx.coroutines.CompletionHandlerBase.invoke(java.lang.Throwable):void]\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lBRIDGED_BY: kotlinx.coroutines.ChildContinuation.invoke(java.lang.Throwable):kotlin.Unit\lRENAME_REASON:avoid collision after fix types in other method\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

