digraph "CFG forkotlinx.coroutines.SchedulerTaskKt.getTaskContext(Lkotlinx\/coroutines\/scheduling\/Task;)Lkotlinx\/coroutines\/scheduling\/TaskContext;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.scheduling.TaskContext) = (r1 I:kotlinx.coroutines.scheduling.Task A[D('$this$taskContext' kotlinx.coroutines.scheduling.Task)]) kotlinx.coroutines.scheduling.Task.taskContext kotlinx.coroutines.scheduling.TaskContext  (LINE:14)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|RETURN\l|0x0002: RETURN  (r0 I:kotlinx.coroutines.scheduling.TaskContext) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.scheduling.TaskContext kotlinx.coroutines.SchedulerTaskKt.getTaskContext((r1 I:kotlinx.coroutines.scheduling.Task A[D('$this$taskContext' kotlinx.coroutines.scheduling.Task), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0002: r1 '$this$taskContext' Lkotlinx\/coroutines\/scheduling\/Task;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

