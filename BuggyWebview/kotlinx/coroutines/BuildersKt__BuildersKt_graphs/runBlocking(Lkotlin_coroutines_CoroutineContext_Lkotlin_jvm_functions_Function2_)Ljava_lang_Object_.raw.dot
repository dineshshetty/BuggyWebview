digraph "CFG forkotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/jvm\/functions\/Function2;)Ljava\/lang\/Object;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0001|0x0001: INVOKE  (r0 I:java.lang.Thread) =  type: STATIC call: java.lang.Thread.currentThread():java.lang.Thread A[MD:():java.lang.Thread (c)] (LINE:42)\l0x0005: SGET  (r1 I:kotlin.coroutines.ContinuationInterceptor$Key) =  kotlin.coroutines.ContinuationInterceptor.Key kotlin.coroutines.ContinuationInterceptor$Key  (LINE:43)\l0x0007: CHECK_CAST (r1 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r1 I:??[OBJECT, ARRAY]) \l0x0009: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r8 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r1 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x000d: CHECK_CAST (r1 I:kotlin.coroutines.ContinuationInterceptor) = (kotlin.coroutines.ContinuationInterceptor) (r1 I:??[OBJECT, ARRAY]) \l0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('contextInterceptor' kotlin.coroutines.ContinuationInterceptor)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0029  (LINE:46)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0013|0x0013: SGET  (r4 I:kotlinx.coroutines.ThreadLocalEventLoop) =  kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE kotlinx.coroutines.ThreadLocalEventLoop  (LINE:48)\l0x0015: INVOKE  (r2 I:kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop)]) = (r4 I:kotlinx.coroutines.ThreadLocalEventLoop) type: VIRTUAL call: kotlinx.coroutines.ThreadLocalEventLoop.getEventLoop$kotlinx_coroutines_core():kotlinx.coroutines.EventLoop A[MD:():kotlinx.coroutines.EventLoop (m)]\l0x0019: SGET  (r4 I:kotlinx.coroutines.GlobalScope) =  kotlinx.coroutines.GlobalScope.INSTANCE kotlinx.coroutines.GlobalScope  (LINE:49)\l0x001b: CHECK_CAST (r4 I:kotlinx.coroutines.CoroutineScope) = (kotlinx.coroutines.CoroutineScope) (r4 I:??[OBJECT, ARRAY]) \l0x001d: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('eventLoop' kotlinx.coroutines.EventLoop)]) \l0x001e: CHECK_CAST (r5 I:kotlin.coroutines.CoroutineContext) = (kotlin.coroutines.CoroutineContext) (r5 I:??[OBJECT, ARRAY]) \l0x0020: INVOKE  (r5 I:kotlin.coroutines.CoroutineContext) = \l  (r8 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r5 I:kotlin.coroutines.CoroutineContext)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.plus(kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext A[MD:(kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext (m)]\l0x0024: INVOKE  (r3 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)]) = (r4 I:kotlinx.coroutines.CoroutineScope), (r5 I:kotlin.coroutines.CoroutineContext) type: STATIC call: kotlinx.coroutines.CoroutineContextKt.newCoroutineContext(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext A[MD:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0050|0x0050: NEW_INSTANCE  (r4 I:kotlinx.coroutines.BlockingCoroutine) =  kotlinx.coroutines.BlockingCoroutine  (LINE:57)\l0x0052: INVOKE  \l  (r4 I:kotlinx.coroutines.BlockingCoroutine)\l  (r3 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r0 I:java.lang.Thread A[D('currentThread' java.lang.Thread)])\l  (r2 I:kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop)])\l type: DIRECT call: kotlinx.coroutines.BlockingCoroutine.\<init\>(kotlin.coroutines.CoroutineContext, java.lang.Thread, kotlinx.coroutines.EventLoop):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Thread, kotlinx.coroutines.EventLoop):void (m)]\l0x0055: SGET  (r5 I:kotlinx.coroutines.CoroutineStart) =  kotlinx.coroutines.CoroutineStart.DEFAULT kotlinx.coroutines.CoroutineStart  (LINE:58)\l0x0057: INVOKE  \l  (r4 I:kotlinx.coroutines.BlockingCoroutine A[D('coroutine' kotlinx.coroutines.BlockingCoroutine)])\l  (r5 I:kotlinx.coroutines.CoroutineStart)\l  (r4 I:java.lang.Object A[D('coroutine' kotlinx.coroutines.BlockingCoroutine)])\l  (r9 I:kotlin.jvm.functions.Function2 A[D('block' kotlin.jvm.functions.Function2)])\l type: VIRTUAL call: kotlinx.coroutines.BlockingCoroutine.start(kotlinx.coroutines.CoroutineStart, java.lang.Object, kotlin.jvm.functions.Function2):void A[MD:\<R\>:(kotlinx.coroutines.CoroutineStart, R, kotlin.jvm.functions.Function2\<? super R, ? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\>):void (m)]\l0x005a: INVOKE  (r5 I:java.lang.Object) = (r4 I:kotlinx.coroutines.BlockingCoroutine A[D('coroutine' kotlinx.coroutines.BlockingCoroutine)]) type: VIRTUAL call: kotlinx.coroutines.BlockingCoroutine.joinBlocking():java.lang.Object A[MD:():T (m)] (LINE:59)\l}"];
Node_37 [shape=record,label="{37\:\ 0x005e|RETURN\l|0x005e: RETURN  (r5 I:T) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0029|0x0029: INSTANCE_OF  (r4 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('contextInterceptor' kotlin.coroutines.ContinuationInterceptor)]) kotlinx.coroutines.EventLoop  (LINE:53)\l0x002b: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x002c|0x002c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0032 \l}"];
Node_26 [shape=record,label="{26\:\ 0x002e|0x002e: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('contextInterceptor' kotlin.coroutines.ContinuationInterceptor)]) \l0x002f: CHECK_CAST (r4 I:kotlinx.coroutines.EventLoop) = (kotlinx.coroutines.EventLoop) (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0033|0x0033: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0036 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0036|0x0036: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l0x0037: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:103)\l0x0038: INVOKE  (r6 I:boolean A[D('it' kotlinx.coroutines.EventLoop)]) = (r6 I:kotlinx.coroutines.EventLoop A[D('it' kotlinx.coroutines.EventLoop)]) type: VIRTUAL call: kotlinx.coroutines.EventLoop.shouldBeProcessedFromContext():boolean A[MD:():boolean (m)] (LINE:53)\l}"];
Node_31 [shape=record,label="{31\:\ 0x003c|0x003c: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' kotlinx.coroutines.EventLoop)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x003f \l}"];
Node_32 [shape=record,label="{32\:\ 0x003e|0x003e: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x003f|0x003f: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0047 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0041|0x0041: SGET  (r4 I:kotlinx.coroutines.ThreadLocalEventLoop) =  kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE kotlinx.coroutines.ThreadLocalEventLoop  (LINE:54)\l0x0043: INVOKE  (r5 I:kotlinx.coroutines.EventLoop) = (r4 I:kotlinx.coroutines.ThreadLocalEventLoop) type: VIRTUAL call: kotlinx.coroutines.ThreadLocalEventLoop.currentOrNull$kotlinx_coroutines_core():kotlinx.coroutines.EventLoop A[MD:():kotlinx.coroutines.EventLoop (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0047|0x0047: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('eventLoop' kotlinx.coroutines.EventLoop)]) = (r5 I:??[OBJECT, ARRAY])  (LINE:53)\l0x0048: SGET  (r4 I:kotlinx.coroutines.GlobalScope) =  kotlinx.coroutines.GlobalScope.INSTANCE kotlinx.coroutines.GlobalScope  (LINE:55)\l0x004a: CHECK_CAST (r4 I:kotlinx.coroutines.CoroutineScope) = (kotlinx.coroutines.CoroutineScope) (r4 I:??[OBJECT, ARRAY]) \l0x004c: INVOKE  (r3 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)]) = \l  (r4 I:kotlinx.coroutines.CoroutineScope)\l  (r8 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l type: STATIC call: kotlinx.coroutines.CoroutineContextKt.newCoroutineContext(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext A[MD:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0032|0x0032: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final T kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking((r8 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.CoroutineScope, ? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\> A[D('block' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0047 \-\> B:36:0x0050, CROSS_EDGE: B:33:0x003f \-\> B:35:0x0047, CROSS_EDGE: B:31:0x003c \-\> B:33:0x003f, CROSS_EDGE: B:28:0x0033 \-\> B:33:0x003f, CROSS_EDGE: B:27:0x0032 \-\> B:28:0x0033\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/jvm\/functions\/Function2\<\-Lkotlinx\/coroutines\/CoroutineScope;\-Lkotlin\/coroutines\/Continuation\<\-TT;\>;+Ljava\/lang\/Object;\>;)TT;\lDebug Info:\l  0x0037\-0x003c: r6 'it' Lkotlinx\/coroutines\/EventLoop;\l  0x0038\-0x003c: r7 '$i$a$\-takeIf\-BuildersKt__BuildersKt$runBlocking$2' I\l  0x0005\-0x005e: r0 'currentThread' Ljava\/lang\/Thread;\l  0x000f\-0x005e: r1 'contextInterceptor' Lkotlin\/coroutines\/ContinuationInterceptor;\l  0x0010\-0x005e: r2 'eventLoop' Lkotlinx\/coroutines\/EventLoop;\l  0x0011\-0x005e: r3 'newContext' Lkotlin\/coroutines\/CoroutineContext;\l  0x0055\-0x005e: r4 'coroutine' Lkotlinx\/coroutines\/BlockingCoroutine;\l  \-1 \-0x005e: r8 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x005e: r9 'block' Lkotlin\/jvm\/functions\/Function2;\lEXCEPTIONS:[Ljava\/lang\/InterruptedException;]\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_33[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_27 -> Node_28;
}

