digraph "CFG forkotlinx.coroutines.TimeoutKt.withTimeout(JLkotlin\/jvm\/functions\/Function2;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0001}"];
Node_13 [shape=record,label="{13\:\ 0x0005|if ((r3 \> 0 ? 1 : (r3 == 0 ? 0 : \-1)) \<= 0) goto L8\l}"];
Node_14 [shape=record,label="{14\:\ 0x0007|java.lang.Object r0 = setupTimeout(new kotlinx.coroutines.TimeoutCoroutine(r3, r6), r5)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0016|if (r0 != kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()) goto L6\l}"];
Node_16 [shape=record,label="{16\:\ 0x0018|kotlin.coroutines.jvm.internal.DebugProbes.probeCoroutineSuspended(r6)\l}"];
Node_17 [shape=record,label="{17\:\ 0x001b|RETURN\l|return r0\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x001c}"];
Node_19 [shape=record,label="{19\:\ 0x0023|throw new kotlinx.coroutines.Timeout(\"Timed out immediately\")\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.TimeoutKt.withTimeout((r3v0 'timeMillis' long A[D('timeMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.CoroutineScope, ? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\> A[D('block' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlin.coroutines.Continuation\<? super T\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0016 \-\> B:17:0x001b, CROSS_EDGE: B:19:0x0023 \-\> B:11:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(JLkotlin\/jvm\/functions\/Function2\<\-Lkotlinx\/coroutines\/CoroutineScope;\-Lkotlin\/coroutines\/Continuation\<\-TT;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-TT;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

