digraph "CFG forkotlinx.coroutines.ChildHandleNode.getParent()Lkotlinx\/coroutines\/Job;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.JobSupport) = (r1 I:kotlinx.coroutines.ChildHandleNode) type: VIRTUAL call: kotlinx.coroutines.ChildHandleNode.getJob():kotlinx.coroutines.JobSupport A[MD:():kotlinx.coroutines.JobSupport (m)] (LINE:1464)\l0x0004: CHECK_CAST (r0 I:kotlinx.coroutines.Job) = (kotlinx.coroutines.Job) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:kotlinx.coroutines.Job) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.Job kotlinx.coroutines.ChildHandleNode.getParent((r1 'this' I:kotlinx.coroutines.ChildHandleNode A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlinx.coroutines.ChildHandle.getParent():kotlinx.coroutines.Job]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

