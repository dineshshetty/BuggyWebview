digraph "CFG forkotlinx.coroutines.BlockingCoroutine.\<init\>(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Thread;Lkotlinx\/coroutines\/EventLoop;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|super(r2, true, true)\lr1.blockedThread = r3\lr1.eventLoop = r4\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.BlockingCoroutine.\<init\>((r1v0 'this' kotlinx.coroutines.BlockingCoroutine\<T\> A[IMMUTABLE_TYPE, THIS]), (r2v0 'parentContext' kotlin.coroutines.CoroutineContext A[D('parentContext' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'blockedThread' java.lang.Thread A[D('blockedThread' java.lang.Thread), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'eventLoop' kotlinx.coroutines.EventLoop A[D('eventLoop' kotlinx.coroutines.EventLoop), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

