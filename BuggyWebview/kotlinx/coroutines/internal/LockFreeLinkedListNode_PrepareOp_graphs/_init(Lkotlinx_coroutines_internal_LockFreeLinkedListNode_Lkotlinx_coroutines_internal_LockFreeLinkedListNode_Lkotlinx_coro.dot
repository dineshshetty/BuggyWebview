digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode.PrepareOp.\<init\>(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$AbstractAtomicDesc;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|r0.affected = r1\lr0.next = r2\lr0.desc = r3\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.internal.LockFreeLinkedListNode.PrepareOp.\<init\>((r0v0 'this' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[IMMUTABLE_TYPE, THIS]), (r1v0 'affected' kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('affected' kotlinx.coroutines.internal.LockFreeLinkedListNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'next' kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('next' kotlinx.coroutines.internal.LockFreeLinkedListNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'desc' kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc A[D('desc' kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

