digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode.PrepareOp.perform(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_33 [shape=record,label="{33\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0000}"];
Node_36 [shape=record,label="{36\:\ 0x0004|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L11\l}"];
Node_37 [shape=record,label="{37\:\ 0x0006}"];
Node_38 [shape=record,label="{38\:\ 0x0009|if (r7 != r6.affected) goto L10\l}"];
Node_39 [shape=record,label="{39\:\ 0x000b|r1 = true\l}"];
Node_41 [shape=record,label="{41\:\ 0x000e|PHI: r1 \l  PHI: (r1v10 boolean) = (r1v9 boolean), (r1v11 boolean) binds: [B:40:0x000d, B:39:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L7\l}"];
Node_43 [shape=record,label="{43\:\ 0x0011}"];
Node_44 [shape=record,label="{44\:\ 0x0016|throw new java.lang.AssertionError()\l}"];
Node_34 [shape=record,label="{34\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x000d|r1 = false\l}"];
Node_45 [shape=record,label="{45\:\ 0x0017|if (r7 == null) goto L30\l}"];
Node_46 [shape=record,label="{46\:\ 0x0019|kotlinx.coroutines.internal.LockFreeLinkedListNode r0 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) r7\ljava.lang.Object r0 = r6.desc.onPrepare(r6)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0025|if (r0 != kotlinx.coroutines.internal.LockFreeLinkedList_commonKt.REMOVE_PREPARED) goto L19\l}"];
Node_48 [shape=record,label="{48\:\ 0x0027|kotlinx.coroutines.internal.LockFreeLinkedListNode r1 = r6.next\lkotlinx.coroutines.internal.Removed r3 = r1.removed()\ljava.util.concurrent.atomic.AtomicReferenceFieldUpdater r5 = kotlinx.coroutines.internal.LockFreeLinkedListNode._next$FU\l}"];
Node_49 [shape=record,label="{49\:\ 0x0036|if (androidx.concurrent.futures.C0125xc40028dd.m112m(r5, (kotlinx.coroutines.internal.LockFreeLinkedListNode) r7, r6, r3) == false) goto L17\l}"];
Node_50 [shape=record,label="{50\:\ 0x0038|r6.desc.onRemoved((kotlinx.coroutines.internal.LockFreeLinkedListNode) r7)\lkotlinx.coroutines.internal.LockFreeLinkedListNode r0 = r1.correctPrev(null)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0043}"];
Node_52 [shape=record,label="{52\:\ 0x0045|RETURN\l|return kotlinx.coroutines.internal.LockFreeLinkedList_commonKt.REMOVE_PREPARED\l}"];
Node_53 [shape=record,label="{53\:\ 0x0046|if (r0 == null) goto L29\l}"];
Node_54 [shape=record,label="{54\:\ 0x0048|java.lang.Object r1 = getAtomicOp().decide(r0)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0059|PHI: r1 \l  PHI: (r1v4 'consensus' java.lang.Object) = (r1v3 'consensus' java.lang.Object), (r1v6 'consensus' java.lang.Object) binds: [B:55:0x0051, B:54:0x0048] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_57 [shape=record,label="{57\:\ 0x005d|if (r1 != kotlinx.coroutines.internal.AtomicKt.NO_DECISION) goto L26\l}"];
Node_58 [shape=record,label="{58\:\ 0x005f|kotlinx.coroutines.internal.AtomicOp r3 = getAtomicOp()\l}"];
Node_62 [shape=record,label="{62\:\ 0x0074|PHI: r3 \l  PHI: (r3v4 'update' java.lang.Object) = (r3v1 'update' java.lang.Object), (r3v3 'update' java.lang.Object), (r3v5 'update' java.lang.Object) binds: [B:61:0x0072, B:60:0x0066, B:58:0x005f] A[DONT_GENERATE, DONT_INLINE]\l|java.util.concurrent.atomic.AtomicReferenceFieldUpdater r5 = kotlinx.coroutines.internal.LockFreeLinkedListNode._next$FU\landroidx.concurrent.futures.C0125xc40028dd.m112m(r5, (kotlinx.coroutines.internal.LockFreeLinkedListNode) r7, r6, r3)\l}"];
Node_63 [shape=record,label="{63\:\ 0x007d|RETURN\l|return null\l}"];
Node_59 [shape=record,label="{59\:\ 0x0064|if (r1 != null) goto L28\l}"];
Node_60 [shape=record,label="{60\:\ 0x0066|java.lang.Object r3 = r6.desc.updatedNext((kotlinx.coroutines.internal.LockFreeLinkedListNode) r7, r6.next)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0072|kotlinx.coroutines.internal.LockFreeLinkedListNode r3 = r6.next\l}"];
Node_55 [shape=record,label="{55\:\ 0x0051|java.lang.Object r1 = getAtomicOp().getConsensus()\l}"];
Node_64 [shape=record,label="{64\:\ 0x007e}"];
Node_65 [shape=record,label="{65\:\ 0x0085|throw new java.lang.NullPointerException(\"null cannot be cast to non\-null type kotlinx.coroutines.internal.LockFreeLinkedListNode\{ kotlinx.coroutines.internal.LockFreeLinkedListKt.Node \}\")\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode.PrepareOp.perform((r6v0 'this' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[IMMUTABLE_TYPE, THIS]), (r7v0 'affected' java.lang.Object A[D('affected' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:52:0x0045 \-\> B:34:?, CROSS_EDGE: B:49:0x0036 \-\> B:51:0x0043, CROSS_EDGE: B:63:0x007d \-\> B:34:?, CROSS_EDGE: B:60:0x0066 \-\> B:62:0x0074, CROSS_EDGE: B:61:0x0072 \-\> B:62:0x0074, CROSS_EDGE: B:55:0x0051 \-\> B:56:0x0059, CROSS_EDGE: B:65:0x0085 \-\> B:34:?, CROSS_EDGE: B:40:0x000d \-\> B:41:0x000e, CROSS_EDGE: B:36:0x0004 \-\> B:45:0x0017\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.OpDescriptor.perform(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_33;Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_45;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_41 -> Node_43;
Node_41 -> Node_45[style=dashed];
Node_43 -> Node_44;
Node_44 -> Node_34;
Node_40 -> Node_41;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_64;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_53;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_34;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_34;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_55 -> Node_56;
Node_64 -> Node_65;
Node_65 -> Node_34;
}

