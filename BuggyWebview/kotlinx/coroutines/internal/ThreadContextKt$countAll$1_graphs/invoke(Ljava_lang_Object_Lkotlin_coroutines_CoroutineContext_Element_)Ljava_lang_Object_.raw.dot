digraph "CFG forkotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke(Ljava\/lang\/Object;Lkotlin\/coroutines\/CoroutineContext$Element;)Ljava\/lang\/Object;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('element' kotlin.coroutines.CoroutineContext$Element)]) kotlinx.coroutines.ThreadContextElement  (LINE:36)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0020 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|0x0004: INSTANCE_OF  (r0 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('countOrElement' java.lang.Object)]) java.lang.Integer  (LINE:37)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x000c \l}"];
Node_23 [shape=record,label="{23\:\ 0x0008|0x0008: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('countOrElement' java.lang.Object)]) \l0x0009: CHECK_CAST (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0011 \l}"];
Node_26 [shape=record,label="{26\:\ 0x000f|0x000f: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0015|0x0015: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('inCount' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0019  (LINE:38)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|0x0017: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('element' kotlin.coroutines.CoroutineContext$Element)]) \l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x001f: RETURN  (r1 I:java.lang.Object) A[SYNTHETIC]\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|0x0019: ARITH  (r1 I:int) = (r0 I:int A[D('inCount' int)]) + (1 int) \l0x001b: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x001f|RETURN\lORIG_RETURN\l|0x001f: RETURN  (r1 I:java.lang.Object) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0011|0x0011: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|0x000c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0020|RETURN\l|0x0020: RETURN  (r3 I:java.lang.Object A[D('countOrElement' java.lang.Object)])  (LINE:40)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke((r2 'this' I:kotlinx.coroutines.internal.ThreadContextKt$countAll$1 A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[D('countOrElement' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.CoroutineContext$Element A[D('element' kotlin.coroutines.CoroutineContext$Element), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0019 \-\> B:31:0x001f, CROSS_EDGE: B:27:0x0011 \-\> B:28:0x0015, CROSS_EDGE: B:24:0x000c \-\> B:25:0x000d, CROSS_EDGE: B:32:0x0020 \-\> B:18:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x0020: r0 'inCount' I\l  \-1 \-0x0020: r3 'countOrElement' Ljava\/lang\/Object;\l  \-1 \-0x0020: r4 'element' Lkotlin\/coroutines\/CoroutineContext$Element;\lREPLACED_BY: kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke(java.lang.Object, kotlin.coroutines.CoroutineContext$Element):java.lang.Object\lBRIDGED_BY: kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke(java.lang.Object, kotlin.coroutines.CoroutineContext$Element):java.lang.Object\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function2.invoke(P1, P2):R]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_32;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_33;
Node_33 -> Node_18;
Node_30 -> Node_31;
Node_31 -> Node_18;
Node_27 -> Node_28;
Node_24 -> Node_25;
Node_32 -> Node_18;
}

