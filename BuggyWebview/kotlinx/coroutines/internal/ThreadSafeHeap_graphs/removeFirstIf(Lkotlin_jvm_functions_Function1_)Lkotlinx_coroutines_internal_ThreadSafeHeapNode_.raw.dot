digraph "CFG forkotlinx.coroutines.internal.ThreadSafeHeap.removeFirstIf(Lkotlin\/jvm\/functions\/Function1;)Lkotlinx\/coroutines\/internal\/ThreadSafeHeapNode;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:51)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0002|0x0002: MONITOR_ENTER  (r7 I:??[OBJECT, ARRAY])  (LINE:164)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0003|0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:52)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0005|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_31 [shape=record,label="{31\:\ 0x0005|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0034, blocks: (B:31:0x0005, B:38:0x0015, B:40:0x0021, B:41:0x0027), top: B:51:0x0005 \}\lCatch: all \-\> 0x0034\l|0x0005: INVOKE  (r4 I:kotlinx.coroutines.internal.ThreadSafeHeapNode) = (r7 I:kotlinx.coroutines.internal.ThreadSafeHeap) type: VIRTUAL call: kotlinx.coroutines.internal.ThreadSafeHeap.firstImpl():kotlinx.coroutines.internal.ThreadSafeHeapNode A[Catch: all \-\> 0x0034, MD:():T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\> (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0009|0x0009: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x000a|0x000a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0015 \l}"];
Node_34 [shape=record,label="{34\:\ 0x000c|0x000c: CONST  (r1 I:??[int, float, short, byte, char] A[D('$i$f$synchronized' int)]) = (2 ??[int, float, short, byte, char]) \l0x000d: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0010|0x0010: MONITOR_EXIT  (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0011|0x0011: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0014|RETURN\l|0x0014: RETURN  (r5 I:T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>) \l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0015|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0034, blocks: (B:31:0x0005, B:38:0x0015, B:40:0x0021, B:41:0x0027), top: B:51:0x0005 \}\lCatch: all \-\> 0x0034\l|0x0015: INVOKE  (r6 I:java.lang.Object) = \l  (r8 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)])\l  (r4 I:java.lang.Object A[D('first' kotlinx.coroutines.internal.ThreadSafeHeapNode)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0034, MD:(P1):R (m), TRY_ENTER] (LINE:53)\l0x0019: CHECK_CAST (r6 I:java.lang.Boolean) = (java.lang.Boolean) (r6 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0034]\l0x001b: INVOKE  (r6 I:boolean) = (r6 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[Catch: all \-\> 0x0034, MD:():boolean (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x001f|0x001f: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0027 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0021|TryCatch #0 \{all \-\> 0x0034, blocks: (B:31:0x0005, B:38:0x0015, B:40:0x0021, B:41:0x0027), top: B:51:0x0005 \}\lCatch: all \-\> 0x0034\l|0x0021: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:54)\l0x0022: INVOKE  (r5 I:kotlinx.coroutines.internal.ThreadSafeHeapNode) = (r7 I:kotlinx.coroutines.internal.ThreadSafeHeap), (r5 I:int) type: VIRTUAL call: kotlinx.coroutines.internal.ThreadSafeHeap.removeAtImpl(int):kotlinx.coroutines.internal.ThreadSafeHeapNode A[Catch: all \-\> 0x0034, MD:(int):T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\> (m)]\l0x0026: GOTO  \-\> 0x002a \l}"];
Node_42 [shape=record,label="{42\:\ 0x002a|0x002b: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x002e|0x002e: MONITOR_EXIT  (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x002f|0x002f: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0033|RETURN\l|0x0033: RETURN  (r5 I:T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>)  (LINE:58)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0027|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0034, blocks: (B:31:0x0005, B:38:0x0015, B:40:0x0021, B:41:0x0027), top: B:51:0x0005 \}\lCatch: all \-\> 0x0034\l|0x0027: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY])  (LINE:56)\l0x0028: CHECK_CAST (r6 I:kotlinx.coroutines.internal.ThreadSafeHeapNode) = (kotlinx.coroutines.internal.ThreadSafeHeapNode) (r6 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0034, TRY_LEAVE]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0034|ExcHandler: all \-\> 0x0034\l|0x0034: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0034] (LINE:53)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0035|0x0035: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x0039|0x0039: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_50 [shape=record,label="{50\:\ 0x003c|0x003c: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\> kotlinx.coroutines.internal.ThreadSafeHeap.removeFirstIf((r7 'this' I:kotlinx.coroutines.internal.ThreadSafeHeap\<T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>\> A[IMMUTABLE_TYPE, THIS]), (r8 I:kotlin.jvm.functions.Function1\<? super T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:45:0x0033 \-\> B:27:?, CROSS_EDGE: B:41:0x0027 \-\> B:42:0x002a, CROSS_EDGE: B:50:0x003c \-\> B:27:?\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0034, blocks: (B:31:0x0005, B:38:0x0015, B:40:0x0021, B:41:0x0027), top: B:51:0x0005 \}\lTYPE_VARS: [T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>]\lSIGNATURE: (Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)TT;\lDebug Info:\l  0x0002\-0x000c: r1 '$i$f$synchronized' I\l  0x0004\-0x000c: r2 '$i$a$\-synchronized\-ThreadSafeHeap$removeFirstIf$1' I\l  0x0015\-0x002b: r2 '$i$a$\-synchronized\-ThreadSafeHeap$removeFirstIf$1' I\l  0x0015\-0x002b: r4 'first' Lkotlinx\/coroutines\/internal\/ThreadSafeHeapNode;\l  0x0015\-0x0033: r1 '$i$f$synchronized' I\l  0x0001\-0x003c: r0 '$i$f$removeFirstIf' I\l  0x0034\-0x003c: r1 '$i$f$synchronized' I\l  \-1 \-0x003c: r8 'predicate' Lkotlin\/jvm\/functions\/Function1;\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_51;
Node_51 -> Node_31;
Node_51 -> Node_46;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_38;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_27;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_27;
Node_41 -> Node_42;
Node_46 -> Node_47;
Node_47 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_27;
}

