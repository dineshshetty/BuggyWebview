digraph "CFG forkotlinx.coroutines.internal.ThreadSafeHeap.clear()V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:35)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0001|0x0001: MONITOR_ENTER  (r8 I:??[OBJECT, ARRAY])  (LINE:161)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0002|0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0019, blocks: (B:22:0x0003, B:26:0x0010, B:25:0x0008), top: B:32:0x0003 \}\lCatch: all \-\> 0x0019\l|0x0003: IGET  (r2 I:T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>[]) = (r8 I:kotlinx.coroutines.internal.ThreadSafeHeap) kotlinx.coroutines.internal.ThreadSafeHeap.a kotlinx.coroutines.internal.ThreadSafeHeapNode[] A[Catch: all \-\> 0x0019, TRY_ENTER] (LINE:36)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0005|0x0005: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0008 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0007|0x0007: GOTO  \-\> 0x0010 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0010|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0019, blocks: (B:22:0x0003, B:26:0x0010, B:25:0x0008), top: B:32:0x0003 \}\lCatch: all \-\> 0x0019\l|0x0010: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:37)\l0x0011: IPUT  (r2 I:int), (r8 I:kotlinx.coroutines.internal.ThreadSafeHeap) kotlinx.coroutines.internal.ThreadSafeHeap._size int A[Catch: all \-\> 0x0019]\l0x0014: SGET  (r1 I:kotlin.Unit A[D('$i$a$\-synchronized\-ThreadSafeHeap$clear$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x0019, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|0x0016: MONITOR_EXIT  (r8 I:??[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|RETURN\l|0x0018: RETURN    (LINE:38)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|TryCatch #0 \{all \-\> 0x0019, blocks: (B:22:0x0003, B:26:0x0010, B:25:0x0008), top: B:32:0x0003 \}\lCatch: all \-\> 0x0019\l|0x0008: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: CONST  (r6 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l0x000c: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: INVOKE  (r2 I:java.lang.Object[]), (r3 I:java.lang.Object), (r4 I:int), (r5 I:int), (r6 I:int), (r7 I:java.lang.Object) type: STATIC call: kotlin.collections.ArraysKt.fill$default(java.lang.Object[], java.lang.Object, int, int, int, java.lang.Object):void A[Catch: all \-\> 0x0019, MD:(java.lang.Object[], java.lang.Object, int, int, int, java.lang.Object):void (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0019|ExcHandler: all \-\> 0x0019\l|0x0019: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0019]\l}"];
Node_31 [shape=record,label="{31\:\ 0x001b|0x001b: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.internal.ThreadSafeHeap.clear((r8 'this' I:kotlinx.coroutines.internal.ThreadSafeHeap\<T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x001b \-\> B:18:?, CROSS_EDGE: B:25:0x0008 \-\> B:26:0x0010, CROSS_EDGE: B:32:0x0003 \-\> B:29:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0003\-0x0014: r1 '$i$a$\-synchronized\-ThreadSafeHeap$clear$1' I\l  0x0001\-0x0018: r0 '$i$f$synchronized' I\l  0x0019\-0x001b: r0 '$i$f$synchronized' I\lTYPE_VARS: [T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>]\lTryCatch #0 \{all \-\> 0x0019, blocks: (B:22:0x0003, B:26:0x0010, B:25:0x0008), top: B:32:0x0003 \}\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_32;
Node_32 -> Node_22;
Node_32 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_33;
Node_27 -> Node_28;
Node_28 -> Node_18;
Node_33 -> Node_29;
Node_25 -> Node_26;
Node_29 -> Node_31;
Node_31 -> Node_18;
}

