digraph "CFG forkotlinx.coroutines.internal.ThreadSafeHeap.removeFirstOrNull()Lkotlinx\/coroutines\/internal\/ThreadSafeHeapNode;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:42)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0001|0x0001: MONITOR_ENTER  (r4 I:??[OBJECT, ARRAY])  (LINE:163)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:21:0x0003, B:23:0x0009, B:24:0x000f), top: B:31:0x0003 \}\lCatch: all \-\> 0x0017\l|0x0003: INVOKE  (r2 I:int) = (r4 I:kotlinx.coroutines.internal.ThreadSafeHeap) type: VIRTUAL call: kotlinx.coroutines.internal.ThreadSafeHeap.getSize():int A[Catch: all \-\> 0x0017, MD:():int (m), TRY_ENTER] (LINE:43)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0007|0x0007: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:24:0x000f \l}"];
Node_23 [shape=record,label="{23\:\ 0x0009|TryCatch #0 \{all \-\> 0x0017, blocks: (B:21:0x0003, B:23:0x0009, B:24:0x000f), top: B:31:0x0003 \}\lCatch: all \-\> 0x0017\l|0x0009: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:44)\l0x000a: INVOKE  (r2 I:kotlinx.coroutines.internal.ThreadSafeHeapNode) = (r4 I:kotlinx.coroutines.internal.ThreadSafeHeap), (r2 I:int) type: VIRTUAL call: kotlinx.coroutines.internal.ThreadSafeHeap.removeAtImpl(int):kotlinx.coroutines.internal.ThreadSafeHeapNode A[Catch: all \-\> 0x0017, MD:(int):T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\> (m)]\l0x000e: GOTO  \-\> 0x0013 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0014|0x0014: MONITOR_EXIT  (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|RETURN\l|0x0016: RETURN  (r2 I:T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>)  (LINE:48)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x000f|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:21:0x0003, B:23:0x0009, B:24:0x000f), top: B:31:0x0003 \}\lCatch: all \-\> 0x0017\l|0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:46)\l0x0010: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x0011: CHECK_CAST (r3 I:kotlinx.coroutines.internal.ThreadSafeHeapNode) = (kotlinx.coroutines.internal.ThreadSafeHeapNode) (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0017, TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|ExcHandler: all \-\> 0x0017\l|0x0017: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0017] (LINE:43)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|0x0019: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\> kotlinx.coroutines.internal.ThreadSafeHeap.removeFirstOrNull((r4 'this' I:kotlinx.coroutines.internal.ThreadSafeHeap\<T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x000f \-\> B:26:0x0014, CROSS_EDGE: B:30:0x0019 \-\> B:17:?\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:21:0x0003, B:23:0x0009, B:24:0x000f), top: B:31:0x0003 \}\lTYPE_VARS: [T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>]\lSIGNATURE: ()TT;\lDebug Info:\l  0x0003\-0x0014: r1 '$i$a$\-synchronized\-ThreadSafeHeap$removeFirstOrNull$1' I\l  0x0001\-0x0016: r0 '$i$f$synchronized' I\l  0x0017\-0x0019: r0 '$i$f$synchronized' I\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_31;
Node_31 -> Node_21;
Node_31 -> Node_28;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_17;
Node_24 -> Node_26;
Node_28 -> Node_30;
Node_30 -> Node_17;
}

