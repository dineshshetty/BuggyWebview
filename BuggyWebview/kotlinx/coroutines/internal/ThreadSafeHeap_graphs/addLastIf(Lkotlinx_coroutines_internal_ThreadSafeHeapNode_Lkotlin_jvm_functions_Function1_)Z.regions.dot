digraph "CFG forkotlinx.coroutines.internal.ThreadSafeHeap.addLastIf(Lkotlinx\/coroutines\/internal\/ThreadSafeHeapNode;Lkotlin\/jvm\/functions\/Function1;)Z" {
subgraph cluster_Region_827248888 {
label = "R(3:2|11|12) | DECL_VAR: boolean null\l";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_1516045825 {
label = "Synchronized:R(2:2|(1:(2:(2:7|8)(1:15)|9)))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0002}"];
subgraph cluster_Region_512426294 {
label = "R(1:(2:(2:7|8)(1:15)|9))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_594299670 {
label = "Try: R(2:(2:7|8)(1:15)|9) catches: R(4:16|17|18|19)";
node [shape=record,color=blue];
subgraph cluster_Region_1692571283 {
label = "R(2:(2:7|8)(1:15)|9)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1455290624 {
label = "IF [B:27:0x0013] THEN: R(2:7|8) ELSE: R(1:15)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0013|if (r7.invoke(firstImpl()).booleanValue() != false) goto L7\l}"];
subgraph cluster_Region_589420755 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0015|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:26:0x0005, B:28:0x0015), top: B:40:0x0005 \}\lCatch: all \-\> 0x0025\l|addImpl(r6)     \/\/ Catch: java.lang.Throwable \-\> L25\l}"];
Node_29 [shape=record,label="{29\:\ 0x0018|r4 = true\l}"];
}
subgraph cluster_Region_1583383143 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x001a|r4 = false\l}"];
}
}
Node_31 [shape=record,label="{31\:\ 0x001b|PHI: r4 \l  PHI: (r4v5 boolean) = (r4v4 boolean), (r4v6 boolean) binds: [B:30:0x001a, B:29:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.InlineMarker.finallyStart(1)\l}"];
}
subgraph cluster_Region_284803152 {
label = "R(4:16|17|18|19) | ExcHandler: all \-\> 0x0025\l";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0025|ExcHandler: all \-\> 0x0025\l}"];
Node_36 [shape=record,label="{36\:\ 0x0026|kotlin.jvm.internal.InlineMarker.finallyStart(1)\l}"];
Node_38 [shape=record,label="{38\:\ 0x002a|kotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_39 [shape=record,label="{39\:\ 0x002d|throw r2\l}"];
}
}
}
}
Node_33 [shape=record,label="{33\:\ 0x0020|kotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0024|RETURN\l|return r4\l}"];
}
subgraph cluster_Region_284803152 {
label = "R(4:16|17|18|19) | ExcHandler: all \-\> 0x0025\l";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0025|ExcHandler: all \-\> 0x0025\l}"];
Node_36 [shape=record,label="{36\:\ 0x0026|kotlin.jvm.internal.InlineMarker.finallyStart(1)\l}"];
Node_38 [shape=record,label="{38\:\ 0x002a|kotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_39 [shape=record,label="{39\:\ 0x002d|throw r2\l}"];
}
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0000}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0003}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0005|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0005|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:26:0x0005, B:28:0x0015), top: B:40:0x0005 \}\lCatch: all \-\> 0x0025\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x001f|DONT_GENERATE\l|monitor\-exit()\l}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,color=red,label="{41\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
MethodNode[shape=record,label="{public final boolean kotlinx.coroutines.internal.ThreadSafeHeap.addLastIf((r5v0 'this' kotlinx.coroutines.internal.ThreadSafeHeap\<T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>\> A[IMMUTABLE_TYPE, THIS]), (r6v0 T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\> A[D('node' kotlinx.coroutines.internal.ThreadSafeHeapNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.jvm.functions.Function1\<? super T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>, java.lang.Boolean\> A[D('cond' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:39:0x002d \-\> B:22:?, CROSS_EDGE: B:30:0x001a \-\> B:31:0x001b, CROSS_EDGE: B:40:0x0005 \-\> B:35:0x0025\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:26:0x0005, B:28:0x0015), top: B:40:0x0005 \}\lTYPE_VARS: [T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>]\lSIGNATURE: (TT;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)Z\l}"];
MethodNode -> Node_21;Node_24 -> Node_25;
Node_27 -> Node_28;
Node_27 -> Node_30[style=dashed];
Node_28 -> Node_29;
Node_28 -> Node_41;
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_35 -> Node_36;
Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_22;
Node_33 -> Node_34;
Node_34 -> Node_22;
Node_35 -> Node_36;
Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_40;
Node_40 -> Node_26;
Node_40 -> Node_35;
Node_26 -> Node_27;
Node_32 -> Node_33;
Node_41 -> Node_35;
}

