digraph "CFG forkotlinx.coroutines.internal.ThreadSafeHeap.addLastIf(Lkotlinx\/coroutines\/internal\/ThreadSafeHeapNode;Lkotlin\/jvm\/functions\/Function1;)Z" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:64)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0002|0x0002: MONITOR_ENTER  (r5 I:??[OBJECT, ARRAY])  (LINE:166)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0003|0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:65)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0005|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_26 [shape=record,label="{26\:\ 0x0005|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:26:0x0005, B:28:0x0015), top: B:40:0x0005 \}\lCatch: all \-\> 0x0025\l|0x0005: INVOKE  (r4 I:kotlinx.coroutines.internal.ThreadSafeHeapNode) = (r5 I:kotlinx.coroutines.internal.ThreadSafeHeap) type: VIRTUAL call: kotlinx.coroutines.internal.ThreadSafeHeap.firstImpl():kotlinx.coroutines.internal.ThreadSafeHeapNode A[Catch: all \-\> 0x0025, MD:():T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\> (m), TRY_ENTER]\l0x0009: INVOKE  (r4 I:java.lang.Object) = (r7 I:kotlin.jvm.functions.Function1 A[D('cond' kotlin.jvm.functions.Function1)]), (r4 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0025, MD:(P1):R (m)]\l0x000d: CHECK_CAST (r4 I:java.lang.Boolean) = (java.lang.Boolean) (r4 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0025]\l0x000f: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[Catch: all \-\> 0x0025, MD:():boolean (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0013|0x0013: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001a \l}"];
Node_28 [shape=record,label="{28\:\ 0x0015|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:26:0x0005, B:28:0x0015), top: B:40:0x0005 \}\lCatch: all \-\> 0x0025\l|0x0015: INVOKE  \l  (r5 I:kotlinx.coroutines.internal.ThreadSafeHeap)\l  (r6 I:kotlinx.coroutines.internal.ThreadSafeHeapNode A[D('node' kotlinx.coroutines.internal.ThreadSafeHeapNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.ThreadSafeHeap.addImpl(kotlinx.coroutines.internal.ThreadSafeHeapNode):void A[Catch: all \-\> 0x0025, MD:(T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>):void (m), TRY_LEAVE] (LINE:66)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0018|0x0018: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:67)\l}"];
Node_31 [shape=record,label="{31\:\ 0x001b|0x001c: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x001f|0x001f: MONITOR_EXIT  (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0020|0x0020: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0024|RETURN\l|0x0024: RETURN  (r4 I:boolean)  (LINE:71)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|0x001a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:69)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0025|ExcHandler: all \-\> 0x0025\l|0x0025: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0025] (LINE:65)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0026|0x0026: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x002a|0x002a: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x002d|0x002d: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final boolean kotlinx.coroutines.internal.ThreadSafeHeap.addLastIf((r5 'this' I:kotlinx.coroutines.internal.ThreadSafeHeap\<T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>\> A[IMMUTABLE_TYPE, THIS]), (r6 I:T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\> A[D('node' kotlinx.coroutines.internal.ThreadSafeHeapNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function1\<? super T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>, java.lang.Boolean\> A[D('cond' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:39:0x002d \-\> B:22:?, CROSS_EDGE: B:30:0x001a \-\> B:31:0x001b, CROSS_EDGE: B:40:0x0005 \-\> B:35:0x0025\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:26:0x0005, B:28:0x0015), top: B:40:0x0005 \}\lTYPE_VARS: [T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>]\lSIGNATURE: (TT;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)Z\lDebug Info:\l  0x0004\-0x001c: r2 '$i$a$\-synchronized\-ThreadSafeHeap$addLastIf$1' I\l  0x0002\-0x0024: r1 '$i$f$synchronized' I\l  0x0001\-0x002d: r0 '$i$f$addLastIf' I\l  0x0025\-0x002d: r1 '$i$f$synchronized' I\l  \-1 \-0x002d: r6 'node' Lkotlinx\/coroutines\/internal\/ThreadSafeHeapNode;\l  \-1 \-0x002d: r7 'cond' Lkotlin\/jvm\/functions\/Function1;\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_40;
Node_40 -> Node_26;
Node_40 -> Node_35;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_28 -> Node_41;
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_22;
Node_41 -> Node_35;
Node_30 -> Node_31;
Node_35 -> Node_36;
Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_22;
}

