digraph "CFG forkotlinx.coroutines.internal.ThreadSafeHeap.remove(Lkotlinx\/coroutines\/internal\/ThreadSafeHeapNode;)Z" {
subgraph cluster_Region_92503066 {
label = "R(2:1|9) | DECL_VAR: boolean null\l";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_403035118 {
label = "Synchronized:R(2:2|(2:5|(1:7)(3:11|(1:(1:(1:19)))|20)))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0001}"];
subgraph cluster_Region_1843100912 {
label = "R(2:5|(1:7)(3:11|(1:(1:(1:19)))|20))";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{, blocks: (B:29:0x0003, B:32:0x000d, B:39:0x001e, B:40:0x0023, B:41:0x0024), top: B:47:0x0003 \}\lCatch: all \-\> 0x002a\l|r3 = true\l}"];
subgraph cluster_IfRegion_266570156 {
label = "IF [B:30:0x0009] THEN: R(1:7) ELSE: R(3:11|(1:(1:(1:19)))|20)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0009|if (r7.getHeap() == null) goto L7\l}"];
subgraph cluster_Region_2092126752 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x000b|r3 = false\l}"];
}
subgraph cluster_Region_1558939936 {
label = "R(3:11|(1:(1:(1:19)))|20)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x000d|TryCatch #0 \{, blocks: (B:29:0x0003, B:32:0x000d, B:39:0x001e, B:40:0x0023, B:41:0x0024), top: B:47:0x0003 \}\lCatch: all \-\> 0x002a\l|int int r2 = r7.getIndex()     \/\/ Catch: java.lang.Throwable \-\> L2a\l}"];
subgraph cluster_IfRegion_43342854 {
label = "IF [B:33:0x0015] THEN: R(1:(1:(1:19))) ELSE: null";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0015|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() != false) goto L13\l}"];
subgraph cluster_Region_1466150900 {
label = "R(1:(1:(1:19)))";
node [shape=record,color=blue];
subgraph cluster_Region_1640991829 {
label = "R(1:(1:19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1793151665 {
label = "IF [B:37:0x001b] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x001b|PHI: r4 \l  PHI: (r4v1 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|if ((r2 \>= 0) == false) goto L18\l}"];
subgraph cluster_Region_1928517417 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0023|TryCatch #0 \{, blocks: (B:29:0x0003, B:32:0x000d, B:39:0x001e, B:40:0x0023, B:41:0x0024), top: B:47:0x0003 \}\lCatch: all \-\> 0x002a\l|throw new java.lang.AssertionError()     \/\/ Catch: java.lang.Throwable \-\> L2a\l}"];
}
}
}
}
}
Node_41 [shape=record,label="{41\:\ 0x0024|TRY_LEAVE\lTryCatch #0 \{, blocks: (B:29:0x0003, B:32:0x000d, B:39:0x001e, B:40:0x0023, B:41:0x0024), top: B:47:0x0003 \}\lCatch: all \-\> 0x002a\l|removeAtImpl(r2)     \/\/ Catch: java.lang.Throwable \-\> L2a\l}"];
}
}
}
}
Node_43 [shape=record,label="{43\:\ 0x0029|RETURN\l|return r3\l}"];
}
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0000}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0002}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0028|DONT_GENERATE\lPHI: r3 \l  PHI: (r3v2 boolean) = (r3v0 boolean), (r3v3 boolean) binds: [B:41:0x0024, B:31:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit()\l}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0017}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0018}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x001a}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x001d}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x001e|TryCatch #0 \{, blocks: (B:29:0x0003, B:32:0x000d, B:39:0x001e, B:40:0x0023, B:41:0x0024), top: B:47:0x0003 \}\lCatch: all \-\> 0x002a\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x002a|REMOVE\lExcHandler: all \-\> 0x002a\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x002c|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{public final boolean kotlinx.coroutines.internal.ThreadSafeHeap.remove((r6v0 'this' kotlinx.coroutines.internal.ThreadSafeHeap\<T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>\> A[IMMUTABLE_TYPE, THIS]), (r7v0 T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\> A[D('node' kotlinx.coroutines.internal.ThreadSafeHeapNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:41:0x0024 \-\> B:42:0x0028, CROSS_EDGE: B:40:0x0023 \-\> B:25:?, CROSS_EDGE: B:35:0x0018 \-\> B:37:0x001b, CROSS_EDGE: B:33:0x0015 \-\> B:41:0x0024, CROSS_EDGE: B:46:0x002c \-\> B:25:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T extends kotlinx.coroutines.internal.ThreadSafeHeapNode & java.lang.Comparable\<? super T\>]\lSIGNATURE: (TT;)Z\l}"];
MethodNode -> Node_24;Node_27 -> Node_28;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_32[style=dashed];
Node_31 -> Node_42;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_41[style=dashed];
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_40 -> Node_25;
Node_41 -> Node_42;
Node_43 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_28 -> Node_47;
Node_47 -> Node_29;
Node_47 -> Node_44;
Node_42 -> Node_43;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_38 -> Node_41;
Node_39 -> Node_40;
Node_44 -> Node_46;
Node_46 -> Node_25;
}

