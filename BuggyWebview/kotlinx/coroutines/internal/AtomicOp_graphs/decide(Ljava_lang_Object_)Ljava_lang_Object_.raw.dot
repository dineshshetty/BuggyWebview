digraph "CFG forkotlinx.coroutines.internal.AtomicOp.decide(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:79)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0017 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0006|0x0006: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:123)\l0x0007: SGET  (r1 I:java.lang.Object) =  kotlinx.coroutines.internal.AtomicKt.NO_DECISION java.lang.Object  (LINE:79)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0009|0x0009: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('decision' java.lang.Object)]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x000d \l}"];
Node_26 [shape=record,label="{26\:\ 0x000b|0x000b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0011 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0011|0x0011: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0013: INVOKE  (r0 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|0x0016: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x000d|0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0017|0x0017: IGET  (r0 I:java.lang.Object) = (r3 I:kotlinx.coroutines.internal.AtomicOp) kotlinx.coroutines.internal.AtomicOp._consensus java.lang.Object  (LINE:80)\l0x0019: SGET  (r1 I:java.lang.Object) =  kotlinx.coroutines.internal.AtomicKt.NO_DECISION java.lang.Object  (LINE:81)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('current' java.lang.Object)]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x001e \l}"];
Node_34 [shape=record,label="{34\:\ 0x001d|RETURN\l|0x001d: RETURN  (r0 I:java.lang.Object A[D('current' java.lang.Object)]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x001e|0x001e: SGET  (r1 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.internal.AtomicOp._consensus$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:82)\l0x0020: SGET  (r2 I:java.lang.Object) =  kotlinx.coroutines.internal.AtomicKt.NO_DECISION java.lang.Object \l0x0022: INVOKE  (r1 I:boolean) = \l  (r1 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r3 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l  (r4 I:java.lang.Object A[D('decision' java.lang.Object)])\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0026|0x0026: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0029 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0028|RETURN\l|0x0028: RETURN  (r4 I:java.lang.Object A[D('decision' java.lang.Object)]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0029|0x0029: IGET  (r1 I:java.lang.Object) = (r3 I:kotlinx.coroutines.internal.AtomicOp) kotlinx.coroutines.internal.AtomicOp._consensus java.lang.Object  (LINE:83)\l}"];
Node_39 [shape=record,label="{39\:\ 0x002b|RETURN\l|0x002b: RETURN  (r1 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.internal.AtomicOp.decide((r3 'this' I:kotlinx.coroutines.internal.AtomicOp\<T\> A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.Object A[D('decision' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x001d \-\> B:21:?, CROSS_EDGE: B:37:0x0028 \-\> B:21:?, CROSS_EDGE: B:39:0x002b \-\> B:21:?, CROSS_EDGE: B:27:0x000d \-\> B:28:0x000e, CROSS_EDGE: B:23:0x0004 \-\> B:32:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x000e: r0 '$i$a$\-assert\-AtomicOp$decide$1' I\l  0x0019\-0x002b: r0 'current' Ljava\/lang\/Object;\l  \-1 \-0x002b: r4 'decision' Ljava\/lang\/Object;\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_32[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_27 -> Node_28;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_21;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_21;
Node_38 -> Node_39;
Node_39 -> Node_21;
}

