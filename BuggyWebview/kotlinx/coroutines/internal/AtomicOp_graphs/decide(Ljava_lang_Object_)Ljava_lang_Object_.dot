digraph "CFG forkotlinx.coroutines.internal.AtomicOp.decide(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000}"];
Node_23 [shape=record,label="{23\:\ 0x0004|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L11\l}"];
Node_24 [shape=record,label="{24\:\ 0x0006}"];
Node_25 [shape=record,label="{25\:\ 0x0009|if (r4 == kotlinx.coroutines.internal.AtomicKt.NO_DECISION) goto L10\l}"];
Node_26 [shape=record,label="{26\:\ 0x000b|r1 = true\l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|PHI: r1 \l  PHI: (r1v6 boolean) = (r1v5 boolean), (r1v7 boolean) binds: [B:27:0x000d, B:26:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L7\l}"];
Node_30 [shape=record,label="{30\:\ 0x0011}"];
Node_31 [shape=record,label="{31\:\ 0x0016|throw new java.lang.AssertionError()\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x000d|r1 = false\l}"];
Node_32 [shape=record,label="{32\:\ 0x0017|java.lang.Object r0 = r3._consensus\l}"];
Node_33 [shape=record,label="{33\:\ 0x001b|if (r0 == kotlinx.coroutines.internal.AtomicKt.NO_DECISION) goto L14\l}"];
Node_34 [shape=record,label="{34\:\ 0x001d|RETURN\l|return r0\l}"];
Node_35 [shape=record,label="{35\:\ 0x001e}"];
Node_36 [shape=record,label="{36\:\ 0x0026|if (androidx.concurrent.futures.C0125xc40028dd.m112m(kotlinx.coroutines.internal.AtomicOp._consensus$FU, r3, kotlinx.coroutines.internal.AtomicKt.NO_DECISION, r4) == false) goto L17\l}"];
Node_37 [shape=record,label="{37\:\ 0x0028|RETURN\l|return r4\l}"];
Node_38 [shape=record,label="{38\:\ 0x0029}"];
Node_39 [shape=record,label="{39\:\ 0x002b|RETURN\l|return r3._consensus\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.internal.AtomicOp.decide((r3v0 'this' kotlinx.coroutines.internal.AtomicOp\<T\> A[IMMUTABLE_TYPE, THIS]), (r4v0 'decision' java.lang.Object A[D('decision' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x001d \-\> B:21:?, CROSS_EDGE: B:37:0x0028 \-\> B:21:?, CROSS_EDGE: B:39:0x002b \-\> B:21:?, CROSS_EDGE: B:27:0x000d \-\> B:28:0x000e, CROSS_EDGE: B:23:0x0004 \-\> B:32:0x0017\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_32[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_27 -> Node_28;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_21;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_21;
Node_38 -> Node_39;
Node_39 -> Node_21;
}

