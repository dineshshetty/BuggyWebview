digraph "CFG forkotlinx.coroutines.internal.AtomicOp.decide(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1921805084 {
label = "R(3:(1:(1:8))|11|12)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_46751227 {
label = "IF [B:23:0x0004] THEN: R(1:(1:8)) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0004|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() != false) goto L3\l}"];
subgraph cluster_Region_329027670 {
label = "R(1:(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_708389655 {
label = "IF [B:28:0x000e] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x000e|PHI: r1 \l  PHI: (r1v6 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r4 != kotlinx.coroutines.internal.AtomicKt.NO_DECISION) == false) goto L7\l}"];
subgraph cluster_Region_1617672006 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0016|throw new java.lang.AssertionError()\l}"];
}
}
}
}
Node_32 [shape=record,label="{32\:\ 0x0017|java.lang.Object java.lang.Object r0 = r3._consensus\l}"];
Node_33 [shape=record,label="{33\:\ 0x001b|RETURN\l|return r0 != kotlinx.coroutines.internal.AtomicKt.NO_DECISION ? r0 : androidx.concurrent.futures.C0125xc40028dd.m112m(kotlinx.coroutines.internal.AtomicOp._consensus$FU, r3, kotlinx.coroutines.internal.AtomicKt.NO_DECISION, r4) ? r4 : r3._consensus\l}"];
}
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0000}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0006}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0009}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x000b}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0011}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x000d}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x001d}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x001e}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0026}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0028}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0029}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x002b}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.internal.AtomicOp.decide((r3v0 'this' kotlinx.coroutines.internal.AtomicOp\<T\> A[IMMUTABLE_TYPE, THIS]), (r4v0 'decision' java.lang.Object A[D('decision' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x001d \-\> B:21:?, CROSS_EDGE: B:37:0x0028 \-\> B:21:?, CROSS_EDGE: B:39:0x002b \-\> B:21:?, CROSS_EDGE: B:27:0x000d \-\> B:28:0x000e, CROSS_EDGE: B:23:0x0004 \-\> B:32:0x0017\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_20;Node_23 -> Node_24;
Node_23 -> Node_32[style=dashed];
Node_28 -> Node_30;
Node_28 -> Node_32[style=dashed];
Node_31 -> Node_21;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_35;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_30 -> Node_31;
Node_27 -> Node_28;
Node_34 -> Node_21;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_38;
Node_37 -> Node_21;
Node_38 -> Node_39;
Node_39 -> Node_21;
}

