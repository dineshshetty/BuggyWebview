digraph "CFG forkotlinx.coroutines.internal.StackTraceRecoveryKt.mergeRecoveredTraces([Ljava\/lang\/StackTraceElement;Ljava\/util\/ArrayDeque;)V" {
subgraph cluster_Region_1763608422 {
label = "R(4:1|(1:(2:4|(1:6))(2:20|1))|7|(1:(2:9|(3:10|(1:12)|13)))) | DECL_VAR: int index$iv, int i\l";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0000|int int r2 = r8.length\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_878400941 {
label = "LOOP:0: (1:(2:4|(1:6))(2:20|1))";
node [shape=record,color=blue];
subgraph cluster_Region_1308418110 {
label = "R(1:(2:4|(1:6))(2:20|1))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_621530096 {
label = "IF [B:26:0x0005] THEN: R(2:4|(1:6)) ELSE: R(2:20|1)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0005|if (r3 \< r2) goto L4\l}"];
subgraph cluster_Region_1188910760 {
label = "R(2:4|(1:6))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0007|r5 = r3\lr3++\ljava.lang.StackTraceElement r6 = r8[r5]\l}"];
subgraph cluster_IfRegion_138200875 {
label = "IF [B:28:0x0011] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0011|LOOP_END\lLOOP:0: B:25:0x0004\-\>B:28:0x0011\l|if (isArtificial(r6) != false) goto L6\l}"];
subgraph cluster_Region_1293841093 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0015|SYNTHETIC\lEDGE_INSN: B:40:0x0015\-\>B:31:0x0015 ?: BREAK  \l|break\l}"];
}
}
}
subgraph cluster_Region_1880636498 {
label = "R(2:20|1)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0014|EDGE_INSN: B:30:0x0014\-\>B:31:0x0015 ?: BREAK  \l|r5 = \-1\l}"];
Node_InsnContainer_452955911 [shape=record,label="{|break\l}"];
}
}
}
}
Node_31 [shape=record,label="{31\:\ 0x0015|EDGE_INSN: B:40:0x0015\-\>B:31:0x0015 ?: BREAK  , EDGE_INSN: B:30:0x0014\-\>B:31:0x0015 ?: BREAK  \lPHI: r5 \l  PHI: (r5v1 'index$iv' int) = (r5v0 'index$iv' int), (r5v3 'index$iv' int) binds: [B:30:0x0014, B:40:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|int int r5 = r5 + 1\lint int r0 = r8.length \- 1\l}"];
subgraph cluster_Region_1952925640 {
label = "R(1:(2:9|(3:10|(1:12)|13)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1839243392 {
label = "IF [B:32:0x001a] THEN: R(2:9|(3:10|(1:12)|13)) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x001a|if (r5 \<= r0) goto L9\l}"];
subgraph cluster_Region_978046688 {
label = "R(2:9|(3:10|(1:12)|13))";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x001c|int r1 = r0\l}"];
subgraph cluster_LoopRegion_378512015 {
label = "LOOP:1: (3:10|(1:12)|13)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0035|LOOP_END\lLOOP:1: B:34:0x001d\-\>B:38:0x0035\l|if (r2 != r5) goto L10\l}"];
subgraph cluster_Region_184590167 {
label = "R(3:10|(1:12)|13)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x001d|LOOP_START\lLOOP:1: B:34:0x001d\-\>B:38:0x0035\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:33:0x001c, B:38:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|r2 = r1\lr1\-\-\ljava.lang.StackTraceElement r3 = r8[r2]\l}"];
subgraph cluster_IfRegion_1665960471 {
label = "IF [B:35:0x002b] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x002b|if (elementWiseEquals(r3, r9.getLast()) != false) goto L12\l}"];
subgraph cluster_Region_1580246122 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x002d|r9.removeLast()\l}"];
}
}
Node_37 [shape=record,label="{37\:\ 0x0030|r9.addFirst(r8[r2])\l}"];
}
}
}
}
}
}
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0004|LOOP_START\lLOOP:0: B:25:0x0004\-\>B:28:0x0011\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v3 int) binds: [B:24:0x0000, B:28:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0037|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ ?|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0037|ORIG_RETURN\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0014|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static final void kotlinx.coroutines.internal.StackTraceRecoveryKt.mergeRecoveredTraces((r8v0 'recoveredStacktrace' java.lang.StackTraceElement[] A[D('recoveredStacktrace' java.lang.StackTraceElement[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.util.ArrayDeque\<java.lang.StackTraceElement\> A[D('result' java.util.ArrayDeque), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0011 \-\> B:25:0x0004, BACK_EDGE: B:38:0x0035 \-\> B:34:0x001d, CROSS_EDGE: B:35:0x002b \-\> B:37:0x0030, CROSS_EDGE: B:32:0x001a \-\> B:39:0x0037, CROSS_EDGE: B:30:0x0014 \-\> B:31:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ([Ljava\/lang\/StackTraceElement;Ljava\/util\/ArrayDeque\<Ljava\/lang\/StackTraceElement;\>;)V\l}"];
MethodNode -> Node_22;Node_24 -> Node_25;
Node_26 -> Node_27;
Node_26 -> Node_41[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_25[style=dashed];
Node_28 -> Node_40;
Node_40 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_39[style=dashed];
Node_33 -> Node_34;
Node_38 -> Node_34;
Node_38 -> Node_42[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_37[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_22 -> Node_24;
Node_25 -> Node_26;
Node_42 -> Node_43;
Node_43 -> Node_23;
Node_39 -> Node_23;
Node_41 -> Node_30;
}

