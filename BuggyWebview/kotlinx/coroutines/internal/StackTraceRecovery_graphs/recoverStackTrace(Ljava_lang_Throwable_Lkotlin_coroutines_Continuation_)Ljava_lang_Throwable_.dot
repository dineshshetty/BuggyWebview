digraph "CFG forkotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(Ljava\/lang\/Throwable;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Throwable;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000}"];
Node_13 [shape=record,label="{13\:\ 0x0005|if (kotlinx.coroutines.Debug.getRECOVER_STACK_TRACES() == false) goto L8\l}"];
Node_14 [shape=record,label="{14\:\ 0x0007}"];
Node_15 [shape=record,label="{15\:\ 0x0009|if ((r3 instanceof kotlin.coroutines.jvm.internal.CoroutineStackFrame) != false) goto L5\l}"];
Node_17 [shape=record,label="{17\:\ 0x000c}"];
Node_18 [shape=record,label="{18\:\ 0x0013|RETURN\l|return (E) recoverFromStackFrame(r2, (kotlin.coroutines.jvm.internal.CoroutineStackFrame) r3)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|RETURN\l|return r2\l}"];
MethodNode[shape=record,label="{public static final E extends java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace((r2v0 E extends java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlin.coroutines.Continuation\<?\> A[D('continuation' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0014 \-\> B:11:?, CROSS_EDGE: B:13:0x0005 \-\> B:19:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [E extends java.lang.Throwable]\lSIGNATURE: \<E:Ljava\/lang\/Throwable;\>(TE;Lkotlin\/coroutines\/Continuation\<*\>;)TE;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

