digraph "CFG forkotlinx.coroutines.internal.StackTraceRecoveryKt.access$recoverFromStackFrame(Ljava\/lang\/Throwable;Lkotlin\/coroutines\/jvm\/internal\/CoroutineStackFrame;)Ljava\/lang\/Throwable;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|return recoverFromStackFrame(r1, r2)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.access$recoverFromStackFrame((r1v0 'exception' java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'continuation' kotlin.coroutines.jvm.internal.CoroutineStackFrame A[D('continuation' kotlin.coroutines.jvm.internal.CoroutineStackFrame), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  \l  (r1 I:java.lang.Throwable A[D('exception' java.lang.Throwable)])\l  (r2 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame A[D('continuation' kotlin.coroutines.jvm.internal.CoroutineStackFrame)])\l type: STATIC call: kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverFromStackFrame(java.lang.Throwable, kotlin.coroutines.jvm.internal.CoroutineStackFrame):java.lang.Throwable\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

