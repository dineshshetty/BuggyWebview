digraph "CFG forkotlinx.coroutines.internal.StackTraceRecoveryKt.unwrapImpl(Ljava\/lang\/Throwable;)Ljava\/lang\/Throwable;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|java.lang.Throwable r0 = (E) r9.getCause()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0004|if (r0 == null) goto L16\l}"];
Node_23 [shape=record,label="{23\:\ 0x0006}"];
Node_24 [shape=record,label="{24\:\ 0x0012|if (kotlin.jvm.internal.Intrinsics.areEqual(r0.getClass(), r9.getClass()) != false) goto L5\l}"];
Node_26 [shape=record,label="{26\:\ 0x0015|java.lang.StackTraceElement[] r1 = r9.getStackTrace()\lint r3 = r1.length\lr4 = false\lr5 = 0\l}"];
Node_27 [shape=record,label="{27\:\ 0x001d|LOOP_START\lLOOP:0: B:27:0x001d\-\>B:29:0x0029\lPHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:26:0x0015, B:29:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 \>= r3) goto L15\l}"];
Node_28 [shape=record,label="{28\:\ 0x001f|r6 = r1[r5]\lint r5 = r5 + 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x0029|LOOP_END\lLOOP:0: B:27:0x001d\-\>B:29:0x0029\l|if (isArtificial(r6) == false) goto L6\l}"];
Node_36 [shape=record,label="{36\:\ 0x002b|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x002b|r4 = true\l}"];
Node_32 [shape=record,label="{32\:\ 0x002e|PHI: r4 \l  PHI: (r4v1 boolean) = (r4v0 boolean), (r4v2 boolean) binds: [B:37:0x002e, B:30:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == false) goto L14\l}"];
Node_33 [shape=record,label="{33\:\ 0x0030|RETURN\l|return r0\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0031|RETURN\l|return r9\l}"];
Node_37 [shape=record,label="{37\:\ 0x002e|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0032|RETURN\l|return r9\l}"];
MethodNode[shape=record,label="{public static final E extends java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.unwrapImpl((r9v0 E extends java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x0029 \-\> B:27:0x001d, CROSS_EDGE: B:34:0x0031 \-\> B:20:?, CROSS_EDGE: B:27:0x001d \-\> B:32:0x002e, CROSS_EDGE: B:35:0x0032 \-\> B:20:?, CROSS_EDGE: B:22:0x0004 \-\> B:35:0x0032\lINLINE_NOT_NEEDED\lTYPE_VARS: [E extends java.lang.Throwable]\lSIGNATURE: \<E:Ljava\/lang\/Throwable;\>(TE;)TE;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_35;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_35[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_37;
Node_28 -> Node_29;
Node_29 -> Node_27;
Node_29 -> Node_36[style=dashed];
Node_36 -> Node_30;
Node_30 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_20;
Node_34 -> Node_20;
Node_37 -> Node_32;
Node_35 -> Node_20;
}

