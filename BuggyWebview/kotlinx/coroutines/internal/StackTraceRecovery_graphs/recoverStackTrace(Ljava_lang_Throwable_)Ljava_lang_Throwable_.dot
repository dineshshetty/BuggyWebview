digraph "CFG forkotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(Ljava\/lang\/Throwable;)Ljava\/lang\/Throwable;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000}"];
Node_13 [shape=record,label="{13\:\ 0x0004|if (kotlinx.coroutines.Debug.getRECOVER_STACK_TRACES() != false) goto L5\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|RETURN\l|return r2\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|java.lang.Throwable r0 = tryCopyAndVerify(r2)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|if (r0 != null) goto L8\l}"];
Node_17 [shape=record,label="{17\:\ 0x000d|RETURN\l|return r2\l}"];
Node_18 [shape=record,label="{18\:\ 0x000e}"];
Node_19 [shape=record,label="{19\:\ 0x0012|RETURN\l|return (E) sanitizeStackTrace(r0)\l}"];
MethodNode[shape=record,label="{public static final E extends java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace((r2v0 E extends java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000d \-\> B:11:?, CROSS_EDGE: B:19:0x0012 \-\> B:11:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E extends java.lang.Throwable]\lSIGNATURE: \<E:Ljava\/lang\/Throwable;\>(TE;)TE;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

