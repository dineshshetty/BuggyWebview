digraph "CFG forkotlinx.coroutines.internal.LockFreeTaskQueueCore.fillPlaceholder(ILjava\/lang\/Object;)Lkotlinx\/coroutines\/internal\/LockFreeTaskQueueCore;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceArray) = (r3 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.array java.util.concurrent.atomic.AtomicReferenceArray  (LINE:143)\l0x0002: IGET  (r1 I:int) = (r3 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.mask int \l0x0004: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r4 I:??[int, boolean, short, byte, char] A[D('index' int)]) \l0x0005: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.concurrent.atomic.AtomicReferenceArray), (r1 I:int) type: VIRTUAL call: java.util.concurrent.atomic.AtomicReferenceArray.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0009: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('old' java.lang.Object)]) kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder  (LINE:154)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x001d \l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|0x000d: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('old' java.lang.Object)]) \l0x000e: CHECK_CAST (r1 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder) = (kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder) (r1 I:??[OBJECT, ARRAY]) \l0x0010: IGET  (r1 I:int) = (r1 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder) kotlinx.coroutines.internal.LockFreeTaskQueueCore.Placeholder.index int \l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)])  \-\> B:21:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x0014|0x0014: IGET  (r1 I:java.util.concurrent.atomic.AtomicReferenceArray) = (r3 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.array java.util.concurrent.atomic.AtomicReferenceArray  (LINE:155)\l0x0016: IGET  (r2 I:int) = (r3 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.mask int \l0x0018: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) & (r4 I:??[int, boolean, short, byte, char] A[D('index' int)]) \l0x0019: INVOKE  \l  (r1 I:java.util.concurrent.atomic.AtomicReferenceArray)\l  (r2 I:int)\l  (r5 I:java.lang.Object A[D('element' java.lang.Object)])\l type: VIRTUAL call: java.util.concurrent.atomic.AtomicReferenceArray.set(int, java.lang.Object):void A[MD:(int, E):void (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x001c|RETURN\l|0x001c: RETURN  (r3 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\>)  (LINE:157)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x001d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:160)\l0x001e: RETURN  (r1 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\>) A[SYNTHETIC]\l}"];
Node_19 [shape=record,label="{19\:\ 0x001d|RETURN\lORIG_RETURN\l|0x001d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:160)\l0x001e: RETURN  (r1 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\>) \l}"];
MethodNode[shape=record,label="{private final kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\> kotlinx.coroutines.internal.LockFreeTaskQueueCore.fillPlaceholder((r3 'this' I:kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\> A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x001e \-\> B:12:?, CROSS_EDGE: B:14:0x000b \-\> B:19:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x001e: r0 'old' Ljava\/lang\/Object;\l  \-1 \-0x001e: r4 'index' I\l  \-1 \-0x001e: r5 'element' Ljava\/lang\/Object;\lTYPE_VARS: [E]\lSIGNATURE: (ITE;)Lkotlinx\/coroutines\/internal\/LockFreeTaskQueueCore\<TE;\>;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_12;
Node_21 -> Node_12;
Node_19 -> Node_12;
}

