digraph "CFG forkotlinx.coroutines.internal.LockFreeTaskQueueCore.removeSlowPath(II)Lkotlinx\/coroutines\/internal\/LockFreeTaskQueueCore;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r24 I:??[OBJECT, ARRAY])  (LINE:199)\l0x0002: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r24 I:??[OBJECT, ARRAY]) \l0x0004: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0005|LOOP_START\lLOOP:0: B:28:0x0005\-\>B:46:0x0072\l|0x0006: IGET  (r9 I:long) = \l  (r7 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore A[D('$this$loop$iv' kotlinx.coroutines.internal.LockFreeTaskQueueCore)])\l kotlinx.coroutines.internal.LockFreeTaskQueueCore._state long  (LINE:330)\l0x0008: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: SGET  (r12 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion) =  kotlinx.coroutines.internal.LockFreeTaskQueueCore.Companion kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion  (LINE:200)\l0x000b: MOVE  (r0 I:??[long, double]) = (r9 I:??[long, double] A[D('state' long)]) \l0x000c: MOVE  (r13 I:??[long, double]) = (r0 I:??[long, double] A[D('$this$withState$iv' long)]) \l0x000d: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: CONST  (r0 I:??[long, double]) = (1073741823(0x3fffffff, double:5.304989472E\-315) ??[long, double])  (LINE:331)\l0x0011: ARITH  (r0 I:long) = (r0 I:long) & (r13 I:long A[D('$this$withState$iv' long)]) \l0x0012: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: ARITH  (r0 I:long) = (r0 I:long) \>\> (r2 I:long) \l0x0014: CAST (r4 I:int) = (int) (r0 I:long) \l0x0015: CONST  (r0 I:??[long, double]) = (1152921503533105152(0xfffffffc0000000, double:1.2882296003504729E\-231) ??[long, double])  (LINE:332)\l0x001a: ARITH  (r0 I:long) = (r0 I:long) & (r13 I:long A[D('$this$withState$iv' long)]) \l0x001b: CONST  (r3 I:??[int, float, short, byte, char]) = (30 ??[int, float, short, byte, char]) \l0x001d: ARITH  (r0 I:long) = (r0 I:long) \>\> (r3 I:long) \l0x001e: CAST (r5 I:int) = (int) (r0 I:long) \l0x001f: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('head$iv' int)])  (LINE:333)\l0x0020: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('tail$iv' int)]) \l0x0022: CONST  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0024: INVOKE  (r0 I:boolean) =  type: STATIC call: kotlinx.coroutines.DebugKt.getASSERTIONS_ENABLED():boolean A[MD:():boolean (m)] (LINE:201)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0028|0x0028: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0039 \l}"];
Node_30 [shape=record,label="{30\:\ 0x002a|0x002a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:334)\l0x002b: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r25 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('oldHead' int)])  (LINE:201)\l}"];
Node_31 [shape=record,label="{31\:\ 0x002d|0x002d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('head' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0030 \l}"];
Node_32 [shape=record,label="{32\:\ 0x002f|0x002f: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0030|0x0030: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0033 \l}"];
Node_38 [shape=record,label="{38\:\ 0x003b|0x003b: CONST  (r18 I:??[long, double]) = (1152921504606846976(0x1000000000000000, double:1.2882297539194267E\-231) ??[long, double])  (LINE:202)\l0x003d: ARITH  (r18 I:long) = (r9 I:long A[D('state' long)]) & (r18 I:long) \l0x003f: CONST  (r20 I:??[long, double]) = (0 ??[long, double]) \l0x0041: CMP_L  (r0 I:int) = (r18 I:long), (r20 I:long) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0043|0x0043: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x004a \l}"];
Node_42 [shape=record,label="{42\:\ 0x004a|0x004a: SGET  (r0 I:java.util.concurrent.atomic.AtomicLongFieldUpdater) =  kotlinx.coroutines.internal.LockFreeTaskQueueCore._state$FU java.util.concurrent.atomic.AtomicLongFieldUpdater  (LINE:206)\l0x004c: SGET  (r2 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion) =  kotlinx.coroutines.internal.LockFreeTaskQueueCore.Companion kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion \l0x004e: MOVE  (r18 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$loop$iv' kotlinx.coroutines.internal.LockFreeTaskQueueCore)]) \l0x0050: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$this$loop$iv' kotlinx.coroutines.internal.LockFreeTaskQueueCore)]) = (r26 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newHead' int)]) \l0x0052: INVOKE  (r19 I:long) = \l  (r2 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion)\l  (r9 I:long A[D('state' long)])\l  (r7 I:int A[D('$this$loop$iv' kotlinx.coroutines.internal.LockFreeTaskQueueCore)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeTaskQueueCore.Companion.updateHead(long, int):long A[MD:(long, int):long (m)]\l0x0056: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r24 I:??[OBJECT, ARRAY]) \l0x0058: MOVE  (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('head' int)]) \l0x005a: MOVE  (r2 I:??[long, double]) = (r9 I:??[long, double] A[D('state' long)]) \l0x005b: MOVE  (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('head$iv' int)]) \l0x005d: MOVE  (r23 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('tail$iv' int)]) \l0x005f: MOVE  (r4 I:??[long, double] A[D('head$iv' int)]) = (r19 I:??[long, double]) \l0x0061: INVOKE  (r0 I:boolean) = (r0 I:java.util.concurrent.atomic.AtomicLongFieldUpdater), (r1 I:java.lang.Object), (r2 I:long), (r4 I:long) type: VIRTUAL call: java.util.concurrent.atomic.AtomicLongFieldUpdater.compareAndSet(java.lang.Object, long, long):boolean A[MD:(T, long, long):boolean (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0065|0x0065: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0072 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0072|LOOP_END\lLOOP:0: B:28:0x0005\-\>B:46:0x0072\l|0x0074: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY] A[D('$this$loop$iv' kotlinx.coroutines.internal.LockFreeTaskQueueCore)])  (LINE:329)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0067|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0067|0x0067: IGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceArray) = (r6 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.array java.util.concurrent.atomic.AtomicReferenceArray  (LINE:207)\l0x0069: IGET  (r1 I:int) = (r6 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.mask int \l0x006b: ARITH  (r1 I:??[int, boolean]) = (r21 I:??[int, boolean, short, byte, char] A[D('head' int)]) & (r1 I:??[int, boolean, short, byte, char]) \l0x006d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x006e: INVOKE  (r0 I:java.util.concurrent.atomic.AtomicReferenceArray), (r1 I:int), (r2 I:java.lang.Object) type: VIRTUAL call: java.util.concurrent.atomic.AtomicReferenceArray.set(int, java.lang.Object):void A[MD:(int, E):void (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0071|RETURN\l|0x0071: RETURN  (r2 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\>)  (LINE:208)\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_48 [shape=record,label="{48\:\ 0x0045|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0045|0x0045: INVOKE  (r0 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) = (r24 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeTaskQueueCore.next():kotlinx.coroutines.internal.LockFreeTaskQueueCore A[MD:():kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\> (m)] (LINE:204)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0049|RETURN\l|0x0049: RETURN  (r0 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\>) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0033|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0033|0x0033: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0035: INVOKE  (r0 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0038|0x0038: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0039|0x0039: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r25 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('oldHead' int)]) \l}"];
MethodNode[shape=record,label="{private final kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\> kotlinx.coroutines.internal.LockFreeTaskQueueCore.removeSlowPath((r24 'this' I:kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\> A[IMMUTABLE_TYPE, THIS]), (r25 I:int A[D('oldHead' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:int A[D('newHead' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:41:0x0049 \-\> B:26:?, CROSS_EDGE: B:45:0x0071 \-\> B:26:?, BACK_EDGE: B:46:0x0072 \-\> B:28:0x0005, CROSS_EDGE: B:31:0x002d \-\> B:33:0x0030, CROSS_EDGE: B:37:0x0039 \-\> B:38:0x003b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x000d: r0 '$this$withState$iv' J\l  0x002b\-0x0030: r0 '$i$a$\-assert\-LockFreeTaskQueueCore$removeSlowPath$1$1$1' I\l  0x0004\-0x0052: r7 '$this$loop$iv' Lkotlinx\/coroutines\/internal\/LockFreeTaskQueueCore;\l  0x0020\-0x005a: r3 'head' I\l  0x0015\-0x005f: r4 'head$iv' I\l  0x001f\-0x005f: r5 'tail$iv' I\l  0x000b\-0x0073: r12 'this_$iv' Lkotlinx\/coroutines\/internal\/LockFreeTaskQueueCore$Companion;\l  0x000d\-0x0073: r13 '$this$withState$iv' J\l  0x000e\-0x0073: r15 '$i$f$withState' I\l  0x0022\-0x0073: r16 '$noName_1' I\l  0x0024\-0x0073: r17 '$i$a$\-withState\-LockFreeTaskQueueCore$removeSlowPath$1$1' I\l  0x005a\-0x0073: r21 'head' I\l  0x005f\-0x0073: r22 'head$iv' I\l  0x005f\-0x0073: r23 'tail$iv' I\l  0x0008\-0x0074: r9 'state' J\l  0x0009\-0x0074: r11 '$i$a$\-loop\-LockFreeTaskQueueCore$removeSlowPath$1' I\l  0x0005\-0x0076: r8 '$i$f$loop' I\l  0x0052\-0x0076: r18 '$this$loop$iv' Lkotlinx\/coroutines\/internal\/LockFreeTaskQueueCore;\l  \-1 \-0x0076: r25 'oldHead' I\l  \-1 \-0x0076: r26 'newHead' I\lTYPE_VARS: [E]\lSIGNATURE: (II)Lkotlinx\/coroutines\/internal\/LockFreeTaskQueueCore\<TE;\>;\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_37;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_38[style=dashed];
Node_33 -> Node_47;
Node_38 -> Node_39;
Node_39 -> Node_42;
Node_39 -> Node_48[style=dashed];
Node_42 -> Node_43;
Node_43 -> Node_46;
Node_43 -> Node_49[style=dashed];
Node_46 -> Node_28;
Node_49 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_26;
Node_48 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_26;
Node_47 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_26;
Node_37 -> Node_38;
}

