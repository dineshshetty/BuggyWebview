digraph "CFG forkotlinx.coroutines.internal.LockFreeTaskQueueCore.removeFirstOrNull()Ljava\/lang\/Object;" {
Node_40 [shape=record,label="{40\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0000|r7 = r25\lr8 = 0\l}"];
Node_43 [shape=record,label="{43\:\ 0x0005|LOOP_START\lLOOP:0: B:43:0x0005\-\>B:65:0x0084\lPHI: r7 r8 \l  PHI: (r7v1 '$this$loop$iv' kotlinx.coroutines.internal.LockFreeTaskQueueCore) = (r7v0 '$this$loop$iv' kotlinx.coroutines.internal.LockFreeTaskQueueCore), (r7v5 '$this$loop$iv' kotlinx.coroutines.internal.LockFreeTaskQueueCore) binds: [B:42:0x0000, B:65:0x0084] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 '$i$f$loop' int) = (r8v0 '$i$f$loop' int), (r8v3 '$i$f$loop' int) binds: [B:42:0x0000, B:65:0x0084] A[DONT_GENERATE, DONT_INLINE]\l|long r9 = r7._state\l}"];
Node_44 [shape=record,label="{44\:\ 0x0010|if (((kotlinx.coroutines.internal.LockFreeTaskQueueCore.FROZEN_MASK & r9) \> 0 ? 1 : ((kotlinx.coroutines.internal.LockFreeTaskQueueCore.FROZEN_MASK & r9) == 0 ? 0 : \-1)) == 0) goto L4\l}"];
Node_47 [shape=record,label="{47\:\ 0x0015|kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion r12 = kotlinx.coroutines.internal.LockFreeTaskQueueCore.Companion\lint r4 = (int) ((kotlinx.coroutines.internal.LockFreeTaskQueueCore.HEAD_MASK & r9) \>\> 0)\lint r5 = (int) ((kotlinx.coroutines.internal.LockFreeTaskQueueCore.TAIL_MASK & r9) \>\> 30)\lint r0 = r25.mask\lr18 = r7\l}"];
Node_48 [shape=record,label="{48\:\ 0x003a|if ((r5 & r0) != (r4 & r0)) goto L6\l}"];
Node_50 [shape=record,label="{50\:\ 0x003d|java.lang.Object r3 = r25.array.get(r0 & r4)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0044|if (r3 != null) goto L16\l}"];
Node_52 [shape=record,label="{52\:\ 0x0046}"];
Node_53 [shape=record,label="{53\:\ 0x0048|if (r25.singleConsumer == false) goto L10\l}"];
Node_55 [shape=record,label="{55\:\ 0x004b|r21 = r8\l}"];
Node_77 [shape=record,label="{77\:\ 0x0084|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x0084|LOOP_END\lLOOP:0: B:43:0x0005\-\>B:65:0x0084\lPHI: r21 \l  PHI: (r21v1 '$i$f$loop' int) = (r21v0 '$i$f$loop' int), (r21v2 '$i$f$loop' int) binds: [B:78:0x0084, B:77:0x0084] A[DONT_GENERATE, DONT_INLINE]\l|r7 = r18\lr8 = r21\l}"];
Node_72 [shape=record,label="{72\:\ 0x004a|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x004a|RETURN\l|return null\l}"];
Node_41 [shape=record,label="{41\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_56 [shape=record,label="{56\:\ 0x004e}"];
Node_57 [shape=record,label="{57\:\ 0x0050|if ((r3 instanceof kotlinx.coroutines.internal.LockFreeTaskQueueCore.Placeholder) == false) goto L18\l}"];
Node_59 [shape=record,label="{59\:\ 0x0053|r1 = 1073741823 & (r4 + 1)\lr21 = r8\l}"];
Node_60 [shape=record,label="{60\:\ 0x0074|if (kotlinx.coroutines.internal.LockFreeTaskQueueCore._state$FU.compareAndSet(r25, r9, kotlinx.coroutines.internal.LockFreeTaskQueueCore.Companion.updateHead(r9, r1)) == false) goto L20\l}"];
Node_63 [shape=record,label="{63\:\ 0x0080}"];
Node_64 [shape=record,label="{64\:\ 0x0082|if (r25.singleConsumer != false) goto L22\l}"];
Node_71 [shape=record,label="{71\:\ 0x008a|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x008a|r0 = r25\l}"];
Node_67 [shape=record,label="{67\:\ 0x008c|LOOP_START\lLOOP:1: B:67:0x008c\-\>B:70:0x0094\lPHI: r0 \l  PHI: (r0v20 'cur' kotlinx.coroutines.internal.LockFreeTaskQueueCore) = (r0v19 'cur' kotlinx.coroutines.internal.LockFreeTaskQueueCore), (r0v21 'cur' kotlinx.coroutines.internal.LockFreeTaskQueueCore) binds: [B:66:0x008a, B:70:0x0094] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.internal.LockFreeTaskQueueCore r1 = r0.removeSlowPath(r4, r1)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0091|if (r1 != null) goto L26\l}"];
Node_70 [shape=record,label="{70\:\ 0x0094|LOOP_END\lLOOP:1: B:67:0x008c\-\>B:70:0x0094\l|r0 = r1\l}"];
Node_79 [shape=record,label="{79\:\ 0x0093|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x0093|RETURN\l|return r3\l}"];
Node_78 [shape=record,label="{78\:\ 0x0084|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x0076|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0076|r25.array.set(r25.mask & r4, null)\l}"];
Node_62 [shape=record,label="{62\:\ 0x007f|RETURN\l|return r3\l}"];
Node_74 [shape=record,label="{74\:\ 0x0052|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x0052|RETURN\l|return null\l}"];
Node_76 [shape=record,label="{76\:\ 0x003c|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x003c|RETURN\l|return null\l}"];
Node_73 [shape=record,label="{73\:\ 0x0012|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0012}"];
Node_46 [shape=record,label="{46\:\ 0x0014|RETURN\l|return kotlinx.coroutines.internal.LockFreeTaskQueueCore.REMOVE_FROZEN\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.internal.LockFreeTaskQueueCore.removeFirstOrNull((r25v0 'this' kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:49:0x003c \-\> B:41:?, CROSS_EDGE: B:54:0x004a \-\> B:41:?, BACK_EDGE: B:65:0x0084 \-\> B:43:0x0005, CROSS_EDGE: B:58:0x0052 \-\> B:41:?, CROSS_EDGE: B:62:0x007f \-\> B:41:?, CROSS_EDGE: B:64:0x0082 \-\> B:65:0x0084, CROSS_EDGE: B:69:0x0093 \-\> B:41:?, BACK_EDGE: B:70:0x0094 \-\> B:67:0x008c\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_40;Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_47;
Node_44 -> Node_73[style=dashed];
Node_47 -> Node_48;
Node_48 -> Node_50;
Node_48 -> Node_76[style=dashed];
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_56;
Node_52 -> Node_53;
Node_53 -> Node_55;
Node_53 -> Node_72[style=dashed];
Node_55 -> Node_77;
Node_77 -> Node_65;
Node_65 -> Node_43;
Node_72 -> Node_54;
Node_54 -> Node_41;
Node_56 -> Node_57;
Node_57 -> Node_59;
Node_57 -> Node_74[style=dashed];
Node_59 -> Node_60;
Node_60 -> Node_63;
Node_60 -> Node_75[style=dashed];
Node_63 -> Node_64;
Node_64 -> Node_71;
Node_64 -> Node_78[style=dashed];
Node_71 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_70;
Node_68 -> Node_79[style=dashed];
Node_70 -> Node_67;
Node_79 -> Node_69;
Node_69 -> Node_41;
Node_78 -> Node_65;
Node_75 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_41;
Node_74 -> Node_58;
Node_58 -> Node_41;
Node_76 -> Node_49;
Node_49 -> Node_41;
Node_73 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_41;
}

