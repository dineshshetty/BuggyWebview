digraph "CFG forkotlinx.coroutines.internal.LockFreeTaskQueueCore.\<init\>(IZ)V" {
subgraph cluster_Region_697009748 {
label = "R(2:1|(2:(1:15)|(1:(2:(1:10)|(1:13)))))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0000|r5.capacity = r6\lr5.singleConsumer = r7\lint int r0 = r6 \- 1\lr5.mask = r0\lr5.array = new java.util.concurrent.atomic.AtomicReferenceArray(r6)\l}"];
subgraph cluster_Region_2082221183 {
label = "R(2:(1:15)|(1:(2:(1:10)|(1:13))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2025905812 {
label = "IF [B:24:0x0026] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0026|if ((r0 \<= 1073741823) == false) goto L14\l}"];
subgraph cluster_Region_1168942356 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0043|throw new java.lang.IllegalStateException(\"Check failed.\".toString())\l}"];
}
}
subgraph cluster_Region_1236500165 {
label = "R(1:(2:(1:10)|(1:13)))";
node [shape=record,color=blue];
subgraph cluster_Region_1170411375 {
label = "R(2:(1:10)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1309548089 {
label = "IF [B:28:0x002c] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x002c|PHI: r1 \l  PHI: (r1v5 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|if (((r0 & r6) == 0) != false) goto L10\l}"];
subgraph cluster_Region_1486994556 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x002f|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_2013603449 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0039|throw new java.lang.IllegalStateException(\"Check failed.\".toString())\l}"];
}
}
}
}
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x001f}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0021}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0024|PHI: r3 \l  PHI: (r3v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0028}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0029}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x002b}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0030}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x003a}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0023}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.internal.LockFreeTaskQueueCore.\<init\>((r5v0 'this' kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\> A[IMMUTABLE_TYPE, THIS]), (r6v0 'capacity' int A[D('capacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'singleConsumer' boolean A[D('singleConsumer' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0039 \-\> B:18:?, CROSS_EDGE: B:26:0x0029 \-\> B:28:0x002c, CROSS_EDGE: B:33:0x0043 \-\> B:18:?, CROSS_EDGE: B:22:0x0023 \-\> B:23:0x0024\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_17;Node_19 -> Node_20;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_32;
Node_33 -> Node_18;
Node_28 -> Node_29;
Node_28 -> Node_30[style=dashed];
Node_29 -> Node_18;
Node_31 -> Node_18;
Node_17 -> Node_19;
Node_20 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_22 -> Node_23;
}

