digraph "CFG forkotlinx.coroutines.internal.LockFreeTaskQueueCore.addLast(Ljava\/lang\/Object;)I" {
Node_46 [shape=record,label="{46\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_48 [shape=record,label="{48\:\ 0x0000|0x0000: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r27 I:??[OBJECT, ARRAY])  (LINE:105)\l0x0002: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r28 I:??[OBJECT, ARRAY] A[D('element' java.lang.Object)]) \l0x0004: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r27 I:??[OBJECT, ARRAY]) \l0x0006: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0007|LOOP_START\lLOOP:0: B:49:0x0007\-\>B:87:0x0007\l|0x0008: IGET  (r10 I:long) = \l  (r8 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore A[D('$this$loop$iv' kotlinx.coroutines.internal.LockFreeTaskQueueCore)])\l kotlinx.coroutines.internal.LockFreeTaskQueueCore._state long  (LINE:320)\l0x000a: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: CONST  (r0 I:??[long, double]) = (3458764513820540928(0x3000000000000000, double:1.727233711018889E\-77) ??[long, double])  (LINE:106)\l0x000d: ARITH  (r0 I:long) = (r0 I:long) & (r10 I:long A[D('state' long)]) \l0x000e: CONST  (r13 I:??[long, double]) = (0 ??[long, double]) \l0x0010: CMP_L  (r2 I:int) = (r0 I:long), (r13 I:long) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0012|0x0012: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x001b \l}"];
Node_53 [shape=record,label="{53\:\ 0x001b|0x001b: SGET  (r15 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion) =  kotlinx.coroutines.internal.LockFreeTaskQueueCore.Companion kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion  (LINE:107)\l0x001d: MOVE  (r16 I:??[long, double]) = (r10 I:??[long, double] A[D('state' long)]) \l0x001f: CONST  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0021: CONST  (r0 I:??[long, double]) = (1073741823(0x3fffffff, double:5.304989472E\-315) ??[long, double])  (LINE:321)\l0x0024: ARITH  (r0 I:long) = (r16 I:long A[D('$this$withState$iv' long)]) & (r0 I:long) \l0x0026: CONST  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0028: ARITH  (r0 I:long) = (r0 I:long) \>\> (r19 I:long) \l0x002a: CAST (r4 I:int) = (int) (r0 I:long) \l0x002b: CONST  (r0 I:??[long, double]) = (1152921503533105152(0xfffffffc0000000, double:1.2882296003504729E\-231) ??[long, double])  (LINE:322)\l0x0030: ARITH  (r0 I:long) = (r16 I:long A[D('$this$withState$iv' long)]) & (r0 I:long) \l0x0032: CONST  (r2 I:??[int, float, short, byte, char]) = (30 ??[int, float, short, byte, char]) \l0x0034: ARITH  (r0 I:long) = (r0 I:long) \>\> (r2 I:long) \l0x0035: CAST (r5 I:int) = (int) (r0 I:long) \l0x0036: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('head$iv' int)])  (LINE:323)\l0x0038: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('tail$iv' int)]) \l0x0039: CONST  (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x003b: IGET  (r3 I:int) = (r6 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.mask int  (LINE:108)\l0x003d: ARITH  (r0 I:int) = (r2 I:int A[D('tail' int)]) + (2 int)  (LINE:111)\l0x003f: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (r3 I:??[int, boolean, short, byte, char] A[D('mask' int)]) \l0x0040: ARITH  (r1 I:??[int, boolean]) = (r20 I:??[int, boolean, short, byte, char] A[D('head' int)]) & (r3 I:??[int, boolean, short, byte, char] A[D('mask' int)]) \l0x0042: CONST  (r22 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0044|0x0044: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0047 \l}"];
Node_56 [shape=record,label="{56\:\ 0x0047|0x0047: IGET  (r0 I:boolean) = (r6 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.singleConsumer boolean  (LINE:114)\l0x0049: CONST  (r1 I:??[int, float, short, byte, char]) = (1073741823(0x3fffffff, float:1.9999999) ??[int, float, short, byte, char]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x004c|0x004c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:0x0068 \l}"];
Node_58 [shape=record,label="{58\:\ 0x004e|0x004e: IGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceArray) = (r6 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.array java.util.concurrent.atomic.AtomicReferenceArray \l0x0050: ARITH  (r13 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char] A[D('tail' int)]) & (r3 I:??[int, boolean, short, byte, char] A[D('mask' int)]) \l0x0052: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.concurrent.atomic.AtomicReferenceArray), (r13 I:int) type: VIRTUAL call: java.util.concurrent.atomic.AtomicReferenceArray.get(int):java.lang.Object A[MD:(int):E (c)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x0056|0x0056: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:82:0x0068 \l}"];
Node_82 [shape=record,label="{82\:\ 0x0068|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x0068|0x0068: ARITH  (r0 I:int) = (r2 I:int A[D('tail' int)]) + (1 int)  (LINE:126)\l0x006a: ARITH  (r13 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (r1 I:??[int, boolean, short, byte, char]) \l0x006c: SGET  (r0 I:java.util.concurrent.atomic.AtomicLongFieldUpdater) =  kotlinx.coroutines.internal.LockFreeTaskQueueCore._state$FU java.util.concurrent.atomic.AtomicLongFieldUpdater  (LINE:127)\l0x006e: SGET  (r1 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion) =  kotlinx.coroutines.internal.LockFreeTaskQueueCore.Companion kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion \l0x0070: INVOKE  (r23 I:long) = \l  (r1 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion)\l  (r10 I:long A[D('state' long)])\l  (r13 I:int A[D('newTail' int)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeTaskQueueCore.Companion.updateTail(long, int):long A[MD:(long, int):long (m)]\l0x0074: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r27 I:??[OBJECT, ARRAY]) \l0x0076: MOVE  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('tail' int)]) \l0x0077: MOVE  (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('mask' int)]) \l0x0079: MOVE  (r2 I:??[long, double] A[D('tail' int)]) = (r10 I:??[long, double] A[D('state' long)]) \l0x007a: MOVE  (r25 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('head$iv' int)]) \l0x007c: MOVE  (r26 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('tail$iv' int)]) \l0x007e: MOVE  (r4 I:??[long, double] A[D('head$iv' int)]) = (r23 I:??[long, double]) \l0x0080: INVOKE  (r0 I:boolean) = (r0 I:java.util.concurrent.atomic.AtomicLongFieldUpdater), (r1 I:java.lang.Object), (r2 I:long), (r4 I:long) type: VIRTUAL call: java.util.concurrent.atomic.AtomicLongFieldUpdater.compareAndSet(java.lang.Object, long, long):boolean A[MD:(T, long, long):boolean (c)]\l}"];
Node_68 [shape=record,label="{68\:\ 0x0084|0x0084: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:88:0x0007 \l}"];
Node_85 [shape=record,label="{85\:\ 0x0086|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x0086|0x0086: IGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceArray) = (r6 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.array java.util.concurrent.atomic.AtomicReferenceArray  (LINE:129)\l0x0088: ARITH  (r1 I:??[int, boolean]) = (r14 I:??[int, boolean, short, byte, char] A[D('tail' int)]) & (r22 I:??[int, boolean, short, byte, char] A[D('mask' int)]) \l0x008a: INVOKE  (r0 I:java.util.concurrent.atomic.AtomicReferenceArray), (r1 I:int), (r7 I:java.lang.Object) type: VIRTUAL call: java.util.concurrent.atomic.AtomicReferenceArray.set(int, java.lang.Object):void A[MD:(int, E):void (c)]\l0x008d: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r27 I:??[OBJECT, ARRAY])  (LINE:131)\l}"];
Node_70 [shape=record,label="{70\:\ 0x008f|LOOP_START\lLOOP:1: B:70:0x008f\-\>B:76:0x00a7\l|0x0090: IGET  (r1 I:long) = (r0 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore A[D('cur' kotlinx.coroutines.internal.LockFreeTaskQueueCore)]) kotlinx.coroutines.internal.LockFreeTaskQueueCore._state long  (LINE:133)\l0x0092: CONST  (r3 I:??[long, double]) = (1152921504606846976(0x1000000000000000, double:1.2882297539194267E\-231) ??[long, double]) \l0x0094: ARITH  (r1 I:long) = (r1 I:long) & (r3 I:long) \l0x0095: CONST  (r3 I:??[long, double]) = (0 ??[long, double]) \l0x0097: CMP_L  (r5 I:int) = (r1 I:long), (r3 I:long) \l}"];
Node_71 [shape=record,label="{71\:\ 0x0099|0x0099: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:73:0x009c \l}"];
Node_73 [shape=record,label="{73\:\ 0x009c|0x009c: INVOKE  (r1 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) = (r0 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore A[D('cur' kotlinx.coroutines.internal.LockFreeTaskQueueCore)]) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeTaskQueueCore.next():kotlinx.coroutines.internal.LockFreeTaskQueueCore A[MD:():kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\> (m)] (LINE:134)\l0x00a0: INVOKE  (r1 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) = (r1 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore), (r14 I:int A[D('tail' int)]), (r7 I:java.lang.Object) type: DIRECT call: kotlinx.coroutines.internal.LockFreeTaskQueueCore.fillPlaceholder(int, java.lang.Object):kotlinx.coroutines.internal.LockFreeTaskQueueCore A[MD:(int, E):kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\> (m)]\l}"];
Node_74 [shape=record,label="{74\:\ 0x00a4|0x00a4: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:76:0x00a7 \l}"];
Node_76 [shape=record,label="{76\:\ 0x00a7|LOOP_END\lLOOP:1: B:70:0x008f\-\>B:76:0x00a7\l|0x00a7: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('cur' kotlinx.coroutines.internal.LockFreeTaskQueueCore)]) = (r1 I:??[OBJECT, ARRAY])  (LINE:134)\l}"];
Node_90 [shape=record,label="{90\:\ 0x00a6|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x00a6|RETURN\l|0x00a6: RETURN  (r19 I:int)  (LINE:136)\l}"];
Node_47 [shape=record,label="{47\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_91 [shape=record,label="{91\:\ 0x00a6|SYNTHETIC\l}"];
Node_88 [shape=record,label="{88\:\ 0x0007|SYNTHETIC\l}"];
Node_87 [shape=record,label="{87\:\ 0x0007|LOOP_END\lSYNTHETIC\lLOOP:0: B:49:0x0007\-\>B:87:0x0007\l}"];
Node_86 [shape=record,label="{86\:\ 0x0058|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x0058|0x0058: IGET  (r0 I:int) = (r6 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.capacity int  (LINE:120)\l0x005a: CONST  (r13 I:??[int, float, short, byte, char]) = (1024(0x400, float:1.435E\-42) ??[int, float, short, byte, char]) \l}"];
Node_61 [shape=record,label="{61\:\ 0x005c|0x005c: IF  (r0 I:??[int, byte, short, char]) \< (r13 I:??[int, byte, short, char])  \-\> B:83:0x0067 \l}"];
Node_62 [shape=record,label="{62\:\ 0x005e|0x005e: ARITH  (r13 I:int) = (r2 I:int A[D('tail' int)]) \- (r20 I:int A[D('head' int)]) \l0x0060: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r13 I:??[int, boolean, short, byte, char]) \l0x0061: ARITH  (r0 I:int) = (r0 I:int) \>\> (1 int) \l}"];
Node_63 [shape=record,label="{63\:\ 0x0063|0x0063: IF  (r1 I:??[int, byte, short, char]) \<= (r0 I:??[int, byte, short, char])  \-\> B:89:0x0007 \l}"];
Node_80 [shape=record,label="{80\:\ 0x0067|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0067|RETURN\l|0x0067: RETURN  (r22 I:int)  (LINE:121)\l}"];
Node_89 [shape=record,label="{89\:\ 0x0007|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x0067|SYNTHETIC\l}"];
Node_84 [shape=record,label="{84\:\ 0x0068|SYNTHETIC\l}"];
Node_81 [shape=record,label="{81\:\ 0x0046|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0046|RETURN\l|0x0046: RETURN  (r22 I:int) \l}"];
Node_79 [shape=record,label="{79\:\ 0x0014|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0014|0x0014: SGET  (r0 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion) =  kotlinx.coroutines.internal.LockFreeTaskQueueCore.Companion kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion \l0x0016: INVOKE  (r0 I:int) = (r0 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion), (r10 I:long A[D('state' long)]) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeTaskQueueCore.Companion.addFailReason(long):int A[MD:(long):int (m)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x001a|RETURN\l|0x001a: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public final int kotlinx.coroutines.internal.LockFreeTaskQueueCore.addLast((r27 'this' I:kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\> A[IMMUTABLE_TYPE, THIS]), (r28 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:55:0x0046 \-\> B:47:?, CROSS_EDGE: B:66:0x0067 \-\> B:47:?, BACK_EDGE: B:63:0x0063 \-\> B:49:0x0007, CROSS_EDGE: B:61:0x005c \-\> B:66:0x0067, CROSS_EDGE: B:75:0x00a6 \-\> B:47:?, BACK_EDGE: B:76:0x00a7 \-\> B:70:0x008f, CROSS_EDGE: B:71:0x0099 \-\> B:75:0x00a6, BACK_EDGE: B:68:0x0084 \-\> B:49:0x0007, CROSS_EDGE: B:57:0x004c \-\> B:67:0x0068\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0039\-0x0079: r2 'tail' I\l  0x003d\-0x0079: r3 'mask' I\l  0x002b\-0x007e: r4 'head$iv' I\l  0x0036\-0x007e: r5 'tail$iv' I\l  0x008f\-0x00a9: r0 'cur' Lkotlinx\/coroutines\/internal\/LockFreeTaskQueueCore;\l  0x006c\-0x00aa: r13 'newTail' I\l  0x0079\-0x00aa: r14 'tail' I\l  0x001d\-0x00aa: r15 'this_$iv' Lkotlinx\/coroutines\/internal\/LockFreeTaskQueueCore$Companion;\l  0x001f\-0x00aa: r16 '$this$withState$iv' J\l  0x0021\-0x00aa: r18 '$i$f$withState' I\l  0x0038\-0x00aa: r20 'head' I\l  0x003b\-0x00aa: r21 '$i$a$\-withState\-LockFreeTaskQueueCore$addLast$1$1' I\l  0x0079\-0x00aa: r22 'mask' I\l  0x007e\-0x00aa: r25 'head$iv' I\l  0x007e\-0x00aa: r26 'tail$iv' I\l  0x000a\-0x00ab: r10 'state' J\l  0x000b\-0x00ab: r12 '$i$a$\-loop\-LockFreeTaskQueueCore$addLast$1' I\l  0x0006\-0x00ac: r8 '$this$loop$iv' Lkotlinx\/coroutines\/internal\/LockFreeTaskQueueCore;\l  0x0007\-0x00ac: r9 '$i$f$loop' I\l  \-1 \-0x00ac: r28 'element' Ljava\/lang\/Object;\lTYPE_VARS: [E]\lSIGNATURE: (TE;)I\l}"];
MethodNode -> Node_46;Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_53;
Node_50 -> Node_79[style=dashed];
Node_53 -> Node_54;
Node_54 -> Node_56;
Node_54 -> Node_81[style=dashed];
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_84;
Node_58 -> Node_59;
Node_59 -> Node_82;
Node_59 -> Node_86[style=dashed];
Node_82 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_85[style=dashed];
Node_68 -> Node_88;
Node_85 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_71;
Node_71 -> Node_73;
Node_71 -> Node_91[style=dashed];
Node_73 -> Node_74;
Node_74 -> Node_76;
Node_74 -> Node_90[style=dashed];
Node_76 -> Node_70;
Node_90 -> Node_75;
Node_75 -> Node_47;
Node_91 -> Node_75;
Node_88 -> Node_87;
Node_87 -> Node_49;
Node_86 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_83;
Node_62 -> Node_63;
Node_63 -> Node_80[style=dashed];
Node_63 -> Node_89;
Node_80 -> Node_66;
Node_66 -> Node_47;
Node_89 -> Node_87;
Node_83 -> Node_66;
Node_84 -> Node_67;
Node_81 -> Node_55;
Node_55 -> Node_47;
Node_79 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_47;
}

