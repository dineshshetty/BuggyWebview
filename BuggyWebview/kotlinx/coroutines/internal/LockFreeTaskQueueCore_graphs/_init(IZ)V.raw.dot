digraph "CFG forkotlinx.coroutines.internal.LockFreeTaskQueueCore.\<init\>(IZ)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: INVOKE  (r5 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:76)\l0x0003: IPUT  (r6 I:int A[D('capacity' int)]), (r5 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.capacity int  (LINE:77)\l0x0005: IPUT  (r7 I:boolean A[D('singleConsumer' boolean)]), (r5 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.singleConsumer boolean  (LINE:78)\l0x0007: ARITH  (r0 I:int) = (r6 I:int A[D('capacity' int)]) + (\-1 int)  (LINE:80)\l0x0009: IPUT  (r0 I:int), (r5 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.mask int \l0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:81)\l0x000c: IPUT  (r1 I:java.lang.Object), (r5 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore._next java.lang.Object \l0x000e: CONST  (r1 I:??[long, double]) = (0 ??[long, double])  (LINE:82)\l0x0010: IPUT  (r1 I:long), (r5 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore._state long \l0x0012: NEW_INSTANCE  (r1 I:java.util.concurrent.atomic.AtomicReferenceArray) =  java.util.concurrent.atomic.AtomicReferenceArray  (LINE:83)\l0x0014: INVOKE  (r1 I:java.util.concurrent.atomic.AtomicReferenceArray), (r6 I:int A[D('capacity' int)]) type: DIRECT call: java.util.concurrent.atomic.AtomicReferenceArray.\<init\>(int):void A[MD:(int):void (c)]\l0x0017: IPUT  (r1 I:java.util.concurrent.atomic.AtomicReferenceArray), (r5 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.array java.util.concurrent.atomic.AtomicReferenceArray \l0x001a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:86)\l0x001b: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001c: CONST  (r3 I:??[int, float, short, byte, char]) = (1073741823(0x3fffffff, float:1.9999999) ??[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x001f|0x001f: IF  (r0 I:??[int, byte, short, char]) \> (r3 I:??[int, byte, short, char])  \-\> B:22:0x0023 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0021|0x0021: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0024|0x0024: CONST_STR  (r4 I:java.lang.String) =  \"Check failed.\" \l}"];
Node_24 [shape=record,label="{24\:\ 0x0026|0x0026: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x003a \l}"];
Node_25 [shape=record,label="{25\:\ 0x0028|0x0028: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (r6 I:??[int, boolean, short, byte, char] A[D('capacity' int)])  (LINE:87)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0029|0x0029: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x002c \l}"];
Node_27 [shape=record,label="{27\:\ 0x002b|0x002b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x002c|0x002c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0030 \l}"];
Node_29 [shape=record,label="{29\:\ 0x002f|RETURN\l|0x002f: RETURN    (LINE:76)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0030|0x0030: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:87)\l0x0032: INVOKE  (r1 I:java.lang.String) = (r4 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0036: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0039|0x0039: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_32 [shape=record,label="{32\:\ 0x003a|0x003a: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:86)\l0x003c: INVOKE  (r1 I:java.lang.String) = (r4 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0040: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0043|0x0043: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0023|0x0023: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.internal.LockFreeTaskQueueCore.\<init\>((r5 'this' I:kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\> A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('capacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[D('singleConsumer' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0039 \-\> B:18:?, CROSS_EDGE: B:26:0x0029 \-\> B:28:0x002c, CROSS_EDGE: B:33:0x0043 \-\> B:18:?, CROSS_EDGE: B:22:0x0023 \-\> B:23:0x0024\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0043: r6 'capacity' I\l  \-1 \-0x0043: r7 'singleConsumer' Z\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_32;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_18;
Node_30 -> Node_31;
Node_31 -> Node_18;
Node_32 -> Node_33;
Node_33 -> Node_18;
Node_22 -> Node_23;
}

