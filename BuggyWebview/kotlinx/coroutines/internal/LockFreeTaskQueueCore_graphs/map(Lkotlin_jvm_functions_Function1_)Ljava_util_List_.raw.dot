digraph "CFG forkotlinx.coroutines.internal.LockFreeTaskQueueCore.map(Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:246)\l0x0002: IGET  (r1 I:int) = (r14 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.capacity int \l0x0004: INVOKE  (r0 I:java.util.ArrayList), (r1 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0007: SGET  (r1 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion) =  kotlinx.coroutines.internal.LockFreeTaskQueueCore.Companion kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion  (LINE:247)\l0x0009: IGET  (r2 I:long) = (r14 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore._state long \l0x000b: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: CONST  (r5 I:??[long, double]) = (1073741823(0x3fffffff, double:5.304989472E\-315) ??[long, double])  (LINE:344)\l0x000f: ARITH  (r5 I:long) = (r5 I:long) & (r2 I:long A[D('$this$withState$iv' long)]) \l0x0010: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0011: ARITH  (r5 I:long) = (r5 I:long) \>\> (r7 I:long) \l0x0012: CAST (r6 I:int) = (int) (r5 I:long) \l0x0013: CONST  (r7 I:??[long, double]) = (1152921503533105152(0xfffffffc0000000, double:1.2882296003504729E\-231) ??[long, double])  (LINE:345)\l0x0018: ARITH  (r7 I:long) = (r7 I:long) & (r2 I:long A[D('$this$withState$iv' long)]) \l0x0019: CONST  (r5 I:??[int, float, short, byte, char]) = (30 ??[int, float, short, byte, char]) \l0x001b: ARITH  (r7 I:long) = (r7 I:long) \>\> (r5 I:long) \l0x001c: CAST (r5 I:int) = (int) (r7 I:long) \l0x001d: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('head$iv' int)])  (LINE:346)\l0x001e: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('tail$iv' int)]) \l0x001f: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0020: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('head' int)])  (LINE:248)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0021|LOOP_START\lLOOP:0: B:20:0x0021\-\>B:27:0x003d\l|0x0021: IGET  (r11 I:int) = (r14 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.mask int  (LINE:249)\l0x0023: ARITH  (r12 I:??[int, boolean]) = (r10 I:??[int, boolean, short, byte, char] A[D('index' int)]) & (r11 I:??[int, boolean, short, byte, char]) \l0x0025: ARITH  (r13 I:??[int, boolean]) = (r8 I:??[int, boolean, short, byte, char] A[D('tail' int)]) & (r11 I:??[int, boolean, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0027|0x0027: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0040 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0029|0x0029: IGET  (r12 I:java.util.concurrent.atomic.AtomicReferenceArray) = (r14 I:kotlinx.coroutines.internal.LockFreeTaskQueueCore) kotlinx.coroutines.internal.LockFreeTaskQueueCore.array java.util.concurrent.atomic.AtomicReferenceArray  (LINE:251)\l0x002b: ARITH  (r11 I:??[int, boolean]) = (r11 I:??[int, boolean, short, byte, char]) & (r10 I:??[int, boolean, short, byte, char] A[D('index' int)]) \l0x002c: INVOKE  (r11 I:java.lang.Object) = (r12 I:java.util.concurrent.atomic.AtomicReferenceArray), (r11 I:int) type: VIRTUAL call: java.util.concurrent.atomic.AtomicReferenceArray.get(int):java.lang.Object A[MD:(int):E (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0030|0x0030: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('element' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x003d  (LINE:253)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0032|0x0032: INSTANCE_OF  (r12 I:boolean) = (r11 I:??[OBJECT, ARRAY] A[D('element' java.lang.Object)]) kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder \l}"];
Node_25 [shape=record,label="{25\:\ 0x0034|0x0034: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x003d \l}"];
Node_26 [shape=record,label="{26\:\ 0x0036|0x0036: INVOKE  (r12 I:java.lang.Object) = \l  (r15 I:kotlin.jvm.functions.Function1 A[D('transform' kotlin.jvm.functions.Function1)])\l  (r11 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x003a: INVOKE  (r0 I:java.util.ArrayList A[D('res' java.util.ArrayList)]), (r12 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x003d|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x003d|LOOP_END\lLOOP:0: B:20:0x0021\-\>B:27:0x003d\l|0x003d: ARITH  (r10 I:int) = (r10 I:int A[D('index' int)]) + (1 int)  (LINE:254)\l}"];
Node_33 [shape=record,label="{33\:\ 0x003d|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x003d|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0040|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0040|0x0041: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this_$iv' kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion)]) = (r0 I:??[OBJECT, ARRAY] A[D('res' java.util.ArrayList)])  (LINE:257)\l0x0042: CHECK_CAST (r1 I:java.util.List) = (java.util.List) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0044|RETURN\l|0x0044: RETURN  (r1 I:java.util.List\<R\>) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final java.util.List\<R\> kotlinx.coroutines.internal.LockFreeTaskQueueCore.map((r14 'this' I:kotlinx.coroutines.internal.LockFreeTaskQueueCore\<E\> A[IMMUTABLE_TYPE, THIS]), (r15 I:kotlin.jvm.functions.Function1\<? super E, ? extends R\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x003d \-\> B:20:0x0021, CROSS_EDGE: B:25:0x0034 \-\> B:27:0x003d, CROSS_EDGE: B:23:0x0030 \-\> B:27:0x003d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0030\-0x003f: r11 'element' Ljava\/lang\/Object;\l  0x0009\-0x0041: r1 'this_$iv' Lkotlinx\/coroutines\/internal\/LockFreeTaskQueueCore$Companion;\l  0x000b\-0x0041: r2 '$this$withState$iv' J\l  0x000c\-0x0041: r4 '$i$f$withState' I\l  0x001d\-0x0041: r5 'tail$iv' I\l  0x0013\-0x0041: r6 'head$iv' I\l  0x001e\-0x0041: r7 'head' I\l  0x001f\-0x0041: r8 'tail' I\l  0x0020\-0x0041: r9 '$i$a$\-withState\-LockFreeTaskQueueCore$map$1' I\l  0x0021\-0x0041: r10 'index' I\l  0x0007\-0x0044: r0 'res' Ljava\/util\/ArrayList;\l  \-1 \-0x0044: r15 'transform' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R, E]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Lkotlin\/jvm\/functions\/Function1\<\-TE;+TR;\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_30;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_33;
Node_26 -> Node_31;
Node_31 -> Node_27;
Node_27 -> Node_20;
Node_33 -> Node_27;
Node_32 -> Node_27;
Node_30 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_18;
}

