digraph "CFG forkotlinx.coroutines.internal.DispatchedContinuation.claimReusableCancellableContinuation()Lkotlinx\/coroutines\/CancellableContinuationImpl;" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY])  (LINE:105)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0002|LOOP_START\lLOOP:0: B:35:0x0002\-\>B:60:0x0002\l|0x0003: IGET  (r2 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.internal.DispatchedContinuation A[D('$this$loop$iv' kotlinx.coroutines.internal.DispatchedContinuation)])\l kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation java.lang.Object  (LINE:321)\l0x0005: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0007|0x0007: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('state' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x000f  (LINE:107)\l}"];
Node_39 [shape=record,label="{39\:\ 0x000f|0x000f: INSTANCE_OF  (r4 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) kotlinx.coroutines.CancellableContinuationImpl  (LINE:116)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0011|0x0011: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0021 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0021|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0021|0x0021: SGET  (r4 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED kotlinx.coroutines.internal.Symbol  (LINE:121)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0023|0x0023: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('state' java.lang.Object)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0026 \l}"];
Node_58 [shape=record,label="{58\:\ 0x0026|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0026|0x0026: INSTANCE_OF  (r4 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)]) java.lang.Throwable  (LINE:125)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0028|0x0028: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x002c \l}"];
Node_59 [shape=record,label="{59\:\ 0x002c|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x002c|0x002c: NEW_INSTANCE  (r4 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:125)\l0x002e: CONST_STR  (r5 I:java.lang.String) =  \"Inconsistent state \"  (LINE:129)\l0x0030: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.String), (r2 I:java.lang.Object A[D('state' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.stringPlus(java.lang.String, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.Object):java.lang.String (m)]\l0x0034: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0038: INVOKE  (r4 I:java.lang.IllegalStateException), (r5 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x003b|0x003b: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_62 [shape=record,label="{62\:\ 0x0002|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x0002|LOOP_END\lSYNTHETIC\lLOOP:0: B:35:0x0002\-\>B:60:0x0002\l}"];
Node_61 [shape=record,label="{61\:\ 0x0002|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0013|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0013|0x0013: SGET  (r4 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:117)\l0x0015: SGET  (r5 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED kotlinx.coroutines.internal.Symbol \l0x0017: INVOKE  (r4 I:boolean) = \l  (r4 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r6 I:java.lang.Object)\l  (r2 I:java.lang.Object A[D('state' java.lang.Object)])\l  (r5 I:java.lang.Object)\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x001b|0x001b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x0002 \l}"];
Node_56 [shape=record,label="{56\:\ 0x001d|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x001d|0x001d: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('state' java.lang.Object)])  (LINE:118)\l0x001e: CHECK_CAST (r4 I:kotlinx.coroutines.CancellableContinuationImpl) = (kotlinx.coroutines.CancellableContinuationImpl) (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0020|RETURN\l|0x0020: RETURN  (r4 I:kotlinx.coroutines.CancellableContinuationImpl\<T\>) \l}"];
Node_63 [shape=record,label="{63\:\ 0x0002|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0009|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0009|0x0009: SGET  (r4 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED kotlinx.coroutines.internal.Symbol  (LINE:112)\l0x000b: IPUT  (r4 I:java.lang.Object), (r6 I:kotlinx.coroutines.internal.DispatchedContinuation) kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation java.lang.Object \l0x000d: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:113)\l}"];
Node_38 [shape=record,label="{38\:\ 0x000e|RETURN\l|0x000e: RETURN  (r4 I:kotlinx.coroutines.CancellableContinuationImpl\<T\>) \l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.CancellableContinuationImpl\<T\> kotlinx.coroutines.internal.DispatchedContinuation.claimReusableCancellableContinuation((r6 'this' I:kotlinx.coroutines.internal.DispatchedContinuation\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:44:0x0020 \-\> B:33:?, BACK_EDGE: B:42:0x001b \-\> B:35:0x0002, CROSS_EDGE: B:53:0x003b \-\> B:33:?, BACK_EDGE: B:49:0x0028 \-\> B:35:0x0002, BACK_EDGE: B:46:0x0023 \-\> B:35:0x0002\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x002b: r2 'state' Ljava\/lang\/Object;\l  0x0006\-0x002b: r3 '$i$a$\-loop\-DispatchedContinuation$claimReusableCancellableContinuation$1' I\l  0x0001\-0x003b: r0 '$this$loop$iv' Lkotlinx\/coroutines\/internal\/DispatchedContinuation;\l  0x0002\-0x003b: r1 '$i$f$loop' I\l  0x002c\-0x003b: r2 'state' Ljava\/lang\/Object;\l  0x002c\-0x003b: r3 '$i$a$\-loop\-DispatchedContinuation$claimReusableCancellableContinuation$1' I\lTYPE_VARS: [T]\lSIGNATURE: ()Lkotlinx\/coroutines\/CancellableContinuationImpl\<TT;\>;\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_39;
Node_36 -> Node_55[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_54;
Node_40 -> Node_57[style=dashed];
Node_54 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_58;
Node_46 -> Node_61[style=dashed];
Node_58 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_59;
Node_49 -> Node_62[style=dashed];
Node_59 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_33;
Node_62 -> Node_60;
Node_60 -> Node_35;
Node_61 -> Node_60;
Node_57 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_56[style=dashed];
Node_42 -> Node_63;
Node_56 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_33;
Node_63 -> Node_60;
Node_55 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_33;
}

