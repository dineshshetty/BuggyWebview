digraph "CFG forkotlinx.coroutines.internal.DispatchedContinuation.resumeCancelled(Ljava\/lang\/Object;)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext) = (r5 I:kotlinx.coroutines.internal.DispatchedContinuation) type: VIRTUAL call: kotlinx.coroutines.internal.DispatchedContinuation.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)] (LINE:243)\l0x0005: SGET  (r2 I:kotlinx.coroutines.Job$Key) =  kotlinx.coroutines.Job.Key kotlinx.coroutines.Job$Key \l0x0007: CHECK_CAST (r2 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r2 I:??[OBJECT, ARRAY]) \l0x0009: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext$Element) = (r1 I:kotlin.coroutines.CoroutineContext), (r2 I:kotlin.coroutines.CoroutineContext$Key) type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x000d: CHECK_CAST (r1 I:kotlinx.coroutines.Job) = (kotlinx.coroutines.Job) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('job' kotlinx.coroutines.Job)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0036  (LINE:244)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0011|0x0011: INVOKE  (r2 I:boolean) = (r1 I:kotlinx.coroutines.Job A[D('job' kotlinx.coroutines.Job)]) type: INTERFACE call: kotlinx.coroutines.Job.isActive():boolean A[MD:():boolean (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0015|0x0015: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|0x0017: INVOKE  (r2 I:java.util.concurrent.CancellationException) = (r1 I:kotlinx.coroutines.Job A[D('job' kotlinx.coroutines.Job)]) type: INTERFACE call: kotlinx.coroutines.Job.getCancellationException():java.util.concurrent.CancellationException A[MD:():java.util.concurrent.CancellationException (m)] (LINE:245)\l0x001b: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('cause' java.util.concurrent.CancellationException)])  (LINE:246)\l0x001c: CHECK_CAST (r3 I:java.lang.Throwable) = (java.lang.Throwable) (r3 I:??[OBJECT, ARRAY]) \l0x001e: INVOKE  \l  (r5 I:kotlinx.coroutines.internal.DispatchedContinuation)\l  (r6 I:java.lang.Object A[D('state' java.lang.Object)])\l  (r3 I:java.lang.Throwable)\l type: VIRTUAL call: kotlinx.coroutines.internal.DispatchedContinuation.cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object, java.lang.Throwable):void A[MD:(java.lang.Object, java.lang.Throwable):void (m)]\l0x0021: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY])  (LINE:247)\l0x0022: CHECK_CAST (r3 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r3 I:??[OBJECT, ARRAY]) \l0x0024: SGET  (r4 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion \l0x0026: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('cause' java.util.concurrent.CancellationException)]) \l0x0027: CHECK_CAST (r4 I:java.lang.Throwable) = (java.lang.Throwable) (r4 I:??[OBJECT, ARRAY]) \l0x0029: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.lang.Throwable) type: STATIC call: kotlin.ResultKt.createFailure(java.lang.Throwable):java.lang.Object A[MD:(java.lang.Throwable):java.lang.Object (m)]\l0x002d: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[MD:\<T\>:(java.lang.Object):java.lang.Object (m)]\l0x0031: INVOKE  (r3 I:kotlin.coroutines.Continuation), (r4 I:java.lang.Object) type: INTERFACE call: kotlin.coroutines.Continuation.resumeWith(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0034: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:248)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0035|RETURN\l|0x0035: RETURN  (r3 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0036: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cause' java.util.concurrent.CancellationException)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:250)\l0x0037: RETURN  (r2 I:boolean) A[SYNTHETIC]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0036|RETURN\lORIG_RETURN\l|0x0036: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cause' java.util.concurrent.CancellationException)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:250)\l0x0037: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public final boolean kotlinx.coroutines.internal.DispatchedContinuation.resumeCancelled((r5 'this' I:kotlinx.coroutines.internal.DispatchedContinuation\<T\> A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Object A[D('state' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0037 \-\> B:12:?, CROSS_EDGE: B:14:0x000f \-\> B:19:0x0036\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x0036: r2 'cause' Ljava\/util\/concurrent\/CancellationException;\l  0x0001\-0x0037: r0 '$i$f$resumeCancelled' I\l  0x000f\-0x0037: r1 'job' Lkotlinx\/coroutines\/Job;\l  \-1 \-0x0037: r6 'state' Ljava\/lang\/Object;\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_12;
Node_21 -> Node_12;
Node_19 -> Node_12;
}

