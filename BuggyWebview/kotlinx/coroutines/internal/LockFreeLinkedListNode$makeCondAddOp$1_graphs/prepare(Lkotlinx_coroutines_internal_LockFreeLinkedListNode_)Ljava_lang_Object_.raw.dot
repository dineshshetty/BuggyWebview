digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:kotlin.jvm.functions.Function0\<java.lang.Boolean\>) = (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1) kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.$condition kotlin.jvm.functions.Function0  (LINE:92)\l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlin.jvm.functions.Function0) type: INTERFACE call: kotlin.jvm.functions.Function0.invoke():java.lang.Object A[MD:():R (m)]\l0x0006: CHECK_CAST (r0 I:java.lang.Boolean) = (java.lang.Boolean) (r0 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|SYNTHETIC\lRETURN\l|0x000e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: RETURN  (r0 I:java.lang.Object) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlinx.coroutines.internal.LockFreeLinkedListKt.getCONDITION_FALSE():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|RETURN\lORIG_RETURN\l|0x0014: RETURN  (r0 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare((r1 'this' I:kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('affected' kotlinx.coroutines.internal.LockFreeLinkedListNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0010 \-\> B:6:0x0014\lDebug Info:\l  \-1 \-0x0014: r2 'affected' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\lBRIDGED_BY: kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode):java.lang.Object\lRENAME_REASON:avoid collision after fix types in other method\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

