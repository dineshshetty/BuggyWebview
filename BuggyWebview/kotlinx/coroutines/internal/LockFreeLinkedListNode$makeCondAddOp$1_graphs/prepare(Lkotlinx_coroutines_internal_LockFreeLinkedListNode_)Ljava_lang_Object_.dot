digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r1.$condition.invoke().booleanValue() == false) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|SYNTHETIC\lRETURN\l|return null\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010}"];
Node_6 [shape=record,label="{6\:\ 0x0014|RETURN\lORIG_RETURN\l|return kotlinx.coroutines.internal.LockFreeLinkedListKt.getCONDITION_FALSE()\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare((r1v0 'this' kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1 A[IMMUTABLE_TYPE, THIS]), (r2v0 'affected' kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('affected' kotlinx.coroutines.internal.LockFreeLinkedListNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0010 \-\> B:6:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lBRIDGED_BY: kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode):java.lang.Object\lRENAME_REASON:avoid collision after fix types in other method\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

