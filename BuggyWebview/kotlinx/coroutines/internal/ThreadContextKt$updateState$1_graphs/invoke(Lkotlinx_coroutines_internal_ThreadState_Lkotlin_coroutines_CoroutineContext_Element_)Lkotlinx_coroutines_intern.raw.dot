digraph "CFG forkotlinx.coroutines.internal.ThreadContextKt$updateState$1.invoke(Lkotlinx\/coroutines\/internal\/ThreadState;Lkotlin\/coroutines\/CoroutineContext$Element;)Lkotlinx\/coroutines\/internal\/ThreadState;" {
Node_6 [shape=record,label="{6\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('element' kotlin.coroutines.CoroutineContext$Element)]) kotlinx.coroutines.ThreadContextElement  (LINE:53)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0013 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('element' kotlin.coroutines.CoroutineContext$Element)])  (LINE:54)\l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.ThreadContextElement) = (kotlinx.coroutines.ThreadContextElement) (r0 I:??[OBJECT, ARRAY]) \l0x0007: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('element' kotlin.coroutines.CoroutineContext$Element)]) \l0x0008: CHECK_CAST (r1 I:kotlinx.coroutines.ThreadContextElement) = (kotlinx.coroutines.ThreadContextElement) (r1 I:??[OBJECT, ARRAY]) \l0x000a: IGET  (r2 I:kotlin.coroutines.CoroutineContext) = (r4 I:kotlinx.coroutines.internal.ThreadState A[D('state' kotlinx.coroutines.internal.ThreadState)]) kotlinx.coroutines.internal.ThreadState.context kotlin.coroutines.CoroutineContext \l0x000c: INVOKE  (r1 I:java.lang.Object) = (r1 I:kotlinx.coroutines.ThreadContextElement), (r2 I:kotlin.coroutines.CoroutineContext) type: INTERFACE call: kotlinx.coroutines.ThreadContextElement.updateThreadContext(kotlin.coroutines.CoroutineContext):java.lang.Object A[MD:(kotlin.coroutines.CoroutineContext):S (m)]\l0x0010: INVOKE  \l  (r4 I:kotlinx.coroutines.internal.ThreadState A[D('state' kotlinx.coroutines.internal.ThreadState)])\l  (r0 I:kotlinx.coroutines.ThreadContextElement)\l  (r1 I:java.lang.Object)\l type: VIRTUAL call: kotlinx.coroutines.internal.ThreadState.append(kotlinx.coroutines.ThreadContextElement, java.lang.Object):void A[MD:(kotlinx.coroutines.ThreadContextElement\<?\>, java.lang.Object):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|RETURN\l|0x0013: RETURN  (r4 I:kotlinx.coroutines.internal.ThreadState A[D('state' kotlinx.coroutines.internal.ThreadState)])  (LINE:56)\l}"];
Node_7 [shape=record,label="{7\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.internal.ThreadState kotlinx.coroutines.internal.ThreadContextKt$updateState$1.invoke((r3 'this' I:kotlinx.coroutines.internal.ThreadContextKt$updateState$1 A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlinx.coroutines.internal.ThreadState A[D('state' kotlinx.coroutines.internal.ThreadState), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.coroutines.CoroutineContext$Element A[D('element' kotlin.coroutines.CoroutineContext$Element), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0002 \-\> B:11:0x0013\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0013: r4 'state' Lkotlinx\/coroutines\/internal\/ThreadState;\l  \-1 \-0x0013: r5 'element' Lkotlin\/coroutines\/CoroutineContext$Element;\lREPLACED_BY: kotlinx.coroutines.internal.ThreadContextKt$updateState$1.invoke(kotlinx.coroutines.internal.ThreadState, kotlin.coroutines.CoroutineContext$Element):kotlinx.coroutines.internal.ThreadState\lBRIDGED_BY: kotlinx.coroutines.internal.ThreadContextKt$updateState$1.invoke(kotlinx.coroutines.internal.ThreadState, kotlin.coroutines.CoroutineContext$Element):kotlinx.coroutines.internal.ThreadState\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function2.invoke(P1, P2):R]\l}"];
MethodNode -> Node_6;Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_7;
}

