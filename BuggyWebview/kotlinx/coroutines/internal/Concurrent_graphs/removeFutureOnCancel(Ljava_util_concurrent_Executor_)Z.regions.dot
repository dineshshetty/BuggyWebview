digraph "CFG forkotlinx.coroutines.internal.ConcurrentKt.removeFutureOnCancel(Ljava\/util\/concurrent\/Executor;)Z" {
subgraph cluster_Region_481655698 {
label = "R(1:(2:4|(2:(1:11)|(2:12|13)))) | DECL_VAR: java.lang.reflect.Method null\l";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1478785581 {
label = "Try: R(2:4|(2:(1:11)|(2:12|13))) catches: R(1:17)";
node [shape=record,color=blue];
subgraph cluster_Region_898671540 {
label = "R(2:4|(2:(1:11)|(2:12|13)))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0004|java.util.concurrent.ScheduledThreadPoolExecutor r1 = r6 instanceof java.util.concurrent.ScheduledThreadPoolExecutor ? (java.util.concurrent.ScheduledThreadPoolExecutor) r6 : null\l}"];
subgraph cluster_Region_1188210317 {
label = "R(2:(1:11)|(2:12|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1732678653 {
label = "IF [B:25:0x000b, B:28:0x0010] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x000b|PHI: r1 \l  PHI: (r1v3 'executor' java.util.concurrent.ScheduledThreadPoolExecutor) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == null) goto L7\l}"];
Node_28 [shape=record,label="{28\:\ 0x0010|ADDED_TO_REGION\l|if ((r2 = kotlinx.coroutines.internal.Concurrent.REMOVE_FUTURE_ON_CANCEL) == null) goto L11\l}"];
subgraph cluster_Region_1452363806 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0012|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_781431377 {
label = "R(2:12|13)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0013|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0020, blocks: (B:21:0x0002, B:23:0x0006, B:27:0x000e, B:30:0x0013), top: B:34:0x0002 \}\lCatch: all \-\> 0x0020\l|r2.invoke(r1, true)     \/\/ Catch: java.lang.Throwable \-\> L20\l}"];
Node_31 [shape=record,label="{31\:\ 0x001f|RETURN\l|return true\l}"];
}
}
}
subgraph cluster_Region_1632622773 {
label = "R(1:17) | ExcHandler: all \-\> 0x0020\l";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0021|RETURN\l|return false\l}"];
}
}
}
subgraph cluster_Region_1632622773 {
label = "R(1:17) | ExcHandler: all \-\> 0x0020\l";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0021|RETURN\l|return false\l}"];
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0001}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0002|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0002|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0020, blocks: (B:21:0x0002, B:23:0x0006, B:27:0x000e, B:30:0x0013), top: B:34:0x0002 \}\lCatch: all \-\> 0x0020\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0006|TryCatch #0 \{all \-\> 0x0020, blocks: (B:21:0x0002, B:23:0x0006, B:27:0x000e, B:30:0x0013), top: B:34:0x0002 \}\lCatch: all \-\> 0x0020\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x000d|RETURN\lADDED_TO_REGION\l|return false\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x000e|TryCatch #0 \{all \-\> 0x0020, blocks: (B:21:0x0002, B:23:0x0006, B:27:0x000e, B:30:0x0013), top: B:34:0x0002 \}\lCatch: all \-\> 0x0020\l}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x000a}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0020|ExcHandler: all \-\> 0x0020\l}"];
MethodNode[shape=record,label="{public static final boolean kotlinx.coroutines.internal.ConcurrentKt.removeFutureOnCancel((r6v0 'executor' java.util.concurrent.Executor A[D('executor' java.util.concurrent.Executor), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0012 \-\> B:19:?, CROSS_EDGE: B:31:0x001f \-\> B:19:?, CROSS_EDGE: B:33:0x0021 \-\> B:19:?, CROSS_EDGE: B:24:0x000a \-\> B:25:0x000b, CROSS_EDGE: B:34:0x0002 \-\> B:32:0x0020\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0020, blocks: (B:21:0x0002, B:23:0x0006, B:27:0x000e, B:30:0x0013), top: B:34:0x0002 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_22 -> Node_23;
Node_22 -> Node_24;
Node_25 -> Node_26;
Node_25 -> Node_27[style=dashed];
Node_28 -> Node_29;
Node_28 -> Node_30[style=dashed];
Node_29 -> Node_19;
Node_30 -> Node_31;
Node_30 -> Node_35;
Node_31 -> Node_19;
Node_33 -> Node_19;
Node_33 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_34;
Node_34 -> Node_21;
Node_34 -> Node_32;
Node_21 -> Node_22;
Node_23 -> Node_25;
Node_26 -> Node_19;
Node_27 -> Node_28;
Node_35 -> Node_32;
Node_24 -> Node_25;
Node_32 -> Node_33;
}

