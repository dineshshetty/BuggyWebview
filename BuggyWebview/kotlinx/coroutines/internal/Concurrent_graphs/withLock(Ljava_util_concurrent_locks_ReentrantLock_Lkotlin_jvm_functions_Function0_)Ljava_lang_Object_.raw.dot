digraph "CFG forkotlinx.coroutines.internal.ConcurrentKt.withLock(Ljava\/util\/concurrent\/locks\/ReentrantLock;Lkotlin\/jvm\/functions\/Function0;)Ljava\/lang\/Object;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('$this$withLock' java.util.concurrent.locks.ReentrantLock)])  (LINE:17)\l0x0002: CHECK_CAST (r1 I:java.util.concurrent.locks.Lock) = (java.util.concurrent.locks.Lock) (r1 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  (r1 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l0x0007: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0016, blocks: (B:14:0x0008), top: B:20:0x0008 \}\lCatch: all \-\> 0x0016\l|0x0008: INVOKE  (r3 I:java.lang.Object) = (r5 I:kotlin.jvm.functions.Function0 A[D('action' kotlin.jvm.functions.Function0)]) type: INTERFACE call: kotlin.jvm.functions.Function0.invoke():java.lang.Object A[Catch: all \-\> 0x0016, MD:():R (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000c|0x000c: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x000f: INVOKE  (r1 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l0x0012: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0015|RETURN\l|0x0015: RETURN  (r3 I:T) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x0016|ExcHandler: all \-\> 0x0016\l|0x0016: MOVE_EXCEPTION  (r3 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0016]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|0x0017: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x001a: INVOKE  (r1 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l0x001d: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0020|0x0020: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final T kotlinx.coroutines.internal.ConcurrentKt.withLock((r4 I:java.util.concurrent.locks.ReentrantLock A[D('$this$withLock' java.util.concurrent.locks.ReentrantLock), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function0\<? extends T\> A[D('action' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0020 \-\> B:12:?, CROSS_EDGE: B:20:0x0008 \-\> B:17:0x0016\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0016, blocks: (B:14:0x0008), top: B:20:0x0008 \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/concurrent\/locks\/ReentrantLock;Lkotlin\/jvm\/functions\/Function0\<+TT;\>;)TT;\lDebug Info:\l  0x0001\-0x0020: r0 '$i$f$withLock' I\l  \-1 \-0x0020: r4 '$this$withLock' Ljava\/util\/concurrent\/locks\/ReentrantLock;\l  \-1 \-0x0020: r5 'action' Lkotlin\/jvm\/functions\/Function0;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_20;
Node_20 -> Node_14;
Node_20 -> Node_17;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_21 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_12;
}

