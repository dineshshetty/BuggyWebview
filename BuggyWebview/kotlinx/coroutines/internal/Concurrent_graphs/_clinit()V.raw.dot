digraph "CFG forkotlinx.coroutines.internal.ConcurrentKt.\<clinit\>()V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0011, blocks: (B:12:0x0000), top: B:18:0x0000 \}\lCatch: all \-\> 0x0011\l|0x0000: CONST_CLASS  (r0 I:java.lang.Class\<java.util.concurrent.ScheduledThreadPoolExecutor\>) =  java.util.concurrent.ScheduledThreadPoolExecutor.class A[TRY_ENTER] (LINE:23)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"setRemoveOnCancelPolicy\"  (LINE:24)\l0x0004: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0005: NEW_ARRAY  (r2 I:java.lang.Class[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: all \-\> 0x0011]\l0x0007: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: SGET  (r4 I:java.lang.Class) =  java.lang.Boolean.TYPE java.lang.Class A[Catch: all \-\> 0x0011]\l0x000a: APUT  (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0011]\l0x000c: INVOKE  (r0 I:java.lang.reflect.Method) = (r0 I:java.lang.Class), (r1 I:java.lang.String), (r2 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: all \-\> 0x0011, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c), TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0017|0x0017: SPUT  (r0 I:java.lang.reflect.Method A[D('e' java.lang.Throwable)]) kotlinx.coroutines.internal.ConcurrentKt.REMOVE_FUTURE_ON_CANCEL java.lang.reflect.Method  (LINE:23)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0019|RETURN\l|0x0019: RETURN   \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0011|ExcHandler: all \-\> 0x0011\l|0x0011: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0011] (LINE:25)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0012|0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:26)\l0x0013: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0014: CHECK_CAST (r2 I:java.lang.reflect.Method) = (java.lang.reflect.Method) (r2 I:??[OBJECT, ARRAY]) \l0x0016: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('e' java.lang.Throwable)]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{static void kotlinx.coroutines.internal.ConcurrentKt.\<clinit\>()  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0012 \-\> B:16:0x0017, CROSS_EDGE: B:18:0x0000 \-\> B:14:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0017: r0 'e' Ljava\/lang\/Throwable;\lTryCatch #0 \{all \-\> 0x0011, blocks: (B:12:0x0000), top: B:18:0x0000 \}\l}"];
MethodNode -> Node_10;Node_10 -> Node_18;
Node_18 -> Node_12;
Node_18 -> Node_14;
Node_12 -> Node_16;
Node_12 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_19 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

