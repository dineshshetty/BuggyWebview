digraph "CFG forkotlinx.coroutines.internal.ExceptionsConstructorKt.createSafeConstructor(Ljava\/lang\/reflect\/Constructor;)Lkotlin\/jvm\/functions\/Function1;" {
Node_54 [shape=record,label="{54\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_56 [shape=record,label="{56\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Class[]) = (r4 I:java.lang.reflect.Constructor A[D('constructor' java.lang.reflect.Constructor)]) type: VIRTUAL call: java.lang.reflect.Constructor.getParameterTypes():java.lang.Class[] A[MD:():java.lang.Class\<?\>[] (c)] (LINE:50)\l0x0004: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[] A[D('p' java.lang.Class[])])  (LINE:51)\l0x0005: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x0007|0x0007: SWITCH  (r1 I:??)\l case 0: goto B:72:0x0053\l case 1: goto B:65:0x002c\l case 2: goto B:59:0x000b\l default: goto B:77:? \l}"];
Node_59 [shape=record,label="{59\:\ 0x000b|0x000c: AGET  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('p' java.lang.Class[])]), (r2 I:??[int, short, byte, char])  (LINE:53)\l0x000e: CONST_CLASS  (r2 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x0010: INVOKE  (r1 I:boolean) = (r1 I:java.lang.Object), (r2 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_60 [shape=record,label="{60\:\ 0x0014|0x0014: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:78:? \l}"];
Node_61 [shape=record,label="{61\:\ 0x0016|0x0016: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0017: AGET  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('p' java.lang.Class[])]), (r1 I:??[int, short, byte, char]) \l0x0019: CONST_CLASS  (r2 I:java.lang.Class\<java.lang.Throwable\>) =  java.lang.Throwable.class \l0x001b: INVOKE  (r1 I:boolean) = (r1 I:java.lang.Object), (r2 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x001f|0x001f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:? \l}"];
Node_63 [shape=record,label="{63\:\ 0x0021|0x0021: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:54)\l0x0022: NEW_INSTANCE  (r2 I:kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1) =  kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1  (LINE:113)\l0x0024: INVOKE  \l  (r2 I:kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1)\l  (r4 I:java.lang.reflect.Constructor A[D('constructor' java.lang.reflect.Constructor)])\l type: DIRECT call: kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1.\<init\>(java.lang.reflect.Constructor):void A[MD:(java.lang.reflect.Constructor):void (m)]\l0x0027: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x0028: CHECK_CAST (r3 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_74 [shape=record,label="{74\:\ ?|SYNTHETIC\lRETURN\l|0x005c: RETURN  (r3 I:kotlin.jvm.functions.Function1\<java.lang.Throwable, java.lang.Throwable\>) A[SYNTHETIC] (LINE:51)\l}"];
Node_55 [shape=record,label="{55\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_79 [shape=record,label="{79\:\ ?|SYNTHETIC\lRETURN\l|0x005c: RETURN  (r3 I:kotlin.jvm.functions.Function1\<java.lang.Throwable, java.lang.Throwable\>) A[SYNTHETIC] (LINE:51)\l}"];
Node_78 [shape=record,label="{78\:\ ?|SYNTHETIC\lRETURN\l|0x005c: RETURN  (r3 I:kotlin.jvm.functions.Function1\<java.lang.Throwable, java.lang.Throwable\>) A[SYNTHETIC] (LINE:51)\l}"];
Node_65 [shape=record,label="{65\:\ 0x002c|0x002c: AGET  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('p' java.lang.Class[])]), (r2 I:??[int, short, byte, char])  (LINE:57)\l0x002e: CONST_CLASS  (r2 I:java.lang.Class\<java.lang.Throwable\>) =  java.lang.Throwable.class  (LINE:58)\l0x0030: INVOKE  (r2 I:boolean) = (r1 I:java.lang.Object), (r2 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_66 [shape=record,label="{66\:\ 0x0034|0x0034: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x0040 \l}"];
Node_67 [shape=record,label="{67\:\ 0x0036|0x0036: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:59)\l0x0037: NEW_INSTANCE  (r2 I:kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2) =  kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2  (LINE:114)\l0x0039: INVOKE  \l  (r2 I:kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2)\l  (r4 I:java.lang.reflect.Constructor A[D('constructor' java.lang.reflect.Constructor)])\l type: DIRECT call: kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2.\<init\>(java.lang.reflect.Constructor):void A[MD:(java.lang.reflect.Constructor):void (m)]\l0x003c: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x003d: CHECK_CAST (r3 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_75 [shape=record,label="{75\:\ ?|SYNTHETIC\lRETURN\l|0x005c: RETURN  (r3 I:kotlin.jvm.functions.Function1\<java.lang.Throwable, java.lang.Throwable\>) A[SYNTHETIC] (LINE:51)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0040|0x0040: CONST_CLASS  (r2 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class  (LINE:60)\l0x0042: INVOKE  (r1 I:boolean) = (r1 I:java.lang.Object), (r2 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_69 [shape=record,label="{69\:\ 0x0046|0x0046: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:? \l}"];
Node_70 [shape=record,label="{70\:\ 0x0048|0x0048: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:61)\l0x0049: NEW_INSTANCE  (r2 I:kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3) =  kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3  (LINE:115)\l0x004b: INVOKE  \l  (r2 I:kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3)\l  (r4 I:java.lang.reflect.Constructor A[D('constructor' java.lang.reflect.Constructor)])\l type: DIRECT call: kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3.\<init\>(java.lang.reflect.Constructor):void A[MD:(java.lang.reflect.Constructor):void (m)]\l0x004e: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x004f: CHECK_CAST (r3 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_76 [shape=record,label="{76\:\ ?|SYNTHETIC\lRETURN\l|0x005c: RETURN  (r3 I:kotlin.jvm.functions.Function1\<java.lang.Throwable, java.lang.Throwable\>) A[SYNTHETIC] (LINE:51)\l}"];
Node_80 [shape=record,label="{80\:\ ?|SYNTHETIC\lRETURN\l|0x005c: RETURN  (r3 I:kotlin.jvm.functions.Function1\<java.lang.Throwable, java.lang.Throwable\>) A[SYNTHETIC] (LINE:51)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0053|0x0053: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:64)\l0x0054: NEW_INSTANCE  (r2 I:kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4) =  kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4  (LINE:116)\l0x0056: INVOKE  \l  (r2 I:kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4)\l  (r4 I:java.lang.reflect.Constructor A[D('constructor' java.lang.reflect.Constructor)])\l type: DIRECT call: kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4.\<init\>(java.lang.reflect.Constructor):void A[MD:(java.lang.reflect.Constructor):void (m)]\l0x0059: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x005a: CHECK_CAST (r3 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_73 [shape=record,label="{73\:\ 0x005c|RETURN\lORIG_RETURN\l|0x005c: RETURN  (r3 I:kotlin.jvm.functions.Function1\<java.lang.Throwable, java.lang.Throwable\>)  (LINE:51)\l}"];
Node_77 [shape=record,label="{77\:\ ?|SYNTHETIC\lRETURN\l|0x005c: RETURN  (r3 I:kotlin.jvm.functions.Function1\<java.lang.Throwable, java.lang.Throwable\>) A[SYNTHETIC] (LINE:51)\l}"];
MethodNode[shape=record,label="{private static final kotlin.jvm.functions.Function1\<java.lang.Throwable, java.lang.Throwable\> kotlinx.coroutines.internal.ExceptionsConstructorKt.createSafeConstructor((r4 I:java.lang.reflect.Constructor\<?\> A[D('constructor' java.lang.reflect.Constructor), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:62:0x001f \-\> B:73:0x005c, CROSS_EDGE: B:60:0x0014 \-\> B:73:0x005c, CROSS_EDGE: B:67:0x0036 \-\> B:73:0x005c, CROSS_EDGE: B:70:0x0048 \-\> B:73:0x005c, CROSS_EDGE: B:69:0x0046 \-\> B:73:0x005c, CROSS_EDGE: B:72:0x0053 \-\> B:73:0x005c, CROSS_EDGE: B:57:0x0007 \-\> B:73:0x005c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0022\-0x002a: r1 '$i$f$safeCtor' I\l  0x0037\-0x003f: r1 '$i$f$safeCtor' I\l  0x0049\-0x0051: r1 '$i$f$safeCtor' I\l  0x0054\-0x005c: r1 '$i$f$safeCtor' I\l  0x0004\-0x0067: r0 'p' [Ljava\/lang\/Class;\l  \-1 \-0x0067: r4 'constructor' Ljava\/lang\/reflect\/Constructor;\lSIGNATURE: (Ljava\/lang\/reflect\/Constructor\<*\>;)Lkotlin\/jvm\/functions\/Function1\<Ljava\/lang\/Throwable;Ljava\/lang\/Throwable;\>;\l}"];
MethodNode -> Node_54;Node_54 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_59;
Node_57 -> Node_65;
Node_57 -> Node_72;
Node_57 -> Node_77;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_78;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_79;
Node_63 -> Node_74;
Node_74 -> Node_55;
Node_79 -> Node_55;
Node_78 -> Node_55;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_68;
Node_67 -> Node_75;
Node_75 -> Node_55;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_80;
Node_70 -> Node_76;
Node_76 -> Node_55;
Node_80 -> Node_55;
Node_72 -> Node_73;
Node_73 -> Node_55;
Node_77 -> Node_55;
}

