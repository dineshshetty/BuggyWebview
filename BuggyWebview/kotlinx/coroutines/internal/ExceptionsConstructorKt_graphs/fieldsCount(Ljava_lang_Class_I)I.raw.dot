digraph "CFG forkotlinx.coroutines.internal.ExceptionsConstructorKt.fieldsCount(Ljava\/lang\/Class;I)I" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('$this$fieldsCount' java.lang.Class)])  (LINE:75)\l0x0001: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('accumulator' int)]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0002|LOOP_START\lLOOP:0: B:39:0x0002\-\>B:45:0x0028\l|0x0002: INVOKE  (r2 I:java.lang.reflect.Field[]) = (r0 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getDeclaredFields():java.lang.reflect.Field[] A[MD:():java.lang.reflect.Field[] (c)] (LINE:76)\l0x0006: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:117)\l0x0008: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:118)\l0x0009: ARRAY_LENGTH  (r6 I:int) = (r2 I:??[] A[D('$this$count$iv' java.lang.Object[])]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x000a|LOOP_START\lLOOP:1: B:40:0x000a\-\>B:51:0x000a\l|0x000a: IF  (r5 I:??[int, byte, short, char]) \>= (r6 I:??[int, byte, short, char])  \-\> B:49:0x0021 \l}"];
Node_41 [shape=record,label="{41\:\ 0x000c|0x000c: AGET  (r7 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][] A[D('$this$count$iv' java.lang.Object[])]), (r5 I:??[int, short, byte, char]) \l0x000e: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l0x0010: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) \l0x0011: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: INVOKE  (r10 I:int) = (r8 I:java.lang.reflect.Field A[D('it' java.lang.reflect.Field)]) type: VIRTUAL call: java.lang.reflect.Field.getModifiers():int A[MD:():int (c)] (LINE:76)\l0x0016: INVOKE  (r10 I:boolean) = (r10 I:int) type: STATIC call: java.lang.reflect.Modifier.isStatic(int):boolean A[MD:(int):boolean (c)]\l0x001a: ARITH  (r8 I:??[int, boolean] A[D('it' java.lang.reflect.Field)]) = (r10 I:??[int, boolean, short, byte, char]) ^ (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x001c|0x001c: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x000a \l}"];
Node_50 [shape=record,label="{50\:\ 0x001e|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x001e|0x001e: ARITH  (r4 I:int) = (r4 I:int A[D('count$iv' int)]) + (1 int) \l}"];
Node_53 [shape=record,label="{53\:\ 0x000a|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x000a|LOOP_END\lSYNTHETIC\lLOOP:1: B:40:0x000a\-\>B:51:0x000a\l}"];
Node_52 [shape=record,label="{52\:\ 0x000a|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0021|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0021|0x0022: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$this$count$iv' java.lang.Object[])]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('count$iv' int)])  (LINE:76)\l0x0023: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int A[D('fieldsCount' int)])  (LINE:77)\l0x0024: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getSuperclass():java.lang.Class A[MD:():java.lang.Class\<? super T\> (c)] (LINE:78)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0028|LOOP_END\lLOOP:0: B:39:0x0002\-\>B:45:0x0028\l|0x0028: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0002 \l}"];
Node_48 [shape=record,label="{48\:\ 0x002a|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x002a|RETURN\l|0x002a: RETURN  (r1 I:int A[D('totalFields' int)]) \l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final int kotlinx.coroutines.internal.ExceptionsConstructorKt.fieldsCount((r11 I:java.lang.Class\<?\> A[D('$this$fieldsCount' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('accumulator' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:42:0x001c \-\> B:40:0x000a, BACK_EDGE: B:43:0x001e \-\> B:40:0x000a, BACK_EDGE: B:45:0x0028 \-\> B:39:0x0002\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x001a: r8 'it' Ljava\/lang\/reflect\/Field;\l  0x0012\-0x001a: r9 '$i$a$\-count\-ExceptionsConstructorKt$fieldsCount$fieldsCount$1' I\l  0x000e\-0x0021: r7 'element$iv' Ljava\/lang\/Object;\l  0x0006\-0x0022: r2 '$this$count$iv' [Ljava\/lang\/Object;\l  0x0007\-0x0022: r3 '$i$f$count' I\l  0x0008\-0x0022: r4 'count$iv' I\l  0x002b\-0x002b: r0 'superClass' Ljava\/lang\/Class;\l  0x0024\-0x002b: r1 'totalFields' I\l  0x0023\-0x002b: r2 'fieldsCount' I\l  \-1 \-0x002b: r11 '$this$fieldsCount' Ljava\/lang\/Class;\l  \-1 \-0x002b: r12 'accumulator' I\lSIGNATURE: (Ljava\/lang\/Class\<*\>;I)I\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_49;
Node_41 -> Node_42;
Node_42 -> Node_50[style=dashed];
Node_42 -> Node_52;
Node_50 -> Node_43;
Node_43 -> Node_53;
Node_53 -> Node_51;
Node_51 -> Node_40;
Node_52 -> Node_51;
Node_49 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_39;
Node_45 -> Node_48[style=dashed];
Node_48 -> Node_46;
Node_46 -> Node_37;
}

