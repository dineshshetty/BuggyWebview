digraph "CFG forkotlinx.coroutines.internal.ExceptionsConstructorKt.tryCopyException(Ljava\/lang\/Throwable;)Ljava\/lang\/Throwable;" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000}"];
Node_37 [shape=record,label="{37\:\ 0x0002|if ((r2 instanceof kotlinx.coroutines.CopyableThrowable) == false) goto L3\l}"];
Node_47 [shape=record,label="{47\:\ 0x0028}"];
Node_48 [shape=record,label="{48\:\ 0x0038|RETURN\l|return (E) kotlinx.coroutines.internal.ExceptionsConstructorKt.ctorCache.get(r2.getClass()).invoke(r2)\l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x0004|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_38 [shape=record,label="{38\:\ 0x0004|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0013, blocks: (B:38:0x0004), top: B:49:0x0004 \}\lCatch: all \-\> 0x0013\l|kotlin.Result$Companion r0 = kotlin.Result.Companion     \/\/ Catch: java.lang.Throwable \-\> L13\ljava.lang.Object r0 = kotlin.Result.m144constructorimpl(((kotlinx.coroutines.CopyableThrowable) r2).createCopy())     \/\/ Catch: java.lang.Throwable \-\> L13\l}"];
Node_42 [shape=record,label="{42\:\ 0x001e|PHI: r0 \l  PHI: (r0v4 java.lang.Object) = (r0v3 java.lang.Object), (r0v10 java.lang.Object) binds: [B:41:0x0014, B:38:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0022|if (kotlin.Result.m150isFailureimpl(r0) == false) goto L11\l}"];
Node_44 [shape=record,label="{44\:\ 0x0024|r0 = null\l}"];
Node_45 [shape=record,label="{45\:\ 0x0025|PHI: r0 \l  PHI: (r0v5 java.lang.Object) = (r0v4 java.lang.Object), (r0v7 java.lang.Object) binds: [B:43:0x0022, B:44:0x0024] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0027|RETURN\l|return (E) r0\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_40 [shape=record,label="{40\:\ 0x0013|ExcHandler: all \-\> 0x0013\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_41 [shape=record,label="{41\:\ 0x0014|kotlin.Result$Companion r1 = kotlin.Result.Companion\ljava.lang.Object r0 = kotlin.Result.m144constructorimpl(kotlin.ResultKt.createFailure(r0))\l}"];
MethodNode[shape=record,label="{public static final E extends java.lang.Throwable kotlinx.coroutines.internal.ExceptionsConstructorKt.tryCopyException((r2v0 E extends java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:46:0x0027 \-\> B:35:?, CROSS_EDGE: B:43:0x0022 \-\> B:45:0x0025, CROSS_EDGE: B:41:0x0014 \-\> B:42:0x001e, CROSS_EDGE: B:49:0x0004 \-\> B:40:0x0013\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0013, blocks: (B:38:0x0004), top: B:49:0x0004 \}\lTYPE_VARS: [E extends java.lang.Throwable]\lSIGNATURE: \<E:Ljava\/lang\/Throwable;\>(TE;)TE;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r0v11, resolved type: kotlinx.coroutines.internal.CtorCache\}\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_47;
Node_37 -> Node_49[style=dashed];
Node_47 -> Node_48;
Node_48 -> Node_35;
Node_49 -> Node_38;
Node_49 -> Node_40;
Node_38 -> Node_42;
Node_38 -> Node_50;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_35;
Node_50 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42;
}

