digraph "CFG forkotlinx.coroutines.internal.ExceptionsConstructorKt.fieldsCountOrDefault(Ljava\/lang\/Class;I)I" {
subgraph cluster_Region_1262465551 {
label = "R(5:1|(1:3)|4|(1:6)|8) | DECL_VAR: java.lang.Integer null\l";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0000|kotlin.jvm.JvmClassMapping.getKotlinClass(r5)\l}"];
subgraph cluster_TryCatchRegion_267967105 {
label = "Try: R(1:3) catches: R(2:11|12)";
node [shape=record,color=blue];
subgraph cluster_Region_1999085602 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0004|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:31:0x0004), top: B:40:0x0004 \}\lCatch: all \-\> 0x0017\l|kotlin.Result$Companion kotlin.Result.Companion r1 = kotlin.Result.Companion     \/\/ Catch: java.lang.Throwable \-\> L17\ljava.lang.Object r0 = kotlin.Result.m144constructorimpl(java.lang.Integer.valueOf(fieldsCount$default(r5, 0, 1, null)))     \/\/ Catch: java.lang.Throwable \-\> L17\l}"];
}
subgraph cluster_Region_590546270 {
label = "R(2:11|12) | ExcHandler: all \-\> 0x0017\l";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0017|ExcHandler: all \-\> 0x0017\l}"];
Node_34 [shape=record,label="{34\:\ 0x0018|kotlin.Result$Companion kotlin.Result.Companion r1 = kotlin.Result.Companion\ljava.lang.Object r0 = kotlin.Result.m144constructorimpl(kotlin.ResultKt.createFailure(r0))\l}"];
}
}
Node_35 [shape=record,label="{35\:\ 0x0022|PHI: r0 \l  PHI: (r0v4 java.lang.Object) = (r0v3 java.lang.Object), (r0v10 java.lang.Object) binds: [B:34:0x0018, B:31:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Integer java.lang.Integer r1 = java.lang.Integer.valueOf(r6)\l}"];
subgraph cluster_IfRegion_884872638 {
label = "IF [B:36:0x002a] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x002a|if (kotlin.Result.m150isFailureimpl(r0) != false) goto L6\l}"];
subgraph cluster_Region_818732908 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x002c|r0 = r1\l}"];
}
}
Node_39 [shape=record,label="{39\:\ 0x0033|RETURN\l|return ((java.lang.Number) r0).intValue()\l}"];
}
subgraph cluster_Region_590546270 {
label = "R(2:11|12) | ExcHandler: all \-\> 0x0017\l";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0017|ExcHandler: all \-\> 0x0017\l}"];
Node_34 [shape=record,label="{34\:\ 0x0018|kotlin.Result$Companion kotlin.Result.Companion r1 = kotlin.Result.Companion\ljava.lang.Object r0 = kotlin.Result.m144constructorimpl(kotlin.ResultKt.createFailure(r0))\l}"];
}
Node_28 [shape=record,color=red,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0004|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x002d|PHI: r0 \l  PHI: (r0v5 java.lang.Object) = (r0v4 java.lang.Object), (r0v8 java.lang.Integer) binds: [B:36:0x002a, B:37:0x002c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_29 [shape=record,color=red,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,color=red,label="{41\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
MethodNode[shape=record,label="{private static final int kotlinx.coroutines.internal.ExceptionsConstructorKt.fieldsCountOrDefault((r5v0 java.lang.Class\<?\> A[D('$this$fieldsCountOrDefault' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'defaultValue' int A[D('defaultValue' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x002a \-\> B:38:0x002d, CROSS_EDGE: B:34:0x0018 \-\> B:35:0x0022, CROSS_EDGE: B:40:0x0004 \-\> B:33:0x0017\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:31:0x0004), top: B:40:0x0004 \}\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/lang\/Class\<*\>;I)I\l}"];
MethodNode -> Node_28;Node_30 -> Node_40;
Node_31 -> Node_35;
Node_31 -> Node_41;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_38[style=dashed];
Node_37 -> Node_38;
Node_39 -> Node_29;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_28 -> Node_30;
Node_40 -> Node_31;
Node_40 -> Node_33;
Node_38 -> Node_39;
Node_41 -> Node_33;
}

