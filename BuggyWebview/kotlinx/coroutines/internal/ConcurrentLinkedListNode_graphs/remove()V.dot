digraph "CFG forkotlinx.coroutines.internal.ConcurrentLinkedListNode.remove()V" {
Node_35 [shape=record,label="{35\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0000}"];
Node_38 [shape=record,label="{38\:\ 0x0004|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L8\l}"];
Node_39 [shape=record,label="{39\:\ 0x0006}"];
Node_40 [shape=record,label="{40\:\ 0x000b|if (getRemoved() == false) goto L5\l}"];
Node_42 [shape=record,label="{42\:\ 0x000e}"];
Node_43 [shape=record,label="{43\:\ 0x0013|throw new java.lang.AssertionError()\l}"];
Node_36 [shape=record,label="{36\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0014}"];
Node_45 [shape=record,label="{45\:\ 0x0018|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L14\l}"];
Node_46 [shape=record,label="{46\:\ 0x001a}"];
Node_47 [shape=record,label="{47\:\ 0x0021|if ((isTail() ^ 1) == 0) goto L12\l}"];
Node_49 [shape=record,label="{49\:\ 0x0024}"];
Node_50 [shape=record,label="{50\:\ 0x0029|throw new java.lang.AssertionError()\l}"];
Node_68 [shape=record,label="{68\:\ 0x002a|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x002a|LOOP_START\lLOOP:0: B:51:0x002a\-\>B:65:0x002a\l|kotlinx.coroutines.internal.ConcurrentLinkedListNode r0 = getLeftmostAliveNode()\lkotlinx.coroutines.internal.ConcurrentLinkedListNode r1 = getRightmostAliveNode()\lr1._prev = r0\l}"];
Node_52 [shape=record,label="{52\:\ 0x0035|if (r0 == null) goto L18\l}"];
Node_53 [shape=record,label="{53\:\ 0x0037|r0._next = r1\l}"];
Node_54 [shape=record,label="{54\:\ 0x0039}"];
Node_55 [shape=record,label="{55\:\ 0x003d|if (r1.getRemoved() == false) goto L20\l}"];
Node_62 [shape=record,label="{62\:\ 0x0040|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0040|if (r0 == null) goto L28\l}"];
Node_58 [shape=record,label="{58\:\ 0x0042}"];
Node_59 [shape=record,label="{59\:\ 0x0046|if (r0.getRemoved() == false) goto L24\l}"];
Node_64 [shape=record,label="{64\:\ 0x0049|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_67 [shape=record,label="{67\:\ 0x002a|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x002a|LOOP_END\lSYNTHETIC\lLOOP:0: B:51:0x002a\-\>B:65:0x002a\l}"];
Node_63 [shape=record,label="{63\:\ 0x0049|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0049|RETURN\lORIG_RETURN\l|return\l}"];
Node_66 [shape=record,label="{66\:\ 0x002a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.internal.ConcurrentLinkedListNode.remove((r3v0 'this' kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N extends kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N\>\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:50:0x0029 \-\> B:36:?, CROSS_EDGE: B:61:0x0049 \-\> B:36:?, BACK_EDGE: B:59:0x0046 \-\> B:51:0x002a, CROSS_EDGE: B:57:0x0040 \-\> B:61:0x0049, BACK_EDGE: B:55:0x003d \-\> B:51:0x002a, CROSS_EDGE: B:52:0x0035 \-\> B:54:0x0039, CROSS_EDGE: B:45:0x0018 \-\> B:51:0x002a, CROSS_EDGE: B:38:0x0004 \-\> B:44:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [N extends kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N\>]\l}"];
MethodNode -> Node_35;Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_44;
Node_39 -> Node_40;
Node_40 -> Node_42;
Node_40 -> Node_44[style=dashed];
Node_42 -> Node_43;
Node_43 -> Node_36;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_68;
Node_46 -> Node_47;
Node_47 -> Node_49;
Node_47 -> Node_68[style=dashed];
Node_49 -> Node_50;
Node_50 -> Node_36;
Node_68 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_62;
Node_55 -> Node_66[style=dashed];
Node_62 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_63;
Node_58 -> Node_59;
Node_59 -> Node_64;
Node_59 -> Node_67[style=dashed];
Node_64 -> Node_69;
Node_69 -> Node_36;
Node_67 -> Node_65;
Node_65 -> Node_51;
Node_63 -> Node_61;
Node_61 -> Node_36;
Node_66 -> Node_65;
}

