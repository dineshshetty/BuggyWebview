digraph "CFG forkotlinx.coroutines.internal.ConcurrentLinkedListNode.getNext()Lkotlinx\/coroutines\/internal\/ConcurrentLinkedListNode;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY])  (LINE:114)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0002: INVOKE  (r2 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.internal.ConcurrentLinkedListNode A[D('this_$iv' kotlinx.coroutines.internal.ConcurrentLinkedListNode)])\l type: STATIC call: kotlinx.coroutines.internal.ConcurrentLinkedListNode.access$getNextOrClosed(kotlinx.coroutines.internal.ConcurrentLinkedListNode):java.lang.Object A[MD:(kotlinx.coroutines.internal.ConcurrentLinkedListNode):java.lang.Object (m)] (LINE:243)\l0x0006: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: INVOKE  (r4 I:kotlinx.coroutines.internal.Symbol) =  type: STATIC call: kotlinx.coroutines.internal.ConcurrentLinkedListKt.access$getCLOSED$p():kotlinx.coroutines.internal.Symbol A[MD:():kotlinx.coroutines.internal.Symbol (m)] (LINE:244)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it$iv' java.lang.Object)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0010 \l}"];
Node_12 [shape=record,label="{12\:\ 0x000d|0x000d: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:245)\l0x000e: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:114)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000f|RETURN\l|0x000f: RETURN  (r5 I:N extends kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N\>) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0010|0x0010: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('$i$a$\-nextOrIfClosed\-ConcurrentLinkedListNode$next$1' int)]) = (r2 I:??[OBJECT, ARRAY] A[D('it$iv' java.lang.Object)])  (LINE:247)\l0x0011: CHECK_CAST (r4 I:kotlinx.coroutines.internal.ConcurrentLinkedListNode) = (kotlinx.coroutines.internal.ConcurrentLinkedListNode) (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0016|RETURN\l|0x0016: RETURN  (r4 I:N extends kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N\>)  (LINE:114)\l}"];
MethodNode[shape=record,label="{public final N extends kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N\> kotlinx.coroutines.internal.ConcurrentLinkedListNode.getNext((r6 'this' I:kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N extends kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N\>\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0016 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000e\-0x0010: r4 '$i$a$\-nextOrIfClosed\-ConcurrentLinkedListNode$next$1' I\l  0x0006\-0x0014: r2 'it$iv' Ljava\/lang\/Object;\l  0x0007\-0x0014: r3 '$i$a$\-let\-ConcurrentLinkedListNode$nextOrIfClosed$1$iv' I\l  0x0001\-0x0016: r0 'this_$iv' Lkotlinx\/coroutines\/internal\/ConcurrentLinkedListNode;\l  0x0002\-0x0016: r1 '$i$f$nextOrIfClosed' I\lTYPE_VARS: [N extends kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N\>]\lSIGNATURE: ()TN;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

