digraph "CFG forkotlinx.coroutines.internal.ConcurrentLinkedListNode.getRightmostAliveNode()Lkotlinx\/coroutines\/internal\/ConcurrentLinkedListNode;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x0004|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L8\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006}"];
Node_20 [shape=record,label="{20\:\ 0x000d|if ((isTail() ^ 1) == 0) goto L5\l}"];
Node_22 [shape=record,label="{22\:\ 0x0010}"];
Node_23 [shape=record,label="{23\:\ 0x0015|throw new java.lang.AssertionError()\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|kotlinx.coroutines.internal.ConcurrentLinkedListNode r0 = getNext()\lkotlin.jvm.internal.Intrinsics.checkNotNull(r0)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001d|LOOP_START\lLOOP:0: B:25:0x001d\-\>B:27:0x0023\lPHI: r0 \l  PHI: (r0v2 N extends kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N\>) = (r0v1 N extends kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N\>), (r0v3 N extends kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N\>) binds: [B:24:0x0016, B:27:0x0023] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0021|if (r0.getRemoved() == false) goto L12\l}"];
Node_27 [shape=record,label="{27\:\ 0x0023|LOOP_END\lLOOP:0: B:25:0x001d\-\>B:27:0x0023\l|kotlinx.coroutines.internal.ConcurrentLinkedListNode r1 = r0.getNext()\lkotlin.jvm.internal.Intrinsics.checkNotNull(r1)\lr0 = r1\l}"];
Node_29 [shape=record,label="{29\:\ 0x002c|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x002c|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{private final N extends kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N\> kotlinx.coroutines.internal.ConcurrentLinkedListNode.getRightmostAliveNode((r2v0 'this' kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N extends kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N\>\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x0023 \-\> B:25:0x001d, CROSS_EDGE: B:28:0x002c \-\> B:16:?, CROSS_EDGE: B:18:0x0004 \-\> B:24:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: [N extends kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N\>]\lSIGNATURE: ()TN;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l \-\> Type inference failed for: r1v1, types: [kotlinx.coroutines.internal.ConcurrentLinkedListNode, java.lang.Object]\}\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_24[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_16;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_25;
Node_29 -> Node_28;
Node_28 -> Node_16;
}

