digraph "CFG forkotlinx.coroutines.internal.ConcurrentLinkedListNode.access$getNextOrClosed(Lkotlinx\/coroutines\/internal\/ConcurrentLinkedListNode;)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|return r1.getNextOrClosed()\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ java.lang.Object kotlinx.coroutines.internal.ConcurrentLinkedListNode.access$getNextOrClosed((r1v0 '$this' kotlinx.coroutines.internal.ConcurrentLinkedListNode A[D('$this' kotlinx.coroutines.internal.ConcurrentLinkedListNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  \l  (r1 I:kotlinx.coroutines.internal.ConcurrentLinkedListNode A[D('$this' kotlinx.coroutines.internal.ConcurrentLinkedListNode)])\l type: DIRECT call: kotlinx.coroutines.internal.ConcurrentLinkedListNode.getNextOrClosed():java.lang.Object\lTYPE_VARS: [N extends kotlinx.coroutines.internal.ConcurrentLinkedListNode\<N\>]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

