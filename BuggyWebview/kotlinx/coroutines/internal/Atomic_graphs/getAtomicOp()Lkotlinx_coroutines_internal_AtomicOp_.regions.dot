digraph "CFG forkotlinx.coroutines.internal.AtomicDesc.getAtomicOp()Lkotlinx\/coroutines\/internal\/AtomicOp;" {
subgraph cluster_Region_1267688974 {
label = "R(2:1|(2:(1:3)|(2:5|6)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|kotlinx.coroutines.internal.AtomicOp\<?\> kotlinx.coroutines.internal.AtomicOp\<?\> r0 = r1.atomicOp\l}"];
subgraph cluster_Region_778381977 {
label = "R(2:(1:3)|(2:5|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_967764980 {
label = "IF [B:10:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0002|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_1562112439 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0004|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_745664683 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0005|kotlin.jvm.internal.Intrinsics.throwUninitializedPropertyAccessException(\"atomicOp\")\l}"];
Node_13 [shape=record,label="{13\:\ 0x000b|RETURN\l|return null\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.internal.AtomicOp\<?\> kotlinx.coroutines.internal.AtomicDesc.getAtomicOp((r1v0 'this' kotlinx.coroutines.internal.AtomicDesc A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000b \-\> B:8:?\lINLINE_NOT_NEEDED\lSIGNATURE: ()Lkotlinx\/coroutines\/internal\/AtomicOp\<*\>;\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
Node_7 -> Node_9;
}

