digraph "CFG forkotlinx.coroutines.internal.LimitedDispatcher.addAndTryDispatching(Ljava\/lang\/Runnable;)Z" {
subgraph cluster_Region_1292036395 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|r2.queue.addLast(r3)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|RETURN\l|return r2.runningWorkers \>= r2.parallelism\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000b|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000d|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.internal.LimitedDispatcher.addAndTryDispatching((r2v0 'this' kotlinx.coroutines.internal.LimitedDispatcher A[IMMUTABLE_TYPE, THIS]), (r3v0 'block' java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000d \-\> B:6:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_0 -> Node_2;
Node_4 -> Node_1;
Node_5 -> Node_1;
}

