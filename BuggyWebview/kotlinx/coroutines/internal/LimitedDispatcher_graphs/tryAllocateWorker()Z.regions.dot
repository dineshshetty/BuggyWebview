digraph "CFG forkotlinx.coroutines.internal.LimitedDispatcher.tryAllocateWorker()Z" {
subgraph cluster_Region_1971953995 {
label = "R(2:1|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|java.lang.Object java.lang.Object r0 = r5.workerAllocationLock\l}"];
subgraph cluster_SynchronizedRegion_1302496844 {
label = "Synchronized:R(2:2|(1:(2:(1:9)|(2:11|13))))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003}"];
subgraph cluster_Region_1818374109 {
label = "R(1:(2:(1:9)|(2:11|13)))";
node [shape=record,color=blue];
subgraph cluster_Region_242402936 {
label = "R(2:(1:9)|(2:11|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1692235053 {
label = "IF [B:6:0x0009] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0009|if (r5.runningWorkers \>= r5.parallelism) goto L7\l}"];
subgraph cluster_Region_1534906809 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x000d|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_639439308 {
label = "R(2:11|13)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x000e|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{, blocks: (B:5:0x0005, B:10:0x000e), top: B:16:0x0005 \}\lCatch: all \-\> 0x0017\l|r5.runningWorkers++\l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|RETURN\l|return true\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0004}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0005|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0005|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{, blocks: (B:5:0x0005, B:10:0x000e), top: B:16:0x0005 \}\lCatch: all \-\> 0x0017\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000b}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000c|DONT_GENERATE\l|monitor\-exit()\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0015|DONT_GENERATE\l|monitor\-exit()\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0017|REMOVE\lExcHandler: all \-\> 0x0017\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0019|REMOVE\l|throw r2\l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.internal.LimitedDispatcher.tryAllocateWorker((r5v0 'this' kotlinx.coroutines.internal.LimitedDispatcher A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0016 \-\> B:1:?, CROSS_EDGE: B:15:0x0019 \-\> B:1:?, CROSS_EDGE: B:16:0x0005 \-\> B:13:0x0017\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_6 -> Node_10[style=dashed];
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_10 -> Node_17;
Node_12 -> Node_1;
Node_0 -> Node_2;
Node_4 -> Node_16;
Node_16 -> Node_5;
Node_16 -> Node_13;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_11 -> Node_12;
Node_17 -> Node_13;
Node_13 -> Node_15;
Node_15 -> Node_1;
}

