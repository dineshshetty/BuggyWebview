digraph "CFG forkotlinx.coroutines.internal.LimitedDispatcher.tryAllocateWorker()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object) = (r5 I:kotlinx.coroutines.internal.LimitedDispatcher) kotlinx.coroutines.internal.LimitedDispatcher.workerAllocationLock java.lang.Object  (LINE:92)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: MONITOR_ENTER  (r0 I:??[OBJECT, ARRAY] A[D('lock$iv' java.lang.Object)])  (LINE:129)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:5:0x0005, B:10:0x000e), top: B:16:0x0005 \}\lCatch: all \-\> 0x0017\l|0x0005: IGET  (r3 I:int) = (r5 I:kotlinx.coroutines.internal.LimitedDispatcher) kotlinx.coroutines.internal.LimitedDispatcher.runningWorkers int A[Catch: all \-\> 0x0017, TRY_ENTER] (LINE:93)\l0x0007: IGET  (r4 I:int) = (r5 I:kotlinx.coroutines.internal.LimitedDispatcher) kotlinx.coroutines.internal.LimitedDispatcher.parallelism int A[Catch: all \-\> 0x0017, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: IF  (r3 I:??[int, byte, short, char]) \< (r4 I:??[int, byte, short, char])  \-\> B:10:0x000e \l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$f$synchronized' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x000c|0x000c: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY] A[D('lock$iv' java.lang.Object)]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x000d|RETURN\l|0x000d: RETURN  (r1 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x000e|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:5:0x0005, B:10:0x000e), top: B:16:0x0005 \}\lCatch: all \-\> 0x0017\l|0x000e: IGET  (r3 I:int) = (r5 I:kotlinx.coroutines.internal.LimitedDispatcher) kotlinx.coroutines.internal.LimitedDispatcher.runningWorkers int A[Catch: all \-\> 0x0017, TRY_ENTER] (LINE:94)\l0x0010: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0011: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) A[Catch: all \-\> 0x0017]\l0x0012: IPUT  (r3 I:int), (r5 I:kotlinx.coroutines.internal.LimitedDispatcher) kotlinx.coroutines.internal.LimitedDispatcher.runningWorkers int A[Catch: all \-\> 0x0017, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|0x0015: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY] A[D('lock$iv' java.lang.Object)]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|RETURN\l|0x0016: RETURN  (r4 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|ExcHandler: all \-\> 0x0017\l|0x0017: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0017]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0019|0x0019: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.internal.LimitedDispatcher.tryAllocateWorker((r5 'this' I:kotlinx.coroutines.internal.LimitedDispatcher A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0016 \-\> B:1:?, CROSS_EDGE: B:15:0x0019 \-\> B:1:?, CROSS_EDGE: B:16:0x0005 \-\> B:13:0x0017\lDebug Info:\l  0x0002\-0x000c: r0 'lock$iv' Ljava\/lang\/Object;\l  0x0003\-0x000c: r1 '$i$f$synchronized' I\l  0x0005\-0x000c: r2 '$i$a$\-synchronized\-LimitedDispatcher$tryAllocateWorker$1' I\l  0x000e\-0x0015: r0 'lock$iv' Ljava\/lang\/Object;\l  0x000e\-0x0015: r1 '$i$f$synchronized' I\l  0x000e\-0x0015: r2 '$i$a$\-synchronized\-LimitedDispatcher$tryAllocateWorker$1' I\l  0x0017\-0x0019: r0 'lock$iv' Ljava\/lang\/Object;\l  0x0017\-0x0019: r1 '$i$f$synchronized' I\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:5:0x0005, B:10:0x000e), top: B:16:0x0005 \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_16;
Node_16 -> Node_5;
Node_16 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_17 -> Node_13;
Node_13 -> Node_15;
Node_15 -> Node_1;
}

