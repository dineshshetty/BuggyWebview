digraph "CFG forkotlinx.coroutines.internal.LimitedDispatcher.invokeOnTimeout(JLjava\/lang\/Runnable;Lkotlin\/coroutines\/CoroutineContext;)Lkotlinx\/coroutines\/DisposableHandle;" {
subgraph cluster_Region_1727310223 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|RETURN\l|return r1.$$delegate_0.invokeOnTimeout(r2, r4, r5)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlinx.coroutines.DisposableHandle kotlinx.coroutines.internal.LimitedDispatcher.invokeOnTimeout((r1v0 'this' kotlinx.coroutines.internal.LimitedDispatcher A[IMMUTABLE_TYPE, THIS]), (r2v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Runnable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.coroutines.CoroutineContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.Delay.invokeOnTimeout(long, java.lang.Runnable, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.DisposableHandle, kotlinx.coroutines.EventLoopImplBase.invokeOnTimeout(long, java.lang.Runnable, kotlin.coroutines.CoroutineContext):kotlinx.coroutines.DisposableHandle]\l}"];
MethodNode -> Node_0;Node_3 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
}

