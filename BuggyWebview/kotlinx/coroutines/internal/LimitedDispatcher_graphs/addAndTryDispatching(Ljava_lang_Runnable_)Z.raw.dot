digraph "CFG forkotlinx.coroutines.internal.LimitedDispatcher.addAndTryDispatching(Ljava\/lang\/Runnable;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.internal.LockFreeTaskQueue\<java.lang.Runnable\>) = (r2 I:kotlinx.coroutines.internal.LimitedDispatcher) kotlinx.coroutines.internal.LimitedDispatcher.queue kotlinx.coroutines.internal.LockFreeTaskQueue  (LINE:100)\l0x0002: INVOKE  (r0 I:kotlinx.coroutines.internal.LockFreeTaskQueue), (r3 I:java.lang.Object A[D('block' java.lang.Runnable)]) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeTaskQueue.addLast(java.lang.Object):boolean A[MD:(E):boolean (m)]\l0x0005: IGET  (r0 I:int) = (r2 I:kotlinx.coroutines.internal.LimitedDispatcher) kotlinx.coroutines.internal.LimitedDispatcher.runningWorkers int  (LINE:101)\l0x0007: IGET  (r1 I:int) = (r2 I:kotlinx.coroutines.internal.LimitedDispatcher) kotlinx.coroutines.internal.LimitedDispatcher.parallelism int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|SYNTHETIC\lRETURN\l|0x000b: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000e: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|RETURN\lORIG_RETURN\l|0x000d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private final boolean kotlinx.coroutines.internal.LimitedDispatcher.addAndTryDispatching((r2 'this' I:kotlinx.coroutines.internal.LimitedDispatcher A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Runnable A[D('block' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000d \-\> B:6:0x000e\lDebug Info:\l  \-1 \-0x000e: r3 'block' Ljava\/lang\/Runnable;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_1;
}

