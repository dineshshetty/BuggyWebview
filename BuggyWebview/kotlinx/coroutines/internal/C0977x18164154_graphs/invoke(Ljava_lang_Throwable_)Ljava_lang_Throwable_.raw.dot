digraph "CFG forkotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2.invoke(Ljava\/lang\/Throwable;)Ljava\/lang\/Throwable;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0022, blocks: (B:17:0x0000, B:19:0x0013, B:20:0x001a, B:21:0x0021), top: B:29:0x0000 \}\lCatch: all \-\> 0x0022\l|0x0000: SGET  (r0 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion A[Catch: all \-\> 0x0022, TRY_ENTER] (LINE:70)\l0x0002: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:111)\l0x0003: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('e' java.lang.Throwable)])  (LINE:70)\l0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: IGET  (r3 I:java.lang.reflect.Constructor) = (r6 I:kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2) kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2.$constructor$inlined java.lang.reflect.Constructor A[Catch: all \-\> 0x0022] (LINE:112)\l0x0007: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0008: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: all \-\> 0x0022]\l0x000a: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: APUT  (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r1 I:??[OBJECT, ARRAY] A[D('e' java.lang.Throwable)]) A[Catch: all \-\> 0x0022]\l0x000d: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.lang.reflect.Constructor), (r4 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object A[Catch: all \-\> 0x0022, MD:(java.lang.Object[]):T VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.InstantiationException, java.lang.reflect.InvocationTargetException (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|0x0011: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x001a \l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|TryCatch #0 \{all \-\> 0x0022, blocks: (B:17:0x0000, B:19:0x0013, B:20:0x001a, B:21:0x0021), top: B:29:0x0000 \}\lCatch: all \-\> 0x0022\l|0x0013: CHECK_CAST (r3 I:java.lang.Throwable) = (java.lang.Throwable) (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0022]\l0x0015: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0022, MD:\<T\>:(java.lang.Object):java.lang.Object (m)] (LINE:70)\l0x0019: GOTO  \-\> 0x002d \l}"];
Node_24 [shape=record,label="{24\:\ 0x002d|0x002d: INVOKE  (r1 I:boolean) = (r0 I:java.lang.Object) type: STATIC call: kotlin.Result.isFailure\-impl(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0031|0x0031: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0034 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0033|0x0033: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0034|0x0034: CHECK_CAST (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0036|RETURN\l|0x0036: RETURN  (r0 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|TryCatch #0 \{all \-\> 0x0022, blocks: (B:17:0x0000, B:19:0x0013, B:20:0x001a, B:21:0x0021), top: B:29:0x0000 \}\lCatch: all \-\> 0x0022\l|0x001a: NEW_INSTANCE  (r3 I:java.lang.NullPointerException) =  java.lang.NullPointerException A[Catch: all \-\> 0x0022] (LINE:112)\l0x001c: CONST_STR  (r4 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlin.Throwable\" \l0x001e: INVOKE  (r3 I:java.lang.NullPointerException), (r4 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[Catch: all \-\> 0x0022, MD:(java.lang.String):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0021|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0022, blocks: (B:17:0x0000, B:19:0x0013, B:20:0x001a, B:21:0x0021), top: B:29:0x0000 \}\lCatch: all \-\> 0x0022\l|0x0021: THROW  (r3 I:java.lang.Throwable) A[Catch: all \-\> 0x0022, TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0022|ExcHandler: all \-\> 0x0022\l|0x0022: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0022] (LINE:70)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0023|0x0023: SGET  (r1 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion \l0x0025: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Throwable) type: STATIC call: kotlin.ResultKt.createFailure(java.lang.Throwable):java.lang.Object A[MD:(java.lang.Throwable):java.lang.Object (m)]\l0x0029: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[MD:\<T\>:(java.lang.Object):java.lang.Object (m)]\l}"];
MethodNode[shape=record,label="{public final java.lang.Throwable kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2.invoke((r6 'this' I:kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2 A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.Throwable A[D('e' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:25:0x0031 \-\> B:27:0x0034, CROSS_EDGE: B:21:0x0021 \-\> B:16:?, CROSS_EDGE: B:23:0x0023 \-\> B:24:0x002d\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0022, blocks: (B:17:0x0000, B:19:0x0013, B:20:0x001a, B:21:0x0021), top: B:29:0x0000 \}\lDebug Info:\l  0x0003\-0x0015: r0 '$i$a$\-runCatching\-ExceptionsConstructorKt$safeCtor$1$1' I\l  0x0004\-0x0015: r1 'e' Ljava\/lang\/Throwable;\l  0x0005\-0x0015: r2 '$i$a$\-safeCtor\-ExceptionsConstructorKt$createSafeConstructor$2' I\l  \-1 \-0x0021: r7 'e' Ljava\/lang\/Throwable;\l  0x001a\-0x0022: r0 '$i$a$\-runCatching\-ExceptionsConstructorKt$safeCtor$1$1' I\l  0x001a\-0x0022: r1 'e' Ljava\/lang\/Throwable;\l  0x001a\-0x0022: r2 '$i$a$\-safeCtor\-ExceptionsConstructorKt$createSafeConstructor$2' I\l  0x0022\-0x0036: r7 'e' Ljava\/lang\/Throwable;\lREPLACED_BY: kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2.invoke(java.lang.Throwable):java.lang.Throwable\lBRIDGED_BY: kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2.invoke(java.lang.Throwable):java.lang.Throwable\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [70=4]\}\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function1.invoke(P1):R]\l}"];
MethodNode -> Node_15;Node_15 -> Node_29;
Node_29 -> Node_17;
Node_29 -> Node_22;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_16;
Node_22 -> Node_23;
Node_23 -> Node_24;
}

