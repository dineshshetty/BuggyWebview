digraph "CFG forkotlinx.coroutines.internal.MainDispatcherLoader.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.internal.MainDispatcherLoader) =  kotlinx.coroutines.internal.MainDispatcherLoader \l0x0002: INVOKE  (r0 I:kotlinx.coroutines.internal.MainDispatcherLoader) type: DIRECT call: kotlinx.coroutines.internal.MainDispatcherLoader.\<init\>():void A[MD:():void (m)]\l0x0005: SPUT  (r0 I:kotlinx.coroutines.internal.MainDispatcherLoader) kotlinx.coroutines.internal.MainDispatcherLoader.INSTANCE kotlinx.coroutines.internal.MainDispatcherLoader \l0x0007: CONST_STR  (r1 I:java.lang.String) =  \"kotlinx.coroutines.fast.service.loader\"  (LINE:19)\l0x0009: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000a: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:boolean) type: STATIC call: kotlinx.coroutines.internal.SystemPropsKt.systemProp(java.lang.String, boolean):boolean A[MD:(java.lang.String, boolean):boolean (m)]\l0x000e: SPUT  (r1 I:boolean) kotlinx.coroutines.internal.MainDispatcherLoader.FAST_SERVICE_LOADER_ENABLED boolean \l0x0010: INVOKE  (r0 I:kotlinx.coroutines.MainCoroutineDispatcher) = (r0 I:kotlinx.coroutines.internal.MainDispatcherLoader) type: DIRECT call: kotlinx.coroutines.internal.MainDispatcherLoader.loadMainDispatcher():kotlinx.coroutines.MainCoroutineDispatcher A[MD:():kotlinx.coroutines.MainCoroutineDispatcher (m)] (LINE:22)\l0x0014: SPUT  (r0 I:kotlinx.coroutines.MainCoroutineDispatcher) kotlinx.coroutines.internal.MainDispatcherLoader.dispatcher kotlinx.coroutines.MainCoroutineDispatcher \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|RETURN\l|0x0016: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlinx.coroutines.internal.MainDispatcherLoader.\<clinit\>()  | USE_LINES_HINTS\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

