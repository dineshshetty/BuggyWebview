digraph "CFG forkotlinx.coroutines.internal.LockFreeTaskQueue.addLast(Ljava\/lang\/Object;)Z" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000}"];
Node_21 [shape=record,label="{21\:\ 0x0002|LOOP_START\lLOOP:0: B:21:0x0002\-\>B:33:0x0002\l|kotlinx.coroutines.internal.LockFreeTaskQueueCore r2 = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) r6._cur\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|switch(r2.addLast(r7)) \{\l    case 0: goto L11;\l    case 1: goto L7;\l    case 2: goto L4;\l    default: goto L13;\l\}\l}"];
Node_30 [shape=record,label="{30\:\ 0x0010|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0010|RETURN\l|return false\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0012|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0012|androidx.concurrent.futures.C0125xc40028dd.m112m(kotlinx.coroutines.internal.LockFreeTaskQueue._cur$FU, r6, r2, r2.next())\l}"];
Node_35 [shape=record,label="{35\:\ 0x0002|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0002|LOOP_END\lSYNTHETIC\lLOOP:0: B:21:0x0002\-\>B:33:0x0002\l}"];
Node_32 [shape=record,label="{32\:\ 0x001c|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|RETURN\l|return true\l}"];
Node_34 [shape=record,label="{34\:\ 0x0002|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final boolean kotlinx.coroutines.internal.LockFreeTaskQueue.addLast((r6v0 'this' kotlinx.coroutines.internal.LockFreeTaskQueue\<E\> A[IMMUTABLE_TYPE, THIS]), (r7v0 E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x0012 \-\> B:21:0x0002, CROSS_EDGE: B:28:0x001d \-\> B:19:?, BACK_EDGE: B:22:0x000c \-\> B:21:0x0002\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (TE;)Z\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_30;
Node_22 -> Node_31;
Node_22 -> Node_32;
Node_22 -> Node_34;
Node_30 -> Node_24;
Node_24 -> Node_19;
Node_31 -> Node_26;
Node_26 -> Node_35;
Node_35 -> Node_33;
Node_33 -> Node_21;
Node_32 -> Node_27;
Node_27 -> Node_19;
Node_34 -> Node_33;
}

