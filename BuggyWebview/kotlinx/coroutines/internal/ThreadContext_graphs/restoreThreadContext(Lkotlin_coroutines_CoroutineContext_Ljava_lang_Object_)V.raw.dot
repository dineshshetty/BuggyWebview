digraph "CFG forkotlinx.coroutines.internal.ThreadContextKt.restoreThreadContext(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Object;)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0001|0x0001: SGET  (r0 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.internal.ThreadContextKt.NO_THREAD_ELEMENTS kotlinx.coroutines.internal.Symbol  (LINE:85)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0003|0x0003: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('oldState' java.lang.Object)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0006 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|RETURN\l|0x0005: RETURN   \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|0x0006: INSTANCE_OF  (r0 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('oldState' java.lang.Object)]) kotlinx.coroutines.internal.ThreadState  (LINE:86)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0011 \l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|0x000a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('oldState' java.lang.Object)])  (LINE:88)\l0x000b: CHECK_CAST (r0 I:kotlinx.coroutines.internal.ThreadState) = (kotlinx.coroutines.internal.ThreadState) (r0 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  \l  (r0 I:kotlinx.coroutines.internal.ThreadState)\l  (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l type: VIRTUAL call: kotlinx.coroutines.internal.ThreadState.restore(kotlin.coroutines.CoroutineContext):void A[MD:(kotlin.coroutines.CoroutineContext):void (m)]\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x0020: RETURN   A[SYNTHETIC] (LINE:97)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|0x0011: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:93)\l0x0012: SGET  (r1 I:kotlin.jvm.functions.Function2\<kotlinx.coroutines.ThreadContextElement\<?\>, kotlin.coroutines.CoroutineContext$Element, kotlinx.coroutines.ThreadContextElement\<?\>\>) =  kotlinx.coroutines.internal.ThreadContextKt.findOne kotlin.jvm.functions.Function2 \l0x0014: INVOKE  (r0 I:java.lang.Object) = \l  (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r0 I:java.lang.Object)\l  (r1 I:kotlin.jvm.functions.Function2)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.fold(java.lang.Object, kotlin.jvm.functions.Function2):java.lang.Object A[MD:\<R\>:(R, kotlin.jvm.functions.Function2\<? super R, ? super kotlin.coroutines.CoroutineContext$Element, ? extends R\>):R (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0018|0x0018: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0021 \l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|0x001a: CHECK_CAST (r0 I:kotlinx.coroutines.ThreadContextElement) = (kotlinx.coroutines.ThreadContextElement) (r0 I:??[OBJECT, ARRAY]) \l0x001d: INVOKE  \l  (r0 I:kotlinx.coroutines.ThreadContextElement A[D('element' kotlinx.coroutines.ThreadContextElement)])\l  (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r3 I:java.lang.Object A[D('oldState' java.lang.Object)])\l type: INTERFACE call: kotlinx.coroutines.ThreadContextElement.restoreThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object):void A[MD:(kotlin.coroutines.CoroutineContext, S):void (m)] (LINE:94)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|RETURN\lORIG_RETURN\l|0x0020: RETURN    (LINE:97)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|0x0021: NEW_INSTANCE  (r0 I:java.lang.NullPointerException) =  java.lang.NullPointerException  (LINE:93)\l0x0023: CONST_STR  (r1 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlinx.coroutines.ThreadContextElement\<kotlin.Any?\>\" \l0x0025: INVOKE  (r0 I:java.lang.NullPointerException), (r1 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0028|0x0028: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.internal.ThreadContextKt.restoreThreadContext((r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object A[D('oldState' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0020 \-\> B:16:?, CROSS_EDGE: B:25:0x001a \-\> B:26:0x0020, CROSS_EDGE: B:28:0x0028 \-\> B:16:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001d\-0x0020: r0 'element' Lkotlinx\/coroutines\/ThreadContextElement;\l  \-1 \-0x0028: r2 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x0028: r3 'oldState' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_29;
Node_29 -> Node_16;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_16;
Node_27 -> Node_28;
Node_28 -> Node_16;
}

