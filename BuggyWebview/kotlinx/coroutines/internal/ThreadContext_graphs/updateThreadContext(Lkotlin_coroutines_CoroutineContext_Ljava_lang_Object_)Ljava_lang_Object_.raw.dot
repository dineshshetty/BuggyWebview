digraph "CFG forkotlinx.coroutines.internal.ThreadContextKt.updateThreadContext(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('countOrElement' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0007  (LINE:65)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0002|0x0002: INVOKE  (r0 I:java.lang.Object) = (r3 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)]) type: STATIC call: kotlinx.coroutines.internal.ThreadContextKt.threadContextElements(kotlin.coroutines.CoroutineContext):java.lang.Object A[MD:(kotlin.coroutines.CoroutineContext):java.lang.Object (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|0x000a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:68)\l0x000b: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('countOrElement' java.lang.Object)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0014 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: SGET  (r1 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.internal.ThreadContextKt.NO_THREAD_ELEMENTS kotlinx.coroutines.internal.Symbol \l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|0x0034: RETURN  (r1 I:java.lang.Object A[D('element' kotlinx.coroutines.ThreadContextElement)]) A[SYNTHETIC] (LINE:67)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|0x0014: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('countOrElement' java.lang.Object)]) java.lang.Integer  (LINE:70)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|0x0016: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x002b \l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|0x0018: NEW_INSTANCE  (r1 I:kotlinx.coroutines.internal.ThreadState) =  kotlinx.coroutines.internal.ThreadState  (LINE:72)\l0x001a: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('countOrElement' java.lang.Object)]) \l0x001b: CHECK_CAST (r2 I:java.lang.Number) = (java.lang.Number) (r2 I:??[OBJECT, ARRAY]) \l0x001d: INVOKE  (r2 I:int) = (r2 I:java.lang.Number) type: VIRTUAL call: java.lang.Number.intValue():int A[MD:():int (c)]\l0x0021: INVOKE  \l  (r1 I:kotlinx.coroutines.internal.ThreadState)\l  (r3 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r2 I:int)\l type: DIRECT call: kotlinx.coroutines.internal.ThreadState.\<init\>(kotlin.coroutines.CoroutineContext, int):void A[MD:(kotlin.coroutines.CoroutineContext, int):void (m)]\l0x0024: SGET  (r2 I:kotlin.jvm.functions.Function2\<kotlinx.coroutines.internal.ThreadState, kotlin.coroutines.CoroutineContext$Element, kotlinx.coroutines.internal.ThreadState\>) =  kotlinx.coroutines.internal.ThreadContextKt.updateState kotlin.jvm.functions.Function2 \l0x0026: INVOKE  (r1 I:java.lang.Object) = \l  (r3 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r1 I:java.lang.Object)\l  (r2 I:kotlin.jvm.functions.Function2)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.fold(java.lang.Object, kotlin.jvm.functions.Function2):java.lang.Object A[MD:\<R\>:(R, kotlin.jvm.functions.Function2\<? super R, ? super kotlin.coroutines.CoroutineContext$Element, ? extends R\>):R (m)]\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x0034: RETURN  (r1 I:java.lang.Object A[D('element' kotlinx.coroutines.ThreadContextElement)]) A[SYNTHETIC] (LINE:67)\l}"];
Node_26 [shape=record,label="{26\:\ 0x002b|0x002b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('countOrElement' java.lang.Object)])  (LINE:77)\l0x002c: CHECK_CAST (r1 I:kotlinx.coroutines.ThreadContextElement) = (kotlinx.coroutines.ThreadContextElement) (r1 I:??[OBJECT, ARRAY]) \l0x002f: INVOKE  (r2 I:java.lang.Object) = \l  (r1 I:kotlinx.coroutines.ThreadContextElement A[D('element' kotlinx.coroutines.ThreadContextElement)])\l  (r3 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l type: INTERFACE call: kotlinx.coroutines.ThreadContextElement.updateThreadContext(kotlin.coroutines.CoroutineContext):java.lang.Object A[MD:(kotlin.coroutines.CoroutineContext):S (m)] (LINE:78)\l0x0033: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('element' kotlinx.coroutines.ThreadContextElement)]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0034|RETURN\lORIG_RETURN\l|0x0034: RETURN  (r1 I:java.lang.Object A[D('element' kotlinx.coroutines.ThreadContextElement)])  (LINE:67)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('countOrElement' java.lang.Object)]) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext((r3 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[D('countOrElement' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0018 \-\> B:27:0x0034, CROSS_EDGE: B:26:0x002b \-\> B:27:0x0034, CROSS_EDGE: B:19:0x0007 \-\> B:20:0x0008\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002f\-0x0034: r1 'element' Lkotlinx\/coroutines\/ThreadContextElement;\l  0x0009\-0x0034: r0 'countOrElement' Ljava\/lang\/Object;\l  \-1 \-0x0034: r3 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x0034: r4 'countOrElement' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_28;
Node_28 -> Node_16;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_29;
Node_29 -> Node_16;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_19 -> Node_20;
}

