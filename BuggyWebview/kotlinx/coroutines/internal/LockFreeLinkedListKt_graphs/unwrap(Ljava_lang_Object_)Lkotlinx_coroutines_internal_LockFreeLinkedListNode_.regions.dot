digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListKt.unwrap(Ljava\/lang\/Object;)Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;" {
subgraph cluster_Region_1086193391 {
label = "R(3:2|4|6)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0003|kotlinx.coroutines.internal.Removed r0 = r2 instanceof kotlinx.coroutines.internal.Removed ? (kotlinx.coroutines.internal.Removed) r2 : null\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|PHI: r0 \l  PHI: (r0v2 kotlinx.coroutines.internal.Removed) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|kotlinx.coroutines.internal.LockFreeLinkedListNode r1 = r0 != null ? r0.ref : null\l}"];
Node_22 [shape=record,label="{22\:\ 0x000f|RETURN\lPHI: r1 \l  PHI: (r1v1 kotlinx.coroutines.internal.LockFreeLinkedListNode) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|return r1 == null ? (kotlinx.coroutines.internal.LockFreeLinkedListNode) r2 : r1\l}"];
}
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0000}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0005}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000d}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0011}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0014|ORIG_RETURN\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0009}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.internal.LockFreeLinkedListNode kotlinx.coroutines.internal.LockFreeLinkedListKt.unwrap((r2v0 '$this$unwrap' java.lang.Object A[D('$this$unwrap' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x000f \-\> B:24:0x0014, CROSS_EDGE: B:19:0x000a \-\> B:22:0x000f, CROSS_EDGE: B:18:0x0009 \-\> B:19:0x000a\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_13;Node_16 -> Node_17;
Node_16 -> Node_18;
Node_19 -> Node_21;
Node_19 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_25;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_19;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_24 -> Node_14;
Node_25 -> Node_14;
Node_18 -> Node_19;
}

