digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode.finishAdd(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('next' kotlinx.coroutines.internal.LockFreeLinkedListNode)])  (LINE:546)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0002|LOOP_START\lLOOP:0: B:19:0x0002\-\>B:23:0x0015\l|0x0003: IGET  (r2 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('$this$loop$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l kotlinx.coroutines.internal.LockFreeLinkedListNode._prev java.lang.Object  (LINE:682)\l0x0005: CHECK_CAST (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r2 I:??[OBJECT, ARRAY]) \l0x0007: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: INVOKE  (r4 I:java.lang.Object) = (r5 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.getNext():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:547)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|0x000c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('next' kotlinx.coroutines.internal.LockFreeLinkedListNode)])  \-\> B:22:0x000f \l}"];
Node_22 [shape=record,label="{22\:\ 0x000f|0x000f: SGET  (r4 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.internal.LockFreeLinkedListNode._prev$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:548)\l0x0011: INVOKE  (r4 I:boolean) = \l  (r4 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r6 I:java.lang.Object A[D('next' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l  (r2 I:java.lang.Object A[D('nextPrev' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l  (r5 I:java.lang.Object)\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|LOOP_END\lLOOP:0: B:19:0x0002\-\>B:23:0x0015\l|0x0015: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0002 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|0x0017: INVOKE  (r4 I:boolean) = (r5 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.isRemoved():boolean A[MD:():boolean (m)] (LINE:551)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001b|0x001b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:? \l}"];
Node_26 [shape=record,label="{26\:\ 0x001d|0x001d: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001e: INVOKE  \l  (r6 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('next' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l  (r4 I:kotlinx.coroutines.internal.OpDescriptor)\l type: DIRECT call: kotlinx.coroutines.internal.LockFreeLinkedListNode.correctPrev(kotlinx.coroutines.internal.OpDescriptor):kotlinx.coroutines.internal.LockFreeLinkedListNode A[MD:(kotlinx.coroutines.internal.OpDescriptor):kotlinx.coroutines.internal.LockFreeLinkedListNode (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|RETURN\lORIG_RETURN\l|0x0021: RETURN    (LINE:552)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0021: RETURN   A[SYNTHETIC] (LINE:552)\l}"];
Node_30 [shape=record,label="{30\:\ 0x000e|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|RETURN\l|0x000e: RETURN   \l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.internal.LockFreeLinkedListNode.finishAdd((r5 'this' I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[IMMUTABLE_TYPE, THIS]), (r6 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('next' kotlinx.coroutines.internal.LockFreeLinkedListNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0021 \-\> B:17:?, CROSS_EDGE: B:25:0x001b \-\> B:27:0x0021, BACK_EDGE: B:23:0x0015 \-\> B:19:0x0002\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x0023: r2 'nextPrev' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x0008\-0x0023: r3 '$i$a$\-loop\-LockFreeLinkedListNode$finishAdd$1' I\l  0x0001\-0x0023: r0 '$this$loop$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x0002\-0x0023: r1 '$i$f$loop' I\l  \-1 \-0x0023: r6 'next' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_30[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_19;
Node_23 -> Node_29[style=dashed];
Node_29 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_17;
Node_31 -> Node_17;
Node_30 -> Node_21;
Node_21 -> Node_17;
}

