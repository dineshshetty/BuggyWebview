digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode.getPrevNode()Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;" {
subgraph cluster_Region_801931596 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|kotlinx.coroutines.internal.LockFreeLinkedListNode kotlinx.coroutines.internal.LockFreeLinkedListNode r0 = correctPrev(null)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0005|RETURN\l|return r0 == null ? findPrevNonRemoved((kotlinx.coroutines.internal.LockFreeLinkedListNode) r1._prev) : r0\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0007}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x000f|ORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.internal.LockFreeLinkedListNode kotlinx.coroutines.internal.LockFreeLinkedListNode.getPrevNode((r1v0 'this' kotlinx.coroutines.internal.LockFreeLinkedListNode A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0005 \-\> B:12:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13;
Node_7 -> Node_9;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

