digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode.nextIfRemoved()Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) = (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.getNext():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:557)\l0x0004: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY]) kotlinx.coroutines.internal.Removed \l0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x000c \l}"];
Node_15 [shape=record,label="{15\:\ 0x0009|0x0009: CHECK_CAST (r0 I:kotlinx.coroutines.internal.Removed) = (kotlinx.coroutines.internal.Removed) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0010 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: IGET  (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (r0 I:kotlinx.coroutines.internal.Removed) kotlinx.coroutines.internal.Removed.ref kotlinx.coroutines.internal.LockFreeLinkedListNode \l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: RETURN  (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0012: RETURN  (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) A[SYNTHETIC]\l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|0x000c: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{protected kotlinx.coroutines.internal.LockFreeLinkedListNode kotlinx.coroutines.internal.LockFreeLinkedListNode.nextIfRemoved((r3 'this' I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000d \-\> B:20:0x0012, CROSS_EDGE: B:16:0x000c \-\> B:17:0x000d\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.LockFreeLinkedListNode.nextIfRemoved():kotlinx.coroutines.internal.LockFreeLinkedListNode]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_21[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

