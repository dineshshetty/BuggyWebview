digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode.makeCondAddOp(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;Lkotlin\/jvm\/functions\/Function0;)Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$CondAddOp;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|return new kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1(r3, r4)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp kotlinx.coroutines.internal.LockFreeLinkedListNode.makeCondAddOp((r2v0 'this' kotlinx.coroutines.internal.LockFreeLinkedListNode A[IMMUTABLE_TYPE, THIS]), (r3v0 'node' kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('node' kotlinx.coroutines.internal.LockFreeLinkedListNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.jvm.functions.Function0\<java.lang.Boolean\> A[D('condition' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lSIGNATURE: (Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;Lkotlin\/jvm\/functions\/Function0\<Ljava\/lang\/Boolean;\>;)Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$CondAddOp;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

