digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode.findPrevNonRemoved(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;)Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;" {
subgraph cluster_Region_1695845236 {
label = "R(3:1|(1:4)|6)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlinx.coroutines.internal.LockFreeLinkedListNode r0 = r3\l}"];
subgraph cluster_LoopRegion_880300995 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0005|if (r0.isRemoved() != false) goto L4\l}"];
subgraph cluster_Region_297868483 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0008|LOOP_END\lLOOP:0: B:11:0x0001\-\>B:14:0x0008\l|kotlinx.coroutines.internal.LockFreeLinkedListNode r0 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) r0._prev\l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x0007|RETURN\l|return r0\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0001|LOOP_START\lLOOP:0: B:11:0x0001\-\>B:14:0x0008\lPHI: r0 \l  PHI: (r0v1 kotlinx.coroutines.internal.LockFreeLinkedListNode) = (r0v0 kotlinx.coroutines.internal.LockFreeLinkedListNode), (r0v3 kotlinx.coroutines.internal.LockFreeLinkedListNode) binds: [B:10:0x0000, B:14:0x0008] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0007|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final kotlinx.coroutines.internal.LockFreeLinkedListNode kotlinx.coroutines.internal.LockFreeLinkedListNode.findPrevNonRemoved((r2v0 'this' kotlinx.coroutines.internal.LockFreeLinkedListNode A[IMMUTABLE_TYPE, THIS]), (r3v0 'current' kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('current' kotlinx.coroutines.internal.LockFreeLinkedListNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x0008 \-\> B:11:0x0001\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_12 -> Node_14;
Node_12 -> Node_15[style=dashed];
Node_14 -> Node_11;
Node_13 -> Node_9;
Node_8 -> Node_10;
Node_11 -> Node_12;
Node_15 -> Node_13;
}

