digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode.removeFirstOrNull()Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|LOOP_START\lLOOP:0: B:14:0x0000\-\>B:21:0x0012\l|0x0001: INVOKE  (r0 I:java.lang.Object) = (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.getNext():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:286)\l0x0005: CHECK_CAST (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('first' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000b  (LINE:287)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: INVOKE  (r1 I:boolean) = \l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('first' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.remove():boolean A[MD:():boolean (m)] (LINE:288)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0012 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0012|LOOP_END\lLOOP:0: B:14:0x0000\-\>B:21:0x0012\l|0x0012: INVOKE  \l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('first' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.helpRemove():void A[MD:():void (m)] (LINE:289)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|RETURN\l|0x0011: RETURN  \l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('first' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|RETURN\l|0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: RETURN  (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) \l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.internal.LockFreeLinkedListNode kotlinx.coroutines.internal.LockFreeLinkedListNode.removeFirstOrNull((r2 'this' I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0011 \-\> B:13:?, BACK_EDGE: B:21:0x0012 \-\> B:14:0x0000\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x0015: r0 'first' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_18;
Node_15 -> Node_22[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_23[style=dashed];
Node_21 -> Node_14;
Node_23 -> Node_20;
Node_20 -> Node_13;
Node_22 -> Node_16;
Node_16 -> Node_13;
}

