digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode.helpRemovePrev()V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY])  (LINE:274)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0001|LOOP_START\lLOOP:0: B:12:0x0001\-\>B:16:0x000f\l|0x0002: INVOKE  (r1 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('node' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.getNext():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:276)\l0x0006: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('next' java.lang.Object)]) kotlinx.coroutines.internal.Removed  (LINE:277)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0008|0x0008: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x000f \l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|LOOP_END\lLOOP:0: B:12:0x0001\-\>B:16:0x000f\l|0x000f: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('next' java.lang.Object)])  (LINE:278)\l0x0010: CHECK_CAST (r2 I:kotlinx.coroutines.internal.Removed) = (kotlinx.coroutines.internal.Removed) (r2 I:??[OBJECT, ARRAY]) \l0x0012: IGET  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('node' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) = (r2 I:kotlinx.coroutines.internal.Removed) kotlinx.coroutines.internal.Removed.ref kotlinx.coroutines.internal.LockFreeLinkedListNode \l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|0x000a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('next' java.lang.Object)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:281)\l0x000b: INVOKE  \l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('node' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l  (r1 I:kotlinx.coroutines.internal.OpDescriptor)\l type: DIRECT call: kotlinx.coroutines.internal.LockFreeLinkedListNode.correctPrev(kotlinx.coroutines.internal.OpDescriptor):kotlinx.coroutines.internal.LockFreeLinkedListNode A[MD:(kotlinx.coroutines.internal.OpDescriptor):kotlinx.coroutines.internal.LockFreeLinkedListNode (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000e|RETURN\l|0x000e: RETURN    (LINE:282)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.internal.LockFreeLinkedListNode.helpRemovePrev((r3 'this' I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:16:0x000f \-\> B:12:0x0001\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x000a: r1 'next' Ljava\/lang\/Object;\l  0x000f\-0x0014: r1 'next' Ljava\/lang\/Object;\l  0x0001\-0x0014: r0 'node' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_16;
Node_13 -> Node_17[style=dashed];
Node_16 -> Node_12;
Node_17 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_10;
}

