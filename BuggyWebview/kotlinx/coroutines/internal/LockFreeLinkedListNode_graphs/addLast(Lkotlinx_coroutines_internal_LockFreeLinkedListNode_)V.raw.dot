digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode.addLast(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;)V" {
Node_6 [shape=record,label="{6\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0000|LOOP_START\lLOOP:0: B:8:0x0000\-\>B:9:0x0009\l|0x0001: INVOKE  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.getPrevNode():kotlinx.coroutines.internal.LockFreeLinkedListNode A[MD:():kotlinx.coroutines.internal.LockFreeLinkedListNode (m)] (LINE:144)\l0x0005: INVOKE  (r0 I:boolean) = \l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode)\l  (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('node' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l  (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode)\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.addNext(kotlinx.coroutines.internal.LockFreeLinkedListNode, kotlinx.coroutines.internal.LockFreeLinkedListNode):boolean A[MD:(kotlinx.coroutines.internal.LockFreeLinkedListNode, kotlinx.coroutines.internal.LockFreeLinkedListNode):boolean (m)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0009|LOOP_END\lLOOP:0: B:8:0x0000\-\>B:9:0x0009\l|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0000 \l}"];
Node_11 [shape=record,label="{11\:\ 0x000b|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x000b|RETURN\l|0x000b: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.internal.LockFreeLinkedListNode.addLast((r1 'this' I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('node' kotlinx.coroutines.internal.LockFreeLinkedListNode), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:9:0x0009 \-\> B:8:0x0000\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000b: r2 'node' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l}"];
MethodNode -> Node_6;Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_8;
Node_9 -> Node_11[style=dashed];
Node_11 -> Node_10;
Node_10 -> Node_7;
}

