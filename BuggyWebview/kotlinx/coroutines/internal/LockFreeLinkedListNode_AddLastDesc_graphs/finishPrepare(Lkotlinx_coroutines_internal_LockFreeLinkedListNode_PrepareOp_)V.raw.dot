digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode.AddLastDesc.finishPrepare(Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) =  kotlinx.coroutines.internal.LockFreeLinkedListNode.AddLastDesc._affectedNode$FU java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:337)\l0x0002: IGET  (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = \l  (r4 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('prepareOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)])\l kotlinx.coroutines.internal.LockFreeLinkedListNode.PrepareOp.affected kotlinx.coroutines.internal.LockFreeLinkedListNode \l0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: INVOKE  \l  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r3 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean A[MD:(java.util.concurrent.atomic.AtomicReferenceFieldUpdater, java.lang.Object, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: RETURN    (LINE:338)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.internal.LockFreeLinkedListNode.AddLastDesc.finishPrepare((r3 'this' I:kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc\<T extends kotlinx.coroutines.internal.LockFreeLinkedListNode\> A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp A[D('prepareOp' kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r4 'prepareOp' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode$PrepareOp;\lTYPE_VARS: [T extends kotlinx.coroutines.internal.LockFreeLinkedListNode]\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.LockFreeLinkedListNode.AbstractAtomicDesc.finishPrepare(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

