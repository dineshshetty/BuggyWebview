digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode.AddLastDesc.takeAffectedNode(Lkotlinx\/coroutines\/internal\/OpDescriptor;)Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc) kotlinx.coroutines.internal.LockFreeLinkedListNode.AddLastDesc.queue kotlinx.coroutines.internal.LockFreeLinkedListNode  (LINE:325)\l0x0002: INVOKE  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = \l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode)\l  (r2 I:kotlinx.coroutines.internal.OpDescriptor A[D('op' kotlinx.coroutines.internal.OpDescriptor)])\l type: STATIC call: kotlinx.coroutines.internal.LockFreeLinkedListNode.access$correctPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode, kotlinx.coroutines.internal.OpDescriptor):kotlinx.coroutines.internal.LockFreeLinkedListNode A[MD:(kotlinx.coroutines.internal.LockFreeLinkedListNode, kotlinx.coroutines.internal.OpDescriptor):kotlinx.coroutines.internal.LockFreeLinkedListNode (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected final kotlinx.coroutines.internal.LockFreeLinkedListNode kotlinx.coroutines.internal.LockFreeLinkedListNode.AddLastDesc.takeAffectedNode((r1 'this' I:kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc\<T extends kotlinx.coroutines.internal.LockFreeLinkedListNode\> A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlinx.coroutines.internal.OpDescriptor A[D('op' kotlinx.coroutines.internal.OpDescriptor), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0006: r2 'op' Lkotlinx\/coroutines\/internal\/OpDescriptor;\lTYPE_VARS: [T extends kotlinx.coroutines.internal.LockFreeLinkedListNode]\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.LockFreeLinkedListNode.AbstractAtomicDesc.takeAffectedNode(kotlinx.coroutines.internal.OpDescriptor):kotlinx.coroutines.internal.LockFreeLinkedListNode]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

