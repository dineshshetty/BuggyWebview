digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode.RemoveFirstDesc.takeAffectedNode(Lkotlinx\/coroutines\/internal\/OpDescriptor;)Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (r6 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc) kotlinx.coroutines.internal.LockFreeLinkedListNode.RemoveFirstDesc.queue kotlinx.coroutines.internal.LockFreeLinkedListNode  (LINE:363)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|LOOP_START\lLOOP:0: B:17:0x0003\-\>B:23:0x0016\l|0x0004: IGET  (r2 I:java.lang.Object) = \l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('$this$loop$iv' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l kotlinx.coroutines.internal.LockFreeLinkedListNode._next java.lang.Object  (LINE:673)\l0x0006: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: INSTANCE_OF  (r4 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('next' java.lang.Object)]) kotlinx.coroutines.internal.OpDescriptor  (LINE:364)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0020 \l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|0x000b: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('next' java.lang.Object)])  (LINE:365)\l0x000c: CHECK_CAST (r4 I:kotlinx.coroutines.internal.OpDescriptor) = (kotlinx.coroutines.internal.OpDescriptor) (r4 I:??[OBJECT, ARRAY]) \l0x000e: INVOKE  (r4 I:boolean) = \l  (r7 I:kotlinx.coroutines.internal.OpDescriptor A[D('op' kotlinx.coroutines.internal.OpDescriptor)])\l  (r4 I:kotlinx.coroutines.internal.OpDescriptor)\l type: VIRTUAL call: kotlinx.coroutines.internal.OpDescriptor.isEarlierThan(kotlinx.coroutines.internal.OpDescriptor):boolean A[MD:(kotlinx.coroutines.internal.OpDescriptor):boolean (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|0x0012: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0016 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|LOOP_END\lLOOP:0: B:17:0x0003\-\>B:23:0x0016\l|0x0016: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('next' java.lang.Object)])  (LINE:367)\l0x0017: CHECK_CAST (r4 I:kotlinx.coroutines.internal.OpDescriptor) = (kotlinx.coroutines.internal.OpDescriptor) (r4 I:??[OBJECT, ARRAY]) \l0x0019: IGET  (r5 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (r6 I:kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc) kotlinx.coroutines.internal.LockFreeLinkedListNode.RemoveFirstDesc.queue kotlinx.coroutines.internal.LockFreeLinkedListNode \l0x001b: INVOKE  (r4 I:kotlinx.coroutines.internal.OpDescriptor), (r5 I:java.lang.Object) type: VIRTUAL call: kotlinx.coroutines.internal.OpDescriptor.perform(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):java.lang.Object (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0014|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0014|RETURN\l|0x0014: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:366)\l0x0015: RETURN  (r4 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0020|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0020|0x0020: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('next' java.lang.Object)])  (LINE:369)\l0x0021: CHECK_CAST (r4 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0023|RETURN\l|0x0023: RETURN  (r4 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) \l}"];
MethodNode[shape=record,label="{protected final kotlinx.coroutines.internal.LockFreeLinkedListNode kotlinx.coroutines.internal.LockFreeLinkedListNode.RemoveFirstDesc.takeAffectedNode((r6 'this' I:kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc\<T\> A[IMMUTABLE_TYPE, THIS]), (r7 I:kotlinx.coroutines.internal.OpDescriptor A[D('op' kotlinx.coroutines.internal.OpDescriptor), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x0016 \-\> B:17:0x0003, CROSS_EDGE: B:25:0x0023 \-\> B:15:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x001f: r2 'next' Ljava\/lang\/Object;\l  0x0007\-0x001f: r3 '$i$a$\-loop\-LockFreeLinkedListNode$RemoveFirstDesc$takeAffectedNode$1' I\l  0x0002\-0x0023: r0 '$this$loop$iv' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x0003\-0x0023: r1 '$i$f$loop' I\l  0x0020\-0x0023: r2 'next' Ljava\/lang\/Object;\l  0x0020\-0x0023: r3 '$i$a$\-loop\-LockFreeLinkedListNode$RemoveFirstDesc$takeAffectedNode$1' I\l  \-1 \-0x0023: r7 'op' Lkotlinx\/coroutines\/internal\/OpDescriptor;\lTYPE_VARS: [T]\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.LockFreeLinkedListNode.AbstractAtomicDesc.takeAffectedNode(kotlinx.coroutines.internal.OpDescriptor):kotlinx.coroutines.internal.LockFreeLinkedListNode]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_23;
Node_20 -> Node_26[style=dashed];
Node_23 -> Node_17;
Node_26 -> Node_21;
Node_21 -> Node_15;
Node_27 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_15;
}

