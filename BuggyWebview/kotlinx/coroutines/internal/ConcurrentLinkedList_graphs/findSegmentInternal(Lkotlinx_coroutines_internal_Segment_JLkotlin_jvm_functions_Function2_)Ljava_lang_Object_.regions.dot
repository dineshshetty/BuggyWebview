digraph "CFG forkotlinx.coroutines.internal.ConcurrentLinkedListKt.findSegmentInternal(Lkotlinx\/coroutines\/internal\/Segment;JLkotlin\/jvm\/functions\/Function2;)Ljava\/lang\/Object;" {
subgraph cluster_Region_803105017 {
label = "R(2:1|(1:(2:10|(2:(1:30)|(2:12|(1:26)(2:15|(2:(1:20)|21)(0)))))(1:8)))";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x0000|kotlinx.coroutines.internal.Segment r1 = r8\l}"];
subgraph cluster_LoopRegion_1737885541 {
label = "LOOP:0: (1:(2:10|(2:(1:30)|(2:12|(1:26)(2:15|(2:(1:20)|21)(0)))))(1:8))";
node [shape=record,color=blue];
subgraph cluster_Region_1782934984 {
label = "R(1:(2:10|(2:(1:30)|(2:12|(1:26)(2:15|(2:(1:20)|21)(0)))))(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_624351485 {
label = "IF [B:70:0x0008, B:72:0x000e] THEN: R(2:10|(2:(1:30)|(2:12|(1:26)(2:15|(2:(1:20)|21)(0))))) ELSE: R(1:8)";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x0008|if (r1.getId() \< r9) goto L10\l}"];
Node_72 [shape=record,label="{72\:\ 0x000e|ADDED_TO_REGION\l|if (r1.getRemoved() != false) goto L10\l}"];
subgraph cluster_Region_2037638402 {
label = "R(2:10|(2:(1:30)|(2:12|(1:26)(2:15|(2:(1:20)|21)(0)))))";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x0016|kotlinx.coroutines.internal.ConcurrentLinkedListNode kotlinx.coroutines.internal.ConcurrentLinkedListNode r2 = r1\ljava.lang.Object java.lang.Object r4 = r2.getNextOrClosed()\l}"];
subgraph cluster_Region_1654773821 {
label = "R(2:(1:30)|(2:12|(1:26)(2:15|(2:(1:20)|21)(0))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_997269732 {
label = "IF [B:77:0x0023] THEN: R(1:30) ELSE: null";
node [shape=record,color=blue];
Node_77 [shape=record,label="{77\:\ 0x0023|if (r4 == kotlinx.coroutines.internal.ConcurrentLinkedList.CLOSED) goto L28\l}"];
subgraph cluster_Region_1466674569 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x002e|RETURN\l|return kotlinx.coroutines.internal.SegmentOrClosed.m1679constructorimpl(kotlinx.coroutines.internal.ConcurrentLinkedList.CLOSED)\l}"];
}
}
subgraph cluster_Region_434356422 {
label = "R(2:12|(1:26)(2:15|(2:(1:20)|21)(0)))";
node [shape=record,color=blue];
Node_80 [shape=record,label="{80\:\ 0x002f|kotlinx.coroutines.internal.Segment kotlinx.coroutines.internal.Segment r2 = (kotlinx.coroutines.internal.Segment) ((kotlinx.coroutines.internal.ConcurrentLinkedListNode) r4)\l}"];
subgraph cluster_IfRegion_812841550 {
label = "IF [B:81:0x0038] THEN: R(1:26) ELSE: R(2:15|(2:(1:20)|21)(0))";
node [shape=record,color=blue];
Node_81 [shape=record,label="{81\:\ 0x0038|if (r2 != null) goto L25\l}"];
subgraph cluster_Region_1711008187 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_82 [shape=record,label="{82\:\ 0x003a|r1 = r2\l}"];
}
subgraph cluster_Region_1132428710 {
label = "R(2:15|(2:(1:20)|21)(0))";
node [shape=record,color=blue];
Node_83 [shape=record,label="{83\:\ 0x003c|kotlinx.coroutines.internal.Segment kotlinx.coroutines.internal.Segment r3 = r11.invoke(java.lang.Long.valueOf(r1.getId() + 1), r1)\l}"];
subgraph cluster_IfRegion_1362019443 {
label = "IF [B:84:0x0054] THEN: R(2:(1:20)|21) ELSE: R(0)";
node [shape=record,color=blue];
Node_84 [shape=record,label="{84\:\ 0x0054|if (r1.trySetNext(r3) != false) goto L17\l}"];
subgraph cluster_Region_533836360 {
label = "R(2:(1:20)|21)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1112280987 {
label = "IF [B:86:0x005a] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_86 [shape=record,label="{86\:\ 0x005a|if (r1.getRemoved() != false) goto L20\l}"];
subgraph cluster_Region_611432741 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_87 [shape=record,label="{87\:\ 0x005c|r1.remove()\l}"];
}
}
Node_88 [shape=record,label="{88\:\ 0x005f|r1 = r3\l}"];
}
subgraph cluster_Region_1127726 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
}
subgraph cluster_Region_475755072 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_75 [shape=record,label="{75\:\ 0x0015|RETURN\l|return kotlinx.coroutines.internal.SegmentOrClosed.m1679constructorimpl(r1)\l}"];
}
}
}
}
}
Node_66 [shape=record,color=red,label="{66\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x0002|LOOP_START\lLOOP:0: B:69:0x0002\-\>B:95:0x0002\lPHI: r1 \l  PHI: (r1v1 'cur' kotlinx.coroutines.internal.Segment) = (r1v0 'cur' kotlinx.coroutines.internal.Segment), (r1v3 'cur' kotlinx.coroutines.internal.Segment) binds: [B:68:0x0000, B:95:0x0002] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_71 [shape=record,color=red,label="{71\:\ 0x000a}"];
Node_92 [shape=record,color=red,label="{92\:\ 0x0011|SYNTHETIC\l}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x0011}"];
Node_67 [shape=record,color=red,label="{67\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_91 [shape=record,color=red,label="{91\:\ 0x003c|SYNTHETIC\l}"];
Node_93 [shape=record,color=red,label="{93\:\ 0x0056|SYNTHETIC\l}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x0056}"];
Node_97 [shape=record,color=red,label="{97\:\ 0x0002|SYNTHETIC\l}"];
Node_95 [shape=record,color=red,label="{95\:\ 0x0002|LOOP_END\lSYNTHETIC\lLOOP:0: B:69:0x0002\-\>B:95:0x0002\lPHI: r1 \l  PHI: (r1v3 'cur' kotlinx.coroutines.internal.Segment) = (r1v2 'cur' kotlinx.coroutines.internal.Segment), (r1v1 'cur' kotlinx.coroutines.internal.Segment), (r1v4 'cur' kotlinx.coroutines.internal.Segment) binds: [B:98:0x0002, B:96:0x0002, B:97:0x0002] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_96 [shape=record,color=red,label="{96\:\ 0x0002|SYNTHETIC\l}"];
Node_94 [shape=record,color=red,label="{94\:\ 0x003a|SYNTHETIC\l}"];
Node_98 [shape=record,color=red,label="{98\:\ 0x0002|SYNTHETIC\l}"];
Node_90 [shape=record,color=red,label="{90\:\ 0x0025|SYNTHETIC\l}"];
Node_78 [shape=record,color=red,label="{78\:\ 0x0025}"];
MethodNode[shape=record,label="{private static final java.lang.Object kotlinx.coroutines.internal.ConcurrentLinkedListKt.findSegmentInternal((r8v0 S extends kotlinx.coroutines.internal.Segment\<S\> A[D('$this$findSegmentInternal' kotlinx.coroutines.internal.Segment), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'id' long A[D('id' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 kotlin.jvm.functions.Function2\<? super java.lang.Long, ? super S extends kotlinx.coroutines.internal.Segment\<S\>, ? extends S extends kotlinx.coroutines.internal.Segment\<S\>\> A[D('createNewSegment' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:79:0x002e \-\> B:67:?, BACK_EDGE: B:82:0x003a \-\> B:69:0x0002, BACK_EDGE: B:88:0x005f \-\> B:69:0x0002, CROSS_EDGE: B:86:0x005a \-\> B:88:0x005f, BACK_EDGE: B:84:0x0054 \-\> B:69:0x0002, CROSS_EDGE: B:70:0x0008 \-\> B:76:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends kotlinx.coroutines.internal.Segment\<S\>]\lSIGNATURE: \<S:Lkotlinx\/coroutines\/internal\/Segment\<TS;\>;\>(TS;JLkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Long;\-TS;+TS;\>;)Ljava\/lang\/Object;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\}\l}"];
MethodNode -> Node_66;Node_68 -> Node_69;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_76;
Node_72 -> Node_76;
Node_72 -> Node_92[style=dashed];
Node_76 -> Node_77;
Node_77 -> Node_80[style=dashed];
Node_77 -> Node_90;
Node_79 -> Node_67;
Node_80 -> Node_81;
Node_81 -> Node_91[style=dashed];
Node_81 -> Node_94;
Node_82 -> Node_98;
Node_83 -> Node_84;
Node_84 -> Node_93;
Node_84 -> Node_96[style=dashed];
Node_86 -> Node_87;
Node_86 -> Node_88[style=dashed];
Node_87 -> Node_88;
Node_88 -> Node_97;
Node_75 -> Node_67;
Node_66 -> Node_68;
Node_69 -> Node_70;
Node_71 -> Node_72;
Node_92 -> Node_74;
Node_74 -> Node_75;
Node_91 -> Node_83;
Node_93 -> Node_85;
Node_85 -> Node_86;
Node_97 -> Node_95;
Node_95 -> Node_69;
Node_96 -> Node_95;
Node_94 -> Node_82;
Node_98 -> Node_95;
Node_90 -> Node_78;
Node_78 -> Node_79;
}

