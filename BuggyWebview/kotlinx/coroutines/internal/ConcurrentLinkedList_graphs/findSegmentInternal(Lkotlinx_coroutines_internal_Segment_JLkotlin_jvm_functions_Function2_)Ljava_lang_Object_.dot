digraph "CFG forkotlinx.coroutines.internal.ConcurrentLinkedListKt.findSegmentInternal(Lkotlinx\/coroutines\/internal\/Segment;JLkotlin\/jvm\/functions\/Function2;)Ljava\/lang\/Object;" {
Node_66 [shape=record,label="{66\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_68 [shape=record,label="{68\:\ 0x0000|r1 = r8\l}"];
Node_69 [shape=record,label="{69\:\ 0x0002|LOOP_START\lLOOP:0: B:69:0x0002\-\>B:95:0x0002\lPHI: r1 \l  PHI: (r1v1 'cur' kotlinx.coroutines.internal.Segment) = (r1v0 'cur' kotlinx.coroutines.internal.Segment), (r1v3 'cur' kotlinx.coroutines.internal.Segment) binds: [B:68:0x0000, B:95:0x0002] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_70 [shape=record,label="{70\:\ 0x0008|if ((r1.getId() \> r9 ? 1 : (r1.getId() == r9 ? 0 : \-1)) \< 0) goto L10\l}"];
Node_71 [shape=record,label="{71\:\ 0x000a}"];
Node_72 [shape=record,label="{72\:\ 0x000e|if (r1.getRemoved() == false) goto L6\l}"];
Node_92 [shape=record,label="{92\:\ 0x0011|SYNTHETIC\l}"];
Node_74 [shape=record,label="{74\:\ 0x0011}"];
Node_75 [shape=record,label="{75\:\ 0x0015|RETURN\l|return kotlinx.coroutines.internal.SegmentOrClosed.m1679constructorimpl(r1)\l}"];
Node_67 [shape=record,label="{67\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_76 [shape=record,label="{76\:\ 0x0016|kotlinx.coroutines.internal.ConcurrentLinkedListNode r2 = r1\ljava.lang.Object r4 = r2.getNextOrClosed()\l}"];
Node_77 [shape=record,label="{77\:\ 0x0023|if (r4 != kotlinx.coroutines.internal.ConcurrentLinkedList.CLOSED) goto L12\l}"];
Node_80 [shape=record,label="{80\:\ 0x002f|kotlinx.coroutines.internal.Segment r2 = (kotlinx.coroutines.internal.Segment) ((kotlinx.coroutines.internal.ConcurrentLinkedListNode) r4)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0038|if (r2 == null) goto L14\l}"];
Node_91 [shape=record,label="{91\:\ 0x003c|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x003c|kotlinx.coroutines.internal.Segment r3 = r11.invoke(java.lang.Long.valueOf(r1.getId() + 1), r1)\l}"];
Node_84 [shape=record,label="{84\:\ 0x0054|if (r1.trySetNext(r3) == false) goto L24\l}"];
Node_93 [shape=record,label="{93\:\ 0x0056|SYNTHETIC\l}"];
Node_85 [shape=record,label="{85\:\ 0x0056}"];
Node_86 [shape=record,label="{86\:\ 0x005a|if (r1.getRemoved() == false) goto L21\l}"];
Node_87 [shape=record,label="{87\:\ 0x005c|r1.remove()\l}"];
Node_88 [shape=record,label="{88\:\ 0x005f|r1 = r3\l}"];
Node_97 [shape=record,label="{97\:\ 0x0002|SYNTHETIC\l}"];
Node_95 [shape=record,label="{95\:\ 0x0002|LOOP_END\lSYNTHETIC\lLOOP:0: B:69:0x0002\-\>B:95:0x0002\lPHI: r1 \l  PHI: (r1v3 'cur' kotlinx.coroutines.internal.Segment) = (r1v2 'cur' kotlinx.coroutines.internal.Segment), (r1v1 'cur' kotlinx.coroutines.internal.Segment), (r1v4 'cur' kotlinx.coroutines.internal.Segment) binds: [B:98:0x0002, B:96:0x0002, B:97:0x0002] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_96 [shape=record,label="{96\:\ 0x0002|SYNTHETIC\l}"];
Node_94 [shape=record,label="{94\:\ 0x003a|SYNTHETIC\l}"];
Node_82 [shape=record,label="{82\:\ 0x003a|r1 = r2\l}"];
Node_98 [shape=record,label="{98\:\ 0x0002|SYNTHETIC\l}"];
Node_90 [shape=record,label="{90\:\ 0x0025|SYNTHETIC\l}"];
Node_78 [shape=record,label="{78\:\ 0x0025}"];
Node_79 [shape=record,label="{79\:\ 0x002e|RETURN\l|return kotlinx.coroutines.internal.SegmentOrClosed.m1679constructorimpl(kotlinx.coroutines.internal.ConcurrentLinkedList.CLOSED)\l}"];
MethodNode[shape=record,label="{private static final java.lang.Object kotlinx.coroutines.internal.ConcurrentLinkedListKt.findSegmentInternal((r8v0 S extends kotlinx.coroutines.internal.Segment\<S\> A[D('$this$findSegmentInternal' kotlinx.coroutines.internal.Segment), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'id' long A[D('id' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 kotlin.jvm.functions.Function2\<? super java.lang.Long, ? super S extends kotlinx.coroutines.internal.Segment\<S\>, ? extends S extends kotlinx.coroutines.internal.Segment\<S\>\> A[D('createNewSegment' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:79:0x002e \-\> B:67:?, BACK_EDGE: B:82:0x003a \-\> B:69:0x0002, BACK_EDGE: B:88:0x005f \-\> B:69:0x0002, CROSS_EDGE: B:86:0x005a \-\> B:88:0x005f, BACK_EDGE: B:84:0x0054 \-\> B:69:0x0002, CROSS_EDGE: B:70:0x0008 \-\> B:76:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends kotlinx.coroutines.internal.Segment\<S\>]\lSIGNATURE: \<S:Lkotlinx\/coroutines\/internal\/Segment\<TS;\>;\>(TS;JLkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Long;\-TS;+TS;\>;)Ljava\/lang\/Object;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\}\l}"];
MethodNode -> Node_66;Node_66 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_76;
Node_71 -> Node_72;
Node_72 -> Node_76[style=dashed];
Node_72 -> Node_92;
Node_92 -> Node_74;
Node_74 -> Node_75;
Node_75 -> Node_67;
Node_76 -> Node_77;
Node_77 -> Node_80;
Node_77 -> Node_90[style=dashed];
Node_80 -> Node_81;
Node_81 -> Node_91;
Node_81 -> Node_94[style=dashed];
Node_91 -> Node_83;
Node_83 -> Node_84;
Node_84 -> Node_93[style=dashed];
Node_84 -> Node_96;
Node_93 -> Node_85;
Node_85 -> Node_86;
Node_86 -> Node_87[style=dashed];
Node_86 -> Node_88;
Node_87 -> Node_88;
Node_88 -> Node_97;
Node_97 -> Node_95;
Node_95 -> Node_69;
Node_96 -> Node_95;
Node_94 -> Node_82;
Node_82 -> Node_98;
Node_98 -> Node_95;
Node_90 -> Node_78;
Node_78 -> Node_79;
Node_79 -> Node_67;
}

