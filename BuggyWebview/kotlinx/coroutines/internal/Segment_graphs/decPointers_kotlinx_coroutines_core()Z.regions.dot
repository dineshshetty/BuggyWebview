digraph "CFG forkotlinx.coroutines.internal.Segment.decPointers$kotlinx_coroutines_core()Z" {
subgraph cluster_Region_1223693670 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000c|RETURN\l|return kotlinx.coroutines.internal.Segment.cleanedAndPointers$FU.addAndGet(r2, androidx.core.internal.view.SupportMenu.CATEGORY_MASK) == getMaxSlots() && !isTail()\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000e}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0012|REMOVE\lADDED_TO_REGION\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0014|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0016|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public final boolean kotlinx.coroutines.internal.Segment.decPointers$kotlinx_coroutines_core((r2v0 'this' kotlinx.coroutines.internal.Segment\<S extends kotlinx.coroutines.internal.Segment\<S\>\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0016 \-\> B:18:0x0017, CROSS_EDGE: B:13:0x000c \-\> B:17:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends kotlinx.coroutines.internal.Segment\<S\>]\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_17;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

