digraph "CFG forkotlinx.coroutines.internal.Segment.getRemoved()Z" {
subgraph cluster_Region_788910429 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0006|RETURN\l|return r2.cleanedAndPointers == getMaxSlots() && !isTail()\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0008}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000c|REMOVE\lADDED_TO_REGION\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000e|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0010|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.internal.Segment.getRemoved((r2v0 'this' kotlinx.coroutines.internal.Segment\<S extends kotlinx.coroutines.internal.Segment\<S\>\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0010 \-\> B:18:0x0011, CROSS_EDGE: B:13:0x0006 \-\> B:17:0x0010\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends kotlinx.coroutines.internal.Segment\<S\>]\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.ConcurrentLinkedListNode.getRemoved():boolean]\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_17;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

