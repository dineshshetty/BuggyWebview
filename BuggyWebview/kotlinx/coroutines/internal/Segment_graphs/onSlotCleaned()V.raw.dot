digraph "CFG forkotlinx.coroutines.internal.Segment.onSlotCleaned()V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: SGET  (r0 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater) =  kotlinx.coroutines.internal.Segment.cleanedAndPointers$FU java.util.concurrent.atomic.AtomicIntegerFieldUpdater  (LINE:219)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.concurrent.atomic.AtomicIntegerFieldUpdater), (r2 I:java.lang.Object) type: VIRTUAL call: java.util.concurrent.atomic.AtomicIntegerFieldUpdater.incrementAndGet(java.lang.Object):int A[MD:(T):int (c)]\l0x0006: INVOKE  (r1 I:int) = (r2 I:kotlinx.coroutines.internal.Segment) type: VIRTUAL call: kotlinx.coroutines.internal.Segment.getMaxSlots():int A[MD:():int (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:? \l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|0x000c: INVOKE  (r0 I:boolean) = (r2 I:kotlinx.coroutines.internal.Segment) type: VIRTUAL call: kotlinx.coroutines.internal.Segment.isTail():boolean A[MD:():boolean (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:? \l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|0x0012: INVOKE  (r2 I:kotlinx.coroutines.internal.Segment) type: VIRTUAL call: kotlinx.coroutines.internal.Segment.remove():void A[MD:():void (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|RETURN\lORIG_RETURN\l|0x0015: RETURN    (LINE:220)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0015: RETURN   A[SYNTHETIC] (LINE:220)\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|0x0015: RETURN   A[SYNTHETIC] (LINE:220)\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.internal.Segment.onSlotCleaned((r2 'this' I:kotlinx.coroutines.internal.Segment\<S extends kotlinx.coroutines.internal.Segment\<S\>\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0010 \-\> B:17:0x0015, CROSS_EDGE: B:13:0x000a \-\> B:17:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends kotlinx.coroutines.internal.Segment\<S\>]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

