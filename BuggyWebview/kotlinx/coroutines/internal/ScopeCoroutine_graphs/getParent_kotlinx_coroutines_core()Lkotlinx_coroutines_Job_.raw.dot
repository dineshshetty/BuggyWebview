digraph "CFG forkotlinx.coroutines.internal.ScopeCoroutine.getParent$kotlinx_coroutines_core()Lkotlinx\/coroutines\/Job;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlinx.coroutines.ChildHandle) = (r1 I:kotlinx.coroutines.internal.ScopeCoroutine) type: VIRTUAL call: kotlinx.coroutines.internal.ScopeCoroutine.getParentHandle$kotlinx_coroutines_core():kotlinx.coroutines.ChildHandle A[MD:():kotlinx.coroutines.ChildHandle (m)] (LINE:24)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0008 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|SYNTHETIC\lRETURN\l|0x0006: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: RETURN  (r0 I:kotlinx.coroutines.Job) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0008|0x0008: INVOKE  (r0 I:kotlinx.coroutines.Job) = (r0 I:kotlinx.coroutines.ChildHandle) type: INTERFACE call: kotlinx.coroutines.ChildHandle.getParent():kotlinx.coroutines.Job A[MD:():kotlinx.coroutines.Job (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|RETURN\lORIG_RETURN\l|0x000c: RETURN  (r0 I:kotlinx.coroutines.Job) \l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.Job kotlinx.coroutines.internal.ScopeCoroutine.getParent$kotlinx_coroutines_core((r1 'this' I:kotlinx.coroutines.internal.ScopeCoroutine\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0008 \-\> B:14:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

