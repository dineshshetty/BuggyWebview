digraph "CFG forkotlinx.coroutines.internal.MainDispatchersKt.tryCreateDispatcher(Lkotlinx\/coroutines\/internal\/MainDispatcherFactory;Ljava\/util\/List;)Lkotlinx\/coroutines\/MainCoroutineDispatcher;" {
subgraph cluster_Region_1376621130 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1942128527 {
label = "Try: R(1:4) catches: R(2:6|8)";
node [shape=record,color=blue];
subgraph cluster_Region_1422506986 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return r2.createDispatcher(r3)\l}"];
}
subgraph cluster_Region_999363345 {
label = "R(2:6|8) | ExcHandler: all \-\> 0x0006\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0006|ExcHandler: all \-\> 0x0006\l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|RETURN\lORIG_RETURN\l|return createMissingDispatcher(r0, r2.hintOnError())\l}"];
}
}
}
subgraph cluster_Region_999363345 {
label = "R(2:6|8) | ExcHandler: all \-\> 0x0006\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0006|ExcHandler: all \-\> 0x0006\l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|RETURN\lORIG_RETURN\l|return createMissingDispatcher(r0, r2.hintOnError())\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0006, blocks: (B:12:0x0001), top: B:17:0x0001 \}\lCatch: all \-\> 0x0006\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0007}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.MainCoroutineDispatcher kotlinx.coroutines.internal.MainDispatchersKt.tryCreateDispatcher((r2v0 '$this$tryCreateDispatcher' kotlinx.coroutines.internal.MainDispatcherFactory A[D('$this$tryCreateDispatcher' kotlinx.coroutines.internal.MainDispatcherFactory), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.util.List\<? extends kotlinx.coroutines.internal.MainDispatcherFactory\> A[D('factories' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0007 \-\> B:16:0x0012, CROSS_EDGE: B:17:0x0001 \-\> B:14:0x0006\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0006, blocks: (B:12:0x0001), top: B:17:0x0001 \}\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlinx\/coroutines\/internal\/MainDispatcherFactory;Ljava\/util\/List\<+Lkotlinx\/coroutines\/internal\/MainDispatcherFactory;\>;)Lkotlinx\/coroutines\/MainCoroutineDispatcher;\l}"];
MethodNode -> Node_10;Node_19 -> Node_11;
Node_14 -> Node_15;
Node_16 -> Node_11;
Node_14 -> Node_15;
Node_16 -> Node_11;
Node_10 -> Node_17;
Node_17 -> Node_12;
Node_17 -> Node_14;
Node_12 -> Node_18;
Node_12 -> Node_19;
Node_18 -> Node_14;
Node_15 -> Node_16;
}

