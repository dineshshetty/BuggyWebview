digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListHead.remove()Ljava\/lang\/Void;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"head cannot be removed\"  (LINE:653)\l0x0004: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0008: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|0x000b: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final java.lang.Void kotlinx.coroutines.internal.LockFreeLinkedListHead.remove((r2 'this' I:kotlinx.coroutines.internal.LockFreeLinkedListHead A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.LockFreeLinkedListNode.remove():boolean]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

