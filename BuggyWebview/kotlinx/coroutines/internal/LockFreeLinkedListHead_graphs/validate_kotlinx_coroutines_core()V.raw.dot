digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListHead.validate$kotlinx_coroutines_core()V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY])  (LINE:660)\l0x0001: CHECK_CAST (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r0 I:??[OBJECT, ARRAY]) \l0x0003: INVOKE  (r1 I:java.lang.Object) = (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListHead.getNext():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:661)\l0x0007: CHECK_CAST (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|LOOP_START\lLOOP:0: B:12:0x0009\-\>B:14:0x000f\l|0x0009: INVOKE  (r2 I:boolean) = (r1 I:java.lang.Object A[D('cur' kotlinx.coroutines.internal.LockFreeLinkedListNode)]), (r3 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)] (LINE:662)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000d|0x000d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0019 \l}"];
Node_14 [shape=record,label="{14\:\ 0x000f|LOOP_END\lLOOP:0: B:12:0x0009\-\>B:14:0x000f\l|0x000f: INVOKE  (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = \l  (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('cur' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.getNextNode():kotlinx.coroutines.internal.LockFreeLinkedListNode A[MD:():kotlinx.coroutines.internal.LockFreeLinkedListNode (m)] (LINE:663)\l0x0013: INVOKE  \l  (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('cur' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('prev' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l  (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('next' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.validateNode$kotlinx_coroutines_core(kotlinx.coroutines.internal.LockFreeLinkedListNode, kotlinx.coroutines.internal.LockFreeLinkedListNode):void A[MD:(kotlinx.coroutines.internal.LockFreeLinkedListNode, kotlinx.coroutines.internal.LockFreeLinkedListNode):void (m)] (LINE:664)\l0x0016: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('prev' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) = (r1 I:??[OBJECT, ARRAY] A[D('cur' kotlinx.coroutines.internal.LockFreeLinkedListNode)])  (LINE:665)\l0x0017: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('cur' kotlinx.coroutines.internal.LockFreeLinkedListNode)]) = (r2 I:??[OBJECT, ARRAY] A[D('next' kotlinx.coroutines.internal.LockFreeLinkedListNode)])  (LINE:666)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0019|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0019|0x0019: INVOKE  (r2 I:java.lang.Object) = (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListHead.getNext():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:668)\l0x001d: CHECK_CAST (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r2 I:??[OBJECT, ARRAY]) \l0x001f: INVOKE  \l  (r3 I:kotlinx.coroutines.internal.LockFreeLinkedListHead)\l  (r0 I:kotlinx.coroutines.internal.LockFreeLinkedListNode A[D('prev' kotlinx.coroutines.internal.LockFreeLinkedListNode)])\l  (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode)\l type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListHead.validateNode$kotlinx_coroutines_core(kotlinx.coroutines.internal.LockFreeLinkedListNode, kotlinx.coroutines.internal.LockFreeLinkedListNode):void A[MD:(kotlinx.coroutines.internal.LockFreeLinkedListNode, kotlinx.coroutines.internal.LockFreeLinkedListNode):void (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0022|RETURN\l|0x0022: RETURN    (LINE:669)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.internal.LockFreeLinkedListHead.validate$kotlinx_coroutines_core((r3 'this' I:kotlinx.coroutines.internal.LockFreeLinkedListHead A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x000f \-\> B:12:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0018: r2 'next' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x0003\-0x0022: r0 'prev' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l  0x0009\-0x0022: r1 'cur' Lkotlinx\/coroutines\/internal\/LockFreeLinkedListNode;\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_12;
Node_17 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_10;
}

