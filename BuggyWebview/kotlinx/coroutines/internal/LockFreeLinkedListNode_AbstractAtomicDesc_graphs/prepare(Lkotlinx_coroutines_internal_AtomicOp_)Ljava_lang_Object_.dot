digraph "CFG forkotlinx.coroutines.internal.LockFreeLinkedListNode.AbstractAtomicDesc.prepare(Lkotlinx\/coroutines\/internal\/AtomicOp;)Ljava\/lang\/Object;" {
Node_61 [shape=record,label="{61\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_63 [shape=record,label="{63\:\ 0x0000|LOOP_START\lLOOP:0: B:63:0x0000\-\>B:117:0x0000\l|kotlinx.coroutines.internal.LockFreeLinkedListNode r0 = takeAffectedNode(r9)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0008|if (r0 != null) goto L3\l}"];
Node_67 [shape=record,label="{67\:\ 0x000d|java.lang.Object r1 = r0._next\l}"];
Node_68 [shape=record,label="{68\:\ 0x0010|if (r1 != r9) goto L5\l}"];
Node_70 [shape=record,label="{70\:\ 0x0013}"];
Node_71 [shape=record,label="{71\:\ 0x0017|if (r9.isDecided() == false) goto L7\l}"];
Node_73 [shape=record,label="{73\:\ 0x001a}"];
Node_74 [shape=record,label="{74\:\ 0x001c|if ((r1 instanceof kotlinx.coroutines.internal.OpDescriptor) == false) goto L9\l}"];
Node_112 [shape=record,label="{112\:\ 0x0031|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ 0x0031|java.lang.Object r3 = failure(r0)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0035|if (r3 == null) goto L12\l}"];
Node_83 [shape=record,label="{83\:\ 0x0038}"];
Node_84 [shape=record,label="{84\:\ 0x003c|if (retry(r0, r1) == false) goto L14\l}"];
Node_114 [shape=record,label="{114\:\ 0x003f|SYNTHETIC\l}"];
Node_86 [shape=record,label="{86\:\ 0x003f|kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp r4 = new kotlinx.coroutines.internal.LockFreeLinkedListNode.PrepareOp(r0, (kotlinx.coroutines.internal.LockFreeLinkedListNode) r1, r8)\l}"];
Node_87 [shape=record,label="{87\:\ 0x004d|if (androidx.concurrent.futures.C0125xc40028dd.m112m(kotlinx.coroutines.internal.LockFreeLinkedListNode._next$FU, r0, r1, r4) == false) goto L40\l}"];
Node_106 [shape=record,label="{106\:\ 0x0050|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_88 [shape=record,label="{88\:\ 0x0050|TRY_ENTER\lTryCatch #0 \{all \-\> 0x006f, blocks: (B:88:0x0050, B:91:0x0059, B:99:0x0068, B:100:0x006d), top: B:106:0x0050 \}\lCatch: all \-\> 0x006f\l|java.lang.Object r5 = r4.perform(r0)     \/\/ Catch: java.lang.Throwable \-\> L6f\l}"];
Node_89 [shape=record,label="{89\:\ 0x0056|if (r5 != kotlinx.coroutines.internal.LockFreeLinkedList_commonKt.REMOVE_PREPARED) goto L23\l}"];
Node_90 [shape=record,label="{90\:\ 0x0058}"];
Node_120 [shape=record,label="{120\:\ 0x0000|SYNTHETIC\l}"];
Node_117 [shape=record,label="{117\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:63:0x0000\-\>B:117:0x0000\l}"];
Node_116 [shape=record,label="{116\:\ 0x0059|SYNTHETIC\l}"];
Node_91 [shape=record,label="{91\:\ 0x0059|TryCatch #0 \{all \-\> 0x006f, blocks: (B:88:0x0050, B:91:0x0059, B:99:0x0068, B:100:0x006d), top: B:106:0x0050 \}\lCatch: all \-\> 0x006f\l}"];
Node_92 [shape=record,label="{92\:\ 0x005d|if (kotlinx.coroutines.Debug.getASSERTIONS_ENABLED() == false) goto L36\l}"];
Node_93 [shape=record,label="{93\:\ 0x005f}"];
Node_94 [shape=record,label="{94\:\ 0x0060|if (r5 != null) goto L35\l}"];
Node_95 [shape=record,label="{95\:\ 0x0062|r7 = true\l}"];
Node_97 [shape=record,label="{97\:\ 0x0065|PHI: r7 \l  PHI: (r7v1 boolean) = (r7v0 boolean), (r7v2 boolean) binds: [B:96:0x0064, B:95:0x0062] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 == false) goto L31\l}"];
Node_98 [shape=record,label="{98\:\ 0x0067}"];
Node_99 [shape=record,label="{99\:\ 0x0068|TryCatch #0 \{all \-\> 0x006f, blocks: (B:88:0x0050, B:91:0x0059, B:99:0x0068, B:100:0x006d), top: B:106:0x0050 \}\lCatch: all \-\> 0x006f\l}"];
Node_100 [shape=record,label="{100\:\ 0x006d|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x006f, blocks: (B:88:0x0050, B:91:0x0059, B:99:0x0068, B:100:0x006d), top: B:106:0x0050 \}\lCatch: all \-\> 0x006f\l|throw new java.lang.AssertionError()     \/\/ Catch: java.lang.Throwable \-\> L6f\l}"];
Node_62 [shape=record,label="{62\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_107 [shape=record,label="{107\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_96 [shape=record,label="{96\:\ 0x0064|r7 = false\l}"];
Node_101 [shape=record,label="{101\:\ 0x006e|RETURN\l|return null\l}"];
Node_102 [shape=record,label="{102\:\ 0x006f|ExcHandler: all \-\> 0x006f\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_103 [shape=record,label="{103\:\ 0x0070|androidx.concurrent.futures.C0125xc40028dd.m112m(kotlinx.coroutines.internal.LockFreeLinkedListNode._next$FU, r0, r4, r1)\l}"];
Node_104 [shape=record,label="{104\:\ 0x0075|throw r2\l}"];
Node_119 [shape=record,label="{119\:\ 0x0000|SYNTHETIC\l}"];
Node_118 [shape=record,label="{118\:\ 0x0000|SYNTHETIC\l}"];
Node_113 [shape=record,label="{113\:\ 0x0037|SYNTHETIC\l}"];
Node_82 [shape=record,label="{82\:\ 0x0037|RETURN\l|return r3\l}"];
Node_115 [shape=record,label="{115\:\ 0x001e|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x001e}"];
Node_76 [shape=record,label="{76\:\ 0x0025|if (r9.isEarlierThan((kotlinx.coroutines.internal.OpDescriptor) r1) == false) goto L47\l}"];
Node_79 [shape=record,label="{79\:\ 0x002a|((kotlinx.coroutines.internal.OpDescriptor) r1).perform(r0)\l}"];
Node_121 [shape=record,label="{121\:\ 0x0000|SYNTHETIC\l}"];
Node_109 [shape=record,label="{109\:\ 0x0027|SYNTHETIC\l}"];
Node_77 [shape=record,label="{77\:\ 0x0027}"];
Node_78 [shape=record,label="{78\:\ 0x0029|RETURN\l|return kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC\l}"];
Node_110 [shape=record,label="{110\:\ 0x0019|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x0019|RETURN\l|return null\l}"];
Node_108 [shape=record,label="{108\:\ 0x0012|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x0012|RETURN\l|return null\l}"];
Node_111 [shape=record,label="{111\:\ 0x000a|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x000a}"];
Node_66 [shape=record,label="{66\:\ 0x000c|RETURN\l|return kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode.AbstractAtomicDesc.prepare((r8v0 'this' kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc A[IMMUTABLE_TYPE, THIS]), (r9v0 kotlinx.coroutines.internal.AtomicOp\<?\> A[D('op' kotlinx.coroutines.internal.AtomicOp), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:69:0x0012 \-\> B:62:?, CROSS_EDGE: B:72:0x0019 \-\> B:62:?, CROSS_EDGE: B:78:0x0029 \-\> B:62:?, BACK_EDGE: B:79:0x002a \-\> B:63:0x0000, CROSS_EDGE: B:82:0x0037 \-\> B:62:?, BACK_EDGE: B:87:0x004d \-\> B:63:0x0000, BACK_EDGE: B:90:0x0058 \-\> B:63:0x0000, CROSS_EDGE: B:101:0x006e \-\> B:62:?, CROSS_EDGE: B:100:0x006d \-\> B:62:?, CROSS_EDGE: B:104:0x0075 \-\> B:62:?, CROSS_EDGE: B:96:0x0064 \-\> B:97:0x0065, CROSS_EDGE: B:92:0x005d \-\> B:101:0x006e, CROSS_EDGE: B:106:0x0050 \-\> B:102:0x006f, BACK_EDGE: B:84:0x003c \-\> B:63:0x0000\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x006f, blocks: (B:88:0x0050, B:91:0x0059, B:99:0x0068, B:100:0x006d), top: B:106:0x0050 \}\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlinx\/coroutines\/internal\/AtomicOp\<*\>;)Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.AtomicDesc.prepare(kotlinx.coroutines.internal.AtomicOp\<?\>):java.lang.Object]\l}"];
MethodNode -> Node_61;Node_61 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_67;
Node_64 -> Node_111[style=dashed];
Node_67 -> Node_68;
Node_68 -> Node_70;
Node_68 -> Node_108[style=dashed];
Node_70 -> Node_71;
Node_71 -> Node_73;
Node_71 -> Node_110[style=dashed];
Node_73 -> Node_74;
Node_74 -> Node_112;
Node_74 -> Node_115[style=dashed];
Node_112 -> Node_80;
Node_80 -> Node_81;
Node_81 -> Node_83;
Node_81 -> Node_113[style=dashed];
Node_83 -> Node_84;
Node_84 -> Node_114;
Node_84 -> Node_118[style=dashed];
Node_114 -> Node_86;
Node_86 -> Node_87;
Node_87 -> Node_106[style=dashed];
Node_87 -> Node_119;
Node_106 -> Node_88;
Node_106 -> Node_102;
Node_88 -> Node_89;
Node_89 -> Node_90[style=dashed];
Node_89 -> Node_116;
Node_90 -> Node_120;
Node_120 -> Node_117;
Node_117 -> Node_63;
Node_116 -> Node_91;
Node_91 -> Node_92;
Node_92 -> Node_93[style=dashed];
Node_92 -> Node_101;
Node_93 -> Node_94;
Node_94 -> Node_95[style=dashed];
Node_94 -> Node_96;
Node_95 -> Node_97;
Node_97 -> Node_98[style=dashed];
Node_97 -> Node_99;
Node_98 -> Node_101;
Node_99 -> Node_100;
Node_100 -> Node_62;
Node_100 -> Node_107;
Node_107 -> Node_102;
Node_96 -> Node_97;
Node_101 -> Node_62;
Node_102 -> Node_103;
Node_103 -> Node_104;
Node_104 -> Node_62;
Node_119 -> Node_117;
Node_118 -> Node_117;
Node_113 -> Node_82;
Node_82 -> Node_62;
Node_115 -> Node_75;
Node_75 -> Node_76;
Node_76 -> Node_79;
Node_76 -> Node_109[style=dashed];
Node_79 -> Node_121;
Node_121 -> Node_117;
Node_109 -> Node_77;
Node_77 -> Node_78;
Node_78 -> Node_62;
Node_110 -> Node_72;
Node_72 -> Node_62;
Node_108 -> Node_69;
Node_69 -> Node_62;
Node_111 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_62;
}

