digraph "CFG forkotlinx.coroutines.internal.SegmentOrClosed.getSegment\-impl(Ljava\/lang\/Object;)Lkotlinx\/coroutines\/internal\/Segment;" {
subgraph cluster_Region_475279588 {
label = "R(1:(2:(1:(2:(1:5)|(1:8)))|(1:10)))";
node [shape=record,color=blue];
subgraph cluster_Region_91726011 {
label = "R(2:(1:(2:(1:5)|(1:8)))|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1341423605 {
label = "IF [B:14:0x0004] THEN: R(1:(2:(1:5)|(1:8))) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0004|if (r2 != kotlinx.coroutines.internal.ConcurrentLinkedList.CLOSED) goto L3\l}"];
subgraph cluster_Region_455987090 {
label = "R(1:(2:(1:5)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_650321667 {
label = "R(2:(1:5)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_512295192 {
label = "IF [B:15:0x0006] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0006|if (r2 != null) goto L4\l}"];
subgraph cluster_Region_1928253163 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000b|RETURN\l|return (S) r2\l}"];
}
}
subgraph cluster_Region_122347131 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0013|throw new java.lang.NullPointerException(\"null cannot be cast to non\-null type S of kotlinx.coroutines.internal.SegmentOrClosed\")\l}"];
}
}
}
}
subgraph cluster_Region_969925270 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x001f|throw new java.lang.IllegalStateException(\"Does not contain segment\".toString())\l}"];
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0000}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0008}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x000c}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0014}"];
MethodNode[shape=record,label="{public static final S extends kotlinx.coroutines.internal.Segment\<S\> kotlinx.coroutines.internal.SegmentOrClosed.getSegment\-impl((r2v0 'arg0' java.lang.Object A[D('arg0' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0013 \-\> B:12:?, CROSS_EDGE: B:21:0x001f \-\> B:12:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends kotlinx.coroutines.internal.Segment\<S\>]\lSIGNATURE: (Ljava\/lang\/Object;)TS;\l}"];
MethodNode -> Node_11;Node_14 -> Node_15;
Node_14 -> Node_20[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_12;
Node_19 -> Node_12;
Node_21 -> Node_12;
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_21;
}

