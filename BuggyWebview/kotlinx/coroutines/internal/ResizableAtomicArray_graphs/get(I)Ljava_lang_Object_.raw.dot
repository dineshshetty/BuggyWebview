digraph "CFG forkotlinx.coroutines.internal.ResizableAtomicArray.get(I)Ljava\/lang\/Object;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceArray\<T\>) = (r2 I:kotlinx.coroutines.internal.ResizableAtomicArray) kotlinx.coroutines.internal.ResizableAtomicArray.array java.util.concurrent.atomic.AtomicReferenceArray  (LINE:21)\l0x0002: INVOKE  (r1 I:int) = (r0 I:java.util.concurrent.atomic.AtomicReferenceArray A[D('array' java.util.concurrent.atomic.AtomicReferenceArray)]) type: VIRTUAL call: java.util.concurrent.atomic.AtomicReferenceArray.length():int A[MD:():int (c)] (LINE:22)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|0x0006: IF  (r3 I:??[int, byte, short, char] A[D('index' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:13:0x000d \l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|0x0008: INVOKE  (r1 I:java.lang.Object) = \l  (r0 I:java.util.concurrent.atomic.AtomicReferenceArray A[D('array' java.util.concurrent.atomic.AtomicReferenceArray)])\l  (r3 I:int A[D('index' int)])\l type: VIRTUAL call: java.util.concurrent.atomic.AtomicReferenceArray.get(int):java.lang.Object A[MD:(int):E (c)]\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x000e: RETURN  (r1 I:T) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x000d|RETURN\lORIG_RETURN\l|0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: RETURN  (r1 I:T) \l}"];
MethodNode[shape=record,label="{public final T kotlinx.coroutines.internal.ResizableAtomicArray.get((r2 'this' I:kotlinx.coroutines.internal.ResizableAtomicArray\<T\> A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000d \-\> B:14:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x000e: r0 'array' Ljava\/util\/concurrent\/atomic\/AtomicReferenceArray;\l  \-1 \-0x000e: r3 'index' I\lTYPE_VARS: [T]\lSIGNATURE: (I)TT;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_9;
}

