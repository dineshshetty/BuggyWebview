digraph "CFG forkotlinx.coroutines.internal.ResizableAtomicArray.setSynchronized(ILjava\/lang\/Object;)V" {
subgraph cluster_Region_1399562112 {
label = "R(2:1|(2:(2:3|4)|(3:6|(1:8)|10)))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|java.util.concurrent.atomic.AtomicReferenceArray\<T\> java.util.concurrent.atomic.AtomicReferenceArray r0 = r6.array\lint int r1 = r0.length()\l}"];
subgraph cluster_Region_1248114268 {
label = "R(2:(2:3|4)|(3:6|(1:8)|10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1299490854 {
label = "IF [B:15:0x0006] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0006|if (r7 \< r1) goto L3\l}"];
subgraph cluster_Region_979452674 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0008|r0.set(r7, r8)\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_1122806167 {
label = "R(3:6|(1:8)|10)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000c|java.util.concurrent.atomic.AtomicReferenceArray java.util.concurrent.atomic.AtomicReferenceArray r2 = new java.util.concurrent.atomic.AtomicReferenceArray(kotlin.ranges.RangesKt.coerceAtLeast(r7 + 1, r1 * 2))\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_1915063195 {
label = "LOOP:0: (1:8)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x001a|LOOP_START\lLOOP:0: B:18:0x001a\-\>B:19:0x001c\lPHI: r3 \l  PHI: (r3v3 int) = (r3v2 int), (r3v4 int) binds: [B:17:0x000c, B:19:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r1) goto L8\l}"];
subgraph cluster_Region_1890297112 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x001c|LOOP_END\lLOOP:0: B:18:0x001a\-\>B:19:0x001c\l|int r4 = r3\lr3++\lr2.set(r4, r0.get(r4))\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x0027|r2.set(r7, r8)\lr6.array = r2\l}"];
}
}
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0027|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x002c|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public final void kotlinx.coroutines.internal.ResizableAtomicArray.setSynchronized((r6v0 'this' kotlinx.coroutines.internal.ResizableAtomicArray\<T\> A[IMMUTABLE_TYPE, THIS]), (r7v0 'index' int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 T A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x001c \-\> B:18:0x001a, CROSS_EDGE: B:20:0x0027 \-\> B:21:0x002c\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (ITT;)V\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_23 -> Node_13;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_22[style=dashed];
Node_19 -> Node_18;
Node_20 -> Node_21;
Node_12 -> Node_14;
Node_22 -> Node_20;
Node_21 -> Node_13;
}

