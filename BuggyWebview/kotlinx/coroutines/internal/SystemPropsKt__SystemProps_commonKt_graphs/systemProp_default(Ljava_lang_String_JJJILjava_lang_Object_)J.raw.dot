digraph "CFG forkotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt.systemProp$default(Ljava\/lang\/String;JJJILjava\/lang\/Object;)J" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: ARITH  (r15 I:??[int, boolean]) = (r14 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char])  (LINE:44)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|0x0002: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0008 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|0x0004: CONST  (r10 I:??[long, double]) = (1 ??[long, double])  (LINE:47)\l0x0006: MOVE  (r3 I:??[long, double]) = (r10 I:??[long, double]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: ARITH  (r10 I:??[int, boolean]) = (r14 I:??[int, boolean, short, byte, char]) & (8 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|0x000b: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0014 \l}"];
Node_20 [shape=record,label="{20\:\ 0x000d|0x000d: CONST  (r12 I:??[long, double]) = (9223372036854775807(0x7fffffffffffffff, double:NaN) ??[long, double])  (LINE:48)\l0x0012: MOVE  (r5 I:??[long, double]) = (r12 I:??[long, double]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|0x0015: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0016: MOVE  (r1 I:??[long, double]) = (r8 I:??[long, double]) \l0x0017: INVOKE  (r7 I:long) = (r0 I:java.lang.String), (r1 I:long), (r3 I:long), (r5 I:long) type: STATIC call: kotlinx.coroutines.internal.SystemPropsKt.systemProp(java.lang.String, long, long, long):long A[MD:(java.lang.String, long, long, long):long (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x001b|RETURN\l|0x001b: RETURN  (r7 I:long) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0014|0x0014: MOVE  (r5 I:??[long, double]) = (r12 I:??[long, double])  (LINE:44)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: MOVE  (r3 I:??[long, double]) = (r10 I:??[long, double])  (LINE:44)\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ long kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt.systemProp$default((r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:21:0x0014 \-\> B:22:0x0015, CROSS_EDGE: B:17:0x0008 \-\> B:18:0x0009\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_22;
Node_17 -> Node_18;
}

