digraph "CFG forkotlinx.coroutines.EventLoopImplBase.DelayedTask.dispose()V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|monitor\-enter(r3)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_25 [shape=record,label="{25\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{, blocks: (B:25:0x0001, B:29:0x000b, B:31:0x000f, B:36:0x001e, B:35:0x0017), top: B:42:0x0001 \}\lCatch: all \-\> 0x0026\l|java.lang.Object r0 = r3._heap     \/\/ Catch: java.lang.Throwable \-\> L26\lkotlinx.coroutines.internal.Symbol r1 = kotlinx.coroutines.EventLoop_commonKt.DISPOSED_TASK     \/\/ Catch: java.lang.Throwable \-\> L26\l}"];
Node_26 [shape=record,label="{26\:\ 0x0007|if (r0 != r1) goto L8\l}"];
Node_27 [shape=record,label="{27\:\ 0x0009|monitor\-exit(r3)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000a|RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x000b|TRY_ENTER\lTryCatch #0 \{, blocks: (B:25:0x0001, B:29:0x000b, B:31:0x000f, B:36:0x001e, B:35:0x0017), top: B:42:0x0001 \}\lCatch: all \-\> 0x0026\l}"];
Node_30 [shape=record,label="{30\:\ 0x000d|if ((r0 instanceof kotlinx.coroutines.EventLoopImplBase.DelayedTaskQueue) == false) goto L18\l}"];
Node_31 [shape=record,label="{31\:\ 0x000f|TryCatch #0 \{, blocks: (B:25:0x0001, B:29:0x000b, B:31:0x000f, B:36:0x001e, B:35:0x0017), top: B:42:0x0001 \}\lCatch: all \-\> 0x0026\l|kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue r1 = (kotlinx.coroutines.EventLoopImplBase.DelayedTaskQueue) r0     \/\/ Catch: java.lang.Throwable \-\> L26\l}"];
Node_33 [shape=record,label="{33\:\ 0x0014|PHI: r1 \l  PHI: (r1v3 kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue) = (r1v2 kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue), (r1v6 kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue) binds: [B:32:0x0013, B:31:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != null) goto L17\l}"];
Node_34 [shape=record,label="{34\:\ 0x0016}"];
Node_36 [shape=record,label="{36\:\ 0x001e|TRY_LEAVE\lTryCatch #0 \{, blocks: (B:25:0x0001, B:29:0x000b, B:31:0x000f, B:36:0x001e, B:35:0x0017), top: B:42:0x0001 \}\lCatch: all \-\> 0x0026\l|kotlinx.coroutines.internal.Symbol r1 = kotlinx.coroutines.EventLoop_commonKt.DISPOSED_TASK     \/\/ Catch: java.lang.Throwable \-\> L26\lr3._heap = r1     \/\/ Catch: java.lang.Throwable \-\> L26\l}"];
Node_37 [shape=record,label="{37\:\ 0x0024|monitor\-exit(r3)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0025|RETURN\l|return\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x0017|TryCatch #0 \{, blocks: (B:25:0x0001, B:29:0x000b, B:31:0x000f, B:36:0x001e, B:35:0x0017), top: B:42:0x0001 \}\lCatch: all \-\> 0x0026\l|r1.remove(r3)     \/\/ Catch: java.lang.Throwable \-\> L26\l}"];
Node_32 [shape=record,label="{32\:\ 0x0013|r1 = null\l}"];
Node_39 [shape=record,label="{39\:\ 0x0026|REMOVE\lExcHandler: all \-\> 0x0026\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_41 [shape=record,label="{41\:\ 0x0028|REMOVE\l|throw r0\l}"];
MethodNode[shape=record,label="{public final synchronized void kotlinx.coroutines.EventLoopImplBase.DelayedTask.dispose((r3v0 'this' kotlinx.coroutines.EventLoopImplBase$DelayedTask A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0025 \-\> B:23:?, CROSS_EDGE: B:41:0x0028 \-\> B:23:?, CROSS_EDGE: B:35:0x0017 \-\> B:34:0x0016, CROSS_EDGE: B:32:0x0013 \-\> B:33:0x0014, CROSS_EDGE: B:42:0x0001 \-\> B:39:0x0026\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.DisposableHandle.dispose():void]\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_42;
Node_42 -> Node_25;
Node_42 -> Node_39;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_23;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_43;
Node_37 -> Node_38;
Node_38 -> Node_23;
Node_43 -> Node_39;
Node_35 -> Node_34;
Node_32 -> Node_33;
Node_39 -> Node_41;
Node_41 -> Node_23;
}

