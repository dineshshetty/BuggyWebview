digraph "CFG forkotlinx.coroutines.EventLoopImplBase.DelayedTask.compareTo(Lkotlinx\/coroutines\/EventLoopImplBase$DelayedTask;)I" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IGET  (r0 I:long) = (r5 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask) kotlinx.coroutines.EventLoopImplBase.DelayedTask.nanoTime long  (LINE:425)\l0x0002: IGET  (r2 I:long) = (r6 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask A[D('other' kotlinx.coroutines.EventLoopImplBase$DelayedTask)]) kotlinx.coroutines.EventLoopImplBase.DelayedTask.nanoTime long \l0x0004: ARITH  (r0 I:long) = (r0 I:long) \- (r2 I:long) \l0x0006: CONST  (r2 I:??[long, double]) = (0 ??[long, double])  (LINE:427)\l0x0008: CMP_L  (r4 I:int) = (r0 I:long A[D('dTime' long)]), (r2 I:long) \l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|0x000a: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:17:0x000e \l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|SYNTHETIC\lRETURN\l|0x000c: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0015: RETURN  (r2 I:int) A[SYNTHETIC] (LINE:426)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|0x000e: CMP_L  (r4 I:int) = (r0 I:long A[D('dTime' long)]), (r2 I:long)  (LINE:428)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|0x0010: IF  (r4 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:20:0x0014 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|SYNTHETIC\lRETURN\l|0x0012: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0015: RETURN  (r2 I:int) A[SYNTHETIC] (LINE:426)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|RETURN\lORIG_RETURN\l|0x0014: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:429)\l0x0015: RETURN  (r2 I:int)  (LINE:426)\l}"];
MethodNode[shape=record,label="{public int kotlinx.coroutines.EventLoopImplBase.DelayedTask.compareTo((r5 'this' I:kotlinx.coroutines.EventLoopImplBase$DelayedTask A[IMMUTABLE_TYPE, THIS]), (r6 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask A[D('other' kotlinx.coroutines.EventLoopImplBase$DelayedTask), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0012 \-\> B:21:0x0015, CROSS_EDGE: B:20:0x0014 \-\> B:21:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0015: r0 'dTime' J\l  \-1 \-0x0015: r6 'other' Lkotlinx\/coroutines\/EventLoopImplBase$DelayedTask;\lREPLACED_BY: kotlinx.coroutines.EventLoopImplBase.DelayedTask.compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask):int\lBRIDGED_BY: kotlinx.coroutines.EventLoopImplBase.DelayedTask.compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask):int\lMETHOD_OVERRIDE: [ClspMth\{java.lang.Comparable.compareTo(T):int\}]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_13;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_13;
Node_20 -> Node_13;
}

