digraph "CFG forkotlinx.coroutines.EventLoopImplBase.DelayedTask.scheduleTask(JLkotlinx\/coroutines\/EventLoopImplBase$DelayedTaskQueue;Lkotlinx\/coroutines\/EventLoopImplBase;)I" {
Node_43 [shape=record,label="{43\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0000}"];
Node_46 [shape=record,label="{46\:\ 0x0006|monitor\-enter(r19)\l}"];
Node_85 [shape=record,label="{85\:\ 0x0007|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_47 [shape=record,label="{47\:\ 0x0007|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{, blocks: (B:47:0x0007, B:52:0x0012, B:53:0x0018, B:58:0x0028, B:75:0x0061, B:55:0x001a, B:63:0x002f, B:71:0x0049, B:73:0x0054, B:74:0x0058, B:64:0x0032, B:68:0x003d, B:70:0x0047), top: B:85:0x0007 \}\lCatch: all \-\> 0x006a\l|java.lang.Object r0 = r19._heap     \/\/ Catch: java.lang.Throwable \-\> L6a\lkotlinx.coroutines.internal.Symbol r5 = kotlinx.coroutines.EventLoop_commonKt.DISPOSED_TASK     \/\/ Catch: java.lang.Throwable \-\> L6a\l}"];
Node_48 [shape=record,label="{48\:\ 0x000d|if (r0 != r5) goto L10\l}"];
Node_49 [shape=record,label="{49\:\ 0x000f}"];
Node_50 [shape=record,label="{50\:\ 0x0010|monitor\-exit(r19)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0011|RETURN\l|return 2\l}"];
Node_44 [shape=record,label="{44\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_52 [shape=record,label="{52\:\ 0x0012|TRY_ENTER\lTryCatch #1 \{, blocks: (B:47:0x0007, B:52:0x0012, B:53:0x0018, B:58:0x0028, B:75:0x0061, B:55:0x001a, B:63:0x002f, B:71:0x0049, B:73:0x0054, B:74:0x0058, B:64:0x0032, B:68:0x003d, B:70:0x0047), top: B:85:0x0007 \}\lCatch: all \-\> 0x006a\l|kotlinx.coroutines.internal.ThreadSafeHeap r0 = r22     \/\/ Catch: java.lang.Throwable \-\> L6a\l}"];
Node_53 [shape=record,label="{53\:\ 0x0018|TRY_LEAVE\lTryCatch #1 \{, blocks: (B:47:0x0007, B:52:0x0012, B:53:0x0018, B:58:0x0028, B:75:0x0061, B:55:0x001a, B:63:0x002f, B:71:0x0049, B:73:0x0054, B:74:0x0058, B:64:0x0032, B:68:0x003d, B:70:0x0047), top: B:85:0x0007 \}\lCatch: all \-\> 0x006a\l|monitor\-enter(r0)     \/\/ Catch: java.lang.Throwable \-\> L6a\l}"];
Node_54 [shape=record,label="{54\:\ 0x0019}"];
Node_55 [shape=record,label="{55\:\ 0x001a|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{, blocks: (B:47:0x0007, B:52:0x0012, B:53:0x0018, B:58:0x0028, B:75:0x0061, B:55:0x001a, B:63:0x002f, B:71:0x0049, B:73:0x0054, B:74:0x0058, B:64:0x0032, B:68:0x003d, B:70:0x0047), top: B:85:0x0007 \}\lCatch: all \-\> 0x0067\l|kotlinx.coroutines.EventLoopImplBase$DelayedTask r8 = r0.firstImpl()     \/\/ Catch: java.lang.Throwable \-\> L67\l}"];
Node_56 [shape=record,label="{56\:\ 0x0025|if (r23.isCompleted() == false) goto L19\l}"];
Node_57 [shape=record,label="{57\:\ 0x0027}"];
Node_58 [shape=record,label="{58\:\ 0x0028|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{, blocks: (B:47:0x0007, B:52:0x0012, B:53:0x0018, B:58:0x0028, B:75:0x0061, B:55:0x001a, B:63:0x002f, B:71:0x0049, B:73:0x0054, B:74:0x0058, B:64:0x0032, B:68:0x003d, B:70:0x0047), top: B:85:0x0007 \}\lCatch: all \-\> 0x006a\l|monitor\-exit(r0)     \/\/ Catch: java.lang.Throwable \-\> L6a\l}"];
Node_59 [shape=record,label="{59\:\ 0x0029|monitor\-exit(r19)\l}"];
Node_60 [shape=record,label="{60\:\ 0x002a|RETURN\l|return 1\l}"];
Node_61 [shape=record,label="{61\:\ 0x002b}"];
Node_62 [shape=record,label="{62\:\ 0x002d|if (r8 != null) goto L30\l}"];
Node_63 [shape=record,label="{63\:\ 0x002f|TRY_ENTER\lTryCatch #1 \{, blocks: (B:47:0x0007, B:52:0x0012, B:53:0x0018, B:58:0x0028, B:75:0x0061, B:55:0x001a, B:63:0x002f, B:71:0x0049, B:73:0x0054, B:74:0x0058, B:64:0x0032, B:68:0x003d, B:70:0x0047), top: B:85:0x0007 \}\lCatch: all \-\> 0x0067\l|r22.timeNow = r20     \/\/ Catch: java.lang.Throwable \-\> L67\l}"];
Node_71 [shape=record,label="{71\:\ 0x0049|TryCatch #1 \{, blocks: (B:47:0x0007, B:52:0x0012, B:53:0x0018, B:58:0x0028, B:75:0x0061, B:55:0x001a, B:63:0x002f, B:71:0x0049, B:73:0x0054, B:74:0x0058, B:64:0x0032, B:68:0x003d, B:70:0x0047), top: B:85:0x0007 \}\lCatch: all \-\> 0x0067\l}"];
Node_72 [shape=record,label="{72\:\ 0x0052|if (((r19.nanoTime \- r22.timeNow) \> 0 ? 1 : ((r19.nanoTime \- r22.timeNow) == 0 ? 0 : \-1)) \>= 0) goto L25\l}"];
Node_73 [shape=record,label="{73\:\ 0x0054|TryCatch #1 \{, blocks: (B:47:0x0007, B:52:0x0012, B:53:0x0018, B:58:0x0028, B:75:0x0061, B:55:0x001a, B:63:0x002f, B:71:0x0049, B:73:0x0054, B:74:0x0058, B:64:0x0032, B:68:0x003d, B:70:0x0047), top: B:85:0x0007 \}\lCatch: all \-\> 0x0067\l|r19.nanoTime = r22.timeNow     \/\/ Catch: java.lang.Throwable \-\> L67\l}"];
Node_74 [shape=record,label="{74\:\ 0x0058|TRY_LEAVE\lTryCatch #1 \{, blocks: (B:47:0x0007, B:52:0x0012, B:53:0x0018, B:58:0x0028, B:75:0x0061, B:55:0x001a, B:63:0x002f, B:71:0x0049, B:73:0x0054, B:74:0x0058, B:64:0x0032, B:68:0x003d, B:70:0x0047), top: B:85:0x0007 \}\lCatch: all \-\> 0x0067\l|r0.addImpl(r19)     \/\/ Catch: java.lang.Throwable \-\> L67\l}"];
Node_75 [shape=record,label="{75\:\ 0x0061|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{, blocks: (B:47:0x0007, B:52:0x0012, B:53:0x0018, B:58:0x0028, B:75:0x0061, B:55:0x001a, B:63:0x002f, B:71:0x0049, B:73:0x0054, B:74:0x0058, B:64:0x0032, B:68:0x003d, B:70:0x0047), top: B:85:0x0007 \}\lCatch: all \-\> 0x006a\l|monitor\-exit(r0)     \/\/ Catch: java.lang.Throwable \-\> L6a\l}"];
Node_76 [shape=record,label="{76\:\ 0x0064}"];
Node_77 [shape=record,label="{77\:\ 0x0065|monitor\-exit(r19)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0066|RETURN\l|return 0\l}"];
Node_64 [shape=record,label="{64\:\ 0x0032|TryCatch #1 \{, blocks: (B:47:0x0007, B:52:0x0012, B:53:0x0018, B:58:0x0028, B:75:0x0061, B:55:0x001a, B:63:0x002f, B:71:0x0049, B:73:0x0054, B:74:0x0058, B:64:0x0032, B:68:0x003d, B:70:0x0047), top: B:85:0x0007 \}\lCatch: all \-\> 0x0067\l|long r12 = r8.nanoTime     \/\/ Catch: java.lang.Throwable \-\> L67\l}"];
Node_65 [shape=record,label="{65\:\ 0x0038|if (((r12 \- r20) \> 0 ? 1 : ((r12 \- r20) == 0 ? 0 : \-1)) \< 0) goto L36\l}"];
Node_66 [shape=record,label="{66\:\ 0x003a|r14 = r20\l}"];
Node_68 [shape=record,label="{68\:\ 0x003d|TryCatch #1 \{, blocks: (B:47:0x0007, B:52:0x0012, B:53:0x0018, B:58:0x0028, B:75:0x0061, B:55:0x001a, B:63:0x002f, B:71:0x0049, B:73:0x0054, B:74:0x0058, B:64:0x0032, B:68:0x003d, B:70:0x0047), top: B:85:0x0007 \}\lCatch: all \-\> 0x0067\lPHI: r14 \l  PHI: (r14v2 'minTime' long) = (r14v1 'minTime' long), (r14v3 'minTime' long) binds: [B:67:0x003c, B:66:0x003a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_69 [shape=record,label="{69\:\ 0x0045|if (((r14 \- r22.timeNow) \> 0 ? 1 : ((r14 \- r22.timeNow) == 0 ? 0 : \-1)) \<= 0) goto L22\l}"];
Node_70 [shape=record,label="{70\:\ 0x0047|TryCatch #1 \{, blocks: (B:47:0x0007, B:52:0x0012, B:53:0x0018, B:58:0x0028, B:75:0x0061, B:55:0x001a, B:63:0x002f, B:71:0x0049, B:73:0x0054, B:74:0x0058, B:64:0x0032, B:68:0x003d, B:70:0x0047), top: B:85:0x0007 \}\lCatch: all \-\> 0x0067\l|r22.timeNow = r14     \/\/ Catch: java.lang.Throwable \-\> L67\l}"];
Node_67 [shape=record,label="{67\:\ 0x003c|r14 = r12\l}"];
Node_82 [shape=record,label="{82\:\ 0x006a|REMOVE\lExcHandler: all \-\> 0x006a\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_84 [shape=record,label="{84\:\ 0x006c|REMOVE\l|throw r0\l}"];
MethodNode[shape=record,label="{public final synchronized int kotlinx.coroutines.EventLoopImplBase.DelayedTask.scheduleTask((r19v0 'this' kotlinx.coroutines.EventLoopImplBase$DelayedTask A[IMMUTABLE_TYPE, THIS]), (r20v0 'now' long A[D('now' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'delayed' kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue A[D('delayed' kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'eventLoop' kotlinx.coroutines.EventLoopImplBase A[D('eventLoop' kotlinx.coroutines.EventLoopImplBase), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:60:0x002a \-\> B:44:?, CROSS_EDGE: B:78:0x0066 \-\> B:44:?, CROSS_EDGE: B:72:0x0052 \-\> B:74:0x0058, CROSS_EDGE: B:70:0x0047 \-\> B:71:0x0049, CROSS_EDGE: B:69:0x0045 \-\> B:71:0x0049, CROSS_EDGE: B:67:0x003c \-\> B:68:0x003d, CROSS_EDGE: B:84:0x006c \-\> B:44:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_43;Node_43 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_85;
Node_85 -> Node_47;
Node_85 -> Node_82;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_52;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_44;
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_61;
Node_57 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_44;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_71;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_74;
Node_73 -> Node_74;
Node_74 -> Node_75;
Node_75 -> Node_76;
Node_76 -> Node_77;
Node_77 -> Node_78;
Node_78 -> Node_44;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_67;
Node_66 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_71;
Node_70 -> Node_71;
Node_67 -> Node_68;
Node_82 -> Node_84;
Node_84 -> Node_44;
}

