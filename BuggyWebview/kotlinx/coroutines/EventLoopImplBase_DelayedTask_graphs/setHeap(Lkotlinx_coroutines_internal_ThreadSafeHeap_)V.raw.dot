digraph "CFG forkotlinx.coroutines.EventLoopImplBase.DelayedTask.setHeap(Lkotlinx\/coroutines\/internal\/ThreadSafeHeap;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object) = (r2 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask) kotlinx.coroutines.EventLoopImplBase.DelayedTask._heap java.lang.Object  (LINE:418)\l0x0002: INVOKE  (r1 I:kotlinx.coroutines.internal.Symbol) =  type: STATIC call: kotlinx.coroutines.EventLoop_commonKt.access$getDISPOSED_TASK$p():kotlinx.coroutines.internal.Symbol A[MD:():kotlinx.coroutines.internal.Symbol (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x000a \l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|0x0008: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0010 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|0x000d: IPUT  \l  (r3 I:java.lang.Object A[D('value' kotlinx.coroutines.internal.ThreadSafeHeap)])\l  (r2 I:kotlinx.coroutines.EventLoopImplBase$DelayedTask)\l kotlinx.coroutines.EventLoopImplBase.DelayedTask._heap java.lang.Object  (LINE:419)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|RETURN\l|0x000f: RETURN    (LINE:420)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|0x0010: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:418)\l0x0012: CONST_STR  (r1 I:java.lang.String) =  \"Failed requirement.\" \l0x0014: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0018: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001b|0x001b: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.EventLoopImplBase.DelayedTask.setHeap((r2 'this' I:kotlinx.coroutines.EventLoopImplBase$DelayedTask A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlinx.coroutines.internal.ThreadSafeHeap\<?\> A[D('value' kotlinx.coroutines.internal.ThreadSafeHeap), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001b \-\> B:12:?, CROSS_EDGE: B:16:0x000a \-\> B:17:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001b: r3 'value' Lkotlinx\/coroutines\/internal\/ThreadSafeHeap;\lSIGNATURE: (Lkotlinx\/coroutines\/internal\/ThreadSafeHeap\<*\>;)V\lMETHOD_OVERRIDE: [kotlinx.coroutines.internal.ThreadSafeHeapNode.setHeap(kotlinx.coroutines.internal.ThreadSafeHeap\<?\>):void]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

