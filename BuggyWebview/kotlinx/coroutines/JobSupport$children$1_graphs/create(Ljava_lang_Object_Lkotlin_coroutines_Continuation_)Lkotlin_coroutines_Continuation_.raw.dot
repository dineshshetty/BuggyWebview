digraph "CFG forkotlinx.coroutines.JobSupport$children$1.create(Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation;)Lkotlin\/coroutines\/Continuation;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlinx.coroutines.JobSupport$children$1) =  kotlinx.coroutines.JobSupport$children$1 \l0x0002: IGET  (r1 I:kotlinx.coroutines.JobSupport) = (r2 I:kotlinx.coroutines.JobSupport$children$1) kotlinx.coroutines.JobSupport$children$1.this$0 kotlinx.coroutines.JobSupport \l0x0004: INVOKE  \l  (r0 I:kotlinx.coroutines.JobSupport$children$1)\l  (r1 I:kotlinx.coroutines.JobSupport)\l  (r4 I:kotlin.coroutines.Continuation)\l type: DIRECT call: kotlinx.coroutines.JobSupport$children$1.\<init\>(kotlinx.coroutines.JobSupport, kotlin.coroutines.Continuation):void A[MD:(kotlinx.coroutines.JobSupport, kotlin.coroutines.Continuation\<? super kotlinx.coroutines.JobSupport$children$1\>):void (m)]\l0x0007: IPUT  (r3 I:java.lang.Object), (r0 I:kotlinx.coroutines.JobSupport$children$1) kotlinx.coroutines.JobSupport$children$1.L$0 java.lang.Object \l0x0009: CHECK_CAST (r0 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|RETURN\l|0x000b: RETURN  (r0 I:kotlin.coroutines.Continuation\<kotlin.Unit\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlin.coroutines.Continuation\<kotlin.Unit\> kotlinx.coroutines.JobSupport$children$1.create((r2 'this' I:kotlinx.coroutines.JobSupport$children$1 A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.Continuation\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | SIGNATURE: (Ljava\/lang\/Object;Lkotlin\/coroutines\/Continuation\<*\>;)Lkotlin\/coroutines\/Continuation\<Lkotlin\/Unit;\>;\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.create(java.lang.Object, kotlin.coroutines.Continuation\<?\>):kotlin.coroutines.Continuation\<kotlin.Unit\>]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

