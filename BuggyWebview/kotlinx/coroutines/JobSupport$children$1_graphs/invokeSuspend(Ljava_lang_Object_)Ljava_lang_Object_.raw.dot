digraph "CFG forkotlinx.coroutines.JobSupport$children$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r7 I:kotlinx.coroutines.JobSupport$children$1) kotlinx.coroutines.JobSupport$children$1.label int  (LINE:950)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:8:0x0026\l case 1: goto B:7:0x0022\l case 2: goto B:6:0x0011\l default: goto B:4:0x0009 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: NEW_INSTANCE  (r8 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:957)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r8 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IGET  (r1 I:java.lang.Object) = (r7 I:kotlinx.coroutines.JobSupport$children$1) kotlinx.coroutines.JobSupport$children$1.L$2 java.lang.Object  (LINE:950)\l0x0013: CHECK_CAST (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r1 I:??[OBJECT, ARRAY]) \l0x0015: IGET  (r2 I:java.lang.Object) = (r7 I:kotlinx.coroutines.JobSupport$children$1) kotlinx.coroutines.JobSupport$children$1.L$1 java.lang.Object \l0x0017: CHECK_CAST (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) = (kotlinx.coroutines.internal.LockFreeLinkedListHead) (r2 I:??[OBJECT, ARRAY]) \l0x0019: IGET  (r3 I:java.lang.Object) = (r7 I:kotlinx.coroutines.JobSupport$children$1) kotlinx.coroutines.JobSupport$children$1.L$0 java.lang.Object \l0x001b: CHECK_CAST (r3 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r3 I:??[OBJECT, ARRAY]) \l0x001d: INVOKE  (r8 I:java.lang.Object) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0020: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0083|0x0083: INVOKE  (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListNode.getNextNode():kotlinx.coroutines.internal.LockFreeLinkedListNode A[MD:():kotlinx.coroutines.internal.LockFreeLinkedListNode (m)] (LINE:1482)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0063|0x0063: INVOKE  (r4 I:boolean) = (r1 I:java.lang.Object), (r2 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)] (LINE:1480)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0067|0x0067: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x008b \l}"];
Node_22 [shape=record,label="{22\:\ 0x0069|0x0069: INSTANCE_OF  (r4 I:boolean) = (r1 I:??[OBJECT, ARRAY]) kotlinx.coroutines.ChildHandleNode  (LINE:1481)\l}"];
Node_23 [shape=record,label="{23\:\ 0x006b|0x006b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0083 \l}"];
Node_24 [shape=record,label="{24\:\ 0x006d|0x006d: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x006e: CHECK_CAST (r4 I:kotlinx.coroutines.ChildHandleNode) = (kotlinx.coroutines.ChildHandleNode) (r4 I:??[OBJECT, ARRAY]) \l0x0070: IGET  (r4 I:kotlinx.coroutines.ChildJob) = (r4 I:kotlinx.coroutines.ChildHandleNode) kotlinx.coroutines.ChildHandleNode.childJob kotlinx.coroutines.ChildJob  (LINE:954)\l0x0072: IPUT  (r3 I:java.lang.Object), (r8 I:kotlinx.coroutines.JobSupport$children$1) kotlinx.coroutines.JobSupport$children$1.L$0 java.lang.Object \l0x0074: IPUT  (r2 I:java.lang.Object), (r8 I:kotlinx.coroutines.JobSupport$children$1) kotlinx.coroutines.JobSupport$children$1.L$1 java.lang.Object \l0x0076: IPUT  (r1 I:java.lang.Object), (r8 I:kotlinx.coroutines.JobSupport$children$1) kotlinx.coroutines.JobSupport$children$1.L$2 java.lang.Object \l0x0078: CONST  (r5 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0079: IPUT  (r5 I:int), (r8 I:kotlinx.coroutines.JobSupport$children$1) kotlinx.coroutines.JobSupport$children$1.label int \l0x007b: INVOKE  (r4 I:java.lang.Object) = (r3 I:kotlin.sequences.SequenceScope), (r4 I:java.lang.Object), (r8 I:kotlin.coroutines.Continuation) type: VIRTUAL call: kotlin.sequences.SequenceScope.yield(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x007f|0x007f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0083 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0081|RETURN\l|0x0081: RETURN  (r0 I:java.lang.Object)  (LINE:950)\l}"];
Node_31 [shape=record,label="{31\:\ 0x008b|0x008b: SGET  (r8 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:957)\l}"];
Node_32 [shape=record,label="{32\:\ 0x008d|RETURN\l|0x008d: RETURN  (r8 I:java.lang.Object) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: INVOKE  (r8 I:java.lang.Object) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: INVOKE  (r8 I:java.lang.Object) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0029: IGET  (r8 I:java.lang.Object) = (r7 I:kotlinx.coroutines.JobSupport$children$1) kotlinx.coroutines.JobSupport$children$1.L$0 java.lang.Object \l0x002b: CHECK_CAST (r8 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r8 I:??[OBJECT, ARRAY]) \l0x002d: IGET  (r1 I:kotlinx.coroutines.JobSupport) = (r7 I:kotlinx.coroutines.JobSupport$children$1) kotlinx.coroutines.JobSupport$children$1.this$0 kotlinx.coroutines.JobSupport  (LINE:951)\l0x002f: INVOKE  (r1 I:java.lang.Object) = (r1 I:kotlinx.coroutines.JobSupport) type: VIRTUAL call: kotlinx.coroutines.JobSupport.getState$kotlinx_coroutines_core():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0033: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY]) kotlinx.coroutines.ChildHandleNode  (LINE:952)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0049 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|0x0037: CHECK_CAST (r1 I:kotlinx.coroutines.ChildHandleNode) = (kotlinx.coroutines.ChildHandleNode) (r1 I:??[OBJECT, ARRAY]) \l0x0039: IGET  (r1 I:kotlinx.coroutines.ChildJob) = (r1 I:kotlinx.coroutines.ChildHandleNode) kotlinx.coroutines.ChildHandleNode.childJob kotlinx.coroutines.ChildJob \l0x003b: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x003c: CHECK_CAST (r2 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r2 I:??[OBJECT, ARRAY]) \l0x003e: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x003f: IPUT  (r3 I:int), (r7 I:kotlinx.coroutines.JobSupport$children$1) kotlinx.coroutines.JobSupport$children$1.label int \l0x0041: INVOKE  (r8 I:java.lang.Object) = (r8 I:kotlin.sequences.SequenceScope), (r1 I:java.lang.Object), (r2 I:kotlin.coroutines.Continuation) type: VIRTUAL call: kotlin.sequences.SequenceScope.yield(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0045|0x0045: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x008b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0047|RETURN\l|0x0047: RETURN  (r0 I:java.lang.Object)  (LINE:950)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0049|0x0049: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY]) kotlinx.coroutines.Incomplete  (LINE:953)\l}"];
Node_15 [shape=record,label="{15\:\ 0x004b|0x004b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x008b \l}"];
Node_16 [shape=record,label="{16\:\ 0x004d|0x004d: CHECK_CAST (r1 I:kotlinx.coroutines.Incomplete) = (kotlinx.coroutines.Incomplete) (r1 I:??[OBJECT, ARRAY]) \l0x004f: INVOKE  (r1 I:kotlinx.coroutines.NodeList) = (r1 I:kotlinx.coroutines.Incomplete) type: INTERFACE call: kotlinx.coroutines.Incomplete.getList():kotlinx.coroutines.NodeList A[MD:():kotlinx.coroutines.NodeList (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0053|0x0053: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0056 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0056|0x0056: CHECK_CAST (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) = (kotlinx.coroutines.internal.LockFreeLinkedListHead) (r1 I:??[OBJECT, ARRAY])  (LINE:954)\l0x0058: INVOKE  (r2 I:java.lang.Object) = (r1 I:kotlinx.coroutines.internal.LockFreeLinkedListHead) type: VIRTUAL call: kotlinx.coroutines.internal.LockFreeLinkedListHead.getNext():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:1479)\l0x005c: CHECK_CAST (r2 I:kotlinx.coroutines.internal.LockFreeLinkedListNode) = (kotlinx.coroutines.internal.LockFreeLinkedListNode) (r2 I:??[OBJECT, ARRAY]) \l0x005e: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x005f: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0060: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x0061: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0062: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlinx.coroutines.JobSupport$children$1.invokeSuspend((r7 'this' I:kotlinx.coroutines.JobSupport$children$1 A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:26:0x0081 \-\> B:1:?, BACK_EDGE: B:25:0x007f \-\> B:28:0x0083, BACK_EDGE: B:23:0x006b \-\> B:28:0x0083, CROSS_EDGE: B:32:0x008d \-\> B:1:?, CROSS_EDGE: B:7:0x0022 \-\> B:31:0x008b, CROSS_EDGE: B:12:0x0047 \-\> B:1:?, CROSS_EDGE: B:11:0x0045 \-\> B:31:0x008b, CROSS_EDGE: B:19:0x0056 \-\> B:20:0x0063, CROSS_EDGE: B:17:0x0053 \-\> B:31:0x008b, CROSS_EDGE: B:15:0x004b \-\> B:31:0x008b\lJadxCommentsAttr\{\l WARN: \l \-\> Unsupported multi\-entry loop pattern (BACK_EDGE: B:25:0x007f \-\> B:28:0x0083). Please submit an issue!!!\l \-\> Unsupported multi\-entry loop pattern (BACK_EDGE: B:23:0x006b \-\> B:28:0x0083). Please submit an issue!!!\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [950=4]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_3 -> Node_7;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_28;
Node_28 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_31;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_1;
Node_31 -> Node_32;
Node_32 -> Node_1;
Node_7 -> Node_31;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_31;
Node_12 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_31;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_31[style=dashed];
Node_19 -> Node_20;
}

