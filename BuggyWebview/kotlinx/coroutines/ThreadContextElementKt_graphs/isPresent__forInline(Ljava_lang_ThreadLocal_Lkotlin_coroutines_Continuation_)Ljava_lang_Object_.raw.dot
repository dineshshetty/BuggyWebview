digraph "CFG forkotlinx.coroutines.ThreadContextElementKt.isPresent$$forInline(Ljava\/lang\/ThreadLocal;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:236)\l0x0002: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext) = (r1 I:kotlin.coroutines.Continuation) type: INTERFACE call: kotlin.coroutines.Continuation.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)]\l0x000a: NEW_INSTANCE  (r2 I:kotlinx.coroutines.internal.ThreadLocalKey) =  kotlinx.coroutines.internal.ThreadLocalKey \l0x000c: INVOKE  \l  (r2 I:kotlinx.coroutines.internal.ThreadLocalKey)\l  (r3 I:java.lang.ThreadLocal A[D('$this$isPresent' java.lang.ThreadLocal)])\l type: DIRECT call: kotlinx.coroutines.internal.ThreadLocalKey.\<init\>(java.lang.ThreadLocal):void A[MD:(java.lang.ThreadLocal\<?\>):void (m)]\l0x000f: CHECK_CAST (r2 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r2 I:??[OBJECT, ARRAY]) \l0x0011: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext$Element) = (r1 I:kotlin.coroutines.CoroutineContext), (r2 I:kotlin.coroutines.CoroutineContext$Key) type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: INVOKE  (r1 I:java.lang.Boolean) = (r1 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|RETURN\l|0x001e: RETURN  (r1 I:java.lang.Object) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private static final java.lang.Object kotlinx.coroutines.ThreadContextElementKt.isPresent$$forInline((r3 I:java.lang.ThreadLocal\<?\> A[D('$this$isPresent' java.lang.ThreadLocal), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.Continuation\<? super java.lang.Boolean\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:5:0x0019 \-\> B:6:0x001a\lDebug Info:\l  0x0001\-0x001e: r0 '$i$f$isPresent' I\l  \-1 \-0x001e: r3 '$this$isPresent' Ljava\/lang\/ThreadLocal;\l  \-1 \-0x001e: r4 '$completion' Lkotlin\/coroutines\/Continuation;\lSIGNATURE: (Ljava\/lang\/ThreadLocal\<*\>;Lkotlin\/coroutines\/Continuation\<\-Ljava\/lang\/Boolean;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
}

