digraph "CFG forkotlinx.coroutines.CoroutineExceptionHandlerImplKt.handleCoroutineExceptionImpl(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Throwable;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:java.util.List\<kotlinx.coroutines.CoroutineExceptionHandler\>) =  kotlinx.coroutines.CoroutineExceptionHandlerImplKt.handlers java.util.List  (LINE:46)\l0x0002: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|LOOP_START\lLOOP:0: B:3:0x0006\-\>B:22:0x0006\l|0x0006: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0028 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0010: CHECK_CAST (r1 I:kotlinx.coroutines.CoroutineExceptionHandler) = (kotlinx.coroutines.CoroutineExceptionHandler) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0013|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:6:0x0013), top: B:17:0x0013 \}\lCatch: all \-\> 0x0017\l|0x0013: INVOKE  \l  (r1 I:kotlinx.coroutines.CoroutineExceptionHandler A[D('handler' kotlinx.coroutines.CoroutineExceptionHandler)])\l  (r6 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r7 I:java.lang.Throwable A[D('exception' java.lang.Throwable)])\l type: INTERFACE call: kotlinx.coroutines.CoroutineExceptionHandler.handleException(kotlin.coroutines.CoroutineContext, java.lang.Throwable):void A[Catch: all \-\> 0x0017, MD:(kotlin.coroutines.CoroutineContext, java.lang.Throwable):void (m), TRY_ENTER, TRY_LEAVE] (LINE:48)\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x0006|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x0006\-\>B:22:0x0006\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|ExcHandler: all \-\> 0x0017\l|0x0017: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0017] (LINE:49)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: INVOKE  (r3 I:java.lang.Thread) =  type: STATIC call: java.lang.Thread.currentThread():java.lang.Thread A[MD:():java.lang.Thread (c)] (LINE:51)\l0x001c: INVOKE  (r4 I:java.lang.Thread$UncaughtExceptionHandler) = (r3 I:java.lang.Thread A[D('currentThread' java.lang.Thread)]) type: VIRTUAL call: java.lang.Thread.getUncaughtExceptionHandler():java.lang.Thread$UncaughtExceptionHandler A[MD:():java.lang.Thread$UncaughtExceptionHandler (c)] (LINE:52)\l0x0020: INVOKE  (r5 I:java.lang.Throwable) = \l  (r7 I:java.lang.Throwable A[D('exception' java.lang.Throwable)])\l  (r2 I:java.lang.Throwable A[D('t' java.lang.Throwable)])\l type: STATIC call: kotlinx.coroutines.CoroutineExceptionHandlerKt.handlerException(java.lang.Throwable, java.lang.Throwable):java.lang.Throwable A[MD:(java.lang.Throwable, java.lang.Throwable):java.lang.Throwable (m)]\l0x0024: INVOKE  \l  (r4 I:java.lang.Thread$UncaughtExceptionHandler)\l  (r3 I:java.lang.Thread A[D('currentThread' java.lang.Thread)])\l  (r5 I:java.lang.Throwable)\l type: INTERFACE call: java.lang.Thread.UncaughtExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable):void A[MD:(java.lang.Thread, java.lang.Throwable):void (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0006|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0028|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: INVOKE  (r0 I:java.lang.Thread) =  type: STATIC call: java.lang.Thread.currentThread():java.lang.Thread A[MD:():java.lang.Thread (c)] (LINE:57)\l}"];
Node_19 [shape=record,label="{19\:\ 0x002c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x003f, blocks: (B:11:0x002c), top: B:19:0x002c \}\lCatch: all \-\> 0x003f\l|0x002c: SGET  (r1 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion A[Catch: all \-\> 0x003f, TRY_ENTER] (LINE:60)\l0x002e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:64)\l0x002f: NEW_INSTANCE  (r2 I:kotlinx.coroutines.DiagnosticCoroutineContextException) =  kotlinx.coroutines.DiagnosticCoroutineContextException A[Catch: all \-\> 0x003f] (LINE:60)\l0x0031: INVOKE  \l  (r2 I:kotlinx.coroutines.DiagnosticCoroutineContextException)\l  (r6 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l type: DIRECT call: kotlinx.coroutines.DiagnosticCoroutineContextException.\<init\>(kotlin.coroutines.CoroutineContext):void A[Catch: all \-\> 0x003f, MD:(kotlin.coroutines.CoroutineContext):void (m)]\l0x0034: CHECK_CAST (r2 I:java.lang.Throwable) = (java.lang.Throwable) (r2 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x003f]\l0x0036: INVOKE  (r7 I:java.lang.Throwable A[D('exception' java.lang.Throwable)]), (r2 I:java.lang.Throwable) type: STATIC call: kotlin.ExceptionsKt.addSuppressed(java.lang.Throwable, java.lang.Throwable):void A[Catch: all \-\> 0x003f, MD:(java.lang.Throwable, java.lang.Throwable):void (m)]\l0x0039: SGET  (r1 I:kotlin.Unit A[D('$i$a$\-runCatching\-CoroutineExceptionHandlerImplKt$handleCoroutineExceptionImpl$1' int)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x003f]\l0x003b: INVOKE  (r1 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x003f, MD:\<T\>:(java.lang.Object):java.lang.Object (m), TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0049|0x0049: INVOKE  (r1 I:java.lang.Thread$UncaughtExceptionHandler) = (r0 I:java.lang.Thread A[D('currentThread' java.lang.Thread)]) type: VIRTUAL call: java.lang.Thread.getUncaughtExceptionHandler():java.lang.Thread$UncaughtExceptionHandler A[MD:():java.lang.Thread$UncaughtExceptionHandler (c)] (LINE:61)\l0x004d: INVOKE  \l  (r1 I:java.lang.Thread$UncaughtExceptionHandler)\l  (r0 I:java.lang.Thread A[D('currentThread' java.lang.Thread)])\l  (r7 I:java.lang.Throwable A[D('exception' java.lang.Throwable)])\l type: INTERFACE call: java.lang.Thread.UncaughtExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable):void A[MD:(java.lang.Thread, java.lang.Throwable):void (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|RETURN\l|0x0050: RETURN    (LINE:62)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_13 [shape=record,label="{13\:\ 0x003f|ExcHandler: all \-\> 0x003f\l|0x003f: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x003f]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|0x0040: SGET  (r2 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion \l0x0042: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.Throwable) type: STATIC call: kotlin.ResultKt.createFailure(java.lang.Throwable):java.lang.Object A[MD:(java.lang.Throwable):java.lang.Object (m)]\l0x0046: INVOKE  (r1 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[MD:\<T\>:(java.lang.Object):java.lang.Object (m)]\l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.CoroutineExceptionHandlerImplKt.handleCoroutineExceptionImpl((r6 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:6:0x0013 \-\> B:3:0x0006, BACK_EDGE: B:9:0x0018 \-\> B:3:0x0006, CROSS_EDGE: B:17:0x0013 \-\> B:8:0x0017, CROSS_EDGE: B:14:0x0040 \-\> B:15:0x0049, CROSS_EDGE: B:19:0x002c \-\> B:13:0x003f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0027: r1 'handler' Lkotlinx\/coroutines\/CoroutineExceptionHandler;\l  0x0018\-0x0027: r2 't' Ljava\/lang\/Throwable;\l  0x001c\-0x0027: r3 'currentThread' Ljava\/lang\/Thread;\l  0x002f\-0x0039: r1 '$i$a$\-runCatching\-CoroutineExceptionHandlerImplKt$handleCoroutineExceptionImpl$1' I\l  0x002c\-0x0050: r0 'currentThread' Ljava\/lang\/Thread;\l  \-1 \-0x0050: r6 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x0050: r7 'exception' Ljava\/lang\/Throwable;\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:6:0x0013), top: B:17:0x0013 \}, TryCatch #1 \{all \-\> 0x003f, blocks: (B:11:0x002c), top: B:19:0x002c \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_21;
Node_5 -> Node_17;
Node_17 -> Node_6;
Node_17 -> Node_8;
Node_6 -> Node_18;
Node_6 -> Node_23;
Node_18 -> Node_8;
Node_23 -> Node_22;
Node_22 -> Node_3;
Node_8 -> Node_9;
Node_9 -> Node_24;
Node_24 -> Node_22;
Node_21 -> Node_10;
Node_10 -> Node_19;
Node_19 -> Node_11;
Node_19 -> Node_13;
Node_11 -> Node_15;
Node_11 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_20 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

