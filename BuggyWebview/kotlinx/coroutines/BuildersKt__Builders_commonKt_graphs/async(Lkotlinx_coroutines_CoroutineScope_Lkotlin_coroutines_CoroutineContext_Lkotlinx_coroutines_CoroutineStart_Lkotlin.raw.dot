digraph "CFG forkotlinx.coroutines.BuildersKt__Builders_commonKt.async(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;Lkotlinx\/coroutines\/CoroutineStart;Lkotlin\/jvm\/functions\/Function2;)Lkotlinx\/coroutines\/Deferred;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext) = \l  (r3 I:kotlinx.coroutines.CoroutineScope A[D('$this$async' kotlinx.coroutines.CoroutineScope)])\l  (r4 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l type: STATIC call: kotlinx.coroutines.CoroutineContextKt.newCoroutineContext(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext A[MD:(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext (m)] (LINE:87)\l0x0004: INVOKE  (r1 I:boolean) = (r5 I:kotlinx.coroutines.CoroutineStart A[D('start' kotlinx.coroutines.CoroutineStart)]) type: VIRTUAL call: kotlinx.coroutines.CoroutineStart.isLazy():boolean A[MD:():boolean (m)] (LINE:88)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0012 \l}"];
Node_12 [shape=record,label="{12\:\ 0x000a|0x000a: NEW_INSTANCE  (r1 I:kotlinx.coroutines.LazyDeferredCoroutine) =  kotlinx.coroutines.LazyDeferredCoroutine  (LINE:89)\l0x000c: INVOKE  \l  (r1 I:kotlinx.coroutines.LazyDeferredCoroutine)\l  (r0 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r6 I:kotlin.jvm.functions.Function2 A[D('block' kotlin.jvm.functions.Function2)])\l type: DIRECT call: kotlinx.coroutines.LazyDeferredCoroutine.\<init\>(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2):void A[MD:(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.CoroutineScope, ? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\>):void (m)]\l0x000f: CHECK_CAST (r1 I:kotlinx.coroutines.DeferredCoroutine) = (kotlinx.coroutines.DeferredCoroutine) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|0x0019: INVOKE  \l  (r1 I:kotlinx.coroutines.DeferredCoroutine A[D('coroutine' kotlinx.coroutines.DeferredCoroutine)])\l  (r5 I:kotlinx.coroutines.CoroutineStart A[D('start' kotlinx.coroutines.CoroutineStart)])\l  (r1 I:java.lang.Object A[D('coroutine' kotlinx.coroutines.DeferredCoroutine)])\l  (r6 I:kotlin.jvm.functions.Function2 A[D('block' kotlin.jvm.functions.Function2)])\l type: VIRTUAL call: kotlinx.coroutines.DeferredCoroutine.start(kotlinx.coroutines.CoroutineStart, java.lang.Object, kotlin.jvm.functions.Function2):void A[MD:\<R\>:(kotlinx.coroutines.CoroutineStart, R, kotlin.jvm.functions.Function2\<? super R, ? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\>):void (m)] (LINE:91)\l0x001c: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('coroutine' kotlinx.coroutines.DeferredCoroutine)])  (LINE:92)\l0x001d: CHECK_CAST (r2 I:kotlinx.coroutines.Deferred) = (kotlinx.coroutines.Deferred) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|RETURN\l|0x001f: RETURN  (r2 I:kotlinx.coroutines.Deferred\<T\>) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0012|0x0012: NEW_INSTANCE  (r1 I:kotlinx.coroutines.DeferredCoroutine) =  kotlinx.coroutines.DeferredCoroutine  (LINE:90)\l0x0014: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0015: INVOKE  \l  (r1 I:kotlinx.coroutines.DeferredCoroutine)\l  (r0 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r2 I:boolean)\l type: DIRECT call: kotlinx.coroutines.DeferredCoroutine.\<init\>(kotlin.coroutines.CoroutineContext, boolean):void A[MD:(kotlin.coroutines.CoroutineContext, boolean):void (m)]\l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.Deferred\<T\> kotlinx.coroutines.BuildersKt__Builders_commonKt.async((r3 I:kotlinx.coroutines.CoroutineScope A[D('$this$async' kotlinx.coroutines.CoroutineScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlinx.coroutines.CoroutineStart A[D('start' kotlinx.coroutines.CoroutineStart), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.CoroutineScope, ? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\> A[D('block' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0012 \-\> B:14:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x001f: r0 'newContext' Lkotlin\/coroutines\/CoroutineContext;\l  0x0019\-0x001f: r1 'coroutine' Lkotlinx\/coroutines\/DeferredCoroutine;\l  \-1 \-0x001f: r3 '$this$async' Lkotlinx\/coroutines\/CoroutineScope;\l  \-1 \-0x001f: r4 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x001f: r5 'start' Lkotlinx\/coroutines\/CoroutineStart;\l  \-1 \-0x001f: r6 'block' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;Lkotlinx\/coroutines\/CoroutineStart;Lkotlin\/jvm\/functions\/Function2\<\-Lkotlinx\/coroutines\/CoroutineScope;\-Lkotlin\/coroutines\/Continuation\<\-TT;\>;+Ljava\/lang\/Object;\>;)Lkotlinx\/coroutines\/Deferred\<TT;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

