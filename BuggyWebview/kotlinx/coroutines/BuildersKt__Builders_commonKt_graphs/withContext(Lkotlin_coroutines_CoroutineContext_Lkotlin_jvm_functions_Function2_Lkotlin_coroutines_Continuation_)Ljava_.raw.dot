digraph "CFG forkotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/jvm\/functions\/Function2;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0001|0x0001: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY] A[D('$completion' kotlin.coroutines.Continuation)])  (LINE:148)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: INVOKE  (r2 I:kotlin.coroutines.CoroutineContext) = (r0 I:kotlin.coroutines.Continuation A[D('uCont' kotlin.coroutines.Continuation)]) type: INTERFACE call: kotlin.coroutines.Continuation.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)] (LINE:150)\l0x0007: INVOKE  (r3 I:kotlin.coroutines.CoroutineContext) = \l  (r2 I:kotlin.coroutines.CoroutineContext A[D('oldContext' kotlin.coroutines.CoroutineContext)])\l  (r11 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l type: STATIC call: kotlinx.coroutines.CoroutineContextKt.newCoroutineContext(kotlin.coroutines.CoroutineContext, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext A[MD:(kotlin.coroutines.CoroutineContext, kotlin.coroutines.CoroutineContext):kotlin.coroutines.CoroutineContext (m)] (LINE:152)\l0x000b: INVOKE  (r3 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)]) type: STATIC call: kotlinx.coroutines.JobKt.ensureActive(kotlin.coroutines.CoroutineContext):void A[MD:(kotlin.coroutines.CoroutineContext):void (m)] (LINE:154)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|0x000e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newContext' kotlin.coroutines.CoroutineContext)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('oldContext' kotlin.coroutines.CoroutineContext)])  \-\> B:25:0x001a  (LINE:156)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0010|0x0010: NEW_INSTANCE  (r4 I:kotlinx.coroutines.internal.ScopeCoroutine) =  kotlinx.coroutines.internal.ScopeCoroutine  (LINE:157)\l0x0012: INVOKE  \l  (r4 I:kotlinx.coroutines.internal.ScopeCoroutine)\l  (r3 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlin.coroutines.Continuation A[D('uCont' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.internal.ScopeCoroutine.\<init\>(kotlin.coroutines.CoroutineContext, kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.CoroutineContext, kotlin.coroutines.Continuation\<? super T\>):void (m)]\l0x0015: INVOKE  (r5 I:java.lang.Object) = \l  (r4 I:kotlinx.coroutines.internal.ScopeCoroutine A[D('coroutine' kotlinx.coroutines.internal.ScopeCoroutine)])\l  (r4 I:java.lang.Object A[D('coroutine' kotlinx.coroutines.internal.ScopeCoroutine)])\l  (r12 I:kotlin.jvm.functions.Function2 A[D('block' kotlin.jvm.functions.Function2)])\l type: STATIC call: kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2):java.lang.Object A[MD:\<T, R\>:(kotlinx.coroutines.internal.ScopeCoroutine\<? super T\>, R, kotlin.jvm.functions.Function2\<? super R, ? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\>):java.lang.Object (m)] (LINE:158)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0062|0x0062: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:148)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0066|0x0066: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x006b \l}"];
Node_36 [shape=record,label="{36\:\ 0x0068|0x0068: INVOKE  (r13 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)]) type: STATIC call: kotlin.coroutines.jvm.internal.DebugProbesKt.probeCoroutineSuspended(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<?\>):void (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x006b|RETURN\l|0x006b: RETURN  (r5 I:java.lang.Object) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|0x001a: SGET  (r4 I:kotlin.coroutines.ContinuationInterceptor$Key A[D('coroutine' kotlinx.coroutines.internal.ScopeCoroutine)]) =  kotlin.coroutines.ContinuationInterceptor.Key kotlin.coroutines.ContinuationInterceptor$Key  (LINE:162)\l0x001c: CHECK_CAST (r4 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r4 I:??[OBJECT, ARRAY]) \l0x001e: INVOKE  (r4 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r3 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r4 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x0022: SGET  (r5 I:kotlin.coroutines.ContinuationInterceptor$Key) =  kotlin.coroutines.ContinuationInterceptor.Key kotlin.coroutines.ContinuationInterceptor$Key \l0x0024: CHECK_CAST (r5 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r5 I:??[OBJECT, ARRAY]) \l0x0026: INVOKE  (r5 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r2 I:kotlin.coroutines.CoroutineContext A[D('oldContext' kotlin.coroutines.CoroutineContext)])\l  (r5 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x002a: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Object), (r5 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x002e|0x002e: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x004e \l}"];
Node_27 [shape=record,label="{27\:\ 0x0030|0x0030: NEW_INSTANCE  (r4 I:kotlinx.coroutines.UndispatchedCoroutine) =  kotlinx.coroutines.UndispatchedCoroutine  (LINE:163)\l0x0032: INVOKE  \l  (r4 I:kotlinx.coroutines.UndispatchedCoroutine)\l  (r3 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlin.coroutines.Continuation A[D('uCont' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.UndispatchedCoroutine.\<init\>(kotlin.coroutines.CoroutineContext, kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.CoroutineContext, kotlin.coroutines.Continuation\<? super T\>):void (m)]\l0x0035: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:165)\l0x0036: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0037: INVOKE  (r7 I:java.lang.Object) = \l  (r3 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r5 I:java.lang.Object A[D('countOrElement$iv' java.lang.Object)])\l type: STATIC call: kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object):java.lang.Object A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Object):java.lang.Object (m)] (LINE:270)\l0x003c: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:272)\l}"];
Node_38 [shape=record,label="{38\:\ 0x003d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_28 [shape=record,label="{28\:\ 0x003d|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0049, blocks: (B:28:0x003d), top: B:38:0x003d \}\lCatch: all \-\> 0x0049\l|0x003d: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('coroutine' kotlinx.coroutines.UndispatchedCoroutine)]) A[TRY_ENTER] (LINE:166)\l0x003e: CHECK_CAST (r9 I:kotlinx.coroutines.internal.ScopeCoroutine) = (kotlinx.coroutines.internal.ScopeCoroutine) (r9 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0049]\l0x0040: INVOKE  (r9 I:java.lang.Object) = \l  (r9 I:kotlinx.coroutines.internal.ScopeCoroutine)\l  (r4 I:java.lang.Object A[D('coroutine' kotlinx.coroutines.UndispatchedCoroutine)])\l  (r12 I:kotlin.jvm.functions.Function2 A[D('block' kotlin.jvm.functions.Function2)])\l type: STATIC call: kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2):java.lang.Object A[Catch: all \-\> 0x0049, MD:\<T, R\>:(kotlinx.coroutines.internal.ScopeCoroutine\<? super T\>, R, kotlin.jvm.functions.Function2\<? super R, ? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\>):java.lang.Object (m), TRY_LEAVE]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0044|0x0044: INVOKE  \l  (r3 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r7 I:java.lang.Object A[D('oldValue$iv' java.lang.Object)])\l type: STATIC call: kotlinx.coroutines.internal.ThreadContextKt.restoreThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Object):void (m)] (LINE:274)\l0x0047: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY]) \l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_30 [shape=record,label="{30\:\ 0x0049|ExcHandler: all \-\> 0x0049\l|0x0049: MOVE_EXCEPTION  (r8 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0049] (LINE:273)\l}"];
Node_31 [shape=record,label="{31\:\ 0x004a|0x004a: INVOKE  \l  (r3 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r7 I:java.lang.Object A[D('oldValue$iv' java.lang.Object)])\l type: STATIC call: kotlinx.coroutines.internal.ThreadContextKt.restoreThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Object):void (m)] (LINE:274)\l}"];
Node_32 [shape=record,label="{32\:\ 0x004d|0x004d: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_33 [shape=record,label="{33\:\ 0x004e|0x004e: NEW_INSTANCE  (r4 I:kotlinx.coroutines.DispatchedCoroutine A[D('coroutine' kotlinx.coroutines.UndispatchedCoroutine)]) =  kotlinx.coroutines.DispatchedCoroutine  (LINE:170)\l0x0050: INVOKE  \l  (r4 I:kotlinx.coroutines.DispatchedCoroutine)\l  (r3 I:kotlin.coroutines.CoroutineContext A[D('newContext' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlin.coroutines.Continuation A[D('uCont' kotlin.coroutines.Continuation)])\l type: DIRECT call: kotlinx.coroutines.DispatchedCoroutine.\<init\>(kotlin.coroutines.CoroutineContext, kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.CoroutineContext, kotlin.coroutines.Continuation\<? super T\>):void (m)]\l0x0053: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('coroutine' kotlinx.coroutines.DispatchedCoroutine)])  (LINE:171)\l0x0054: CHECK_CAST (r7 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r7 I:??[OBJECT, ARRAY]) \l0x0056: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0057: CONST  (r9 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0058: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0059: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('block' kotlin.jvm.functions.Function2)]) \l0x005a: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('coroutine' kotlinx.coroutines.DispatchedCoroutine)]) \l0x005b: INVOKE  \l  (r5 I:kotlin.jvm.functions.Function2)\l  (r6 I:java.lang.Object)\l  (r7 I:kotlin.coroutines.Continuation)\l  (r8 I:kotlin.jvm.functions.Function1)\l  (r9 I:int)\l  (r10 I:java.lang.Object)\l type: STATIC call: kotlinx.coroutines.intrinsics.CancellableKt.startCoroutineCancellable$default(kotlin.jvm.functions.Function2, java.lang.Object, kotlin.coroutines.Continuation, kotlin.jvm.functions.Function1, int, java.lang.Object):void A[MD:(kotlin.jvm.functions.Function2, java.lang.Object, kotlin.coroutines.Continuation, kotlin.jvm.functions.Function1, int, java.lang.Object):void (m)]\l0x005e: INVOKE  (r5 I:java.lang.Object) = (r4 I:kotlinx.coroutines.DispatchedCoroutine A[D('coroutine' kotlinx.coroutines.DispatchedCoroutine)]) type: VIRTUAL call: kotlinx.coroutines.DispatchedCoroutine.getResult():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:172)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext((r11 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlin.jvm.functions.Function2\<? super kotlinx.coroutines.CoroutineScope, ? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\> A[D('block' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:kotlin.coroutines.Continuation\<? super T\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0066 \-\> B:37:0x006b, CROSS_EDGE: B:29:0x0044 \-\> B:34:0x0062, CROSS_EDGE: B:32:0x004d \-\> B:21:?, CROSS_EDGE: B:38:0x003d \-\> B:30:0x0049, CROSS_EDGE: B:33:0x004e \-\> B:34:0x0062\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0049, blocks: (B:28:0x003d), top: B:38:0x003d \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/coroutines\/CoroutineContext;Lkotlin\/jvm\/functions\/Function2\<\-Lkotlinx\/coroutines\/CoroutineScope;\-Lkotlin\/coroutines\/Continuation\<\-TT;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-TT;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x0015\-0x001a: r4 'coroutine' Lkotlinx\/coroutines\/internal\/ScopeCoroutine;\l  0x0036\-0x0044: r5 'countOrElement$iv' Ljava\/lang\/Object;\l  0x0037\-0x0044: r6 '$i$f$withCoroutineContext' I\l  0x003b\-0x0044: r7 'oldValue$iv' Ljava\/lang\/Object;\l  0x003d\-0x0044: r8 '$i$a$\-withCoroutineContext\-BuildersKt__Builders_commonKt$withContext$3$1' I\l  0x0035\-0x004e: r4 'coroutine' Lkotlinx\/coroutines\/UndispatchedCoroutine;\l  0x0049\-0x004e: r5 'countOrElement$iv' Ljava\/lang\/Object;\l  0x0049\-0x004e: r6 '$i$f$withCoroutineContext' I\l  0x0049\-0x004e: r7 'oldValue$iv' Ljava\/lang\/Object;\l  0x0002\-0x0062: r0 'uCont' Lkotlin\/coroutines\/Continuation;\l  0x0003\-0x0062: r1 '$i$a$\-suspendCoroutineUninterceptedOrReturn\-BuildersKt__Builders_commonKt$withContext$3' I\l  0x0007\-0x0062: r2 'oldContext' Lkotlin\/coroutines\/CoroutineContext;\l  0x000b\-0x0062: r3 'newContext' Lkotlin\/coroutines\/CoroutineContext;\l  0x0053\-0x0062: r4 'coroutine' Lkotlinx\/coroutines\/DispatchedCoroutine;\l  \-1 \-0x006b: r11 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x006b: r12 'block' Lkotlin\/jvm\/functions\/Function2;\l  \-1 \-0x006b: r13 '$completion' Lkotlin\/coroutines\/Continuation;\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_21;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_33;
Node_27 -> Node_38;
Node_38 -> Node_28;
Node_38 -> Node_30;
Node_28 -> Node_29;
Node_28 -> Node_39;
Node_29 -> Node_34;
Node_39 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_21;
Node_33 -> Node_34;
}

