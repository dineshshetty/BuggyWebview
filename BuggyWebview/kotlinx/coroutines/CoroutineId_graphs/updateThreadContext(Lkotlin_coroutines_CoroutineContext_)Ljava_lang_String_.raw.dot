digraph "CFG forkotlinx.coroutines.CoroutineId.updateThreadContext(Lkotlin\/coroutines\/CoroutineContext;)Ljava\/lang\/String;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.CoroutineName$Key) =  kotlinx.coroutines.CoroutineName.Key kotlinx.coroutines.CoroutineName$Key  (LINE:224)\l0x0002: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r0 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r11 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x0008: CHECK_CAST (r0 I:kotlinx.coroutines.CoroutineName) = (kotlinx.coroutines.CoroutineName) (r0 I:??[OBJECT, ARRAY]) \l0x000a: CONST_STR  (r1 I:java.lang.String) =  \"coroutine\" \l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x000f \l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|0x000f: INVOKE  (r0 I:java.lang.String) = (r0 I:kotlinx.coroutines.CoroutineName) type: VIRTUAL call: kotlinx.coroutines.CoroutineName.getName():java.lang.String A[MD:():java.lang.String (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0016 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|0x0016: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|0x0017: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0018: INVOKE  (r1 I:java.lang.Thread) =  type: STATIC call: java.lang.Thread.currentThread():java.lang.Thread A[MD:():java.lang.Thread (c)] (LINE:225)\l0x001c: INVOKE  (r2 I:java.lang.String) = (r1 I:java.lang.Thread A[D('currentThread' java.lang.Thread)]) type: VIRTUAL call: java.lang.Thread.getName():java.lang.String A[MD:():java.lang.String (c)] (LINE:226)\l0x0020: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:227)\l0x0021: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('oldName' java.lang.String)]) \l0x0022: CHECK_CAST (r4 I:java.lang.CharSequence) = (java.lang.CharSequence) (r4 I:??[OBJECT, ARRAY]) \l0x0024: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0025: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0026: CONST  (r8 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l0x0027: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0028: CONST_STR  (r5 I:java.lang.String) =  \" @\" \l0x002a: INVOKE  (r3 I:int A[D('lastIndex' int)]) = (r4 I:java.lang.CharSequence), (r5 I:java.lang.String), (r6 I:int), (r7 I:boolean), (r8 I:int), (r9 I:java.lang.Object) type: STATIC call: kotlin.text.StringsKt.lastIndexOf$default(java.lang.CharSequence, java.lang.String, int, boolean, int, java.lang.Object):int A[MD:(java.lang.CharSequence, java.lang.String, int, boolean, int, java.lang.Object):int (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x002e|0x002e: IF  (r3 I:??[int, byte, short, char] A[D('lastIndex' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:26:0x0034  (LINE:228)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0030|0x0030: INVOKE  (r3 I:int A[D('lastIndex' int)]) = (r2 I:java.lang.String A[D('oldName' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0034|0x0034: INVOKE  (r4 I:int) = (r0 I:java.lang.String A[D('coroutineName' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)] (LINE:229)\l0x0038: ARITH  (r4 I:int) = (r4 I:int) + (r3 I:int A[D('lastIndex' int)]) \l0x0039: ARITH  (r4 I:int) = (r4 I:int) + (10 int) \l0x003b: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003d: INVOKE  (r5 I:java.lang.StringBuilder), (r4 I:int) type: DIRECT call: java.lang.StringBuilder.\<init\>(int):void A[MD:(int):void (c)]\l0x0040: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY]) \l0x0041: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0042: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:230)\l0x0043: INVOKE  (r7 I:java.lang.String) = (r2 I:java.lang.String A[D('oldName' java.lang.String)]), (r7 I:int), (r3 I:int A[D('lastIndex' int)]) type: VIRTUAL call: java.lang.String.substring(int, int):java.lang.String A[MD:(int, int):java.lang.String (c)]\l0x0047: CONST_STR  (r8 I:java.lang.String) =  \"this as java.lang.String…ing(startIndex, endIndex)\" \l0x0049: INVOKE  (r7 I:java.lang.Object), (r8 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x004c: INVOKE  \l  (r4 I:java.lang.StringBuilder A[D('$this$updateThreadContext_u24lambda_u2d0' java.lang.StringBuilder)])\l  (r7 I:java.lang.String)\l type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004f: CONST_STR  (r7 I:java.lang.String) =  \" @\"  (LINE:231)\l0x0051: INVOKE  \l  (r4 I:java.lang.StringBuilder A[D('$this$updateThreadContext_u24lambda_u2d0' java.lang.StringBuilder)])\l  (r7 I:java.lang.String)\l type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0054: INVOKE  \l  (r4 I:java.lang.StringBuilder A[D('$this$updateThreadContext_u24lambda_u2d0' java.lang.StringBuilder)])\l  (r0 I:java.lang.String A[D('coroutineName' java.lang.String)])\l type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)] (LINE:232)\l0x0057: CONST  (r7 I:??[int, float, short, byte, char]) = (35 ??[int, float, short, byte, char])  (LINE:233)\l0x0059: INVOKE  (r4 I:java.lang.StringBuilder A[D('$this$updateThreadContext_u24lambda_u2d0' java.lang.StringBuilder)]), (r7 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x005c: INVOKE  (r7 I:long) = (r10 I:kotlinx.coroutines.CoroutineId) type: VIRTUAL call: kotlinx.coroutines.CoroutineId.getId():long A[MD:():long (m)] (LINE:234)\l0x0060: INVOKE  (r4 I:java.lang.StringBuilder A[D('$this$updateThreadContext_u24lambda_u2d0' java.lang.StringBuilder)]), (r7 I:long) type: VIRTUAL call: java.lang.StringBuilder.append(long):java.lang.StringBuilder A[MD:(long):java.lang.StringBuilder (c)]\l0x0064: INVOKE  (r4 I:java.lang.String) = (r5 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)] (LINE:229)\l0x0068: CONST_STR  (r5 I:java.lang.String) =  \"StringBuilder(capacity).…builderAction).toString()\" \l0x006a: INVOKE  (r4 I:java.lang.Object), (r5 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x006d: INVOKE  (r1 I:java.lang.Thread A[D('currentThread' java.lang.Thread)]), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.Thread.setName(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0070|RETURN\l|0x0070: RETURN  (r2 I:java.lang.String A[D('oldName' java.lang.String)])  (LINE:236)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.String kotlinx.coroutines.CoroutineId.updateThreadContext((r10 'this' I:kotlinx.coroutines.CoroutineId A[IMMUTABLE_TYPE, THIS]), (r11 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x002e \-\> B:26:0x0034, CROSS_EDGE: B:20:0x0013 \-\> B:23:0x0017, CROSS_EDGE: B:17:0x000c \-\> B:23:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0041\-0x0064: r4 '$this$updateThreadContext_u24lambda_u2d0' Ljava\/lang\/StringBuilder;\l  0x0042\-0x0064: r6 '$i$a$\-buildString\-CoroutineId$updateThreadContext$1' I\l  0x0018\-0x0070: r0 'coroutineName' Ljava\/lang\/String;\l  0x001c\-0x0070: r1 'currentThread' Ljava\/lang\/Thread;\l  0x0020\-0x0070: r2 'oldName' Ljava\/lang\/String;\l  0x0021\-0x0070: r3 'lastIndex' I\l  \-1 \-0x0070: r11 'context' Lkotlin\/coroutines\/CoroutineContext;\lREPLACED_BY: kotlinx.coroutines.CoroutineId.updateThreadContext(kotlin.coroutines.CoroutineContext):java.lang.String\lBRIDGED_BY: kotlinx.coroutines.CoroutineId.updateThreadContext(kotlin.coroutines.CoroutineContext):java.lang.String\lMETHOD_OVERRIDE: [kotlinx.coroutines.ThreadContextElement.updateThreadContext(kotlin.coroutines.CoroutineContext):S]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_23[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_23[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

