digraph "CFG forkotlinx.coroutines.CoroutineId.\<init\>(J)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.CoroutineId$Key) =  kotlinx.coroutines.CoroutineId.Key kotlinx.coroutines.CoroutineId$Key  (LINE:219)\l0x0002: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r0 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  (r1 I:kotlin.coroutines.AbstractCoroutineContextElement), (r0 I:kotlin.coroutines.CoroutineContext$Key) type: DIRECT call: kotlin.coroutines.AbstractCoroutineContextElement.\<init\>(kotlin.coroutines.CoroutineContext$Key):void A[MD:(kotlin.coroutines.CoroutineContext$Key\<?\>):void (m)]\l0x0007: IPUT  (r2 I:long A[D('id' long)]), (r1 I:kotlinx.coroutines.CoroutineId) kotlinx.coroutines.CoroutineId.id long  (LINE:218)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:217)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.CoroutineId.\<init\>((r1 'this' I:kotlinx.coroutines.CoroutineId A[IMMUTABLE_TYPE, THIS]), (r2 I:long A[D('id' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0009: r2 'id' J\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

