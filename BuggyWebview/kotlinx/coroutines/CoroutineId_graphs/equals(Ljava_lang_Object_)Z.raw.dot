digraph "CFG forkotlinx.coroutines.CoroutineId.equals(Ljava\/lang\/Object;)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0001|0x0001: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0004 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0003|RETURN\l|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: INSTANCE_OF  (r1 I:boolean) = (r8 I:??[OBJECT, ARRAY]) kotlinx.coroutines.CoroutineId \l0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x000a \l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|RETURN\l|0x0009: RETURN  (r2 I:boolean) \l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|0x000a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x000b: CHECK_CAST (r1 I:kotlinx.coroutines.CoroutineId) = (kotlinx.coroutines.CoroutineId) (r1 I:??[OBJECT, ARRAY]) \l0x000d: IGET  (r3 I:long) = (r7 I:kotlinx.coroutines.CoroutineId) kotlinx.coroutines.CoroutineId.id long \l0x000f: IGET  (r5 I:long) = (r1 I:kotlinx.coroutines.CoroutineId) kotlinx.coroutines.CoroutineId.id long \l0x0011: CMP_L  (r1 I:int) = (r3 I:long), (r5 I:long) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|0x0013: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0016 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|RETURN\l|0x0015: RETURN  (r2 I:boolean) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlinx.coroutines.CoroutineId.equals((r7 'this' I:kotlinx.coroutines.CoroutineId A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:19:0x0009 \-\> B:13:?, CROSS_EDGE: B:22:0x0015 \-\> B:13:?, CROSS_EDGE: B:23:0x0016 \-\> B:13:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_13;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_13;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_13;
Node_23 -> Node_13;
}

