digraph "CFG forkotlinx.coroutines.CoroutineId.restoreThreadContext(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Object;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|restoreThreadContext(r2, r3)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0006|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ void kotlinx.coroutines.CoroutineId.restoreThreadContext((r1v0 'this' kotlinx.coroutines.CoroutineId A[IMMUTABLE_TYPE, THIS]), (r2v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.String A[D('oldState' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlinx.coroutines.ThreadContextElement.restoreThreadContext(kotlin.coroutines.CoroutineContext, S):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

