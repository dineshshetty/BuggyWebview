digraph "CFG forkotlinx.coroutines.CoroutineId.restoreThreadContext(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/String;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Thread) =  type: STATIC call: java.lang.Thread.currentThread():java.lang.Thread A[MD:():java.lang.Thread (c)] (LINE:240)\l0x0004: INVOKE  (r0 I:java.lang.Thread), (r3 I:java.lang.String A[D('oldState' java.lang.String)]) type: VIRTUAL call: java.lang.Thread.setName(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0007|RETURN\l|0x0007: RETURN    (LINE:241)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlinx.coroutines.CoroutineId.restoreThreadContext((r1 'this' I:kotlinx.coroutines.CoroutineId A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[D('oldState' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r2 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x0007: r3 'oldState' Ljava\/lang\/String;\lREPLACED_BY: kotlinx.coroutines.CoroutineId.restoreThreadContext(kotlin.coroutines.CoroutineContext, java.lang.String):void\lBRIDGED_BY: kotlinx.coroutines.CoroutineId.restoreThreadContext(kotlin.coroutines.CoroutineContext, java.lang.String):void\lMETHOD_OVERRIDE: [kotlinx.coroutines.ThreadContextElement.restoreThreadContext(kotlin.coroutines.CoroutineContext, S):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

