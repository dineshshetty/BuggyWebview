digraph "CFG forkotlinx.coroutines.CoroutineId.updateThreadContext(Lkotlin\/coroutines\/CoroutineContext;)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.String) = \l  (r1 I:kotlinx.coroutines.CoroutineId)\l  (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l type: VIRTUAL call: kotlinx.coroutines.CoroutineId.updateThreadContext(kotlin.coroutines.CoroutineContext):java.lang.String A[MD:(kotlin.coroutines.CoroutineContext):java.lang.String (m)] (LINE:216)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:java.lang.String) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ java.lang.String kotlinx.coroutines.CoroutineId.updateThreadContext((r1 'this' I:kotlinx.coroutines.CoroutineId A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0004: r2 'context' Lkotlin\/coroutines\/CoroutineContext;\lMETHOD_OVERRIDE: [kotlinx.coroutines.ThreadContextElement.updateThreadContext(kotlin.coroutines.CoroutineContext):S]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

