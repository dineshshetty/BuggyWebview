digraph "CFG forkotlinx.coroutines.JobKt__JobKt.cancelChildren(Lkotlinx\/coroutines\/Job;Ljava\/util\/concurrent\/CancellationException;)V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlin.sequences.Sequence) = (r6 I:kotlinx.coroutines.Job A[D('$this$cancelChildren' kotlinx.coroutines.Job)]) type: INTERFACE call: kotlinx.coroutines.Job.getChildren():kotlin.sequences.Sequence A[MD:():kotlin.sequences.Sequence\<kotlinx.coroutines.Job\> (m)] (LINE:506)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: INVOKE  (r2 I:java.util.Iterator) = (r0 I:kotlin.sequences.Sequence A[D('$this$forEach$iv' kotlin.sequences.Sequence)]) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:672)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|LOOP_START\lLOOP:0: B:12:0x0009\-\>B:14:0x000f\l|0x0009: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x000d|0x000d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x001c \l}"];
Node_14 [shape=record,label="{14\:\ 0x000f|LOOP_END\lLOOP:0: B:12:0x0009\-\>B:14:0x000f\l|0x000f: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0013: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) \l0x0014: CHECK_CAST (r4 I:kotlinx.coroutines.Job) = (kotlinx.coroutines.Job) (r4 I:??[OBJECT, ARRAY]) \l0x0016: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: INVOKE  \l  (r4 I:kotlinx.coroutines.Job A[D('it' kotlinx.coroutines.Job)])\l  (r7 I:java.util.concurrent.CancellationException A[D('cause' java.util.concurrent.CancellationException)])\l type: INTERFACE call: kotlinx.coroutines.Job.cancel(java.util.concurrent.CancellationException):void A[MD:(java.util.concurrent.CancellationException):void (m)] (LINE:506)\l}"];
Node_17 [shape=record,label="{17\:\ 0x001c|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x001c|RETURN\l|0x001c: RETURN    (LINE:507)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.JobKt__JobKt.cancelChildren((r6 I:kotlinx.coroutines.Job A[D('$this$cancelChildren' kotlinx.coroutines.Job), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.concurrent.CancellationException A[D('cause' java.util.concurrent.CancellationException), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x000f \-\> B:12:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x001a: r3 'element$iv' Ljava\/lang\/Object;\l  0x0016\-0x001a: r4 'it' Lkotlinx\/coroutines\/Job;\l  0x0017\-0x001a: r5 '$i$a$\-forEach\-JobKt__JobKt$cancelChildren$1' I\l  0x0004\-0x001c: r0 '$this$forEach$iv' Lkotlin\/sequences\/Sequence;\l  0x0005\-0x001c: r1 '$i$f$forEach' I\l  \-1 \-0x001c: r6 '$this$cancelChildren' Lkotlinx\/coroutines\/Job;\l  \-1 \-0x001c: r7 'cause' Ljava\/util\/concurrent\/CancellationException;\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_12;
Node_17 -> Node_16;
Node_16 -> Node_10;
}

