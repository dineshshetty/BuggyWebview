digraph "CFG forkotlinx.coroutines.JobKt__JobKt.cancel(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Throwable;)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|kotlin.coroutines.CoroutineContext$Element r0 = r2.get(kotlinx.coroutines.Job.Key)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|if ((r0 instanceof kotlinx.coroutines.JobSupport) == false) goto L9\l}"];
Node_15 [shape=record,label="{15\:\ 0x000c|kotlinx.coroutines.JobSupport r0 = (kotlinx.coroutines.JobSupport) r0\l}"];
Node_17 [shape=record,label="{17\:\ 0x0010|PHI: r0 \l  PHI: (r0v4 'job' kotlinx.coroutines.JobSupport) = (r0v3 'job' kotlinx.coroutines.JobSupport), (r0v6 'job' kotlinx.coroutines.JobSupport) binds: [B:16:0x000f, B:15:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != null) goto L7\l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|RETURN\l|return false\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|r0.cancelInternal(orCancellation$JobKt__JobKt(r3, r0))\l}"];
Node_21 [shape=record,label="{21\:\ 0x001f|RETURN\l|return true\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|r0 = null\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ boolean kotlinx.coroutines.JobKt__JobKt.cancel((r2v0 '$this$cancel' kotlin.coroutines.CoroutineContext A[D('$this$cancel' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'cause' java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>HIDDEN:Lkotlin\/DeprecationLevel;\}, message=Since 1.2.0, binary compatibility with versions \<= 1.1.x\}\}\}\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:21:0x001f \-\> B:12:?, CROSS_EDGE: B:16:0x000f \-\> B:17:0x0010\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

