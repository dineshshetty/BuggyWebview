digraph "CFG forkotlinx.coroutines.JobKt__JobKt.cancelChildren(Lkotlin\/coroutines\/CoroutineContext;Ljava\/util\/concurrent\/CancellationException;)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.Job$Key) =  kotlinx.coroutines.Job.Key kotlinx.coroutines.Job$Key  (LINE:614)\l0x0002: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r0 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r6 I:kotlin.coroutines.CoroutineContext A[D('$this$cancelChildren' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x0008: CHECK_CAST (r0 I:kotlinx.coroutines.Job) = (kotlinx.coroutines.Job) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x000d \l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|0x000d: INVOKE  (r0 I:kotlin.sequences.Sequence) = (r0 I:kotlinx.coroutines.Job) type: INTERFACE call: kotlinx.coroutines.Job.getChildren():kotlin.sequences.Sequence A[MD:():kotlin.sequences.Sequence\<kotlinx.coroutines.Job\> (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0014 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|0x0014: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: INVOKE  (r2 I:java.util.Iterator) = (r0 I:kotlin.sequences.Sequence A[D('$this$forEach$iv' kotlin.sequences.Sequence)]) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:676)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|LOOP_START\lLOOP:0: B:26:0x0019\-\>B:28:0x001f\l|0x0019: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x001d|0x001d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x002c \l}"];
Node_28 [shape=record,label="{28\:\ 0x001f|LOOP_END\lLOOP:0: B:26:0x0019\-\>B:28:0x001f\l|0x001f: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0023: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) \l0x0024: CHECK_CAST (r4 I:kotlinx.coroutines.Job) = (kotlinx.coroutines.Job) (r4 I:??[OBJECT, ARRAY]) \l0x0026: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0027: INVOKE  \l  (r4 I:kotlinx.coroutines.Job A[D('it' kotlinx.coroutines.Job)])\l  (r7 I:java.util.concurrent.CancellationException A[D('cause' java.util.concurrent.CancellationException)])\l type: INTERFACE call: kotlinx.coroutines.Job.cancel(java.util.concurrent.CancellationException):void A[MD:(java.util.concurrent.CancellationException):void (m)] (LINE:614)\l}"];
Node_31 [shape=record,label="{31\:\ 0x002c|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x002c: RETURN   A[SYNTHETIC] (LINE:615)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|0x002c: RETURN   A[SYNTHETIC] (LINE:615)\l}"];
Node_30 [shape=record,label="{30\:\ 0x002c|RETURN\lORIG_RETURN\l|0x002c: RETURN    (LINE:615)\l}"];
MethodNode[shape=record,label="{public static final void kotlinx.coroutines.JobKt__JobKt.cancelChildren((r6 I:kotlin.coroutines.CoroutineContext A[D('$this$cancelChildren' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.concurrent.CancellationException A[D('cause' java.util.concurrent.CancellationException), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x001f \-\> B:26:0x0019, CROSS_EDGE: B:23:0x0011 \-\> B:30:0x002c, CROSS_EDGE: B:20:0x000a \-\> B:30:0x002c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0023\-0x002a: r3 'element$iv' Ljava\/lang\/Object;\l  0x0026\-0x002a: r4 'it' Lkotlinx\/coroutines\/Job;\l  0x0027\-0x002a: r5 '$i$a$\-forEach\-JobKt__JobKt$cancelChildren$3' I\l  0x0014\-0x002c: r0 '$this$forEach$iv' Lkotlin\/sequences\/Sequence;\l  0x0015\-0x002c: r1 '$i$f$forEach' I\l  \-1 \-0x002c: r6 '$this$cancelChildren' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x002c: r7 'cause' Ljava\/util\/concurrent\/CancellationException;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_30[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_32[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_26;
Node_31 -> Node_33;
Node_33 -> Node_18;
Node_32 -> Node_18;
Node_30 -> Node_18;
}

