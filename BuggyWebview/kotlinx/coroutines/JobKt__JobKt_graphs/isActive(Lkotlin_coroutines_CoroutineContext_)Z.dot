digraph "CFG forkotlinx.coroutines.JobKt__JobKt.isActive(Lkotlin\/coroutines\/CoroutineContext;)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|kotlinx.coroutines.Job r0 = (kotlinx.coroutines.Job) r3.get(kotlinx.coroutines.Job.Key)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|if (r0 != null) goto L3\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f}"];
Node_17 [shape=record,label="{17\:\ 0x0013|if (r0.isActive() != true) goto L7\l}"];
Node_18 [shape=record,label="{18\:\ 0x0015|RETURN\lORIG_RETURN\l|return true\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static final boolean kotlinx.coroutines.JobKt__JobKt.isActive((r3v0 '$this$isActive' kotlin.coroutines.CoroutineContext A[D('$this$isActive' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0013 \-\> B:19:0x0016, CROSS_EDGE: B:14:0x000c \-\> B:19:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_20[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_12;
Node_21 -> Node_12;
Node_20 -> Node_12;
}

