digraph "CFG forkotlinx.coroutines.JobKt__JobKt.cancelChildren(Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Throwable;)V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: SGET  (r0 I:kotlinx.coroutines.Job$Key) =  kotlinx.coroutines.Job.Key kotlinx.coroutines.Job$Key  (LINE:637)\l0x0002: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r0 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r9 I:kotlin.coroutines.CoroutineContext A[D('$this$cancelChildren' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l0x0008: CHECK_CAST (r0 I:kotlinx.coroutines.Job) = (kotlinx.coroutines.Job) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x000d \l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|RETURN\l|0x000c: RETURN   \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x000d|0x000d: INVOKE  (r1 I:kotlin.sequences.Sequence) = (r0 I:kotlinx.coroutines.Job A[D('job' kotlinx.coroutines.Job)]) type: INTERFACE call: kotlinx.coroutines.Job.getChildren():kotlin.sequences.Sequence A[MD:():kotlin.sequences.Sequence\<kotlinx.coroutines.Job\> (m)] (LINE:638)\l0x0011: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: INVOKE  (r3 I:java.util.Iterator) = (r1 I:kotlin.sequences.Sequence A[D('$this$forEach$iv' kotlin.sequences.Sequence)]) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:678)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0016|LOOP_START\lLOOP:0: B:28:0x0016\-\>B:41:0x0016\l|0x0016: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x001a|0x001a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0039 \l}"];
Node_30 [shape=record,label="{30\:\ 0x001c|0x001c: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0020: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) \l0x0021: CHECK_CAST (r5 I:kotlinx.coroutines.Job) = (kotlinx.coroutines.Job) (r5 I:??[OBJECT, ARRAY]) \l0x0023: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0024: INSTANCE_OF  (r7 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('it' kotlinx.coroutines.Job)]) kotlinx.coroutines.JobSupport  (LINE:638)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0026|0x0026: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x002c \l}"];
Node_32 [shape=record,label="{32\:\ 0x0028|0x0028: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('it' kotlinx.coroutines.Job)]) \l0x0029: CHECK_CAST (r7 I:kotlinx.coroutines.JobSupport) = (kotlinx.coroutines.JobSupport) (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x002d|0x002d: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0030 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0030|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0030|0x0030: INVOKE  (r8 I:java.lang.Throwable) = \l  (r10 I:java.lang.Throwable A[D('cause' java.lang.Throwable)])\l  (r0 I:kotlinx.coroutines.Job A[D('job' kotlinx.coroutines.Job)])\l type: STATIC call: kotlinx.coroutines.JobKt__JobKt.orCancellation$JobKt__JobKt(java.lang.Throwable, kotlinx.coroutines.Job):java.lang.Throwable A[MD:(java.lang.Throwable, kotlinx.coroutines.Job):java.lang.Throwable (m)]\l0x0034: INVOKE  (r7 I:kotlinx.coroutines.JobSupport), (r8 I:java.lang.Throwable) type: VIRTUAL call: kotlinx.coroutines.JobSupport.cancelInternal(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (m)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0016|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0016|LOOP_END\lSYNTHETIC\lLOOP:0: B:28:0x0016\-\>B:41:0x0016\l}"];
Node_42 [shape=record,label="{42\:\ 0x0016|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x002c|0x002c: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0039|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0039|RETURN\l|0x0039: RETURN    (LINE:639)\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ void kotlinx.coroutines.JobKt__JobKt.cancelChildren((r9 I:kotlin.coroutines.CoroutineContext A[D('$this$cancelChildren' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>HIDDEN:Lkotlin\/DeprecationLevel;\}, message=Since 1.2.0, binary compatibility with versions \<= 1.1.x\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0020\-0x0037: r4 'element$iv' Ljava\/lang\/Object;\l  0x0023\-0x0037: r5 'it' Lkotlinx\/coroutines\/Job;\l  0x0024\-0x0037: r6 '$i$a$\-forEach\-JobKt__JobKt$cancelChildren$4' I\l  0x0011\-0x0039: r1 '$this$forEach$iv' Lkotlin\/sequences\/Sequence;\l  0x0012\-0x0039: r2 '$i$f$forEach' I\l  0x000d\-0x0039: r0 'job' Lkotlinx\/coroutines\/Job;\l  \-1 \-0x0039: r9 '$this$cancelChildren' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x0039: r10 'cause' Ljava\/lang\/Throwable;\lBACK_EDGE: B:36:0x0030 \-\> B:28:0x0016, BACK_EDGE: B:34:0x002d \-\> B:28:0x0016, CROSS_EDGE: B:33:0x002c \-\> B:34:0x002d, CROSS_EDGE: B:38:0x0039 \-\> B:23:?\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_23;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_39;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_34 -> Node_40;
Node_34 -> Node_42[style=dashed];
Node_40 -> Node_36;
Node_36 -> Node_43;
Node_43 -> Node_41;
Node_41 -> Node_28;
Node_42 -> Node_41;
Node_33 -> Node_34;
Node_39 -> Node_38;
Node_38 -> Node_23;
}

