digraph "CFG forkotlinx.coroutines.CoroutineContextKt.withContinuationContext(Lkotlin\/coroutines\/Continuation;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function0;)Ljava\/lang\/Object;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|kotlin.coroutines.CoroutineContext r1 = r7.getContext()\ljava.lang.Object r2 = kotlinx.coroutines.internal.ThreadContext.updateThreadContext(r1, r8)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000b|if (r2 == kotlinx.coroutines.internal.ThreadContext.NO_THREAD_ELEMENTS) goto L24\l}"];
Node_29 [shape=record,label="{29\:\ 0x000d|kotlinx.coroutines.UndispatchedCoroutine r3 = updateUndispatchedCompletion(r7, r1, r2)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|PHI: r3 \l  PHI: (r3v2 'undispatchedCompletion' kotlinx.coroutines.UndispatchedCoroutine) = (r3v1 'undispatchedCompletion' kotlinx.coroutines.UndispatchedCoroutine), (r3v3 'undispatchedCompletion' kotlinx.coroutines.UndispatchedCoroutine) binds: [B:30:0x0012, B:29:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|r4 = 1\l}"];
Node_48 [shape=record,label="{48\:\ 0x0019|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x002f, blocks: (B:32:0x0019), top: B:48:0x0019 \}\lCatch: all \-\> 0x002f\l}"];
Node_33 [shape=record,label="{33\:\ 0x001d|DONT_GENERATE\l|kotlin.jvm.internal.InlineMarker.finallyStart(r4)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0020|DONT_GENERATE\l|if (r3 == null) goto L14\l}"];
Node_35 [shape=record,label="{35\:\ 0x0022|DONT_GENERATE\l|boolean r6 = r3.clearThreadContext()\l}"];
Node_36 [shape=record,label="{36\:\ 0x0026|DONT_GENERATE\l|if (r6 == false) goto L11\l}"];
Node_38 [shape=record,label="{38\:\ 0x002b|DONT_GENERATE\l|kotlin.jvm.internal.InlineMarker.finallyEnd(r4)\l}"];
Node_39 [shape=record,label="{39\:\ 0x002e|RETURN\l|return r9.invoke()\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0028|DONT_GENERATE\l|kotlinx.coroutines.internal.ThreadContext.restoreThreadContext(r1, r2)\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_40 [shape=record,label="{40\:\ 0x002f|ExcHandler: all \-\> 0x002f\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_41 [shape=record,label="{41\:\ 0x0030|FINALLY_INSNS\l|kotlin.jvm.internal.InlineMarker.finallyStart(1)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0033|FINALLY_INSNS\l|if (r3 == null) goto L23\l}"];
Node_43 [shape=record,label="{43\:\ 0x0035|FINALLY_INSNS\l}"];
Node_44 [shape=record,label="{44\:\ 0x0039|FINALLY_INSNS\l|if (r3.clearThreadContext() == false) goto L21\l}"];
Node_46 [shape=record,label="{46\:\ 0x003e|FINALLY_INSNS\l|kotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0041|throw r5\l}"];
Node_45 [shape=record,label="{45\:\ 0x003b|FINALLY_INSNS\l|kotlinx.coroutines.internal.ThreadContext.restoreThreadContext(r1, r2)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0012|r3 = null\l}"];
MethodNode[shape=record,label="{public static final T kotlinx.coroutines.CoroutineContextKt.withContinuationContext((r7v0 kotlin.coroutines.Continuation\<?\> A[D('continuation' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'countOrElement' java.lang.Object A[D('countOrElement' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 kotlin.jvm.functions.Function0\<? extends T\> A[D('block' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x0026 \-\> B:38:0x002b, CROSS_EDGE: B:34:0x0020 \-\> B:37:0x0028, CROSS_EDGE: B:47:0x0041 \-\> B:26:?, CROSS_EDGE: B:44:0x0039 \-\> B:46:0x003e, CROSS_EDGE: B:42:0x0033 \-\> B:45:0x003b, CROSS_EDGE: B:48:0x0019 \-\> B:40:0x002f, CROSS_EDGE: B:30:0x0012 \-\> B:31:0x0016\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x002f, blocks: (B:32:0x0019), top: B:48:0x0019 \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/coroutines\/Continuation\<*\>;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function0\<+TT;\>;)TT;\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_48;
Node_48 -> Node_32;
Node_48 -> Node_40;
Node_32 -> Node_33;
Node_32 -> Node_49;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_37;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_26;
Node_37 -> Node_38;
Node_49 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_45;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_26;
Node_45 -> Node_46;
Node_30 -> Node_31;
}

