digraph "CFG forkotlinx.coroutines.CoroutineContextKt.updateUndispatchedCompletion(Lkotlin\/coroutines\/Continuation;Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Object;)Lkotlinx\/coroutines\/UndispatchedCoroutine;" {
subgraph cluster_Region_1207824060 {
label = "R(1:(2:(2:6|(2:(3:10|(1:12)|13)|(1:9)))|(1:3)))";
node [shape=record,color=blue];
subgraph cluster_Region_1969654936 {
label = "R(2:(2:6|(2:(3:10|(1:12)|13)|(1:9)))|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_236031098 {
label = "IF [B:19:0x0003] THEN: R(2:6|(2:(3:10|(1:12)|13)|(1:9))) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0003|if ((r2 instanceof kotlin.coroutines.jvm.internal.CoroutineStackFrame) == true) goto L5\l}"];
subgraph cluster_Region_1206640634 {
label = "R(2:6|(2:(3:10|(1:12)|13)|(1:9)))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000e|boolean r0 = r3.get(kotlinx.coroutines.UndispatchedMarker.INSTANCE) != null\l}"];
subgraph cluster_Region_1351992713 {
label = "R(2:(3:10|(1:12)|13)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1174667305 {
label = "IF [B:25:0x0013] THEN: R(3:10|(1:12)|13) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0013|PHI: r0 \l  PHI: (r0v5 'potentiallyHasUndispatchedCoroutine' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == true) goto L10\l}"];
subgraph cluster_Region_1626230949 {
label = "R(3:10|(1:12)|13)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0016|kotlinx.coroutines.UndispatchedCoroutine kotlinx.coroutines.UndispatchedCoroutine r1 = undispatchedCompletion((kotlin.coroutines.jvm.internal.CoroutineStackFrame) r2)\l}"];
subgraph cluster_IfRegion_1014551341 {
label = "IF [B:28:0x001d] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x001d|if (r1 != null) goto L12\l}"];
subgraph cluster_Region_636870487 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0020|r1.saveThreadContext(r3, r4)\l}"];
}
}
Node_31 [shape=record,label="{31\:\ 0x0023|RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_2016762153 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0015|RETURN\l|return null\l}"];
}
}
}
}
subgraph cluster_Region_972425467 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0005|RETURN\l|return null\l}"];
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0000}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0006}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0010}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0012}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.UndispatchedCoroutine\<?\> kotlinx.coroutines.CoroutineContextKt.updateUndispatchedCompletion((r2v0 kotlin.coroutines.Continuation\<?\> A[D('$this$updateUndispatchedCompletion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'oldValue' java.lang.Object A[D('oldValue' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0015 \-\> B:17:?, CROSS_EDGE: B:31:0x0023 \-\> B:17:?, CROSS_EDGE: B:28:0x001d \-\> B:31:0x0023, CROSS_EDGE: B:24:0x0012 \-\> B:25:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<*\>;Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Object;)Lkotlinx\/coroutines\/UndispatchedCoroutine\<*\>;\l}"];
MethodNode -> Node_16;Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_22 -> Node_23;
Node_22 -> Node_24;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_17;
Node_26 -> Node_17;
Node_20 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_21 -> Node_22;
Node_23 -> Node_25;
Node_24 -> Node_25;
}

