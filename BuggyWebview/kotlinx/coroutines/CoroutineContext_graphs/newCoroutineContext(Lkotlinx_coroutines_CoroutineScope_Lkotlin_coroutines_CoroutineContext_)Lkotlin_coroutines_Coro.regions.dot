digraph "CFG forkotlinx.coroutines.CoroutineContextKt.newCoroutineContext(Lkotlinx\/coroutines\/CoroutineScope;Lkotlin\/coroutines\/CoroutineContext;)Lkotlin\/coroutines\/CoroutineContext;" {
subgraph cluster_Region_826834876 {
label = "R(3:1|2|5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0000|kotlin.coroutines.CoroutineContext kotlin.coroutines.CoroutineContext r0 = foldCopies(r4.getCoroutineContext(), r5, true)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000d|kotlin.coroutines.CoroutineContext r1 = kotlinx.coroutines.Debug.getDEBUG() ? r0.plus(new kotlinx.coroutines.CoroutineId(kotlinx.coroutines.Debug.getCOROUTINE_ID().incrementAndGet())) : r0\l}"];
Node_21 [shape=record,label="{21\:\ 0x0028|RETURN\l|return (r0 == kotlinx.coroutines.Dispatchers.getDefault() \|\| r0.get(kotlin.coroutines.ContinuationInterceptor.Key) != null) ? r1 : r1.plus(kotlinx.coroutines.Dispatchers.getDefault())\l}"];
}
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x000f}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0024|PHI: r1 \l  PHI: (r1v3 'debug' kotlin.coroutines.CoroutineContext) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x002a}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0032|REMOVE\lADDED_TO_REGION\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0034}"];
Node_27 [shape=record,color=red,label="{27\:\ ?|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x003f}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0040|ORIG_RETURN\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0023}"];
MethodNode[shape=record,label="{public static final kotlin.coroutines.CoroutineContext kotlinx.coroutines.CoroutineContextKt.newCoroutineContext((r4v0 '$this$newCoroutineContext' kotlinx.coroutines.CoroutineScope A[D('$this$newCoroutineContext' kotlinx.coroutines.CoroutineScope), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'context' kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x003f \-\> B:26:0x0040, CROSS_EDGE: B:21:0x0028 \-\> B:25:0x003f, CROSS_EDGE: B:19:0x0023 \-\> B:20:0x0024\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_19;
Node_21 -> Node_22;
Node_21 -> Node_25;
Node_14 -> Node_16;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_27;
Node_27 -> Node_15;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_19 -> Node_20;
}

