digraph "CFG forkotlinx.coroutines.CoroutineContextKt.updateUndispatchedCompletion(Lkotlin\/coroutines\/Continuation;Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Object;)Lkotlinx\/coroutines\/UndispatchedCoroutine;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('$this$updateUndispatchedCompletion' kotlin.coroutines.Continuation)]) kotlin.coroutines.jvm.internal.CoroutineStackFrame  (LINE:125)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0006 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0005|RETURN\l|0x0005: RETURN  (r1 I:kotlinx.coroutines.UndispatchedCoroutine\<?\>) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|0x0006: SGET  (r0 I:kotlinx.coroutines.UndispatchedMarker) =  kotlinx.coroutines.UndispatchedMarker.INSTANCE kotlinx.coroutines.UndispatchedMarker  (LINE:138)\l0x0008: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext$Key) = (kotlin.coroutines.CoroutineContext$Key) (r0 I:??[OBJECT, ARRAY]) \l0x000a: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r3 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r0 I:kotlin.coroutines.CoroutineContext$Key)\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0012 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|0x0010: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('potentiallyHasUndispatchedCoroutine' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0016  (LINE:139)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0015|RETURN\l|0x0015: RETURN  (r1 I:kotlinx.coroutines.UndispatchedCoroutine\<?\>) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|0x0016: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$updateUndispatchedCompletion' kotlin.coroutines.Continuation)])  (LINE:140)\l0x0017: CHECK_CAST (r1 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame) = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) (r1 I:??[OBJECT, ARRAY]) \l0x0019: INVOKE  (r1 I:kotlinx.coroutines.UndispatchedCoroutine) = (r1 I:kotlin.coroutines.jvm.internal.CoroutineStackFrame) type: STATIC call: kotlinx.coroutines.CoroutineContextKt.undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame):kotlinx.coroutines.UndispatchedCoroutine A[MD:(kotlin.coroutines.jvm.internal.CoroutineStackFrame):kotlinx.coroutines.UndispatchedCoroutine\<?\> (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x001d|0x001d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('completion' kotlinx.coroutines.UndispatchedCoroutine)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0020  (LINE:141)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0020|0x0020: INVOKE  \l  (r1 I:kotlinx.coroutines.UndispatchedCoroutine A[D('completion' kotlinx.coroutines.UndispatchedCoroutine)])\l  (r3 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r4 I:java.lang.Object A[D('oldValue' java.lang.Object)])\l type: VIRTUAL call: kotlinx.coroutines.UndispatchedCoroutine.saveThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Object):void (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0023|RETURN\l|0x0023: RETURN  (r1 I:kotlinx.coroutines.UndispatchedCoroutine\<?\> A[D('completion' kotlinx.coroutines.UndispatchedCoroutine)])  (LINE:142)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final kotlinx.coroutines.UndispatchedCoroutine\<?\> kotlinx.coroutines.CoroutineContextKt.updateUndispatchedCompletion((r2 I:kotlin.coroutines.Continuation\<?\> A[D('$this$updateUndispatchedCompletion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[D('oldValue' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0015 \-\> B:17:?, CROSS_EDGE: B:31:0x0023 \-\> B:17:?, CROSS_EDGE: B:28:0x001d \-\> B:31:0x0023, CROSS_EDGE: B:24:0x0012 \-\> B:25:0x0013\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0023: r0 'potentiallyHasUndispatchedCoroutine' Z\l  0x001d\-0x0023: r1 'completion' Lkotlinx\/coroutines\/UndispatchedCoroutine;\l  \-1 \-0x0023: r2 '$this$updateUndispatchedCompletion' Lkotlin\/coroutines\/Continuation;\l  \-1 \-0x0023: r3 'context' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x0023: r4 'oldValue' Ljava\/lang\/Object;\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<*\>;Lkotlin\/coroutines\/CoroutineContext;Ljava\/lang\/Object;)Lkotlinx\/coroutines\/UndispatchedCoroutine\<*\>;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_17;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_17;
Node_24 -> Node_25;
}

