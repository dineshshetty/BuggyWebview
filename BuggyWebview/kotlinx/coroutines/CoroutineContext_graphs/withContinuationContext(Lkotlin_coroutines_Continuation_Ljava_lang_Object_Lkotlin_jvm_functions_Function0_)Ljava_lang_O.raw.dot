digraph "CFG forkotlinx.coroutines.CoroutineContextKt.withContinuationContext(Lkotlin\/coroutines\/Continuation;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function0;)Ljava\/lang\/Object;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext) = (r7 I:kotlin.coroutines.Continuation A[D('continuation' kotlin.coroutines.Continuation)]) type: INTERFACE call: kotlin.coroutines.Continuation.getContext():kotlin.coroutines.CoroutineContext A[MD:():kotlin.coroutines.CoroutineContext (m)] (LINE:107)\l0x0005: INVOKE  (r2 I:java.lang.Object) = \l  (r1 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r8 I:java.lang.Object A[D('countOrElement' java.lang.Object)])\l type: STATIC call: kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object):java.lang.Object A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Object):java.lang.Object (m)] (LINE:108)\l0x0009: SGET  (r3 I:kotlinx.coroutines.internal.Symbol) =  kotlinx.coroutines.internal.ThreadContextKt.NO_THREAD_ELEMENTS kotlinx.coroutines.internal.Symbol  (LINE:109)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('oldValue' java.lang.Object)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0012 \l}"];
Node_29 [shape=record,label="{29\:\ 0x000d|0x000d: INVOKE  (r3 I:kotlinx.coroutines.UndispatchedCoroutine) = \l  (r7 I:kotlin.coroutines.Continuation A[D('continuation' kotlin.coroutines.Continuation)])\l  (r1 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r2 I:java.lang.Object A[D('oldValue' java.lang.Object)])\l type: STATIC call: kotlinx.coroutines.CoroutineContextKt.updateUndispatchedCompletion(kotlin.coroutines.Continuation, kotlin.coroutines.CoroutineContext, java.lang.Object):kotlinx.coroutines.UndispatchedCoroutine A[MD:(kotlin.coroutines.Continuation\<?\>, kotlin.coroutines.CoroutineContext, java.lang.Object):kotlinx.coroutines.UndispatchedCoroutine\<?\> (m)] (LINE:111)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|0x0018: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:116)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0019|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x002f, blocks: (B:32:0x0019), top: B:48:0x0019 \}\lCatch: all \-\> 0x002f\l|0x0019: INVOKE  (r5 I:java.lang.Object) = (r9 I:kotlin.jvm.functions.Function0 A[D('block' kotlin.jvm.functions.Function0)]) type: INTERFACE call: kotlin.jvm.functions.Function0.invoke():java.lang.Object A[Catch: all \-\> 0x002f, MD:():R (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_33 [shape=record,label="{33\:\ 0x001d|0x001d: INVOKE  (r4 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0020|0x0020: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('undispatchedCompletion' kotlinx.coroutines.UndispatchedCoroutine)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0028  (LINE:118)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0022|0x0022: INVOKE  (r6 I:boolean) = (r3 I:kotlinx.coroutines.UndispatchedCoroutine A[D('undispatchedCompletion' kotlinx.coroutines.UndispatchedCoroutine)]) type: VIRTUAL call: kotlinx.coroutines.UndispatchedCoroutine.clearThreadContext():boolean A[MD:():boolean (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0026|0x0026: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x002b \l}"];
Node_38 [shape=record,label="{38\:\ 0x002b|0x002b: INVOKE  (r4 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x002e|RETURN\l|0x002e: RETURN  (r5 I:T)  (LINE:116)\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0028|0x0028: INVOKE  \l  (r1 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r2 I:java.lang.Object A[D('oldValue' java.lang.Object)])\l type: STATIC call: kotlinx.coroutines.internal.ThreadContextKt.restoreThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Object):void (m)] (LINE:119)\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_40 [shape=record,label="{40\:\ 0x002f|ExcHandler: all \-\> 0x002f\l|0x002f: MOVE_EXCEPTION  (r5 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x002f] (LINE:117)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0030|0x0030: INVOKE  (r4 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0033|0x0033: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('undispatchedCompletion' kotlinx.coroutines.UndispatchedCoroutine)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x003b  (LINE:118)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0035|0x0035: INVOKE  (r6 I:boolean) = (r3 I:kotlinx.coroutines.UndispatchedCoroutine A[D('undispatchedCompletion' kotlinx.coroutines.UndispatchedCoroutine)]) type: VIRTUAL call: kotlinx.coroutines.UndispatchedCoroutine.clearThreadContext():boolean A[MD:():boolean (m)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0039|0x0039: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x003e \l}"];
Node_46 [shape=record,label="{46\:\ 0x003e|0x003e: INVOKE  (r4 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0041|0x0041: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_45 [shape=record,label="{45\:\ 0x003b|0x003b: INVOKE  \l  (r1 I:kotlin.coroutines.CoroutineContext A[D('context' kotlin.coroutines.CoroutineContext)])\l  (r2 I:java.lang.Object A[D('oldValue' java.lang.Object)])\l type: STATIC call: kotlinx.coroutines.internal.ThreadContextKt.restoreThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object):void A[MD:(kotlin.coroutines.CoroutineContext, java.lang.Object):void (m)] (LINE:119)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0012|0x0012: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:113)\l0x0013: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x0014: CHECK_CAST (r4 I:kotlinx.coroutines.UndispatchedCoroutine) = (kotlinx.coroutines.UndispatchedCoroutine) (r4 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final T kotlinx.coroutines.CoroutineContextKt.withContinuationContext((r7 I:kotlin.coroutines.Continuation\<?\> A[D('continuation' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.Object A[D('countOrElement' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.jvm.functions.Function0\<? extends T\> A[D('block' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x0026 \-\> B:38:0x002b, CROSS_EDGE: B:34:0x0020 \-\> B:37:0x0028, CROSS_EDGE: B:47:0x0041 \-\> B:26:?, CROSS_EDGE: B:44:0x0039 \-\> B:46:0x003e, CROSS_EDGE: B:42:0x0033 \-\> B:45:0x003b, CROSS_EDGE: B:48:0x0019 \-\> B:40:0x002f, CROSS_EDGE: B:30:0x0012 \-\> B:31:0x0016\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x002f, blocks: (B:32:0x0019), top: B:48:0x0019 \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/coroutines\/Continuation\<*\>;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function0\<+TT;\>;)TT;\lDebug Info:\l  0x0001\-0x0041: r0 '$i$f$withContinuationContext' I\l  0x0005\-0x0041: r1 'context' Lkotlin\/coroutines\/CoroutineContext;\l  0x0009\-0x0041: r2 'oldValue' Ljava\/lang\/Object;\l  0x0017\-0x0041: r3 'undispatchedCompletion' Lkotlinx\/coroutines\/UndispatchedCoroutine;\l  \-1 \-0x0041: r7 'continuation' Lkotlin\/coroutines\/Continuation;\l  \-1 \-0x0041: r8 'countOrElement' Ljava\/lang\/Object;\l  \-1 \-0x0041: r9 'block' Lkotlin\/jvm\/functions\/Function0;\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_48;
Node_48 -> Node_32;
Node_48 -> Node_40;
Node_32 -> Node_33;
Node_32 -> Node_49;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_37;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_26;
Node_37 -> Node_38;
Node_49 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_45;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_26;
Node_45 -> Node_46;
Node_30 -> Node_31;
}

