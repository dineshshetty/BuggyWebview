digraph "CFG forandroid.support.v4.os.IResultReceiver.Stub.Proxy.send(ILandroid\/os\/Bundle;)V" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: INVOKE  (r0 I:android.os.Parcel) =  type: STATIC call: android.os.Parcel.obtain():android.os.Parcel A[MD:():android.os.Parcel (c)] (LINE:95)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0004|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0039, blocks: (B:24:0x0004, B:26:0x0010, B:28:0x001a, B:30:0x0023, B:32:0x0029, B:27:0x0017), top: B:40:0x0004 \}\lCatch: all \-\> 0x0039\l|0x0004: CONST_STR  (r1 I:java.lang.String) =  \"android.support.v4.os.IResultReceiver\" A[TRY_ENTER] (LINE:97)\l0x0006: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]), (r1 I:java.lang.String) type: VIRTUAL call: android.os.Parcel.writeInterfaceToken(java.lang.String):void A[Catch: all \-\> 0x0039, MD:(java.lang.String):void (c)]\l0x0009: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]), (r5 I:int A[D('resultCode' int)]) type: VIRTUAL call: android.os.Parcel.writeInt(int):void A[Catch: all \-\> 0x0039, MD:(int):void (c)] (LINE:98)\l0x000c: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:99)\l0x000d: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|0x000e: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('resultData' android.os.Bundle)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0017 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0010|TryCatch #0 \{all \-\> 0x0039, blocks: (B:24:0x0004, B:26:0x0010, B:28:0x001a, B:30:0x0023, B:32:0x0029, B:27:0x0017), top: B:40:0x0004 \}\lCatch: all \-\> 0x0039\l|0x0010: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]), (r2 I:int) type: VIRTUAL call: android.os.Parcel.writeInt(int):void A[Catch: all \-\> 0x0039, MD:(int):void (c)] (LINE:100)\l0x0013: INVOKE  \l  (r6 I:android.os.Bundle A[D('resultData' android.os.Bundle)])\l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r1 I:int)\l type: VIRTUAL call: android.os.Bundle.writeToParcel(android.os.Parcel, int):void A[Catch: all \-\> 0x0039, MD:(android.os.Parcel, int):void (c)] (LINE:101)\l0x0016: GOTO  \-\> 0x001a \l}"];
Node_28 [shape=record,label="{28\:\ 0x001a|TryCatch #0 \{all \-\> 0x0039, blocks: (B:24:0x0004, B:26:0x0010, B:28:0x001a, B:30:0x0023, B:32:0x0029, B:27:0x0017), top: B:40:0x0004 \}\lCatch: all \-\> 0x0039\l|0x001a: IGET  (r1 I:android.os.IBinder) = (r4 I:android.support.v4.os.IResultReceiver$Stub$Proxy) android.support.v4.os.IResultReceiver.Stub.Proxy.mRemote android.os.IBinder A[Catch: all \-\> 0x0039] (LINE:106)\l0x001c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001d: INVOKE  (r1 I:boolean) = \l  (r1 I:android.os.IBinder)\l  (r2 I:int)\l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r3 I:android.os.Parcel)\l  (r2 I:int)\l type: INTERFACE call: android.os.IBinder.transact(int, android.os.Parcel, android.os.Parcel, int):boolean A[Catch: all \-\> 0x0039, MD:(int, android.os.Parcel, android.os.Parcel, int):boolean throws android.os.RemoteException (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0021|0x0021: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('_status' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0034  (LINE:107)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0023|TryCatch #0 \{all \-\> 0x0039, blocks: (B:24:0x0004, B:26:0x0010, B:28:0x001a, B:30:0x0023, B:32:0x0029, B:27:0x0017), top: B:40:0x0004 \}\lCatch: all \-\> 0x0039\l|0x0023: INVOKE  (r2 I:android.support.v4.os.IResultReceiver) =  type: STATIC call: android.support.v4.os.IResultReceiver.Stub.getDefaultImpl():android.support.v4.os.IResultReceiver A[Catch: all \-\> 0x0039, MD:():android.support.v4.os.IResultReceiver (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0027|0x0027: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0034 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0029|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0039, blocks: (B:24:0x0004, B:26:0x0010, B:28:0x001a, B:30:0x0023, B:32:0x0029, B:27:0x0017), top: B:40:0x0004 \}\lCatch: all \-\> 0x0039\l|0x0029: INVOKE  (r2 I:android.support.v4.os.IResultReceiver) =  type: STATIC call: android.support.v4.os.IResultReceiver.Stub.getDefaultImpl():android.support.v4.os.IResultReceiver A[Catch: all \-\> 0x0039, MD:():android.support.v4.os.IResultReceiver (m)] (LINE:108)\l0x002d: INVOKE  \l  (r2 I:android.support.v4.os.IResultReceiver)\l  (r5 I:int A[D('resultCode' int)])\l  (r6 I:android.os.Bundle A[D('resultData' android.os.Bundle)])\l type: INTERFACE call: android.support.v4.os.IResultReceiver.send(int, android.os.Bundle):void A[Catch: all \-\> 0x0039, MD:(int, android.os.Bundle):void throws android.os.RemoteException (m), TRY_LEAVE]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0030|0x0030: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.recycle():void A[MD:():void (c)] (LINE:113)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0033|RETURN\l|0x0033: RETURN    (LINE:109)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x0034|0x0034: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.recycle():void A[MD:():void (c)] (LINE:113)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0038|RETURN\l|0x0038: RETURN    (LINE:115)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0017|TryCatch #0 \{all \-\> 0x0039, blocks: (B:24:0x0004, B:26:0x0010, B:28:0x001a, B:30:0x0023, B:32:0x0029, B:27:0x0017), top: B:40:0x0004 \}\lCatch: all \-\> 0x0039\l|0x0017: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]), (r1 I:int) type: VIRTUAL call: android.os.Parcel.writeInt(int):void A[Catch: all \-\> 0x0039, MD:(int):void (c)] (LINE:104)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0039|ExcHandler: all \-\> 0x0039\l|0x0039: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0039] (LINE:113)\l}"];
Node_38 [shape=record,label="{38\:\ 0x003a|0x003a: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.recycle():void A[MD:():void (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x003d|0x003d: THROW  (r1 I:java.lang.Throwable)  (LINE:114)\l}"];
MethodNode[shape=record,label="{public void android.support.v4.os.IResultReceiver.Stub.Proxy.send((r4 'this' I:android.support.v4.os.IResultReceiver$Stub$Proxy A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('resultCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.os.Bundle A[D('resultData' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:39:0x003d \-\> B:22:?, CROSS_EDGE: B:36:0x0038 \-\> B:22:?, CROSS_EDGE: B:29:0x0021 \-\> B:35:0x0034, CROSS_EDGE: B:27:0x0017 \-\> B:28:0x001a, CROSS_EDGE: B:40:0x0004 \-\> B:37:0x0039\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0039, blocks: (B:24:0x0004, B:26:0x0010, B:28:0x001a, B:30:0x0023, B:32:0x0029, B:27:0x0017), top: B:40:0x0004 \}\lDebug Info:\l  0x0021\-0x0034: r1 '_status' Z\l  0x0004\-0x003d: r0 '_data' Landroid\/os\/Parcel;\l  \-1 \-0x003d: r5 'resultCode' I\l  \-1 \-0x003d: r6 'resultData' Landroid\/os\/Bundle;\lEXCEPTIONS:[Landroid\/os\/RemoteException;]\lMETHOD_OVERRIDE: [android.support.v4.os.IResultReceiver.send(int, android.os.Bundle):void]\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_40;
Node_40 -> Node_24;
Node_40 -> Node_37;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_35;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_32 -> Node_41;
Node_33 -> Node_34;
Node_34 -> Node_22;
Node_41 -> Node_37;
Node_35 -> Node_36;
Node_36 -> Node_22;
Node_27 -> Node_28;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_22;
}

