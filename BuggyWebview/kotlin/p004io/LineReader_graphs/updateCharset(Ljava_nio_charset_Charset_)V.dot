digraph "CFG forkotlin.io.LineReader.updateCharset(Ljava\/nio\/charset\/Charset;)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|java.nio.charset.CharsetDecoder r0 = r6.newDecoder()\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"charset.newDecoder()\")\lkotlin.p004io.LineReader.decoder = r0\ljava.nio.ByteBuffer r0 = kotlin.p004io.LineReader.byteBuf\lr0.clear()\ljava.nio.CharBuffer r1 = kotlin.p004io.LineReader.charBuf\lr1.clear()\lr0.put((byte) 10)\lr0.flip()\ljava.nio.charset.CharsetDecoder r3 = kotlin.p004io.LineReader.decoder\l}"];
Node_15 [shape=record,label="{15\:\ 0x0020|if (r3 != null) goto L4\l}"];
Node_16 [shape=record,label="{16\:\ 0x0022|kotlin.jvm.internal.Intrinsics.throwUninitializedPropertyAccessException(\"decoder\")\lr3 = null\l}"];
Node_17 [shape=record,label="{17\:\ 0x0028|PHI: r3 \l  PHI: (r3v2 java.nio.charset.CharsetDecoder) = (r3v1 java.nio.charset.CharsetDecoder), (r3v5 java.nio.charset.CharsetDecoder) binds: [B:15:0x0020, B:16:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|r4 = false\lr3.decode(r0, r1, false)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0031|if (r1.position() != 1) goto L9\l}"];
Node_19 [shape=record,label="{19\:\ 0x0033}"];
Node_20 [shape=record,label="{20\:\ 0x0037|if (r1.get(0) != 'n') goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x0039|r4 = true\l}"];
Node_22 [shape=record,label="{22\:\ 0x003a|PHI: r4 \l  PHI: (r4v1 boolean) = (r4v0 boolean), (r4v0 boolean), (r4v2 boolean) binds: [B:18:0x0031, B:20:0x0037, B:21:0x0039] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.p004io.LineReader.directEOL = r4\lresetAll()\l}"];
Node_23 [shape=record,label="{23\:\ 0x003f|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final void kotlin.io.LineReader.updateCharset((r5v0 'this' kotlin.io.LineReader A[IMMUTABLE_TYPE, THIS]), (r6v0 'charset' java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0037 \-\> B:22:0x003a, CROSS_EDGE: B:18:0x0031 \-\> B:22:0x003a, CROSS_EDGE: B:15:0x0020 \-\> B:17:0x0028\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

