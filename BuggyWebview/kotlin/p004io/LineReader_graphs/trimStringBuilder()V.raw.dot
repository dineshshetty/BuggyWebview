digraph "CFG forkotlin.io.LineReader.trimStringBuilder()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:java.lang.StringBuilder) =  kotlin.io.LineReader.sb java.lang.StringBuilder  (LINE:295)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (32 ??[int, float, short, byte, char]) \l0x0004: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) type: VIRTUAL call: java.lang.StringBuilder.setLength(int):void A[MD:(int):void (c)]\l0x0007: INVOKE  (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.trimToSize():void A[MD:():void (c)] (LINE:296)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:297)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final void kotlin.io.LineReader.trimStringBuilder((r2 'this' I:kotlin.io.LineReader A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

