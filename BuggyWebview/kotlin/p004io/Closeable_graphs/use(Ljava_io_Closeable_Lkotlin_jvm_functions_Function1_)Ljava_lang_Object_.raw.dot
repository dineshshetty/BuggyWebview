digraph "CFG forkotlin.io.CloseableKt.use(Ljava\/io\/Closeable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_31 [shape=record,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"block\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('block' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0006: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:26)\l0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:28)\l0x0009: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x000a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_34 [shape=record,label="{34\:\ 0x000a|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:34:0x000a), top: B:56:0x000a \}\lCatch: all \-\> 0x0025\l|0x000a: INVOKE  (r3 I:java.lang.Object) = \l  (r5 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)])\l  (r4 I:java.lang.Object A[D('$this$use' java.io.Closeable)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0025, MD:(P1):R (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x000e|0x000e: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0012: INVOKE  (r1 I:boolean) = (r2 I:int), (r2 I:int), (r1 I:int) type: STATIC call: kotlin.internal.PlatformImplementationsKt.apiVersionIsAtLeast(int, int, int):boolean A[MD:(int, int, int):boolean (m)] (LINE:34)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0016|0x0016: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x001c \l}"];
Node_37 [shape=record,label="{37\:\ 0x0018|0x0018: INVOKE  \l  (r4 I:java.io.Closeable A[D('$this$use' java.io.Closeable)])\l  (r0 I:java.lang.Throwable A[D('exception' java.lang.Throwable)])\l type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0021|0x0021: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0024|RETURN\l|0x0024: RETURN  (r3 I:R)  (LINE:28)\l}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x001c|0x001c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$use' java.io.Closeable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0021  (LINE:35)\l}"];
Node_39 [shape=record,label="{39\:\ 0x001e|0x001e: INVOKE  (r4 I:java.io.Closeable A[D('$this$use' java.io.Closeable)]) type: INTERFACE call: java.io.Closeable.close():void A[MD:():void throws java.io.IOException (c)] (LINE:36)\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_42 [shape=record,label="{42\:\ 0x0025|ExcHandler: all \-\> 0x0025\l|0x0025: MOVE_EXCEPTION  (r3 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0025] (LINE:29)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0026|0x0026: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('exception' java.lang.Throwable)]) = (r3 I:??[OBJECT, ARRAY] A[D('e' java.lang.Throwable)])  (LINE:30)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0028|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_44 [shape=record,label="{44\:\ 0x0028|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x0029, blocks: (B:44:0x0028), top: B:58:0x0028 \}\lCatch: all \-\> 0x0029\l|0x0028: THROW  (r3 I:java.lang.Throwable A[D('e' java.lang.Throwable)]) A[Catch: all \-\> 0x0029, TRY_ENTER, TRY_LEAVE]\l}"];
Node_59 [shape=record,label="{59\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_45 [shape=record,label="{45\:\ 0x0029|ExcHandler: all \-\> 0x0029\l|0x0029: MOVE_EXCEPTION  (r3 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0029] (LINE:33)\l}"];
Node_46 [shape=record,label="{46\:\ 0x002a|0x002a: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x002d: INVOKE  (r1 I:boolean) = (r2 I:int), (r2 I:int), (r1 I:int) type: STATIC call: kotlin.internal.PlatformImplementationsKt.apiVersionIsAtLeast(int, int, int):boolean A[MD:(int, int, int):boolean (m)] (LINE:34)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0031|0x0031: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x003d \l}"];
Node_48 [shape=record,label="{48\:\ 0x0033|0x0033: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$use' java.io.Closeable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0040  (LINE:35)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0040|0x0040: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)] (LINE:40)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0043|0x0043: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_60 [shape=record,label="{60\:\ 0x0037|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_49 [shape=record,label="{49\:\ 0x0037|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{all \-\> 0x003b, blocks: (B:49:0x0037), top: B:60:0x0037 \}\lCatch: all \-\> 0x003b\l|0x0037: INVOKE  (r4 I:java.io.Closeable A[D('$this$use' java.io.Closeable)]) type: INTERFACE call: java.io.Closeable.close():void A[Catch: all \-\> 0x003b, MD:():void throws java.io.IOException (c), TRY_ENTER, TRY_LEAVE] (LINE:39)\l}"];
Node_61 [shape=record,label="{61\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_51 [shape=record,label="{51\:\ 0x003b|ExcHandler: all \-\> 0x003b\l|0x003b: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x003b] (LINE:40)\l}"];
Node_53 [shape=record,label="{53\:\ 0x003d|0x003d: INVOKE  \l  (r4 I:java.io.Closeable A[D('$this$use' java.io.Closeable)])\l  (r0 I:java.lang.Throwable A[D('exception' java.lang.Throwable)])\l type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)] (LINE:34)\l}"];
MethodNode[shape=record,label="{private static final R kotlin.io.CloseableKt.use((r4 I:T extends java.io.Closeable A[D('$this$use' java.io.Closeable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function1\<? super T extends java.io.Closeable, ? extends R\> A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:39:0x001e \-\> B:40:0x0021, CROSS_EDGE: B:38:0x001c \-\> B:40:0x0021, CROSS_EDGE: B:44:0x0028 \-\> B:32:?, CROSS_EDGE: B:55:0x0043 \-\> B:32:?, CROSS_EDGE: B:49:0x0037 \-\> B:54:0x0040, CROSS_EDGE: B:51:0x003b \-\> B:54:0x0040, CROSS_EDGE: B:60:0x0037 \-\> B:51:0x003b, CROSS_EDGE: B:53:0x003d \-\> B:54:0x0040, CROSS_EDGE: B:58:0x0028 \-\> B:45:0x0029, CROSS_EDGE: B:56:0x000a \-\> B:42:0x0025\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:34:0x000a), top: B:56:0x000a \}, TryCatch #1 \{all \-\> 0x0029, blocks: (B:44:0x0028), top: B:58:0x0028 \}, TryCatch #2 \{all \-\> 0x003b, blocks: (B:49:0x0037), top: B:60:0x0037 \}\lTYPE_VARS: [R, T extends java.io.Closeable]\lSIGNATURE: \<T::Ljava\/io\/Closeable;R:Ljava\/lang\/Object;\>(TT;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)TR;\lDebug Info:\l  0x0007\-0x0028: r0 'exception' Ljava\/lang\/Throwable;\l  \-1 \-0x0028: r4 '$this$use' Ljava\/io\/Closeable;\l  \-1 \-0x0028: r5 'block' Lkotlin\/jvm\/functions\/Function1;\l  0x0026\-0x0029: r3 'e' Ljava\/lang\/Throwable;\l  0x0029\-0x0043: r0 'exception' Ljava\/lang\/Throwable;\l  0x0029\-0x0043: r4 '$this$use' Ljava\/io\/Closeable;\l  0x0029\-0x0043: r5 'block' Lkotlin\/jvm\/functions\/Function1;\l}"];
MethodNode -> Node_31;Node_31 -> Node_33;
Node_33 -> Node_56;
Node_56 -> Node_34;
Node_56 -> Node_42;
Node_34 -> Node_35;
Node_34 -> Node_57;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_32;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_57 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_58;
Node_58 -> Node_44;
Node_58 -> Node_45;
Node_44 -> Node_32;
Node_44 -> Node_59;
Node_59 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_53;
Node_48 -> Node_54;
Node_48 -> Node_60[style=dashed];
Node_54 -> Node_55;
Node_55 -> Node_32;
Node_60 -> Node_49;
Node_60 -> Node_51;
Node_49 -> Node_54;
Node_49 -> Node_61;
Node_61 -> Node_51;
Node_51 -> Node_54;
Node_53 -> Node_54;
}

