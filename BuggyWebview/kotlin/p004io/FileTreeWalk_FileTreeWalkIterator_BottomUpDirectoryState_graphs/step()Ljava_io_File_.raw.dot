digraph "CFG forkotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.step()Ljava\/io\/File;" {
Node_33 [shape=record,label="{33\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.failed boolean  (LINE:129)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0057 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0006|0x0006: IGET  (r0 I:java.io.File[]) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileList java.io.File[] \l}"];
Node_38 [shape=record,label="{38\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0057 \l}"];
Node_39 [shape=record,label="{39\:\ 0x000a|0x000a: IGET  (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.this$0 kotlin.io.FileTreeWalk$FileTreeWalkIterator  (LINE:130)\l0x000c: IGET  (r0 I:kotlin.io.FileTreeWalk) = (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) kotlin.io.FileTreeWalk.FileTreeWalkIterator.this$0 kotlin.io.FileTreeWalk \l0x000e: INVOKE  (r0 I:kotlin.jvm.functions.Function1) = (r0 I:kotlin.io.FileTreeWalk) type: STATIC call: kotlin.io.FileTreeWalk.access$getOnEnter$p(kotlin.io.FileTreeWalk):kotlin.jvm.functions.Function1 A[MD:(kotlin.io.FileTreeWalk):kotlin.jvm.functions.Function1 (m)]\l0x0012: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0026 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0015|0x0015: INVOKE  (r4 I:java.io.File) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) type: VIRTUAL call: kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.getRoot():java.io.File A[MD:():java.io.File (m)]\l0x0019: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlin.jvm.functions.Function1), (r4 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x001d: CHECK_CAST (r0 I:java.lang.Boolean) = (java.lang.Boolean) (r0 I:??[OBJECT, ARRAY]) \l0x001f: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0023|0x0023: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0026 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0025|0x0025: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0026|0x0026: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0029 \l}"];
Node_45 [shape=record,label="{45\:\ 0x0028|RETURN\l|0x0028: RETURN  (r1 I:java.io.File)  (LINE:131)\l}"];
Node_34 [shape=record,label="{34\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x0029|0x0029: INVOKE  (r0 I:java.io.File) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) type: VIRTUAL call: kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.getRoot():java.io.File A[MD:():java.io.File (m)] (LINE:134)\l0x002d: INVOKE  (r0 I:java.io.File[]) = (r0 I:java.io.File) type: VIRTUAL call: java.io.File.listFiles():java.io.File[] A[MD:():java.io.File[] (c)]\l0x0031: IPUT  (r0 I:java.io.File[]), (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileList java.io.File[] \l}"];
Node_47 [shape=record,label="{47\:\ 0x0033|0x0033: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0057  (LINE:135)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0035|0x0035: IGET  (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.this$0 kotlin.io.FileTreeWalk$FileTreeWalkIterator  (LINE:136)\l0x0037: IGET  (r0 I:kotlin.io.FileTreeWalk) = (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) kotlin.io.FileTreeWalk.FileTreeWalkIterator.this$0 kotlin.io.FileTreeWalk \l0x0039: INVOKE  (r0 I:kotlin.jvm.functions.Function2) = (r0 I:kotlin.io.FileTreeWalk) type: STATIC call: kotlin.io.FileTreeWalk.access$getOnFail$p(kotlin.io.FileTreeWalk):kotlin.jvm.functions.Function2 A[MD:(kotlin.io.FileTreeWalk):kotlin.jvm.functions.Function2 (m)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x003d|0x003d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0055 \l}"];
Node_50 [shape=record,label="{50\:\ 0x003f|0x003f: INVOKE  (r3 I:java.io.File) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) type: VIRTUAL call: kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.getRoot():java.io.File A[MD:():java.io.File (m)]\l0x0043: NEW_INSTANCE  (r10 I:kotlin.io.AccessDeniedException) =  kotlin.io.AccessDeniedException \l0x0045: INVOKE  (r5 I:java.io.File) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) type: VIRTUAL call: kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.getRoot():java.io.File A[MD:():java.io.File (m)]\l0x0049: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x004a: CONST  (r8 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x004b: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x004c: CONST_STR  (r7 I:java.lang.String) =  \"Cannot list files in a directory\" \l0x004e: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l0x004f: INVOKE  \l  (r4 I:kotlin.io.AccessDeniedException)\l  (r5 I:java.io.File)\l  (r6 I:java.io.File)\l  (r7 I:java.lang.String)\l  (r8 I:int)\l  (r9 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlin.io.AccessDeniedException.\<init\>(java.io.File, java.io.File, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(java.io.File, java.io.File, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l0x0052: INVOKE  (r0 I:kotlin.jvm.functions.Function2), (r3 I:java.lang.Object), (r10 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x0055|0x0055: IPUT  (r2 I:boolean), (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.failed boolean  (LINE:137)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0057|0x0057: IGET  (r0 I:java.io.File[]) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileList java.io.File[]  (LINE:140)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0059|0x0059: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0071 \l}"];
Node_54 [shape=record,label="{54\:\ 0x005b|0x005b: IGET  (r3 I:int) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileIndex int \l0x005d: INVOKE  (r0 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0060: ARRAY_LENGTH  (r0 I:int) = (r0 I:??[]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x0061|0x0061: IF  (r3 I:??[int, byte, short, char]) \>= (r0 I:??[int, byte, short, char])  \-\> B:58:0x0071 \l}"];
Node_56 [shape=record,label="{56\:\ 0x0063|0x0063: IGET  (r0 I:java.io.File[]) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileList java.io.File[]  (LINE:142)\l0x0065: INVOKE  (r0 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0068: IGET  (r1 I:int) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileIndex int \l0x006a: ARITH  (r2 I:int) = (r1 I:int) + (1 int) \l0x006c: IPUT  (r2 I:int), (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileIndex int \l0x006e: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x0070|RETURN\l|0x0070: RETURN  (r0 I:java.io.File) \l}"];
Node_58 [shape=record,label="{58\:\ 0x0071|0x0071: IGET  (r0 I:boolean) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.rootVisited boolean  (LINE:143)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0073|0x0073: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x007c \l}"];
Node_60 [shape=record,label="{60\:\ 0x0075|0x0075: IPUT  (r2 I:boolean), (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.rootVisited boolean  (LINE:145)\l0x0077: INVOKE  (r0 I:java.io.File) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) type: VIRTUAL call: kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.getRoot():java.io.File A[MD:():java.io.File (m)] (LINE:146)\l}"];
Node_61 [shape=record,label="{61\:\ 0x007b|RETURN\l|0x007b: RETURN  (r0 I:java.io.File) \l}"];
Node_62 [shape=record,label="{62\:\ 0x007c|0x007c: IGET  (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.this$0 kotlin.io.FileTreeWalk$FileTreeWalkIterator  (LINE:149)\l0x007e: IGET  (r0 I:kotlin.io.FileTreeWalk) = (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) kotlin.io.FileTreeWalk.FileTreeWalkIterator.this$0 kotlin.io.FileTreeWalk \l0x0080: INVOKE  (r0 I:kotlin.jvm.functions.Function1) = (r0 I:kotlin.io.FileTreeWalk) type: STATIC call: kotlin.io.FileTreeWalk.access$getOnLeave$p(kotlin.io.FileTreeWalk):kotlin.jvm.functions.Function1 A[MD:(kotlin.io.FileTreeWalk):kotlin.jvm.functions.Function1 (m)]\l}"];
Node_63 [shape=record,label="{63\:\ 0x0084|0x0084: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x008d \l}"];
Node_64 [shape=record,label="{64\:\ 0x0086|0x0086: INVOKE  (r2 I:java.io.File) = (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) type: VIRTUAL call: kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.getRoot():java.io.File A[MD:():java.io.File (m)]\l0x008a: INVOKE  (r0 I:kotlin.jvm.functions.Function1), (r2 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l}"];
Node_65 [shape=record,label="{65\:\ 0x008d|RETURN\l|0x008d: RETURN  (r1 I:java.io.File)  (LINE:150)\l}"];
MethodNode[shape=record,label="{public java.io.File kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.step((r11 'this' I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:57:0x0070 \-\> B:34:?, CROSS_EDGE: B:61:0x007b \-\> B:34:?, CROSS_EDGE: B:65:0x008d \-\> B:34:?, CROSS_EDGE: B:63:0x0084 \-\> B:65:0x008d, CROSS_EDGE: B:53:0x0059 \-\> B:58:0x0071, CROSS_EDGE: B:49:0x003d \-\> B:51:0x0055, CROSS_EDGE: B:47:0x0033 \-\> B:52:0x0057, CROSS_EDGE: B:42:0x0023 \-\> B:44:0x0026, CROSS_EDGE: B:40:0x0013 \-\> B:44:0x0026, CROSS_EDGE: B:38:0x0008 \-\> B:52:0x0057, CROSS_EDGE: B:36:0x0004 \-\> B:52:0x0057\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlin.io.FileTreeWalk.WalkState.step():java.io.File]\l}"];
MethodNode -> Node_33;Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_52;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_52;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_44;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_34;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_52;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_58;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_58;
Node_56 -> Node_57;
Node_57 -> Node_34;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_62;
Node_60 -> Node_61;
Node_61 -> Node_34;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_65;
Node_65 -> Node_34;
}

