digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.appendText(Ljava\/io\/File;Ljava\/lang\/String;Ljava\/nio\/charset\/Charset;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$appendText' java.io.File)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"text\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('text' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"charset\" \l0x000c: INVOKE  (r4 I:java.lang.Object A[D('charset' java.nio.charset.Charset)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: INVOKE  (r0 I:byte[]) = \l  (r3 I:java.lang.String A[D('text' java.lang.String)])\l  (r4 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset)])\l type: VIRTUAL call: java.lang.String.getBytes(java.nio.charset.Charset):byte[] A[MD:(java.nio.charset.Charset):byte[] (c)] (LINE:142)\l0x0013: CONST_STR  (r1 I:java.lang.String) =  \"this as java.lang.String).getBytes(charset)\" \l0x0015: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0018: INVOKE  (r2 I:java.io.File A[D('$this$appendText' java.io.File)]), (r0 I:byte[]) type: STATIC call: kotlin.io.FilesKt.appendBytes(java.io.File, byte[]):void A[MD:(java.io.File, byte[]):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|RETURN\l|0x001b: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void kotlin.io.FilesKt__FileReadWriteKt.appendText((r2 I:java.io.File A[D('$this$appendText' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[D('text' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001b: r2 '$this$appendText' Ljava\/io\/File;\l  \-1 \-0x001b: r3 'text' Ljava\/lang\/String;\l  \-1 \-0x001b: r4 'charset' Ljava\/nio\/charset\/Charset;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

