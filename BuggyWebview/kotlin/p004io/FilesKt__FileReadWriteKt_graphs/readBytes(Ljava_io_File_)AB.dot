digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.readBytes(Ljava\/io\/File;)[B" {
Node_38 [shape=record,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r15, \"\<this\>\")\ljava.io.Closeable r0 = new java.io.FileInputStream(r15)\l}"];
Node_71 [shape=record,label="{71\:\ 0x000c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_41 [shape=record,label="{41\:\ 0x000c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|java.io.FileInputStream r1 = r0     \/\/ Catch: java.lang.Throwable \-\> Lb9\lr3 = 0\llong r4 = r15.length()     \/\/ Catch: java.lang.Throwable \-\> Lb9\l}"];
Node_42 [shape=record,label="{42\:\ 0x0015}"];
Node_43 [shape=record,label="{43\:\ 0x001e|if ((r4 \> 2147483647L ? 1 : (r4 == 2147483647L ? 0 : \-1)) \> 0) goto L29\l}"];
Node_44 [shape=record,label="{44\:\ 0x0022|int r4 = (int) r4\l}"];
Node_45 [shape=record,label="{45\:\ 0x0024|TRY_ENTER\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|byte[] r5 = new byte[r4]     \/\/ Catch: java.lang.Throwable \-\> Lb9\l}"];
Node_46 [shape=record,label="{46\:\ 0x0026|LOOP_START\lLOOP:0: B:46:0x0026\-\>B:49:0x002e\lPHI: r3 r4 \l  PHI: (r3v1 'offset' int) = (r3v0 'offset' int), (r3v2 'offset' int) binds: [B:45:0x0024, B:49:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 'remaining' int) = (r4v2 'remaining' int), (r4v4 'remaining' int) binds: [B:45:0x0024, B:49:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \<= 0) goto L28\l}"];
Node_47 [shape=record,label="{47\:\ 0x0028|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|int r6 = r1.read(r5, r3, r4)     \/\/ Catch: java.lang.Throwable \-\> Lb9\l}"];
Node_48 [shape=record,label="{48\:\ 0x002c|if (r6 \< 0) goto L12\l}"];
Node_49 [shape=record,label="{49\:\ 0x002e|LOOP_END\lLOOP:0: B:46:0x0026\-\>B:49:0x002e\l|int r4 = r4 \- r6\lint r3 = r3 + r6\l}"];
Node_75 [shape=record,label="{75\:\ 0x0031|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0031}"];
Node_51 [shape=record,label="{51\:\ 0x0034|if (r4 \<= 0) goto L19\l}"];
Node_52 [shape=record,label="{52\:\ 0x0036|TRY_ENTER\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|byte[] r8 = java.util.Arrays.copyOf(r5, r3)     \/\/ Catch: java.lang.Throwable \-\> Lb9\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r8, \"copyOf(this, newSize)\")     \/\/ Catch: java.lang.Throwable \-\> Lb9\lr5 = r8\l}"];
Node_60 [shape=record,label="{60\:\ 0x0079|PHI: r5 \l  PHI: (r5v5 'result' byte[]) = (r5v4 'result' byte[]), (r5v3 'result' byte[]), (r5v6 'result' byte[]) binds: [B:59:0x0078, B:55:0x0046, B:52:0x0036] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.p004io.Closeable.closeFinally(r0, null)\l}"];
Node_61 [shape=record,label="{61\:\ 0x007c|RETURN\l|return r5\l}"];
Node_39 [shape=record,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_53 [shape=record,label="{53\:\ 0x003f|TryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|int r8 = r1.read()     \/\/ Catch: java.lang.Throwable \-\> Lb9\l}"];
Node_54 [shape=record,label="{54\:\ 0x0044|if (r8 != (\-1)) goto L22\l}"];
Node_55 [shape=record,label="{55\:\ 0x0046}"];
Node_56 [shape=record,label="{56\:\ 0x0047|TryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|kotlin.io.ExposingBufferByteArrayOutputStream r9 = new kotlin.p004io.FileReadWrite(8193)     \/\/ Catch: java.lang.Throwable \-\> Lb9\lr9.write(r8)     \/\/ Catch: java.lang.Throwable \-\> Lb9\lkotlin.p004io.IOStreams.copyTo$default(r1, r9, 0, 2, null)     \/\/ Catch: java.lang.Throwable \-\> Lb9\lint r10 = r5.length + r9.size()     \/\/ Catch: java.lang.Throwable \-\> Lb9\l}"];
Node_57 [shape=record,label="{57\:\ 0x0062|if (r10 \< 0) goto L26\l}"];
Node_58 [shape=record,label="{58\:\ 0x0064|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|byte[] r11 = r9.getBuffer()     \/\/ Catch: java.lang.Throwable \-\> Lb9\lbyte[] r12 = java.util.Arrays.copyOf(r5, r10)     \/\/ Catch: java.lang.Throwable \-\> Lb9\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r12, \"copyOf(this, newSize)\")     \/\/ Catch: java.lang.Throwable \-\> Lb9\l}"];
Node_59 [shape=record,label="{59\:\ 0x0078|r5 = kotlin.collections.ArraysKt.copyInto(r11, r12, r5.length, 0, r9.size())     \/\/ Catch: java.lang.Throwable \-\> Lb9\l}"];
Node_62 [shape=record,label="{62\:\ 0x007d|TRY_ENTER\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|java.lang.StringBuilder r7 = new java.lang.StringBuilder()     \/\/ Catch: java.lang.Throwable \-\> Lb9\lr7.append(\"File \")     \/\/ Catch: java.lang.Throwable \-\> Lb9\lr7.append(r15)     \/\/ Catch: java.lang.Throwable \-\> Lb9\lr7.append(\" is too big to fit in memory.\")     \/\/ Catch: java.lang.Throwable \-\> Lb9\l}"];
Node_63 [shape=record,label="{63\:\ 0x0096|TryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|throw new java.lang.OutOfMemoryError(r7.toString())     \/\/ Catch: java.lang.Throwable \-\> Lb9\l}"];
Node_74 [shape=record,label="{74\:\ 0x0031|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x0097|TryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|java.lang.StringBuilder r5 = new java.lang.StringBuilder()     \/\/ Catch: java.lang.Throwable \-\> Lb9\lr5.append(\"File \")     \/\/ Catch: java.lang.Throwable \-\> Lb9\lr5.append(r15)     \/\/ Catch: java.lang.Throwable \-\> Lb9\lr5.append(\" is too big (\")     \/\/ Catch: java.lang.Throwable \-\> Lb9\lr5.append(r4)     \/\/ Catch: java.lang.Throwable \-\> Lb9\lr5.append(\" bytes) to fit in memory.\")     \/\/ Catch: java.lang.Throwable \-\> Lb9\l}"];
Node_65 [shape=record,label="{65\:\ 0x00b8|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|throw new java.lang.OutOfMemoryError(r5.toString())     \/\/ Catch: java.lang.Throwable \-\> Lb9\l}"];
Node_66 [shape=record,label="{66\:\ 0x00b9|ExcHandler: all \-\> 0x00b9\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_72 [shape=record,label="{72\:\ 0x00ba|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_67 [shape=record,label="{67\:\ 0x00ba|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x00bb, blocks: (B:67:0x00ba), top: B:72:0x00ba \}\lCatch: all \-\> 0x00bb\l|throw r1     \/\/ Catch: java.lang.Throwable \-\> Lbb\l}"];
Node_73 [shape=record,label="{73\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_68 [shape=record,label="{68\:\ 0x00bb|ExcHandler: all \-\> 0x00bb\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_69 [shape=record,label="{69\:\ 0x00bc|kotlin.p004io.Closeable.closeFinally(r0, r1)\l}"];
Node_70 [shape=record,label="{70\:\ 0x00bf|throw r2\l}"];
MethodNode[shape=record,label="{public static final byte[] kotlin.io.FilesKt__FileReadWriteKt.readBytes((r15v0 '$this$readBytes' java.io.File A[D('$this$readBytes' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:49:0x002e \-\> B:46:0x0026, CROSS_EDGE: B:55:0x0046 \-\> B:60:0x0079, CROSS_EDGE: B:59:0x0078 \-\> B:60:0x0079, CROSS_EDGE: B:63:0x0096 \-\> B:39:?, CROSS_EDGE: B:46:0x0026 \-\> B:50:0x0031, CROSS_EDGE: B:65:0x00b8 \-\> B:39:?, CROSS_EDGE: B:67:0x00ba \-\> B:39:?, CROSS_EDGE: B:70:0x00bf \-\> B:39:?, CROSS_EDGE: B:72:0x00ba \-\> B:68:0x00bb\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}, TryCatch #1 \{all \-\> 0x00bb, blocks: (B:67:0x00ba), top: B:72:0x00ba \}\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l DEBUG: \l \-\> Finally have unexpected throw blocks count: 2, expect 1\}\l}"];
MethodNode -> Node_38;Node_38 -> Node_40;
Node_40 -> Node_71;
Node_71 -> Node_41;
Node_71 -> Node_66;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_64;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_74;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_75;
Node_49 -> Node_46;
Node_75 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_39;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_60;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_62;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_62 -> Node_63;
Node_63 -> Node_39;
Node_74 -> Node_50;
Node_64 -> Node_65;
Node_65 -> Node_39;
Node_66 -> Node_72;
Node_72 -> Node_67;
Node_72 -> Node_68;
Node_67 -> Node_39;
Node_67 -> Node_73;
Node_73 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_39;
}

