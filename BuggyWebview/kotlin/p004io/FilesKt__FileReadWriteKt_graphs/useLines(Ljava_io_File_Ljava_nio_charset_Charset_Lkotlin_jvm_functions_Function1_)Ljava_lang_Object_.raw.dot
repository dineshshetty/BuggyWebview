digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.useLines(Ljava\/io\/File;Ljava\/nio\/charset\/Charset;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('$this$useLines' java.io.File)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"charset\" \l0x0007: INVOKE  (r8 I:java.lang.Object A[D('charset' java.nio.charset.Charset)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"block\" \l0x000c: INVOKE  (r9 I:java.lang.Object A[D('block' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: NEW_INSTANCE  (r1 I:java.io.InputStreamReader) =  java.io.InputStreamReader  (LINE:232)\l0x0012: NEW_INSTANCE  (r2 I:java.io.FileInputStream) =  java.io.FileInputStream \l0x0014: INVOKE  (r2 I:java.io.FileInputStream), (r7 I:java.io.File A[D('$this$useLines' java.io.File)]) type: DIRECT call: java.io.FileInputStream.\<init\>(java.io.File):void A[MD:(java.io.File):void throws java.io.FileNotFoundException (c)]\l0x0017: CHECK_CAST (r2 I:java.io.InputStream) = (java.io.InputStream) (r2 I:??[OBJECT, ARRAY]) \l0x0019: INVOKE  \l  (r1 I:java.io.InputStreamReader)\l  (r2 I:java.io.InputStream)\l  (r8 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset)])\l type: DIRECT call: java.io.InputStreamReader.\<init\>(java.io.InputStream, java.nio.charset.Charset):void A[MD:(java.io.InputStream, java.nio.charset.Charset):void (c)]\l0x001c: CHECK_CAST (r1 I:java.io.Reader) = (java.io.Reader) (r1 I:??[OBJECT, ARRAY]) \l0x001e: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY]) java.io.BufferedReader \l}"];
Node_22 [shape=record,label="{22\:\ 0x0020|0x0020: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0025 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0022|0x0022: CHECK_CAST (r1 I:java.io.BufferedReader) = (java.io.BufferedReader) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x002d|0x002d: CHECK_CAST (r1 I:java.io.Closeable) = (java.io.Closeable) (r1 I:??[OBJECT, ARRAY]) \l0x002f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0030: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0031|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_26 [shape=record,label="{26\:\ 0x0031|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0047, blocks: (B:26:0x0031), top: B:34:0x0031 \}\lCatch: all \-\> 0x0047\l|0x0031: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) A[TRY_ENTER]\l0x0032: CHECK_CAST (r4 I:java.io.BufferedReader) = (java.io.BufferedReader) (r4 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0047]\l0x0034: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:234)\l0x0035: INVOKE  (r6 I:kotlin.sequences.Sequence) = (r4 I:java.io.BufferedReader A[D('it' java.io.BufferedReader)]) type: STATIC call: kotlin.io.TextStreamsKt.lineSequence(java.io.BufferedReader):kotlin.sequences.Sequence A[Catch: all \-\> 0x0047, MD:(java.io.BufferedReader):kotlin.sequences.Sequence\<java.lang.String\> (m)] (LINE:232)\l0x0039: INVOKE  (r6 I:java.lang.Object) = (r9 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)]), (r6 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0047, MD:(P1):R (m), TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x003d|0x003d: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0040: INVOKE  (r1 I:java.io.Closeable), (r2 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l0x0043: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0046|RETURN\l|0x0046: RETURN  (r6 I:T) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x0047|ExcHandler: all \-\> 0x0047\l|0x0047: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0047]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0048|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_30 [shape=record,label="{30\:\ 0x0048|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x0049, blocks: (B:30:0x0048), top: B:36:0x0048 \}\lCatch: all \-\> 0x0049\l|0x0048: THROW  (r2 I:java.lang.Throwable) A[Catch: all \-\> 0x0049, TRY_ENTER, TRY_LEAVE]\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_31 [shape=record,label="{31\:\ 0x0049|ExcHandler: all \-\> 0x0049\l|0x0049: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0049]\l}"];
Node_32 [shape=record,label="{32\:\ 0x004a|0x004a: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x004d: INVOKE  (r1 I:java.io.Closeable), (r2 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l0x0050: INVOKE  (r3 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0053|0x0053: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0025|0x0025: NEW_INSTANCE  (r2 I:java.io.BufferedReader) =  java.io.BufferedReader \l0x0027: CONST  (r3 I:??[int, float, short, byte, char]) = (8192(0x2000, float:1.148E\-41) ??[int, float, short, byte, char]) \l0x0029: INVOKE  (r2 I:java.io.BufferedReader), (r1 I:java.io.Reader), (r3 I:int) type: DIRECT call: java.io.BufferedReader.\<init\>(java.io.Reader, int):void A[MD:(java.io.Reader, int):void (c)]\l0x002c: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final T kotlin.io.FilesKt__FileReadWriteKt.useLines((r7 I:java.io.File A[D('$this$useLines' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.jvm.functions.Function1\<? super kotlin.sequences.Sequence\<java.lang.String\>, ? extends T\> A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0048 \-\> B:20:?, CROSS_EDGE: B:33:0x0053 \-\> B:20:?, CROSS_EDGE: B:36:0x0048 \-\> B:31:0x0049, CROSS_EDGE: B:34:0x0031 \-\> B:29:0x0047, CROSS_EDGE: B:24:0x0025 \-\> B:25:0x002d\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0047, blocks: (B:26:0x0031), top: B:34:0x0031 \}, TryCatch #1 \{all \-\> 0x0049, blocks: (B:30:0x0048), top: B:36:0x0048 \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/io\/File;Ljava\/nio\/charset\/Charset;Lkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/sequences\/Sequence\<Ljava\/lang\/String;\>;+TT;\>;)TT;\lDebug Info:\l  0x0034\-0x003d: r4 'it' Ljava\/io\/BufferedReader;\l  0x0035\-0x003d: r5 '$i$a$\-use\-FilesKt__FileReadWriteKt$useLines$1' I\l  0x0010\-0x0048: r0 '$i$f$useLines' I\l  \-1 \-0x0048: r7 '$this$useLines' Ljava\/io\/File;\l  \-1 \-0x0048: r8 'charset' Ljava\/nio\/charset\/Charset;\l  \-1 \-0x0048: r9 'block' Lkotlin\/jvm\/functions\/Function1;\l  0x0049\-0x0053: r0 '$i$f$useLines' I\l  0x0049\-0x0053: r7 '$this$useLines' Ljava\/io\/File;\l  0x0049\-0x0053: r8 'charset' Ljava\/nio\/charset\/Charset;\l  0x0049\-0x0053: r9 'block' Lkotlin\/jvm\/functions\/Function1;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_34;
Node_34 -> Node_26;
Node_34 -> Node_29;
Node_26 -> Node_27;
Node_26 -> Node_35;
Node_27 -> Node_28;
Node_28 -> Node_20;
Node_35 -> Node_29;
Node_29 -> Node_36;
Node_36 -> Node_30;
Node_36 -> Node_31;
Node_30 -> Node_20;
Node_30 -> Node_37;
Node_37 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_20;
Node_24 -> Node_25;
}

