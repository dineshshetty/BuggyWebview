digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.forEachLine(Ljava\/io\/File;Ljava\/nio\/charset\/Charset;Lkotlin\/jvm\/functions\/Function1;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$forEachLine' java.io.File)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"charset\" \l0x0007: INVOKE  (r4 I:java.lang.Object A[D('charset' java.nio.charset.Charset)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"action\" \l0x000c: INVOKE  (r5 I:java.lang.Object A[D('action' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: NEW_INSTANCE  (r0 I:java.io.BufferedReader) =  java.io.BufferedReader  (LINE:190)\l0x0011: NEW_INSTANCE  (r1 I:java.io.InputStreamReader) =  java.io.InputStreamReader \l0x0013: NEW_INSTANCE  (r2 I:java.io.FileInputStream) =  java.io.FileInputStream \l0x0015: INVOKE  (r2 I:java.io.FileInputStream), (r3 I:java.io.File A[D('$this$forEachLine' java.io.File)]) type: DIRECT call: java.io.FileInputStream.\<init\>(java.io.File):void A[MD:(java.io.File):void throws java.io.FileNotFoundException (c)]\l0x0018: CHECK_CAST (r2 I:java.io.InputStream) = (java.io.InputStream) (r2 I:??[OBJECT, ARRAY]) \l0x001a: INVOKE  \l  (r1 I:java.io.InputStreamReader)\l  (r2 I:java.io.InputStream)\l  (r4 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset)])\l type: DIRECT call: java.io.InputStreamReader.\<init\>(java.io.InputStream, java.nio.charset.Charset):void A[MD:(java.io.InputStream, java.nio.charset.Charset):void (c)]\l0x001d: CHECK_CAST (r1 I:java.io.Reader) = (java.io.Reader) (r1 I:??[OBJECT, ARRAY]) \l0x001f: INVOKE  (r0 I:java.io.BufferedReader), (r1 I:java.io.Reader) type: DIRECT call: java.io.BufferedReader.\<init\>(java.io.Reader):void A[MD:(java.io.Reader):void (c)]\l0x0022: CHECK_CAST (r0 I:java.io.Reader) = (java.io.Reader) (r0 I:??[OBJECT, ARRAY]) \l0x0024: INVOKE  (r0 I:java.io.Reader), (r5 I:kotlin.jvm.functions.Function1 A[D('action' kotlin.jvm.functions.Function1)]) type: STATIC call: kotlin.io.TextStreamsKt.forEachLine(java.io.Reader, kotlin.jvm.functions.Function1):void A[MD:(java.io.Reader, kotlin.jvm.functions.Function1\<? super java.lang.String, kotlin.Unit\>):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|RETURN\l|0x0027: RETURN    (LINE:191)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void kotlin.io.FilesKt__FileReadWriteKt.forEachLine((r3 I:java.io.File A[D('$this$forEachLine' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function1\<? super java.lang.String, kotlin.Unit\> A[D('action' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0027: r3 '$this$forEachLine' Ljava\/io\/File;\l  \-1 \-0x0027: r4 'charset' Ljava\/nio\/charset\/Charset;\l  \-1 \-0x0027: r5 'action' Lkotlin\/jvm\/functions\/Function1;\lSIGNATURE: (Ljava\/io\/File;Ljava\/nio\/charset\/Charset;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/String;Lkotlin\/Unit;\>;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

