digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.bufferedReader$default(Ljava\/io\/File;Ljava\/nio\/charset\/Charset;IILjava\/lang\/Object;)Ljava\/io\/BufferedReader;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0002|if ((r3 & 1) == 0) goto L4\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|java.nio.charset.Charset r1 = kotlin.text.Charsets.UTF_8\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|PHI: r1 \l  PHI: (r1v1 'charset' java.nio.charset.Charset) = (r1v0 'charset' java.nio.charset.Charset), (r1v2 'charset' java.nio.charset.Charset) binds: [B:17:0x0002, B:18:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|if ((r3 & 2) == 0) goto L7\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|r2 = 8192\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|PHI: r2 \l  PHI: (r2v1 'bufferSize' int) = (r2v0 'bufferSize' int), (r2v2 'bufferSize' int) binds: [B:20:0x0008, B:21:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r0, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"charset\")\ljava.io.Reader r3 = new java.io.InputStreamReader(new java.io.FileInputStream(r0), r1)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|if ((r3 instanceof java.io.BufferedReader) == false) goto L12\l}"];
Node_24 [shape=record,label="{24\:\ 0x0028}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return (java.io.BufferedReader) r3\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x002b}"];
Node_26 [shape=record,label="{26\:\ 0x0031|RETURN\lORIG_RETURN\l|return new java.io.BufferedReader(r3, r2)\l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.io.BufferedReader kotlin.io.FilesKt__FileReadWriteKt.bufferedReader$default((r0v0 '$this$bufferedReader_u24default' java.io.File A[D('$this$bufferedReader_u24default' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 'charset' java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'bufferSize' int A[D('bufferSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:25:0x002b \-\> B:26:0x0031, CROSS_EDGE: B:20:0x0008 \-\> B:22:0x000c, CROSS_EDGE: B:17:0x0002 \-\> B:19:0x0006\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_27;
Node_27 -> Node_15;
Node_25 -> Node_26;
Node_26 -> Node_15;
}

