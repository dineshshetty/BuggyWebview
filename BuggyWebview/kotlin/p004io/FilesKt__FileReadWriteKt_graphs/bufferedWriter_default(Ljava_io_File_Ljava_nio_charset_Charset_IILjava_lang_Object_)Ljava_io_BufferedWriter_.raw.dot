digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.bufferedWriter$default(Ljava\/io\/File;Ljava\/nio\/charset\/Charset;IILjava\/lang\/Object;)Ljava\/io\/BufferedWriter;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: ARITH  (r4 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:46)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0006 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|0x0004: SGET  (r1 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset)]) =  kotlin.text.Charsets.UTF_8 java.nio.charset.Charset \l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|0x0006: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|0x0008: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x000c \l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|0x000a: CONST  (r2 I:??[int, float, short, byte, char] A[D('bufferSize' int)]) = (8192(0x2000, float:1.148E\-41) ??[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: CONST_STR  (r3 I:java.lang.String) =  \"\<this\>\" \l0x000e: INVOKE  (r0 I:java.lang.Object A[D('$this$bufferedWriter_u24default' java.io.File)]), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0011: CONST_STR  (r3 I:java.lang.String) =  \"charset\" \l0x0013: INVOKE  (r1 I:java.lang.Object A[D('charset' java.nio.charset.Charset)]), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0016: NEW_INSTANCE  (r3 I:java.io.OutputStreamWriter) =  java.io.OutputStreamWriter  (LINE:47)\l0x0018: NEW_INSTANCE  (r4 I:java.io.FileOutputStream) =  java.io.FileOutputStream \l0x001a: INVOKE  (r4 I:java.io.FileOutputStream), (r0 I:java.io.File A[D('$this$bufferedWriter_u24default' java.io.File)]) type: DIRECT call: java.io.FileOutputStream.\<init\>(java.io.File):void A[MD:(java.io.File):void throws java.io.FileNotFoundException (c)]\l0x001d: CHECK_CAST (r4 I:java.io.OutputStream) = (java.io.OutputStream) (r4 I:??[OBJECT, ARRAY]) \l0x001f: INVOKE  \l  (r3 I:java.io.OutputStreamWriter)\l  (r4 I:java.io.OutputStream)\l  (r1 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset)])\l type: DIRECT call: java.io.OutputStreamWriter.\<init\>(java.io.OutputStream, java.nio.charset.Charset):void A[MD:(java.io.OutputStream, java.nio.charset.Charset):void (c)]\l0x0022: CHECK_CAST (r3 I:java.io.Writer) = (java.io.Writer) (r3 I:??[OBJECT, ARRAY]) \l0x0024: INSTANCE_OF  (r4 I:boolean) = (r3 I:??[OBJECT, ARRAY]) java.io.BufferedWriter \l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|0x0026: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x002b \l}"];
Node_24 [shape=record,label="{24\:\ 0x0028|0x0028: CHECK_CAST (r3 I:java.io.BufferedWriter) = (java.io.BufferedWriter) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0031: RETURN  (r3 I:java.io.BufferedWriter) A[SYNTHETIC]\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x002b|0x002b: NEW_INSTANCE  (r4 I:java.io.BufferedWriter) =  java.io.BufferedWriter \l0x002d: INVOKE  (r4 I:java.io.BufferedWriter), (r3 I:java.io.Writer), (r2 I:int A[D('bufferSize' int)]) type: DIRECT call: java.io.BufferedWriter.\<init\>(java.io.Writer, int):void A[MD:(java.io.Writer, int):void (c)]\l0x0030: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0031|RETURN\lORIG_RETURN\l|0x0031: RETURN  (r3 I:java.io.BufferedWriter) \l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.io.BufferedWriter kotlin.io.FilesKt__FileReadWriteKt.bufferedWriter$default((r0 I:java.io.File A[D('$this$bufferedWriter_u24default' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('bufferSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:25:0x002b \-\> B:26:0x0031, CROSS_EDGE: B:20:0x0008 \-\> B:22:0x000c, CROSS_EDGE: B:17:0x0002 \-\> B:19:0x0006\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0031: r0 '$this$bufferedWriter_u24default' Ljava\/io\/File;\l  \-1 \-0x0031: r1 'charset' Ljava\/nio\/charset\/Charset;\l  \-1 \-0x0031: r2 'bufferSize' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_27;
Node_27 -> Node_15;
Node_25 -> Node_26;
Node_26 -> Node_15;
}

