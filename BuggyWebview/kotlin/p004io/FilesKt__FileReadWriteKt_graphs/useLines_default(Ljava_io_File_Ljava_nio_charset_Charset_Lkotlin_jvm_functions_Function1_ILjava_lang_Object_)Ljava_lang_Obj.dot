digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.useLines$default(Ljava\/io\/File;Ljava\/nio\/charset\/Charset;Lkotlin\/jvm\/functions\/Function1;ILjava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|r11 = 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0002|if ((r10 & 1) == 0) goto L4\l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|java.nio.charset.Charset r8 = kotlin.text.Charsets.UTF_8\l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|PHI: r8 \l  PHI: (r8v1 'charset' java.nio.charset.Charset) = (r8v0 'charset' java.nio.charset.Charset), (r8v2 'charset' java.nio.charset.Charset) binds: [B:25:0x0002, B:26:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|r10 = r8\ljava.io.Reader r3 = new java.io.InputStreamReader(new java.io.FileInputStream(r7), r10)\l}"];
Node_28 [shape=record,label="{28\:\ 0x001b|if ((r3 instanceof java.io.BufferedReader) == false) goto L21\l}"];
Node_29 [shape=record,label="{29\:\ 0x001d|java.io.BufferedReader r3 = (java.io.BufferedReader) r3\l}"];
Node_31 [shape=record,label="{31\:\ 0x0026|PHI: r3 \l  PHI: (r3v3 java.io.BufferedReader) = (r3v2 java.io.BufferedReader), (r3v5 java.io.BufferedReader) binds: [B:30:0x0020, B:29:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|java.io.Closeable r3 = r3\l}"];
Node_42 [shape=record,label="{42\:\ 0x0029|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_32 [shape=record,label="{32\:\ 0x0029|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x003f, blocks: (B:32:0x0029), top: B:42:0x0029 \}\lCatch: all \-\> 0x003f\l|java.io.BufferedReader r4 = r3     \/\/ Catch: java.lang.Throwable \-\> L3f\ljava.lang.Object r6 = r9.invoke(kotlin.p004io.TextStreamsKt.lineSequence(r4))     \/\/ Catch: java.lang.Throwable \-\> L3f\l}"];
Node_33 [shape=record,label="{33\:\ 0x0035|kotlin.jvm.internal.InlineMarker.finallyStart(1)\lkotlin.p004io.Closeable.closeFinally(r3, null)\lkotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_34 [shape=record,label="{34\:\ 0x003e|RETURN\l|return r6\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x003f|ExcHandler: all \-\> 0x003f\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_40 [shape=record,label="{40\:\ 0x0040|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_36 [shape=record,label="{36\:\ 0x0040|TRY_ENTER\lTRY_LEAVE\lDONT_GENERATE\lFINALLY_INSNS\lTryCatch #0 \{all \-\> 0x0041, blocks: (B:36:0x0040), top: B:40:0x0040 \}\lCatch: all \-\> 0x0041\l|throw r2     \/\/ Catch: java.lang.Throwable \-\> L41\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_37 [shape=record,label="{37\:\ 0x0041|DONT_GENERATE\lFINALLY_INSNS\lExcHandler: all \-\> 0x0041\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_38 [shape=record,label="{38\:\ 0x0042|DONT_GENERATE\lFINALLY_INSNS\l|kotlin.jvm.internal.InlineMarker.finallyStart(r11)\lkotlin.p004io.Closeable.closeFinally(r3, r2)\lkotlin.jvm.internal.InlineMarker.finallyEnd(r11)\l}"];
Node_39 [shape=record,label="{39\:\ 0x004b|DONT_GENERATE\lFINALLY_INSNS\l|throw r4\l}"];
Node_30 [shape=record,label="{30\:\ 0x0020|r3 = new java.io.BufferedReader(r3, 8192)\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ java.lang.Object kotlin.io.FilesKt__FileReadWriteKt.useLines$default((r7v0 '$this$useLines_u24default' java.io.File A[D('$this$useLines_u24default' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'charset' java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'block' kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:36:0x0040 \-\> B:23:?, CROSS_EDGE: B:39:0x004b \-\> B:23:?, CROSS_EDGE: B:40:0x0040 \-\> B:37:0x0041, CROSS_EDGE: B:42:0x0029 \-\> B:35:0x003f, CROSS_EDGE: B:30:0x0020 \-\> B:31:0x0026, CROSS_EDGE: B:25:0x0002 \-\> B:27:0x0006\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0041, blocks: (B:36:0x0040), top: B:40:0x0040 \}, TryCatch #1 \{all \-\> 0x003f, blocks: (B:32:0x0029), top: B:42:0x0029 \}\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l DEBUG: \l \-\> Finally have unexpected throw blocks count: 2, expect 1\}\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_42;
Node_42 -> Node_32;
Node_42 -> Node_35;
Node_32 -> Node_33;
Node_32 -> Node_43;
Node_33 -> Node_34;
Node_34 -> Node_23;
Node_43 -> Node_35;
Node_35 -> Node_40;
Node_40 -> Node_36;
Node_40 -> Node_37;
Node_36 -> Node_23;
Node_36 -> Node_41;
Node_41 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_23;
Node_30 -> Node_31;
}

