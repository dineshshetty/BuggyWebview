digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.useLines$default(Ljava\/io\/File;Ljava\/nio\/charset\/Charset;Lkotlin\/jvm\/functions\/Function1;ILjava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:231)\l0x0001: ARITH  (r10 I:??[int, boolean]) = (r10 I:??[int, boolean, short, byte, char]) & (r11 I:??[int, boolean, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0002|0x0002: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0006 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|0x0004: SGET  (r8 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset)]) =  kotlin.text.Charsets.UTF_8 java.nio.charset.Charset \l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|0x0006: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('charset' java.nio.charset.Charset)]) \l0x0007: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$useLines_u24default' java.io.File)]) \l0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (8192(0x2000, float:1.148E\-41) ??[int, float, short, byte, char])  (LINE:235)\l0x000b: NEW_INSTANCE  (r3 I:java.io.InputStreamReader) =  java.io.InputStreamReader \l0x000d: NEW_INSTANCE  (r4 I:java.io.FileInputStream) =  java.io.FileInputStream \l0x000f: INVOKE  (r4 I:java.io.FileInputStream), (r0 I:java.io.File A[D('$this$useLines$iv' java.io.File)]) type: DIRECT call: java.io.FileInputStream.\<init\>(java.io.File):void A[MD:(java.io.File):void throws java.io.FileNotFoundException (c)]\l0x0012: CHECK_CAST (r4 I:java.io.InputStream) = (java.io.InputStream) (r4 I:??[OBJECT, ARRAY]) \l0x0014: INVOKE  \l  (r3 I:java.io.InputStreamReader)\l  (r4 I:java.io.InputStream)\l  (r10 I:java.nio.charset.Charset A[D('charset$iv' java.nio.charset.Charset)])\l type: DIRECT call: java.io.InputStreamReader.\<init\>(java.io.InputStream, java.nio.charset.Charset):void A[MD:(java.io.InputStream, java.nio.charset.Charset):void (c)]\l0x0017: CHECK_CAST (r3 I:java.io.Reader) = (java.io.Reader) (r3 I:??[OBJECT, ARRAY]) \l0x0019: INSTANCE_OF  (r4 I:boolean) = (r3 I:??[OBJECT, ARRAY]) java.io.BufferedReader \l}"];
Node_28 [shape=record,label="{28\:\ 0x001b|0x001b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0020 \l}"];
Node_29 [shape=record,label="{29\:\ 0x001d|0x001d: CHECK_CAST (r3 I:java.io.BufferedReader) = (java.io.BufferedReader) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0026|0x0026: CHECK_CAST (r3 I:java.io.Closeable) = (java.io.Closeable) (r3 I:??[OBJECT, ARRAY]) \l0x0028: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0029|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_32 [shape=record,label="{32\:\ 0x0029|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x003f, blocks: (B:32:0x0029), top: B:42:0x0029 \}\lCatch: all \-\> 0x003f\l|0x0029: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) A[TRY_ENTER]\l0x002a: CHECK_CAST (r4 I:java.io.BufferedReader) = (java.io.BufferedReader) (r4 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x003f]\l0x002c: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:236)\l0x002d: INVOKE  (r6 I:kotlin.sequences.Sequence) = (r4 I:java.io.BufferedReader A[D('it$iv' java.io.BufferedReader)]) type: STATIC call: kotlin.io.TextStreamsKt.lineSequence(java.io.BufferedReader):kotlin.sequences.Sequence A[Catch: all \-\> 0x003f, MD:(java.io.BufferedReader):kotlin.sequences.Sequence\<java.lang.String\> (m)] (LINE:235)\l0x0031: INVOKE  (r6 I:java.lang.Object) = (r9 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)]), (r6 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x003f, MD:(P1):R (m), TRY_LEAVE]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0035|0x0035: INVOKE  (r11 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0038: INVOKE  (r3 I:java.io.Closeable), (r2 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l0x003b: INVOKE  (r11 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x003e|RETURN\l|0x003e: RETURN  (r6 I:java.lang.Object)  (LINE:231)\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x003f|ExcHandler: all \-\> 0x003f\l|0x003f: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x003f] (LINE:235)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0040|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_36 [shape=record,label="{36\:\ 0x0040|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0041, blocks: (B:36:0x0040), top: B:40:0x0040 \}\lCatch: all \-\> 0x0041\l|0x0040: THROW  (r2 I:java.lang.Throwable) A[Catch: all \-\> 0x0041, TRY_ENTER, TRY_LEAVE]\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_37 [shape=record,label="{37\:\ 0x0041|ExcHandler: all \-\> 0x0041\l|0x0041: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0041]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0042|0x0042: INVOKE  (r11 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0045: INVOKE  (r3 I:java.io.Closeable), (r2 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l0x0048: INVOKE  (r11 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x004b|0x004b: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0020|0x0020: NEW_INSTANCE  (r4 I:java.io.BufferedReader) =  java.io.BufferedReader \l0x0022: INVOKE  (r4 I:java.io.BufferedReader), (r3 I:java.io.Reader), (r2 I:int) type: DIRECT call: java.io.BufferedReader.\<init\>(java.io.Reader, int):void A[MD:(java.io.Reader, int):void (c)]\l0x0025: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ java.lang.Object kotlin.io.FilesKt__FileReadWriteKt.useLines$default((r7 I:java.io.File A[D('$this$useLines_u24default' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:36:0x0040 \-\> B:23:?, CROSS_EDGE: B:39:0x004b \-\> B:23:?, CROSS_EDGE: B:40:0x0040 \-\> B:37:0x0041, CROSS_EDGE: B:42:0x0029 \-\> B:35:0x003f, CROSS_EDGE: B:30:0x0020 \-\> B:31:0x0026, CROSS_EDGE: B:25:0x0002 \-\> B:27:0x0006\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002c\-0x0035: r4 'it$iv' Ljava\/io\/BufferedReader;\l  0x002d\-0x0035: r5 '$i$a$\-use\-FilesKt__FileReadWriteKt$useLines$1$iv' I\l  0x0008\-0x003e: r0 '$this$useLines$iv' Ljava\/io\/File;\l  0x0009\-0x003e: r1 '$i$f$useLines' I\l  0x0007\-0x003e: r10 'charset$iv' Ljava\/nio\/charset\/Charset;\l  0x003f\-0x0040: r0 '$this$useLines$iv' Ljava\/io\/File;\l  0x003f\-0x0040: r1 '$i$f$useLines' I\l  \-1 \-0x0040: r7 '$this$useLines_u24default' Ljava\/io\/File;\l  \-1 \-0x0040: r8 'charset' Ljava\/nio\/charset\/Charset;\l  \-1 \-0x0040: r9 'block' Lkotlin\/jvm\/functions\/Function1;\l  0x003f\-0x0040: r10 'charset$iv' Ljava\/nio\/charset\/Charset;\l  0x0041\-0x004b: r0 '$this$useLines$iv' Ljava\/io\/File;\l  0x0041\-0x004b: r1 '$i$f$useLines' I\l  0x0041\-0x004b: r7 '$this$useLines_u24default' Ljava\/io\/File;\l  0x0041\-0x004b: r8 'charset' Ljava\/nio\/charset\/Charset;\l  0x0041\-0x004b: r9 'block' Lkotlin\/jvm\/functions\/Function1;\l  0x0041\-0x004b: r10 'charset$iv' Ljava\/nio\/charset\/Charset;\lTryCatch #0 \{all \-\> 0x0041, blocks: (B:36:0x0040), top: B:40:0x0040 \}, TryCatch #1 \{all \-\> 0x003f, blocks: (B:32:0x0029), top: B:42:0x0029 \}\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_42;
Node_42 -> Node_32;
Node_42 -> Node_35;
Node_32 -> Node_33;
Node_32 -> Node_43;
Node_33 -> Node_34;
Node_34 -> Node_23;
Node_43 -> Node_35;
Node_35 -> Node_40;
Node_40 -> Node_36;
Node_40 -> Node_37;
Node_36 -> Node_23;
Node_36 -> Node_41;
Node_41 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_23;
Node_30 -> Node_31;
}

