digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.printWriter(Ljava\/io\/File;Ljava\/nio\/charset\/Charset;)Ljava\/io\/PrintWriter;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"charset\")\ljava.io.Writer r1 = new java.io.OutputStreamWriter(new java.io.FileOutputStream(r4), r5)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|if ((r1 instanceof java.io.BufferedWriter) == false) goto L7\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|java.io.BufferedWriter r1 = (java.io.BufferedWriter) r1\l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|PHI: r1 \l  PHI: (r1v3 java.io.BufferedWriter) = (r1v2 java.io.BufferedWriter), (r1v5 java.io.BufferedWriter) binds: [B:13:0x0021, B:12:0x001e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|RETURN\l|return new java.io.PrintWriter(r1)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|r1 = new java.io.BufferedWriter(r1, 8192)\l}"];
MethodNode[shape=record,label="{private static final java.io.PrintWriter kotlin.io.FilesKt__FileReadWriteKt.printWriter((r4v0 '$this$printWriter' java.io.File A[D('$this$printWriter' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'charset' java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0021 \-\> B:14:0x0029\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

