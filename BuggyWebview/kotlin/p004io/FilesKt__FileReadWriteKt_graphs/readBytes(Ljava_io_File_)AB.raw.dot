digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.readBytes(Ljava\/io\/File;)[B" {
Node_38 [shape=record,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r15 I:java.lang.Object A[D('$this$readBytes' java.io.File)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: NEW_INSTANCE  (r0 I:java.io.FileInputStream) =  java.io.FileInputStream \l0x0007: INVOKE  (r0 I:java.io.FileInputStream), (r15 I:java.io.File A[D('$this$readBytes' java.io.File)]) type: DIRECT call: java.io.FileInputStream.\<init\>(java.io.File):void A[MD:(java.io.File):void throws java.io.FileNotFoundException (c)] (LINE:63)\l0x000a: CHECK_CAST (r0 I:java.io.Closeable) = (java.io.Closeable) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_71 [shape=record,label="{71\:\ 0x000c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_41 [shape=record,label="{41\:\ 0x000c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|0x000c: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) A[TRY_ENTER]\l0x000d: CHECK_CAST (r1 I:java.io.FileInputStream) = (java.io.FileInputStream) (r1 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x00b9]\l0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:64)\l0x0011: INVOKE  (r4 I:long) = (r15 I:java.io.File A[D('$this$readBytes' java.io.File)]) type: VIRTUAL call: java.io.File.length():long A[Catch: all \-\> 0x00b9, MD:():long (c), TRY_LEAVE] (LINE:65)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0015|0x0015: MOVE  (r6 I:??[long, double]) = (r4 I:??[long, double]) \l0x0016: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: CONST  (r9 I:??[long, double]) = (2147483647(0x7fffffff, double:1.060997895E\-314) ??[long, double])  (LINE:66)\l0x001a: CONST_STR  (r11 I:java.lang.String) =  \"File \" \l0x001c: CMP_L  (r12 I:int) = (r6 I:long A[D('length' long)]), (r9 I:long) \l}"];
Node_43 [shape=record,label="{43\:\ 0x001e|0x001e: IF  (r12 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:64:0x0097 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0022|0x0022: CAST (r5 I:int) = (int) (r4 I:long)  (LINE:67)\l0x0023: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:65)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0024|TRY_ENTER\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|0x0024: NEW_ARRAY  (r5 I:byte[]) = (r4 I:int A[D('remaining' int), IMMUTABLE_TYPE]) type: byte[] A[Catch: all \-\> 0x00b9, TRY_ENTER] (LINE:68)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0026|LOOP_START\lLOOP:0: B:46:0x0026\-\>B:49:0x002e\l|0x0026: IF  (r4 I:??[int, byte, short, char] A[D('remaining' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:74:0x0031  (LINE:69)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0028|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|0x0028: INVOKE  (r6 I:int) = \l  (r1 I:java.io.FileInputStream A[D('input' java.io.FileInputStream)])\l  (r5 I:byte[] A[D('result' byte[])])\l  (r3 I:int A[D('offset' int)])\l  (r4 I:int A[D('remaining' int)])\l type: VIRTUAL call: java.io.FileInputStream.read(byte[], int, int):int A[Catch: all \-\> 0x00b9, MD:(byte[], int, int):int throws java.io.IOException (c), TRY_LEAVE] (LINE:70)\l}"];
Node_48 [shape=record,label="{48\:\ 0x002c|0x002c: IF  (r6 I:??[int, byte, short, char] A[D('read' int)]) \< (0 ??[int, byte, short, char])  \-\> B:75:0x0031  (LINE:71)\l}"];
Node_49 [shape=record,label="{49\:\ 0x002e|LOOP_END\lLOOP:0: B:46:0x0026\-\>B:49:0x002e\l|0x002e: ARITH  (r4 I:int) = (r4 I:int A[D('remaining' int)]) \- (r6 I:int A[D('read' int)])  (LINE:72)\l0x002f: ARITH  (r3 I:int) = (r3 I:int A[D('offset' int)]) + (r6 I:int A[D('read' int)])  (LINE:73)\l}"];
Node_75 [shape=record,label="{75\:\ 0x0031|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0031|0x0031: CONST_STR  (r6 I:java.lang.String) =  \"copyOf(this, newSize)\"  (LINE:75)\l0x0033: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0034|0x0034: IF  (r4 I:??[int, byte, short, char] A[D('remaining' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:53:0x003f \l}"];
Node_52 [shape=record,label="{52\:\ 0x0036|TRY_ENTER\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|0x0036: INVOKE  (r8 I:byte[]) = (r5 I:byte[] A[D('result' byte[])]), (r3 I:int A[D('offset' int)]) type: STATIC call: java.util.Arrays.copyOf(byte[], int):byte[] A[Catch: all \-\> 0x00b9, MD:(byte[], int):byte[] (c), TRY_ENTER]\l0x003a: INVOKE  (r8 I:java.lang.Object), (r6 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[Catch: all \-\> 0x00b9, MD:(java.lang.Object, java.lang.String):void (m)]\l0x003d: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('result' byte[])]) = (r8 I:??[OBJECT, ARRAY]) \l0x003e: GOTO  \-\> 0x0079 \l}"];
Node_60 [shape=record,label="{60\:\ 0x0079|0x0079: INVOKE  (r0 I:java.io.Closeable), (r7 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)] (LINE:63)\l}"];
Node_61 [shape=record,label="{61\:\ 0x007c|RETURN\l|0x007c: RETURN  (r5 I:byte[])  (LINE:96)\l}"];
Node_39 [shape=record,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_53 [shape=record,label="{53\:\ 0x003f|TryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|0x003f: INVOKE  (r8 I:int) = (r1 I:java.io.FileInputStream A[D('input' java.io.FileInputStream)]) type: VIRTUAL call: java.io.FileInputStream.read():int A[Catch: all \-\> 0x00b9, MD:():int throws java.io.IOException (c)] (LINE:77)\l0x0043: CONST  (r9 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:78)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0044|0x0044: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('extraByte' int)]) != (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0047 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0046|0x0046: GOTO  \-\> 0x0079 \l}"];
Node_56 [shape=record,label="{56\:\ 0x0047|TryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|0x0047: NEW_INSTANCE  (r9 I:kotlin.io.ExposingBufferByteArrayOutputStream) =  kotlin.io.ExposingBufferByteArrayOutputStream A[Catch: all \-\> 0x00b9] (LINE:84)\l0x0049: CONST  (r10 I:??[int, float, short, byte, char]) = (8193(0x2001, float:1.1481E\-41) ??[int, float, short, byte, char]) \l0x004b: INVOKE  (r9 I:kotlin.io.ExposingBufferByteArrayOutputStream), (r10 I:int) type: DIRECT call: kotlin.io.ExposingBufferByteArrayOutputStream.\<init\>(int):void A[Catch: all \-\> 0x00b9, MD:(int):void (m)]\l0x004e: INVOKE  \l  (r9 I:kotlin.io.ExposingBufferByteArrayOutputStream A[D('extra' kotlin.io.ExposingBufferByteArrayOutputStream)])\l  (r8 I:int A[D('extraByte' int)])\l type: VIRTUAL call: kotlin.io.ExposingBufferByteArrayOutputStream.write(int):void A[Catch: all \-\> 0x00b9, MD:(int):void (c)] (LINE:85)\l0x0051: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('input' java.io.FileInputStream)])  (LINE:86)\l0x0052: CHECK_CAST (r10 I:java.io.InputStream) = (java.io.InputStream) (r10 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x00b9]\l0x0054: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('extra' kotlin.io.ExposingBufferByteArrayOutputStream)]) \l0x0055: CHECK_CAST (r12 I:java.io.OutputStream) = (java.io.OutputStream) (r12 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x00b9]\l0x0057: CONST  (r13 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0058: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0059: INVOKE  (r10 I:java.io.InputStream), (r12 I:java.io.OutputStream), (r14 I:int), (r13 I:int), (r7 I:java.lang.Object) type: STATIC call: kotlin.io.ByteStreamsKt.copyTo$default(java.io.InputStream, java.io.OutputStream, int, int, java.lang.Object):long A[Catch: all \-\> 0x00b9, MD:(java.io.InputStream, java.io.OutputStream, int, int, java.lang.Object):long (m)]\l0x005c: ARRAY_LENGTH  (r10 I:int) = (r5 I:??[] A[D('result' byte[])]) A[Catch: all \-\> 0x00b9] (LINE:88)\l0x005d: INVOKE  (r12 I:int) = (r9 I:kotlin.io.ExposingBufferByteArrayOutputStream A[D('extra' kotlin.io.ExposingBufferByteArrayOutputStream)]) type: VIRTUAL call: kotlin.io.ExposingBufferByteArrayOutputStream.size():int A[Catch: all \-\> 0x00b9, MD:():int (c)]\l0x0061: ARITH  (r10 I:int) = (r10 I:int) + (r12 I:int) A[Catch: all \-\> 0x00b9]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0062|0x0062: IF  (r10 I:??[int, byte, short, char] A[D('resultingSize' int)]) \< (0 ??[int, byte, short, char])  \-\> B:62:0x007d  (LINE:89)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0064|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|0x0064: INVOKE  (r11 I:byte[]) = (r9 I:kotlin.io.ExposingBufferByteArrayOutputStream A[D('extra' kotlin.io.ExposingBufferByteArrayOutputStream)]) type: VIRTUAL call: kotlin.io.ExposingBufferByteArrayOutputStream.getBuffer():byte[] A[Catch: all \-\> 0x00b9, MD:():byte[] (m)] (LINE:91)\l0x0068: INVOKE  (r12 I:byte[]) = (r5 I:byte[] A[D('result' byte[])]), (r10 I:int A[D('resultingSize' int)]) type: STATIC call: java.util.Arrays.copyOf(byte[], int):byte[] A[Catch: all \-\> 0x00b9, MD:(byte[], int):byte[] (c)] (LINE:92)\l0x006c: INVOKE  (r12 I:java.lang.Object), (r6 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[Catch: all \-\> 0x00b9, MD:(java.lang.Object, java.lang.String):void (m)]\l0x006f: ARRAY_LENGTH  (r6 I:int) = (r5 I:??[] A[D('result' byte[])]) A[Catch: all \-\> 0x00b9] (LINE:93)\l0x0070: INVOKE  (r13 I:int) = (r9 I:kotlin.io.ExposingBufferByteArrayOutputStream A[D('extra' kotlin.io.ExposingBufferByteArrayOutputStream)]) type: VIRTUAL call: kotlin.io.ExposingBufferByteArrayOutputStream.size():int A[Catch: all \-\> 0x00b9, MD:():int (c)] (LINE:94)\l0x0074: INVOKE  (r6 I:byte[]) = (r11 I:byte[]), (r12 I:byte[]), (r6 I:int), (r14 I:int), (r13 I:int) type: STATIC call: kotlin.collections.ArraysKt.copyInto(byte[], byte[], int, int, int):byte[] A[Catch: all \-\> 0x00b9, MD:(byte[], byte[], int, int, int):byte[] (m), TRY_LEAVE] (LINE:91)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0078|0x0078: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('result' byte[])]) = (r6 I:??[OBJECT, ARRAY]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x007d|TRY_ENTER\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|0x007d: NEW_INSTANCE  (r6 I:java.lang.OutOfMemoryError) =  java.lang.OutOfMemoryError A[Catch: all \-\> 0x00b9, TRY_ENTER] (LINE:89)\l0x007f: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch: all \-\> 0x00b9]\l0x0081: INVOKE  (r7 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[Catch: all \-\> 0x00b9, MD:():void (c)]\l0x0084: INVOKE  (r7 I:java.lang.StringBuilder), (r11 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x00b9, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0087: INVOKE  (r7 I:java.lang.StringBuilder), (r15 I:java.lang.Object A[D('$this$readBytes' java.io.File)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[Catch: all \-\> 0x00b9, MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x008a: CONST_STR  (r11 I:java.lang.String) =  \" is too big to fit in memory.\" \l0x008c: INVOKE  (r7 I:java.lang.StringBuilder), (r11 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x00b9, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x008f: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[Catch: all \-\> 0x00b9, MD:():java.lang.String (c)]\l0x0093: INVOKE  (r6 I:java.lang.OutOfMemoryError), (r7 I:java.lang.String) type: DIRECT call: java.lang.OutOfMemoryError.\<init\>(java.lang.String):void A[Catch: all \-\> 0x00b9, MD:(java.lang.String):void (c)]\l}"];
Node_63 [shape=record,label="{63\:\ 0x0096|TryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|0x0096: THROW  (r6 I:java.lang.Throwable) A[Catch: all \-\> 0x00b9]\l}"];
Node_74 [shape=record,label="{74\:\ 0x0031|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x0097|TryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|0x0097: NEW_INSTANCE  (r4 I:java.lang.OutOfMemoryError A[D('remaining' int)]) =  java.lang.OutOfMemoryError A[Catch: all \-\> 0x00b9] (LINE:66)\l0x0099: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch: all \-\> 0x00b9]\l0x009b: INVOKE  (r5 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[Catch: all \-\> 0x00b9, MD:():void (c)]\l0x009e: INVOKE  (r5 I:java.lang.StringBuilder), (r11 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x00b9, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00a1: INVOKE  (r5 I:java.lang.StringBuilder), (r15 I:java.lang.Object A[D('$this$readBytes' java.io.File)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[Catch: all \-\> 0x00b9, MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x00a4: CONST_STR  (r9 I:java.lang.String) =  \" is too big (\" \l0x00a6: INVOKE  (r5 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x00b9, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00a9: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:long A[D('length' long)]) type: VIRTUAL call: java.lang.StringBuilder.append(long):java.lang.StringBuilder A[Catch: all \-\> 0x00b9, MD:(long):java.lang.StringBuilder (c)]\l0x00ac: CONST_STR  (r9 I:java.lang.String) =  \" bytes) to fit in memory.\" \l0x00ae: INVOKE  (r5 I:java.lang.StringBuilder), (r9 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x00b9, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00b1: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[Catch: all \-\> 0x00b9, MD:():java.lang.String (c)]\l0x00b5: INVOKE  (r4 I:java.lang.OutOfMemoryError), (r5 I:java.lang.String) type: DIRECT call: java.lang.OutOfMemoryError.\<init\>(java.lang.String):void A[Catch: all \-\> 0x00b9, MD:(java.lang.String):void (c)]\l}"];
Node_65 [shape=record,label="{65\:\ 0x00b8|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}\lCatch: all \-\> 0x00b9\l|0x00b8: THROW  (r4 I:java.lang.Throwable) A[Catch: all \-\> 0x00b9, TRY_LEAVE]\l}"];
Node_66 [shape=record,label="{66\:\ 0x00b9|ExcHandler: all \-\> 0x00b9\l|0x00b9: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x00b9] (LINE:63)\l}"];
Node_72 [shape=record,label="{72\:\ 0x00ba|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_67 [shape=record,label="{67\:\ 0x00ba|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x00bb, blocks: (B:67:0x00ba), top: B:72:0x00ba \}\lCatch: all \-\> 0x00bb\l|0x00ba: THROW  (r1 I:java.lang.Throwable) A[Catch: all \-\> 0x00bb, TRY_ENTER, TRY_LEAVE]\l}"];
Node_73 [shape=record,label="{73\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_68 [shape=record,label="{68\:\ 0x00bb|ExcHandler: all \-\> 0x00bb\l|0x00bb: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x00bb]\l}"];
Node_69 [shape=record,label="{69\:\ 0x00bc|0x00bc: INVOKE  (r0 I:java.io.Closeable), (r1 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l}"];
Node_70 [shape=record,label="{70\:\ 0x00bf|0x00bf: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final byte[] kotlin.io.FilesKt__FileReadWriteKt.readBytes((r15 I:java.io.File A[D('$this$readBytes' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:49:0x002e \-\> B:46:0x0026, CROSS_EDGE: B:55:0x0046 \-\> B:60:0x0079, CROSS_EDGE: B:59:0x0078 \-\> B:60:0x0079, CROSS_EDGE: B:63:0x0096 \-\> B:39:?, CROSS_EDGE: B:46:0x0026 \-\> B:50:0x0031, CROSS_EDGE: B:65:0x00b8 \-\> B:39:?, CROSS_EDGE: B:67:0x00ba \-\> B:39:?, CROSS_EDGE: B:70:0x00bf \-\> B:39:?, CROSS_EDGE: B:72:0x00ba \-\> B:68:0x00bb\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0021: r6 'length' J\l  0x0017\-0x0021: r8 '$i$a$\-also\-FilesKt__FileReadWriteKt$readBytes$1$remaining$1' I\l  0x002c\-0x0030: r6 'read' I\l  0x000f\-0x0079: r1 'input' Ljava\/io\/FileInputStream;\l  0x0010\-0x0079: r2 '$i$a$\-use\-FilesKt__FileReadWriteKt$readBytes$1' I\l  0x0011\-0x0079: r3 'offset' I\l  0x0024\-0x0079: r4 'remaining' I\l  0x0026\-0x0079: r5 'result' [B\l  0x0043\-0x0079: r8 'extraByte' I\l  0x004e\-0x0079: r9 'extra' Lkotlin\/io\/ExposingBufferByteArrayOutputStream;\l  0x0062\-0x0079: r10 'resultingSize' I\l  \-1 \-0x0096: r15 '$this$readBytes' Ljava\/io\/File;\l  0x007d\-0x0097: r4 'remaining' I\l  0x007d\-0x0097: r5 'result' [B\l  0x007d\-0x0097: r9 'extra' Lkotlin\/io\/ExposingBufferByteArrayOutputStream;\l  0x007d\-0x0097: r10 'resultingSize' I\l  0x007d\-0x0097: r8 'extraByte' I\l  0x0097\-0x00b8: r15 '$this$readBytes' Ljava\/io\/File;\l  0x007d\-0x00b9: r1 'input' Ljava\/io\/FileInputStream;\l  0x007d\-0x00b9: r2 '$i$a$\-use\-FilesKt__FileReadWriteKt$readBytes$1' I\l  0x007d\-0x00b9: r3 'offset' I\l  0x0097\-0x00b9: r6 'length' J\l  0x0097\-0x00b9: r8 '$i$a$\-also\-FilesKt__FileReadWriteKt$readBytes$1$remaining$1' I\l  0x00b9\-0x00ba: r15 '$this$readBytes' Ljava\/io\/File;\l  0x00bb\-0x00bf: r15 '$this$readBytes' Ljava\/io\/File;\lTryCatch #0 \{all \-\> 0x00b9, blocks: (B:41:0x000c, B:45:0x0024, B:47:0x0028, B:52:0x0036, B:53:0x003f, B:56:0x0047, B:58:0x0064, B:62:0x007d, B:63:0x0096, B:64:0x0097, B:65:0x00b8), top: B:71:0x000c \}, TryCatch #1 \{all \-\> 0x00bb, blocks: (B:67:0x00ba), top: B:72:0x00ba \}\l}"];
MethodNode -> Node_38;Node_38 -> Node_40;
Node_40 -> Node_71;
Node_71 -> Node_41;
Node_71 -> Node_66;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_64;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_74;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_75;
Node_49 -> Node_46;
Node_75 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_39;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_60;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_62;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_62 -> Node_63;
Node_63 -> Node_39;
Node_74 -> Node_50;
Node_64 -> Node_65;
Node_65 -> Node_39;
Node_66 -> Node_72;
Node_72 -> Node_67;
Node_72 -> Node_68;
Node_67 -> Node_39;
Node_67 -> Node_73;
Node_73 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_39;
}

