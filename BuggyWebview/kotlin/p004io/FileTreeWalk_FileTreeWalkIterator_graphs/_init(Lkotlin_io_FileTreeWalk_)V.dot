digraph "CFG forkotlin.io.FileTreeWalk.FileTreeWalkIterator.\<init\>(Lkotlin\/io\/FileTreeWalk;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|kotlin.p004io.FileTreeWalk.this = r4\ljava.util.ArrayDeque r0 = new java.util.ArrayDeque\<\>()\lr3.state = r0\l}"];
Node_16 [shape=record,label="{16\:\ 0x0016|if (r4.start.isDirectory() == false) goto L6\l}"];
Node_17 [shape=record,label="{17\:\ 0x0018|r0.push(directoryState(r4.start))\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0024}"];
Node_19 [shape=record,label="{19\:\ 0x002c|if (r4.start.isFile() == false) goto L10\l}"];
Node_20 [shape=record,label="{20\:\ 0x002e|r0.push(new kotlin.p004io.FileTreeWalk.FileTreeWalkIterator.SingleFileState(r3, r4.start))\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ 0x003b|done()\l}"];
Node_23 [shape=record,label="{23\:\ 0x003f|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void kotlin.io.FileTreeWalk.FileTreeWalkIterator.\<init\>((r3v0 'this' kotlin.io.FileTreeWalk$FileTreeWalkIterator A[IMMUTABLE_TYPE, THIS]), (r4v0 'this$0' kotlin.io.FileTreeWalk A[D('this$0' kotlin.io.FileTreeWalk), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | SKIP_FIRST_ARG\lUSE_LINES_HINTS\lCROSS_EDGE: B:20:0x002e \-\> B:23:0x003f, CROSS_EDGE: B:21:0x003b \-\> B:23:0x003f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ()V\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_24;
Node_24 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_25;
Node_25 -> Node_14;
Node_21 -> Node_23;
Node_23 -> Node_14;
}

