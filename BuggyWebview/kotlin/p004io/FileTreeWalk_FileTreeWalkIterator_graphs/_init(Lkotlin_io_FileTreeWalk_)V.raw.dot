digraph "CFG forkotlin.io.FileTreeWalk.FileTreeWalkIterator.\<init\>(Lkotlin\/io\/FileTreeWalk;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IPUT  (r4 I:kotlin.io.FileTreeWalk A[D('this$0' kotlin.io.FileTreeWalk)]), (r3 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) kotlin.io.FileTreeWalk.FileTreeWalkIterator.this$0 kotlin.io.FileTreeWalk  (LINE:66)\l0x0002: INVOKE  (r3 I:kotlin.collections.AbstractIterator) type: DIRECT call: kotlin.collections.AbstractIterator.\<init\>():void A[MD:():void (m)]\l0x0005: NEW_INSTANCE  (r0 I:java.util.ArrayDeque) =  java.util.ArrayDeque  (LINE:69)\l0x0007: INVOKE  (r0 I:java.util.ArrayDeque) type: DIRECT call: java.util.ArrayDeque.\<init\>():void A[MD:():void (c)]\l0x000a: IPUT  (r0 I:java.util.ArrayDeque\<kotlin.io.FileTreeWalk$WalkState\>), (r3 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) kotlin.io.FileTreeWalk.FileTreeWalkIterator.state java.util.ArrayDeque \l0x000e: INVOKE  (r1 I:java.io.File) = (r4 I:kotlin.io.FileTreeWalk A[D('this$0' kotlin.io.FileTreeWalk)]) type: STATIC call: kotlin.io.FileTreeWalk.access$getStart$p(kotlin.io.FileTreeWalk):java.io.File A[MD:(kotlin.io.FileTreeWalk):java.io.File (m)] (LINE:73)\l0x0012: INVOKE  (r1 I:boolean) = (r1 I:java.io.File) type: VIRTUAL call: java.io.File.isDirectory():boolean A[MD:():boolean (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0016|0x0016: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0024 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0018|0x0018: INVOKE  (r1 I:java.io.File) = (r4 I:kotlin.io.FileTreeWalk A[D('this$0' kotlin.io.FileTreeWalk)]) type: STATIC call: kotlin.io.FileTreeWalk.access$getStart$p(kotlin.io.FileTreeWalk):java.io.File A[MD:(kotlin.io.FileTreeWalk):java.io.File (m)]\l0x001c: INVOKE  (r1 I:kotlin.io.FileTreeWalk$DirectoryState) = (r3 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator), (r1 I:java.io.File) type: DIRECT call: kotlin.io.FileTreeWalk.FileTreeWalkIterator.directoryState(java.io.File):kotlin.io.FileTreeWalk$DirectoryState A[MD:(java.io.File):kotlin.io.FileTreeWalk$DirectoryState (m)]\l0x0020: INVOKE  (r0 I:java.util.ArrayDeque), (r1 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayDeque.push(java.lang.Object):void A[MD:(E):void (c)]\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|0x003f: RETURN   A[SYNTHETIC] (LINE:66)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0024|0x0024: INVOKE  (r1 I:java.io.File) = (r4 I:kotlin.io.FileTreeWalk A[D('this$0' kotlin.io.FileTreeWalk)]) type: STATIC call: kotlin.io.FileTreeWalk.access$getStart$p(kotlin.io.FileTreeWalk):java.io.File A[MD:(kotlin.io.FileTreeWalk):java.io.File (m)] (LINE:74)\l0x0028: INVOKE  (r1 I:boolean) = (r1 I:java.io.File) type: VIRTUAL call: java.io.File.isFile():boolean A[MD:():boolean (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x002c|0x002c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x003b \l}"];
Node_20 [shape=record,label="{20\:\ 0x002e|0x002e: NEW_INSTANCE  (r1 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState) =  kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState \l0x0030: INVOKE  (r2 I:java.io.File) = (r4 I:kotlin.io.FileTreeWalk A[D('this$0' kotlin.io.FileTreeWalk)]) type: STATIC call: kotlin.io.FileTreeWalk.access$getStart$p(kotlin.io.FileTreeWalk):java.io.File A[MD:(kotlin.io.FileTreeWalk):java.io.File (m)]\l0x0034: INVOKE  \l  (r1 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState)\l  (r3 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator)\l  (r2 I:java.io.File)\l type: DIRECT call: kotlin.io.FileTreeWalk.FileTreeWalkIterator.SingleFileState.\<init\>(kotlin.io.FileTreeWalk$FileTreeWalkIterator, java.io.File):void A[MD:(kotlin.io.FileTreeWalk$FileTreeWalkIterator, java.io.File):void (m)]\l0x0037: INVOKE  (r0 I:java.util.ArrayDeque), (r1 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayDeque.push(java.lang.Object):void A[MD:(E):void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x003f: RETURN   A[SYNTHETIC] (LINE:66)\l}"];
Node_21 [shape=record,label="{21\:\ 0x003b|0x003b: INVOKE  (r3 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) type: VIRTUAL call: kotlin.io.FileTreeWalk.FileTreeWalkIterator.done():void A[MD:():void (m)] (LINE:75)\l}"];
Node_23 [shape=record,label="{23\:\ 0x003f|RETURN\lORIG_RETURN\l|0x003f: RETURN    (LINE:66)\l}"];
MethodNode[shape=record,label="{public void kotlin.io.FileTreeWalk.FileTreeWalkIterator.\<init\>((r3 'this' I:kotlin.io.FileTreeWalk$FileTreeWalkIterator A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlin.io.FileTreeWalk A[D('this$0' kotlin.io.FileTreeWalk), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | SKIP_FIRST_ARG\lUSE_LINES_HINTS\lCROSS_EDGE: B:20:0x002e \-\> B:23:0x003f, CROSS_EDGE: B:21:0x003b \-\> B:23:0x003f\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x003f: r4 'this$0' Lkotlin\/io\/FileTreeWalk;\lSIGNATURE: ()V\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_24;
Node_24 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_25;
Node_25 -> Node_14;
Node_21 -> Node_23;
Node_23 -> Node_14;
}

