digraph "CFG forkotlin.io.FilesKt__UtilsKt.copyRecursively(Ljava\/io\/File;Ljava\/io\/File;ZLkotlin\/jvm\/functions\/Function2;)Z" {
Node_75 [shape=record,label="{75\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_77 [shape=record,label="{77\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r12, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r13, \"target\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r15, \"onError\")\l}"];
Node_78 [shape=record,label="{78\:\ 0x0015|if (r12.exists() != false) goto L8\l}"];
Node_79 [shape=record,label="{79\:\ 0x0017}"];
Node_80 [shape=record,label="{80\:\ 0x0029|if (r15.invoke(r12, new kotlin.p004io.NoSuchFileException(r12, null, \"The source file doesn't exist.\", 2, null)) == kotlin.p004io.OnErrorAction.TERMINATE) goto L5\l}"];
Node_82 [shape=record,label="{82\:\ 0x002c|RETURN\lORIG_RETURN\l|return false\l}"];
Node_76 [shape=record,label="{76\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_149 [shape=record,label="{149\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_128 [shape=record,label="{128\:\ 0x002f|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_85 [shape=record,label="{85\:\ 0x002f|TRY_ENTER\lTryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lCatch: TerminateException \-\> 0x00e9\l|java.util.Iterator r0 = kotlin.p004io.FilesKt.walkTopDown(r12).onFail(new kotlin.p004io.FilesKt__UtilsKt$copyRecursively$2(r15)).iterator()     \/\/ Catch: kotlin.p004io.TerminateException \-\> Le9\l}"];
Node_86 [shape=record,label="{86\:\ 0x0042|LOOP_START\lTryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lLOOP:0: B:86:0x0042\-\>B:143:0x0042\lCatch: TerminateException \-\> 0x00e9\l}"];
Node_87 [shape=record,label="{87\:\ 0x0046|if (r0.hasNext() == false) goto L66\l}"];
Node_88 [shape=record,label="{88\:\ 0x0048|TryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lCatch: TerminateException \-\> 0x00e9\l|java.io.File r3 = r0.next()     \/\/ Catch: kotlin.p004io.TerminateException \-\> Le9\l}"];
Node_89 [shape=record,label="{89\:\ 0x0052|if (r3.exists() != false) goto L14\l}"];
Node_130 [shape=record,label="{130\:\ 0x0069|SYNTHETIC\l}"];
Node_93 [shape=record,label="{93\:\ 0x0069|TryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lCatch: TerminateException \-\> 0x00e9\l|java.lang.String r4 = kotlin.p004io.FilesKt.toRelativeString(r3, r12)     \/\/ Catch: kotlin.p004io.TerminateException \-\> Le9\ljava.io.File r4 = new java.io.File(r13, r4)     \/\/ Catch: kotlin.p004io.TerminateException \-\> Le9\l}"];
Node_94 [shape=record,label="{94\:\ 0x0078|if (r4.exists() == false) goto L59\l}"];
Node_95 [shape=record,label="{95\:\ 0x007a|TryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lCatch: TerminateException \-\> 0x00e9\l}"];
Node_96 [shape=record,label="{96\:\ 0x007e|if (r3.isDirectory() == false) goto L38\l}"];
Node_97 [shape=record,label="{97\:\ 0x0080|TryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lCatch: TerminateException \-\> 0x00e9\l}"];
Node_98 [shape=record,label="{98\:\ 0x0084|if (r4.isDirectory() != false) goto L21\l}"];
Node_133 [shape=record,label="{133\:\ 0x00b8|SYNTHETIC\l}"];
Node_117 [shape=record,label="{117\:\ 0x00b8|TryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lCatch: TerminateException \-\> 0x00e9\l|boolean r4 = r3.isDirectory()     \/\/ Catch: kotlin.p004io.TerminateException \-\> Le9\l}"];
Node_118 [shape=record,label="{118\:\ 0x00bc|if (r4 == false) goto L24\l}"];
Node_139 [shape=record,label="{139\:\ 0x00c2|SYNTHETIC\l}"];
Node_120 [shape=record,label="{120\:\ 0x00c2|TryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lCatch: TerminateException \-\> 0x00e9\l}"];
Node_121 [shape=record,label="{121\:\ 0x00d6|if ((kotlin.p004io.FilesKt.copyTo$default(r3, r4, r14, 0, 4, null).length() \> r3.length() ? 1 : (kotlin.p004io.FilesKt.copyTo$default(r3, r4, r14, 0, 4, null).length() == r3.length() ? 0 : \-1)) == 0) goto L34\l}"];
Node_140 [shape=record,label="{140\:\ 0x00d8|SYNTHETIC\l}"];
Node_122 [shape=record,label="{122\:\ 0x00d8|TRY_LEAVE\lTryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lCatch: TerminateException \-\> 0x00e9\l}"];
Node_123 [shape=record,label="{123\:\ 0x00e5|if (r15.invoke(r3, new java.io.IOException(\"Source file wasn't copied completely, length of destination file differs.\")) != kotlin.p004io.OnErrorAction.TERMINATE) goto L32\l}"];
Node_142 [shape=record,label="{142\:\ 0x00e7|SYNTHETIC\l}"];
Node_124 [shape=record,label="{124\:\ 0x00e7|RETURN\l|return false\l}"];
Node_145 [shape=record,label="{145\:\ 0x0042|SYNTHETIC\l}"];
Node_143 [shape=record,label="{143\:\ 0x0042|LOOP_END\lSYNTHETIC\lLOOP:0: B:86:0x0042\-\>B:143:0x0042\l}"];
Node_144 [shape=record,label="{144\:\ 0x0042|SYNTHETIC\l}"];
Node_141 [shape=record,label="{141\:\ 0x00be|SYNTHETIC\l}"];
Node_119 [shape=record,label="{119\:\ 0x00be|TryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lCatch: TerminateException \-\> 0x00e9\l|r4.mkdirs()     \/\/ Catch: kotlin.p004io.TerminateException \-\> Le9\l}"];
Node_146 [shape=record,label="{146\:\ 0x0042|SYNTHETIC\l}"];
Node_99 [shape=record,label="{99\:\ 0x0086|if (r14 != false) goto L49\l}"];
Node_100 [shape=record,label="{100\:\ 0x0088|r4 = true\l}"];
Node_112 [shape=record,label="{112\:\ 0x00a4|PHI: r4 \l  PHI: (r4v20 'stillExists' boolean) = (r4v15 'stillExists' boolean), (r4v16 'stillExists' boolean), (r4v18 'stillExists' boolean), (r4v19 'stillExists' boolean), (r4v21 'stillExists' boolean) binds: [B:110:0x00a2, B:109:0x00a0, B:106:0x0098, B:105:0x0096, B:100:0x0088] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == false) goto L41\l}"];
Node_135 [shape=record,label="{135\:\ 0x00b8|SYNTHETIC\l}"];
Node_138 [shape=record,label="{138\:\ 0x00a6|SYNTHETIC\l}"];
Node_113 [shape=record,label="{113\:\ 0x00a6|TryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lCatch: TerminateException \-\> 0x00e9\l}"];
Node_114 [shape=record,label="{114\:\ 0x00b4|if (r15.invoke(r4, new kotlin.p004io.FileAlreadyExistsException(r3, r4, \"The destination file already exists.\")) != kotlin.p004io.OnErrorAction.TERMINATE) goto L45\l}"];
Node_116 [shape=record,label="{116\:\ 0x00b7}"];
Node_147 [shape=record,label="{147\:\ 0x0042|SYNTHETIC\l}"];
Node_136 [shape=record,label="{136\:\ 0x00b6|SYNTHETIC\l}"];
Node_115 [shape=record,label="{115\:\ 0x00b6|RETURN\l|return false\l}"];
Node_101 [shape=record,label="{101\:\ 0x008a|TryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lCatch: TerminateException \-\> 0x00e9\l}"];
Node_102 [shape=record,label="{102\:\ 0x008e|if (r4.isDirectory() == false) goto L55\l}"];
Node_103 [shape=record,label="{103\:\ 0x0090|TryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lCatch: TerminateException \-\> 0x00e9\l}"];
Node_104 [shape=record,label="{104\:\ 0x0094|if (kotlin.p004io.FilesKt.deleteRecursively(r4) != false) goto L54\l}"];
Node_105 [shape=record,label="{105\:\ 0x0096|r4 = true\l}"];
Node_106 [shape=record,label="{106\:\ 0x0098|r4 = false\l}"];
Node_107 [shape=record,label="{107\:\ 0x009a|TryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lCatch: TerminateException \-\> 0x00e9\l}"];
Node_108 [shape=record,label="{108\:\ 0x009e|if (r4.delete() != false) goto L58\l}"];
Node_109 [shape=record,label="{109\:\ 0x00a0|r4 = true\l}"];
Node_110 [shape=record,label="{110\:\ 0x00a2|r4 = false\l}"];
Node_137 [shape=record,label="{137\:\ 0x00b8|SYNTHETIC\l}"];
Node_134 [shape=record,label="{134\:\ 0x0054|SYNTHETIC\l}"];
Node_90 [shape=record,label="{90\:\ 0x0054|TryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lCatch: TerminateException \-\> 0x00e9\l}"];
Node_91 [shape=record,label="{91\:\ 0x0066|if (r15.invoke(r3, new kotlin.p004io.NoSuchFileException(r3, null, \"The source file doesn't exist.\", 2, null)) != kotlin.p004io.OnErrorAction.TERMINATE) goto L65\l}"];
Node_131 [shape=record,label="{131\:\ 0x0068|SYNTHETIC\l}"];
Node_92 [shape=record,label="{92\:\ 0x0068|RETURN\l|return false\l}"];
Node_148 [shape=record,label="{148\:\ 0x0042|SYNTHETIC\l}"];
Node_132 [shape=record,label="{132\:\ 0x00e8|SYNTHETIC\l}"];
Node_125 [shape=record,label="{125\:\ 0x00e8|RETURN\l|return true\l}"];
Node_129 [shape=record,label="{129\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_126 [shape=record,label="{126\:\ 0x00e9|ExcHandler: TerminateException \-\> 0x00e9\l}"];
Node_127 [shape=record,label="{127\:\ 0x00ea|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.io.FilesKt__UtilsKt.copyRecursively((r12v0 '$this$copyRecursively' java.io.File A[D('$this$copyRecursively' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'target' java.io.File A[D('target' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'overwrite' boolean A[D('overwrite' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'onError' kotlin.jvm.functions.Function2\<? super java.io.File, ? super java.io.IOException, ? extends kotlin.io.OnErrorAction\> A[D('onError' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:80:0x0029 \-\> B:83:0x002d, BACK_EDGE: B:91:0x0066 \-\> B:86:0x0042, CROSS_EDGE: B:92:0x0068 \-\> B:76:?, CROSS_EDGE: B:115:0x00b6 \-\> B:76:?, BACK_EDGE: B:116:0x00b7 \-\> B:86:0x0042, BACK_EDGE: B:119:0x00be \-\> B:86:0x0042, BACK_EDGE: B:121:0x00d6 \-\> B:86:0x0042, BACK_EDGE: B:123:0x00e5 \-\> B:86:0x0042, CROSS_EDGE: B:124:0x00e7 \-\> B:76:?, CROSS_EDGE: B:105:0x0096 \-\> B:112:0x00a4, CROSS_EDGE: B:106:0x0098 \-\> B:112:0x00a4, CROSS_EDGE: B:109:0x00a0 \-\> B:112:0x00a4, CROSS_EDGE: B:110:0x00a2 \-\> B:112:0x00a4, CROSS_EDGE: B:98:0x0084 \-\> B:117:0x00b8, CROSS_EDGE: B:96:0x007e \-\> B:99:0x0086, CROSS_EDGE: B:94:0x0078 \-\> B:117:0x00b8, CROSS_EDGE: B:125:0x00e8 \-\> B:76:?, CROSS_EDGE: B:127:0x00ea \-\> B:76:?, CROSS_EDGE: B:128:0x002f \-\> B:126:0x00e9\lINLINE_NOT_NEEDED\lTryCatch #0 \{TerminateException \-\> 0x00e9, blocks: (B:85:0x002f, B:86:0x0042, B:88:0x0048, B:90:0x0054, B:93:0x0069, B:95:0x007a, B:97:0x0080, B:113:0x00a6, B:101:0x008a, B:103:0x0090, B:107:0x009a, B:117:0x00b8, B:119:0x00be, B:120:0x00c2, B:122:0x00d8), top: B:128:0x002f \}\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/io\/File;Ljava\/io\/File;ZLkotlin\/jvm\/functions\/Function2\<\-Ljava\/io\/File;\-Ljava\/io\/IOException;+Lkotlin\/io\/OnErrorAction;\>;)Z\l}"];
MethodNode -> Node_75;Node_75 -> Node_77;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_128;
Node_79 -> Node_80;
Node_80 -> Node_82;
Node_80 -> Node_149[style=dashed];
Node_82 -> Node_76;
Node_149 -> Node_76;
Node_128 -> Node_85;
Node_128 -> Node_126;
Node_85 -> Node_86;
Node_86 -> Node_87;
Node_86 -> Node_129;
Node_87 -> Node_88[style=dashed];
Node_87 -> Node_132;
Node_88 -> Node_89;
Node_89 -> Node_130;
Node_89 -> Node_134[style=dashed];
Node_130 -> Node_93;
Node_93 -> Node_94;
Node_94 -> Node_95[style=dashed];
Node_94 -> Node_137;
Node_95 -> Node_96;
Node_96 -> Node_97[style=dashed];
Node_96 -> Node_99;
Node_97 -> Node_98;
Node_98 -> Node_99[style=dashed];
Node_98 -> Node_133;
Node_133 -> Node_117;
Node_117 -> Node_118;
Node_118 -> Node_139;
Node_118 -> Node_141[style=dashed];
Node_139 -> Node_120;
Node_120 -> Node_121;
Node_121 -> Node_140[style=dashed];
Node_121 -> Node_144;
Node_140 -> Node_122;
Node_122 -> Node_123;
Node_123 -> Node_142[style=dashed];
Node_123 -> Node_145;
Node_142 -> Node_124;
Node_124 -> Node_76;
Node_145 -> Node_143;
Node_143 -> Node_86;
Node_144 -> Node_143;
Node_141 -> Node_119;
Node_119 -> Node_146;
Node_146 -> Node_143;
Node_99 -> Node_100[style=dashed];
Node_99 -> Node_101;
Node_100 -> Node_112;
Node_112 -> Node_135;
Node_112 -> Node_138[style=dashed];
Node_135 -> Node_117;
Node_138 -> Node_113;
Node_113 -> Node_114;
Node_114 -> Node_116;
Node_114 -> Node_136[style=dashed];
Node_116 -> Node_147;
Node_147 -> Node_143;
Node_136 -> Node_115;
Node_115 -> Node_76;
Node_101 -> Node_102;
Node_102 -> Node_103[style=dashed];
Node_102 -> Node_107;
Node_103 -> Node_104;
Node_104 -> Node_105[style=dashed];
Node_104 -> Node_106;
Node_105 -> Node_112;
Node_106 -> Node_112;
Node_107 -> Node_108;
Node_108 -> Node_109[style=dashed];
Node_108 -> Node_110;
Node_109 -> Node_112;
Node_110 -> Node_112;
Node_137 -> Node_117;
Node_134 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_131[style=dashed];
Node_91 -> Node_148;
Node_131 -> Node_92;
Node_92 -> Node_76;
Node_148 -> Node_143;
Node_132 -> Node_125;
Node_125 -> Node_76;
Node_129 -> Node_126;
Node_126 -> Node_127;
Node_127 -> Node_76;
}

