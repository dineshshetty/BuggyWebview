digraph "CFG forkotlin.io.FilesKt__UtilsKt.normalize$FilesKt__UtilsKt(Ljava\/util\/List;)Ljava\/util\/List;" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:416)\l0x0002: INVOKE  (r1 I:int) = (r5 I:java.util.List A[D('$this$normalize' java.util.List)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l0x0006: INVOKE  (r0 I:java.util.ArrayList), (r1 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0009: CHECK_CAST (r0 I:java.util.List) = (java.util.List) (r0 I:??[OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:java.util.Iterator) = (r5 I:java.util.List A[D('$this$normalize' java.util.List)]) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:417)\l}"];
Node_32 [shape=record,label="{32\:\ 0x000f|LOOP_START\lLOOP:0: B:32:0x000f\-\>B:53:0x000f\l|0x000f: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0013|0x0013: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0057 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0015|0x0015: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0019: CHECK_CAST (r2 I:java.io.File) = (java.io.File) (r2 I:??[OBJECT, ARRAY]) \l0x001b: INVOKE  (r3 I:java.lang.String) = (r2 I:java.io.File A[D('file' java.io.File)]) type: VIRTUAL call: java.io.File.getName():java.lang.String A[MD:():java.lang.String (c)] (LINE:418)\l0x001f: CONST_STR  (r4 I:java.lang.String) =  \".\"  (LINE:419)\l0x0021: INVOKE  (r4 I:boolean) = (r3 I:java.lang.Object), (r4 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0025|0x0025: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x000f \l}"];
Node_47 [shape=record,label="{47\:\ 0x0027|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0027|0x0027: CONST_STR  (r4 I:java.lang.String) =  \"..\"  (LINE:420)\l0x0029: INVOKE  (r3 I:boolean) = (r3 I:java.lang.Object), (r4 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x002d|0x002d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0053 \l}"];
Node_50 [shape=record,label="{50\:\ 0x0053|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0053|0x0053: INVOKE  (r0 I:java.util.List A[D('list' java.util.List)]), (r2 I:java.lang.Object A[D('file' java.io.File)]) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:421)\l}"];
Node_55 [shape=record,label="{55\:\ 0x000f|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x000f|LOOP_END\lSYNTHETIC\lLOOP:0: B:32:0x000f\-\>B:53:0x000f\l}"];
Node_52 [shape=record,label="{52\:\ 0x002f|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x002f|0x002f: INVOKE  (r3 I:boolean) = (r0 I:java.util.List A[D('list' java.util.List)]) type: INTERFACE call: java.util.List.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0033|0x0033: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x004f \l}"];
Node_40 [shape=record,label="{40\:\ 0x0035|0x0035: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.List A[D('list' java.util.List)]) type: STATIC call: kotlin.collections.CollectionsKt.last(java.util.List):java.lang.Object A[MD:\<T\>:(java.util.List\<? extends T\>):T (m)]\l0x0039: CHECK_CAST (r3 I:java.io.File) = (java.io.File) (r3 I:??[OBJECT, ARRAY]) \l0x003b: INVOKE  (r3 I:java.lang.String) = (r3 I:java.io.File) type: VIRTUAL call: java.io.File.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x003f: INVOKE  (r3 I:boolean) = (r3 I:java.lang.Object), (r4 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0043|0x0043: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x004f \l}"];
Node_48 [shape=record,label="{48\:\ 0x004f|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x004f|0x004f: INVOKE  (r0 I:java.util.List A[D('list' java.util.List)]), (r2 I:java.lang.Object A[D('file' java.io.File)]) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_56 [shape=record,label="{56\:\ 0x000f|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0045|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0045|0x0045: INVOKE  (r3 I:int) = (r0 I:java.util.List A[D('list' java.util.List)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l0x0049: ARITH  (r3 I:int) = (r3 I:int) + (\-1 int) \l0x004b: INVOKE  (r0 I:java.util.List A[D('list' java.util.List)]), (r3 I:int) type: INTERFACE call: java.util.List.remove(int):java.lang.Object A[MD:(int):E (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x000f|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x004f|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x000f|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0057|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0057|RETURN\l|0x0057: RETURN  (r0 I:java.util.List\<java.io.File\> A[D('list' java.util.List)])  (LINE:424)\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.util.List\<java.io.File\> kotlin.io.FilesKt__UtilsKt.normalize$FilesKt__UtilsKt((r5 I:java.util.List\<? extends java.io.File\> A[D('$this$normalize' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lBACK_EDGE: B:35:0x0025 \-\> B:32:0x000f, BACK_EDGE: B:42:0x0045 \-\> B:32:0x000f, BACK_EDGE: B:43:0x004f \-\> B:32:0x000f, CROSS_EDGE: B:39:0x0033 \-\> B:43:0x004f, BACK_EDGE: B:44:0x0053 \-\> B:32:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x0057: r2 'file' Ljava\/io\/File;\l  0x000b\-0x0057: r0 'list' Ljava\/util\/List;\l  \-1 \-0x0057: r5 '$this$normalize' Ljava\/util\/List;\lSIGNATURE: (Ljava\/util\/List\<+Ljava\/io\/File;\>;)Ljava\/util\/List\<Ljava\/io\/File;\>;\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_46;
Node_34 -> Node_35;
Node_35 -> Node_47[style=dashed];
Node_35 -> Node_54;
Node_47 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_50;
Node_37 -> Node_52[style=dashed];
Node_50 -> Node_44;
Node_44 -> Node_55;
Node_55 -> Node_53;
Node_53 -> Node_32;
Node_52 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_49;
Node_40 -> Node_41;
Node_41 -> Node_48;
Node_41 -> Node_51[style=dashed];
Node_48 -> Node_43;
Node_43 -> Node_56;
Node_56 -> Node_53;
Node_51 -> Node_42;
Node_42 -> Node_57;
Node_57 -> Node_53;
Node_49 -> Node_43;
Node_54 -> Node_53;
Node_46 -> Node_45;
Node_45 -> Node_30;
}

