digraph "CFG forkotlin.io.FilesKt__UtilsKt.toRelativeStringOrNull$FilesKt__UtilsKt(Ljava\/io\/File;Ljava\/io\/File;)Ljava\/lang\/String;" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|kotlin.io.FilePathComponents r0 = normalize$FilesKt__UtilsKt(kotlin.p004io.FilesKt.toComponents(r17))\lkotlin.io.FilePathComponents r1 = normalize$FilesKt__UtilsKt(kotlin.p004io.FilesKt.toComponents(r18))\l}"];
Node_33 [shape=record,label="{33\:\ 0x001d|if (kotlin.jvm.internal.Intrinsics.areEqual(r0.getRoot(), r1.getRoot()) != false) goto L5\l}"];
Node_34 [shape=record,label="{34\:\ 0x001f|RETURN\l|return null\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0020|int r2 = r1.getSize()\lint r4 = r0.getSize()\lr7 = 0\lint r8 = java.lang.Math.min(r4, r2)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0030|LOOP_START\lLOOP:0: B:36:0x0030\-\>B:39:0x0048\lPHI: r7 \l  PHI: (r7v1 'i' int) = (r7v0 'i' int), (r7v7 'i' int) binds: [B:35:0x0020, B:39:0x0048] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 \>= r8) goto L29\l}"];
Node_37 [shape=record,label="{37\:\ 0x0032}"];
Node_38 [shape=record,label="{38\:\ 0x0046|if (kotlin.jvm.internal.Intrinsics.areEqual(r0.getSegments().get(r7), r1.getSegments().get(r7)) == false) goto L10\l}"];
Node_39 [shape=record,label="{39\:\ 0x0048|LOOP_END\lLOOP:0: B:36:0x0030\-\>B:39:0x0048\l|int r7 = r7 + 1\l}"];
Node_57 [shape=record,label="{57\:\ 0x004b|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x004b|r5 = r7\ljava.lang.StringBuilder r6 = new java.lang.StringBuilder()\lint r7 = r2 + (\-1)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0054|if (r5 \> r7) goto L23\l}"];
Node_42 [shape=record,label="{42\:\ 0x0056|LOOP_START\lLOOP:1: B:42:0x0056\-\>B:49:0x0079\lPHI: r7 \l  PHI: (r7v5 'i' int) = (r7v2 'i' int), (r7v6 'i' int) binds: [B:41:0x0054, B:49:0x0079] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_43 [shape=record,label="{43\:\ 0x006a|if (kotlin.jvm.internal.Intrinsics.areEqual(r1.getSegments().get(r7).getName(), \"..\") == false) goto L15\l}"];
Node_45 [shape=record,label="{45\:\ 0x006d|r6.append(\"..\")\l}"];
Node_46 [shape=record,label="{46\:\ 0x0070|if (r7 == r5) goto L18\l}"];
Node_47 [shape=record,label="{47\:\ 0x0072|r6.append(java.io.File.separatorChar)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0077|if (r7 == r5) goto L20\l}"];
Node_49 [shape=record,label="{49\:\ 0x0079|LOOP_END\lLOOP:1: B:42:0x0056\-\>B:49:0x0079\l|int r7 = r7 + (\-1)\l}"];
Node_58 [shape=record,label="{58\:\ 0x007c|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x006c|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x006c|RETURN\l|return null\l}"];
Node_50 [shape=record,label="{50\:\ 0x007c|if (r5 \>= r4) goto L27\l}"];
Node_51 [shape=record,label="{51\:\ 0x007e|if (r5 \>= r2) goto L26\l}"];
Node_52 [shape=record,label="{52\:\ 0x0080|r6.append(java.io.File.separatorChar)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0085|java.lang.String r3 = java.io.File.separator\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r3, \"separator\")\ljava.lang.Appendable r0 = kotlin.collections.CollectionsKt.joinTo(kotlin.collections.CollectionsKt.drop(r0.getSegments(), r5), r6, (r14 & 2) != 0 ? \", \" : r3, (r14 & 4) != 0 ? \"\" : null, (r14 & 8) != 0 ? \"\" : null, (r14 & 16) != 0 ? \-1 : 0, (r14 & 32) != 0 ? \"...\" : null, (r14 & 64) != 0 ? null : null)\l}"];
Node_54 [shape=record,label="{54\:\ 0x00ab}"];
Node_55 [shape=record,label="{55\:\ 0x00af|RETURN\l|return r6.toString()\l}"];
Node_56 [shape=record,label="{56\:\ 0x004b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static final java.lang.String kotlin.io.FilesKt__UtilsKt.toRelativeStringOrNull$FilesKt__UtilsKt((r17v0 '$this$toRelativeStringOrNull' java.io.File A[D('$this$toRelativeStringOrNull' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'base' java.io.File A[D('base' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lBACK_EDGE: B:39:0x0048 \-\> B:36:0x0030, CROSS_EDGE: B:44:0x006c \-\> B:31:?, BACK_EDGE: B:49:0x0079 \-\> B:42:0x0056, CROSS_EDGE: B:55:0x00af \-\> B:31:?, CROSS_EDGE: B:51:0x007e \-\> B:53:0x0085, CROSS_EDGE: B:50:0x007c \-\> B:54:0x00ab, CROSS_EDGE: B:46:0x0070 \-\> B:48:0x0077, CROSS_EDGE: B:41:0x0054 \-\> B:50:0x007c, CROSS_EDGE: B:36:0x0030 \-\> B:40:0x004b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_31;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_56;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_57;
Node_39 -> Node_36;
Node_57 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_50;
Node_42 -> Node_43;
Node_43 -> Node_45;
Node_43 -> Node_59[style=dashed];
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_58;
Node_49 -> Node_42;
Node_58 -> Node_50;
Node_59 -> Node_44;
Node_44 -> Node_31;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_54;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_31;
Node_56 -> Node_40;
}

