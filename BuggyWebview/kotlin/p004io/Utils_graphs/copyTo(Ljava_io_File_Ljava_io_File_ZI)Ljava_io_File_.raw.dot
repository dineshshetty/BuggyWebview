digraph "CFG forkotlin.io.FilesKt__UtilsKt.copyTo(Ljava\/io\/File;Ljava\/io\/File;ZI)Ljava\/io\/File;" {
Node_47 [shape=record,label="{47\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$copyTo' java.io.File)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"target\" \l0x0007: INVOKE  (r10 I:java.lang.Object A[D('target' java.io.File)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:boolean) = (r9 I:java.io.File A[D('$this$copyTo' java.io.File)]) type: VIRTUAL call: java.io.File.exists():boolean A[MD:():boolean (c)] (LINE:218)\l}"];
Node_50 [shape=record,label="{50\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:88:0x0082 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0010|0x0010: INVOKE  (r0 I:boolean) = (r10 I:java.io.File A[D('target' java.io.File)]) type: VIRTUAL call: java.io.File.exists():boolean A[MD:():boolean (c)] (LINE:222)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x002f \l}"];
Node_53 [shape=record,label="{53\:\ 0x0016|0x0016: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('overwrite' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0027  (LINE:223)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0018|0x0018: INVOKE  (r0 I:boolean) = (r10 I:java.io.File A[D('target' java.io.File)]) type: VIRTUAL call: java.io.File.delete():boolean A[MD:():boolean (c)] (LINE:225)\l}"];
Node_55 [shape=record,label="{55\:\ 0x001c|0x001c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x001f \l}"];
Node_57 [shape=record,label="{57\:\ 0x001f|0x001f: NEW_INSTANCE  (r0 I:kotlin.io.FileAlreadyExistsException) =  kotlin.io.FileAlreadyExistsException  (LINE:226)\l0x0021: CONST_STR  (r1 I:java.lang.String) =  \"Tried to overwrite the destination, but failed to delete it.\" \l0x0023: INVOKE  \l  (r0 I:kotlin.io.FileAlreadyExistsException)\l  (r9 I:java.io.File A[D('$this$copyTo' java.io.File)])\l  (r10 I:java.io.File A[D('target' java.io.File)])\l  (r1 I:java.lang.String)\l type: DIRECT call: kotlin.io.FileAlreadyExistsException.\<init\>(java.io.File, java.io.File, java.lang.String):void A[MD:(java.io.File, java.io.File, java.lang.String):void (m)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0026|0x0026: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_48 [shape=record,label="{48\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_59 [shape=record,label="{59\:\ 0x0027|0x0027: NEW_INSTANCE  (r0 I:kotlin.io.FileAlreadyExistsException) =  kotlin.io.FileAlreadyExistsException  (LINE:224)\l0x0029: CONST_STR  (r1 I:java.lang.String) =  \"The destination file already exists.\" \l0x002b: INVOKE  \l  (r0 I:kotlin.io.FileAlreadyExistsException)\l  (r9 I:java.io.File A[D('$this$copyTo' java.io.File)])\l  (r10 I:java.io.File A[D('target' java.io.File)])\l  (r1 I:java.lang.String)\l type: DIRECT call: kotlin.io.FileAlreadyExistsException.\<init\>(java.io.File, java.io.File, java.lang.String):void A[MD:(java.io.File, java.io.File, java.lang.String):void (m)]\l}"];
Node_60 [shape=record,label="{60\:\ 0x002e|0x002e: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_61 [shape=record,label="{61\:\ 0x002f|0x002f: INVOKE  (r0 I:boolean) = (r9 I:java.io.File A[D('$this$copyTo' java.io.File)]) type: VIRTUAL call: java.io.File.isDirectory():boolean A[MD:():boolean (c)] (LINE:229)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0033|0x0033: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x0044 \l}"];
Node_63 [shape=record,label="{63\:\ 0x0035|0x0035: INVOKE  (r0 I:boolean) = (r10 I:java.io.File A[D('target' java.io.File)]) type: VIRTUAL call: java.io.File.mkdirs():boolean A[MD:():boolean (c)] (LINE:230)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0039|0x0039: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x003c \l}"];
Node_66 [shape=record,label="{66\:\ 0x003c|0x003c: NEW_INSTANCE  (r0 I:kotlin.io.FileSystemException) =  kotlin.io.FileSystemException  (LINE:231)\l0x003e: CONST_STR  (r1 I:java.lang.String) =  \"Failed to create target directory.\" \l0x0040: INVOKE  \l  (r0 I:kotlin.io.FileSystemException)\l  (r9 I:java.io.File A[D('$this$copyTo' java.io.File)])\l  (r10 I:java.io.File A[D('target' java.io.File)])\l  (r1 I:java.lang.String)\l type: DIRECT call: kotlin.io.FileSystemException.\<init\>(java.io.File, java.io.File, java.lang.String):void A[MD:(java.io.File, java.io.File, java.lang.String):void (m)]\l}"];
Node_67 [shape=record,label="{67\:\ 0x0043|0x0043: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_77 [shape=record,label="{77\:\ 0x0073|RETURN\l|0x0073: RETURN  (r10 I:java.io.File A[D('target' java.io.File)])  (LINE:242)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0044|0x0044: INVOKE  (r0 I:java.io.File) = (r10 I:java.io.File A[D('target' java.io.File)]) type: VIRTUAL call: java.io.File.getParentFile():java.io.File A[MD:():java.io.File (c)] (LINE:233)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0048|0x0048: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x004d \l}"];
Node_70 [shape=record,label="{70\:\ 0x004a|0x004a: INVOKE  (r0 I:java.io.File) type: VIRTUAL call: java.io.File.mkdirs():boolean A[MD:():boolean (c)]\l}"];
Node_71 [shape=record,label="{71\:\ 0x004d|0x004d: NEW_INSTANCE  (r0 I:java.io.FileInputStream) =  java.io.FileInputStream \l0x004f: INVOKE  (r0 I:java.io.FileInputStream), (r9 I:java.io.File A[D('$this$copyTo' java.io.File)]) type: DIRECT call: java.io.FileInputStream.\<init\>(java.io.File):void A[MD:(java.io.File):void throws java.io.FileNotFoundException (c)] (LINE:235)\l0x0052: CHECK_CAST (r0 I:java.io.Closeable) = (java.io.Closeable) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_90 [shape=record,label="{90\:\ 0x0054|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_72 [shape=record,label="{72\:\ 0x0054|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{all \-\> 0x007b, blocks: (B:72:0x0054, B:75:0x006d, B:73:0x005f), top: B:90:0x0054 \}\lCatch: all \-\> 0x007b\l|0x0054: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) A[TRY_ENTER]\l0x0055: CHECK_CAST (r1 I:java.io.FileInputStream) = (java.io.FileInputStream) (r1 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x007b]\l0x0057: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0058: NEW_INSTANCE  (r3 I:java.io.FileOutputStream) =  java.io.FileOutputStream A[Catch: all \-\> 0x007b]\l0x005a: INVOKE  (r3 I:java.io.FileOutputStream), (r10 I:java.io.File A[D('target' java.io.File)]) type: DIRECT call: java.io.FileOutputStream.\<init\>(java.io.File):void A[Catch: all \-\> 0x007b, MD:(java.io.File):void throws java.io.FileNotFoundException (c)] (LINE:236)\l0x005d: CHECK_CAST (r3 I:java.io.Closeable) = (java.io.Closeable) (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x007b, TRY_LEAVE]\l}"];
Node_73 [shape=record,label="{73\:\ 0x005f|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{all \-\> 0x007b, blocks: (B:72:0x0054, B:75:0x006d, B:73:0x005f), top: B:90:0x0054 \}\lCatch: all \-\> 0x0074\l|0x005f: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) A[TRY_ENTER]\l0x0060: CHECK_CAST (r4 I:java.io.FileOutputStream) = (java.io.FileOutputStream) (r4 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0074]\l0x0062: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0063: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('input' java.io.FileInputStream)])  (LINE:237)\l0x0064: CHECK_CAST (r6 I:java.io.InputStream) = (java.io.InputStream) (r6 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0074]\l0x0066: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('output' java.io.FileOutputStream)]) \l0x0067: CHECK_CAST (r7 I:java.io.OutputStream) = (java.io.OutputStream) (r7 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0074]\l0x0069: INVOKE  (r6 I:java.io.InputStream), (r7 I:java.io.OutputStream), (r12 I:int A[D('bufferSize' int)]) type: STATIC call: kotlin.io.ByteStreamsKt.copyTo(java.io.InputStream, java.io.OutputStream, int):long A[Catch: all \-\> 0x0074, MD:(java.io.InputStream, java.io.OutputStream, int):long (m), TRY_LEAVE]\l}"];
Node_74 [shape=record,label="{74\:\ 0x006c|0x006c: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('output' java.io.FileOutputStream)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:236)\l}"];
Node_75 [shape=record,label="{75\:\ 0x006d|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{all \-\> 0x007b, blocks: (B:72:0x0054, B:75:0x006d, B:73:0x005f), top: B:90:0x0054 \}\lCatch: all \-\> 0x007b\l|0x006d: INVOKE  (r3 I:java.io.Closeable), (r4 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[Catch: all \-\> 0x007b, MD:(java.io.Closeable, java.lang.Throwable):void (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_76 [shape=record,label="{76\:\ 0x0070|0x0070: INVOKE  (r0 I:java.io.Closeable), (r4 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)] (LINE:235)\l}"];
Node_91 [shape=record,label="{91\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_83 [shape=record,label="{83\:\ 0x007b|ExcHandler: all \-\> 0x007b\l|0x007b: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x007b] (LINE:235)\l}"];
Node_92 [shape=record,label="{92\:\ 0x007c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_84 [shape=record,label="{84\:\ 0x007c|TRY_ENTER\lTRY_LEAVE\lTryCatch #3 \{all \-\> 0x007d, blocks: (B:84:0x007c), top: B:92:0x007c \}\lCatch: all \-\> 0x007d\l|0x007c: THROW  (r1 I:java.lang.Throwable) A[Catch: all \-\> 0x007d, TRY_ENTER, TRY_LEAVE]\l}"];
Node_93 [shape=record,label="{93\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_85 [shape=record,label="{85\:\ 0x007d|ExcHandler: all \-\> 0x007d\l|0x007d: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x007d]\l}"];
Node_86 [shape=record,label="{86\:\ 0x007e|0x007e: INVOKE  (r0 I:java.io.Closeable), (r1 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l}"];
Node_87 [shape=record,label="{87\:\ 0x0081|0x0081: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_88 [shape=record,label="{88\:\ 0x0082|0x0082: NEW_INSTANCE  (r0 I:kotlin.io.NoSuchFileException) =  kotlin.io.NoSuchFileException  (LINE:219)\l0x0084: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0085: CONST  (r7 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0086: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0087: CONST_STR  (r6 I:java.lang.String) =  \"The source file doesn't exist.\" \l0x0089: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x008a: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$copyTo' java.io.File)]) \l0x008b: INVOKE  \l  (r3 I:kotlin.io.NoSuchFileException)\l  (r4 I:java.io.File)\l  (r5 I:java.io.File)\l  (r6 I:java.lang.String)\l  (r7 I:int)\l  (r8 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlin.io.NoSuchFileException.\<init\>(java.io.File, java.io.File, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(java.io.File, java.io.File, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l}"];
Node_89 [shape=record,label="{89\:\ 0x008e|0x008e: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final java.io.File kotlin.io.FilesKt__UtilsKt.copyTo((r9 I:java.io.File A[D('$this$copyTo' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.io.File A[D('target' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[D('overwrite' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('bufferSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:67:0x0043 \-\> B:48:?, CROSS_EDGE: B:77:0x0073 \-\> B:48:?, CROSS_EDGE: B:76:0x0070 \-\> B:77:0x0073, CROSS_EDGE: B:84:0x007c \-\> B:48:?, CROSS_EDGE: B:87:0x0081 \-\> B:48:?, CROSS_EDGE: B:92:0x007c \-\> B:85:0x007d, CROSS_EDGE: B:90:0x0054 \-\> B:83:0x007b, CROSS_EDGE: B:69:0x0048 \-\> B:71:0x004d, CROSS_EDGE: B:60:0x002e \-\> B:48:?, CROSS_EDGE: B:52:0x0014 \-\> B:61:0x002f, CROSS_EDGE: B:89:0x008e \-\> B:48:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0062\-0x006c: r4 'output' Ljava\/io\/FileOutputStream;\l  0x0063\-0x006c: r5 '$i$a$\-use\-FilesKt__UtilsKt$copyTo$1$1' I\l  0x0057\-0x0070: r1 'input' Ljava\/io\/FileInputStream;\l  0x0058\-0x0070: r2 '$i$a$\-use\-FilesKt__UtilsKt$copyTo$1' I\l  0x0074\-0x0075: r1 'input' Ljava\/io\/FileInputStream;\l  0x0074\-0x0075: r2 '$i$a$\-use\-FilesKt__UtilsKt$copyTo$1' I\l  \-1 \-0x0075: r9 '$this$copyTo' Ljava\/io\/File;\l  \-1 \-0x0075: r10 'target' Ljava\/io\/File;\l  \-1 \-0x0075: r11 'overwrite' Z\l  \-1 \-0x0075: r12 'bufferSize' I\l  0x0076\-0x007a: r9 '$this$copyTo' Ljava\/io\/File;\l  0x0076\-0x007a: r10 'target' Ljava\/io\/File;\l  0x0076\-0x007a: r11 'overwrite' Z\l  0x0076\-0x007a: r12 'bufferSize' I\l  0x0076\-0x007b: r1 'input' Ljava\/io\/FileInputStream;\l  0x0076\-0x007b: r2 '$i$a$\-use\-FilesKt__UtilsKt$copyTo$1' I\l  0x007b\-0x007c: r9 '$this$copyTo' Ljava\/io\/File;\l  0x007b\-0x007c: r10 'target' Ljava\/io\/File;\l  0x007b\-0x007c: r11 'overwrite' Z\l  0x007b\-0x007c: r12 'bufferSize' I\l  0x007d\-0x008e: r9 '$this$copyTo' Ljava\/io\/File;\l  0x007d\-0x008e: r10 'target' Ljava\/io\/File;\l  0x007d\-0x008e: r11 'overwrite' Z\l  0x007d\-0x008e: r12 'bufferSize' I\lTryCatch #2 \{all \-\> 0x007b, blocks: (B:72:0x0054, B:75:0x006d, B:73:0x005f), top: B:90:0x0054 \}, TryCatch #3 \{all \-\> 0x007d, blocks: (B:84:0x007c), top: B:92:0x007c \}\l}"];
MethodNode -> Node_47;Node_47 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_88;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_61;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_59;
Node_54 -> Node_55;
Node_55 -> Node_57;
Node_55 -> Node_61[style=dashed];
Node_57 -> Node_58;
Node_58 -> Node_48;
Node_59 -> Node_60;
Node_60 -> Node_48;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_68;
Node_63 -> Node_64;
Node_64 -> Node_66;
Node_64 -> Node_77[style=dashed];
Node_66 -> Node_67;
Node_67 -> Node_48;
Node_77 -> Node_48;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_71;
Node_70 -> Node_71;
Node_71 -> Node_90;
Node_90 -> Node_72;
Node_90 -> Node_83;
Node_72 -> Node_73;
Node_73 -> Node_74;
Node_74 -> Node_75;
Node_75 -> Node_76;
Node_75 -> Node_91;
Node_76 -> Node_77;
Node_91 -> Node_83;
Node_83 -> Node_92;
Node_92 -> Node_84;
Node_92 -> Node_85;
Node_84 -> Node_48;
Node_84 -> Node_93;
Node_93 -> Node_85;
Node_85 -> Node_86;
Node_86 -> Node_87;
Node_87 -> Node_48;
Node_88 -> Node_89;
Node_89 -> Node_48;
}

