digraph "CFG forkotlin.io.FileTreeWalk.DirectoryState.\<init\>(Ljava\/io\/File;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"rootDir\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('rootDir' java.io.File)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r2 I:kotlin.io.FileTreeWalk$WalkState), (r3 I:java.io.File A[D('rootDir' java.io.File)]) type: DIRECT call: kotlin.io.FileTreeWalk.WalkState.\<init\>(java.io.File):void A[MD:(java.io.File):void (m)] (LINE:59)\l0x000a: INVOKE  (r0 I:boolean) = (r3 I:java.io.File A[D('rootDir' java.io.File)]) type: VIRTUAL call: java.io.File.isDirectory():boolean A[MD:():boolean (c)] (LINE:62)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0012 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0011|RETURN\l|0x0011: RETURN    (LINE:59)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:274)\l0x0014: NEW_INSTANCE  (r0 I:java.lang.AssertionError A[D('$i$a$\-assert\-FileTreeWalk$DirectoryState$1' int)]) =  java.lang.AssertionError \l0x0016: CONST_STR  (r1 I:java.lang.String) =  \"rootDir must be verified to be directory beforehand.\" \l0x0018: INVOKE  (r0 I:java.lang.AssertionError), (r1 I:java.lang.Object) type: DIRECT call: java.lang.AssertionError.\<init\>(java.lang.Object):void A[MD:(java.lang.Object):void (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|0x001b: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void kotlin.io.FileTreeWalk.DirectoryState.\<init\>((r2 'this' I:kotlin.io.FileTreeWalk$DirectoryState A[IMMUTABLE_TYPE, THIS]), (r3 I:java.io.File A[D('rootDir' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001b \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0014: r0 '$i$a$\-assert\-FileTreeWalk$DirectoryState$1' I\l  \-1 \-0x001b: r3 'rootDir' Ljava\/io\/File;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

