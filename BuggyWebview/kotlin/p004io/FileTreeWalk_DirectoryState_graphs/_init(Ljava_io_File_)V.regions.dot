digraph "CFG forkotlin.io.FileTreeWalk.DirectoryState.\<init\>(Ljava\/io\/File;)V" {
subgraph cluster_Region_1674471941 {
label = "R(2:1|(2:1|(1:(1:6))))";
node [shape=record,color=blue];
Node_InsnContainer_706087248 [shape=record,label="{|super(r3)\l}"];
subgraph cluster_Region_474221296 {
label = "R(2:1|(1:(1:6)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"rootDir\")\l}"];
subgraph cluster_Region_1874571205 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2142600821 {
label = "IF [B:10:0x000e] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x000e|if (r3.isDirectory() != true) goto L5\l}"];
subgraph cluster_Region_1710470234 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x001b|throw new java.lang.AssertionError(\"rootDir must be verified to be directory beforehand.\")\l}"];
}
}
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0011}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0012}"];
MethodNode[shape=record,label="{public void kotlin.io.FileTreeWalk.DirectoryState.\<init\>((r2v0 'this' kotlin.io.FileTreeWalk$DirectoryState A[IMMUTABLE_TYPE, THIS]), (r3v0 'rootDir' java.io.File A[D('rootDir' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001b \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> 'super' call moved to the top of the method (can break code semantics)\}\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_13 -> Node_8;
Node_7 -> Node_9;
Node_11 -> Node_8;
Node_12 -> Node_13;
}

