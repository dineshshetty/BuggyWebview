digraph "CFG forkotlin.io.FileTreeWalk.\<init\>(Ljava\/io\/File;Lkotlin\/io\/FileWalkDirection;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"start\" \l0x0002: INVOKE  (r11 I:java.lang.Object A[D('start' java.io.File)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"direction\" \l0x0007: INVOKE  (r12 I:java.lang.Object A[D('direction' kotlin.io.FileWalkDirection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:46)\l0x000b: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: CONST  (r8 I:??[int, float, short, byte, char]) = (32 ??[int, float, short, byte, char]) \l0x0010: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0011: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l0x0012: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('start' java.io.File)]) \l0x0013: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('direction' kotlin.io.FileWalkDirection)]) \l0x0014: INVOKE  \l  (r1 I:kotlin.io.FileTreeWalk)\l  (r2 I:java.io.File)\l  (r3 I:kotlin.io.FileWalkDirection)\l  (r4 I:kotlin.jvm.functions.Function1)\l  (r5 I:kotlin.jvm.functions.Function1)\l  (r6 I:kotlin.jvm.functions.Function2)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlin.io.FileTreeWalk.\<init\>(java.io.File, kotlin.io.FileWalkDirection, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(java.io.File, kotlin.io.FileWalkDirection, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|RETURN\l|0x0017: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.io.FileTreeWalk.\<init\>((r10 'this' I:kotlin.io.FileTreeWalk A[IMMUTABLE_TYPE, THIS]), (r11 I:java.io.File A[D('start' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlin.io.FileWalkDirection A[D('direction' kotlin.io.FileWalkDirection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0017: r11 'start' Ljava\/io\/File;\l  \-1 \-0x0017: r12 'direction' Lkotlin\/io\/FileWalkDirection;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

