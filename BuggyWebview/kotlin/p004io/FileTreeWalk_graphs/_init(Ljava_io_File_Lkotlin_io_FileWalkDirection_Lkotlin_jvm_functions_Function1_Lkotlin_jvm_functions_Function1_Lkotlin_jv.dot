digraph "CFG forkotlin.io.FileTreeWalk.\<init\>(Ljava\/io\/File;Lkotlin\/io\/FileWalkDirection;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function2;IILkotlin\/jvm\/internal\/DefaultConstructorMarker;)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000}"];
Node_15 [shape=record,label="{15\:\ 0x0002|if ((r14 & 2) == 0) goto L11\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|r2 = kotlin.p004io.FileWalkDirection.TOP_DOWN\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|PHI: r2 \l  PHI: (r2v1 kotlin.io.FileWalkDirection) = (r2v0 kotlin.io.FileWalkDirection), (r2v2 kotlin.io.FileWalkDirection) binds: [B:17:0x0008, B:16:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|if ((r14 & 32) == 0) goto L10\l}"];
Node_20 [shape=record,label="{20\:\ 0x000d|r6 = Integer.MAX_VALUE\l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|PHI: r6 \l  PHI: (r6v1 int) = (r6v0 int), (r6v2 int) binds: [B:21:0x0014, B:20:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|this(r8, r2, r10, r11, r12, r6)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001d|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0014|r6 = r13\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|r2 = r9\l}"];
MethodNode[shape=record,label="{\/* synthetic *\/ void kotlin.io.FileTreeWalk.\<init\>((r7v0 'this' kotlin.io.FileTreeWalk A[IMMUTABLE_TYPE, THIS]), (r8v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 kotlin.io.FileWalkDirection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 kotlin.jvm.functions.Function1 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 kotlin.jvm.functions.Function1 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 kotlin.jvm.functions.Function2 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 kotlin.jvm.internal.DefaultConstructorMarker A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:21:0x0014 \-\> B:22:0x0015, CROSS_EDGE: B:17:0x0008 \-\> B:18:0x0009\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_22;
Node_17 -> Node_18;
}

