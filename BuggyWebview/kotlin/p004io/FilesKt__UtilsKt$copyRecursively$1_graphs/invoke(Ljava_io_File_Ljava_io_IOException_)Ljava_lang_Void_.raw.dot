digraph "CFG forkotlin.io.FilesKt__UtilsKt$copyRecursively$1.invoke(Ljava\/io\/File;Ljava\/io\/IOException;)Ljava\/lang\/Void;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<anonymous parameter 0\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r2 I:java.lang.String) =  \"exception\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('exception' java.io.IOException)]), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|0x000a: THROW  (r3 I:java.lang.Throwable A[D('exception' java.io.IOException)])  (LINE:291)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final java.lang.Void kotlin.io.FilesKt__UtilsKt$copyRecursively$1.invoke((r1 'this' I:kotlin.io.FilesKt__UtilsKt$copyRecursively$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.io.IOException A[D('exception' java.io.IOException), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000a: r3 'exception' Ljava\/io\/IOException;\lREPLACED_BY: kotlin.io.FilesKt__UtilsKt$copyRecursively$1.invoke(java.lang.Object, java.lang.Object):java.lang.Object\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function2.invoke(P1, P2):R]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

