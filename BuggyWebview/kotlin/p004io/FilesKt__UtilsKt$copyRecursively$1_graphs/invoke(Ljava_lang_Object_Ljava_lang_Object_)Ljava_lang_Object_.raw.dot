digraph "CFG forkotlin.io.FilesKt__UtilsKt$copyRecursively$1.invoke(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('p1' java.lang.Object)])  (LINE:291)\l0x0001: CHECK_CAST (r0 I:java.io.File) = (java.io.File) (r0 I:??[OBJECT, ARRAY]) \l0x0003: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('p2' java.lang.Object)]) \l0x0004: CHECK_CAST (r1 I:java.io.IOException) = (java.io.IOException) (r1 I:??[OBJECT, ARRAY]) \l0x0006: INVOKE  (r0 I:java.lang.Void) = (r2 I:kotlin.io.FilesKt__UtilsKt$copyRecursively$1), (r0 I:java.io.File), (r1 I:java.io.IOException) type: VIRTUAL call: kotlin.io.FilesKt__UtilsKt$copyRecursively$1.invoke(java.io.File, java.io.IOException):java.lang.Void A[MD:(java.io.File, java.io.IOException):java.lang.Void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:java.lang.Object) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ java.lang.Object kotlin.io.FilesKt__UtilsKt$copyRecursively$1.invoke((r2 'this' I:kotlin.io.FilesKt__UtilsKt$copyRecursively$1 A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[D('p1' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[D('p2' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000a: r3 'p1' Ljava\/lang\/Object;\l  \-1 \-0x000a: r4 'p2' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function2.invoke(P1, P2):R]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

