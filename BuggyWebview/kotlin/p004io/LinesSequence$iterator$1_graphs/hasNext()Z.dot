digraph "CFG forkotlin.io.LinesSequence$iterator$1.hasNext()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r2.nextValue != null) goto L8\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005}"];
Node_5 [shape=record,label="{5\:\ 0x0007|if (r2.done != false) goto L8\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|java.io.BufferedReader r0 = r2.this$0.reader\ljava.lang.String r0 = r0.readLine()\lr2.nextValue = r0\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|if (r0 != null) goto L8\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|r2.done = true\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019}"];
Node_10 [shape=record,label="{10\:\ 0x001b|if (r2.nextValue == null) goto L10\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|RETURN\lORIG_RETURN\l|return false\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean kotlin.io.LinesSequence$iterator$1.hasNext((r2v0 'this' kotlin.io.LinesSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x001b \-\> B:13:0x001f, CROSS_EDGE: B:7:0x0015 \-\> B:9:0x0019, CROSS_EDGE: B:5:0x0007 \-\> B:9:0x0019, CROSS_EDGE: B:3:0x0003 \-\> B:9:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{java.util.Iterator.hasNext():boolean\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_14[style=dashed];
Node_12 -> Node_1;
Node_14 -> Node_1;
}

