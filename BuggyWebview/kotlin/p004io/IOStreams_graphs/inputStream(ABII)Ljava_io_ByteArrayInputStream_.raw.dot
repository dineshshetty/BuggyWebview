digraph "CFG forkotlin.io.ByteStreamsKt.inputStream([BII)Ljava\/io\/ByteArrayInputStream;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$inputStream' byte[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: NEW_INSTANCE  (r0 I:java.io.ByteArrayInputStream) =  java.io.ByteArrayInputStream  (LINE:64)\l0x0007: INVOKE  \l  (r0 I:java.io.ByteArrayInputStream)\l  (r1 I:byte[] A[D('$this$inputStream' byte[])])\l  (r2 I:int A[D('offset' int)])\l  (r3 I:int A[D('length' int)])\l type: DIRECT call: java.io.ByteArrayInputStream.\<init\>(byte[], int, int):void A[MD:(byte[], int, int):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:java.io.ByteArrayInputStream) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.io.ByteArrayInputStream kotlin.io.ByteStreamsKt.inputStream((r1 I:byte[] A[D('$this$inputStream' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000a: r1 '$this$inputStream' [B\l  \-1 \-0x000a: r2 'offset' I\l  \-1 \-0x000a: r3 'length' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

