digraph "CFG forkotlin.io.ByteStreamsKt.bufferedReader(Ljava\/io\/InputStream;Ljava\/nio\/charset\/Charset;)Ljava\/io\/BufferedReader;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$bufferedReader' java.io.InputStream)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"charset\" \l0x0007: INVOKE  (r4 I:java.lang.Object A[D('charset' java.nio.charset.Charset)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: NEW_INSTANCE  (r0 I:java.io.InputStreamReader) =  java.io.InputStreamReader \l0x000c: INVOKE  \l  (r0 I:java.io.InputStreamReader)\l  (r3 I:java.io.InputStream A[D('$this$bufferedReader' java.io.InputStream)])\l  (r4 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset)])\l type: DIRECT call: java.io.InputStreamReader.\<init\>(java.io.InputStream, java.nio.charset.Charset):void A[MD:(java.io.InputStream, java.nio.charset.Charset):void (c)] (LINE:80)\l0x000f: CHECK_CAST (r0 I:java.io.Reader) = (java.io.Reader) (r0 I:??[OBJECT, ARRAY]) \l0x0011: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY]) java.io.BufferedReader \l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|0x0013: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0018 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|0x0015: CHECK_CAST (r0 I:java.io.BufferedReader) = (java.io.BufferedReader) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0020: RETURN  (r0 I:java.io.BufferedReader) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0018|0x0018: NEW_INSTANCE  (r1 I:java.io.BufferedReader) =  java.io.BufferedReader \l0x001a: CONST  (r2 I:??[int, float, short, byte, char]) = (8192(0x2000, float:1.148E\-41) ??[int, float, short, byte, char]) \l0x001c: INVOKE  (r1 I:java.io.BufferedReader), (r0 I:java.io.Reader), (r2 I:int) type: DIRECT call: java.io.BufferedReader.\<init\>(java.io.Reader, int):void A[MD:(java.io.Reader, int):void (c)]\l0x001f: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|RETURN\lORIG_RETURN\l|0x0020: RETURN  (r0 I:java.io.BufferedReader) \l}"];
MethodNode[shape=record,label="{private static final java.io.BufferedReader kotlin.io.ByteStreamsKt.bufferedReader((r3 I:java.io.InputStream A[D('$this$bufferedReader' java.io.InputStream), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0018 \-\> B:14:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0020: r3 '$this$bufferedReader' Ljava\/io\/InputStream;\l  \-1 \-0x0020: r4 'charset' Ljava\/nio\/charset\/Charset;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

