digraph "CFG forkotlin.io.ByteStreamsKt.readBytes(Ljava\/io\/InputStream;I)[B" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"\<this\>\")\ljava.io.ByteArrayOutputStream r0 = new java.io.ByteArrayOutputStream(java.lang.Math.max(r6, r5.available()))\lcopyTo$default(r5, r0, 0, 2, null)\lbyte[] r1 = r0.toByteArray()\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, \"buffer.toByteArray()\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|RETURN\l|return r1\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final byte[] kotlin.io.ByteStreamsKt.readBytes((r5v0 '$this$readBytes' java.io.InputStream A[D('$this$readBytes' java.io.InputStream), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'estimatedSize' int A[D('estimatedSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use readBytes() overload without estimatedSize parameter, replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=readBytes(), imports=[[]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{errorSince=1.5, warningSince=1.3\}\}\}\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

