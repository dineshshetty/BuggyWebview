digraph "CFG forkotlin.io.TextStreamsKt.buffered$default(Ljava\/io\/Writer;IILjava\/lang\/Object;)Ljava\/io\/BufferedWriter;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:24)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|0x0002: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0006 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: CONST  (r1 I:??[int, float, short, byte, char] A[D('bufferSize' int)]) = (8192(0x2000, float:1.148E\-41) ??[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: CONST_STR  (r2 I:java.lang.String) =  \"\<this\>\" \l0x0008: INVOKE  (r0 I:java.lang.Object A[D('$this$buffered_u24default' java.io.Writer)]), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000b: INSTANCE_OF  (r2 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('$this$buffered_u24default' java.io.Writer)]) java.io.BufferedWriter  (LINE:25)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000d|0x000d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0013 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|0x000f: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('$this$buffered_u24default' java.io.Writer)]) \l0x0010: CHECK_CAST (r2 I:java.io.BufferedWriter) = (java.io.BufferedWriter) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0018: RETURN  (r2 I:java.io.BufferedWriter) A[SYNTHETIC]\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|0x0013: NEW_INSTANCE  (r2 I:java.io.BufferedWriter) =  java.io.BufferedWriter \l0x0015: INVOKE  \l  (r2 I:java.io.BufferedWriter)\l  (r0 I:java.io.Writer A[D('$this$buffered_u24default' java.io.Writer)])\l  (r1 I:int A[D('bufferSize' int)])\l type: DIRECT call: java.io.BufferedWriter.\<init\>(java.io.Writer, int):void A[MD:(java.io.Writer, int):void (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: RETURN  (r2 I:java.io.BufferedWriter) \l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.io.BufferedWriter kotlin.io.TextStreamsKt.buffered$default((r0 I:java.io.Writer A[D('$this$buffered_u24default' java.io.Writer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:int A[D('bufferSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:19:0x0013 \-\> B:20:0x0018, CROSS_EDGE: B:14:0x0002 \-\> B:16:0x0006\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r0 '$this$buffered_u24default' Ljava\/io\/Writer;\l  \-1 \-0x0018: r1 'bufferSize' I\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_21;
Node_21 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
}

