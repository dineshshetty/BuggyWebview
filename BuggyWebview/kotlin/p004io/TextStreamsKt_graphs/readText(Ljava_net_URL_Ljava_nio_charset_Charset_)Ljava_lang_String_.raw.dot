digraph "CFG forkotlin.io.TextStreamsKt.readText(Ljava\/net\/URL;Ljava\/nio\/charset\/Charset;)Ljava\/lang\/String;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$readText' java.net.URL)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"charset\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('charset' java.nio.charset.Charset)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:byte[]) = (r2 I:java.net.URL A[D('$this$readText' java.net.URL)]) type: STATIC call: kotlin.io.TextStreamsKt.readBytes(java.net.URL):byte[] A[MD:(java.net.URL):byte[] (m)] (LINE:141)\l0x000e: NEW_INSTANCE  (r1 I:java.lang.String) =  java.lang.String \l0x0010: INVOKE  (r1 I:java.lang.String), (r0 I:byte[]), (r3 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset)]) type: DIRECT call: java.lang.String.\<init\>(byte[], java.nio.charset.Charset):void A[MD:(byte[], java.nio.charset.Charset):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|RETURN\l|0x0013: RETURN  (r1 I:java.lang.String) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.lang.String kotlin.io.TextStreamsKt.readText((r2 I:java.net.URL A[D('$this$readText' java.net.URL), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0013: r2 '$this$readText' Ljava\/net\/URL;\l  \-1 \-0x0013: r3 'charset' Ljava\/nio\/charset\/Charset;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

