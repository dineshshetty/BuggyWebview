digraph "CFG forkotlin.io.TextStreamsKt.forEachLine(Ljava\/io\/Reader;Lkotlin\/jvm\/functions\/Function1;)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r12, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r13, \"action\")\l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|if ((r12 instanceof java.io.BufferedReader) == false) goto L23\l}"];
Node_28 [shape=record,label="{28\:\ 0x0010|java.io.BufferedReader r2 = (java.io.BufferedReader) r12\l}"];
Node_30 [shape=record,label="{30\:\ 0x001b|PHI: r2 \l  PHI: (r2v2 java.io.BufferedReader) = (r2v1 java.io.BufferedReader), (r2v5 java.io.BufferedReader) binds: [B:29:0x0014, B:28:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|java.io.Closeable r2 = r2\l}"];
Node_43 [shape=record,label="{43\:\ 0x001e|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_31 [shape=record,label="{31\:\ 0x001e|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0043, blocks: (B:31:0x001e, B:32:0x002d, B:34:0x0033, B:35:0x003b), top: B:43:0x001e \}\lCatch: all \-\> 0x0043\l|java.io.BufferedReader r4 = r2     \/\/ Catch: java.lang.Throwable \-\> L43\lkotlin.sequences.Sequence r6 = lineSequence(r4)     \/\/ Catch: java.lang.Throwable \-\> L43\ljava.util.Iterator r10 = r6.iterator()     \/\/ Catch: java.lang.Throwable \-\> L43\l}"];
Node_32 [shape=record,label="{32\:\ 0x002d|LOOP_START\lTryCatch #0 \{all \-\> 0x0043, blocks: (B:31:0x001e, B:32:0x002d, B:34:0x0033, B:35:0x003b), top: B:43:0x001e \}\lLOOP:0: B:32:0x002d\-\>B:34:0x0033\lCatch: all \-\> 0x0043\l}"];
Node_33 [shape=record,label="{33\:\ 0x0031|if (r10.hasNext() == false) goto L10\l}"];
Node_34 [shape=record,label="{34\:\ 0x0033|LOOP_END\lTryCatch #0 \{all \-\> 0x0043, blocks: (B:31:0x001e, B:32:0x002d, B:34:0x0033, B:35:0x003b), top: B:43:0x001e \}\lLOOP:0: B:32:0x002d\-\>B:34:0x0033\lCatch: all \-\> 0x0043\l|java.lang.Object r11 = r10.next()     \/\/ Catch: java.lang.Throwable \-\> L43\lr13.invoke(r11)     \/\/ Catch: java.lang.Throwable \-\> L43\l}"];
Node_47 [shape=record,label="{47\:\ 0x003b|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x003b|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0043, blocks: (B:31:0x001e, B:32:0x002d, B:34:0x0033, B:35:0x003b), top: B:43:0x001e \}\lCatch: all \-\> 0x0043\l|kotlin.Unit r6 = kotlin.Unit.INSTANCE     \/\/ Catch: java.lang.Throwable \-\> L43\l}"];
Node_36 [shape=record,label="{36\:\ 0x003f|kotlin.p004io.Closeable.closeFinally(r2, null)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0042|RETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_38 [shape=record,label="{38\:\ 0x0043|ExcHandler: all \-\> 0x0043\l|java.lang.Throwable r3 = move\-exception\l}"];
Node_45 [shape=record,label="{45\:\ 0x0044|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_39 [shape=record,label="{39\:\ 0x0044|TRY_ENTER\lTRY_LEAVE\lDONT_GENERATE\lFINALLY_INSNS\lTryCatch #1 \{all \-\> 0x0045, blocks: (B:39:0x0044), top: B:45:0x0044 \}\lCatch: all \-\> 0x0045\l|throw r3     \/\/ Catch: java.lang.Throwable \-\> L45\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_40 [shape=record,label="{40\:\ 0x0045|DONT_GENERATE\lFINALLY_INSNS\lExcHandler: all \-\> 0x0045\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_41 [shape=record,label="{41\:\ 0x0046|DONT_GENERATE\lFINALLY_INSNS\l|kotlin.p004io.Closeable.closeFinally(r2, r3)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0049|DONT_GENERATE\lFINALLY_INSNS\l|throw r4\l}"];
Node_29 [shape=record,label="{29\:\ 0x0014|java.io.BufferedReader r2 = new java.io.BufferedReader(r12, 8192)\l}"];
MethodNode[shape=record,label="{public static final void kotlin.io.TextStreamsKt.forEachLine((r12v0 '$this$forEachLine' java.io.Reader A[D('$this$forEachLine' java.io.Reader), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'action' kotlin.jvm.functions.Function1\<? super java.lang.String, kotlin.Unit\> A[D('action' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | BACK_EDGE: B:34:0x0033 \-\> B:32:0x002d, CROSS_EDGE: B:39:0x0044 \-\> B:25:?, CROSS_EDGE: B:42:0x0049 \-\> B:25:?, CROSS_EDGE: B:45:0x0044 \-\> B:40:0x0045, CROSS_EDGE: B:43:0x001e \-\> B:38:0x0043, CROSS_EDGE: B:29:0x0014 \-\> B:30:0x001b\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0043, blocks: (B:31:0x001e, B:32:0x002d, B:34:0x0033, B:35:0x003b), top: B:43:0x001e \}, TryCatch #1 \{all \-\> 0x0045, blocks: (B:39:0x0044), top: B:45:0x0044 \}\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/io\/Reader;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/String;Lkotlin\/Unit;\>;)V\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [153=4]\l \-\> Finally have unexpected throw blocks count: 2, expect 1\}\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_43;
Node_43 -> Node_31;
Node_43 -> Node_38;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_47;
Node_34 -> Node_32;
Node_47 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_44;
Node_36 -> Node_37;
Node_37 -> Node_25;
Node_44 -> Node_38;
Node_38 -> Node_45;
Node_45 -> Node_39;
Node_45 -> Node_40;
Node_39 -> Node_25;
Node_39 -> Node_46;
Node_46 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_25;
Node_29 -> Node_30;
}

