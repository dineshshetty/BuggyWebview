digraph "CFG forkotlin.io.path.PathsKt__PathReadWriteKt.forEachLine(Ljava\/nio\/file\/Path;Ljava\/nio\/charset\/Charset;Lkotlin\/jvm\/functions\/Function1;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r12, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r13, \"charset\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r14, \"action\")\ljava.io.BufferedReader r0 = java.nio.file.Files.newBufferedReader(r12, r13)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"newBufferedReader(this, charset)\")\ljava.io.Reader r0 = r0\ljava.io.Closeable r2 = (java.io.BufferedReader) r0\lr3 = 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|TRY_ENTER\lTryCatch #0 \{all \-\> 0x004d, blocks: (B:3:0x0021, B:4:0x0030, B:6:0x0036, B:7:0x003e), top: B:15:0x0021 \}\lCatch: all \-\> 0x004d\l|java.io.BufferedReader r4 = r2     \/\/ Catch: java.lang.Throwable \-\> L4d\lkotlin.sequences.Sequence r6 = kotlin.p004io.TextStreamsKt.lineSequence(r4)     \/\/ Catch: java.lang.Throwable \-\> L4d\ljava.util.Iterator r10 = r6.iterator()     \/\/ Catch: java.lang.Throwable \-\> L4d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0030|LOOP_START\lTryCatch #0 \{all \-\> 0x004d, blocks: (B:3:0x0021, B:4:0x0030, B:6:0x0036, B:7:0x003e), top: B:15:0x0021 \}\lLOOP:0: B:4:0x0030\-\>B:6:0x0036\lCatch: all \-\> 0x004d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|if (r10.hasNext() == false) goto L7\l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|LOOP_END\lTryCatch #0 \{all \-\> 0x004d, blocks: (B:3:0x0021, B:4:0x0030, B:6:0x0036, B:7:0x003e), top: B:15:0x0021 \}\lLOOP:0: B:4:0x0030\-\>B:6:0x0036\lCatch: all \-\> 0x004d\l|java.lang.Object r11 = r10.next()     \/\/ Catch: java.lang.Throwable \-\> L4d\lr14.invoke(r11)     \/\/ Catch: java.lang.Throwable \-\> L4d\l}"];
Node_19 [shape=record,label="{19\:\ 0x003e|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x004d, blocks: (B:3:0x0021, B:4:0x0030, B:6:0x0036, B:7:0x003e), top: B:15:0x0021 \}\lCatch: all \-\> 0x004d\l|kotlin.Unit r6 = kotlin.Unit.INSTANCE     \/\/ Catch: java.lang.Throwable \-\> L4d\l}"];
Node_8 [shape=record,label="{8\:\ 0x0042|kotlin.jvm.internal.InlineMarker.finallyStart(1)\lkotlin.p004io.Closeable.closeFinally(r2, null)\lkotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_9 [shape=record,label="{9\:\ 0x004c|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|ExcHandler: all \-\> 0x004d\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_17 [shape=record,label="{17\:\ 0x004e|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_11 [shape=record,label="{11\:\ 0x004e|TRY_ENTER\lTRY_LEAVE\lDONT_GENERATE\lFINALLY_INSNS\lTryCatch #1 \{all \-\> 0x004f, blocks: (B:11:0x004e), top: B:17:0x004e \}\lCatch: all \-\> 0x004f\l|throw r4     \/\/ Catch: java.lang.Throwable \-\> L4f\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_12 [shape=record,label="{12\:\ 0x004f|DONT_GENERATE\lFINALLY_INSNS\lExcHandler: all \-\> 0x004f\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_13 [shape=record,label="{13\:\ 0x0050|DONT_GENERATE\lFINALLY_INSNS\l|kotlin.jvm.internal.InlineMarker.finallyStart(r3)\lkotlin.p004io.Closeable.closeFinally(r2, r4)\lkotlin.jvm.internal.InlineMarker.finallyEnd(r3)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0059|DONT_GENERATE\lFINALLY_INSNS\l|throw r5\l}"];
MethodNode[shape=record,label="{private static final void kotlin.io.path.PathsKt__PathReadWriteKt.forEachLine((r12v0 '$this$forEachLine' java.nio.file.Path A[D('$this$forEachLine' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'charset' java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'action' kotlin.jvm.functions.Function1\<? super java.lang.String, kotlin.Unit\> A[D('action' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | BACK_EDGE: B:6:0x0036 \-\> B:4:0x0030, CROSS_EDGE: B:11:0x004e \-\> B:1:?, CROSS_EDGE: B:14:0x0059 \-\> B:1:?, CROSS_EDGE: B:17:0x004e \-\> B:12:0x004f, CROSS_EDGE: B:15:0x0021 \-\> B:10:0x004d\lTryCatch #0 \{all \-\> 0x004d, blocks: (B:3:0x0021, B:4:0x0030, B:6:0x0036, B:7:0x003e), top: B:15:0x0021 \}, TryCatch #1 \{all \-\> 0x004f, blocks: (B:11:0x004e), top: B:17:0x004e \}\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/nio\/file\/Path;Ljava\/nio\/charset\/Charset;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/String;Lkotlin\/Unit;\>;)V\lEXCEPTIONS:[Ljava\/io\/IOException;]\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [328=4]\l \-\> Finally have unexpected throw blocks count: 2, expect 1\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_15;
Node_15 -> Node_3;
Node_15 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_19;
Node_6 -> Node_4;
Node_19 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_16 -> Node_10;
Node_10 -> Node_17;
Node_17 -> Node_11;
Node_17 -> Node_12;
Node_11 -> Node_1;
Node_11 -> Node_18;
Node_18 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_1;
}

