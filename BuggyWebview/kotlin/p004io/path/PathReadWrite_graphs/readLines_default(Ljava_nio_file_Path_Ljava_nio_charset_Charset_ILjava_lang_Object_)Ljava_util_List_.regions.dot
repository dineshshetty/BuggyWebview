digraph "CFG forkotlin.io.path.PathsKt__PathReadWriteKt.readLines$default(Ljava\/nio\/file\/Path;Ljava\/nio\/charset\/Charset;ILjava\/lang\/Object;)Ljava\/util\/List;" {
subgraph cluster_Region_1001560280 {
label = "R(3:(1:3)|4|5)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1047556826 {
label = "IF [B:3:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if ((r2 & 1) != 0) goto L3\l}"];
subgraph cluster_Region_1134448901 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0004|java.nio.charset.Charset r1 = kotlin.text.Charsets.UTF_8\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0006|PHI: r1 \l  PHI: (r1v1 'charset' java.nio.charset.Charset) = (r1v0 'charset' java.nio.charset.Charset), (r1v2 'charset' java.nio.charset.Charset) binds: [B:3:0x0002, B:4:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r0, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"charset\")\ljava.util.List java.util.List\<java.lang.String\> r2 = java.nio.file.Files.readAllLines(r0, r1)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r2, \"readAllLines(this, charset)\")\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|RETURN\l|return r2\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.util.List kotlin.io.path.PathsKt__PathReadWriteKt.readLines$default((r0v0 '$this$readLines_u24default' java.nio.file.Path A[D('$this$readLines_u24default' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 'charset' java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:3:0x0002 \-\> B:5:0x0006\lINLINE_NOT_NEEDED\lEXCEPTIONS:[Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
}

