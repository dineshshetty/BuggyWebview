digraph "CFG forkotlin.io.path.PathsKt__PathReadWriteKt.useLines(Ljava\/nio\/file\/Path;Ljava\/nio\/charset\/Charset;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$useLines' java.nio.file.Path)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"charset\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('charset' java.nio.charset.Charset)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"block\" \l0x000c: INVOKE  (r7 I:java.lang.Object A[D('block' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: INVOKE  (r0 I:java.io.BufferedReader) = \l  (r5 I:java.nio.file.Path A[D('$this$useLines' java.nio.file.Path)])\l  (r6 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset)])\l type: STATIC call: java.nio.file.Files.newBufferedReader(java.nio.file.Path, java.nio.charset.Charset):java.io.BufferedReader A[MD:(java.nio.file.Path, java.nio.charset.Charset):java.io.BufferedReader throws java.io.IOException (c)] (LINE:264)\l0x0013: CHECK_CAST (r0 I:java.io.Closeable) = (java.io.Closeable) (r0 I:??[OBJECT, ARRAY]) \l0x0015: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0032, blocks: (B:3:0x0016), top: B:11:0x0016 \}\lCatch: all \-\> 0x0032\l|0x0016: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) A[TRY_ENTER]\l0x0017: CHECK_CAST (r2 I:java.io.BufferedReader) = (java.io.BufferedReader) (r2 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0032]\l0x0019: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:327)\l0x001a: CONST_STR  (r4 I:java.lang.String) =  \"it\"  (LINE:264)\l0x001c: INVOKE  (r2 I:java.lang.Object A[D('it' java.io.BufferedReader)]), (r4 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[Catch: all \-\> 0x0032, MD:(java.lang.Object, java.lang.String):void (m)]\l0x001f: INVOKE  (r4 I:kotlin.sequences.Sequence) = (r2 I:java.io.BufferedReader A[D('it' java.io.BufferedReader)]) type: STATIC call: kotlin.io.TextStreamsKt.lineSequence(java.io.BufferedReader):kotlin.sequences.Sequence A[Catch: all \-\> 0x0032, MD:(java.io.BufferedReader):kotlin.sequences.Sequence\<java.lang.String\> (m)]\l0x0023: INVOKE  (r4 I:java.lang.Object) = (r7 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)]), (r4 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0032, MD:(P1):R (m), TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0027|0x0027: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x002a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002b: INVOKE  (r0 I:java.io.Closeable), (r2 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l0x002e: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|RETURN\l|0x0031: RETURN  (r4 I:T) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|ExcHandler: all \-\> 0x0032\l|0x0032: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0032]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x0034, blocks: (B:7:0x0033), top: B:13:0x0033 \}\lCatch: all \-\> 0x0034\l|0x0033: THROW  (r2 I:java.lang.Throwable) A[Catch: all \-\> 0x0034, TRY_ENTER, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|ExcHandler: all \-\> 0x0034\l|0x0034: MOVE_EXCEPTION  (r3 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0034]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0038: INVOKE  (r0 I:java.io.Closeable), (r2 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l0x003b: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x003e|0x003e: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static final T kotlin.io.path.PathsKt__PathReadWriteKt.useLines((r5 I:java.nio.file.Path A[D('$this$useLines' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function1\<? super kotlin.sequences.Sequence\<java.lang.String\>, ? extends T\> A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0033 \-\> B:1:?, CROSS_EDGE: B:10:0x003e \-\> B:1:?, CROSS_EDGE: B:13:0x0033 \-\> B:8:0x0034, CROSS_EDGE: B:11:0x0016 \-\> B:6:0x0032\lTryCatch #0 \{all \-\> 0x0032, blocks: (B:3:0x0016), top: B:11:0x0016 \}, TryCatch #1 \{all \-\> 0x0034, blocks: (B:7:0x0033), top: B:13:0x0033 \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/nio\/file\/Path;Ljava\/nio\/charset\/Charset;Lkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/sequences\/Sequence\<Ljava\/lang\/String;\>;+TT;\>;)TT;\lDebug Info:\l  0x0019\-0x0027: r2 'it' Ljava\/io\/BufferedReader;\l  0x001a\-0x0027: r3 '$i$a$\-use\-PathsKt__PathReadWriteKt$useLines$1' I\l  \-1 \-0x0033: r5 '$this$useLines' Ljava\/nio\/file\/Path;\l  \-1 \-0x0033: r6 'charset' Ljava\/nio\/charset\/Charset;\l  \-1 \-0x0033: r7 'block' Lkotlin\/jvm\/functions\/Function1;\l  0x0034\-0x003e: r5 '$this$useLines' Ljava\/nio\/file\/Path;\l  0x0034\-0x003e: r6 'charset' Ljava\/nio\/charset\/Charset;\l  0x0034\-0x003e: r7 'block' Lkotlin\/jvm\/functions\/Function1;\lEXCEPTIONS:[Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_11;
Node_11 -> Node_3;
Node_11 -> Node_6;
Node_3 -> Node_4;
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_12 -> Node_6;
Node_6 -> Node_13;
Node_13 -> Node_7;
Node_13 -> Node_8;
Node_7 -> Node_1;
Node_7 -> Node_14;
Node_14 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

