digraph "CFG forkotlin.io.path.PathsKt__PathReadWriteKt.reader$default(Ljava\/nio\/file\/Path;Ljava\/nio\/charset\/Charset;[Ljava\/nio\/file\/OpenOption;ILjava\/lang\/Object;)Ljava\/io\/InputStreamReader;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:30)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0006 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: SGET  (r1 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset)]) =  kotlin.text.Charsets.UTF_8 java.nio.charset.Charset \l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: CONST_STR  (r3 I:java.lang.String) =  \"\<this\>\" \l0x0008: INVOKE  (r0 I:java.lang.Object A[D('$this$reader_u24default' java.nio.file.Path)]), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000b: CONST_STR  (r3 I:java.lang.String) =  \"charset\" \l0x000d: INVOKE  (r1 I:java.lang.Object A[D('charset' java.nio.charset.Charset)]), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0010: CONST_STR  (r3 I:java.lang.String) =  \"options\" \l0x0012: INVOKE  (r2 I:java.lang.Object A[D('options' java.nio.file.OpenOption[])]), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0015: NEW_INSTANCE  (r3 I:java.io.InputStreamReader) =  java.io.InputStreamReader  (LINE:31)\l0x0017: ARRAY_LENGTH  (r4 I:int) = (r2 I:??[] A[D('options' java.nio.file.OpenOption[])]) \l0x0018: INVOKE  (r4 I:java.lang.Object[]) = (r2 I:java.lang.Object[] A[D('options' java.nio.file.OpenOption[])]), (r4 I:int) type: STATIC call: java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] A[MD:\<T\>:(T[], int):T[] (c)]\l0x001c: CHECK_CAST (r4 I:java.nio.file.OpenOption[]) = (java.nio.file.OpenOption[]) (r4 I:??[OBJECT, ARRAY]) \l0x001e: INVOKE  (r4 I:java.io.InputStream) = (r0 I:java.nio.file.Path A[D('$this$reader_u24default' java.nio.file.Path)]), (r4 I:java.nio.file.OpenOption[]) type: STATIC call: java.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption[]):java.io.InputStream A[MD:(java.nio.file.Path, java.nio.file.OpenOption[]):java.io.InputStream VARARG throws java.io.IOException (c)]\l0x0022: INVOKE  \l  (r3 I:java.io.InputStreamReader)\l  (r4 I:java.io.InputStream)\l  (r1 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset)])\l type: DIRECT call: java.io.InputStreamReader.\<init\>(java.io.InputStream, java.nio.charset.Charset):void A[MD:(java.io.InputStream, java.nio.charset.Charset):void (c)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|RETURN\l|0x0025: RETURN  (r3 I:java.io.InputStreamReader) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.io.InputStreamReader kotlin.io.path.PathsKt__PathReadWriteKt.reader$default((r0 I:java.nio.file.Path A[D('$this$reader_u24default' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.nio.file.OpenOption[] A[D('options' java.nio.file.OpenOption[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:3:0x0002 \-\> B:5:0x0006\lDebug Info:\l  \-1 \-0x0025: r0 '$this$reader_u24default' Ljava\/nio\/file\/Path;\l  \-1 \-0x0025: r1 'charset' Ljava\/nio\/charset\/Charset;\l  \-1 \-0x0025: r2 'options' [Ljava\/nio\/file\/OpenOption;\lEXCEPTIONS:[Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

