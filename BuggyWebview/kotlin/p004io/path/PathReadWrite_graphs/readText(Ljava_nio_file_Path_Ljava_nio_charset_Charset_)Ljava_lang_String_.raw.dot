digraph "CFG forkotlin.io.path.PathsKt__PathReadWriteKt.readText(Ljava\/nio\/file\/Path;Ljava\/nio\/charset\/Charset;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$readText' java.nio.file.Path)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"charset\" \l0x0007: INVOKE  (r5 I:java.lang.Object A[D('charset' java.nio.charset.Charset)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:155)\l0x000b: NEW_ARRAY  (r1 I:java.nio.file.OpenOption[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.nio.file.OpenOption[] \l0x000d: NEW_INSTANCE  (r2 I:java.io.InputStreamReader) =  java.io.InputStreamReader \l0x000f: INVOKE  (r0 I:java.lang.Object[]) = (r1 I:java.lang.Object[]), (r0 I:int) type: STATIC call: java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] A[MD:\<T\>:(T[], int):T[] (c)]\l0x0013: CHECK_CAST (r0 I:java.nio.file.OpenOption[]) = (java.nio.file.OpenOption[]) (r0 I:??[OBJECT, ARRAY]) \l0x0015: INVOKE  (r0 I:java.io.InputStream) = (r4 I:java.nio.file.Path A[D('$this$readText' java.nio.file.Path)]), (r0 I:java.nio.file.OpenOption[]) type: STATIC call: java.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption[]):java.io.InputStream A[MD:(java.nio.file.Path, java.nio.file.OpenOption[]):java.io.InputStream VARARG throws java.io.IOException (c)]\l0x0019: INVOKE  \l  (r2 I:java.io.InputStreamReader)\l  (r0 I:java.io.InputStream)\l  (r5 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset)])\l type: DIRECT call: java.io.InputStreamReader.\<init\>(java.io.InputStream, java.nio.charset.Charset):void A[MD:(java.io.InputStream, java.nio.charset.Charset):void (c)]\l0x001c: CHECK_CAST (r2 I:java.io.Closeable) = (java.io.Closeable) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x002e, blocks: (B:3:0x001e), top: B:13:0x001e \}\lCatch: all \-\> 0x002e\l|0x001e: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) A[TRY_ENTER]\l0x001f: CHECK_CAST (r0 I:java.io.InputStreamReader) = (java.io.InputStreamReader) (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x002e]\l0x0021: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:327)\l0x0022: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('it' java.io.InputStreamReader)])  (LINE:155)\l0x0023: CHECK_CAST (r3 I:java.io.Reader) = (java.io.Reader) (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x002e]\l0x0025: INVOKE  (r3 I:java.lang.String) = (r3 I:java.io.Reader) type: STATIC call: kotlin.io.TextStreamsKt.readText(java.io.Reader):java.lang.String A[Catch: all \-\> 0x002e, MD:(java.io.Reader):java.lang.String (m), TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0029|0x0029: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('it' java.io.InputStreamReader)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002a: INVOKE  (r2 I:java.io.Closeable), (r0 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|RETURN\l|0x002d: RETURN  (r3 I:java.lang.String) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|ExcHandler: all \-\> 0x002e\l|0x002e: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x002e]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0030, blocks: (B:7:0x002f), top: B:11:0x002f \}\lCatch: all \-\> 0x0030\l|0x002f: THROW  (r0 I:java.lang.Throwable) A[Catch: all \-\> 0x0030, TRY_ENTER, TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|ExcHandler: all \-\> 0x0030\l|0x0030: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0030]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: INVOKE  (r2 I:java.io.Closeable), (r0 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.io.path.PathsKt__PathReadWriteKt.readText((r4 I:java.nio.file.Path A[D('$this$readText' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x002f \-\> B:1:?, CROSS_EDGE: B:10:0x0034 \-\> B:1:?, CROSS_EDGE: B:11:0x002f \-\> B:8:0x0030, CROSS_EDGE: B:13:0x001e \-\> B:6:0x002e\lDebug Info:\l  0x0021\-0x0029: r0 'it' Ljava\/io\/InputStreamReader;\l  0x0022\-0x0029: r1 '$i$a$\-use\-PathsKt__PathReadWriteKt$readText$1' I\l  \-1 \-0x002f: r4 '$this$readText' Ljava\/nio\/file\/Path;\l  \-1 \-0x002f: r5 'charset' Ljava\/nio\/charset\/Charset;\l  0x0030\-0x0034: r4 '$this$readText' Ljava\/nio\/file\/Path;\l  0x0030\-0x0034: r5 'charset' Ljava\/nio\/charset\/Charset;\lTryCatch #0 \{all \-\> 0x0030, blocks: (B:7:0x002f), top: B:11:0x002f \}, TryCatch #1 \{all \-\> 0x002e, blocks: (B:3:0x001e), top: B:13:0x001e \}\lEXCEPTIONS:[Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_13;
Node_13 -> Node_3;
Node_13 -> Node_6;
Node_3 -> Node_4;
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_14 -> Node_6;
Node_6 -> Node_11;
Node_11 -> Node_7;
Node_11 -> Node_8;
Node_7 -> Node_1;
Node_7 -> Node_12;
Node_12 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

