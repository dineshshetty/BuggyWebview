digraph "CFG forkotlin.io.path.PathsKt__PathReadWriteKt.useLines$default(Ljava\/nio\/file\/Path;Ljava\/nio\/charset\/Charset;Lkotlin\/jvm\/functions\/Function1;ILjava\/lang\/Object;)Ljava\/lang\/Object;" {
subgraph cluster_Region_291142930 {
label = "R(4:1|(1:3)|4|(3:6|7|8))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|int r8 = 1\l}"];
subgraph cluster_IfRegion_75517180 {
label = "IF [B:3:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if ((r7 & 1) != 0) goto L3\l}"];
subgraph cluster_Region_2108328291 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0004|java.nio.charset.Charset r5 = kotlin.text.Charsets.UTF_8\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0006|PHI: r5 \l  PHI: (r5v1 'charset' java.nio.charset.Charset) = (r5v0 'charset' java.nio.charset.Charset), (r5v2 'charset' java.nio.charset.Charset) binds: [B:3:0x0002, B:4:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"charset\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"block\")\ljava.io.Closeable java.io.BufferedReader r7 = java.nio.file.Files.newBufferedReader(r4, r5)\l}"];
subgraph cluster_TryCatchRegion_2037048492 {
label = "Try: R(3:6|7|8) finally: R(1:11)";
node [shape=record,color=blue];
subgraph cluster_Region_138603873 {
label = "R(3:6|7|8)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0037, blocks: (B:6:0x001c), top: B:14:0x001c \}\lCatch: all \-\> 0x0037\l|java.io.BufferedReader java.io.BufferedReader r1 = r7     \/\/ Catch: java.lang.Throwable \-\> L37\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, \"it\")     \/\/ Catch: java.lang.Throwable \-\> L37\ljava.lang.Object java.lang.Object r3 = r6.invoke(kotlin.p004io.TextStreamsKt.lineSequence(r1))     \/\/ Catch: java.lang.Throwable \-\> L37\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|kotlin.jvm.internal.InlineMarker.finallyStart(1)\lkotlin.p004io.Closeable.closeFinally(r7, null)\lkotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|RETURN\l|return r3\l}"];
}
subgraph cluster_Region_94541824 {
label = "R(1:11) | ExcHandler: all \-\> 0x0037\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0037|ExcHandler: all \-\> 0x0037\l}"];
}
}
}
subgraph cluster_Region_94541824 {
label = "R(1:11) | ExcHandler: all \-\> 0x0037\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0037|ExcHandler: all \-\> 0x0037\l}"];
}
subgraph cluster_Region_54772708 {
label = "R(3:15|16|17) | ExcHandler: all \-\> 0x0039\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0039|DONT_GENERATE\lFINALLY_INSNS\lExcHandler: all \-\> 0x0039\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|DONT_GENERATE\lFINALLY_INSNS\l|kotlin.jvm.internal.InlineMarker.finallyStart(r8)\lkotlin.p004io.Closeable.closeFinally(r7, r0)\lkotlin.jvm.internal.InlineMarker.finallyEnd(r8)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|DONT_GENERATE\lFINALLY_INSNS\l|throw r1\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x001c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0038|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0038|TRY_ENTER\lTRY_LEAVE\lDONT_GENERATE\lFINALLY_INSNS\lTryCatch #1 \{all \-\> 0x0039, blocks: (B:10:0x0038), top: B:16:0x0038 \}\lCatch: all \-\> 0x0039\l|throw r0     \/\/ Catch: java.lang.Throwable \-\> L39\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.lang.Object kotlin.io.path.PathsKt__PathReadWriteKt.useLines$default((r4v0 '$this$useLines_u24default' java.nio.file.Path A[D('$this$useLines_u24default' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'charset' java.nio.charset.Charset A[D('charset' java.nio.charset.Charset), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'block' kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x0038 \-\> B:1:?, CROSS_EDGE: B:13:0x0043 \-\> B:1:?, CROSS_EDGE: B:16:0x0038 \-\> B:11:0x0039, CROSS_EDGE: B:14:0x001c \-\> B:9:0x0037, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0006\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0037, blocks: (B:6:0x001c), top: B:14:0x001c \}, TryCatch #1 \{all \-\> 0x0039, blocks: (B:10:0x0038), top: B:16:0x0038 \}\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Ljava\/io\/IOException;]\lJadxCommentsAttr\{\l DEBUG: \l \-\> Finally have unexpected throw blocks count: 2, expect 1\}\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_16;
Node_9 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_0 -> Node_2;
Node_14 -> Node_6;
Node_14 -> Node_9;
Node_15 -> Node_9;
Node_16 -> Node_10;
Node_16 -> Node_11;
Node_10 -> Node_1;
Node_10 -> Node_17;
Node_17 -> Node_11;
}

