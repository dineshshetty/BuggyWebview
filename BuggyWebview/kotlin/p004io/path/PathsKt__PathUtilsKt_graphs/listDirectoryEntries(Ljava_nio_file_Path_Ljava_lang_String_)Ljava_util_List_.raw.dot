digraph "CFG forkotlin.io.path.PathsKt__PathUtilsKt.listDirectoryEntries(Ljava\/nio\/file\/Path;Ljava\/lang\/String;)Ljava\/util\/List;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$listDirectoryEntries' java.nio.file.Path)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"glob\" \l0x0007: INVOKE  (r5 I:java.lang.Object A[D('glob' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:java.nio.file.DirectoryStream) = \l  (r4 I:java.nio.file.Path A[D('$this$listDirectoryEntries' java.nio.file.Path)])\l  (r5 I:java.lang.String A[D('glob' java.lang.String)])\l type: STATIC call: java.nio.file.Files.newDirectoryStream(java.nio.file.Path, java.lang.String):java.nio.file.DirectoryStream A[MD:(java.nio.file.Path, java.lang.String):java.nio.file.DirectoryStream\<java.nio.file.Path\> throws java.io.IOException (c)] (LINE:398)\l0x000e: CHECK_CAST (r0 I:java.io.Closeable) = (java.io.Closeable) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0010|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:18:0x0010), top: B:26:0x0010 \}\lCatch: all \-\> 0x0025\l|0x0010: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) A[TRY_ENTER]\l0x0011: CHECK_CAST (r1 I:java.nio.file.DirectoryStream) = (java.nio.file.DirectoryStream) (r1 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0025]\l0x0013: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1001)\l0x0014: CONST_STR  (r3 I:java.lang.String) =  \"it\"  (LINE:398)\l0x0016: INVOKE  (r1 I:java.lang.Object A[D('it' java.nio.file.DirectoryStream)]), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[Catch: all \-\> 0x0025, MD:(java.lang.Object, java.lang.String):void (m)]\l0x0019: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('it' java.nio.file.DirectoryStream)]) \l0x001a: CHECK_CAST (r3 I:java.lang.Iterable) = (java.lang.Iterable) (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0025]\l0x001c: INVOKE  (r3 I:java.util.List) = (r3 I:java.lang.Iterable) type: STATIC call: kotlin.collections.CollectionsKt.toList(java.lang.Iterable):java.util.List A[Catch: all \-\> 0x0025, MD:\<T\>:(java.lang.Iterable\<? extends T\>):java.util.List\<T\> (m), TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0020|0x0020: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('it' java.nio.file.DirectoryStream)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0021: INVOKE  (r0 I:java.io.Closeable), (r1 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0024|RETURN\l|0x0024: RETURN  (r3 I:java.util.List\<java.nio.file.Path\>) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ 0x0025|ExcHandler: all \-\> 0x0025\l|0x0025: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0025]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0026|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x0026|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x0027, blocks: (B:22:0x0026), top: B:28:0x0026 \}\lCatch: all \-\> 0x0027\l|0x0026: THROW  (r1 I:java.lang.Throwable) A[Catch: all \-\> 0x0027, TRY_ENTER, TRY_LEAVE]\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x0027|ExcHandler: all \-\> 0x0027\l|0x0027: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0027]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0028|0x0028: INVOKE  (r0 I:java.io.Closeable), (r1 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x002b|0x002b: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<java.nio.file.Path\> kotlin.io.path.PathsKt__PathUtilsKt.listDirectoryEntries((r4 I:java.nio.file.Path A[D('$this$listDirectoryEntries' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[D('glob' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0026 \-\> B:16:?, CROSS_EDGE: B:25:0x002b \-\> B:16:?, CROSS_EDGE: B:28:0x0026 \-\> B:23:0x0027, CROSS_EDGE: B:26:0x0010 \-\> B:21:0x0025\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:18:0x0010), top: B:26:0x0010 \}, TryCatch #1 \{all \-\> 0x0027, blocks: (B:22:0x0026), top: B:28:0x0026 \}\lSIGNATURE: (Ljava\/nio\/file\/Path;Ljava\/lang\/String;)Ljava\/util\/List\<Ljava\/nio\/file\/Path;\>;\lDebug Info:\l  0x0013\-0x0020: r1 'it' Ljava\/nio\/file\/DirectoryStream;\l  0x0014\-0x0020: r2 '$i$a$\-use\-PathsKt__PathUtilsKt$listDirectoryEntries$1' I\l  \-1 \-0x0026: r4 '$this$listDirectoryEntries' Ljava\/nio\/file\/Path;\l  \-1 \-0x0026: r5 'glob' Ljava\/lang\/String;\l  0x0027\-0x002b: r4 '$this$listDirectoryEntries' Ljava\/nio\/file\/Path;\l  0x0027\-0x002b: r5 'glob' Ljava\/lang\/String;\lEXCEPTIONS:[Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_26;
Node_26 -> Node_18;
Node_26 -> Node_21;
Node_18 -> Node_19;
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_16;
Node_27 -> Node_21;
Node_21 -> Node_28;
Node_28 -> Node_22;
Node_28 -> Node_23;
Node_22 -> Node_16;
Node_22 -> Node_29;
Node_29 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_16;
}

