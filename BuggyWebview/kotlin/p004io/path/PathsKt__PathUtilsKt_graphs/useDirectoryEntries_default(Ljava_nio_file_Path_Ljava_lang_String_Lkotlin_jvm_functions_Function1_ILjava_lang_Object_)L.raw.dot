digraph "CFG forkotlin.io.path.PathsKt__PathUtilsKt.useDirectoryEntries$default(Ljava\/nio\/file\/Path;Ljava\/lang\/String;Lkotlin\/jvm\/functions\/Function1;ILjava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:418)\l0x0001: ARITH  (r7 I:??[int, boolean]) = (r7 I:??[int, boolean, short, byte, char]) & (r8 I:??[int, boolean, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0002|0x0002: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0006 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0004|0x0004: CONST_STR  (r5 I:java.lang.String A[D('glob' java.lang.String)]) =  \"*\" \l}"];
Node_23 [shape=record,label="{23\:\ 0x0006|0x0006: CONST_STR  (r7 I:java.lang.String) =  \"\<this\>\" \l0x0008: INVOKE  (r4 I:java.lang.Object A[D('$this$useDirectoryEntries_u24default' java.nio.file.Path)]), (r7 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000b: CONST_STR  (r7 I:java.lang.String) =  \"glob\" \l0x000d: INVOKE  (r5 I:java.lang.Object A[D('glob' java.lang.String)]), (r7 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0010: CONST_STR  (r7 I:java.lang.String) =  \"block\" \l0x0012: INVOKE  (r6 I:java.lang.Object A[D('block' kotlin.jvm.functions.Function1)]), (r7 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0015: INVOKE  (r7 I:java.nio.file.DirectoryStream) = \l  (r4 I:java.nio.file.Path A[D('$this$useDirectoryEntries_u24default' java.nio.file.Path)])\l  (r5 I:java.lang.String A[D('glob' java.lang.String)])\l type: STATIC call: java.nio.file.Files.newDirectoryStream(java.nio.file.Path, java.lang.String):java.nio.file.DirectoryStream A[MD:(java.nio.file.Path, java.lang.String):java.nio.file.DirectoryStream\<java.nio.file.Path\> throws java.io.IOException (c)] (LINE:419)\l0x0019: CHECK_CAST (r7 I:java.io.Closeable) = (java.io.Closeable) (r7 I:??[OBJECT, ARRAY]) \l0x001b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x001c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_24 [shape=record,label="{24\:\ 0x001c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x003a, blocks: (B:24:0x001c), top: B:32:0x001c \}\lCatch: all \-\> 0x003a\l|0x001c: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) A[TRY_ENTER]\l0x001d: CHECK_CAST (r1 I:java.nio.file.DirectoryStream) = (java.nio.file.DirectoryStream) (r1 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x003a]\l0x001f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1001)\l0x0020: CONST_STR  (r3 I:java.lang.String) =  \"it\"  (LINE:419)\l0x0022: INVOKE  (r1 I:java.lang.Object A[D('it' java.nio.file.DirectoryStream)]), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[Catch: all \-\> 0x003a, MD:(java.lang.Object, java.lang.String):void (m)]\l0x0025: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('it' java.nio.file.DirectoryStream)]) \l0x0026: CHECK_CAST (r3 I:java.lang.Iterable) = (java.lang.Iterable) (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x003a]\l0x0028: INVOKE  (r3 I:kotlin.sequences.Sequence) = (r3 I:java.lang.Iterable) type: STATIC call: kotlin.collections.CollectionsKt.asSequence(java.lang.Iterable):kotlin.sequences.Sequence A[Catch: all \-\> 0x003a, MD:\<T\>:(java.lang.Iterable\<? extends T\>):kotlin.sequences.Sequence\<T\> (m)]\l0x002c: INVOKE  (r3 I:java.lang.Object) = (r6 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)]), (r3 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x003a, MD:(P1):R (m), TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0030|0x0030: INVOKE  (r8 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0033: INVOKE  (r7 I:java.io.Closeable), (r0 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l0x0036: INVOKE  (r8 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0039|RETURN\l|0x0039: RETURN  (r3 I:java.lang.Object) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x003a|ExcHandler: all \-\> 0x003a\l|0x003a: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x003a]\l}"];
Node_34 [shape=record,label="{34\:\ 0x003b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_28 [shape=record,label="{28\:\ 0x003b|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x003c, blocks: (B:28:0x003b), top: B:34:0x003b \}\lCatch: all \-\> 0x003c\l|0x003b: THROW  (r0 I:java.lang.Throwable) A[Catch: all \-\> 0x003c, TRY_ENTER, TRY_LEAVE]\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x003c|ExcHandler: all \-\> 0x003c\l|0x003c: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x003c]\l}"];
Node_30 [shape=record,label="{30\:\ 0x003d|0x003d: INVOKE  (r8 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0040: INVOKE  (r7 I:java.io.Closeable), (r0 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l0x0043: INVOKE  (r8 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0046|0x0046: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.lang.Object kotlin.io.path.PathsKt__PathUtilsKt.useDirectoryEntries$default((r4 I:java.nio.file.Path A[D('$this$useDirectoryEntries_u24default' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[D('glob' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:28:0x003b \-\> B:19:?, CROSS_EDGE: B:31:0x0046 \-\> B:19:?, CROSS_EDGE: B:34:0x003b \-\> B:29:0x003c, CROSS_EDGE: B:32:0x001c \-\> B:27:0x003a, CROSS_EDGE: B:21:0x0002 \-\> B:23:0x0006\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x003a, blocks: (B:24:0x001c), top: B:32:0x001c \}, TryCatch #1 \{all \-\> 0x003c, blocks: (B:28:0x003b), top: B:34:0x003b \}\lDebug Info:\l  0x001f\-0x0030: r1 'it' Ljava\/nio\/file\/DirectoryStream;\l  0x0020\-0x0030: r2 '$i$a$\-use\-PathsKt__PathUtilsKt$useDirectoryEntries$1' I\l  \-1 \-0x003b: r4 '$this$useDirectoryEntries_u24default' Ljava\/nio\/file\/Path;\l  \-1 \-0x003b: r5 'glob' Ljava\/lang\/String;\l  \-1 \-0x003b: r6 'block' Lkotlin\/jvm\/functions\/Function1;\l  0x003c\-0x0046: r4 '$this$useDirectoryEntries_u24default' Ljava\/nio\/file\/Path;\l  0x003c\-0x0046: r5 'glob' Ljava\/lang\/String;\l  0x003c\-0x0046: r6 'block' Lkotlin\/jvm\/functions\/Function1;\lEXCEPTIONS:[Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_32;
Node_32 -> Node_24;
Node_32 -> Node_27;
Node_24 -> Node_25;
Node_24 -> Node_33;
Node_25 -> Node_26;
Node_26 -> Node_19;
Node_33 -> Node_27;
Node_27 -> Node_34;
Node_34 -> Node_28;
Node_34 -> Node_29;
Node_28 -> Node_19;
Node_28 -> Node_35;
Node_35 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_19;
}

