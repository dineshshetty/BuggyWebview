digraph "CFG forkotlin.io.path.PathsKt__PathUtilsKt.relativeTo(Ljava\/nio\/file\/Path;Ljava\/nio\/file\/Path;)Ljava\/nio\/file\/Path;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$relativeTo' java.nio.file.Path)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"base\" \l0x0007: INVOKE  (r5 I:java.lang.Object A[D('base' java.nio.file.Path)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_13 [shape=record,label="{13\:\ 0x000b|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IllegalArgumentException \-\> 0x0012, blocks: (B:13:0x000b), top: B:18:0x000b \}\lCatch: IllegalArgumentException \-\> 0x0012\l|0x000b: SGET  (r0 I:kotlin.io.path.PathRelativizer) =  kotlin.io.path.PathRelativizer.INSTANCE kotlin.io.path.PathRelativizer A[Catch: IllegalArgumentException \-\> 0x0012, TRY_ENTER] (LINE:123)\l0x000d: INVOKE  (r0 I:java.nio.file.Path) = \l  (r0 I:kotlin.io.path.PathRelativizer)\l  (r4 I:java.nio.file.Path A[D('$this$relativeTo' java.nio.file.Path)])\l  (r5 I:java.nio.file.Path A[D('base' java.nio.file.Path)])\l type: VIRTUAL call: kotlin.io.path.PathRelativizer.tryRelativeTo(java.nio.file.Path, java.nio.file.Path):java.nio.file.Path A[Catch: IllegalArgumentException \-\> 0x0012, MD:(java.nio.file.Path, java.nio.file.Path):java.nio.file.Path (m), TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:java.nio.file.Path)  (LINE:126)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_15 [shape=record,label="{15\:\ 0x0012|ExcHandler: IllegalArgumentException \-\> 0x0012\l|0x0012: MOVE_EXCEPTION  (r0 I:java.lang.IllegalArgumentException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalArgumentException \-\> 0x0012] (LINE:124)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|0x0013: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:125)\l0x0015: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0017: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x001a: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.IllegalArgumentException A[D('e' java.lang.IllegalArgumentException)]) type: VIRTUAL call: java.lang.IllegalArgumentException.getMessage():java.lang.String A[MD:():java.lang.String (s)]\l0x001e: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0021: CONST_STR  (r3 I:java.lang.String) =  \"nthis path: \" \l0x0023: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0026: INVOKE  (r2 I:java.lang.StringBuilder), (r4 I:java.lang.Object A[D('$this$relativeTo' java.nio.file.Path)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0029: CONST_STR  (r3 I:java.lang.String) =  \"nbase path: \" \l0x002b: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002e: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.Object A[D('base' java.nio.file.Path)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0031: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0035: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('e' java.lang.IllegalArgumentException)]) \l0x0036: CHECK_CAST (r3 I:java.lang.Throwable) = (java.lang.Throwable) (r3 I:??[OBJECT, ARRAY]) \l0x0038: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r2 I:java.lang.String), (r3 I:java.lang.Throwable) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|0x003b: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt.relativeTo((r4 I:java.nio.file.Path A[D('$this$relativeTo' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.nio.file.Path A[D('base' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x003b \-\> B:11:?, CROSS_EDGE: B:18:0x000b \-\> B:15:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x003b: r0 'e' Ljava\/lang\/IllegalArgumentException;\l  \-1 \-0x003b: r4 '$this$relativeTo' Ljava\/nio\/file\/Path;\l  \-1 \-0x003b: r5 'base' Ljava\/nio\/file\/Path;\lTryCatch #0 \{IllegalArgumentException \-\> 0x0012, blocks: (B:13:0x000b), top: B:18:0x000b \}\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_18;
Node_18 -> Node_13;
Node_18 -> Node_15;
Node_13 -> Node_14;
Node_13 -> Node_19;
Node_14 -> Node_11;
Node_19 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_11;
}

