digraph "CFG forkotlin.io.path.PathsKt__PathUtilsKt.relativeToOrNull(Ljava\/nio\/file\/Path;Ljava\/nio\/file\/Path;)Ljava\/nio\/file\/Path;" {
subgraph cluster_Region_656493298 {
label = "R(2:1|(1:5))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"base\")\l}"];
subgraph cluster_TryCatchRegion_2085970016 {
label = "Try: R(1:5) catches: R(1:9)";
node [shape=record,color=blue];
subgraph cluster_Region_357789054 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.p004io.path.PathUtils.INSTANCE.tryRelativeTo(r3, r4)\l}"];
}
subgraph cluster_Region_515245089 {
label = "R(1:9) | ExcHandler: IllegalArgumentException \-\> 0x0012\l";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0018|RETURN\lORIG_RETURN\l|return null\l}"];
}
}
}
subgraph cluster_Region_515245089 {
label = "R(1:9) | ExcHandler: IllegalArgumentException \-\> 0x0012\l";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0018|RETURN\lORIG_RETURN\l|return null\l}"];
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000b|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IllegalArgumentException \-\> 0x0012, blocks: (B:14:0x000b), top: B:19:0x000b \}\lCatch: IllegalArgumentException \-\> 0x0012\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0012|ExcHandler: IllegalArgumentException \-\> 0x0012\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0013}"];
MethodNode[shape=record,label="{public static final java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt.relativeToOrNull((r3v0 '$this$relativeToOrNull' java.nio.file.Path A[D('$this$relativeToOrNull' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'base' java.nio.file.Path A[D('base' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0013 \-\> B:18:0x0018, CROSS_EDGE: B:19:0x000b \-\> B:16:0x0012\lINLINE_NOT_NEEDED\lTryCatch #0 \{IllegalArgumentException \-\> 0x0012, blocks: (B:14:0x000b), top: B:19:0x000b \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_13 -> Node_19;
Node_21 -> Node_12;
Node_18 -> Node_12;
Node_18 -> Node_12;
Node_11 -> Node_13;
Node_19 -> Node_14;
Node_19 -> Node_16;
Node_14 -> Node_20;
Node_14 -> Node_21;
Node_20 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

