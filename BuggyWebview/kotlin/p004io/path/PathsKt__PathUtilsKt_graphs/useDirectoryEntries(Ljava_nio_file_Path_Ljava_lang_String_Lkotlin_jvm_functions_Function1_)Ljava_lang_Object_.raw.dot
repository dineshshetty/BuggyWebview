digraph "CFG forkotlin.io.path.PathsKt__PathUtilsKt.useDirectoryEntries(Ljava\/nio\/file\/Path;Ljava\/lang\/String;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$useDirectoryEntries' java.nio.file.Path)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"glob\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('glob' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"block\" \l0x000c: INVOKE  (r7 I:java.lang.Object A[D('block' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: INVOKE  (r0 I:java.nio.file.DirectoryStream) = \l  (r5 I:java.nio.file.Path A[D('$this$useDirectoryEntries' java.nio.file.Path)])\l  (r6 I:java.lang.String A[D('glob' java.lang.String)])\l type: STATIC call: java.nio.file.Files.newDirectoryStream(java.nio.file.Path, java.lang.String):java.nio.file.DirectoryStream A[MD:(java.nio.file.Path, java.lang.String):java.nio.file.DirectoryStream\<java.nio.file.Path\> throws java.io.IOException (c)] (LINE:419)\l0x0013: CHECK_CAST (r0 I:java.io.Closeable) = (java.io.Closeable) (r0 I:??[OBJECT, ARRAY]) \l0x0015: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_18 [shape=record,label="{18\:\ 0x0016|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0035, blocks: (B:18:0x0016), top: B:26:0x0016 \}\lCatch: all \-\> 0x0035\l|0x0016: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) A[TRY_ENTER]\l0x0017: CHECK_CAST (r2 I:java.nio.file.DirectoryStream) = (java.nio.file.DirectoryStream) (r2 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0035]\l0x0019: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1001)\l0x001a: CONST_STR  (r4 I:java.lang.String) =  \"it\"  (LINE:419)\l0x001c: INVOKE  (r2 I:java.lang.Object A[D('it' java.nio.file.DirectoryStream)]), (r4 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[Catch: all \-\> 0x0035, MD:(java.lang.Object, java.lang.String):void (m)]\l0x001f: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('it' java.nio.file.DirectoryStream)]) \l0x0020: CHECK_CAST (r4 I:java.lang.Iterable) = (java.lang.Iterable) (r4 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0035]\l0x0022: INVOKE  (r4 I:kotlin.sequences.Sequence) = (r4 I:java.lang.Iterable) type: STATIC call: kotlin.collections.CollectionsKt.asSequence(java.lang.Iterable):kotlin.sequences.Sequence A[Catch: all \-\> 0x0035, MD:\<T\>:(java.lang.Iterable\<? extends T\>):kotlin.sequences.Sequence\<T\> (m)]\l0x0026: INVOKE  (r4 I:java.lang.Object) = (r7 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)]), (r4 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0035, MD:(P1):R (m), TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x002a|0x002a: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x002d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002e: INVOKE  (r0 I:java.io.Closeable), (r2 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l0x0031: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0034|RETURN\l|0x0034: RETURN  (r4 I:T) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ 0x0035|ExcHandler: all \-\> 0x0035\l|0x0035: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0035]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0036|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x0036|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x0037, blocks: (B:22:0x0036), top: B:28:0x0036 \}\lCatch: all \-\> 0x0037\l|0x0036: THROW  (r2 I:java.lang.Throwable) A[Catch: all \-\> 0x0037, TRY_ENTER, TRY_LEAVE]\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x0037|ExcHandler: all \-\> 0x0037\l|0x0037: MOVE_EXCEPTION  (r3 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0037]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0038|0x0038: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x003b: INVOKE  (r0 I:java.io.Closeable), (r2 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l0x003e: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0041|0x0041: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static final T kotlin.io.path.PathsKt__PathUtilsKt.useDirectoryEntries((r5 I:java.nio.file.Path A[D('$this$useDirectoryEntries' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[D('glob' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function1\<? super kotlin.sequences.Sequence\<? extends java.nio.file.Path\>, ? extends T\> A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0036 \-\> B:16:?, CROSS_EDGE: B:25:0x0041 \-\> B:16:?, CROSS_EDGE: B:28:0x0036 \-\> B:23:0x0037, CROSS_EDGE: B:26:0x0016 \-\> B:21:0x0035\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0035, blocks: (B:18:0x0016), top: B:26:0x0016 \}, TryCatch #1 \{all \-\> 0x0037, blocks: (B:22:0x0036), top: B:28:0x0036 \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/nio\/file\/Path;Ljava\/lang\/String;Lkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/sequences\/Sequence\<+Ljava\/nio\/file\/Path;\>;+TT;\>;)TT;\lDebug Info:\l  0x0019\-0x002a: r2 'it' Ljava\/nio\/file\/DirectoryStream;\l  0x001a\-0x002a: r3 '$i$a$\-use\-PathsKt__PathUtilsKt$useDirectoryEntries$1' I\l  \-1 \-0x0036: r5 '$this$useDirectoryEntries' Ljava\/nio\/file\/Path;\l  \-1 \-0x0036: r6 'glob' Ljava\/lang\/String;\l  \-1 \-0x0036: r7 'block' Lkotlin\/jvm\/functions\/Function1;\l  0x0037\-0x0041: r5 '$this$useDirectoryEntries' Ljava\/nio\/file\/Path;\l  0x0037\-0x0041: r6 'glob' Ljava\/lang\/String;\l  0x0037\-0x0041: r7 'block' Lkotlin\/jvm\/functions\/Function1;\lEXCEPTIONS:[Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_26;
Node_26 -> Node_18;
Node_26 -> Node_21;
Node_18 -> Node_19;
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_16;
Node_27 -> Node_21;
Node_21 -> Node_28;
Node_28 -> Node_22;
Node_28 -> Node_23;
Node_22 -> Node_16;
Node_22 -> Node_29;
Node_29 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_16;
}

