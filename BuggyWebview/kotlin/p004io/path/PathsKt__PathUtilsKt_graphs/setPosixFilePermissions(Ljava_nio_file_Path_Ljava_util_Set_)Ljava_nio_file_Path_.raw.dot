digraph "CFG forkotlin.io.path.PathsKt__PathUtilsKt.setPosixFilePermissions(Ljava\/nio\/file\/Path;Ljava\/util\/Set;)Ljava\/nio\/file\/Path;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$setPosixFilePermissions' java.nio.file.Path)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"value\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('value' java.util.Set)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:java.nio.file.Path) = \l  (r2 I:java.nio.file.Path A[D('$this$setPosixFilePermissions' java.nio.file.Path)])\l  (r3 I:java.util.Set A[D('value' java.util.Set)])\l type: STATIC call: java.nio.file.Files.setPosixFilePermissions(java.nio.file.Path, java.util.Set):java.nio.file.Path A[MD:(java.nio.file.Path, java.util.Set\<java.nio.file.attribute.PosixFilePermission\>):java.nio.file.Path throws java.io.IOException (c)] (LINE:785)\l0x000e: CONST_STR  (r1 I:java.lang.String) =  \"setPosixFilePermissions(this, value)\" \l0x0010: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:java.nio.file.Path) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt.setPosixFilePermissions((r2 I:java.nio.file.Path A[D('$this$setPosixFilePermissions' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.util.Set\<? extends java.nio.file.attribute.PosixFilePermission\> A[D('value' java.util.Set), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0013: r2 '$this$setPosixFilePermissions' Ljava\/nio\/file\/Path;\l  \-1 \-0x0013: r3 'value' Ljava\/util\/Set;\lEXCEPTIONS:[Ljava\/io\/IOException;]\lSIGNATURE: (Ljava\/nio\/file\/Path;Ljava\/util\/Set\<+Ljava\/nio\/file\/attribute\/PosixFilePermission;\>;)Ljava\/nio\/file\/Path;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

