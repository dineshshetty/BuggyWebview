digraph "CFG forkotlin.io.path.PathsKt__PathUtilsKt.relativeToOrNull(Ljava\/nio\/file\/Path;Ljava\/nio\/file\/Path;)Ljava\/nio\/file\/Path;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$relativeToOrNull' java.nio.file.Path)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"base\" \l0x0007: INVOKE  (r4 I:java.lang.Object A[D('base' java.nio.file.Path)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x000b|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IllegalArgumentException \-\> 0x0012, blocks: (B:14:0x000b), top: B:19:0x000b \}\lCatch: IllegalArgumentException \-\> 0x0012\l|0x000b: SGET  (r0 I:kotlin.io.path.PathRelativizer) =  kotlin.io.path.PathRelativizer.INSTANCE kotlin.io.path.PathRelativizer A[Catch: IllegalArgumentException \-\> 0x0012, TRY_ENTER] (LINE:152)\l0x000d: INVOKE  (r0 I:java.nio.file.Path) = \l  (r0 I:kotlin.io.path.PathRelativizer)\l  (r3 I:java.nio.file.Path A[D('$this$relativeToOrNull' java.nio.file.Path)])\l  (r4 I:java.nio.file.Path A[D('base' java.nio.file.Path)])\l type: VIRTUAL call: kotlin.io.path.PathRelativizer.tryRelativeTo(java.nio.file.Path, java.nio.file.Path):java.nio.file.Path A[Catch: IllegalArgumentException \-\> 0x0012, MD:(java.nio.file.Path, java.nio.file.Path):java.nio.file.Path (m), TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0018: RETURN  (r0 I:java.nio.file.Path A[D('e' java.lang.IllegalArgumentException)]) A[SYNTHETIC] (LINE:155)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|ExcHandler: IllegalArgumentException \-\> 0x0012\l|0x0012: MOVE_EXCEPTION  (r0 I:java.lang.IllegalArgumentException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalArgumentException \-\> 0x0012] (LINE:153)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0013|0x0013: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:154)\l0x0014: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0015: CHECK_CAST (r2 I:java.nio.file.Path) = (java.nio.file.Path) (r2 I:??[OBJECT, ARRAY]) \l0x0017: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('e' java.lang.IllegalArgumentException)]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: RETURN  (r0 I:java.nio.file.Path A[D('e' java.lang.IllegalArgumentException)])  (LINE:155)\l}"];
MethodNode[shape=record,label="{public static final java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt.relativeToOrNull((r3 I:java.nio.file.Path A[D('$this$relativeToOrNull' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.nio.file.Path A[D('base' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0013 \-\> B:18:0x0018, CROSS_EDGE: B:19:0x000b \-\> B:16:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0018: r0 'e' Ljava\/lang\/IllegalArgumentException;\l  \-1 \-0x0018: r3 '$this$relativeToOrNull' Ljava\/nio\/file\/Path;\l  \-1 \-0x0018: r4 'base' Ljava\/nio\/file\/Path;\lTryCatch #0 \{IllegalArgumentException \-\> 0x0012, blocks: (B:14:0x000b), top: B:19:0x000b \}\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_19;
Node_19 -> Node_14;
Node_19 -> Node_16;
Node_14 -> Node_20;
Node_14 -> Node_21;
Node_20 -> Node_16;
Node_21 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_12;
}

