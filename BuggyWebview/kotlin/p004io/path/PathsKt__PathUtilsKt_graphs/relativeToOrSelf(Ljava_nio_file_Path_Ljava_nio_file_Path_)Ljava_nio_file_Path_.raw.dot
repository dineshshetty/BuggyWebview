digraph "CFG forkotlin.io.path.PathsKt__PathUtilsKt.relativeToOrSelf(Ljava\/nio\/file\/Path;Ljava\/nio\/file\/Path;)Ljava\/nio\/file\/Path;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$relativeToOrSelf' java.nio.file.Path)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"base\" \l0x0007: INVOKE  (r2 I:java.lang.Object A[D('base' java.nio.file.Path)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:java.nio.file.Path) = \l  (r1 I:java.nio.file.Path A[D('$this$relativeToOrSelf' java.nio.file.Path)])\l  (r2 I:java.nio.file.Path A[D('base' java.nio.file.Path)])\l type: STATIC call: kotlin.io.path.PathsKt.relativeToOrNull(java.nio.file.Path, java.nio.file.Path):java.nio.file.Path A[MD:(java.nio.file.Path, java.nio.file.Path):java.nio.file.Path (m)] (LINE:139)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0010|0x0010: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$relativeToOrSelf' java.nio.file.Path)]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0011|RETURN\lORIG_RETURN\l|0x0011: RETURN  (r0 I:java.nio.file.Path) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0011: RETURN  (r0 I:java.nio.file.Path) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public static final java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt.relativeToOrSelf((r1 I:java.nio.file.Path A[D('$this$relativeToOrSelf' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.nio.file.Path A[D('base' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x000e \-\> B:12:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0011: r1 '$this$relativeToOrSelf' Ljava\/nio\/file\/Path;\l  \-1 \-0x0011: r2 'base' Ljava\/nio\/file\/Path;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

