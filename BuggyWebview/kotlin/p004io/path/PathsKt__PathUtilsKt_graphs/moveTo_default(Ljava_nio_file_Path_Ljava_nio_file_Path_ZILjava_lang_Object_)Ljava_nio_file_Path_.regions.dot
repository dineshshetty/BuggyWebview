digraph "CFG forkotlin.io.path.PathsKt__PathUtilsKt.moveTo$default(Ljava\/nio\/file\/Path;Ljava\/nio\/file\/Path;ZILjava\/lang\/Object;)Ljava\/nio\/file\/Path;" {
subgraph cluster_Region_683911399 {
label = "R(4:(1:3)|4|7|8)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_768665737 {
label = "IF [B:14:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0002|if ((r4 & 2) != 0) goto L3\l}"];
subgraph cluster_Region_1937292759 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0004|r3 = false\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x0005|PHI: r3 \l  PHI: (r3v1 'overwrite' boolean) = (r3v0 'overwrite' boolean), (r3v2 'overwrite' boolean) binds: [B:14:0x0002, B:15:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r2, \"target\")\l}"];
Node_20 [shape=record,label="{20\:\ 0x0020|PHI: r5 \l  PHI: (r5v3 java.nio.file.CopyOption[] A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|java.nio.file.CopyOption[] r4 = r3 ? new java.nio.file.CopyOption[]\{java.nio.file.StandardCopyOption.REPLACE_EXISTING\} : new java.nio.file.CopyOption[0]\ljava.nio.file.Path java.nio.file.Path r5 = java.nio.file.Files.move(r1, r2, (java.nio.file.CopyOption[]) java.util.Arrays.copyOf(r4, r4.length))\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r5, \"move(this, target, *options)\")\l}"];
Node_21 [shape=record,label="{21\:\ 0x0031|RETURN\l|return r5\l}"];
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0000}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0010}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0012}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x001c}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt.moveTo$default((r1v0 '$this$moveTo_u24default' java.nio.file.Path A[D('$this$moveTo_u24default' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'target' java.nio.file.Path A[D('target' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'overwrite' boolean A[D('overwrite' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:19:0x001c \-\> B:20:0x0020, CROSS_EDGE: B:14:0x0002 \-\> B:16:0x0005\lINLINE_NOT_NEEDED\lEXCEPTIONS:[Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_11;Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_17 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
}

