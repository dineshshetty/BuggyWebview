digraph "CFG forkotlin.io.path.PathsKt__PathUtilsKt.forEachDirectoryEntry$default(Ljava\/nio\/file\/Path;Ljava\/lang\/String;Lkotlin\/jvm\/functions\/Function1;ILjava\/lang\/Object;)V" {
subgraph cluster_Region_260711086 {
label = "R(4:1|(1:3)|4|(4:6|(1:9)|11|12))";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0000|int r11 = 1\l}"];
subgraph cluster_IfRegion_2074606889 {
label = "IF [B:26:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0002|if ((r10 & 1) != 0) goto L3\l}"];
subgraph cluster_Region_1614437267 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0004|java.lang.String r8 = \"*\"\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x0006|PHI: r8 \l  PHI: (r8v1 'glob' java.lang.String) = (r8v0 'glob' java.lang.String), (r8v2 'glob' java.lang.String) binds: [B:26:0x0002, B:27:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"glob\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"action\")\ljava.io.Closeable java.nio.file.DirectoryStream r10 = java.nio.file.Files.newDirectoryStream(r7, r8)\l}"];
subgraph cluster_TryCatchRegion_569810929 {
label = "Try: R(4:6|(1:9)|11|12) finally: R(1:16)";
node [shape=record,color=blue];
subgraph cluster_Region_635899395 {
label = "R(4:6|(1:9)|11|12)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x001c|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0049, blocks: (B:29:0x001c, B:30:0x002d, B:32:0x0033, B:33:0x003b), top: B:41:0x001c \}\lCatch: all \-\> 0x0049\l|java.nio.file.DirectoryStream java.nio.file.DirectoryStream r1 = r10     \/\/ Catch: java.lang.Throwable \-\> L49\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, \"it\")     \/\/ Catch: java.lang.Throwable \-\> L49\ljava.lang.Iterable java.nio.file.DirectoryStream\<java.nio.file.Path\> r3 = r1     \/\/ Catch: java.lang.Throwable \-\> L49\ljava.util.Iterator r5 = r3.iterator()     \/\/ Catch: java.lang.Throwable \-\> L49\l\l}"];
subgraph cluster_LoopRegion_1635927031 {
label = "LOOP:0: (1:9)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0031|java.lang.Object \lif (r5.hasNext() != false) goto L9\l}"];
subgraph cluster_Region_629711963 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0033|LOOP_END\lTryCatch #0 \{all \-\> 0x0049, blocks: (B:29:0x001c, B:30:0x002d, B:32:0x0033, B:33:0x003b), top: B:41:0x001c \}\lLOOP:0: B:30:0x002d\-\>B:32:0x0033\lCatch: all \-\> 0x0049\l|r9.invoke(r6)     \/\/ Catch: java.lang.Throwable \-\> L49\l}"];
}
}
Node_33 [shape=record,label="{33\:\ 0x003b|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0049, blocks: (B:29:0x001c, B:30:0x002d, B:32:0x0033, B:33:0x003b), top: B:41:0x001c \}\lCatch: all \-\> 0x0049\l|kotlin.Unit kotlin.Unit r1 = kotlin.Unit.INSTANCE     \/\/ Catch: java.lang.Throwable \-\> L49\l}"];
Node_34 [shape=record,label="{34\:\ 0x003f|kotlin.jvm.internal.InlineMarker.finallyStart(1)\lkotlin.p004io.Closeable.closeFinally(r10, null)\lkotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
}
subgraph cluster_Region_391943610 {
label = "R(1:16) | ExcHandler: all \-\> 0x0049\l";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0049|ExcHandler: all \-\> 0x0049\l}"];
}
}
}
subgraph cluster_Region_391943610 {
label = "R(1:16) | ExcHandler: all \-\> 0x0049\l";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0049|ExcHandler: all \-\> 0x0049\l}"];
}
subgraph cluster_Region_37788087 {
label = "R(3:20|21|22) | ExcHandler: all \-\> 0x004b\l";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x004b|DONT_GENERATE\lFINALLY_INSNS\lExcHandler: all \-\> 0x004b\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_39 [shape=record,label="{39\:\ 0x004c|DONT_GENERATE\lFINALLY_INSNS\l|kotlin.jvm.internal.InlineMarker.finallyStart(r11)\lkotlin.p004io.Closeable.closeFinally(r10, r0)\lkotlin.jvm.internal.InlineMarker.finallyEnd(r11)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0055|DONT_GENERATE\lFINALLY_INSNS\l|throw r1\l}"];
}
Node_23 [shape=record,color=red,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x001c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x002d|LOOP_START\lTryCatch #0 \{all \-\> 0x0049, blocks: (B:29:0x001c, B:30:0x002d, B:32:0x0033, B:33:0x003b), top: B:41:0x001c \}\lLOOP:0: B:30:0x002d\-\>B:32:0x0033\lCatch: all \-\> 0x0049\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x003b|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0048}"];
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_42 [shape=record,color=red,label="{42\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x004a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x004a|TRY_ENTER\lTRY_LEAVE\lDONT_GENERATE\lFINALLY_INSNS\lTryCatch #1 \{all \-\> 0x004b, blocks: (B:37:0x004a), top: B:43:0x004a \}\lCatch: all \-\> 0x004b\l|throw r0     \/\/ Catch: java.lang.Throwable \-\> L4b\l}"];
Node_44 [shape=record,color=red,label="{44\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ void kotlin.io.path.PathsKt__PathUtilsKt.forEachDirectoryEntry$default((r7v0 '$this$forEachDirectoryEntry_u24default' java.nio.file.Path A[D('$this$forEachDirectoryEntry_u24default' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'glob' java.lang.String A[D('glob' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'action' kotlin.jvm.functions.Function1 A[D('action' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lBACK_EDGE: B:32:0x0033 \-\> B:30:0x002d, CROSS_EDGE: B:37:0x004a \-\> B:24:?, CROSS_EDGE: B:40:0x0055 \-\> B:24:?, CROSS_EDGE: B:43:0x004a \-\> B:38:0x004b, CROSS_EDGE: B:41:0x001c \-\> B:36:0x0049, CROSS_EDGE: B:26:0x0002 \-\> B:28:0x0006\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0049, blocks: (B:29:0x001c, B:30:0x002d, B:32:0x0033, B:33:0x003b), top: B:41:0x001c \}, TryCatch #1 \{all \-\> 0x004b, blocks: (B:37:0x004a), top: B:43:0x004a \}\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Ljava\/io\/IOException;]\lJadxCommentsAttr\{\l DEBUG: \l \-\> Finally have unexpected throw blocks count: 2, expect 1\}\l}"];
MethodNode -> Node_23;Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_41;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_31 -> Node_45[style=dashed];
Node_32 -> Node_30;
Node_33 -> Node_34;
Node_33 -> Node_42;
Node_34 -> Node_35;
Node_36 -> Node_43;
Node_36 -> Node_43;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_24;
Node_23 -> Node_25;
Node_41 -> Node_29;
Node_41 -> Node_36;
Node_30 -> Node_31;
Node_45 -> Node_33;
Node_35 -> Node_24;
Node_42 -> Node_36;
Node_43 -> Node_37;
Node_43 -> Node_38;
Node_37 -> Node_24;
Node_37 -> Node_44;
Node_44 -> Node_38;
}

