digraph "CFG forkotlin.io.path.PathsKt__PathUtilsKt.createSymbolicLinkPointingTo(Ljava\/nio\/file\/Path;Ljava\/nio\/file\/Path;[Ljava\/nio\/file\/attribute\/FileAttribute;)Ljava\/nio\/file\/Path;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r2, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"target\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"attributes\")\ljava.nio.file.Path r0 = java.nio.file.Files.createSymbolicLink(r2, r3, (java.nio.file.attribute.FileAttribute[]) java.util.Arrays.copyOf(r4, r4.length))\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"createSymbolicLink(this, target, *attributes)\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|RETURN\l|return r0\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt.createSymbolicLinkPointingTo((r2v0 '$this$createSymbolicLinkPointingTo' java.nio.file.Path A[D('$this$createSymbolicLinkPointingTo' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'target' java.nio.file.Path A[D('target' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'attributes' java.nio.file.attribute.FileAttribute\<?\>[] A[D('attributes' java.nio.file.attribute.FileAttribute[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lEXCEPTIONS:[Ljava\/io\/IOException;]\lSIGNATURE: (Ljava\/nio\/file\/Path;Ljava\/nio\/file\/Path;[Ljava\/nio\/file\/attribute\/FileAttribute\<*\>;)Ljava\/nio\/file\/Path;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

