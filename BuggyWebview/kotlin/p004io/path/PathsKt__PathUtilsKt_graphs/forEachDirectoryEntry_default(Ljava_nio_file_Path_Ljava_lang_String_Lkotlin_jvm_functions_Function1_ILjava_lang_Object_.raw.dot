digraph "CFG forkotlin.io.path.PathsKt__PathUtilsKt.forEachDirectoryEntry$default(Ljava\/nio\/file\/Path;Ljava\/lang\/String;Lkotlin\/jvm\/functions\/Function1;ILjava\/lang\/Object;)V" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:437)\l0x0001: ARITH  (r10 I:??[int, boolean]) = (r10 I:??[int, boolean, short, byte, char]) & (r11 I:??[int, boolean, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0002|0x0002: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0006 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0004|0x0004: CONST_STR  (r8 I:java.lang.String A[D('glob' java.lang.String)]) =  \"*\" \l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|0x0006: CONST_STR  (r10 I:java.lang.String) =  \"\<this\>\" \l0x0008: INVOKE  (r7 I:java.lang.Object A[D('$this$forEachDirectoryEntry_u24default' java.nio.file.Path)]), (r10 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000b: CONST_STR  (r10 I:java.lang.String) =  \"glob\" \l0x000d: INVOKE  (r8 I:java.lang.Object A[D('glob' java.lang.String)]), (r10 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0010: CONST_STR  (r10 I:java.lang.String) =  \"action\" \l0x0012: INVOKE  (r9 I:java.lang.Object A[D('action' kotlin.jvm.functions.Function1)]), (r10 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0015: INVOKE  (r10 I:java.nio.file.DirectoryStream) = \l  (r7 I:java.nio.file.Path A[D('$this$forEachDirectoryEntry_u24default' java.nio.file.Path)])\l  (r8 I:java.lang.String A[D('glob' java.lang.String)])\l type: STATIC call: java.nio.file.Files.newDirectoryStream(java.nio.file.Path, java.lang.String):java.nio.file.DirectoryStream A[MD:(java.nio.file.Path, java.lang.String):java.nio.file.DirectoryStream\<java.nio.file.Path\> throws java.io.IOException (c)] (LINE:438)\l0x0019: CHECK_CAST (r10 I:java.io.Closeable) = (java.io.Closeable) (r10 I:??[OBJECT, ARRAY]) \l0x001b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x001c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x001c|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0049, blocks: (B:29:0x001c, B:30:0x002d, B:32:0x0033, B:33:0x003b), top: B:41:0x001c \}\lCatch: all \-\> 0x0049\l|0x001c: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) A[TRY_ENTER]\l0x001d: CHECK_CAST (r1 I:java.nio.file.DirectoryStream) = (java.nio.file.DirectoryStream) (r1 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0049]\l0x001f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1001)\l0x0020: CONST_STR  (r3 I:java.lang.String) =  \"it\"  (LINE:438)\l0x0022: INVOKE  (r1 I:java.lang.Object A[D('it' java.nio.file.DirectoryStream)]), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[Catch: all \-\> 0x0049, MD:(java.lang.Object, java.lang.String):void (m)]\l0x0025: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('it' java.nio.file.DirectoryStream)]) \l0x0026: CHECK_CAST (r3 I:java.lang.Iterable) = (java.lang.Iterable) (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0049]\l0x0028: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0029: INVOKE  (r5 I:java.util.Iterator) = (r3 I:java.lang.Iterable A[D('$this$forEach$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[Catch: all \-\> 0x0049, MD:():java.util.Iterator\<T\> (c)] (LINE:1002)\l}"];
Node_30 [shape=record,label="{30\:\ 0x002d|LOOP_START\lTryCatch #0 \{all \-\> 0x0049, blocks: (B:29:0x001c, B:30:0x002d, B:32:0x0033, B:33:0x003b), top: B:41:0x001c \}\lLOOP:0: B:30:0x002d\-\>B:32:0x0033\lCatch: all \-\> 0x0049\l|0x002d: INVOKE  (r6 I:boolean) = (r5 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[Catch: all \-\> 0x0049, MD:():boolean (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0031|0x0031: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x003b \l}"];
Node_32 [shape=record,label="{32\:\ 0x0033|LOOP_END\lTryCatch #0 \{all \-\> 0x0049, blocks: (B:29:0x001c, B:30:0x002d, B:32:0x0033, B:33:0x003b), top: B:41:0x001c \}\lLOOP:0: B:30:0x002d\-\>B:32:0x0033\lCatch: all \-\> 0x0049\l|0x0033: INVOKE  (r6 I:java.lang.Object) = (r5 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[Catch: all \-\> 0x0049, MD:():E (c)]\l0x0037: INVOKE  \l  (r9 I:kotlin.jvm.functions.Function1 A[D('action' kotlin.jvm.functions.Function1)])\l  (r6 I:java.lang.Object A[D('element$iv' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0049, MD:(P1):R (m)]\l0x003a: GOTO  \-\> 0x002d \l}"];
Node_45 [shape=record,label="{45\:\ 0x003b|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x003b|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0049, blocks: (B:29:0x001c, B:30:0x002d, B:32:0x0033, B:33:0x003b), top: B:41:0x001c \}\lCatch: all \-\> 0x0049\l|0x003d: SGET  (r1 I:kotlin.Unit A[D('it' java.nio.file.DirectoryStream)]) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch: all \-\> 0x0049, TRY_LEAVE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x003f|0x003f: INVOKE  (r11 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0042: INVOKE  (r10 I:java.io.Closeable), (r0 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l0x0045: INVOKE  (r11 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0048|RETURN\l|0x0048: RETURN   \l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_36 [shape=record,label="{36\:\ 0x0049|ExcHandler: all \-\> 0x0049\l|0x0049: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0049]\l}"];
Node_43 [shape=record,label="{43\:\ 0x004a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_37 [shape=record,label="{37\:\ 0x004a|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x004b, blocks: (B:37:0x004a), top: B:43:0x004a \}\lCatch: all \-\> 0x004b\l|0x004a: THROW  (r0 I:java.lang.Throwable) A[Catch: all \-\> 0x004b, TRY_ENTER, TRY_LEAVE]\l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_38 [shape=record,label="{38\:\ 0x004b|ExcHandler: all \-\> 0x004b\l|0x004b: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x004b]\l}"];
Node_39 [shape=record,label="{39\:\ 0x004c|0x004c: INVOKE  (r11 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x004f: INVOKE  (r10 I:java.io.Closeable), (r0 I:java.lang.Throwable) type: STATIC call: kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void A[MD:(java.io.Closeable, java.lang.Throwable):void (m)]\l0x0052: INVOKE  (r11 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0055|0x0055: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ void kotlin.io.path.PathsKt__PathUtilsKt.forEachDirectoryEntry$default((r7 I:java.nio.file.Path A[D('$this$forEachDirectoryEntry_u24default' java.nio.file.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[D('glob' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.jvm.functions.Function1 A[D('action' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lBACK_EDGE: B:32:0x0033 \-\> B:30:0x002d, CROSS_EDGE: B:37:0x004a \-\> B:24:?, CROSS_EDGE: B:40:0x0055 \-\> B:24:?, CROSS_EDGE: B:43:0x004a \-\> B:38:0x004b, CROSS_EDGE: B:41:0x001c \-\> B:36:0x0049, CROSS_EDGE: B:26:0x0002 \-\> B:28:0x0006\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0049, blocks: (B:29:0x001c, B:30:0x002d, B:32:0x0033, B:33:0x003b), top: B:41:0x001c \}, TryCatch #1 \{all \-\> 0x004b, blocks: (B:37:0x004a), top: B:43:0x004a \}\lDebug Info:\l  0x0037\-0x003b: r6 'element$iv' Ljava\/lang\/Object;\l  0x0028\-0x003c: r3 '$this$forEach$iv' Ljava\/lang\/Iterable;\l  0x0029\-0x003c: r4 '$i$f$forEach' I\l  0x001f\-0x003d: r1 'it' Ljava\/nio\/file\/DirectoryStream;\l  0x0020\-0x003d: r2 '$i$a$\-use\-PathsKt__PathUtilsKt$forEachDirectoryEntry$1' I\l  \-1 \-0x004a: r7 '$this$forEachDirectoryEntry_u24default' Ljava\/nio\/file\/Path;\l  \-1 \-0x004a: r8 'glob' Ljava\/lang\/String;\l  \-1 \-0x004a: r9 'action' Lkotlin\/jvm\/functions\/Function1;\l  0x004b\-0x0055: r7 '$this$forEachDirectoryEntry_u24default' Ljava\/nio\/file\/Path;\l  0x004b\-0x0055: r8 'glob' Ljava\/lang\/String;\l  0x004b\-0x0055: r9 'action' Lkotlin\/jvm\/functions\/Function1;\lEXCEPTIONS:[Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_41;
Node_41 -> Node_29;
Node_41 -> Node_36;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_45;
Node_32 -> Node_30;
Node_45 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_42;
Node_34 -> Node_35;
Node_35 -> Node_24;
Node_42 -> Node_36;
Node_36 -> Node_43;
Node_43 -> Node_37;
Node_43 -> Node_38;
Node_37 -> Node_24;
Node_37 -> Node_44;
Node_44 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_24;
}

