digraph "CFG forkotlin.io.FileSystemException.\<init\>(Ljava\/io\/File;Ljava\/io\/File;Ljava\/lang\/String;ILkotlin\/jvm\/internal\/DefaultConstructorMarker;)V" {
subgraph cluster_Region_1871673597 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000b|PHI: r4 \l  PHI: (r4v1 java.lang.String A[REMOVE]) = (r4v0 java.lang.String) binds: [B:16:0x0008] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|this(r2, (r5 & 2) != 0 ? null : r3, (r5 & 4) != 0 ? null : r4)\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0003}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0005}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0006|PHI: r3 \l  PHI: (r3v1 java.io.File A[REMOVE]) = (r3v0 java.io.File) binds: [B:13:0x0003] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0008}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x000a}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000e}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* synthetic *\/ void kotlin.io.FileSystemException.\<init\>((r1v0 'this' kotlin.io.FileSystemException A[IMMUTABLE_TYPE, THIS]), (r2v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlin.jvm.internal.DefaultConstructorMarker A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:16:0x0008 \-\> B:18:0x000b, CROSS_EDGE: B:13:0x0003 \-\> B:15:0x0006\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_18 -> Node_19;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_19 -> Node_11;
}

