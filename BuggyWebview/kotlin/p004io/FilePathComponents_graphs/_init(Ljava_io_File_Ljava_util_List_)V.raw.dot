digraph "CFG forkotlin.io.FilePathComponents.\<init\>(Ljava\/io\/File;Ljava\/util\/List;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"root\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('root' java.io.File)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"segments\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('segments' java.util.List)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r1 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:94)\l0x000d: IPUT  (r2 I:java.io.File A[D('root' java.io.File)]), (r1 I:kotlin.io.FilePathComponents) kotlin.io.FilePathComponents.root java.io.File  (LINE:95)\l0x000f: IPUT  (r3 I:java.util.List\<java.io.File\> A[D('segments' java.util.List)]), (r1 I:kotlin.io.FilePathComponents) kotlin.io.FilePathComponents.segments java.util.List \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|0x0011: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.io.FilePathComponents.\<init\>((r1 'this' I:kotlin.io.FilePathComponents A[IMMUTABLE_TYPE, THIS]), (r2 I:java.io.File A[D('root' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.util.List\<? extends java.io.File\> A[D('segments' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0011: r2 'root' Ljava\/io\/File;\l  \-1 \-0x0011: r3 'segments' Ljava\/util\/List;\lSIGNATURE: (Ljava\/io\/File;Ljava\/util\/List\<+Ljava\/io\/File;\>;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

