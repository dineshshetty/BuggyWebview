digraph "CFG forkotlin.io.FilePathComponents.copy$default(Lkotlin\/io\/FilePathComponents;Ljava\/io\/File;Ljava\/util\/List;ILjava\/lang\/Object;)Lkotlin\/io\/FilePathComponents;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: ARITH  (r4 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0006 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IGET  (r1 I:java.io.File) = (r0 I:kotlin.io.FilePathComponents) kotlin.io.FilePathComponents.root java.io.File \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000c \l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|0x000a: IGET  (r2 I:java.util.List\<java.io.File\>) = (r0 I:kotlin.io.FilePathComponents) kotlin.io.FilePathComponents.segments java.util.List \l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|0x000c: INVOKE  (r0 I:kotlin.io.FilePathComponents) = (r0 I:kotlin.io.FilePathComponents), (r1 I:java.io.File), (r2 I:java.util.List) type: VIRTUAL call: kotlin.io.FilePathComponents.copy(java.io.File, java.util.List):kotlin.io.FilePathComponents A[MD:(java.io.File, java.util.List\<? extends java.io.File\>):kotlin.io.FilePathComponents (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:kotlin.io.FilePathComponents) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ kotlin.io.FilePathComponents kotlin.io.FilePathComponents.copy$default((r0 I:kotlin.io.FilePathComponents A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.util.List A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:16:0x0008 \-\> B:18:0x000c, CROSS_EDGE: B:13:0x0002 \-\> B:15:0x0006\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

