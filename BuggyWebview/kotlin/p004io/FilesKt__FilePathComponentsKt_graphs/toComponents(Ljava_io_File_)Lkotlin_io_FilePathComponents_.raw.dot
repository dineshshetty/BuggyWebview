digraph "CFG forkotlin.io.FilesKt__FilePathComponentsKt.toComponents(Ljava\/io\/File;)Lkotlin\/io\/FilePathComponents;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r14 I:java.lang.Object A[D('$this$toComponents' java.io.File)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:java.lang.String) = (r14 I:java.io.File A[D('$this$toComponents' java.io.File)]) type: VIRTUAL call: java.io.File.getPath():java.lang.String A[MD:():java.lang.String (c)] (LINE:129)\l0x0009: CONST_STR  (r1 I:java.lang.String) =  \"path\"  (LINE:130)\l0x000b: INVOKE  (r0 I:java.lang.Object A[D('path' java.lang.String)]), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000e: INVOKE  (r1 I:int) = (r0 I:java.lang.String A[D('path' java.lang.String)]) type: STATIC call: kotlin.io.FilesKt__FilePathComponentsKt.getRootLength$FilesKt__FilePathComponentsKt(java.lang.String):int A[MD:(java.lang.String):int (m)]\l0x0012: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:131)\l0x0013: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.String A[D('path' java.lang.String)]), (r2 I:int), (r1 I:int A[D('rootLength' int)]) type: VIRTUAL call: java.lang.String.substring(int, int):java.lang.String A[MD:(int, int):java.lang.String (c)]\l0x0017: CONST_STR  (r4 I:java.lang.String) =  \"this as java.lang.Stringâ€¦ing(startIndex, endIndex)\" \l0x0019: INVOKE  (r3 I:java.lang.Object), (r4 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x001c: INVOKE  (r4 I:java.lang.String) = (r0 I:java.lang.String A[D('path' java.lang.String)]), (r1 I:int A[D('rootLength' int)]) type: VIRTUAL call: java.lang.String.substring(int):java.lang.String A[MD:(int):java.lang.String (c)] (LINE:132)\l0x0020: CONST_STR  (r5 I:java.lang.String) =  \"this as java.lang.String).substring(startIndex)\" \l0x0022: INVOKE  (r4 I:java.lang.Object), (r5 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0025: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('subPath' java.lang.String)])  (LINE:133)\l0x0026: CHECK_CAST (r5 I:java.lang.CharSequence) = (java.lang.CharSequence) (r5 I:??[OBJECT, ARRAY]) \l0x0028: INVOKE  (r5 I:int) = (r5 I:java.lang.CharSequence) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x002c: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x002d|0x002d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0031 \l}"];
Node_4 [shape=record,label="{4\:\ 0x002f|0x002f: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|0x0032: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0039 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: INVOKE  (r2 I:java.util.List) =  type: STATIC call: kotlin.collections.CollectionsKt.emptyList():java.util.List A[MD:\<T\>:():java.util.List\<T\> (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x007b|0x007c: NEW_INSTANCE  (r5 I:kotlin.io.FilePathComponents) =  kotlin.io.FilePathComponents  (LINE:134)\l0x007e: NEW_INSTANCE  (r6 I:java.io.File) =  java.io.File \l0x0080: INVOKE  (r6 I:java.io.File), (r3 I:java.lang.String A[D('rootName' java.lang.String)]) type: DIRECT call: java.io.File.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x0083: INVOKE  (r5 I:kotlin.io.FilePathComponents), (r6 I:java.io.File), (r2 I:java.util.List A[D('list' java.util.List)]) type: DIRECT call: kotlin.io.FilePathComponents.\<init\>(java.io.File, java.util.List):void A[MD:(java.io.File, java.util.List\<? extends java.io.File\>):void (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0086|RETURN\l|0x0086: RETURN  (r5 I:kotlin.io.FilePathComponents) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('subPath' java.lang.String)]) \l0x003a: CHECK_CAST (r5 I:java.lang.CharSequence) = (java.lang.CharSequence) (r5 I:??[OBJECT, ARRAY]) \l0x003c: NEW_ARRAY  (r6 I:char[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: char[] \l0x003e: SGET  (r7 I:char) =  java.io.File.separatorChar char \l0x0040: APUT  (r6 I:char[] A[IMMUTABLE_TYPE]), (r2 I:??[int, short, byte, char]), (r7 I:char A[IMMUTABLE_TYPE]) \l0x0042: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0043: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0044: CONST  (r9 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l0x0045: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0046: INVOKE  (r2 I:java.util.List) = (r5 I:java.lang.CharSequence), (r6 I:char[]), (r7 I:boolean), (r8 I:int), (r9 I:int), (r10 I:java.lang.Object) type: STATIC call: kotlin.text.StringsKt.split$default(java.lang.CharSequence, char[], boolean, int, int, java.lang.Object):java.util.List A[MD:(java.lang.CharSequence, char[], boolean, int, int, java.lang.Object):java.util.List (m)]\l0x004a: CHECK_CAST (r2 I:java.lang.Iterable) = (java.lang.Iterable) (r2 I:??[OBJECT, ARRAY]) \l0x004c: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x004d: NEW_INSTANCE  (r6 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:149)\l0x004f: CONST  (r7 I:??[int, float, short, byte, char]) = (10 ??[int, float, short, byte, char]) \l0x0051: INVOKE  (r7 I:int) = (r2 I:java.lang.Iterable A[D('$this$map$iv' java.lang.Iterable)]), (r7 I:int) type: STATIC call: kotlin.collections.CollectionsKt.collectionSizeOrDefault(java.lang.Iterable, int):int A[MD:\<T\>:(java.lang.Iterable\<? extends T\>, int):int (m)]\l0x0055: INVOKE  (r6 I:java.util.ArrayList), (r7 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0058: CHECK_CAST (r6 I:java.util.Collection) = (java.util.Collection) (r6 I:??[OBJECT, ARRAY]) \l0x005a: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$map$iv' java.lang.Iterable)]) \l0x005b: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x005c: INVOKE  (r9 I:java.util.Iterator) = (r7 I:java.lang.Iterable A[D('$this$mapTo$iv$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:150)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0060|LOOP_START\lLOOP:0: B:9:0x0060\-\>B:11:0x0066\l|0x0060: INVOKE  (r10 I:boolean) = (r9 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0064|0x0064: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0077 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0066|LOOP_END\lLOOP:0: B:9:0x0060\-\>B:11:0x0066\l|0x0066: INVOKE  (r10 I:java.lang.Object) = (r9 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x006a: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('item$iv$iv' java.lang.Object)])  (LINE:151)\l0x006b: CHECK_CAST (r11 I:java.lang.String) = (java.lang.String) (r11 I:??[OBJECT, ARRAY]) \l0x006d: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x006e: NEW_INSTANCE  (r13 I:java.io.File) =  java.io.File  (LINE:133)\l0x0070: INVOKE  (r13 I:java.io.File), (r11 I:java.lang.String A[D('p0' java.lang.String)]) type: DIRECT call: java.io.File.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x0073: INVOKE  (r6 I:java.util.Collection A[D('destination$iv$iv' java.util.Collection)]), (r13 I:java.lang.Object) type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0077|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0077|0x0078: CHECK_CAST (r6 I:java.util.List) = (java.util.List) (r6 I:??[OBJECT, ARRAY] A[D('destination$iv$iv' java.util.Collection)]) \l0x007a: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('$this$map$iv' java.lang.Iterable)]) = (r6 I:??[OBJECT, ARRAY])  (LINE:149)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|0x0031: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final kotlin.io.FilePathComponents kotlin.io.FilesKt__FilePathComponentsKt.toComponents((r14 I:java.io.File A[D('$this$toComponents' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x0066 \-\> B:9:0x0060, CROSS_EDGE: B:12:0x0077 \-\> B:13:0x007b, CROSS_EDGE: B:5:0x0031 \-\> B:6:0x0032\lDebug Info:\l  0x006d\-0x0073: r11 'p0' Ljava\/lang\/String;\l  0x006e\-0x0073: r12 '$i$a$\-map\-FilesKt__FilePathComponentsKt$toComponents$list$1' I\l  0x006a\-0x0077: r10 'item$iv$iv' Ljava\/lang\/Object;\l  0x005a\-0x0078: r6 'destination$iv$iv' Ljava\/util\/Collection;\l  0x005b\-0x0078: r7 '$this$mapTo$iv$iv' Ljava\/lang\/Iterable;\l  0x005c\-0x0078: r8 '$i$f$mapTo' I\l  0x004c\-0x007b: r2 '$this$map$iv' Ljava\/lang\/Iterable;\l  0x004d\-0x007b: r5 '$i$f$map' I\l  0x0009\-0x0086: r0 'path' Ljava\/lang\/String;\l  0x0012\-0x0086: r1 'rootLength' I\l  0x007c\-0x0086: r2 'list' Ljava\/util\/List;\l  0x001c\-0x0086: r3 'rootName' Ljava\/lang\/String;\l  0x0025\-0x0086: r4 'subPath' Ljava\/lang\/String;\l  \-1 \-0x0086: r14 '$this$toComponents' Ljava\/io\/File;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_9;
Node_15 -> Node_12;
Node_12 -> Node_13;
Node_5 -> Node_6;
}

