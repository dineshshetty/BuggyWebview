digraph "CFG forkotlin.text.CharCategory.Companion.valueOf(I)Lkotlin\/text\/CharCategory;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0001|0x0001: NEW_INSTANCE  (r0 I:kotlin.ranges.IntRange) =  kotlin.ranges.IntRange  (LINE:172)\l0x0003: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: CONST  (r2 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l0x0006: INVOKE  (r0 I:kotlin.ranges.IntRange), (r1 I:int), (r2 I:int) type: DIRECT call: kotlin.ranges.IntRange.\<init\>(int, int):void A[MD:(int, int):void (m)]\l0x0009: INVOKE  (r0 I:boolean) = (r0 I:kotlin.ranges.IntRange), (r4 I:int A[D('category' int)]) type: VIRTUAL call: kotlin.ranges.IntRange.contains(int):boolean A[MD:(int):boolean (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0016 \l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|0x000f: INVOKE  (r0 I:kotlin.text.CharCategory[]) =  type: STATIC call: kotlin.text.CharCategory.values():kotlin.text.CharCategory[] A[MD:():kotlin.text.CharCategory[] (m)]\l0x0013: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('category' int)]) \l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x002d: RETURN  (r0 I:kotlin.text.CharCategory) A[SYNTHETIC] (LINE:175)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0016|0x0016: NEW_INSTANCE  (r0 I:kotlin.ranges.IntRange) =  kotlin.ranges.IntRange  (LINE:173)\l0x0018: CONST  (r1 I:??[int, float, short, byte, char]) = (18 ??[int, float, short, byte, char]) \l0x001a: CONST  (r2 I:??[int, float, short, byte, char]) = (30 ??[int, float, short, byte, char]) \l0x001c: INVOKE  (r0 I:kotlin.ranges.IntRange), (r1 I:int), (r2 I:int) type: DIRECT call: kotlin.ranges.IntRange.\<init\>(int, int):void A[MD:(int, int):void (m)]\l0x001f: INVOKE  (r0 I:boolean) = (r0 I:kotlin.ranges.IntRange), (r4 I:int A[D('category' int)]) type: VIRTUAL call: kotlin.ranges.IntRange.contains(int):boolean A[MD:(int):boolean (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0023|0x0023: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x002e \l}"];
Node_19 [shape=record,label="{19\:\ 0x0025|0x0025: INVOKE  (r0 I:kotlin.text.CharCategory[]) =  type: STATIC call: kotlin.text.CharCategory.values():kotlin.text.CharCategory[] A[MD:():kotlin.text.CharCategory[] (m)]\l0x0029: ARITH  (r1 I:int) = (r4 I:int A[D('category' int)]) + (\-1 int) \l0x002b: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x002d|RETURN\lORIG_RETURN\l|0x002d: RETURN  (r0 I:kotlin.text.CharCategory)  (LINE:175)\l}"];
Node_21 [shape=record,label="{21\:\ 0x002e|0x002e: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:174)\l0x0030: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0032: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0035: CONST_STR  (r2 I:java.lang.String) =  \"Category #\" \l0x0037: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003a: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:int A[D('category' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x003d: CONST_STR  (r2 I:java.lang.String) =  \" is not defined.\" \l0x003f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0042: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0046: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0049|0x0049: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final kotlin.text.CharCategory kotlin.text.CharCategory.Companion.valueOf((r3 'this' I:kotlin.text.CharCategory$Companion A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('category' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0025 \-\> B:20:0x002d, CROSS_EDGE: B:22:0x0049 \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0049: r4 'category' I\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_23;
Node_23 -> Node_13;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_13;
Node_21 -> Node_22;
Node_22 -> Node_13;
}

