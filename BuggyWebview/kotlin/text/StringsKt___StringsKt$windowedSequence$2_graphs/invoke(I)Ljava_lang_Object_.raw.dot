digraph "CFG forkotlin.text.StringsKt___StringsKt$windowedSequence$2.invoke(I)Ljava\/lang\/Object;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r4 I:kotlin.text.StringsKt___StringsKt$windowedSequence$2) kotlin.text.StringsKt___StringsKt$windowedSequence$2.$size int  (LINE:2403)\l0x0002: ARITH  (r0 I:int) = (r0 I:int) + (r5 I:int A[D('index' int)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0003|0x0003: IF  (r0 I:??[int, byte, short, char] A[D('end' int)]) \< (0 ??[int, byte, short, char])  \-\> B:19:0x0010  (LINE:2404)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|0x0005: IGET  (r1 I:java.lang.CharSequence) = (r4 I:kotlin.text.StringsKt___StringsKt$windowedSequence$2) kotlin.text.StringsKt___StringsKt$windowedSequence$2.$this_windowedSequence java.lang.CharSequence \l0x0007: INVOKE  (r1 I:int) = (r1 I:java.lang.CharSequence) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|0x000b: IF  (r0 I:??[int, byte, short, char] A[D('end' int)]) \<= (r1 I:??[int, byte, short, char])  \-\> B:18:0x000e \l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|0x000e: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('end' int)]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|0x0016: IGET  (r2 I:kotlin.jvm.functions.Function1\<java.lang.CharSequence, R\>) = (r4 I:kotlin.text.StringsKt___StringsKt$windowedSequence$2) kotlin.text.StringsKt___StringsKt$windowedSequence$2.$transform kotlin.jvm.functions.Function1  (LINE:2405)\l0x0018: IGET  (r3 I:java.lang.CharSequence) = (r4 I:kotlin.text.StringsKt___StringsKt$windowedSequence$2) kotlin.text.StringsKt___StringsKt$windowedSequence$2.$this_windowedSequence java.lang.CharSequence \l0x001a: INVOKE  (r3 I:java.lang.CharSequence) = (r3 I:java.lang.CharSequence), (r5 I:int A[D('index' int)]), (r1 I:int A[D('coercedEnd' int)]) type: INTERFACE call: java.lang.CharSequence.subSequence(int, int):java.lang.CharSequence A[MD:(int, int):java.lang.CharSequence (c)]\l0x001e: INVOKE  (r2 I:java.lang.Object) = (r2 I:kotlin.jvm.functions.Function1), (r3 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0022|RETURN\l|0x0022: RETURN  (r2 I:R) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: IGET  (r1 I:java.lang.CharSequence) = (r4 I:kotlin.text.StringsKt___StringsKt$windowedSequence$2) kotlin.text.StringsKt___StringsKt$windowedSequence$2.$this_windowedSequence java.lang.CharSequence \l0x0012: INVOKE  (r1 I:int) = (r1 I:java.lang.CharSequence) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
MethodNode[shape=record,label="{public final R kotlin.text.StringsKt___StringsKt$windowedSequence$2.invoke((r4 'this' I:kotlin.text.StringsKt___StringsKt$windowedSequence$2 A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0010 \-\> B:20:0x0016, CROSS_EDGE: B:14:0x0003 \-\> B:19:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0003\-0x0022: r0 'end' I\l  0x0016\-0x0022: r1 'coercedEnd' I\l  \-1 \-0x0022: r5 'index' I\lSIGNATURE: (I)TR;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_19 -> Node_20;
}

