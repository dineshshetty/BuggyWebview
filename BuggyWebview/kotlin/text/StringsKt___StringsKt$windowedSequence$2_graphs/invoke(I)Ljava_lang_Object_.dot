digraph "CFG forkotlin.text.StringsKt___StringsKt$windowedSequence$2.invoke(I)Ljava\/lang\/Object;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|int r0 = r4.$size + r5\l}"];
Node_14 [shape=record,label="{14\:\ 0x0003|if (r0 \< 0) goto L9\l}"];
Node_15 [shape=record,label="{15\:\ 0x0005}"];
Node_16 [shape=record,label="{16\:\ 0x000b|if (r0 \<= r4.$this_windowedSequence.length()) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|r1 = r0\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|PHI: r1 \l  PHI: (r1v2 'coercedEnd' int) = (r1v1 'coercedEnd' int), (r1v5 'coercedEnd' int) binds: [B:19:0x0010, B:18:0x000e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0022|RETURN\l|return r4.$transform.invoke(r4.$this_windowedSequence.subSequence(r5, r1))\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|int r1 = r4.$this_windowedSequence.length()\l}"];
MethodNode[shape=record,label="{public final R kotlin.text.StringsKt___StringsKt$windowedSequence$2.invoke((r4v0 'this' kotlin.text.StringsKt___StringsKt$windowedSequence$2 A[IMMUTABLE_TYPE, THIS]), (r5v0 'index' int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0010 \-\> B:20:0x0016, CROSS_EDGE: B:14:0x0003 \-\> B:19:0x0010\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r2v1, types: [R, java.lang.Object]\}\lSIGNATURE: (I)TR;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_19 -> Node_20;
}

