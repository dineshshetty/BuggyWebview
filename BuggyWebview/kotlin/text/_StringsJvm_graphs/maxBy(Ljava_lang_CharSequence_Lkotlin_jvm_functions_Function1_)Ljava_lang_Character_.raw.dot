digraph "CFG forkotlin.text.StringsKt___StringsJvmKt.maxBy(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Character;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r11 I:java.lang.Object A[D('$this$maxBy' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x0007: INVOKE  (r12 I:java.lang.Object A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('$this$maxBy' java.lang.CharSequence)])  (LINE:45)\l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: INVOKE  (r3 I:int) = (r1 I:java.lang.CharSequence A[D('$this$maxByOrNull$iv' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:109)\l0x0011: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0012: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001c \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|SYNTHETIC\lRETURN\l|0x001a: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0065: RETURN  (r3 I:java.lang.Character A[D('maxElem$iv' char)]) A[SYNTHETIC] (LINE:45)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: INVOKE  (r3 I:char) = (r1 I:java.lang.CharSequence A[D('$this$maxByOrNull$iv' java.lang.CharSequence)]), (r5 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)] (LINE:110)\l0x0020: INVOKE  (r5 I:int) = (r1 I:java.lang.CharSequence A[D('$this$maxByOrNull$iv' java.lang.CharSequence)]) type: STATIC call: kotlin.text.StringsKt.getLastIndex(java.lang.CharSequence):int A[MD:(java.lang.CharSequence):int (m)] (LINE:111)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lastIndex$iv' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002c  (LINE:112)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: INVOKE  (r4 I:java.lang.Character) = (r3 I:char A[D('maxElem$iv' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)]\l0x002a: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('maxElem$iv' char)]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0065: RETURN  (r3 I:java.lang.Character A[D('maxElem$iv' char)]) A[SYNTHETIC] (LINE:45)\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: INVOKE  (r6 I:java.lang.Character) = (r3 I:char A[D('maxElem$iv' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:113)\l0x0030: INVOKE  (r6 I:java.lang.Object) = (r12 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r6 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0034: CHECK_CAST (r6 I:java.lang.Comparable) = (java.lang.Comparable) (r6 I:??[OBJECT, ARRAY]) \l0x0036: NEW_INSTANCE  (r7 I:kotlin.ranges.IntRange) =  kotlin.ranges.IntRange  (LINE:114)\l0x0038: INVOKE  (r7 I:kotlin.ranges.IntRange), (r4 I:int), (r5 I:int A[D('lastIndex$iv' int)]) type: DIRECT call: kotlin.ranges.IntRange.\<init\>(int, int):void A[MD:(int, int):void (m)]\l0x003b: INVOKE  (r4 I:kotlin.collections.IntIterator) = (r7 I:kotlin.ranges.IntRange) type: VIRTUAL call: kotlin.ranges.IntRange.iterator():kotlin.collections.IntIterator A[MD:():java.util.Iterator\<java.lang.Integer\> (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|LOOP_START\lLOOP:0: B:12:0x003f\-\>B:21:0x003f\l|0x003f: INVOKE  (r7 I:boolean) = (r4 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|0x0043: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0060 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|0x0045: INVOKE  (r7 I:int) = (r4 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.nextInt():int A[MD:():int (m)]\l0x0049: INVOKE  (r8 I:char) = (r1 I:java.lang.CharSequence A[D('$this$maxByOrNull$iv' java.lang.CharSequence)]), (r7 I:int A[D('i$iv' int)]) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)] (LINE:115)\l0x004d: INVOKE  (r9 I:java.lang.Character) = (r8 I:char A[D('e$iv' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:116)\l0x0051: INVOKE  (r9 I:java.lang.Object) = (r12 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r9 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0055: CHECK_CAST (r9 I:java.lang.Comparable) = (java.lang.Comparable) (r9 I:??[OBJECT, ARRAY]) \l0x0057: INVOKE  (r10 I:int) = \l  (r6 I:java.lang.Comparable A[D('maxValue$iv' java.lang.Comparable)])\l  (r9 I:java.lang.Object A[D('v$iv' java.lang.Comparable)])\l type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)] (LINE:117)\l}"];
Node_15 [shape=record,label="{15\:\ 0x005b|0x005b: IF  (r10 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:22:0x003f \l}"];
Node_20 [shape=record,label="{20\:\ 0x005d|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x005d|0x005d: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxElem$iv' char)]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('e$iv' char)])  (LINE:118)\l0x005e: MOVE  (r6 I:??[OBJECT, ARRAY] A[D('maxValue$iv' java.lang.Comparable)]) = (r9 I:??[OBJECT, ARRAY] A[D('v$iv' java.lang.Comparable)])  (LINE:119)\l}"];
Node_23 [shape=record,label="{23\:\ 0x003f|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x003f|LOOP_END\lSYNTHETIC\lLOOP:0: B:12:0x003f\-\>B:21:0x003f\l}"];
Node_22 [shape=record,label="{22\:\ 0x003f|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0060|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0060|0x0060: INVOKE  (r4 I:java.lang.Character) = (r3 I:char A[D('maxElem$iv' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:122)\l0x0064: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('maxElem$iv' char)]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0065|RETURN\lORIG_RETURN\l|0x0065: RETURN  (r3 I:java.lang.Character A[D('maxElem$iv' char)])  (LINE:45)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ java.lang.Character kotlin.text.StringsKt___StringsJvmKt.maxBy((r11 I:java.lang.CharSequence A[D('$this$maxBy' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlin.jvm.functions.Function1\<? super java.lang.Character, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use maxByOrNull instead., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=this.maxByOrNull(selector), imports=[[]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{errorSince=1.5, hiddenSince=1.6, warningSince=1.4\}\}\}\lCROSS_EDGE: B:10:0x0026 \-\> B:18:0x0065, BACK_EDGE: B:15:0x005b \-\> B:12:0x003f, BACK_EDGE: B:16:0x005d \-\> B:12:0x003f, CROSS_EDGE: B:17:0x0060 \-\> B:18:0x0065, CROSS_EDGE: B:5:0x0017 \-\> B:6:0x0018\lDebug Info:\l  0x0049\-0x005f: r7 'i$iv' I\l  0x004d\-0x005f: r8 'e$iv' C\l  0x0057\-0x005f: r9 'v$iv' Ljava\/lang\/Comparable;\l  0x000c\-0x0065: r1 '$this$maxByOrNull$iv' Ljava\/lang\/CharSequence;\l  0x000d\-0x0065: r2 '$i$f$maxByOrNull' I\l  0x0020\-0x0065: r3 'maxElem$iv' C\l  0x0024\-0x0065: r5 'lastIndex$iv' I\l  0x0036\-0x0065: r6 'maxValue$iv' Ljava\/lang\/Comparable;\l  0x000b\-0x0065: r0 '$i$f$maxBy' I\l  \-1 \-0x0065: r11 '$this$maxBy' Ljava\/lang\/CharSequence;\l  \-1 \-0x0065: r12 'selector' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>]\lSIGNATURE: \<R::Ljava\/lang\/Comparable\<\-TR;\>;\>(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;+TR;\>;)Ljava\/lang\/Character;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_25;
Node_25 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_20[style=dashed];
Node_15 -> Node_22;
Node_20 -> Node_16;
Node_16 -> Node_23;
Node_23 -> Node_21;
Node_21 -> Node_12;
Node_22 -> Node_21;
Node_19 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_5 -> Node_6;
}

