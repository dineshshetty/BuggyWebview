digraph "CFG forkotlin.text.StringsKt___StringsJvmKt.sumOfBigInteger(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/math\/BigInteger;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$sumOf' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[long, double]) = (0 ??[long, double])  (LINE:101)\l0x000c: INVOKE  (r0 I:java.math.BigInteger) = (r0 I:long) type: STATIC call: java.math.BigInteger.valueOf(long):java.math.BigInteger A[MD:(long):java.math.BigInteger (c)]\l0x0010: CONST_STR  (r1 I:java.lang.String) =  \"valueOf(this.toLong())\" \l0x0012: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0015: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:102)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|LOOP_START\lLOOP:0: B:3:0x0016\-\>B:5:0x001c\l|0x0016: INVOKE  (r2 I:int) = (r5 I:java.lang.CharSequence A[D('$this$sumOf' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IF  (r1 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:7:0x0037 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|LOOP_END\lLOOP:0: B:3:0x0016\-\>B:5:0x001c\l|0x001c: INVOKE  (r2 I:char) = (r5 I:java.lang.CharSequence A[D('$this$sumOf' java.lang.CharSequence)]), (r1 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x0020: INVOKE  (r3 I:java.lang.Character) = (r2 I:char A[D('element' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:103)\l0x0024: INVOKE  (r3 I:java.lang.Object) = (r6 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r3 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0028: CHECK_CAST (r3 I:java.math.BigInteger) = (java.math.BigInteger) (r3 I:??[OBJECT, ARRAY]) \l0x002a: INVOKE  (r3 I:java.math.BigInteger) = (r0 I:java.math.BigInteger A[D('sum' java.math.BigInteger)]), (r3 I:java.math.BigInteger) type: VIRTUAL call: java.math.BigInteger.add(java.math.BigInteger):java.math.BigInteger A[MD:(java.math.BigInteger):java.math.BigInteger (c)]\l0x002e: CONST_STR  (r4 I:java.lang.String) =  \"this.add(other)\" \l0x0030: INVOKE  (r3 I:java.lang.Object), (r4 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0033: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('sum' java.math.BigInteger)]) = (r3 I:??[OBJECT, ARRAY]) \l0x0034: ARITH  (r1 I:int) = (r1 I:int) + (1 int)  (LINE:102)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x0037|RETURN\l|0x0037: RETURN  (r0 I:java.math.BigInteger A[D('sum' java.math.BigInteger)])  (LINE:105)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.math.BigInteger kotlin.text.StringsKt___StringsJvmKt.sumOfBigInteger((r5 I:java.lang.CharSequence A[D('$this$sumOf' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function1\<? super java.lang.Character, ? extends java.math.BigInteger\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:5:0x001c \-\> B:3:0x0016\lDebug Info:\l  0x0020\-0x0037: r2 'element' C\l  0x0015\-0x0037: r0 'sum' Ljava\/math\/BigInteger;\l  \-1 \-0x0037: r5 '$this$sumOf' Ljava\/lang\/CharSequence;\l  \-1 \-0x0037: r6 'selector' Lkotlin\/jvm\/functions\/Function1;\lSIGNATURE: (Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;+Ljava\/math\/BigInteger;\>;)Ljava\/math\/BigInteger;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_3;
Node_7 -> Node_6;
Node_6 -> Node_1;
}

