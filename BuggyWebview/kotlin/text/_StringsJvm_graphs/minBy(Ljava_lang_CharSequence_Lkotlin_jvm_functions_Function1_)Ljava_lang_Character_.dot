digraph "CFG forkotlin.text.StringsKt___StringsJvmKt.minBy(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Character;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r11, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r12, \"selector\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|if (r11.length() != 0) goto L24\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|r3 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|PHI: r3 \l  PHI: (r3v2 boolean) = (r3v1 boolean), (r3v10 boolean) binds: [B:5:0x0017, B:4:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == false) goto L7\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|SYNTHETIC\lRETURN\l|return null\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|char r3 = r11.charAt(0)\lint r5 = kotlin.text.StringsKt.getLastIndex(r11)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|if (r5 != 0) goto L11\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Character.valueOf(r3)\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|java.lang.Comparable r6 = r12.invoke(java.lang.Character.valueOf(r3))\lkotlin.collections.IntIterator r4 = new kotlin.ranges.IntRange(1, r5).iterator()\l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|LOOP_START\lLOOP:0: B:12:0x003f\-\>B:21:0x003f\lPHI: r3 r6 \l  PHI: (r3v4 'minElem$iv' char) = (r3v3 'minElem$iv' char), (r3v6 'minElem$iv' char) binds: [B:11:0x002c, B:21:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v3 'minValue$iv' java.lang.Comparable) = (r6v2 'minValue$iv' java.lang.Comparable), (r6v4 'minValue$iv' java.lang.Comparable) binds: [B:11:0x002c, B:21:0x003f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|if (r4.hasNext() == false) goto L21\l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|int r7 = r4.nextInt()\lchar r8 = r11.charAt(r7)\ljava.lang.Comparable r9 = r12.invoke(java.lang.Character.valueOf(r8))\l}"];
Node_15 [shape=record,label="{15\:\ 0x005b|if (r6.compareTo(r9) \<= 0) goto L20\l}"];
Node_20 [shape=record,label="{20\:\ 0x005d|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x005d|r3 = r8\lr6 = r9\l}"];
Node_23 [shape=record,label="{23\:\ 0x003f|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x003f|LOOP_END\lSYNTHETIC\lLOOP:0: B:12:0x003f\-\>B:21:0x003f\lPHI: r3 r6 \l  PHI: (r3v6 'minElem$iv' char) = (r3v4 'minElem$iv' char), (r3v7 'minElem$iv' char) binds: [B:22:0x003f, B:23:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v4 'minValue$iv' java.lang.Comparable) = (r6v3 'minValue$iv' java.lang.Comparable), (r6v5 'minValue$iv' java.lang.Comparable) binds: [B:22:0x003f, B:23:0x003f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x003f|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0060|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0060}"];
Node_18 [shape=record,label="{18\:\ 0x0065|RETURN\lORIG_RETURN\l|return java.lang.Character.valueOf(r3)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|r3 = false\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ java.lang.Character kotlin.text.StringsKt___StringsJvmKt.minBy((r11v0 '$this$minBy' java.lang.CharSequence A[D('$this$minBy' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'selector' kotlin.jvm.functions.Function1\<? super java.lang.Character, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use minByOrNull instead., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=this.minByOrNull(selector), imports=[[]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{errorSince=1.5, hiddenSince=1.6, warningSince=1.4\}\}\}\lCROSS_EDGE: B:10:0x0026 \-\> B:18:0x0065, BACK_EDGE: B:15:0x005b \-\> B:12:0x003f, BACK_EDGE: B:16:0x005d \-\> B:12:0x003f, CROSS_EDGE: B:17:0x0060 \-\> B:18:0x0065, CROSS_EDGE: B:5:0x0017 \-\> B:6:0x0018\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>]\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r4v1, types: [kotlin.collections.IntIterator]\}\lSIGNATURE: \<R::Ljava\/lang\/Comparable\<\-TR;\>;\>(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;+TR;\>;)Ljava\/lang\/Character;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_25;
Node_25 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_20[style=dashed];
Node_15 -> Node_22;
Node_20 -> Node_16;
Node_16 -> Node_23;
Node_23 -> Node_21;
Node_21 -> Node_12;
Node_22 -> Node_21;
Node_19 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_5 -> Node_6;
}

