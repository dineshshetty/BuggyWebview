digraph "CFG forkotlin.text.Regex$findAll$2.\<init\>()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_CLASS  (r2 I:java.lang.Class\<kotlin.text.MatchResult\>) =  kotlin.text.MatchResult.class \l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0003: CONST_STR  (r3 I:java.lang.String) =  \"next\" \l0x0005: CONST_STR  (r4 I:java.lang.String) =  \"next()Lkotlin\/text\/MatchResult;\" \l0x0007: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0009: INVOKE  \l  (r0 I:kotlin.jvm.internal.FunctionReferenceImpl)\l  (r1 I:int)\l  (r2 I:java.lang.Class)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l type: DIRECT call: kotlin.jvm.internal.FunctionReferenceImpl.\<init\>(int, java.lang.Class, java.lang.String, java.lang.String, int):void A[MD:(int, java.lang.Class, java.lang.String, java.lang.String, int):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|RETURN\l|0x000c: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void kotlin.text.Regex$findAll$2.\<init\>((r6 'this' I:kotlin.text.Regex$findAll$2 A[IMMUTABLE_TYPE, THIS]))  | INLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

