digraph "CFG forkotlin.text.StringsKt__AppendableKt.appendLine(Ljava\/lang\/Appendable;)Ljava\/lang\/Appendable;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$appendLine' java.lang.Appendable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[int, float, short, byte, char]) = (10 ??[int, float, short, byte, char])  (LINE:70)\l0x0007: INVOKE  (r0 I:java.lang.Appendable) = (r2 I:java.lang.Appendable A[D('$this$appendLine' java.lang.Appendable)]), (r0 I:char) type: INTERFACE call: java.lang.Appendable.append(char):java.lang.Appendable A[MD:(char):java.lang.Appendable throws java.io.IOException (c)]\l0x000b: CONST_STR  (r1 I:java.lang.String) =  \"append('n')\" \l0x000d: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:java.lang.Appendable) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.lang.Appendable kotlin.text.StringsKt__AppendableKt.appendLine((r2 I:java.lang.Appendable A[D('$this$appendLine' java.lang.Appendable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0010: r2 '$this$appendLine' Ljava\/lang\/Appendable;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

