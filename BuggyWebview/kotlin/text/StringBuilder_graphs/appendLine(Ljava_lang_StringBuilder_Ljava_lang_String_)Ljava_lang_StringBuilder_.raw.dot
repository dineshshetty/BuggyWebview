digraph "CFG forkotlin.text.StringsKt__StringBuilderKt.appendLine(Ljava\/lang\/StringBuilder;Ljava\/lang\/String;)Ljava\/lang\/StringBuilder;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$appendLine' java.lang.StringBuilder)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  \l  (r1 I:java.lang.StringBuilder A[D('$this$appendLine' java.lang.StringBuilder)])\l  (r2 I:java.lang.String A[D('value' java.lang.String)])\l type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)] (LINE:453)\l0x0008: CONST_STR  (r0 I:java.lang.String) =  \"append(value)\" \l0x000a: INVOKE  (r1 I:java.lang.Object A[D('$this$appendLine' java.lang.StringBuilder)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000d: CONST  (r0 I:??[int, float, short, byte, char]) = (10 ??[int, float, short, byte, char]) \l0x000f: INVOKE  (r1 I:java.lang.StringBuilder A[D('$this$appendLine' java.lang.StringBuilder)]), (r0 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0012: CONST_STR  (r0 I:java.lang.String) =  \"append('n')\" \l0x0014: INVOKE  (r1 I:java.lang.Object A[D('$this$appendLine' java.lang.StringBuilder)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|RETURN\l|0x0017: RETURN  (r1 I:java.lang.StringBuilder A[D('$this$appendLine' java.lang.StringBuilder)]) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.lang.StringBuilder kotlin.text.StringsKt__StringBuilderKt.appendLine((r1 I:java.lang.StringBuilder A[D('$this$appendLine' java.lang.StringBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[D('value' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0017: r1 '$this$appendLine' Ljava\/lang\/StringBuilder;\l  \-1 \-0x0017: r2 'value' Ljava\/lang\/String;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

