digraph "CFG forkotlin.text.Regex.splitToSequence(Ljava\/lang\/CharSequence;I)Lkotlin\/sequences\/Sequence;" {
subgraph cluster_Region_2128414190 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"input\")\lkotlin.text.StringsKt.requireNonNegativeLimit(r4)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|RETURN\l|return kotlin.sequences.SequencesKt.sequence(new kotlin.text.Regex$splitToSequence$1(r2, r3, r4, null))\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlin.sequences.Sequence\<java.lang.String\> kotlin.text.Regex.splitToSequence((r2v0 'this' kotlin.text.Regex A[IMMUTABLE_TYPE, THIS]), (r3v0 'input' java.lang.CharSequence A[D('input' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'limit' int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lSIGNATURE: (Ljava\/lang\/CharSequence;I)Lkotlin\/sequences\/Sequence\<Ljava\/lang\/String;\>;\l}"];
MethodNode -> Node_4;Node_6 -> Node_7;
Node_7 -> Node_5;
Node_4 -> Node_6;
}

