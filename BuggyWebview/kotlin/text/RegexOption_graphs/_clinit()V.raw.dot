digraph "CFG forkotlin.text.RegexOption.\<clinit\>()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r7 I:kotlin.text.RegexOption) =  kotlin.text.RegexOption  (LINE:33)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"IGNORE_CASE\" \l0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0006: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: CONST  (r5 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0008: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x000a: INVOKE  \l  (r0 I:kotlin.text.RegexOption)\l  (r1 I:java.lang.String)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlin.text.RegexOption.\<init\>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l0x000d: SPUT  (r7 I:kotlin.text.RegexOption) kotlin.text.RegexOption.IGNORE_CASE kotlin.text.RegexOption \l0x000f: NEW_INSTANCE  (r0 I:kotlin.text.RegexOption) =  kotlin.text.RegexOption  (LINE:39)\l0x0011: CONST_STR  (r9 I:java.lang.String) =  \"MULTILINE\" \l0x0013: CONST  (r10 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0014: CONST  (r11 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l0x0016: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: CONST  (r13 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0018: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001a: INVOKE  \l  (r8 I:kotlin.text.RegexOption)\l  (r9 I:java.lang.String)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlin.text.RegexOption.\<init\>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l0x001d: SPUT  (r0 I:kotlin.text.RegexOption) kotlin.text.RegexOption.MULTILINE kotlin.text.RegexOption \l0x001f: NEW_INSTANCE  (r0 I:kotlin.text.RegexOption) =  kotlin.text.RegexOption  (LINE:47)\l0x0021: CONST_STR  (r2 I:java.lang.String) =  \"LITERAL\" \l0x0023: CONST  (r4 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l0x0025: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0026: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0027: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0028: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0029: INVOKE  \l  (r1 I:kotlin.text.RegexOption)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlin.text.RegexOption.\<init\>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l0x002c: SPUT  (r0 I:kotlin.text.RegexOption) kotlin.text.RegexOption.LITERAL kotlin.text.RegexOption \l0x002e: NEW_INSTANCE  (r0 I:kotlin.text.RegexOption) =  kotlin.text.RegexOption  (LINE:54)\l0x0030: CONST_STR  (r9 I:java.lang.String) =  \"UNIX_LINES\" \l0x0032: CONST  (r10 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0033: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0034: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0035: INVOKE  \l  (r8 I:kotlin.text.RegexOption)\l  (r9 I:java.lang.String)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlin.text.RegexOption.\<init\>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l0x0038: SPUT  (r0 I:kotlin.text.RegexOption) kotlin.text.RegexOption.UNIX_LINES kotlin.text.RegexOption \l0x003a: NEW_INSTANCE  (r0 I:kotlin.text.RegexOption) =  kotlin.text.RegexOption  (LINE:57)\l0x003c: CONST_STR  (r2 I:java.lang.String) =  \"COMMENTS\" \l0x003e: CONST  (r3 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x003f: CONST  (r4 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0040: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0041: INVOKE  \l  (r1 I:kotlin.text.RegexOption)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlin.text.RegexOption.\<init\>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l0x0044: SPUT  (r0 I:kotlin.text.RegexOption) kotlin.text.RegexOption.COMMENTS kotlin.text.RegexOption \l0x0046: NEW_INSTANCE  (r0 I:kotlin.text.RegexOption) =  kotlin.text.RegexOption  (LINE:60)\l0x0048: CONST_STR  (r9 I:java.lang.String) =  \"DOT_MATCHES_ALL\" \l0x004a: CONST  (r10 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l0x004b: CONST  (r11 I:??[int, float, short, byte, char]) = (32 ??[int, float, short, byte, char]) \l0x004d: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x004e: INVOKE  \l  (r8 I:kotlin.text.RegexOption)\l  (r9 I:java.lang.String)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlin.text.RegexOption.\<init\>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l0x0051: SPUT  (r0 I:kotlin.text.RegexOption) kotlin.text.RegexOption.DOT_MATCHES_ALL kotlin.text.RegexOption \l0x0053: NEW_INSTANCE  (r0 I:kotlin.text.RegexOption) =  kotlin.text.RegexOption  (LINE:63)\l0x0055: CONST_STR  (r2 I:java.lang.String) =  \"CANON_EQ\" \l0x0057: CONST  (r3 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l0x0058: CONST  (r4 I:??[int, float, short, byte, char]) = (128(0x80, float:1.8E\-43) ??[int, float, short, byte, char]) \l0x005a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x005b: INVOKE  \l  (r1 I:kotlin.text.RegexOption)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlin.text.RegexOption.\<init\>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l0x005e: SPUT  (r0 I:kotlin.text.RegexOption) kotlin.text.RegexOption.CANON_EQ kotlin.text.RegexOption \l0x0060: INVOKE  (r0 I:kotlin.text.RegexOption[]) =  type: STATIC call: kotlin.text.RegexOption.$values():kotlin.text.RegexOption[] A[MD:():kotlin.text.RegexOption[] (m)]\l0x0064: SPUT  (r0 I:kotlin.text.RegexOption[]) kotlin.text.RegexOption.$VALUES kotlin.text.RegexOption[] \l}"];
Node_7 [shape=record,label="{7\:\ 0x0066|RETURN\l|0x0066: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlin.text.RegexOption.\<clinit\>()  | DONT_GENERATE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

