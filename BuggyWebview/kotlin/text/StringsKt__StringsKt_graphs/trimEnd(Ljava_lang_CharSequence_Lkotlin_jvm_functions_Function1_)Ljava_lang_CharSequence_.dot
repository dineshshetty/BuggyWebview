digraph "CFG forkotlin.text.StringsKt__StringsKt.trimEnd(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/CharSequence;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"predicate\")\lint r1 = r4.length() + (\-1)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0011|if (r1 \< 0) goto L11\l}"];
Node_30 [shape=record,label="{30\:\ 0x0013|LOOP_START\lLOOP:0: B:30:0x0013\-\>B:34:0x0032\lPHI: r1 \l  PHI: (r1v4 int) = (r1v1 int), (r1v5 int) binds: [B:29:0x0011, B:34:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|r2 = r1\lint r1 = r1 + (\-1)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0028|if (r5.invoke(java.lang.Character.valueOf(r4.charAt(r2))).booleanValue() != false) goto L5\l}"];
Node_34 [shape=record,label="{34\:\ 0x0032|LOOP_END\lLOOP:0: B:30:0x0013\-\>B:34:0x0032\l|if (r1 \>= 0) goto L3\l}"];
Node_37 [shape=record,label="{37\:\ 0x0034|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x002a|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x002a}"];
Node_33 [shape=record,label="{33\:\ 0x0031|RETURN\l|return r4.subSequence(0, r2 + 1)\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0034}"];
Node_36 [shape=record,label="{36\:\ 0x0038|RETURN\l|return \"\"\l}"];
MethodNode[shape=record,label="{public static final java.lang.CharSequence kotlin.text.StringsKt__StringsKt.trimEnd((r4v0 '$this$trimEnd' java.lang.CharSequence A[D('$this$trimEnd' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'predicate' kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x0032 \-\> B:30:0x0013, CROSS_EDGE: B:36:0x0038 \-\> B:27:?, CROSS_EDGE: B:29:0x0011 \-\> B:35:0x0034\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;Ljava\/lang\/Boolean;\>;)Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_35;
Node_30 -> Node_31;
Node_31 -> Node_34;
Node_31 -> Node_38[style=dashed];
Node_34 -> Node_30;
Node_34 -> Node_37[style=dashed];
Node_37 -> Node_35;
Node_38 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_27;
Node_35 -> Node_36;
Node_36 -> Node_27;
}

