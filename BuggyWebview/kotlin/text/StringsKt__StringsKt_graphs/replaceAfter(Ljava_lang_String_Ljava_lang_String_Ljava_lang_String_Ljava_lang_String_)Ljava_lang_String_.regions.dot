digraph "CFG forkotlin.text.StringsKt__StringsKt.replaceAfter(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/lang\/String;" {
subgraph cluster_Region_639331723 {
label = "R(2:1|(2:(1:4)|(2:6|7)))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"delimiter\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"replacement\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"missingDelimiterValue\")\lint int r0 = kotlin.text.StringsKt.indexOf$default((java.lang.CharSequence) r7, r8, 0, false, 6, (java.lang.Object) null)\l}"];
subgraph cluster_Region_1057010957 {
label = "R(2:(1:4)|(2:6|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1176355902 {
label = "IF [B:19:0x0021] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0021|if (r0 == (\-1)) goto L3\l}"];
subgraph cluster_Region_1452979822 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return r10\l}"];
}
}
subgraph cluster_Region_1911214223 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0025}"];
Node_22 [shape=record,label="{22\:\ 0x003c|RETURN\lORIG_RETURN\l|return kotlin.text.StringsKt.replaceRange((java.lang.CharSequence) r7, r8.length() + r0, r7.length(), (java.lang.CharSequence) r9).toString()\l}"];
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0023}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__StringsKt.replaceAfter((r7v0 '$this$replaceAfter' java.lang.String A[D('$this$replaceAfter' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'delimiter' java.lang.String A[D('delimiter' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'replacement' java.lang.String A[D('replacement' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'missingDelimiterValue' java.lang.String A[D('missingDelimiterValue' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0025 \-\> B:22:0x003c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_23 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_17;
Node_16 -> Node_18;
Node_20 -> Node_23;
}

