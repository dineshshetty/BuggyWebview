digraph "CFG forkotlin.text.StringsKt__StringsKt.lastIndexOf(Ljava\/lang\/CharSequence;Ljava\/lang\/String;IZ)I" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('$this$lastIndexOf' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"string\" \l0x0007: INVOKE  (r8 I:java.lang.Object A[D('string' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|0x000a: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ignoreCase' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0019  (LINE:1132)\l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|0x000c: INSTANCE_OF  (r0 I:boolean) = (r7 I:??[OBJECT, ARRAY] A[D('$this$lastIndexOf' java.lang.CharSequence)]) java.lang.String \l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0011 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0011|0x0011: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$lastIndexOf' java.lang.CharSequence)])  (LINE:1135)\l0x0012: CHECK_CAST (r0 I:java.lang.String) = (java.lang.String) (r0 I:??[OBJECT, ARRAY]) \l0x0014: INVOKE  (r0 I:int) = (r0 I:java.lang.String), (r8 I:java.lang.String A[D('string' java.lang.String)]), (r9 I:int A[D('startIndex' int)]) type: VIRTUAL call: java.lang.String.lastIndexOf(java.lang.String, int):int A[MD:(java.lang.String, int):int (c)]\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|0x0025: RETURN  (r0 I:int) A[SYNTHETIC] (LINE:1132)\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|0x0019: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('string' java.lang.String)])  (LINE:1133)\l0x001a: CHECK_CAST (r2 I:java.lang.CharSequence) = (java.lang.CharSequence) (r2 I:??[OBJECT, ARRAY]) \l0x001c: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001d: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001e: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$lastIndexOf' java.lang.CharSequence)]) \l0x001f: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)]) \l0x0020: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('ignoreCase' boolean)]) \l0x0021: INVOKE  (r0 I:int) = (r1 I:java.lang.CharSequence), (r2 I:java.lang.CharSequence), (r3 I:int), (r4 I:int), (r5 I:boolean), (r6 I:boolean) type: STATIC call: kotlin.text.StringsKt__StringsKt.indexOf$StringsKt__StringsKt(java.lang.CharSequence, java.lang.CharSequence, int, int, boolean, boolean):int A[MD:(java.lang.CharSequence, java.lang.CharSequence, int, int, boolean, boolean):int (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0025|RETURN\lORIG_RETURN\l|0x0025: RETURN  (r0 I:int)  (LINE:1132)\l}"];
MethodNode[shape=record,label="{public static final int kotlin.text.StringsKt__StringsKt.lastIndexOf((r7 I:java.lang.CharSequence A[D('$this$lastIndexOf' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[D('string' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('startIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[D('ignoreCase' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0019 \-\> B:31:0x0025, CROSS_EDGE: B:25:0x000a \-\> B:30:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0025: r7 '$this$lastIndexOf' Ljava\/lang\/CharSequence;\l  \-1 \-0x0025: r8 'string' Ljava\/lang\/String;\l  \-1 \-0x0025: r9 'startIndex' I\l  \-1 \-0x0025: r10 'ignoreCase' Z\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_32 -> Node_23;
Node_30 -> Node_31;
Node_31 -> Node_23;
}

