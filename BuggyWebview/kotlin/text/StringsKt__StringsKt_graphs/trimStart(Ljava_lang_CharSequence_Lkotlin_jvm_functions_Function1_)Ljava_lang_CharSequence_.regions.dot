digraph "CFG forkotlin.text.StringsKt__StringsKt.trimStart(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/CharSequence;" {
subgraph cluster_Region_588943112 {
label = "R(3:1|(1:(2:(1:8)|(1:5)))|12)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"predicate\")\lint r1 = 0\lint int r2 = r4.length()\l}"];
subgraph cluster_LoopRegion_1499018221 {
label = "LOOP:0: (1:(2:(1:8)|(1:5)))";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0010|LOOP_START\lLOOP:0: B:29:0x0010\-\>B:34:0x002f\lPHI: r1 \l  PHI: (r1v1 'index' int) = (r1v0 'index' int), (r1v4 'index' int) binds: [B:28:0x0000, B:34:0x002f] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \< r2) goto L3\l}"];
subgraph cluster_Region_462054684 {
label = "R(1:(2:(1:8)|(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_1125244987 {
label = "R(2:(1:8)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_800320039 {
label = "IF [B:31:0x0024] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0024|if (r5.invoke(java.lang.Character.valueOf(r4.charAt(r1))).booleanValue() == false) goto L6\l}"];
subgraph cluster_Region_1478906390 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x002e|RETURN\l|return r4.subSequence(r1, r4.length())\l}"];
}
}
subgraph cluster_Region_221143776 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x002f|LOOP_END\lLOOP:0: B:29:0x0010\-\>B:34:0x002f\l|r1++\l}"];
}
}
}
}
Node_36 [shape=record,label="{36\:\ 0x0036|RETURN\l|return \"\"\l}"];
}
Node_26 [shape=record,color=red,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0012}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0026|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0026}"];
Node_27 [shape=record,color=red,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0032|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0032}"];
MethodNode[shape=record,label="{public static final java.lang.CharSequence kotlin.text.StringsKt__StringsKt.trimStart((r4v0 '$this$trimStart' java.lang.CharSequence A[D('$this$trimStart' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'predicate' kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x002f \-\> B:29:0x0010, CROSS_EDGE: B:36:0x0036 \-\> B:27:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;Ljava\/lang\/Boolean;\>;)Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_26;Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_37[style=dashed];
Node_31 -> Node_34[style=dashed];
Node_31 -> Node_38;
Node_33 -> Node_27;
Node_34 -> Node_29;
Node_36 -> Node_27;
Node_26 -> Node_28;
Node_30 -> Node_31;
Node_38 -> Node_32;
Node_32 -> Node_33;
Node_37 -> Node_35;
Node_35 -> Node_36;
}

