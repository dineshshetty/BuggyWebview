digraph "CFG forkotlin.text.StringsKt__StringsKt.lineSequence(Ljava\/lang\/CharSequence;)Lkotlin\/sequences\/Sequence;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"\<this\>\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|RETURN\l|return kotlin.text.StringsKt.splitToSequence$default(r9, new java.lang.String[]\{\"rn\", \"n\", \"r\"\}, false, 0, 6, null)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<java.lang.String\> kotlin.text.StringsKt__StringsKt.lineSequence((r9v0 '$this$lineSequence' java.lang.CharSequence A[D('$this$lineSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lSIGNATURE: (Ljava\/lang\/CharSequence;)Lkotlin\/sequences\/Sequence\<Ljava\/lang\/String;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

