digraph "CFG forkotlin.text.StringsKt__StringsKt.startsWith(Ljava\/lang\/CharSequence;CZ)Z" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$startsWith' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:int) = (r2 I:java.lang.CharSequence A[D('$this$startsWith' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:836)\l0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000a|0x000a: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:28:? \l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|0x000c: INVOKE  (r0 I:char) = (r2 I:java.lang.CharSequence A[D('$this$startsWith' java.lang.CharSequence)]), (r1 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x0010: INVOKE  (r0 I:boolean) = (r0 I:char), (r3 I:char A[D('char' char)]), (r4 I:boolean A[D('ignoreCase' boolean)]) type: STATIC call: kotlin.text.CharsKt.equals(char, char, boolean):boolean A[MD:(char, char, boolean):boolean (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:? \l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|RETURN\lORIG_RETURN\l|0x0016: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0017: RETURN  (r1 I:boolean) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x0017: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|0x0017: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.text.StringsKt__StringsKt.startsWith((r2 I:java.lang.CharSequence A[D('$this$startsWith' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:char A[D('char' char), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('ignoreCase' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0014 \-\> B:27:0x0017, CROSS_EDGE: B:23:0x000a \-\> B:27:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0017: r2 '$this$startsWith' Ljava\/lang\/CharSequence;\l  \-1 \-0x0017: r3 'char' C\l  \-1 \-0x0017: r4 'ignoreCase' Z\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_21;
Node_29 -> Node_21;
Node_28 -> Node_21;
}

