digraph "CFG forkotlin.text.StringsKt__StringsKt.contains(Ljava\/lang\/CharSequence;CZ)Z" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('$this$contains' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1159)\l0x0006: CONST  (r5 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0007: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$contains' java.lang.CharSequence)]) \l0x0009: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('char' char)]) \l0x000a: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('ignoreCase' boolean)]) \l0x000b: INVOKE  (r0 I:int) = (r1 I:java.lang.CharSequence), (r2 I:char), (r3 I:int), (r4 I:boolean), (r5 I:int), (r6 I:java.lang.Object) type: STATIC call: kotlin.text.StringsKt.indexOf$default(java.lang.CharSequence, char, int, boolean, int, java.lang.Object):int A[MD:(java.lang.CharSequence, char, int, boolean, int, java.lang.Object):int (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|0x000f: IF  (r0 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:21:0x0013 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|SYNTHETIC\lRETURN\l|0x0011: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0014: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|RETURN\lORIG_RETURN\l|0x0013: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.text.StringsKt__StringsKt.contains((r7 I:java.lang.CharSequence A[D('$this$contains' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:char A[D('char' char), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('ignoreCase' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0013 \-\> B:22:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0014: r7 '$this$contains' Ljava\/lang\/CharSequence;\l  \-1 \-0x0014: r8 'char' C\l  \-1 \-0x0014: r9 'ignoreCase' Z\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_17;
Node_21 -> Node_17;
}

