digraph "CFG forkotlin.text.StringsKt__StringsKt.subSequence(Ljava\/lang\/String;II)Ljava\/lang\/CharSequence;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"\<this\>\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x0009|RETURN\l|return r1.subSequence(r2, r3)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.lang.CharSequence kotlin.text.StringsKt__StringsKt.subSequence((r1v0 '$this$subSequence' java.lang.String A[D('$this$subSequence' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'start' int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'end' int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use parameters named startIndex and endIndex., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=subSequence(startIndex = start, endIndex = end), imports=[[]]\}\}\}\}\}\}\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

