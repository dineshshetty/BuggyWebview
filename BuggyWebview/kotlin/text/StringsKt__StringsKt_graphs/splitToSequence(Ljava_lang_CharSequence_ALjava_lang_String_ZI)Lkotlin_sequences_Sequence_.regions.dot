digraph "CFG forkotlin.text.StringsKt__StringsKt.splitToSequence(Ljava\/lang\/CharSequence;[Ljava\/lang\/String;ZI)Lkotlin\/sequences\/Sequence;" {
subgraph cluster_Region_321085871 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"delimiters\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|RETURN\l|return kotlin.sequences.SequencesKt.map(rangesDelimitedBy$StringsKt__StringsKt$default(r8, r9, 0, r10, r11, 2, (java.lang.Object) null), new kotlin.text.StringsKt__StringsKt$splitToSequence$1(r8))\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<java.lang.String\> kotlin.text.StringsKt__StringsKt.splitToSequence((r8v0 '$this$splitToSequence' java.lang.CharSequence A[D('$this$splitToSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'delimiters' java.lang.String[] A[D('delimiters' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'ignoreCase' boolean A[D('ignoreCase' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'limit' int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lSIGNATURE: (Ljava\/lang\/CharSequence;[Ljava\/lang\/String;ZI)Lkotlin\/sequences\/Sequence\<Ljava\/lang\/String;\>;\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_11 -> Node_9;
Node_8 -> Node_10;
}

