digraph "CFG forkotlin.text.StringsKt__StringsKt.trimStart(Ljava\/lang\/CharSequence;)Ljava\/lang\/CharSequence;" {
subgraph cluster_Region_1427045703 {
label = "R(3:1|(2:3|(2:(1:8)|(1:5)))|12)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\lint r2 = 0\lint int r3 = r6.length()\l}"];
subgraph cluster_LoopRegion_1755614798 {
label = "LOOP:0: (2:3|(2:(1:8)|(1:5)))";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x000c|LOOP_START\lLOOP:0: B:29:0x000c\-\>B:33:0x0022\lPHI: r2 \l  PHI: (r2v1 'index$iv' int) = (r2v0 'index$iv' int), (r2v3 'index$iv' int) binds: [B:28:0x0000, B:33:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< r3) goto L3\l}"];
subgraph cluster_Region_406625074 {
label = "R(2:3|(2:(1:8)|(1:5)))";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x000e|char char r4 = r6.charAt(r2)\l}"];
subgraph cluster_Region_829359120 {
label = "R(2:(1:8)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1986037320 {
label = "IF [B:31:0x0017] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0017|if (kotlin.text.CharsKt.isWhitespace(r4) == false) goto L6\l}"];
subgraph cluster_Region_981117367 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return r6.subSequence(r2, r6.length())\l}"];
}
}
subgraph cluster_Region_254692220 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0022|LOOP_END\lLOOP:0: B:29:0x000c\-\>B:33:0x0022\l|r2++\l}"];
}
}
}
}
Node_35 [shape=record,label="{35\:\ 0x002a|RETURN\lORIG_RETURN\l|return \"\"\l}"];
}
Node_26 [shape=record,color=red,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0019|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0019}"];
Node_27 [shape=record,color=red,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0025|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0025}"];
MethodNode[shape=record,label="{public static final java.lang.CharSequence kotlin.text.StringsKt__StringsKt.trimStart((r6v0 '$this$trimStart' java.lang.CharSequence A[D('$this$trimStart' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:33:0x0022 \-\> B:29:0x000c, CROSS_EDGE: B:34:0x0025 \-\> B:35:0x002a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_26;Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_37[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_33[style=dashed];
Node_31 -> Node_36;
Node_38 -> Node_27;
Node_33 -> Node_29;
Node_35 -> Node_27;
Node_26 -> Node_28;
Node_36 -> Node_32;
Node_32 -> Node_38;
Node_37 -> Node_34;
Node_34 -> Node_35;
}

