digraph "CFG forkotlin.text.StringsKt__StringsKt.replaceRange(Ljava\/lang\/String;Lkotlin\/ranges\/IntRange;Ljava\/lang\/CharSequence;)Ljava\/lang\/String;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r2, \"range\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"replacement\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|RETURN\l|return kotlin.text.StringsKt.replaceRange(r1, r2, r3).toString()\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.lang.String kotlin.text.StringsKt__StringsKt.replaceRange((r1v0 '$this$replaceRange' java.lang.String A[D('$this$replaceRange' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'range' kotlin.ranges.IntRange A[D('range' kotlin.ranges.IntRange), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'replacement' java.lang.CharSequence A[D('replacement' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

