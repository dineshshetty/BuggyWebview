digraph "CFG forkotlin.text.StringsKt__StringsKt.removeSurrounding(Ljava\/lang\/String;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;)Ljava\/lang\/String;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$removeSurrounding' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"prefix\" \l0x0007: INVOKE  (r5 I:java.lang.Object A[D('prefix' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"suffix\" \l0x000c: INVOKE  (r6 I:java.lang.Object A[D('suffix' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: INVOKE  (r0 I:int) = (r4 I:java.lang.String A[D('$this$removeSurrounding' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)] (LINE:650)\l0x0013: INVOKE  (r1 I:int) = (r5 I:java.lang.CharSequence A[D('prefix' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x0017: INVOKE  (r2 I:int) = (r6 I:java.lang.CharSequence A[D('suffix' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x001b: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x001c|0x001c: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:32:0x004a \l}"];
Node_26 [shape=record,label="{26\:\ 0x001e|0x001e: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('$this$removeSurrounding' java.lang.String)]) \l0x001f: CHECK_CAST (r0 I:java.lang.CharSequence) = (java.lang.CharSequence) (r0 I:??[OBJECT, ARRAY]) \l0x0021: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0022: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0023: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0024: INVOKE  (r0 I:boolean) = \l  (r0 I:java.lang.CharSequence)\l  (r5 I:java.lang.CharSequence A[D('prefix' java.lang.CharSequence)])\l  (r1 I:boolean)\l  (r2 I:int)\l  (r3 I:java.lang.Object)\l type: STATIC call: kotlin.text.StringsKt.startsWith$default(java.lang.CharSequence, java.lang.CharSequence, boolean, int, java.lang.Object):boolean A[MD:(java.lang.CharSequence, java.lang.CharSequence, boolean, int, java.lang.Object):boolean (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0028|0x0028: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x004a \l}"];
Node_28 [shape=record,label="{28\:\ 0x002a|0x002a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('$this$removeSurrounding' java.lang.String)]) \l0x002b: CHECK_CAST (r0 I:java.lang.CharSequence) = (java.lang.CharSequence) (r0 I:??[OBJECT, ARRAY]) \l0x002d: INVOKE  (r0 I:boolean) = \l  (r0 I:java.lang.CharSequence)\l  (r6 I:java.lang.CharSequence A[D('suffix' java.lang.CharSequence)])\l  (r1 I:boolean)\l  (r2 I:int)\l  (r3 I:java.lang.Object)\l type: STATIC call: kotlin.text.StringsKt.endsWith$default(java.lang.CharSequence, java.lang.CharSequence, boolean, int, java.lang.Object):boolean A[MD:(java.lang.CharSequence, java.lang.CharSequence, boolean, int, java.lang.Object):boolean (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0031|0x0031: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x004a \l}"];
Node_30 [shape=record,label="{30\:\ 0x0033|0x0033: INVOKE  (r0 I:int) = (r5 I:java.lang.CharSequence A[D('prefix' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:651)\l0x0037: INVOKE  (r1 I:int) = (r4 I:java.lang.String A[D('$this$removeSurrounding' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)]\l0x003b: INVOKE  (r2 I:int) = (r6 I:java.lang.CharSequence A[D('suffix' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x003f: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0040: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.String A[D('$this$removeSurrounding' java.lang.String)]), (r0 I:int), (r1 I:int) type: VIRTUAL call: java.lang.String.substring(int, int):java.lang.String A[MD:(int, int):java.lang.String (c)]\l0x0044: CONST_STR  (r1 I:java.lang.String) =  \"this as java.lang.Stringâ€¦ing(startIndex, endIndex)\" \l0x0046: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0049|RETURN\l|0x0049: RETURN  (r0 I:java.lang.String) \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x004a|RETURN\l|0x004a: RETURN  (r4 I:java.lang.String A[D('$this$removeSurrounding' java.lang.String)])  (LINE:653)\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__StringsKt.removeSurrounding((r4 I:java.lang.String A[D('$this$removeSurrounding' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.CharSequence A[D('prefix' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.CharSequence A[D('suffix' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x004a \-\> B:23:?, CROSS_EDGE: B:27:0x0028 \-\> B:32:0x004a, CROSS_EDGE: B:25:0x001c \-\> B:32:0x004a\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x004a: r4 '$this$removeSurrounding' Ljava\/lang\/String;\l  \-1 \-0x004a: r5 'prefix' Ljava\/lang\/CharSequence;\l  \-1 \-0x004a: r6 'suffix' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_32;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_23;
Node_32 -> Node_23;
}

