digraph "CFG forkotlin.text.StringsKt__StringsKt.splitToSequence(Ljava\/lang\/CharSequence;Lkotlin\/text\/Regex;I)Lkotlin\/sequences\/Sequence;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$splitToSequence' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"regex\" \l0x0007: INVOKE  (r2 I:java.lang.Object A[D('regex' kotlin.text.Regex)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:kotlin.sequences.Sequence) = \l  (r2 I:kotlin.text.Regex A[D('regex' kotlin.text.Regex)])\l  (r1 I:java.lang.CharSequence A[D('$this$splitToSequence' java.lang.CharSequence)])\l  (r3 I:int A[D('limit' int)])\l type: VIRTUAL call: kotlin.text.Regex.splitToSequence(java.lang.CharSequence, int):kotlin.sequences.Sequence A[MD:(java.lang.CharSequence, int):kotlin.sequences.Sequence\<java.lang.String\> (m)] (LINE:1387)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:kotlin.sequences.Sequence\<java.lang.String\>) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final kotlin.sequences.Sequence\<java.lang.String\> kotlin.text.StringsKt__StringsKt.splitToSequence((r1 I:java.lang.CharSequence A[D('$this$splitToSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.text.Regex A[D('regex' kotlin.text.Regex), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000e: r1 '$this$splitToSequence' Ljava\/lang\/CharSequence;\l  \-1 \-0x000e: r2 'regex' Lkotlin\/text\/Regex;\l  \-1 \-0x000e: r3 'limit' I\lSIGNATURE: (Ljava\/lang\/CharSequence;Lkotlin\/text\/Regex;I)Lkotlin\/sequences\/Sequence\<Ljava\/lang\/String;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

