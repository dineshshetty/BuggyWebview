digraph "CFG forkotlin.text.StringsKt__StringsKt.contentEqualsIgnoreCaseImpl(Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;)Z" {
Node_52 [shape=record,label="{52\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_54 [shape=record,label="{54\:\ 0x0000}"];
Node_55 [shape=record,label="{55\:\ 0x0003|if ((r6 instanceof java.lang.String) == false) goto L8\l}"];
Node_56 [shape=record,label="{56\:\ 0x0005}"];
Node_57 [shape=record,label="{57\:\ 0x0007|if ((r7 instanceof java.lang.String) == false) goto L8\l}"];
Node_58 [shape=record,label="{58\:\ 0x0009}"];
Node_59 [shape=record,label="{59\:\ 0x0013|RETURN\l|return kotlin.text.StringsKt.equals((java.lang.String) r6, (java.lang.String) r7, true)\l}"];
Node_53 [shape=record,label="{53\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_60 [shape=record,label="{60\:\ 0x0014|if (r6 != r7) goto L10\l}"];
Node_61 [shape=record,label="{61\:\ 0x0016|RETURN\l|return true\l}"];
Node_62 [shape=record,label="{62\:\ 0x0017}"];
Node_63 [shape=record,label="{63\:\ 0x0018|if (r6 == null) goto L24\l}"];
Node_64 [shape=record,label="{64\:\ 0x001a|if (r7 == null) goto L24\l}"];
Node_65 [shape=record,label="{65\:\ 0x001c}"];
Node_66 [shape=record,label="{66\:\ 0x0024|if (r6.length() == r7.length()) goto L15\l}"];
Node_68 [shape=record,label="{68\:\ 0x0027|r2 = 0\lint r3 = r6.length()\l}"];
Node_69 [shape=record,label="{69\:\ 0x002c|LOOP_START\lLOOP:0: B:69:0x002c\-\>B:73:0x003d\lPHI: r2 \l  PHI: (r2v2 'i' int) = (r2v1 'i' int), (r2v3 'i' int) binds: [B:68:0x0027, B:73:0x003d] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r3) goto L22\l}"];
Node_70 [shape=record,label="{70\:\ 0x002e}"];
Node_71 [shape=record,label="{71\:\ 0x003a|if (kotlin.text.CharsKt.equals(r6.charAt(r2), r7.charAt(r2), true) != false) goto L19\l}"];
Node_73 [shape=record,label="{73\:\ 0x003d|LOOP_END\lLOOP:0: B:69:0x002c\-\>B:73:0x003d\l|int r2 = r2 + 1\l}"];
Node_76 [shape=record,label="{76\:\ 0x003c|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x003c|RETURN\l|return false\l}"];
Node_77 [shape=record,label="{77\:\ 0x0040|SYNTHETIC\l}"];
Node_74 [shape=record,label="{74\:\ 0x0040|RETURN\l|return true\l}"];
Node_75 [shape=record,label="{75\:\ 0x0041|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.text.StringsKt__StringsKt.contentEqualsIgnoreCaseImpl((r6v0 '$this$contentEqualsIgnoreCaseImpl' java.lang.CharSequence A[D('$this$contentEqualsIgnoreCaseImpl' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'other' java.lang.CharSequence A[D('other' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:61:0x0016 \-\> B:53:?, CROSS_EDGE: B:72:0x003c \-\> B:53:?, BACK_EDGE: B:73:0x003d \-\> B:69:0x002c, CROSS_EDGE: B:74:0x0040 \-\> B:53:?, CROSS_EDGE: B:75:0x0041 \-\> B:53:?, CROSS_EDGE: B:64:0x001a \-\> B:75:0x0041, CROSS_EDGE: B:63:0x0018 \-\> B:75:0x0041, CROSS_EDGE: B:55:0x0003 \-\> B:60:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_52;Node_52 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_60;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_60;
Node_58 -> Node_59;
Node_59 -> Node_53;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_53;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_75;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_75;
Node_65 -> Node_66;
Node_66 -> Node_68;
Node_66 -> Node_75[style=dashed];
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_77;
Node_70 -> Node_71;
Node_71 -> Node_73;
Node_71 -> Node_76[style=dashed];
Node_73 -> Node_69;
Node_76 -> Node_72;
Node_72 -> Node_53;
Node_77 -> Node_74;
Node_74 -> Node_53;
Node_75 -> Node_53;
}

