digraph "CFG forkotlin.text.StringsKt__StringsKt.trim(Ljava\/lang\/String;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/String;" {
Node_54 [shape=record,label="{54\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_56 [shape=record,label="{56\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"predicate\")\ljava.lang.CharSequence r1 = r8\lr3 = 0\lint r4 = r1.length() + (\-1)\lr5 = false\l}"];
Node_57 [shape=record,label="{57\:\ 0x0017|LOOP_START\lLOOP:0: B:57:0x0017\-\>B:77:0x0017\lPHI: r3 r4 r5 \l  PHI: (r3v1 'startIndex$iv' int) = (r3v0 'startIndex$iv' int), (r3v3 'startIndex$iv' int) binds: [B:56:0x0000, B:77:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 'endIndex$iv' int) = (r4v1 'endIndex$iv' int), (r4v3 'endIndex$iv' int) binds: [B:56:0x0000, B:77:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'startFound$iv' boolean) = (r5v0 'startFound$iv' boolean), (r5v3 'startFound$iv' boolean) binds: [B:56:0x0000, B:77:0x0017] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \> r4) goto L25\l}"];
Node_58 [shape=record,label="{58\:\ 0x0019|if (r5 != false) goto L24\l}"];
Node_59 [shape=record,label="{59\:\ 0x001b|r6 = r3\l}"];
Node_61 [shape=record,label="{61\:\ 0x001e|PHI: r6 \l  PHI: (r6v2 'index$iv' int) = (r6v1 'index$iv' int), (r6v3 'index$iv' int) binds: [B:60:0x001d, B:59:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|boolean r7 = r9.invoke(java.lang.Character.valueOf(r1.charAt(r6))).booleanValue()\l}"];
Node_62 [shape=record,label="{62\:\ 0x0030|if (r5 != false) goto L7\l}"];
Node_71 [shape=record,label="{71\:\ 0x0039|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0039|if (r7 != false) goto L9\l}"];
Node_68 [shape=record,label="{68\:\ 0x003c|int r4 = r4 + (\-1)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0017|SYNTHETIC\l}"];
Node_77 [shape=record,label="{77\:\ 0x0017|LOOP_END\lSYNTHETIC\lLOOP:0: B:57:0x0017\-\>B:77:0x0017\lPHI: r3 r4 r5 \l  PHI: (r3v3 'startIndex$iv' int) = (r3v1 'startIndex$iv' int), (r3v2 'startIndex$iv' int), (r3v1 'startIndex$iv' int) binds: [B:80:0x0017, B:79:0x0017, B:78:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 'endIndex$iv' int) = (r4v2 'endIndex$iv' int), (r4v2 'endIndex$iv' int), (r4v4 'endIndex$iv' int) binds: [B:80:0x0017, B:79:0x0017, B:78:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v3 'startFound$iv' boolean) = (r5v2 'startFound$iv' boolean), (r5v1 'startFound$iv' boolean), (r5v1 'startFound$iv' boolean) binds: [B:80:0x0017, B:79:0x0017, B:78:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_76 [shape=record,label="{76\:\ 0x0040|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x0040}"];
Node_70 [shape=record,label="{70\:\ 0x004a|RETURN\l|return r1.subSequence(r3, r4 + 1).toString()\l}"];
Node_55 [shape=record,label="{55\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_75 [shape=record,label="{75\:\ 0x0032|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x0032|if (r7 != false) goto L18\l}"];
Node_72 [shape=record,label="{72\:\ 0x0036|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x0036|int r3 = r3 + 1\l}"];
Node_79 [shape=record,label="{79\:\ 0x0017|SYNTHETIC\l}"];
Node_74 [shape=record,label="{74\:\ 0x0034|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x0034|r5 = true\l}"];
Node_80 [shape=record,label="{80\:\ 0x0017|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x001d|r6 = r4\l}"];
Node_73 [shape=record,label="{73\:\ 0x0040|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__StringsKt.trim((r8v0 '$this$trim' java.lang.String A[D('$this$trim' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'predicate' kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:64:0x0034 \-\> B:57:0x0017, BACK_EDGE: B:65:0x0036 \-\> B:57:0x0017, BACK_EDGE: B:68:0x003c \-\> B:57:0x0017, CROSS_EDGE: B:60:0x001d \-\> B:61:0x001e, CROSS_EDGE: B:57:0x0017 \-\> B:69:0x0040\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/lang\/String;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;Ljava\/lang\/Boolean;\>;)Ljava\/lang\/String;\l}"];
MethodNode -> Node_54;Node_54 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_73;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_71;
Node_62 -> Node_75[style=dashed];
Node_71 -> Node_66;
Node_66 -> Node_68;
Node_66 -> Node_76[style=dashed];
Node_68 -> Node_78;
Node_78 -> Node_77;
Node_77 -> Node_57;
Node_76 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_55;
Node_75 -> Node_63;
Node_63 -> Node_72;
Node_63 -> Node_74[style=dashed];
Node_72 -> Node_65;
Node_65 -> Node_79;
Node_79 -> Node_77;
Node_74 -> Node_64;
Node_64 -> Node_80;
Node_80 -> Node_77;
Node_60 -> Node_61;
Node_73 -> Node_69;
}

