digraph "CFG forkotlin.text.StringsKt__StringsKt.splitToSequence(Ljava\/lang\/CharSequence;[Ljava\/lang\/String;ZI)Lkotlin\/sequences\/Sequence;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r8 I:java.lang.Object A[D('$this$splitToSequence' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"delimiters\" \l0x0007: INVOKE  (r9 I:java.lang.Object A[D('delimiters' java.lang.String[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1288)\l0x000b: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x000c: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$this$splitToSequence' java.lang.CharSequence)]) \l0x000e: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('delimiters' java.lang.String[])]) \l0x000f: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('ignoreCase' boolean)]) \l0x0010: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('limit' int)]) \l0x0011: INVOKE  (r0 I:kotlin.sequences.Sequence) = \l  (r1 I:java.lang.CharSequence)\l  (r2 I:java.lang.String[])\l  (r3 I:int)\l  (r4 I:boolean)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:java.lang.Object)\l type: STATIC call: kotlin.text.StringsKt__StringsKt.rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence, java.lang.String[], int, boolean, int, int, java.lang.Object):kotlin.sequences.Sequence A[MD:(java.lang.CharSequence, java.lang.String[], int, boolean, int, int, java.lang.Object):kotlin.sequences.Sequence (m)]\l0x0015: NEW_INSTANCE  (r1 I:kotlin.text.StringsKt__StringsKt$splitToSequence$1) =  kotlin.text.StringsKt__StringsKt$splitToSequence$1 \l0x0017: INVOKE  \l  (r1 I:kotlin.text.StringsKt__StringsKt$splitToSequence$1)\l  (r8 I:java.lang.CharSequence A[D('$this$splitToSequence' java.lang.CharSequence)])\l type: DIRECT call: kotlin.text.StringsKt__StringsKt$splitToSequence$1.\<init\>(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (m)]\l0x001a: CHECK_CAST (r1 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r1 I:??[OBJECT, ARRAY]) \l0x001c: INVOKE  (r0 I:kotlin.sequences.Sequence) = (r0 I:kotlin.sequences.Sequence), (r1 I:kotlin.jvm.functions.Function1) type: STATIC call: kotlin.sequences.SequencesKt.map(kotlin.sequences.Sequence, kotlin.jvm.functions.Function1):kotlin.sequences.Sequence A[MD:\<T, R\>:(kotlin.sequences.Sequence\<? extends T\>, kotlin.jvm.functions.Function1\<? super T, ? extends R\>):kotlin.sequences.Sequence\<R\> (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|RETURN\l|0x0020: RETURN  (r0 I:kotlin.sequences.Sequence\<java.lang.String\>) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<java.lang.String\> kotlin.text.StringsKt__StringsKt.splitToSequence((r8 I:java.lang.CharSequence A[D('$this$splitToSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String[] A[D('delimiters' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[D('ignoreCase' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0020: r8 '$this$splitToSequence' Ljava\/lang\/CharSequence;\l  \-1 \-0x0020: r9 'delimiters' [Ljava\/lang\/String;\l  \-1 \-0x0020: r10 'ignoreCase' Z\l  \-1 \-0x0020: r11 'limit' I\lSIGNATURE: (Ljava\/lang\/CharSequence;[Ljava\/lang\/String;ZI)Lkotlin\/sequences\/Sequence\<Ljava\/lang\/String;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

