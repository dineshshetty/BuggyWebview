digraph "CFG forkotlin.text.StringsKt__StringsKt.trimEnd(Ljava\/lang\/CharSequence;)Ljava\/lang\/CharSequence;" {
subgraph cluster_Region_830663558 {
label = "R(2:1|(2:(2:(2:3|(1:9))|12)|(1:12)))";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\lint int r2 = r6.length() \- 1\l}"];
subgraph cluster_Region_39472429 {
label = "R(2:(2:(2:3|(1:9))|12)|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1629350237 {
label = "IF [B:29:0x000d] THEN: R(2:(2:3|(1:9))|12) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x000d|if (r2 \>= 0) goto L3\l}"];
subgraph cluster_Region_688231112 {
label = "R(2:(2:3|(1:9))|12)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_938541476 {
label = "LOOP:0: (2:3|(1:9))";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0025|LOOP_END\lLOOP:0: B:30:0x000f\-\>B:33:0x0025\l|if (r2 \>= 0) goto L3\l}"];
subgraph cluster_Region_1615388957 {
label = "R(2:3|(1:9))";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x000f|LOOP_START\lLOOP:0: B:30:0x000f\-\>B:33:0x0025\lPHI: r2 \l  PHI: (r2v4 int) = (r2v1 int), (r2v5 int) binds: [B:29:0x000d, B:33:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|int r3 = r2\lr2\-\-\lchar char r4 = r6.charAt(r3)\l}"];
subgraph cluster_IfRegion_913197362 {
label = "IF [B:31:0x001b] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x001b|if (kotlin.text.CharsKt.isWhitespace(r4) == false) goto L7\l}"];
subgraph cluster_Region_285807111 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return r6.subSequence(0, r3 + 1)\l}"];
}
}
}
}
Node_35 [shape=record,label="{35\:\ 0x002b|RETURN\lORIG_RETURN\l|return \"\"\l}"];
}
}
subgraph cluster_Region_136528486 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x002b|RETURN\lORIG_RETURN\l|return \"\"\l}"];
}
}
}
Node_26 [shape=record,color=red,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0027|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x001d|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x001d}"];
Node_27 [shape=record,color=red,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0027}"];
MethodNode[shape=record,label="{public static final java.lang.CharSequence kotlin.text.StringsKt__StringsKt.trimEnd((r6v0 '$this$trimEnd' java.lang.CharSequence A[D('$this$trimEnd' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:33:0x0025 \-\> B:30:0x000f, CROSS_EDGE: B:34:0x0027 \-\> B:35:0x002b, CROSS_EDGE: B:29:0x000d \-\> B:34:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_26;Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_34[style=dashed];
Node_33 -> Node_30;
Node_33 -> Node_36[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_33[style=dashed];
Node_31 -> Node_37;
Node_38 -> Node_27;
Node_35 -> Node_27;
Node_35 -> Node_27;
Node_26 -> Node_28;
Node_36 -> Node_34;
Node_37 -> Node_32;
Node_32 -> Node_38;
Node_34 -> Node_35;
}

