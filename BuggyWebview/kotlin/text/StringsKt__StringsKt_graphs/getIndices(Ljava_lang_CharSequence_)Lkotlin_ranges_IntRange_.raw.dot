digraph "CFG forkotlin.text.StringsKt__StringsKt.getIndices(Ljava\/lang\/CharSequence;)Lkotlin\/ranges\/IntRange;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$indices' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: NEW_INSTANCE  (r0 I:kotlin.ranges.IntRange) =  kotlin.ranges.IntRange  (LINE:373)\l0x0007: INVOKE  (r1 I:int) = (r3 I:java.lang.CharSequence A[D('$this$indices' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x000b: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x000d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: INVOKE  (r0 I:kotlin.ranges.IntRange), (r2 I:int), (r1 I:int) type: DIRECT call: kotlin.ranges.IntRange.\<init\>(int, int):void A[MD:(int, int):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:kotlin.ranges.IntRange) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.ranges.IntRange kotlin.text.StringsKt__StringsKt.getIndices((r3 I:java.lang.CharSequence A[D('$this$indices' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0011: r3 '$this$indices' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

