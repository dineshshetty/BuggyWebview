digraph "CFG forkotlin.text.StringsKt__StringsKt.replaceRange(Ljava\/lang\/CharSequence;Lkotlin\/ranges\/IntRange;Ljava\/lang\/CharSequence;)Ljava\/lang\/CharSequence;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$replaceRange' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"range\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('range' kotlin.ranges.IntRange)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"replacement\" \l0x000c: INVOKE  (r4 I:java.lang.Object A[D('replacement' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: INVOKE  (r0 I:java.lang.Integer) = (r3 I:kotlin.ranges.IntRange A[D('range' kotlin.ranges.IntRange)]) type: VIRTUAL call: kotlin.ranges.IntRange.getStart():java.lang.Integer A[MD:():java.lang.Integer (m)] (LINE:529)\l0x0013: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x0017: INVOKE  (r1 I:java.lang.Integer) = (r3 I:kotlin.ranges.IntRange A[D('range' kotlin.ranges.IntRange)]) type: VIRTUAL call: kotlin.ranges.IntRange.getEndInclusive():java.lang.Integer A[MD:():java.lang.Integer (m)]\l0x001b: INVOKE  (r1 I:int) = (r1 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x001f: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0021: INVOKE  (r0 I:java.lang.CharSequence) = \l  (r2 I:java.lang.CharSequence A[D('$this$replaceRange' java.lang.CharSequence)])\l  (r0 I:int)\l  (r1 I:int)\l  (r4 I:java.lang.CharSequence A[D('replacement' java.lang.CharSequence)])\l type: STATIC call: kotlin.text.StringsKt.replaceRange(java.lang.CharSequence, int, int, java.lang.CharSequence):java.lang.CharSequence A[MD:(java.lang.CharSequence, int, int, java.lang.CharSequence):java.lang.CharSequence (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|RETURN\l|0x0025: RETURN  (r0 I:java.lang.CharSequence) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.lang.CharSequence kotlin.text.StringsKt__StringsKt.replaceRange((r2 I:java.lang.CharSequence A[D('$this$replaceRange' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.ranges.IntRange A[D('range' kotlin.ranges.IntRange), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.CharSequence A[D('replacement' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0025: r2 '$this$replaceRange' Ljava\/lang\/CharSequence;\l  \-1 \-0x0025: r3 'range' Lkotlin\/ranges\/IntRange;\l  \-1 \-0x0025: r4 'replacement' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

