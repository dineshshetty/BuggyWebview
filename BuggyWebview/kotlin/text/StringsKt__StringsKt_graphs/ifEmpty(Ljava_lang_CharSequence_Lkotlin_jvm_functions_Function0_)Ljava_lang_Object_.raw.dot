digraph "CFG forkotlin.text.StringsKt__StringsKt.ifEmpty(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function0;)Ljava\/lang\/Object;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"defaultValue\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('defaultValue' kotlin.jvm.functions.Function0)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:int) = (r1 I:java.lang.CharSequence A[D('$this$ifEmpty' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:356)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x000d \l}"];
Node_26 [shape=record,label="{26\:\ 0x000b|0x000b: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0015 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0010|0x0010: INVOKE  (r0 I:java.lang.Object) = (r2 I:kotlin.jvm.functions.Function0 A[D('defaultValue' kotlin.jvm.functions.Function0)]) type: INTERFACE call: kotlin.jvm.functions.Function0.invoke():java.lang.Object A[MD:():R (m)]\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|0x0016: RETURN  (r0 I:R) A[SYNTHETIC]\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0015|0x0015: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$ifEmpty' java.lang.CharSequence)]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|RETURN\lORIG_RETURN\l|0x0016: RETURN  (r0 I:R) \l}"];
Node_27 [shape=record,label="{27\:\ 0x000d|0x000d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private static final R kotlin.text.StringsKt__StringsKt.ifEmpty((r1 I:C extends java.lang.CharSequence & R A[D('$this$ifEmpty' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.jvm.functions.Function0\<? extends R\> A[D('defaultValue' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0015 \-\> B:31:0x0016, CROSS_EDGE: B:27:0x000d \-\> B:28:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, C extends java.lang.CharSequence & R]\lSIGNATURE: \<C::Ljava\/lang\/CharSequence;:TR;R:Ljava\/lang\/Object;\>(TC;Lkotlin\/jvm\/functions\/Function0\<+TR;\>;)TR;\lDebug Info:\l  \-1 \-0x0016: r1 '$this$ifEmpty' Ljava\/lang\/CharSequence;\l  \-1 \-0x0016: r2 'defaultValue' Lkotlin\/jvm\/functions\/Function0;\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_32;
Node_32 -> Node_23;
Node_30 -> Node_31;
Node_31 -> Node_23;
Node_27 -> Node_28;
}

