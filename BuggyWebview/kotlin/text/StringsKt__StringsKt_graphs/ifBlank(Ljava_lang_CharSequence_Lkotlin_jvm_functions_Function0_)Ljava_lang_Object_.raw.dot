digraph "CFG forkotlin.text.StringsKt__StringsKt.ifBlank(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function0;)Ljava\/lang\/Object;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"defaultValue\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('defaultValue' kotlin.jvm.functions.Function0)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:boolean) = (r1 I:java.lang.CharSequence A[D('$this$ifBlank' java.lang.CharSequence)]) type: STATIC call: kotlin.text.StringsKt.isBlank(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (m)] (LINE:367)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0010 \l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|0x000b: INVOKE  (r0 I:java.lang.Object) = (r2 I:kotlin.jvm.functions.Function0 A[D('defaultValue' kotlin.jvm.functions.Function0)]) type: INTERFACE call: kotlin.jvm.functions.Function0.invoke():java.lang.Object A[MD:():R (m)]\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0011: RETURN  (r0 I:R) A[SYNTHETIC]\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|0x0010: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$ifBlank' java.lang.CharSequence)]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|RETURN\lORIG_RETURN\l|0x0011: RETURN  (r0 I:R) \l}"];
MethodNode[shape=record,label="{private static final R kotlin.text.StringsKt__StringsKt.ifBlank((r1 I:C extends java.lang.CharSequence & R A[D('$this$ifBlank' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.jvm.functions.Function0\<? extends R\> A[D('defaultValue' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0010 \-\> B:22:0x0011\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, C extends java.lang.CharSequence & R]\lSIGNATURE: \<C::Ljava\/lang\/CharSequence;:TR;R:Ljava\/lang\/Object;\>(TC;Lkotlin\/jvm\/functions\/Function0\<+TR;\>;)TR;\lDebug Info:\l  \-1 \-0x0011: r1 '$this$ifBlank' Ljava\/lang\/CharSequence;\l  \-1 \-0x0011: r2 'defaultValue' Lkotlin\/jvm\/functions\/Function0;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_23;
Node_23 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_17;
}

