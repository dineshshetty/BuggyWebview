digraph "CFG forkotlin.text.StringsKt__StringsKt.trimStart(Ljava\/lang\/String;[C)Ljava\/lang\/String;" {
subgraph cluster_Region_910340186 {
label = "R(4:1|(1:(2:3|(1:5)(2:7|1))(2:12|1))|8|9) | DECL_VAR: java.lang.String null\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"chars\")\ljava.lang.CharSequence java.lang.String r2 = r8\lint r4 = 0\lint int r5 = r2.length()\l}"];
subgraph cluster_LoopRegion_1347857249 {
label = "LOOP:0: (1:(2:3|(1:5)(2:7|1))(2:12|1))";
node [shape=record,color=blue];
subgraph cluster_Region_1830523924 {
label = "R(1:(2:3|(1:5)(2:7|1))(2:12|1))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1626908005 {
label = "IF [B:29:0x0015] THEN: R(2:3|(1:5)(2:7|1)) ELSE: R(2:12|1)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0015|LOOP_START\lLOOP:0: B:29:0x0015\-\>B:33:0x002b\lPHI: r4 \l  PHI: (r4v1 'index$iv$iv' int) = (r4v0 'index$iv$iv' int), (r4v3 'index$iv$iv' int) binds: [B:28:0x0000, B:33:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \< r5) goto L3\l}"];
subgraph cluster_Region_285106735 {
label = "R(2:3|(1:5)(2:7|1))";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0017|char char r6 = r2.charAt(r4)\l}"];
subgraph cluster_IfRegion_633621365 {
label = "IF [B:31:0x0020] THEN: R(1:5) ELSE: R(2:7|1)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0020|if (kotlin.collections.ArraysKt.contains(r9, r6) != false) goto L5\l}"];
subgraph cluster_Region_1134239020 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x002b|LOOP_END\lLOOP:0: B:29:0x0015\-\>B:33:0x002b\l|r4++\l}"];
}
subgraph cluster_Region_1130146133 {
label = "R(2:7|1)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0022|EDGE_INSN: B:32:0x0022\-\>B:35:0x0033 ?: BREAK  \l|java.lang.CharSequence r5 = r2.subSequence(r4, r2.length())\l}"];
Node_InsnContainer_1584702326 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_57957455 {
label = "R(2:12|1)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x002e|EDGE_INSN: B:34:0x002e\-\>B:35:0x0033 ?: BREAK  \l|java.lang.CharSequence r5 = \"\"\l}"];
Node_InsnContainer_821132523 [shape=record,label="{|break\l}"];
}
}
}
}
Node_35 [shape=record,label="{35\:\ 0x0033|EDGE_INSN: B:32:0x0022\-\>B:35:0x0033 ?: BREAK  , EDGE_INSN: B:34:0x002e\-\>B:35:0x0033 ?: BREAK  \lPHI: r5 \l  PHI: (r5v3 java.lang.CharSequence) = (r5v2 java.lang.String), (r5v5 java.lang.CharSequence) binds: [B:34:0x002e, B:32:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.String java.lang.String r0 = r5.toString()\l}"];
Node_36 [shape=record,label="{36\:\ 0x0037|RETURN\l|return r0\l}"];
}
Node_26 [shape=record,color=red,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0022|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x002e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__StringsKt.trimStart((r8v0 '$this$trimStart' java.lang.String A[D('$this$trimStart' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'chars' char[] A[D('chars' char[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:33:0x002b \-\> B:29:0x0015, CROSS_EDGE: B:34:0x002e \-\> B:35:0x0033\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_26;Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_38[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_33;
Node_31 -> Node_37[style=dashed];
Node_33 -> Node_29;
Node_32 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_27;
Node_26 -> Node_28;
Node_37 -> Node_32;
Node_38 -> Node_34;
}

