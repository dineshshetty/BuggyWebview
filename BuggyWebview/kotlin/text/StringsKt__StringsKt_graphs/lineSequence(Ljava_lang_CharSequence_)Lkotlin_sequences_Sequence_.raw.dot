digraph "CFG forkotlin.text.StringsKt__StringsKt.lineSequence(Ljava\/lang\/CharSequence;)Lkotlin\/sequences\/Sequence;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$lineSequence' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"rn\"  (LINE:1394)\l0x0007: CONST_STR  (r1 I:java.lang.String) =  \"n\" \l0x0009: CONST_STR  (r2 I:java.lang.String) =  \"r\" \l0x000b: FILLED_NEW_ARRAY  (r4 I:java.lang.String[]) = (r0 I:java.lang.String), (r1 I:java.lang.String), (r2 I:java.lang.String) elemType: java.lang.String \l0x000f: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0011: CONST  (r7 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l0x0012: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$lineSequence' java.lang.CharSequence)]) \l0x0014: INVOKE  (r0 I:kotlin.sequences.Sequence) = \l  (r3 I:java.lang.CharSequence)\l  (r4 I:java.lang.String[])\l  (r5 I:boolean)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:java.lang.Object)\l type: STATIC call: kotlin.text.StringsKt.splitToSequence$default(java.lang.CharSequence, java.lang.String[], boolean, int, int, java.lang.Object):kotlin.sequences.Sequence A[MD:(java.lang.CharSequence, java.lang.String[], boolean, int, int, java.lang.Object):kotlin.sequences.Sequence (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:kotlin.sequences.Sequence\<java.lang.String\>) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<java.lang.String\> kotlin.text.StringsKt__StringsKt.lineSequence((r9 I:java.lang.CharSequence A[D('$this$lineSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r9 '$this$lineSequence' Ljava\/lang\/CharSequence;\lSIGNATURE: (Ljava\/lang\/CharSequence;)Lkotlin\/sequences\/Sequence\<Ljava\/lang\/String;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

