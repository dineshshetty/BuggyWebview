digraph "CFG forkotlin.text.StringsKt__StringsKt.lastIndexOfAny(Ljava\/lang\/CharSequence;[CIZ)I" {
subgraph cluster_Region_297303733 {
label = "R(2:1|(2:(2:7|8)|(3:10|(3:13|(1:(2:(1:24)|(2:15|(2:(2:19|1)|(1:17)))))|(2:(1:23)|(1:21)))|26)))";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r11, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r12, \"chars\")\l}"];
subgraph cluster_Region_1747641276 {
label = "R(2:(2:7|8)|(3:10|(3:13|(1:(2:(1:24)|(2:15|(2:(2:19|1)|(1:17)))))|(2:(1:23)|(1:21)))|26))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_311400561 {
label = "IF [B:59:0x000b, B:61:0x000e, B:63:0x0012] THEN: R(2:7|8) ELSE: null";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x000b|if (r14 == false) goto L3\l}"];
Node_61 [shape=record,label="{61\:\ 0x000e|ADDED_TO_REGION\l|if (r12.length == 1) goto L5\l}"];
Node_63 [shape=record,label="{63\:\ 0x0012|ADDED_TO_REGION\l|if ((r11 instanceof java.lang.String) != false) goto L7\l}"];
subgraph cluster_Region_819727709 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x0014}"];
Node_65 [shape=record,label="{65\:\ 0x001f|RETURN\l|return ((java.lang.String) r11).lastIndexOf(kotlin.collections.ArraysKt.single(r12), r13)\l}"];
}
}
subgraph cluster_Region_466375254 {
label = "R(3:10|(3:13|(1:(2:(1:24)|(2:15|(2:(2:19|1)|(1:17)))))|(2:(1:23)|(1:21)))|26)";
node [shape=record,color=blue];
Node_66 [shape=record,label="{66\:\ 0x0020|int int r1 = kotlin.ranges.RangesKt.coerceAtMost(r13, kotlin.text.StringsKt.getLastIndex(r11))\l}"];
subgraph cluster_LoopRegion_55005550 {
label = "LOOP:0: (3:13|(1:(2:(1:24)|(2:15|(2:(2:19|1)|(1:17)))))|(2:(1:23)|(1:21)))";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x0029|if ((\-1) \< r1) goto L13\l}"];
subgraph cluster_Region_1673161309 {
label = "R(3:13|(1:(2:(1:24)|(2:15|(2:(2:19|1)|(1:17)))))|(2:(1:23)|(1:21)))";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x002b|char char r2 = r11.charAt(r1)\lint int r5 = r12.length\lboolean r6 = false\lint r7 = 0\l}"];
subgraph cluster_LoopRegion_1648590885 {
label = "LOOP:1: (1:(2:(1:24)|(2:15|(2:(2:19|1)|(1:17)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1573632210 {
label = "R(1:(2:(1:24)|(2:15|(2:(2:19|1)|(1:17)))))";
node [shape=record,color=blue];
subgraph cluster_Region_862584586 {
label = "R(2:(1:24)|(2:15|(2:(2:19|1)|(1:17))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_950839761 {
label = "IF [B:70:0x0034] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x0034|LOOP_START\lLOOP:1: B:70:0x0034\-\>B:74:0x0042\lPHI: r7 \l  PHI: (r7v1 int) = (r7v0 int), (r7v2 int) binds: [B:69:0x002b, B:74:0x0042] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 \>= r5) goto L24\l}"];
subgraph cluster_Region_1670359775 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_82 [shape=record,label="{82\:\ 0x0046|SYNTHETIC\lEDGE_INSN: B:82:0x0046\-\>B:76:0x0046 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1129877938 {
label = "R(2:15|(2:(2:19|1)|(1:17)))";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x0036|char char r8 = r12[r7]\l}"];
subgraph cluster_Region_498289699 {
label = "R(2:(2:19|1)|(1:17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_594031746 {
label = "IF [B:72:0x003e] THEN: R(2:19|1) ELSE: null";
node [shape=record,color=blue];
Node_72 [shape=record,label="{72\:\ 0x003e|if (kotlin.text.CharsKt.equals(r8, r2, r14) == true) goto L18\l}"];
subgraph cluster_Region_150258715 {
label = "R(2:19|1)";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x0040|EDGE_INSN: B:73:0x0040\-\>B:76:0x0046 ?: BREAK  \l|r6 = true\l}"];
Node_InsnContainer_490629743 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_Region_518476190 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x0042|LOOP_END\lLOOP:1: B:70:0x0034\-\>B:74:0x0042\l|r7++\l}"];
}
}
}
}
}
}
subgraph cluster_Region_1641236333 {
label = "R(2:(1:23)|(1:21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2085205681 {
label = "IF [B:76:0x0046] THEN: R(1:23) ELSE: null";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x0046|EDGE_INSN: B:82:0x0046\-\>B:76:0x0046 ?: BREAK  , EDGE_INSN: B:73:0x0040\-\>B:76:0x0046 ?: BREAK  \lPHI: r6 \l  PHI: (r6v1 boolean) = (r6v0 boolean), (r6v2 boolean) binds: [B:82:0x0046, B:73:0x0040] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 != false) goto L22\l}"];
subgraph cluster_Region_446552734 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_77 [shape=record,label="{77\:\ 0x0048|RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_2146207352 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x0049|LOOP_END\lLOOP:0: B:67:0x0028\-\>B:78:0x0049\l|r1\-\-\l}"];
}
}
}
}
Node_79 [shape=record,label="{79\:\ 0x004c|RETURN\l|return \-1\l}"];
}
}
}
Node_56 [shape=record,color=red,label="{56\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x000d}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x0010}"];
Node_57 [shape=record,color=red,label="{57\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x0028|LOOP_START\lLOOP:0: B:67:0x0028\-\>B:78:0x0049\lPHI: r1 \l  PHI: (r1v2 'index' int) = (r1v1 'index' int), (r1v3 'index' int) binds: [B:66:0x0020, B:78:0x0049] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_83 [shape=record,color=red,label="{83\:\ 0x0040|SYNTHETIC\l}"];
Node_80 [shape=record,color=red,label="{80\:\ 0x0048|SYNTHETIC\l}"];
Node_81 [shape=record,color=red,label="{81\:\ 0x004c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final int kotlin.text.StringsKt__StringsKt.lastIndexOfAny((r11v0 '$this$lastIndexOfAny' java.lang.CharSequence A[D('$this$lastIndexOfAny' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'chars' char[] A[D('chars' char[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'startIndex' int A[D('startIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'ignoreCase' boolean A[D('ignoreCase' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:77:0x0048 \-\> B:57:?, BACK_EDGE: B:78:0x0049 \-\> B:67:0x0028, BACK_EDGE: B:74:0x0042 \-\> B:70:0x0034, CROSS_EDGE: B:70:0x0034 \-\> B:76:0x0046, CROSS_EDGE: B:79:0x004c \-\> B:57:?, CROSS_EDGE: B:61:0x000e \-\> B:66:0x0020, CROSS_EDGE: B:59:0x000b \-\> B:66:0x0020\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_56;Node_58 -> Node_59;
Node_59 -> Node_60;
Node_59 -> Node_66[style=dashed];
Node_61 -> Node_62;
Node_61 -> Node_66[style=dashed];
Node_63 -> Node_64;
Node_63 -> Node_66[style=dashed];
Node_64 -> Node_65;
Node_65 -> Node_57;
Node_66 -> Node_67;
Node_68 -> Node_69;
Node_68 -> Node_81[style=dashed];
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_82;
Node_82 -> Node_76;
Node_71 -> Node_72;
Node_72 -> Node_74[style=dashed];
Node_72 -> Node_83;
Node_73 -> Node_76;
Node_74 -> Node_70;
Node_76 -> Node_78[style=dashed];
Node_76 -> Node_80;
Node_77 -> Node_57;
Node_78 -> Node_67;
Node_79 -> Node_57;
Node_56 -> Node_58;
Node_60 -> Node_61;
Node_62 -> Node_63;
Node_67 -> Node_68;
Node_83 -> Node_73;
Node_80 -> Node_77;
Node_81 -> Node_79;
}

