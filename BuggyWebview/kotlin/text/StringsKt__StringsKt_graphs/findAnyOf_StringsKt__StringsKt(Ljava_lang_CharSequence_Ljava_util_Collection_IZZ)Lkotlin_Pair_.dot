digraph "CFG forkotlin.text.StringsKt__StringsKt.findAnyOf$StringsKt__StringsKt(Ljava\/lang\/CharSequence;Ljava\/util\/Collection;IZZ)Lkotlin\/Pair;" {
Node_136 [shape=record,label="{136\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_138 [shape=record,label="{138\:\ 0x0000}"];
Node_139 [shape=record,label="{139\:\ 0x0005|if (r22 != false) goto L14\l}"];
Node_140 [shape=record,label="{140\:\ 0x0007}"];
Node_141 [shape=record,label="{141\:\ 0x000c|if (r20.size() != 1) goto L14\l}"];
Node_142 [shape=record,label="{142\:\ 0x000e|java.lang.String r9 = (java.lang.String) kotlin.collections.CollectionsKt.single(r20)\l}"];
Node_143 [shape=record,label="{143\:\ 0x0021|if (r23 != false) goto L13\l}"];
Node_144 [shape=record,label="{144\:\ 0x0023|int r0 = kotlin.text.StringsKt.indexOf$default(r19, r9, r21, false, 4, null)\l}"];
Node_146 [shape=record,label="{146\:\ 0x002c|PHI: r0 \l  PHI: (r0v22 'index' int) = (r0v21 'index' int), (r0v23 'index' int) binds: [B:145:0x0028, B:144:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \>= 0) goto L9\l}"];
Node_148 [shape=record,label="{148\:\ 0x002f}"];
Node_149 [shape=record,label="{149\:\ 0x0037|RETURN\lORIG_RETURN\l|return kotlin.TuplesKt.m15to(java.lang.Integer.valueOf(r0), r9)\l}"];
Node_137 [shape=record,label="{137\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_203 [shape=record,label="{203\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_145 [shape=record,label="{145\:\ 0x0028|int r0 = kotlin.text.StringsKt.lastIndexOf$default(r19, r9, r21, false, 4, null)\l}"];
Node_150 [shape=record,label="{150\:\ 0x0038}"];
Node_151 [shape=record,label="{151\:\ 0x0039|if (r23 != false) goto L64\l}"];
Node_152 [shape=record,label="{152\:\ 0x003b|kotlin.ranges.IntProgression r1 = new kotlin.ranges.IntRange(kotlin.ranges.RangesKt.coerceAtLeast(r21, 0), r19.length())\l}"];
Node_154 [shape=record,label="{154\:\ 0x0057|PHI: r1 \l  PHI: (r1v3 kotlin.ranges.IntProgression) = (r1v2 kotlin.ranges.IntProgression), (r1v11 kotlin.ranges.IntRange) binds: [B:153:0x004b, B:152:0x003b] A[DONT_GENERATE, DONT_INLINE]\l|r9 = r1\l}"];
Node_155 [shape=record,label="{155\:\ 0x005a|if ((r19 instanceof java.lang.String) == false) goto L42\l}"];
Node_156 [shape=record,label="{156\:\ 0x005c|int r0 = r9.getFirst()\lint r10 = r9.getLast()\lint r11 = r9.getStep()\l}"];
Node_157 [shape=record,label="{157\:\ 0x0068|if (r11 \<= 0) goto L40\l}"];
Node_158 [shape=record,label="{158\:\ 0x006a|if (r0 \<= r10) goto L22\l}"];
Node_161 [shape=record,label="{161\:\ 0x0070|r12 = r0\l}"];
Node_162 [shape=record,label="{162\:\ 0x0071|LOOP_START\lLOOP:0: B:162:0x0071\-\>B:174:0x00b1\lPHI: r12 \l  PHI: (r12v4 'index' int) = (r12v3 'index' int), (r12v5 'index' int) binds: [B:161:0x0070, B:174:0x00b1] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Iterable r13 = r20\ljava.util.Iterator r15 = r13.iterator()\l}"];
Node_163 [shape=record,label="{163\:\ 0x007a|LOOP_START\lLOOP:1: B:163:0x007a\-\>B:166:0x009b\l}"];
Node_164 [shape=record,label="{164\:\ 0x007e|if (r15.hasNext() == false) goto L38\l}"];
Node_165 [shape=record,label="{165\:\ 0x0080|java.lang.Object r16 = r15.next()\ljava.lang.String r17 = (java.lang.String) r16\lr3 = r12\l}"];
Node_166 [shape=record,label="{166\:\ 0x009b|LOOP_END\lLOOP:1: B:163:0x007a\-\>B:166:0x009b\l|if (kotlin.text.StringsKt.regionMatches(r17, 0, (java.lang.String) r19, r3, r17.length(), r22) == false) goto L24\l}"];
Node_197 [shape=record,label="{197\:\ 0x00a0|SYNTHETIC\l}"];
Node_169 [shape=record,label="{169\:\ 0x00a0|PHI: r16 \l  PHI: (r16v4 'element$iv' java.lang.Object) = (r16v3 'element$iv' java.lang.Object), (r16v5 'element$iv' java.lang.Object) binds: [B:168:0x009e, B:197:0x00a0] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.String r0 = (java.lang.String) r16\l}"];
Node_170 [shape=record,label="{170\:\ 0x00a4|if (r0 == null) goto L31\l}"];
Node_173 [shape=record,label="{173\:\ 0x00af|if (r12 == r10) goto L33\l}"];
Node_174 [shape=record,label="{174\:\ 0x00b1|LOOP_END\lLOOP:0: B:162:0x0071\-\>B:174:0x00b1\l|int r12 = r12 + r11\l}"];
Node_196 [shape=record,label="{196\:\ 0x010b|SYNTHETIC\l}"];
Node_194 [shape=record,label="{194\:\ 0x010b|RETURN\l|return null\l}"];
Node_195 [shape=record,label="{195\:\ 0x00a6|SYNTHETIC\l}"];
Node_171 [shape=record,label="{171\:\ 0x00a6}"];
Node_172 [shape=record,label="{172\:\ 0x00ae|RETURN\l|return kotlin.TuplesKt.m15to(java.lang.Integer.valueOf(r12), r0)\l}"];
Node_198 [shape=record,label="{198\:\ 0x009e|SYNTHETIC\l}"];
Node_168 [shape=record,label="{168\:\ 0x009e|r16 = null\l}"];
Node_159 [shape=record,label="{159\:\ 0x006c|if (r11 \>= 0) goto L34\l}"];
Node_160 [shape=record,label="{160\:\ 0x006e|if (r10 \> r0) goto L34\l}"];
Node_175 [shape=record,label="{175\:\ 0x00b3|int r0 = r9.getFirst()\lint r10 = r9.getLast()\lint r11 = r9.getStep()\l}"];
Node_176 [shape=record,label="{176\:\ 0x00bf|if (r11 \<= 0) goto L62\l}"];
Node_177 [shape=record,label="{177\:\ 0x00c1|if (r0 \<= r10) goto L45\l}"];
Node_180 [shape=record,label="{180\:\ 0x00c7|r12 = r0\l}"];
Node_181 [shape=record,label="{181\:\ 0x00c8|LOOP_START\lLOOP:2: B:181:0x00c8\-\>B:193:0x0109\lPHI: r12 \l  PHI: (r12v1 'index' int) = (r12v0 'index' int), (r12v2 'index' int) binds: [B:180:0x00c7, B:193:0x0109] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Iterable r13 = r20\ljava.util.Iterator r15 = r13.iterator()\l}"];
Node_182 [shape=record,label="{182\:\ 0x00d1|LOOP_START\lLOOP:3: B:182:0x00d1\-\>B:185:0x00f3\l}"];
Node_183 [shape=record,label="{183\:\ 0x00d5|if (r15.hasNext() == false) goto L60\l}"];
Node_184 [shape=record,label="{184\:\ 0x00d7|java.lang.Object r16 = r15.next()\ljava.lang.String r17 = (java.lang.String) r16\lr3 = r12\l}"];
Node_185 [shape=record,label="{185\:\ 0x00f3|LOOP_END\lLOOP:3: B:182:0x00d1\-\>B:185:0x00f3\l|if (kotlin.text.StringsKt.regionMatchesImpl(r17, 0, r19, r3, r17.length(), r22) == false) goto L47\l}"];
Node_201 [shape=record,label="{201\:\ 0x00f8|SYNTHETIC\l}"];
Node_188 [shape=record,label="{188\:\ 0x00f8|PHI: r16 \l  PHI: (r16v1 'element$iv' java.lang.Object) = (r16v0 'element$iv' java.lang.Object), (r16v2 'element$iv' java.lang.Object) binds: [B:187:0x00f6, B:201:0x00f8] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.String r0 = (java.lang.String) r16\l}"];
Node_189 [shape=record,label="{189\:\ 0x00fc|if (r0 == null) goto L54\l}"];
Node_192 [shape=record,label="{192\:\ 0x0107|if (r12 == r10) goto L56\l}"];
Node_193 [shape=record,label="{193\:\ 0x0109|LOOP_END\lLOOP:2: B:181:0x00c8\-\>B:193:0x0109\l|int r12 = r12 + r11\l}"];
Node_199 [shape=record,label="{199\:\ 0x010b|SYNTHETIC\l}"];
Node_200 [shape=record,label="{200\:\ 0x00fe|SYNTHETIC\l}"];
Node_190 [shape=record,label="{190\:\ 0x00fe}"];
Node_191 [shape=record,label="{191\:\ 0x0106|RETURN\l|return kotlin.TuplesKt.m15to(java.lang.Integer.valueOf(r12), r0)\l}"];
Node_202 [shape=record,label="{202\:\ 0x00f6|SYNTHETIC\l}"];
Node_187 [shape=record,label="{187\:\ 0x00f6|r16 = null\l}"];
Node_178 [shape=record,label="{178\:\ 0x00c3|if (r11 \>= 0) goto L34\l}"];
Node_179 [shape=record,label="{179\:\ 0x00c5|if (r10 \> r0) goto L34\l}"];
Node_153 [shape=record,label="{153\:\ 0x004b|kotlin.ranges.IntProgression r1 = kotlin.ranges.RangesKt.downTo(kotlin.ranges.RangesKt.coerceAtMost(r21, kotlin.text.StringsKt.getLastIndex(r19)), 0)\l}"];
MethodNode[shape=record,label="{public static final kotlin.Pair\<java.lang.Integer, java.lang.String\> kotlin.text.StringsKt__StringsKt.findAnyOf$StringsKt__StringsKt((r19v0 '$this$findAnyOf' java.lang.CharSequence A[D('$this$findAnyOf' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 java.util.Collection\<java.lang.String\> A[D('strings' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'startIndex' int A[D('startIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'ignoreCase' boolean A[D('ignoreCase' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'last' boolean A[D('last' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:146:0x002c \-\> B:149:0x0037, CROSS_EDGE: B:145:0x0028 \-\> B:146:0x002c, BACK_EDGE: B:166:0x009b \-\> B:163:0x007a, CROSS_EDGE: B:172:0x00ae \-\> B:137:?, BACK_EDGE: B:174:0x00b1 \-\> B:162:0x0071, CROSS_EDGE: B:194:0x010b \-\> B:137:?, CROSS_EDGE: B:168:0x009e \-\> B:169:0x00a0, CROSS_EDGE: B:160:0x006e \-\> B:194:0x010b, CROSS_EDGE: B:159:0x006c \-\> B:194:0x010b, CROSS_EDGE: B:158:0x006a \-\> B:161:0x0070, CROSS_EDGE: B:157:0x0068 \-\> B:159:0x006c, BACK_EDGE: B:185:0x00f3 \-\> B:182:0x00d1, CROSS_EDGE: B:191:0x0106 \-\> B:137:?, BACK_EDGE: B:193:0x0109 \-\> B:181:0x00c8, CROSS_EDGE: B:192:0x0107 \-\> B:194:0x010b, CROSS_EDGE: B:187:0x00f6 \-\> B:188:0x00f8, CROSS_EDGE: B:179:0x00c5 \-\> B:194:0x010b, CROSS_EDGE: B:178:0x00c3 \-\> B:194:0x010b, CROSS_EDGE: B:177:0x00c1 \-\> B:180:0x00c7, CROSS_EDGE: B:176:0x00bf \-\> B:178:0x00c3, CROSS_EDGE: B:153:0x004b \-\> B:154:0x0057, CROSS_EDGE: B:139:0x0005 \-\> B:150:0x0038\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/lang\/CharSequence;Ljava\/util\/Collection\<Ljava\/lang\/String;\>;IZZ)Lkotlin\/Pair\<Ljava\/lang\/Integer;Ljava\/lang\/String;\>;\l}"];
MethodNode -> Node_136;Node_136 -> Node_138;
Node_138 -> Node_139;
Node_139 -> Node_140[style=dashed];
Node_139 -> Node_150;
Node_140 -> Node_141;
Node_141 -> Node_142[style=dashed];
Node_141 -> Node_150;
Node_142 -> Node_143;
Node_143 -> Node_144[style=dashed];
Node_143 -> Node_145;
Node_144 -> Node_146;
Node_146 -> Node_148;
Node_146 -> Node_203[style=dashed];
Node_148 -> Node_149;
Node_149 -> Node_137;
Node_203 -> Node_137;
Node_145 -> Node_146;
Node_150 -> Node_151;
Node_151 -> Node_152[style=dashed];
Node_151 -> Node_153;
Node_152 -> Node_154;
Node_154 -> Node_155;
Node_155 -> Node_156[style=dashed];
Node_155 -> Node_175;
Node_156 -> Node_157;
Node_157 -> Node_158[style=dashed];
Node_157 -> Node_159;
Node_158 -> Node_159[style=dashed];
Node_158 -> Node_161;
Node_161 -> Node_162;
Node_162 -> Node_163;
Node_163 -> Node_164;
Node_164 -> Node_165[style=dashed];
Node_164 -> Node_198;
Node_165 -> Node_166;
Node_166 -> Node_163;
Node_166 -> Node_197[style=dashed];
Node_197 -> Node_169;
Node_169 -> Node_170;
Node_170 -> Node_173;
Node_170 -> Node_195[style=dashed];
Node_173 -> Node_174[style=dashed];
Node_173 -> Node_196;
Node_174 -> Node_162;
Node_196 -> Node_194;
Node_194 -> Node_137;
Node_195 -> Node_171;
Node_171 -> Node_172;
Node_172 -> Node_137;
Node_198 -> Node_168;
Node_168 -> Node_169;
Node_159 -> Node_160[style=dashed];
Node_159 -> Node_194;
Node_160 -> Node_161[style=dashed];
Node_160 -> Node_194;
Node_175 -> Node_176;
Node_176 -> Node_177[style=dashed];
Node_176 -> Node_178;
Node_177 -> Node_178[style=dashed];
Node_177 -> Node_180;
Node_180 -> Node_181;
Node_181 -> Node_182;
Node_182 -> Node_183;
Node_183 -> Node_184[style=dashed];
Node_183 -> Node_202;
Node_184 -> Node_185;
Node_185 -> Node_182;
Node_185 -> Node_201[style=dashed];
Node_201 -> Node_188;
Node_188 -> Node_189;
Node_189 -> Node_192;
Node_189 -> Node_200[style=dashed];
Node_192 -> Node_193[style=dashed];
Node_192 -> Node_199;
Node_193 -> Node_181;
Node_199 -> Node_194;
Node_200 -> Node_190;
Node_190 -> Node_191;
Node_191 -> Node_137;
Node_202 -> Node_187;
Node_187 -> Node_188;
Node_178 -> Node_179[style=dashed];
Node_178 -> Node_194;
Node_179 -> Node_180[style=dashed];
Node_179 -> Node_194;
Node_153 -> Node_154;
}

