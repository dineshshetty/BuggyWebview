digraph "CFG forkotlin.text.MatcherMatchResult$groupValues$1.get(I)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:kotlin.text.MatcherMatchResult) = (r1 I:kotlin.text.MatcherMatchResult$groupValues$1) kotlin.text.MatcherMatchResult$groupValues$1.this$0 kotlin.text.MatcherMatchResult  (LINE:383)\l0x0002: INVOKE  (r0 I:java.util.regex.MatchResult) = (r0 I:kotlin.text.MatcherMatchResult) type: STATIC call: kotlin.text.MatcherMatchResult.access$getMatchResult(kotlin.text.MatcherMatchResult):java.util.regex.MatchResult A[MD:(kotlin.text.MatcherMatchResult):java.util.regex.MatchResult (m)]\l0x0006: INVOKE  (r0 I:java.lang.String) = (r0 I:java.util.regex.MatchResult), (r2 I:int A[D('index' int)]) type: INTERFACE call: java.util.regex.MatchResult.group(int):java.lang.String A[MD:(int):java.lang.String (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|RETURN\lORIG_RETURN\l|0x000c: CONST_STR  (r0 I:java.lang.String) =  \"\" \l0x000e: RETURN  (r0 I:java.lang.String) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|0x000e: RETURN  (r0 I:java.lang.String) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public java.lang.String kotlin.text.MatcherMatchResult$groupValues$1.get((r1 'this' I:kotlin.text.MatcherMatchResult$groupValues$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:3:0x000a \-\> B:5:0x000e\lDebug Info:\l  \-1 \-0x000e: r2 'index' I\lMETHOD_OVERRIDE: [ClspMth\{java.util.List.get(int):E\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_1;
Node_6 -> Node_1;
}

