digraph "CFG forkotlin.text.MatcherMatchResult$groups$1.contains(Ljava\/lang\/Object;)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('element' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0004  (LINE:358)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000a \l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|RETURN\l|0x0008: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: RETURN  (r0 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|0x000a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('element' java.lang.Object)]) \l0x000b: CHECK_CAST (r0 I:kotlin.text.MatchGroup) = (kotlin.text.MatchGroup) (r0 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  (r0 I:boolean) = (r1 I:kotlin.text.MatcherMatchResult$groups$1), (r0 I:kotlin.text.MatchGroup) type: VIRTUAL call: kotlin.text.MatcherMatchResult$groups$1.contains(kotlin.text.MatchGroup):boolean A[MD:(kotlin.text.MatchGroup):boolean (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:boolean) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: INSTANCE_OF  (r0 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('element' java.lang.Object)]) kotlin.text.MatchGroup \l}"];
MethodNode[shape=record,label="{public final \/* bridge *\/ boolean kotlin.text.MatcherMatchResult$groups$1.contains((r1 'this' I:kotlin.text.MatcherMatchResult$groups$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Object A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:19:0x0011 \-\> B:11:?, CROSS_EDGE: B:14:0x0004 \-\> B:15:0x0006\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0011: r2 'element' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Collection.contains(java.lang.Object):boolean\}]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
Node_14 -> Node_15;
}

