digraph "CFG forkotlin.text.MatcherMatchResult.getRange()Lkotlin\/ranges\/IntRange;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:java.util.regex.MatchResult) = (r1 I:kotlin.text.MatcherMatchResult) type: DIRECT call: kotlin.text.MatcherMatchResult.getMatchResult():java.util.regex.MatchResult A[MD:():java.util.regex.MatchResult (m)] (LINE:354)\l0x0004: INVOKE  (r0 I:kotlin.ranges.IntRange) = (r0 I:java.util.regex.MatchResult) type: STATIC call: kotlin.text.RegexKt.access$range(java.util.regex.MatchResult):kotlin.ranges.IntRange A[MD:(java.util.regex.MatchResult):kotlin.ranges.IntRange (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:kotlin.ranges.IntRange) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlin.ranges.IntRange kotlin.text.MatcherMatchResult.getRange((r1 'this' I:kotlin.text.MatcherMatchResult A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlin.text.MatchResult.getRange():kotlin.ranges.IntRange]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

