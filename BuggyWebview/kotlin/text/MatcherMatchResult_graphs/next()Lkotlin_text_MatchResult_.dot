digraph "CFG forkotlin.text.MatcherMatchResult.next()Lkotlin\/text\/MatchResult;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|int r0 = getMatchResult().end()\l}"];
Node_27 [shape=record,label="{27\:\ 0x0018|if (getMatchResult().end() != getMatchResult().start()) goto L10\l}"];
Node_28 [shape=record,label="{28\:\ 0x001a|r1 = 1\l}"];
Node_30 [shape=record,label="{30\:\ 0x001d|PHI: r1 \l  PHI: (r1v3 int) = (r1v2 int), (r1v11 int) binds: [B:29:0x001c, B:28:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = r0 + r1\l}"];
Node_31 [shape=record,label="{31\:\ 0x0024|if (r0 \> r3.input.length()) goto L9\l}"];
Node_32 [shape=record,label="{32\:\ 0x0026|java.util.regex.Matcher r1 = r3.matcher.pattern().matcher(r3.input)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, \"matcher.pattern().matcher(input)\")\lkotlin.text.MatchResult r1 = kotlin.text.RegexKt.findNext(r1, r0, r3.input)\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x003e|RETURN\lORIG_RETURN\l|return null\l}"];
Node_29 [shape=record,label="{29\:\ 0x001c|r1 = 0\l}"];
MethodNode[shape=record,label="{public kotlin.text.MatchResult kotlin.text.MatcherMatchResult.next((r3v0 'this' kotlin.text.MatcherMatchResult A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x003e \-\> B:34:0x003f, CROSS_EDGE: B:29:0x001c \-\> B:30:0x001d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlin.text.MatchResult.next():kotlin.text.MatchResult]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_35;
Node_35 -> Node_25;
Node_33 -> Node_25;
Node_29 -> Node_30;
}

