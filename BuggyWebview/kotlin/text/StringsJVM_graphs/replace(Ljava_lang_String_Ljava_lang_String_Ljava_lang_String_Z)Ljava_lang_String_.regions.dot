digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.replace(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Z)Ljava\/lang\/String;" {
subgraph cluster_Region_1550837905 {
label = "R(2:1|(2:(1:3)|(2:5|(2:(1:17)|(4:7|(2:8|(2:(1:15)|(1:10)))|13|14)))))";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r11, \"oldValue\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r12, \"newValue\")\lint int r2 = kotlin.text.StringsKt.indexOf(r10, r11, 0, r13)\l}"];
subgraph cluster_Region_315130270 {
label = "R(2:(1:3)|(2:5|(2:(1:17)|(4:7|(2:8|(2:(1:15)|(1:10)))|13|14))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1218546024 {
label = "IF [B:39:0x0019] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0019|if (r2 \< 0) goto L3\l}"];
subgraph cluster_Region_456954743 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x001b|RETURN\l|return r10\l}"];
}
}
subgraph cluster_Region_307585806 {
label = "R(2:5|(2:(1:17)|(4:7|(2:8|(2:(1:15)|(1:10)))|13|14)))";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x001c|int int r3 = r11.length()\lint int r4 = kotlin.ranges.RangesKt.coerceAtLeast(r3, 1)\lint int r5 = (r10.length() \- r3) + r12.length()\l}"];
subgraph cluster_Region_828454478 {
label = "R(2:(1:17)|(4:7|(2:8|(2:(1:15)|(1:10)))|13|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_807575135 {
label = "IF [B:42:0x002f] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x002f|if (r5 \< 0) goto L16\l}"];
subgraph cluster_Region_104231176 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x006c|throw new java.lang.OutOfMemoryError()\l}"];
}
}
subgraph cluster_Region_1933840462 {
label = "R(4:7|(2:8|(2:(1:15)|(1:10)))|13|14)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0031|java.lang.StringBuilder java.lang.StringBuilder r6 = new java.lang.StringBuilder(r5)\lint r7 = 0\l}"];
subgraph cluster_LoopRegion_1459313264 {
label = "LOOP:0: (2:8|(2:(1:15)|(1:10)))";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x0051|LOOP_END\lLOOP:0: B:44:0x0037\-\>B:47:0x0051\l|if (r2 \> 0) goto L8\l}"];
subgraph cluster_Region_666940065 {
label = "R(2:8|(2:(1:15)|(1:10)))";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0037|LOOP_START\lLOOP:0: B:44:0x0037\-\>B:47:0x0051\lPHI: r2 r7 \l  PHI: (r2v3 'occurrenceIndex' int) = (r2v2 'occurrenceIndex' int), (r2v4 'occurrenceIndex' int) binds: [B:43:0x0031, B:47:0x0051] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 'i' int) = (r7v0 'i' int), (r7v2 'i' int) binds: [B:43:0x0031, B:47:0x0051] A[DONT_GENERATE, DONT_INLINE]\l|r6.append((java.lang.CharSequence) r10, r7, r2)\lr6.append(r12)\lint r7 = r2 + r3\l}"];
subgraph cluster_Region_1344590881 {
label = "R(2:(1:15)|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_80281000 {
label = "IF [B:45:0x0046] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0046|if (r2 \>= r10.length()) goto L15\l}"];
subgraph cluster_Region_805065337 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0053|SYNTHETIC\lEDGE_INSN: B:53:0x0053\-\>B:48:0x0053 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1494318599 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0048|int r2 = kotlin.text.StringsKt.indexOf(r10, r11, r2 + r4, r13)\l}"];
}
}
}
}
Node_48 [shape=record,label="{48\:\ 0x0053|EDGE_INSN: B:53:0x0053\-\>B:48:0x0053 ?: BREAK  \l|r6.append((java.lang.CharSequence) r10, r7, r10.length())\ljava.lang.String java.lang.String r8 = r6.toString()\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r8, \"stringBuilder.append(this, i, length).toString()\")\l}"];
Node_49 [shape=record,label="{49\:\ 0x0066|RETURN\l|return r8\l}"];
}
}
}
}
}
Node_36 [shape=record,color=red,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,color=red,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0053|SYNTHETIC\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0067}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__StringsJVMKt.replace((r10v0 '$this$replace' java.lang.String A[D('$this$replace' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'oldValue' java.lang.String A[D('oldValue' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'newValue' java.lang.String A[D('newValue' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'ignoreCase' boolean A[D('ignoreCase' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:47:0x0051 \-\> B:44:0x0037, CROSS_EDGE: B:49:0x0066 \-\> B:37:?, CROSS_EDGE: B:45:0x0046 \-\> B:48:0x0053, CROSS_EDGE: B:51:0x006c \-\> B:37:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_36;Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_41[style=dashed];
Node_40 -> Node_37;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_50;
Node_51 -> Node_37;
Node_43 -> Node_44;
Node_47 -> Node_44;
Node_47 -> Node_52[style=dashed];
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_53;
Node_53 -> Node_48;
Node_46 -> Node_47;
Node_48 -> Node_49;
Node_49 -> Node_37;
Node_36 -> Node_38;
Node_52 -> Node_48;
Node_50 -> Node_51;
}

