digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.compareTo(Ljava\/lang\/String;Ljava\/lang\/String;Z)I" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$compareTo' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"other\" \l0x0007: INVOKE  (r2 I:java.lang.Object A[D('other' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ignoreCase' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0011  (LINE:551)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|0x000c: INVOKE  (r0 I:int) = \l  (r1 I:java.lang.String A[D('$this$compareTo' java.lang.String)])\l  (r2 I:java.lang.String A[D('other' java.lang.String)])\l type: VIRTUAL call: java.lang.String.compareToIgnoreCase(java.lang.String):int A[MD:(java.lang.String):int (c)] (LINE:552)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:int) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: INVOKE  (r0 I:int) = \l  (r1 I:java.lang.String A[D('$this$compareTo' java.lang.String)])\l  (r2 I:java.lang.String A[D('other' java.lang.String)])\l type: VIRTUAL call: java.lang.String.compareTo(java.lang.String):int A[MD:(java.lang.String):int (c)] (LINE:554)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|RETURN\l|0x0015: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public static final int kotlin.text.StringsKt__StringsJVMKt.compareTo((r1 I:java.lang.String A[D('$this$compareTo' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[D('other' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[D('ignoreCase' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0015 \-\> B:17:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0015: r1 '$this$compareTo' Ljava\/lang\/String;\l  \-1 \-0x0015: r2 'other' Ljava\/lang\/String;\l  \-1 \-0x0015: r3 'ignoreCase' Z\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_22 -> Node_23;
Node_23 -> Node_17;
}

