digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.contentEquals(Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;Z)Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ignoreCase' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0007  (LINE:604)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: INVOKE  (r0 I:boolean) = \l  (r1 I:java.lang.CharSequence A[D('$this$contentEquals' java.lang.CharSequence)])\l  (r2 I:java.lang.CharSequence A[D('other' java.lang.CharSequence)])\l type: STATIC call: kotlin.text.StringsKt.contentEqualsIgnoreCaseImpl(java.lang.CharSequence, java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence, java.lang.CharSequence):boolean (m)] (LINE:605)\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|0x000b: RETURN  (r0 I:boolean) A[SYNTHETIC] (LINE:604)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|0x0007: INVOKE  (r0 I:boolean) = \l  (r1 I:java.lang.CharSequence A[D('$this$contentEquals' java.lang.CharSequence)])\l  (r2 I:java.lang.CharSequence A[D('other' java.lang.CharSequence)])\l type: STATIC call: kotlin.text.StringsKt.contentEquals(java.lang.CharSequence, java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence, java.lang.CharSequence):boolean (m)] (LINE:607)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|RETURN\lORIG_RETURN\l|0x000b: RETURN  (r0 I:boolean)  (LINE:604)\l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.text.StringsKt__StringsJVMKt.contentEquals((r1 I:java.lang.CharSequence A[D('$this$contentEquals' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.CharSequence A[D('other' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[D('ignoreCase' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0007 \-\> B:19:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000b: r1 '$this$contentEquals' Ljava\/lang\/CharSequence;\l  \-1 \-0x000b: r2 'other' Ljava\/lang\/CharSequence;\l  \-1 \-0x000b: r3 'ignoreCase' Z\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_20;
Node_20 -> Node_15;
Node_18 -> Node_19;
Node_19 -> Node_15;
}

