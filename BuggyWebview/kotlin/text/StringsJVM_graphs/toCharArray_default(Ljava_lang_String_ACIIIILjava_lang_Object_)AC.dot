digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.toCharArray$default(Ljava\/lang\/String;[CIIIILjava\/lang\/Object;)[C" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000}"];
Node_29 [shape=record,label="{29\:\ 0x0002|if ((r5 & 2) == 0) goto L4\l}"];
Node_30 [shape=record,label="{30\:\ 0x0004|r2 = 0\l}"];
Node_31 [shape=record,label="{31\:\ 0x0005|PHI: r2 \l  PHI: (r2v1 'destinationOffset' int) = (r2v0 'destinationOffset' int), (r2v2 'destinationOffset' int) binds: [B:29:0x0002, B:30:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0007|if ((r5 & 4) == 0) goto L7\l}"];
Node_33 [shape=record,label="{33\:\ 0x0009|r3 = 0\l}"];
Node_34 [shape=record,label="{34\:\ 0x000a|PHI: r3 \l  PHI: (r3v1 'startIndex' int) = (r3v0 'startIndex' int), (r3v2 'startIndex' int) binds: [B:32:0x0007, B:33:0x0009] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x000c|if ((r5 & 8) == 0) goto L10\l}"];
Node_36 [shape=record,label="{36\:\ 0x000e|int r4 = r0.length()\l}"];
Node_37 [shape=record,label="{37\:\ 0x0012|PHI: r4 \l  PHI: (r4v1 'endIndex' int) = (r4v0 'endIndex' int), (r4v2 'endIndex' int) binds: [B:35:0x000c, B:36:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r0, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"destination\")\lr0.getChars(r3, r4, r1, r2)\l}"];
Node_38 [shape=record,label="{38\:\ 0x001f|RETURN\l|return r1\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ char[] kotlin.text.StringsKt__StringsJVMKt.toCharArray$default((r0v0 '$this$toCharArray_u24default' java.lang.String A[D('$this$toCharArray_u24default' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 'destination' char[] A[D('destination' char[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'destinationOffset' int A[D('destinationOffset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'startIndex' int A[D('startIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'endIndex' int A[D('endIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:35:0x000c \-\> B:37:0x0012, CROSS_EDGE: B:32:0x0007 \-\> B:34:0x000a, CROSS_EDGE: B:29:0x0002 \-\> B:31:0x0005\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [319=4]\}\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_27;
}

