digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.regionMatches$default(Ljava\/lang\/String;ILjava\/lang\/String;IIZILjava\/lang\/Object;)Z" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: ARITH  (r12 I:??[int, boolean]) = (r12 I:??[int, boolean, short, byte, char]) & (16 ??[int, float, short, byte, char])  (LINE:652)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0002|0x0002: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0007 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|0x0004: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0008|0x0008: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0009: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x000b: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: INVOKE  (r6 I:boolean) = (r0 I:java.lang.String), (r1 I:int), (r2 I:java.lang.String), (r3 I:int), (r4 I:int), (r5 I:boolean) type: STATIC call: kotlin.text.StringsKt.regionMatches(java.lang.String, int, java.lang.String, int, int, boolean):boolean A[MD:(java.lang.String, int, java.lang.String, int, int, boolean):boolean (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|RETURN\l|0x0011: RETURN  (r6 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|0x0007: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ boolean kotlin.text.StringsKt__StringsJVMKt.regionMatches$default((r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:21:0x0007 \-\> B:22:0x0008\lINLINE: 0x000d: INVOKE  \l  (r6 I:java.lang.String)\l  (r7 I:int)\l  (r8 I:java.lang.String)\l  (r9 I:int)\l  (r10 I:int)\l  (wrap: boolean : ?: TERNARYnull = ((wrap: int : 0x0000: ARITH  (r12v1 int A[REMOVE]) = (r12v0 int) & (16 int)) != (0 int)) ? false : (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]))\l type: STATIC call: kotlin.text.StringsKt.regionMatches(java.lang.String, int, java.lang.String, int, int, boolean):boolean\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_17;
Node_21 -> Node_22;
}

