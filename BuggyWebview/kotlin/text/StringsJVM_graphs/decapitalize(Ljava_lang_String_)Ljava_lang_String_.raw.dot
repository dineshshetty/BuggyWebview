digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.decapitalize(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$decapitalize' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('$this$decapitalize' java.lang.String)])  (LINE:773)\l0x0006: CHECK_CAST (r0 I:java.lang.CharSequence) = (java.lang.CharSequence) (r0 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  (r0 I:int) = (r0 I:java.lang.CharSequence) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x000c: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x000e|0x000e: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:31:0x0012 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0010|0x0010: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x004f \l}"];
Node_33 [shape=record,label="{33\:\ 0x0015|0x0015: INVOKE  (r0 I:char) = (r4 I:java.lang.String A[D('$this$decapitalize' java.lang.String)]), (r2 I:int) type: VIRTUAL call: java.lang.String.charAt(int):char A[MD:(int):char (c)]\l0x0019: INVOKE  (r0 I:boolean) = (r0 I:char) type: STATIC call: java.lang.Character.isLowerCase(char):boolean A[MD:(char):boolean (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x001d|0x001d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x004f \l}"];
Node_35 [shape=record,label="{35\:\ 0x001f|0x001f: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0021: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0024: INVOKE  (r2 I:java.lang.String) = (r4 I:java.lang.String A[D('$this$decapitalize' java.lang.String)]), (r2 I:int), (r1 I:int) type: VIRTUAL call: java.lang.String.substring(int, int):java.lang.String A[MD:(int, int):java.lang.String (c)]\l0x0028: CONST_STR  (r3 I:java.lang.String) =  \"this as java.lang.Stringâ€¦ing(startIndex, endIndex)\" \l0x002a: INVOKE  (r2 I:java.lang.Object), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x002d: CONST_STR  (r3 I:java.lang.String) =  \"null cannot be cast to non\-null type java.lang.String\" \l0x002f: INVOKE  (r2 I:java.lang.Object), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0032: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String) type: VIRTUAL call: java.lang.String.toLowerCase():java.lang.String A[MD:():java.lang.String (c)]\l0x0036: CONST_STR  (r3 I:java.lang.String) =  \"this as java.lang.String).toLowerCase()\" \l0x0038: INVOKE  (r2 I:java.lang.Object), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x003b: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003e: INVOKE  (r1 I:java.lang.String) = (r4 I:java.lang.String A[D('$this$decapitalize' java.lang.String)]), (r1 I:int) type: VIRTUAL call: java.lang.String.substring(int):java.lang.String A[MD:(int):java.lang.String (c)]\l0x0042: CONST_STR  (r2 I:java.lang.String) =  \"this as java.lang.String).substring(startIndex)\" \l0x0044: INVOKE  (r1 I:java.lang.Object), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0047: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004a: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|0x0050: RETURN  (r0 I:java.lang.String) A[SYNTHETIC]\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x004f|0x004f: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('$this$decapitalize' java.lang.String)]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0050|RETURN\lORIG_RETURN\l|0x0050: RETURN  (r0 I:java.lang.String) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0012|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__StringsJVMKt.decapitalize((r4 I:java.lang.String A[D('$this$decapitalize' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use replaceFirstChar instead., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=replaceFirstChar \{ it.lowercase(Locale.getDefault()) \}, imports=[[java.util.Locale]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{warningSince=1.5\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0050: r4 '$this$decapitalize' Ljava\/lang\/String;\lCROSS_EDGE: B:36:0x004f \-\> B:37:0x0050, CROSS_EDGE: B:32:0x0013 \-\> B:36:0x004f, CROSS_EDGE: B:31:0x0012 \-\> B:32:0x0013\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_36;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_38;
Node_38 -> Node_27;
Node_36 -> Node_37;
Node_37 -> Node_27;
Node_31 -> Node_32;
}

