digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.isBlank(Ljava\/lang\/CharSequence;)Z" {
subgraph cluster_Region_677947538 {
label = "R(3:1|(3:3|(2:11|(1:(2:14|(2:17|1))(2:19|1)))(1:7)|(1:(1:9)))|20) | DECL_VAR: boolean null\l";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"\<this\>\")\l}"];
subgraph cluster_IfRegion_1007755841 {
label = "IF [B:47:0x000b] THEN: R(3:3|(2:11|(1:(2:14|(2:17|1))(2:19|1)))(1:7)|(1:(1:9))) ELSE: null";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x000b|if (r9.length() != 0) goto L3\l}"];
subgraph cluster_Region_267461302 {
label = "R(3:3|(2:11|(1:(2:14|(2:17|1))(2:19|1)))(1:7)|(1:(1:9)))";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x000d|java.lang.Iterable java.lang.Iterable r0 = kotlin.text.StringsKt.getIndices(r9)\l}"];
subgraph cluster_IfRegion_1182606248 {
label = "IF [B:49:0x0016, B:51:0x001f] THEN: R(2:11|(1:(2:14|(2:17|1))(2:19|1))) ELSE: R(1:7)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0016|if ((r0 instanceof java.util.Collection) != true) goto L11\l}"];
Node_51 [shape=record,label="{51\:\ 0x001f|ADDED_TO_REGION\l|if (((java.util.Collection) r0).isEmpty() != true) goto L11\l}"];
subgraph cluster_Region_1495184468 {
label = "R(2:11|(1:(2:14|(2:17|1))(2:19|1)))";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0023|java.util.Iterator java.util.Iterator\<java.lang.Integer\> r4 = r0.iterator()\l}"];
subgraph cluster_LoopRegion_1294410847 {
label = "LOOP:0: (1:(2:14|(2:17|1))(2:19|1))";
node [shape=record,color=blue];
subgraph cluster_Region_678808920 {
label = "R(1:(2:14|(2:17|1))(2:19|1))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1090856300 {
label = "IF [B:55:0x002b] THEN: R(2:14|(2:17|1)) ELSE: R(2:19|1)";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x002b|if (r4.hasNext() != false) goto L14\l}"];
subgraph cluster_Region_1197955944 {
label = "R(2:14|(2:17|1))";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x002d|int int r5 = ((kotlin.collections.IntIterator) r4).nextInt()\l}"];
subgraph cluster_IfRegion_1371481160 {
label = "IF [B:57:0x003e] THEN: R(2:17|1) ELSE: null";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x003e|LOOP_END\lLOOP:0: B:54:0x0027\-\>B:57:0x003e\l|if (kotlin.text.CharsKt.isWhitespace(r9.charAt(r5)) == false) goto L16\l}"];
subgraph cluster_Region_1152967962 {
label = "R(2:17|1)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0040|EDGE_INSN: B:58:0x0040\-\>B:60:0x0043 ?: BREAK  \l|r0 = false\l}"];
Node_InsnContainer_1169480956 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_1755856975 {
label = "R(2:19|1)";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x0042|EDGE_INSN: B:59:0x0042\-\>B:60:0x0043 ?: BREAK  \l|r0 = true\l}"];
Node_InsnContainer_1879239969 [shape=record,label="{|break\l}"];
}
}
}
}
}
subgraph cluster_Region_754882212 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x0021|r0 = true\l}"];
}
}
subgraph cluster_Region_83049122 {
label = "R(1:(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_40515689 {
label = "IF [B:60:0x0043] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x0043|EDGE_INSN: B:59:0x0042\-\>B:60:0x0043 ?: BREAK  , EDGE_INSN: B:58:0x0040\-\>B:60:0x0043 ?: BREAK  \lPHI: r0 \l  PHI: (r0v6 boolean) = (r0v4 boolean), (r0v5 boolean), (r0v7 boolean) binds: [B:59:0x0042, B:58:0x0040, B:52:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L9\l}"];
subgraph cluster_Region_1633310692 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
}
}
Node_61 [shape=record,label="{61\:\ 0x0045|RETURN\lORIG_RETURN\l|return true\l}"];
}
Node_44 [shape=record,color=red,label="{44\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0018}"];
Node_45 [shape=record,color=red,label="{45\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x0027|LOOP_START\lLOOP:0: B:54:0x0027\-\>B:57:0x003e\l}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0040|SYNTHETIC\l}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0042|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.text.StringsKt__StringsJVMKt.isBlank((r9v0 '$this$isBlank' java.lang.CharSequence A[D('$this$isBlank' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:60:0x0043 \-\> B:62:0x0046, BACK_EDGE: B:57:0x003e \-\> B:54:0x0027, CROSS_EDGE: B:58:0x0040 \-\> B:60:0x0043, CROSS_EDGE: B:59:0x0042 \-\> B:60:0x0043, CROSS_EDGE: B:49:0x0016 \-\> B:53:0x0023, CROSS_EDGE: B:47:0x000b \-\> B:61:0x0045\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_44;Node_46 -> Node_47;
Node_47 -> Node_48;
Node_47 -> Node_61[style=dashed];
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_53;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_53 -> Node_54;
Node_55 -> Node_56;
Node_55 -> Node_63[style=dashed];
Node_56 -> Node_57;
Node_57 -> Node_54[style=dashed];
Node_57 -> Node_64;
Node_58 -> Node_60;
Node_59 -> Node_60;
Node_52 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_65;
Node_65 -> Node_45;
Node_61 -> Node_45;
Node_44 -> Node_46;
Node_50 -> Node_51;
Node_54 -> Node_55;
Node_64 -> Node_58;
Node_63 -> Node_59;
}

