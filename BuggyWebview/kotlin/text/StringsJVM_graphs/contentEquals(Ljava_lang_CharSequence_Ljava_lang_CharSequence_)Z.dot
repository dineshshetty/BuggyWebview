digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.contentEquals(Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;)Z" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000}"];
Node_21 [shape=record,label="{21\:\ 0x0002|if ((r1 instanceof java.lang.String) == false) goto L7\l}"];
Node_22 [shape=record,label="{22\:\ 0x0004|if (r2 == null) goto L7\l}"];
Node_23 [shape=record,label="{23\:\ 0x0006}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return ((java.lang.String) r1).contentEquals(r2)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x000e}"];
Node_25 [shape=record,label="{25\:\ 0x0012|RETURN\lORIG_RETURN\l|return kotlin.text.StringsKt.contentEqualsImpl(r1, r2)\l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.text.StringsKt__StringsJVMKt.contentEquals((r1v0 '$this$contentEquals' java.lang.CharSequence A[D('$this$contentEquals' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'other' java.lang.CharSequence A[D('other' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x000e \-\> B:25:0x0012, CROSS_EDGE: B:21:0x0002 \-\> B:24:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_26;
Node_26 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_19;
}

