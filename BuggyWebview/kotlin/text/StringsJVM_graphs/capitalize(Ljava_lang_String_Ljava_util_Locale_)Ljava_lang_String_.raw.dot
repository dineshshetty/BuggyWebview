digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.capitalize(Ljava\/lang\/String;Ljava\/util\/Locale;)Ljava\/lang\/String;" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r8 I:java.lang.Object A[D('$this$capitalize' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"locale\" \l0x0007: INVOKE  (r9 I:java.lang.Object A[D('locale' java.util.Locale)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$this$capitalize' java.lang.String)])  (LINE:746)\l0x000b: CHECK_CAST (r0 I:java.lang.CharSequence) = (java.lang.CharSequence) (r0 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  (r0 I:int) = (r0 I:java.lang.CharSequence) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x0011: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0012: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0013|0x0013: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:37:0x0017 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0015|0x0015: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0018|0x0018: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x006a \l}"];
Node_39 [shape=record,label="{39\:\ 0x001a|0x001a: INVOKE  (r0 I:char) = (r8 I:java.lang.String A[D('$this$capitalize' java.lang.String)]), (r2 I:int) type: VIRTUAL call: java.lang.String.charAt(int):char A[MD:(int):char (c)] (LINE:747)\l0x001e: INVOKE  (r3 I:boolean) = (r0 I:char A[D('firstChar' char)]) type: STATIC call: java.lang.Character.isLowerCase(char):boolean A[MD:(char):boolean (c)] (LINE:748)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0022|0x0022: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x006a \l}"];
Node_41 [shape=record,label="{41\:\ 0x0024|0x0024: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:749)\l0x0026: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0029: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x002a: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002b: INVOKE  (r6 I:char) = (r0 I:char A[D('firstChar' char)]) type: STATIC call: java.lang.Character.toTitleCase(char):char A[MD:(char):char (c)] (LINE:750)\l0x002f: INVOKE  (r7 I:char) = (r0 I:char A[D('firstChar' char)]) type: STATIC call: java.lang.Character.toUpperCase(char):char A[MD:(char):char (c)] (LINE:751)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0033|0x0033: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('titleChar' char)]) == (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0039 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0035|0x0035: INVOKE  \l  (r4 I:java.lang.StringBuilder A[D('$this$capitalize_u24lambda_u2d5' java.lang.StringBuilder)])\l  (r6 I:char A[D('titleChar' char)])\l type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)] (LINE:752)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0053|0x0053: INVOKE  (r1 I:java.lang.String) = (r8 I:java.lang.String A[D('$this$capitalize' java.lang.String)]), (r1 I:int) type: VIRTUAL call: java.lang.String.substring(int):java.lang.String A[MD:(int):java.lang.String (c)] (LINE:756)\l0x0057: CONST_STR  (r2 I:java.lang.String) =  \"this as java.lang.String).substring(startIndex)\" \l0x0059: INVOKE  (r1 I:java.lang.Object), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x005c: INVOKE  (r4 I:java.lang.StringBuilder A[D('$this$capitalize_u24lambda_u2d5' java.lang.StringBuilder)]), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0060: INVOKE  (r1 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)] (LINE:749)\l0x0064: CONST_STR  (r2 I:java.lang.String) =  \"StringBuilder().apply(builderAction).toString()\" \l0x0066: INVOKE  (r1 I:java.lang.Object), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0069|RETURN\l|0x0069: RETURN  (r1 I:java.lang.String) \l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0039|0x0039: INVOKE  (r2 I:java.lang.String) = (r8 I:java.lang.String A[D('$this$capitalize' java.lang.String)]), (r2 I:int), (r1 I:int) type: VIRTUAL call: java.lang.String.substring(int, int):java.lang.String A[MD:(int, int):java.lang.String (c)] (LINE:754)\l0x003d: CONST_STR  (r7 I:java.lang.String) =  \"this as java.lang.Stringâ€¦ing(startIndex, endIndex)\" \l0x003f: INVOKE  (r2 I:java.lang.Object), (r7 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0042: CONST_STR  (r7 I:java.lang.String) =  \"null cannot be cast to non\-null type java.lang.String\" \l0x0044: INVOKE  (r2 I:java.lang.Object), (r7 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0047: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String), (r9 I:java.util.Locale A[D('locale' java.util.Locale)]) type: VIRTUAL call: java.lang.String.toUpperCase(java.util.Locale):java.lang.String A[MD:(java.util.Locale):java.lang.String (c)]\l0x004b: CONST_STR  (r7 I:java.lang.String) =  \"this as java.lang.String).toUpperCase(locale)\" \l0x004d: INVOKE  (r2 I:java.lang.Object), (r7 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0050: INVOKE  (r4 I:java.lang.StringBuilder A[D('$this$capitalize_u24lambda_u2d5' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x006a|RETURN\l|0x006a: RETURN  (r8 I:java.lang.String A[D('$this$capitalize' java.lang.String)])  (LINE:760)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0017|0x0017: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__StringsJVMKt.capitalize((r8 I:java.lang.String A[D('$this$capitalize' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.util.Locale A[D('locale' java.util.Locale), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use replaceFirstChar instead., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=replaceFirstChar \{ if (it.isLowerCase()) it.titlecase(locale) else it.toString() \}, imports=[[]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{warningSince=1.5\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002a\-0x0060: r4 '$this$capitalize_u24lambda_u2d5' Ljava\/lang\/StringBuilder;\l  0x002b\-0x0060: r5 '$i$a$\-buildString\-StringsKt__StringsJVMKt$capitalize$1' I\l  0x002f\-0x0060: r6 'titleChar' C\l  0x001e\-0x006a: r0 'firstChar' C\l  \-1 \-0x006a: r8 '$this$capitalize' Ljava\/lang\/String;\l  \-1 \-0x006a: r9 'locale' Ljava\/util\/Locale;\lCROSS_EDGE: B:44:0x0039 \-\> B:45:0x0053, CROSS_EDGE: B:47:0x006a \-\> B:33:?, CROSS_EDGE: B:38:0x0018 \-\> B:47:0x006a, CROSS_EDGE: B:37:0x0017 \-\> B:38:0x0018\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_47;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_47;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_33;
Node_44 -> Node_45;
Node_47 -> Node_33;
Node_37 -> Node_38;
}

