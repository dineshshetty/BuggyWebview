digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.capitalize(Ljava\/lang\/String;Ljava\/util\/Locale;)Ljava\/lang\/String;" {
subgraph cluster_Region_64521747 {
label = "R(3:1|(2:5|(4:7|(1:9)(1:13)|10|11))|14)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"locale\")\l}"];
subgraph cluster_IfRegion_1691096127 {
label = "IF [B:38:0x0018] THEN: R(2:5|(4:7|(1:9)(1:13)|10|11)) ELSE: null";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0018|PHI: r0 \l  PHI: (r0v6 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r8.length() \> 0) != false) goto L5\l}"];
subgraph cluster_Region_1180951075 {
label = "R(2:5|(4:7|(1:9)(1:13)|10|11))";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x001a|char char r0 = r8.charAt(0)\l}"];
subgraph cluster_IfRegion_1611236470 {
label = "IF [B:40:0x0022] THEN: R(4:7|(1:9)(1:13)|10|11) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0022|if (java.lang.Character.isLowerCase(r0) != false) goto L7\l}"];
subgraph cluster_Region_1123187423 {
label = "R(4:7|(1:9)(1:13)|10|11)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0024|java.lang.StringBuilder java.lang.StringBuilder r3 = new java.lang.StringBuilder()\lchar char r6 = java.lang.Character.toTitleCase(r0)\l}"];
subgraph cluster_IfRegion_1845132711 {
label = "IF [B:42:0x0033] THEN: R(1:9) ELSE: R(1:13)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0033|if (r6 != java.lang.Character.toUpperCase(r0)) goto L9\l}"];
subgraph cluster_Region_886175937 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0035|r3.append(r6)\l}"];
}
subgraph cluster_Region_408412185 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0039|java.lang.String java.lang.String r2 = r8.substring(0, 1)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r2, \"this as java.lang.Stringâ€¦ing(startIndex, endIndex)\")\lkotlin.jvm.internal.Intrinsics.checkNotNull(r2, \"null cannot be cast to non\-null type java.lang.String\")\ljava.lang.String java.lang.String r2 = r2.toUpperCase(r9)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r2, \"this as java.lang.String).toUpperCase(locale)\")\lr3.append(r2)\l}"];
}
}
Node_45 [shape=record,label="{45\:\ 0x0053|java.lang.String java.lang.String r1 = r8.substring(1)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, \"this as java.lang.String).substring(startIndex)\")\lr3.append(r1)\ljava.lang.String java.lang.String r1 = r3.toString()\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, \"StringBuilder().apply(builderAction).toString()\")\l}"];
Node_46 [shape=record,label="{46\:\ 0x0069|RETURN\l|return r1\l}"];
}
}
}
}
Node_47 [shape=record,label="{47\:\ 0x006a|RETURN\l|return r8\l}"];
}
Node_32 [shape=record,color=red,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0013}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0015}"];
Node_33 [shape=record,color=red,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0017}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__StringsJVMKt.capitalize((r8v0 '$this$capitalize' java.lang.String A[D('$this$capitalize' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'locale' java.util.Locale A[D('locale' java.util.Locale), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use replaceFirstChar instead., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=replaceFirstChar \{ if (it.isLowerCase()) it.titlecase(locale) else it.toString() \}, imports=[[]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{warningSince=1.5\}\}\}\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:44:0x0039 \-\> B:45:0x0053, CROSS_EDGE: B:47:0x006a \-\> B:33:?, CROSS_EDGE: B:38:0x0018 \-\> B:47:0x006a, CROSS_EDGE: B:37:0x0017 \-\> B:38:0x0018\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_32;Node_34 -> Node_35;
Node_38 -> Node_39;
Node_38 -> Node_47[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_47[style=dashed];
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_42 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_33;
Node_47 -> Node_33;
Node_32 -> Node_34;
Node_35 -> Node_36;
Node_35 -> Node_37;
Node_36 -> Node_38;
Node_37 -> Node_38;
}

