digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.replace(Ljava\/lang\/String;CCZ)Ljava\/lang\/String;" {
Node_38 [shape=record,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"\<this\>\")\l}"];
Node_41 [shape=record,label="{41\:\ 0x0005|if (r13 != false) goto L6\l}"];
Node_42 [shape=record,label="{42\:\ 0x0007|java.lang.String r0 = r10.replace(r11, r12)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"this as java.lang.String…replace(oldChar, newChar)\")\l}"];
Node_43 [shape=record,label="{43\:\ 0x0010|RETURN\l|return r0\l}"];
Node_39 [shape=record,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0011|java.lang.StringBuilder r1 = new java.lang.StringBuilder(r10.length())\ljava.lang.CharSequence r3 = r10\lr5 = 0\l}"];
Node_45 [shape=record,label="{45\:\ 0x0021|LOOP_START\lLOOP:0: B:45:0x0021\-\>B:51:0x0036\lPHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:44:0x0011, B:51:0x0036] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0025|if (r5 \>= r3.length()) goto L16\l}"];
Node_47 [shape=record,label="{47\:\ 0x0027|char r6 = r3.charAt(r5)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0031|if (kotlin.text.CharsKt.equals(r6, r11, r13) == false) goto L14\l}"];
Node_49 [shape=record,label="{49\:\ 0x0033|r9 = r12\l}"];
Node_56 [shape=record,label="{56\:\ 0x0036|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0036|LOOP_END\lLOOP:0: B:45:0x0021\-\>B:51:0x0036\lPHI: r9 \l  PHI: (r9v2 char) = (r9v1 char), (r9v3 char) binds: [B:55:0x0036, B:56:0x0036] A[DONT_GENERATE, DONT_INLINE]\l|r1.append(r9)\lint r5 = r5 + 1\l}"];
Node_50 [shape=record,label="{50\:\ 0x0035|r9 = r6\l}"];
Node_55 [shape=record,label="{55\:\ 0x0036|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x003d|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x003d|java.lang.String r0 = r1.toString()\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"StringBuilder(capacity).…builderAction).toString()\")\l}"];
Node_53 [shape=record,label="{53\:\ 0x0048|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__StringsJVMKt.replace((r10v0 '$this$replace' java.lang.String A[D('$this$replace' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'oldChar' char A[D('oldChar' char), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'newChar' char A[D('newChar' char), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'ignoreCase' boolean A[D('ignoreCase' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:51:0x0036 \-\> B:45:0x0021, CROSS_EDGE: B:50:0x0035 \-\> B:51:0x0036, CROSS_EDGE: B:53:0x0048 \-\> B:39:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_38;Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_39;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_54;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_56;
Node_56 -> Node_51;
Node_51 -> Node_45;
Node_50 -> Node_55;
Node_55 -> Node_51;
Node_54 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_39;
}

