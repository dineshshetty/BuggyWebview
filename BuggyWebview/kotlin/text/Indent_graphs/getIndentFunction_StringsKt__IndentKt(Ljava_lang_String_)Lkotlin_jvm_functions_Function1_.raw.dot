digraph "CFG forkotlin.text.StringsKt__IndentKt.getIndentFunction$StringsKt__IndentKt(Ljava\/lang\/String;)Lkotlin\/jvm\/functions\/Function1;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0001|0x0001: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('indent' java.lang.String)])  (LINE:102)\l0x0002: CHECK_CAST (r0 I:java.lang.CharSequence) = (java.lang.CharSequence) (r0 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  (r0 I:int) = (r0 I:java.lang.CharSequence) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000c \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0014 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: SGET  (r0 I:kotlin.text.StringsKt__IndentKt$getIndentFunction$1) =  kotlin.text.StringsKt__IndentKt$getIndentFunction$1.INSTANCE kotlin.text.StringsKt__IndentKt$getIndentFunction$1 \l0x0011: CHECK_CAST (r0 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|0x001b: RETURN  (r0 I:kotlin.jvm.functions.Function1\<java.lang.String, java.lang.String\>) A[SYNTHETIC] (LINE:104)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:kotlin.text.StringsKt__IndentKt$getIndentFunction$2) =  kotlin.text.StringsKt__IndentKt$getIndentFunction$2  (LINE:103)\l0x0016: INVOKE  (r0 I:kotlin.text.StringsKt__IndentKt$getIndentFunction$2), (r1 I:java.lang.String A[D('indent' java.lang.String)]) type: DIRECT call: kotlin.text.StringsKt__IndentKt$getIndentFunction$2.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (m)]\l0x0019: CHECK_CAST (r0 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|RETURN\lORIG_RETURN\l|0x001b: RETURN  (r0 I:kotlin.jvm.functions.Function1\<java.lang.String, java.lang.String\>)  (LINE:104)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private static final kotlin.jvm.functions.Function1\<java.lang.String, java.lang.String\> kotlin.text.StringsKt__IndentKt.getIndentFunction$StringsKt__IndentKt((r1 I:java.lang.String A[D('indent' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:8:0x0014 \-\> B:9:0x001b, CROSS_EDGE: B:5:0x000c \-\> B:6:0x000d\lDebug Info:\l  \-1 \-0x001b: r1 'indent' Ljava\/lang\/String;\lSIGNATURE: (Ljava\/lang\/String;)Lkotlin\/jvm\/functions\/Function1\<Ljava\/lang\/String;Ljava\/lang\/String;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_10;
Node_10 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_5 -> Node_6;
}

