digraph "CFG forkotlin.text.StringsKt__IndentKt.replaceIndent(Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r27 I:??[OBJECT, ARRAY] A[D('$this$replaceIndent' java.lang.String)]) \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"\<this\>\" \l0x0004: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0007: CONST_STR  (r1 I:java.lang.String) =  \"newIndent\" \l0x0009: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r28 I:??[OBJECT, ARRAY] A[D('newIndent' java.lang.String)]) \l0x000b: INVOKE  (r2 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000e: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY])  (LINE:69)\l0x000f: CHECK_CAST (r1 I:java.lang.CharSequence) = (java.lang.CharSequence) (r1 I:??[OBJECT, ARRAY]) \l0x0011: INVOKE  (r1 I:java.util.List) = (r1 I:java.lang.CharSequence) type: STATIC call: kotlin.text.StringsKt.lines(java.lang.CharSequence):java.util.List A[MD:(java.lang.CharSequence):java.util.List\<java.lang.String\> (m)]\l0x0015: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('lines' java.util.List)])  (LINE:71)\l0x0016: CHECK_CAST (r3 I:java.lang.Iterable) = (java.lang.Iterable) (r3 I:??[OBJECT, ARRAY]) \l0x0019: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001a: NEW_INSTANCE  (r5 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:153)\l0x001c: INVOKE  (r5 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x001f: CHECK_CAST (r5 I:java.util.Collection) = (java.util.Collection) (r5 I:??[OBJECT, ARRAY]) \l0x0021: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('$this$filter$iv' java.lang.Iterable)]) \l0x0022: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0023: INVOKE  (r8 I:java.util.Iterator) = (r6 I:java.lang.Iterable A[D('$this$filterTo$iv$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:154)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|LOOP_START\lLOOP:0: B:3:0x0027\-\>B:42:0x0027\l|0x0027: INVOKE  (r9 I:boolean) = (r8 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x002b|0x002b: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0044 \l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|0x002d: INVOKE  (r9 I:java.lang.Object) = (r8 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0031: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('element$iv$iv' java.lang.Object)]) \l0x0032: CHECK_CAST (r10 I:java.lang.String) = (java.lang.String) (r10 I:??[OBJECT, ARRAY]) \l0x0034: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0035: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('p0' java.lang.String)])  (LINE:72)\l0x0036: CHECK_CAST (r12 I:java.lang.CharSequence) = (java.lang.CharSequence) (r12 I:??[OBJECT, ARRAY]) \l0x0038: INVOKE  (r12 I:boolean) = (r12 I:java.lang.CharSequence) type: STATIC call: kotlin.text.StringsKt.isBlank(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (m)]\l0x003c: ARITH  (r10 I:??[int, boolean] A[D('p0' java.lang.String)]) = (r12 I:??[int, boolean, short, byte, char]) ^ (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|0x003e: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0027 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0040|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ 0x0040|0x0040: INVOKE  \l  (r5 I:java.util.Collection A[D('destination$iv$iv' java.util.Collection)])\l  (r9 I:java.lang.Object A[D('element$iv$iv' java.lang.Object)])\l type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0027|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0027|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x0027\-\>B:42:0x0027\l}"];
Node_43 [shape=record,label="{43\:\ 0x0027|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0044|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x0044|0x0045: CHECK_CAST (r5 I:java.util.List) = (java.util.List) (r5 I:??[OBJECT, ARRAY] A[D('destination$iv$iv' java.util.Collection)]) \l0x0048: CHECK_CAST (r5 I:java.lang.Iterable) = (java.lang.Iterable) (r5 I:??[OBJECT, ARRAY])  (LINE:72)\l0x004a: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY])  (LINE:73)\l0x004b: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x004c: NEW_INSTANCE  (r5 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:156)\l0x004e: CONST  (r6 I:??[int, float, short, byte, char]) = (10 ??[int, float, short, byte, char]) \l0x0050: INVOKE  (r6 I:int) = (r3 I:java.lang.Iterable A[D('$this$map$iv' java.lang.Iterable)]), (r6 I:int) type: STATIC call: kotlin.collections.CollectionsKt.collectionSizeOrDefault(java.lang.Iterable, int):int A[MD:\<T\>:(java.lang.Iterable\<? extends T\>, int):int (m)]\l0x0054: INVOKE  (r5 I:java.util.ArrayList), (r6 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0057: CHECK_CAST (r5 I:java.util.Collection) = (java.util.Collection) (r5 I:??[OBJECT, ARRAY]) \l0x0059: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('$this$map$iv' java.lang.Iterable)]) \l0x005a: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x005b: INVOKE  (r8 I:java.util.Iterator) = (r6 I:java.lang.Iterable A[D('$this$mapTo$iv$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:157)\l}"];
Node_9 [shape=record,label="{9\:\ 0x005f|LOOP_START\lLOOP:1: B:9:0x005f\-\>B:11:0x0065\l|0x005f: INVOKE  (r9 I:boolean) = (r8 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0063|0x0063: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0079 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0065|LOOP_END\lLOOP:1: B:9:0x005f\-\>B:11:0x0065\l|0x0065: INVOKE  (r9 I:java.lang.Object) = (r8 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0069: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('item$iv$iv' java.lang.Object)])  (LINE:158)\l0x006a: CHECK_CAST (r10 I:java.lang.String) = (java.lang.String) (r10 I:??[OBJECT, ARRAY]) \l0x006c: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x006d: INVOKE  (r10 I:int A[D('p0' java.lang.String)]) = (r10 I:java.lang.String A[D('p0' java.lang.String)]) type: STATIC call: kotlin.text.StringsKt__IndentKt.indentWidth$StringsKt__IndentKt(java.lang.String):int A[MD:(java.lang.String):int (m)] (LINE:73)\l0x0071: INVOKE  (r10 I:java.lang.Integer) = (r10 I:int A[D('p0' java.lang.String)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0075: INVOKE  (r5 I:java.util.Collection A[D('destination$iv$iv' java.util.Collection)]), (r10 I:java.lang.Object) type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0079|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0079|0x007a: CHECK_CAST (r5 I:java.util.List) = (java.util.List) (r5 I:??[OBJECT, ARRAY] A[D('destination$iv$iv' java.util.Collection)]) \l0x007d: CHECK_CAST (r5 I:java.lang.Iterable) = (java.lang.Iterable) (r5 I:??[OBJECT, ARRAY])  (LINE:73)\l0x007f: INVOKE  (r3 I:java.lang.Comparable) = (r5 I:java.lang.Iterable) type: STATIC call: kotlin.collections.CollectionsKt.minOrNull(java.lang.Iterable):java.lang.Comparable A[MD:\<T extends java.lang.Comparable\<? super T\>\>:(java.lang.Iterable\<? extends T extends java.lang.Comparable\<? super T\>\>):T extends java.lang.Comparable\<? super T\> (m)] (LINE:74)\l0x0083: CHECK_CAST (r3 I:java.lang.Integer) = (java.lang.Integer) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0085|0x0085: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x008c  (LINE:71)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0087|0x0087: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x008d|0x008e: INVOKE  (r4 I:int) = (r27 I:java.lang.String A[D('$this$replaceIndent' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)] (LINE:76)\l0x0092: INVOKE  (r5 I:int) = (r28 I:java.lang.String A[D('newIndent' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)]\l0x0096: INVOKE  (r6 I:int) = (r1 I:java.util.List A[D('lines' java.util.List)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l0x009a: ARITH  (r5 I:int) = (r5 I:int) * (r6 I:int) \l0x009c: ARITH  (r4 I:int) = (r4 I:int) + (r5 I:int) \l0x009d: INVOKE  (r5 I:kotlin.jvm.functions.Function1) = (r28 I:java.lang.String A[D('newIndent' java.lang.String)]) type: STATIC call: kotlin.text.StringsKt__IndentKt.getIndentFunction$StringsKt__IndentKt(java.lang.String):kotlin.jvm.functions.Function1 A[MD:(java.lang.String):kotlin.jvm.functions.Function1\<java.lang.String, java.lang.String\> (m)]\l0x00a1: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('lines' java.util.List)]) \l0x00a2: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00a3: INVOKE  (r8 I:int) = (r6 I:java.util.List A[D('$this$reindent$iv' java.util.List)]) type: STATIC call: kotlin.collections.CollectionsKt.getLastIndex(java.util.List):int A[MD:\<T\>:(java.util.List\<? extends T\>):int (m)] (LINE:160)\l0x00a7: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('$this$reindent$iv' java.util.List)])  (LINE:161)\l0x00a8: CHECK_CAST (r9 I:java.lang.Iterable) = (java.lang.Iterable) (r9 I:??[OBJECT, ARRAY]) \l0x00aa: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00ab: NEW_INSTANCE  (r11 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:162)\l0x00ad: INVOKE  (r11 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x00b0: CHECK_CAST (r11 I:java.util.Collection) = (java.util.Collection) (r11 I:??[OBJECT, ARRAY]) \l0x00b2: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$mapIndexedNotNull$iv$iv' java.lang.Iterable)]) \l0x00b3: CONST  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00b4: MOVE  (r14 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('$this$mapIndexedNotNullTo$iv$iv$iv' java.lang.Iterable)])  (LINE:172)\l0x00b5: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00b6: CONST  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:173)\l0x00b8: INVOKE  (r17 I:java.util.Iterator) = (r14 I:java.lang.Iterable A[D('$this$forEachIndexed$iv$iv$iv$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:174)\l}"];
Node_17 [shape=record,label="{17\:\ 0x00bc|LOOP_START\lLOOP:2: B:17:0x00bc\-\>B:37:0x0114\l|0x00bc: INVOKE  (r18 I:boolean) = (r17 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x00c0|0x00c0: IF  (r18 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0119 \l}"];
Node_19 [shape=record,label="{19\:\ 0x00c2|0x00c2: INVOKE  (r18 I:java.lang.Object) = (r17 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x00c6: ARITH  (r19 I:int) = (r16 I:int A[D('index$iv$iv$iv$iv' int)]) + (1 int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x00c8|0x00c8: IF  (r16 I:??[int, byte, short, char] A[D('index$iv$iv$iv$iv' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:22:0x00cd \l}"];
Node_21 [shape=record,label="{21\:\ 0x00ca|0x00ca: INVOKE   type: STATIC call: kotlin.collections.CollectionsKt.throwIndexOverflow():void A[MD:():void (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x00cd|0x00cd: MOVE  (r20 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY] A[D('item$iv$iv$iv$iv' java.lang.Object)]) \l0x00cf: CONST  (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00d1: MOVE  (r22 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('element$iv$iv$iv' java.lang.Object)])  (LINE:172)\l0x00d3: CHECK_CAST (r22 I:java.lang.String) = (java.lang.String) (r22 I:??[OBJECT, ARRAY]) \l0x00d5: MOVE  (r23 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index$iv$iv$iv' int)]) \l0x00d7: CONST  (r24 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00d9: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r23 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index$iv' int)])  (LINE:175)\l}"];
Node_23 [shape=record,label="{23\:\ 0x00db|0x00db: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index$iv' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x00df \l}"];
Node_24 [shape=record,label="{24\:\ 0x00dd|0x00dd: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index$iv' int)]) != (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lastIndex$iv' int)])  \-\> B:28:0x00ee \l}"];
Node_28 [shape=record,label="{28\:\ 0x00ee|0x00ee: MOVE  (r23 I:??[OBJECT, ARRAY]) = (r22 I:??[OBJECT, ARRAY] A[D('value$iv' java.lang.String)])  (LINE:178)\l0x00f0: CONST  (r25 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00f2: MOVE  (r26 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index$iv' int)])  (LINE:76)\l0x00f4: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('index$iv' int)]) = (r23 I:??[OBJECT, ARRAY] A[D('line' java.lang.String)]) \l0x00f6: INVOKE  (r0 I:java.lang.String A[D('line' java.lang.String)]) = (r0 I:java.lang.String A[D('line' java.lang.String)]), (r3 I:int A[D('minCommonIndent' int)]) type: STATIC call: kotlin.text.StringsKt.drop(java.lang.String, int):java.lang.String A[MD:(java.lang.String, int):java.lang.String (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x00fa|0x00fa: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('line' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0106 \l}"];
Node_30 [shape=record,label="{30\:\ 0x00fc|0x00fc: INVOKE  (r0 I:java.lang.Object) = \l  (r5 I:kotlin.jvm.functions.Function1 A[D('indentAddFunction$iv' kotlin.jvm.functions.Function1)])\l  (r0 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0100: MOVE  (r23 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY])  (LINE:178)\l0x0102: CHECK_CAST (r23 I:java.lang.String) = (java.lang.String) (r23 I:??[OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0104|0x0104: IF  (r23 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0109 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0109|0x0109: IF  (r23 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0114 \l}"];
Node_35 [shape=record,label="{35\:\ 0x010b|0x010b: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r23 I:??[OBJECT, ARRAY]) \l0x010d: CONST  (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:179)\l0x010f: INVOKE  \l  (r11 I:java.util.Collection A[D('destination$iv$iv$iv' java.util.Collection)])\l  (r0 I:java.lang.Object A[D('it$iv$iv$iv' java.lang.Object)])\l type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:172)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0114|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0114|LOOP_END\lLOOP:2: B:17:0x00bc\-\>B:37:0x0114\l|0x0114: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r27 I:??[OBJECT, ARRAY] A[D('$this$replaceIndent' java.lang.String)])  (LINE:174)\l0x0116: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index$iv$iv$iv$iv' int)]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0114|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0106|0x0106: MOVE  (r23 I:??[OBJECT, ARRAY]) = (r22 I:??[OBJECT, ARRAY] A[D('value$iv' java.lang.String)]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00df|0x00df: MOVE  (r23 I:??[OBJECT, ARRAY]) = (r22 I:??[OBJECT, ARRAY] A[D('value$iv' java.lang.String)]) \l0x00e1: CHECK_CAST (r23 I:java.lang.CharSequence) = (java.lang.CharSequence) (r23 I:??[OBJECT, ARRAY]) \l0x00e3: INVOKE  (r23 I:boolean) = (r23 I:java.lang.CharSequence) type: STATIC call: kotlin.text.StringsKt.isBlank(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x00e7|0x00e7: IF  (r23 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x00ee \l}"];
Node_27 [shape=record,label="{27\:\ 0x00e9|0x00e9: CONST  (r23 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:176)\l0x00eb: MOVE  (r26 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index$iv' int)]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0119|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0119|0x011b: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('destination$iv$iv$iv' java.util.Collection)]) \l0x011c: CHECK_CAST (r0 I:java.util.List) = (java.util.List) (r0 I:??[OBJECT, ARRAY]) \l0x011f: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0120: CHECK_CAST (r11 I:java.lang.Iterable) = (java.lang.Iterable) (r11 I:??[OBJECT, ARRAY]) \l0x0122: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:182)\l0x0124: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:int A[D('resultSizeEstimate$iv' int)]) type: DIRECT call: java.lang.StringBuilder.\<init\>(int):void A[MD:(int):void (c)]\l0x0127: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0128: CHECK_CAST (r12 I:java.lang.Appendable) = (java.lang.Appendable) (r12 I:??[OBJECT, ARRAY]) \l0x012a: CONST_STR  (r0 I:java.lang.String) =  \"n\" \l0x012c: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x012d: CHECK_CAST (r13 I:java.lang.CharSequence) = (java.lang.CharSequence) (r13 I:??[OBJECT, ARRAY]) \l0x012f: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0130: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0131: CONST  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0133: CONST  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0135: CONST  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0137: CONST  (r19 I:??[int, float, short, byte, char]) = (124(0x7c, float:1.74E\-43) ??[int, float, short, byte, char]) \l0x0139: CONST  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x013b: INVOKE  (r0 I:java.lang.Appendable) = \l  (r11 I:java.lang.Iterable)\l  (r12 I:java.lang.Appendable)\l  (r13 I:java.lang.CharSequence)\l  (r14 I:java.lang.CharSequence)\l  (r15 I:java.lang.CharSequence)\l  (r16 I:int)\l  (r17 I:java.lang.CharSequence)\l  (r18 I:kotlin.jvm.functions.Function1)\l  (r19 I:int)\l  (r20 I:java.lang.Object)\l type: STATIC call: kotlin.collections.CollectionsKt.joinTo$default(java.lang.Iterable, java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object):java.lang.Appendable A[MD:(java.lang.Iterable, java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object):java.lang.Appendable (m)]\l0x013f: CHECK_CAST (r0 I:java.lang.StringBuilder) = (java.lang.StringBuilder) (r0 I:??[OBJECT, ARRAY]) \l0x0141: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)] (LINE:183)\l0x0145: CONST_STR  (r9 I:java.lang.String) =  \"mapIndexedNotNull \{ inde…\"n\")n        .toString()\" \l0x0147: INVOKE  (r0 I:java.lang.Object), (r9 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x014b|RETURN\l|0x014b: RETURN  (r0 I:java.lang.String)  (LINE:76)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x008c|0x008c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:74)\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__IndentKt.replaceIndent((r27 I:java.lang.String A[D('$this$replaceIndent' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:java.lang.String A[D('newIndent' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:6:0x003e \-\> B:3:0x0027, BACK_EDGE: B:7:0x0040 \-\> B:3:0x0027, BACK_EDGE: B:11:0x0065 \-\> B:9:0x005f, BACK_EDGE: B:37:0x0114 \-\> B:17:0x00bc, CROSS_EDGE: B:34:0x0109 \-\> B:37:0x0114, CROSS_EDGE: B:32:0x0106 \-\> B:34:0x0109, CROSS_EDGE: B:31:0x0104 \-\> B:34:0x0109, CROSS_EDGE: B:29:0x00fa \-\> B:32:0x0106, CROSS_EDGE: B:24:0x00dd \-\> B:28:0x00ee, CROSS_EDGE: B:23:0x00db \-\> B:25:0x00df, CROSS_EDGE: B:20:0x00c8 \-\> B:22:0x00cd, CROSS_EDGE: B:15:0x008c \-\> B:16:0x008d\lDebug Info:\l  0x0034\-0x003c: r10 'p0' Ljava\/lang\/String;\l  0x0035\-0x003c: r11 '$i$a$\-filter\-StringsKt__IndentKt$replaceIndent$minCommonIndent$1' I\l  0x0031\-0x0044: r9 'element$iv$iv' Ljava\/lang\/Object;\l  0x0021\-0x0045: r5 'destination$iv$iv' Ljava\/util\/Collection;\l  0x0022\-0x0045: r6 '$this$filterTo$iv$iv' Ljava\/lang\/Iterable;\l  0x0023\-0x0045: r7 '$i$f$filterTo' I\l  0x0019\-0x0048: r3 '$this$filter$iv' Ljava\/lang\/Iterable;\l  0x001a\-0x0048: r4 '$i$f$filter' I\l  0x006c\-0x0071: r10 'p0' Ljava\/lang\/String;\l  0x006d\-0x0071: r11 '$i$a$\-map\-StringsKt__IndentKt$replaceIndent$minCommonIndent$2' I\l  0x0069\-0x0079: r9 'item$iv$iv' Ljava\/lang\/Object;\l  0x0059\-0x007a: r5 'destination$iv$iv' Ljava\/util\/Collection;\l  0x005a\-0x007a: r6 '$this$mapTo$iv$iv' Ljava\/lang\/Iterable;\l  0x005b\-0x007a: r7 '$i$f$mapTo' I\l  0x004b\-0x007d: r3 '$this$map$iv' Ljava\/lang\/Iterable;\l  0x004c\-0x007d: r4 '$i$f$map' I\l  0x00b8\-0x00c8: r16 'index$iv$iv$iv$iv' I\l  0x00d7\-0x00db: r23 'index$iv' I\l  0x00f0\-0x00f6: r23 'line' Ljava\/lang\/String;\l  0x00db\-0x00f6: r0 'index$iv' I\l  0x00f6\-0x00fa: r0 'line' Ljava\/lang\/String;\l  0x00f2\-0x00fa: r25 '$i$a$\-reindent\-StringsKt__IndentKt$replaceIndent$1' I\l  0x00d5\-0x0109: r22 'value$iv' Ljava\/lang\/String;\l  0x00d9\-0x0109: r24 '$i$a$\-mapIndexedNotNull\-StringsKt__IndentKt$reindent$1$iv' I\l  0x00f6\-0x0109: r26 'index$iv' I\l  0x010d\-0x0112: r0 'it$iv$iv$iv' Ljava\/lang\/Object;\l  0x010f\-0x0112: r22 '$i$a$\-let\-CollectionsKt___CollectionsKt$mapIndexedNotNullTo$1$1$iv$iv$iv' I\l  0x00cd\-0x0114: r16 'index$iv$iv$iv' I\l  0x00c6\-0x0114: r18 'item$iv$iv$iv$iv' Ljava\/lang\/Object;\l  0x00cf\-0x0114: r20 'element$iv$iv$iv' Ljava\/lang\/Object;\l  0x00d1\-0x0114: r21 '$i$a$\-forEachIndexed\-CollectionsKt___CollectionsKt$mapIndexedNotNullTo$1$iv$iv$iv' I\l  0x00c8\-0x0119: r19 'index$iv$iv$iv$iv' I\l  0x00b5\-0x011a: r14 '$this$forEachIndexed$iv$iv$iv$iv' Ljava\/lang\/Iterable;\l  0x00b6\-0x011a: r15 '$i$f$forEachIndexed' I\l  0x0119\-0x011a: r16 'index$iv$iv$iv$iv' I\l  0x00b2\-0x011b: r11 'destination$iv$iv$iv' Ljava\/util\/Collection;\l  0x00b3\-0x011b: r12 '$this$mapIndexedNotNullTo$iv$iv$iv' Ljava\/lang\/Iterable;\l  0x00b4\-0x011b: r13 '$i$f$mapIndexedNotNullTo' I\l  0x00aa\-0x011f: r9 '$this$mapIndexedNotNull$iv$iv' Ljava\/lang\/Iterable;\l  0x00ab\-0x011f: r10 '$i$f$mapIndexedNotNull' I\l  0x009d\-0x014b: r4 'resultSizeEstimate$iv' I\l  0x00a1\-0x014b: r5 'indentAddFunction$iv' Lkotlin\/jvm\/functions\/Function1;\l  0x00a2\-0x014b: r6 '$this$reindent$iv' Ljava\/util\/List;\l  0x00a3\-0x014b: r7 '$i$f$reindent' I\l  0x00a7\-0x014b: r8 'lastIndex$iv' I\l  0x0015\-0x014b: r1 'lines' Ljava\/util\/List;\l  0x008e\-0x014b: r3 'minCommonIndent' I\l  \-1 \-0x014b: r27 '$this$replaceIndent' Ljava\/lang\/String;\l  \-1 \-0x014b: r28 'newIndent' Ljava\/lang\/String;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_40;
Node_5 -> Node_6;
Node_6 -> Node_41[style=dashed];
Node_6 -> Node_43;
Node_41 -> Node_7;
Node_7 -> Node_44;
Node_44 -> Node_42;
Node_42 -> Node_3;
Node_43 -> Node_42;
Node_40 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_45;
Node_11 -> Node_9;
Node_45 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_46;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_48;
Node_35 -> Node_47;
Node_47 -> Node_37;
Node_37 -> Node_17;
Node_48 -> Node_37;
Node_32 -> Node_34;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_34;
Node_46 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_1;
Node_15 -> Node_16;
}

