digraph "CFG forkotlin.text.StringsKt__StringNumberConversionsKt.toShortOrNull(Ljava\/lang\/String;I)Ljava\/lang\/Short;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$toShortOrNull' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:java.lang.Integer) = (r3 I:java.lang.String A[D('$this$toShortOrNull' java.lang.String)]), (r4 I:int A[D('radix' int)]) type: STATIC call: kotlin.text.StringsKt.toIntOrNull(java.lang.String, int):java.lang.Integer A[MD:(java.lang.String, int):java.lang.Integer (m)] (LINE:47)\l0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0020 \l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|0x000c: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x0010: CONST  (r2 I:??[int, float, short, byte, char]) = (\-32768(0xffffffffffff8000, float:NaN) ??[int, float, short, byte, char])  (LINE:48)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|0x0012: IF  (r0 I:??[int, byte, short, char] A[D('int' int)]) \< (r2 I:??[int, byte, short, char])  \-\> B:24:0x001f \l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|0x0014: CONST  (r2 I:??[int, float, short, byte, char]) = (32767(0x7fff, float:4.5916E\-41) ??[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|0x0016: IF  (r0 I:??[int, byte, short, char] A[D('int' int)]) \<= (r2 I:??[int, byte, short, char])  \-\> B:22:0x0019 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0019|0x0019: CAST (r1 I:short) = (short) (r0 I:int A[D('int' int)])  (LINE:49)\l0x001a: INVOKE  (r1 I:java.lang.Short) = (r1 I:short) type: STATIC call: java.lang.Short.valueOf(short):java.lang.Short A[MD:(short):java.lang.Short (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x001e|RETURN\l|0x001e: RETURN  (r1 I:java.lang.Short) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|RETURN\l|0x001f: RETURN  (r1 I:java.lang.Short)  (LINE:48)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0020|RETURN\l|0x0020: RETURN  (r1 I:java.lang.Short)  (LINE:47)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Short kotlin.text.StringsKt__StringNumberConversionsKt.toShortOrNull((r3 I:java.lang.String A[D('$this$toShortOrNull' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('radix' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x001f \-\> B:14:?, CROSS_EDGE: B:18:0x0012 \-\> B:24:0x001f, CROSS_EDGE: B:25:0x0020 \-\> B:14:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0010\-0x0020: r0 'int' I\l  \-1 \-0x0020: r3 '$this$toShortOrNull' Ljava\/lang\/String;\l  \-1 \-0x0020: r4 'radix' I\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_25;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_24[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_24 -> Node_14;
Node_25 -> Node_14;
}

