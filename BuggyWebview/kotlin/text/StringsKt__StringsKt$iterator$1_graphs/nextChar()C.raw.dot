digraph "CFG forkotlin.text.StringsKt__StringsKt$iterator$1.nextChar()C" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.CharSequence) = (r3 I:kotlin.text.StringsKt__StringsKt$iterator$1) kotlin.text.StringsKt__StringsKt$iterator$1.$this_iterator java.lang.CharSequence  (LINE:338)\l0x0002: IGET  (r1 I:int) = (r3 I:kotlin.text.StringsKt__StringsKt$iterator$1) kotlin.text.StringsKt__StringsKt$iterator$1.index int \l0x0004: ARITH  (r2 I:int) = (r1 I:int) + (1 int) \l0x0006: IPUT  (r2 I:int), (r3 I:kotlin.text.StringsKt__StringsKt$iterator$1) kotlin.text.StringsKt__StringsKt$iterator$1.index int \l0x0008: INVOKE  (r0 I:char) = (r0 I:java.lang.CharSequence), (r1 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:char) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public char kotlin.text.StringsKt__StringsKt$iterator$1.nextChar((r3 'this' I:kotlin.text.StringsKt__StringsKt$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lMETHOD_OVERRIDE: [kotlin.collections.CharIterator.nextChar():char]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

