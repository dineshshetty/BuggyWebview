digraph "CFG forkotlin.text.DelimitedRangesSequence$iterator$1.\<init\>(Lkotlin\/text\/DelimitedRangesSequence;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IPUT  \l  (r4 I:kotlin.text.DelimitedRangesSequence A[D('$receiver' kotlin.text.DelimitedRangesSequence)])\l  (r3 I:kotlin.text.DelimitedRangesSequence$iterator$1)\l kotlin.text.DelimitedRangesSequence$iterator$1.this$0 kotlin.text.DelimitedRangesSequence \l0x0002: INVOKE  (r3 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:1178)\l0x0005: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:1179)\l0x0006: IPUT  (r0 I:int), (r3 I:kotlin.text.DelimitedRangesSequence$iterator$1) kotlin.text.DelimitedRangesSequence$iterator$1.nextState int \l0x0008: INVOKE  (r0 I:int) = (r4 I:kotlin.text.DelimitedRangesSequence A[D('$receiver' kotlin.text.DelimitedRangesSequence)]) type: STATIC call: kotlin.text.DelimitedRangesSequence.access$getStartIndex$p(kotlin.text.DelimitedRangesSequence):int A[MD:(kotlin.text.DelimitedRangesSequence):int (m)] (LINE:1180)\l0x000c: INVOKE  (r1 I:java.lang.CharSequence) = (r4 I:kotlin.text.DelimitedRangesSequence A[D('$receiver' kotlin.text.DelimitedRangesSequence)]) type: STATIC call: kotlin.text.DelimitedRangesSequence.access$getInput$p(kotlin.text.DelimitedRangesSequence):java.lang.CharSequence A[MD:(kotlin.text.DelimitedRangesSequence):java.lang.CharSequence (m)]\l0x0010: INVOKE  (r1 I:int) = (r1 I:java.lang.CharSequence) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x0014: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: INVOKE  (r0 I:int) = (r0 I:int), (r2 I:int), (r1 I:int) type: STATIC call: kotlin.ranges.RangesKt.coerceIn(int, int, int):int A[MD:(int, int, int):int (m)]\l0x0019: IPUT  (r0 I:int), (r3 I:kotlin.text.DelimitedRangesSequence$iterator$1) kotlin.text.DelimitedRangesSequence$iterator$1.currentStartIndex int \l0x001b: IPUT  (r0 I:int), (r3 I:kotlin.text.DelimitedRangesSequence$iterator$1) kotlin.text.DelimitedRangesSequence$iterator$1.nextSearchIndex int  (LINE:1181)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|RETURN\l|0x001d: RETURN    (LINE:1178)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void kotlin.text.DelimitedRangesSequence$iterator$1.\<init\>((r3 'this' I:kotlin.text.DelimitedRangesSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlin.text.DelimitedRangesSequence A[D('$receiver' kotlin.text.DelimitedRangesSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x001d: r4 '$receiver' Lkotlin\/text\/DelimitedRangesSequence;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

