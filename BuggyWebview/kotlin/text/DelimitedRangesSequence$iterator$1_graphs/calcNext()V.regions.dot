digraph "CFG forkotlin.text.DelimitedRangesSequence$iterator$1.calcNext()V" {
subgraph cluster_Region_1950480705 {
label = "R(1:(2:(7:6|(1:8)|13|(4:15|(1:17)(2:18|21)|11|12)|10|11|12)|(1:3))) | DECL_VAR: int null, java.lang.CharSequence null, kotlin.jvm.functions.Function2 null, java.lang.CharSequence null, java.lang.CharSequence null, java.lang.CharSequence null, int null\l";
node [shape=record,color=blue];
subgraph cluster_Region_849043647 {
label = "R(2:(7:6|(1:8)|13|(4:15|(1:17)(2:18|21)|11|12)|10|11|12)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1984181545 {
label = "IF [B:3:0x0003] THEN: R(7:6|(1:8)|13|(4:15|(1:17)(2:18|21)|11|12)|10|11|12) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r6.nextSearchIndex \>= 0) goto L6\l}"];
subgraph cluster_Region_1423690061 {
label = "R(7:6|(1:8)|13|(4:15|(1:17)(2:18|21)|11|12)|10|11|12)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000c|int r0 = r6.this$0.limit\l}"];
subgraph cluster_IfRegion_1842518201 {
label = "IF [B:6:0x0014] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0014|if (r0 \> 0) goto L8\l}"];
subgraph cluster_Region_313328185 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0016|int int r0 = r6.counter + 1\lr6.counter = r0\lint r4 = r6.this$0.limit\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x0023|int int r0 = r6.nextSearchIndex\ljava.lang.CharSequence r4 = r6.this$0.input\l}"];
subgraph cluster_IfRegion_1396259688 {
label = "IF [B:10:0x002f] THEN: R(4:15|(1:17)(2:18|21)|11|12) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002f|if (r0 \<= r4.length()) goto L15\l}"];
subgraph cluster_Region_40860459 {
label = "R(4:15|(1:17)(2:18|21)|11|12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0047|kotlin.jvm.functions.Function2 r0 = r6.this$0.getNextMatch\ljava.lang.CharSequence r4 = r6.this$0.input\lkotlin.Pair kotlin.Tuples r0 = (kotlin.Tuples) r0.invoke(r4, java.lang.Integer.valueOf(r6.nextSearchIndex))\l}"];
subgraph cluster_IfRegion_141843338 {
label = "IF [B:13:0x005f] THEN: R(1:17) ELSE: R(2:18|21)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x005f|if (r0 == null) goto L17\l}"];
subgraph cluster_Region_1810012749 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0061|int int r4 = r6.currentStartIndex\ljava.lang.CharSequence r5 = r6.this$0.input\lr6.nextItem = new kotlin.ranges.IntRange(r4, kotlin.text.StringsKt.getLastIndex(r5))\lr6.nextSearchIndex = \-1\l}"];
}
subgraph cluster_Region_1905925485 {
label = "R(2:18|21)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0077|int int r2 = ((java.lang.Number) r0.component1()).intValue()\lint int r4 = ((java.lang.Number) r0.component2()).intValue()\lr6.nextItem = kotlin.ranges.RangesKt.until(r6.currentStartIndex, r2)\lint int r5 = r2 + r4\lr6.currentStartIndex = r5\l}"];
Node_18 [shape=record,label="{18\:\ 0x009a|PHI: r1 \l  PHI: (r1v1 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|r6.nextSearchIndex = r5 + (r4 == 0 ? 1 : 0)\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x009d|r6.nextState = 1\l}"];
Node_20 [shape=record,label="{20\:\ 0x009f|RETURN\lORIG_RETURN\l|return\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0031|int int r1 = r6.currentStartIndex\ljava.lang.CharSequence r4 = r6.this$0.input\lr6.nextItem = new kotlin.ranges.IntRange(r1, kotlin.text.StringsKt.getLastIndex(r4))\lr6.nextSearchIndex = \-1\l}"];
Node_19 [shape=record,label="{19\:\ 0x009d|r6.nextState = 1\l}"];
Node_20 [shape=record,label="{20\:\ 0x009f|RETURN\lORIG_RETURN\l|return\l}"];
}
}
subgraph cluster_Region_624891467 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|r6.nextState = 0\lr6.nextItem = null\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0021|if (r0 \< r4) goto L13\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0097}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0099}"];
MethodNode[shape=record,label="{private final void kotlin.text.DelimitedRangesSequence$iterator$1.calcNext((r6v0 'this' kotlin.text.DelimitedRangesSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:19:0x009d \-\> B:20:0x009f, CROSS_EDGE: B:14:0x0061 \-\> B:19:0x009d, CROSS_EDGE: B:18:0x009a \-\> B:19:0x009d, CROSS_EDGE: B:16:0x0097 \-\> B:18:0x009a, CROSS_EDGE: B:8:0x0021 \-\> B:11:0x0031, CROSS_EDGE: B:6:0x0014 \-\> B:9:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Code restructure failed: missing block: B:8:0x0021, code lost:\l    if (r0 \< r4) goto L13;\l\}\l}"];
MethodNode -> Node_0;Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_1;
Node_11 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_1;
Node_4 -> Node_21;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_21 -> Node_1;
Node_8 -> Node_9;
Node_8 -> Node_11[style=dashed];
Node_16 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
}

