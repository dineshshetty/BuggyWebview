digraph "CFG forkotlin.text.UStringsKt.toUByte(Ljava\/lang\/String;I)B" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$toUByte' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:kotlin.UByte) = (r1 I:java.lang.String A[D('$this$toUByte' java.lang.String)]), (r2 I:int A[D('radix' int)]) type: STATIC call: kotlin.text.UStringsKt.toUByteOrNull(java.lang.String, int):kotlin.UByte A[MD:(java.lang.String, int):kotlin.UByte (m)] (LINE:66)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: INVOKE  (r0 I:byte) = (r0 I:kotlin.UByte) type: VIRTUAL call: kotlin.UByte.unbox\-impl():byte A[MD:():byte (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:byte) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: INVOKE  (r1 I:java.lang.String A[D('$this$toUByte' java.lang.String)]) type: STATIC call: kotlin.text.StringsKt.numberFormatError(java.lang.String):java.lang.Void A[MD:(java.lang.String):java.lang.Void (m)]\l0x0013: NEW_INSTANCE  (r0 I:kotlin.KotlinNothingValueException) =  kotlin.KotlinNothingValueException \l0x0015: INVOKE  (r0 I:kotlin.KotlinNothingValueException) type: DIRECT call: kotlin.KotlinNothingValueException.\<init\>():void A[MD:():void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final byte kotlin.text.UStringsKt.toUByte((r1 I:java.lang.String A[D('$this$toUByte' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('radix' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0018 \-\> B:1:?\lDebug Info:\l  \-1 \-0x0018: r1 '$this$toUByte' Ljava\/lang\/String;\l  \-1 \-0x0018: r2 'radix' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

