digraph "CFG forkotlin.text.UStringsKt.toString\-LxnNnR4(BI)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r0 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char] A[D('$this$toString_u2dLxnNnR4' byte)]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char])  (LINE:18)\l0x0002: INVOKE  (r1 I:int) = (r3 I:int A[D('radix' int)]) type: STATIC call: kotlin.text.CharsKt.checkRadix(int):int A[MD:(int):int (m)]\l0x0006: INVOKE  (r0 I:java.lang.String) = (r0 I:int), (r1 I:int) type: STATIC call: java.lang.Integer.toString(int, int):java.lang.String A[MD:(int, int):java.lang.String (c)]\l0x000a: CONST_STR  (r1 I:java.lang.String) =  \"toString(this, checkRadix(radix))\" \l0x000c: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:java.lang.String) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.UStringsKt.toString\-LxnNnR4((r2 I:byte A[D('$this$toString_u2dLxnNnR4' byte), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('radix' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x000f: r2 '$this$toString_u2dLxnNnR4' B\l  \-1 \-0x000f: r3 'radix' I\lRENAME_REASON:not valid java name\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

