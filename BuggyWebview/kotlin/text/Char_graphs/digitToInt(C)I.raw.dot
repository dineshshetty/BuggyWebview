digraph "CFG forkotlin.text.CharsKt__CharKt.digitToInt(C)I" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (10 ??[int, float, short, byte, char])  (LINE:23)\l0x0002: INVOKE  (r0 I:int) = (r5 I:char A[D('$this$digitToInt' char)]), (r0 I:int) type: STATIC call: kotlin.text.CharsKt.digitOf(char, int):int A[MD:(char, int):int (m)]\l0x0006: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0008|0x0008: IF  (r1 I:??[int, byte, short, char] A[D('it' int)]) \< (0 ??[int, byte, short, char])  \-\> B:12:0x000c  (LINE:24)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000b|RETURN\l|0x000b: RETURN  (r0 I:int)  (LINE:23)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:24)\l0x000e: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0010: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0013: CONST_STR  (r4 I:java.lang.String) =  \"Char \" \l0x0015: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0018: INVOKE  (r3 I:java.lang.StringBuilder), (r5 I:char A[D('$this$digitToInt' char)]) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x001b: CONST_STR  (r4 I:java.lang.String) =  \" is not a decimal digit\" \l0x001d: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0020: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0024: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r3 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|0x0027: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final int kotlin.text.CharsKt__CharKt.digitToInt((r5 I:char A[D('$this$digitToInt' char), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0027 \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x000b: r1 'it' I\l  0x0008\-0x000b: r2 '$i$a$\-also\-CharsKt__CharKt$digitToInt$1' I\l  0x000c\-0x0027: r1 'it' I\l  0x000c\-0x0027: r2 '$i$a$\-also\-CharsKt__CharKt$digitToInt$1' I\l  \-1 \-0x0027: r5 '$this$digitToInt' C\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

