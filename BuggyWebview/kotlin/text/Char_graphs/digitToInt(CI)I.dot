digraph "CFG forkotlin.text.CharsKt__CharKt.digitToInt(CI)I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|java.lang.Integer r0 = kotlin.text.CharsKt.digitToIntOrNull(r3, r4)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|if (r0 == null) goto L6\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006}"];
Node_13 [shape=record,label="{13\:\ 0x000a|RETURN\l|return r0.intValue()\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000b|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Char \")\lr1.append(r3)\lr1.append(\" is not a digit in the given radix=\")\lr1.append(r4)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{public static final int kotlin.text.CharsKt__CharKt.digitToInt((r3v0 '$this$digitToInt' char A[D('$this$digitToInt' char), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'radix' int A[D('radix' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0029 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

