digraph "CFG forkotlin.text.CharsKt__CharKt.equals(CCZ)Z" {
subgraph cluster_Region_1123039773 {
label = "R(1:(2:(1:3)|(1:(2:(1:7)|(2:8|9)))))";
node [shape=record,color=blue];
subgraph cluster_Region_779682565 {
label = "R(2:(1:3)|(1:(2:(1:7)|(2:8|9))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_588797202 {
label = "IF [B:20:0x0001] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0001|if (r6 == r7) goto L3\l}"];
subgraph cluster_Region_845941017 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0003|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1905257883 {
label = "R(1:(2:(1:7)|(2:8|9)))";
node [shape=record,color=blue];
subgraph cluster_Region_394832260 {
label = "R(2:(1:7)|(2:8|9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1993989794 {
label = "IF [B:23:0x0005] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0005|if (r8 == false) goto L7\l}"];
subgraph cluster_Region_607069601 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0007|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_458588243 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0008|char char r2 = java.lang.Character.toUpperCase(r6)\lchar char r3 = java.lang.Character.toUpperCase(r7)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0010|RETURN\l|return r2 == r3 \|\| java.lang.Character.toLowerCase(r2) == java.lang.Character.toLowerCase(r3)\l}"];
}
}
}
}
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0000}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0004}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0012}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x001a|REMOVE\lADDED_TO_REGION\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x001d|ORIG_RETURN\l}"];
Node_33 [shape=record,color=red,label="{33\:\ ?|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return true\l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.text.CharsKt__CharKt.equals((r6v0 '$this$equals' char A[D('$this$equals' char), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'other' char A[D('other' char), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'ignoreCase' boolean A[D('ignoreCase' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0007 \-\> B:18:?, CROSS_EDGE: B:31:0x001e \-\> B:18:?, CROSS_EDGE: B:28:0x001a \-\> B:31:0x001e, CROSS_EDGE: B:26:0x0010 \-\> B:31:0x001e\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_17;Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_18;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_18;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_32;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_22 -> Node_23;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_33;
Node_30 -> Node_18;
Node_33 -> Node_18;
Node_32 -> Node_18;
}

