digraph "CFG forkotlin.text.ScreenFloatValueRegEx.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlin.text.ScreenFloatValueRegEx) =  kotlin.text.ScreenFloatValueRegEx \l0x0002: INVOKE  (r0 I:kotlin.text.ScreenFloatValueRegEx) type: DIRECT call: kotlin.text.ScreenFloatValueRegEx.\<init\>():void A[MD:():void (m)]\l0x0005: SPUT  (r0 I:kotlin.text.ScreenFloatValueRegEx) kotlin.text.ScreenFloatValueRegEx.INSTANCE kotlin.text.ScreenFloatValueRegEx \l0x0007: SGET  (r0 I:kotlin.text.ScreenFloatValueRegEx) =  kotlin.text.ScreenFloatValueRegEx.INSTANCE kotlin.text.ScreenFloatValueRegEx  (LINE:255)\l0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: CONST_STR  (r2 I:java.lang.String) =  \"(p\{Digit\}+)\"  (LINE:256)\l0x000c: CONST_STR  (r3 I:java.lang.String) =  \"(p\{XDigit\}+)\"  (LINE:257)\l0x000e: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:258)\l0x0010: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0013: CONST_STR  (r5 I:java.lang.String) =  \"[eE][+\-]?\" \l0x0015: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0018: INVOKE  (r4 I:java.lang.StringBuilder), (r2 I:java.lang.String A[D('Digits' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001b: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x001f: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:260)\l0x0021: INVOKE  (r5 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0024: CONST_STR  (r6 I:java.lang.String) =  \"(0[xX]\" \l0x0026: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0029: INVOKE  (r5 I:java.lang.StringBuilder), (r3 I:java.lang.String A[D('HexDigits' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002c: CONST_STR  (r6 I:java.lang.String) =  \"(.)?)\|(0[xX]\" \l0x002e: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0032: INVOKE  (r5 I:java.lang.StringBuilder), (r3 I:java.lang.String A[D('HexDigits' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)] (LINE:260)\l0x0036: CONST_STR  (r6 I:java.lang.String) =  \"?(.)\"  (LINE:260)\l0x0038: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003c: INVOKE  (r5 I:java.lang.StringBuilder), (r3 I:java.lang.String A[D('HexDigits' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)] (LINE:260)\l0x003f: CONST  (r6 I:??[int, float, short, byte, char]) = (41 ??[int, float, short, byte, char]) \l0x0041: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0044: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0048: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:263)\l0x004a: INVOKE  (r7 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x004d: CONST  (r8 I:??[int, float, short, byte, char]) = (40 ??[int, float, short, byte, char]) \l0x004f: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0052: INVOKE  (r7 I:java.lang.StringBuilder), (r2 I:java.lang.String A[D('Digits' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0055: CONST_STR  (r8 I:java.lang.String) =  \"(.)?(\" \l0x0057: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x005a: INVOKE  (r7 I:java.lang.StringBuilder), (r2 I:java.lang.String A[D('Digits' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x005d: CONST_STR  (r8 I:java.lang.String) =  \"?)(\" \l0x005f: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0062: INVOKE  (r7 I:java.lang.StringBuilder), (r4 I:java.lang.String A[D('Exp' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0065: CONST_STR  (r8 I:java.lang.String) =  \")?)\|(.(\" \l0x0067: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x006b: INVOKE  (r7 I:java.lang.StringBuilder), (r2 I:java.lang.String A[D('Digits' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)] (LINE:263)\l0x006f: CONST_STR  (r8 I:java.lang.String) =  \")(\"  (LINE:263)\l0x0071: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0075: INVOKE  (r7 I:java.lang.StringBuilder), (r4 I:java.lang.String A[D('Exp' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)] (LINE:263)\l0x0079: CONST_STR  (r8 I:java.lang.String) =  \")?)\|((\"  (LINE:263)\l0x007b: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x007f: INVOKE  (r7 I:java.lang.StringBuilder), (r5 I:java.lang.String A[D('HexString' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)] (LINE:263)\l0x0083: CONST_STR  (r8 I:java.lang.String) =  \")[pP][+\-]?\"  (LINE:263)\l0x0085: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0089: INVOKE  (r7 I:java.lang.StringBuilder), (r2 I:java.lang.String A[D('Digits' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)] (LINE:263)\l0x008c: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x008f: INVOKE  (r6 I:java.lang.String) = (r7 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0093: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:267)\l0x0095: INVOKE  (r7 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0098: CONST_STR  (r8 I:java.lang.String) =  \"[x00\-x20]*[+\-]?(NaN\|Infinity\|((\" \l0x009a: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x009d: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:java.lang.String A[D('Number' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00a0: CONST_STR  (r8 I:java.lang.String) =  \")[fFdD]?))[x00\-x20]*\" \l0x00a2: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00a5: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x00a9: NEW_INSTANCE  (r8 I:kotlin.text.Regex) =  kotlin.text.Regex  (LINE:269)\l0x00ab: INVOKE  (r8 I:kotlin.text.Regex), (r7 I:java.lang.String A[D('fpRegex' java.lang.String)]) type: DIRECT call: kotlin.text.Regex.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (m)]\l0x00ae: SPUT  (r8 I:kotlin.text.Regex) kotlin.text.ScreenFloatValueRegEx.value kotlin.text.Regex  (LINE:255)\l}"];
Node_3 [shape=record,label="{3\:\ 0x00b0|RETURN\l|0x00b0: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlin.text.ScreenFloatValueRegEx.\<clinit\>()  | Debug Info:\l  0x0009\-0x00ae: r0 '$this$value_u24lambda_u2d0' Lkotlin\/text\/ScreenFloatValueRegEx;\l  0x000a\-0x00ae: r1 '$i$a$\-run\-ScreenFloatValueRegEx$value$1' I\l  0x000c\-0x00ae: r2 'Digits' Ljava\/lang\/String;\l  0x000e\-0x00ae: r3 'HexDigits' Ljava\/lang\/String;\l  0x001f\-0x00ae: r4 'Exp' Ljava\/lang\/String;\l  0x0048\-0x00ae: r5 'HexString' Ljava\/lang\/String;\l  0x0093\-0x00ae: r6 'Number' Ljava\/lang\/String;\l  0x00a9\-0x00ae: r7 'fpRegex' Ljava\/lang\/String;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [260=4, 263=8]\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

