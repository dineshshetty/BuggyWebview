digraph "CFG forkotlin.text.CharCategory.$values()[Lkotlin\/text\/CharCategory;" {
subgraph cluster_Region_1291098055 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x00b0|RETURN\l|return new kotlin.text.CharCategoryJVM[]\{kotlin.text.CharCategoryJVM.UNASSIGNED, kotlin.text.CharCategoryJVM.UPPERCASE_LETTER, kotlin.text.CharCategoryJVM.LOWERCASE_LETTER, kotlin.text.CharCategoryJVM.TITLECASE_LETTER, kotlin.text.CharCategoryJVM.MODIFIER_LETTER, kotlin.text.CharCategoryJVM.OTHER_LETTER, kotlin.text.CharCategoryJVM.NON_SPACING_MARK, kotlin.text.CharCategoryJVM.ENCLOSING_MARK, kotlin.text.CharCategoryJVM.COMBINING_SPACING_MARK, kotlin.text.CharCategoryJVM.DECIMAL_DIGIT_NUMBER, kotlin.text.CharCategoryJVM.LETTER_NUMBER, kotlin.text.CharCategoryJVM.OTHER_NUMBER, kotlin.text.CharCategoryJVM.SPACE_SEPARATOR, kotlin.text.CharCategoryJVM.LINE_SEPARATOR, kotlin.text.CharCategoryJVM.PARAGRAPH_SEPARATOR, kotlin.text.CharCategoryJVM.CONTROL, kotlin.text.CharCategoryJVM.FORMAT, kotlin.text.CharCategoryJVM.PRIVATE_USE, kotlin.text.CharCategoryJVM.SURROGATE, kotlin.text.CharCategoryJVM.DASH_PUNCTUATION, kotlin.text.CharCategoryJVM.START_PUNCTUATION, kotlin.text.CharCategoryJVM.END_PUNCTUATION, kotlin.text.CharCategoryJVM.CONNECTOR_PUNCTUATION, kotlin.text.CharCategoryJVM.OTHER_PUNCTUATION, kotlin.text.CharCategoryJVM.MATH_SYMBOL, kotlin.text.CharCategoryJVM.CURRENCY_SYMBOL, kotlin.text.CharCategoryJVM.MODIFIER_SYMBOL, kotlin.text.CharCategoryJVM.OTHER_SYMBOL, kotlin.text.CharCategoryJVM.INITIAL_QUOTE_PUNCTUATION, kotlin.text.CharCategoryJVM.FINAL_QUOTE_PUNCTUATION\}\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final \/* synthetic *\/ kotlin.text.CharCategory[] kotlin.text.CharCategory.$values()  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_7 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
}

