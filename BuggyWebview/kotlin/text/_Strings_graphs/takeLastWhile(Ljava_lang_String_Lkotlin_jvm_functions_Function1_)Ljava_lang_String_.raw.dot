digraph "CFG forkotlin.text.StringsKt___StringsKt.takeLastWhile(Ljava\/lang\/String;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/String;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$takeLastWhile' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r5 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('$this$takeLastWhile' java.lang.String)])  (LINE:616)\l0x000c: CHECK_CAST (r1 I:java.lang.CharSequence) = (java.lang.CharSequence) (r1 I:??[OBJECT, ARRAY]) \l0x000e: INVOKE  (r1 I:int) = (r1 I:java.lang.CharSequence) type: STATIC call: kotlin.text.StringsKt.getLastIndex(java.lang.CharSequence):int A[MD:(java.lang.CharSequence):int (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|LOOP_START\lLOOP:0: B:16:0x0012\-\>B:22:0x0035\l|0x0012: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0013|0x0013: IF  (r2 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char] A[D('index' int)])  \-\> B:24:0x0038 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0015|0x0015: INVOKE  (r2 I:char) = (r4 I:java.lang.String A[D('$this$takeLastWhile' java.lang.String)]), (r1 I:int A[D('index' int)]) type: VIRTUAL call: java.lang.String.charAt(int):char A[MD:(int):char (c)] (LINE:617)\l0x0019: INVOKE  (r2 I:java.lang.Character) = (r2 I:char) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)]\l0x001d: INVOKE  (r2 I:java.lang.Object) = (r5 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)]), (r2 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0021: CHECK_CAST (r2 I:java.lang.Boolean) = (java.lang.Boolean) (r2 I:??[OBJECT, ARRAY]) \l0x0023: INVOKE  (r2 I:boolean) = (r2 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0027|0x0027: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0035 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0035|LOOP_END\lLOOP:0: B:16:0x0012\-\>B:22:0x0035\l|0x0035: ARITH  (r1 I:int) = (r1 I:int A[D('index' int)]) + (\-1 int)  (LINE:616)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0029|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0029|0x0029: ARITH  (r2 I:int) = (r1 I:int A[D('index' int)]) + (1 int)  (LINE:618)\l0x002b: INVOKE  (r2 I:java.lang.String) = (r4 I:java.lang.String A[D('$this$takeLastWhile' java.lang.String)]), (r2 I:int) type: VIRTUAL call: java.lang.String.substring(int):java.lang.String A[MD:(int):java.lang.String (c)]\l0x002f: CONST_STR  (r3 I:java.lang.String) =  \"this as java.lang.String).substring(startIndex)\" \l0x0031: INVOKE  (r2 I:java.lang.Object), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0034|RETURN\l|0x0034: RETURN  (r2 I:java.lang.String) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0038|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0038|RETURN\l|0x0038: RETURN  (r4 I:java.lang.String A[D('$this$takeLastWhile' java.lang.String)])  (LINE:621)\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt___StringsKt.takeLastWhile((r4 I:java.lang.String A[D('$this$takeLastWhile' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:22:0x0035 \-\> B:16:0x0012, CROSS_EDGE: B:23:0x0038 \-\> B:14:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0038: r1 'index' I\l  0x000b\-0x0038: r0 '$i$f$takeLastWhile' I\l  \-1 \-0x0038: r4 '$this$takeLastWhile' Ljava\/lang\/String;\l  \-1 \-0x0038: r5 'predicate' Lkotlin\/jvm\/functions\/Function1;\lSIGNATURE: (Ljava\/lang\/String;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;Ljava\/lang\/Boolean;\>;)Ljava\/lang\/String;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_19;
Node_19 -> Node_22;
Node_19 -> Node_25[style=dashed];
Node_22 -> Node_16;
Node_25 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_14;
Node_24 -> Node_23;
Node_23 -> Node_14;
}

