digraph "CFG forkotlin.text.StringsKt___StringsKt.mapIndexed(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$mapIndexed' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r10 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:980)\l0x000d: INVOKE  (r2 I:int) = (r9 I:java.lang.CharSequence A[D('$this$mapIndexed' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x0011: INVOKE  (r1 I:java.util.ArrayList), (r2 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0014: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x0016: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$mapIndexed' java.lang.CharSequence)]) \l0x0017: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2586)\l0x0019: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2587)\l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|LOOP_START\lLOOP:0: B:12:0x001a\-\>B:14:0x0020\l|0x001a: INVOKE  (r6 I:int) = (r2 I:java.lang.CharSequence A[D('$this$mapIndexedTo$iv' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|0x001e: IF  (r5 I:??[int, byte, short, char]) \>= (r6 I:??[int, byte, short, char])  \-\> B:17:0x0039 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|LOOP_END\lLOOP:0: B:12:0x001a\-\>B:14:0x0020\l|0x0020: INVOKE  (r6 I:char) = (r2 I:java.lang.CharSequence A[D('$this$mapIndexedTo$iv' java.lang.CharSequence)]), (r5 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x0024: ARITH  (r7 I:int) = (r4 I:int A[D('index$iv' int)]) + (1 int)  (LINE:2588)\l0x0026: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int A[D('index$iv' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x002a: INVOKE  (r8 I:java.lang.Character) = (r6 I:char A[D('item$iv' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)]\l0x002e: INVOKE  (r4 I:java.lang.Object) = \l  (r10 I:kotlin.jvm.functions.Function2 A[D('transform' kotlin.jvm.functions.Function2)])\l  (r4 I:java.lang.Object)\l  (r8 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x0032: INVOKE  (r1 I:java.util.Collection A[D('destination$iv' java.util.Collection)]), (r4 I:java.lang.Object) type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0035: ARITH  (r5 I:int) = (r5 I:int) + (1 int)  (LINE:2587)\l0x0037: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index$iv' int)]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|0x003a: CHECK_CAST (r1 I:java.util.List) = (java.util.List) (r1 I:??[OBJECT, ARRAY] A[D('destination$iv' java.util.Collection)]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x003c|RETURN\l|0x003c: RETURN  (r1 I:java.util.List\<R\>)  (LINE:980)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.text.StringsKt___StringsKt.mapIndexed((r9 I:java.lang.CharSequence A[D('$this$mapIndexed' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super java.lang.Character, ? extends R\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x0020 \-\> B:12:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0019\-0x0026: r4 'index$iv' I\l  0x0024\-0x0039: r6 'item$iv' C\l  0x0026\-0x0039: r7 'index$iv' I\l  0x0016\-0x003a: r1 'destination$iv' Ljava\/util\/Collection;\l  0x0017\-0x003a: r2 '$this$mapIndexedTo$iv' Ljava\/lang\/CharSequence;\l  0x0018\-0x003a: r3 '$i$f$mapIndexedTo' I\l  0x0039\-0x003a: r4 'index$iv' I\l  0x000b\-0x003c: r0 '$i$f$mapIndexed' I\l  \-1 \-0x003c: r9 '$this$mapIndexed' Ljava\/lang\/CharSequence;\l  \-1 \-0x003c: r10 'transform' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Integer;\-Ljava\/lang\/Character;+TR;\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_12;
Node_17 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_10;
}

