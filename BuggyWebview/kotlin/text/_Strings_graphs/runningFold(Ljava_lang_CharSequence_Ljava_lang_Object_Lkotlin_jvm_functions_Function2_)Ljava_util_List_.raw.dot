digraph "CFG forkotlin.text.StringsKt___StringsKt.runningFold(Ljava\/lang\/CharSequence;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$runningFold' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"operation\" \l0x0007: INVOKE  (r8 I:java.lang.Object A[D('operation' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:int) = (r6 I:java.lang.CharSequence A[D('$this$runningFold' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:1978)\l0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0015 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|0x0013: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|0x0016: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001d \l}"];
Node_23 [shape=record,label="{23\:\ 0x0018|0x0018: INVOKE  (r1 I:java.util.List) = (r7 I:java.lang.Object A[D('initial' java.lang.Object)]) type: STATIC call: kotlin.collections.CollectionsKt.listOf(java.lang.Object):java.util.List A[MD:\<T\>:(T):java.util.List\<T\> (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x001c|RETURN\l|0x001c: RETURN  (r1 I:java.util.List\<R\>) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x001d|0x001d: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:1979)\l0x001f: INVOKE  (r4 I:int) = (r6 I:java.lang.CharSequence A[D('$this$runningFold' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x0023: ARITH  (r4 I:int) = (r4 I:int) + (r3 I:int) \l0x0024: INVOKE  (r1 I:java.util.ArrayList), (r4 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0027: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0028: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2490)\l0x0029: INVOKE  \l  (r3 I:java.util.ArrayList A[D('$this$runningFold_u24lambda_u2d17' java.util.ArrayList)])\l  (r7 I:java.lang.Object A[D('initial' java.lang.Object)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:1979)\l0x002c: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('$this$runningFold_u24lambda_u2d17' java.util.ArrayList)]) = (r7 I:??[OBJECT, ARRAY] A[D('initial' java.lang.Object)])  (LINE:1980)\l}"];
Node_26 [shape=record,label="{26\:\ 0x002e|LOOP_START\lLOOP:0: B:26:0x002e\-\>B:28:0x0034\l|0x002e: INVOKE  (r4 I:int) = (r6 I:java.lang.CharSequence A[D('$this$runningFold' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0032|0x0032: IF  (r2 I:??[int, byte, short, char]) \>= (r4 I:??[int, byte, short, char])  \-\> B:31:0x0046 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0034|LOOP_END\lLOOP:0: B:26:0x002e\-\>B:28:0x0034\l|0x0034: INVOKE  (r4 I:char) = (r6 I:java.lang.CharSequence A[D('$this$runningFold' java.lang.CharSequence)]), (r2 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x0038: INVOKE  (r5 I:java.lang.Character) = (r4 I:char A[D('element' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:1982)\l0x003c: INVOKE  (r3 I:java.lang.Object A[D('accumulator' java.lang.Object)]) = \l  (r8 I:kotlin.jvm.functions.Function2 A[D('operation' kotlin.jvm.functions.Function2)])\l  (r3 I:java.lang.Object A[D('accumulator' java.lang.Object)])\l  (r5 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x0040: INVOKE  \l  (r1 I:java.util.ArrayList A[D('result' java.util.ArrayList)])\l  (r3 I:java.lang.Object A[D('accumulator' java.lang.Object)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:1983)\l0x0043: ARITH  (r2 I:int) = (r2 I:int) + (1 int)  (LINE:1981)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0046|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0046|0x0046: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('result' java.util.ArrayList)])  (LINE:1985)\l0x0047: CHECK_CAST (r2 I:java.util.List) = (java.util.List) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0049|RETURN\l|0x0049: RETURN  (r2 I:java.util.List\<R\>) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|0x0015: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.text.StringsKt___StringsKt.runningFold((r6 I:java.lang.CharSequence A[D('$this$runningFold' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:R A[D('initial' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function2\<? super R, ? super java.lang.Character, ? extends R\> A[D('operation' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0034 \-\> B:26:0x002e, CROSS_EDGE: B:30:0x0049 \-\> B:17:?, CROSS_EDGE: B:21:0x0015 \-\> B:22:0x0016\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0028\-0x002c: r3 '$this$runningFold_u24lambda_u2d17' Ljava\/util\/ArrayList;\l  0x0029\-0x002c: r4 '$i$a$\-apply\-StringsKt___StringsKt$runningFold$result$1' I\l  0x0038\-0x0046: r4 'element' C\l  0x000b\-0x0049: r0 '$i$f$runningFold' I\l  0x002c\-0x0049: r1 'result' Ljava\/util\/ArrayList;\l  0x002d\-0x0049: r3 'accumulator' Ljava\/lang\/Object;\l  \-1 \-0x0049: r6 '$this$runningFold' Ljava\/lang\/CharSequence;\l  \-1 \-0x0049: r7 'initial' Ljava\/lang\/Object;\l  \-1 \-0x0049: r8 'operation' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Ljava\/lang\/CharSequence;TR;Lkotlin\/jvm\/functions\/Function2\<\-TR;\-Ljava\/lang\/Character;+TR;\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_17;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_26;
Node_31 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_17;
Node_21 -> Node_22;
}

