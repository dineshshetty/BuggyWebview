digraph "CFG forkotlin.text.StringsKt___StringsKt.firstNotNullOfOrNull(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$firstNotNullOfOrNull' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r4 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:106)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|LOOP_START\lLOOP:0: B:16:0x000b\-\>B:21:0x0020\l|0x000b: INVOKE  (r1 I:int) = (r3 I:java.lang.CharSequence A[D('$this$firstNotNullOfOrNull' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|0x000f: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:25:0x0023 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|0x0011: INVOKE  (r1 I:char) = (r3 I:java.lang.CharSequence A[D('$this$firstNotNullOfOrNull' java.lang.CharSequence)]), (r0 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x0015: INVOKE  (r2 I:java.lang.Character) = (r1 I:char A[D('element' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:107)\l0x0019: INVOKE  (r2 I:java.lang.Object) = (r4 I:kotlin.jvm.functions.Function1 A[D('transform' kotlin.jvm.functions.Function1)]), (r2 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x001d|0x001d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0020  (LINE:108)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0020|LOOP_END\lLOOP:0: B:16:0x000b\-\>B:21:0x0020\l|0x0020: ARITH  (r0 I:int) = (r0 I:int) + (1 int)  (LINE:106)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x001f|RETURN\l|0x001f: RETURN  (r2 I:R A[D('result' java.lang.Object)])  (LINE:109)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0023|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0023|RETURN\l|0x0023: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:112)\l0x0024: RETURN  (r0 I:R) \l}"];
MethodNode[shape=record,label="{private static final R kotlin.text.StringsKt___StringsKt.firstNotNullOfOrNull((r3 I:java.lang.CharSequence A[D('$this$firstNotNullOfOrNull' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function1\<? super java.lang.Character, ? extends R\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0020 \-\> B:16:0x000b, CROSS_EDGE: B:23:0x0024 \-\> B:14:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001d\-0x0020: r2 'result' Ljava\/lang\/Object;\l  0x0015\-0x0023: r1 'element' C\l  \-1 \-0x0024: r3 '$this$firstNotNullOfOrNull' Ljava\/lang\/CharSequence;\l  \-1 \-0x0024: r4 'transform' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;+TR;\>;)TR;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_24[style=dashed];
Node_21 -> Node_16;
Node_24 -> Node_20;
Node_20 -> Node_14;
Node_25 -> Node_22;
Node_22 -> Node_14;
}

