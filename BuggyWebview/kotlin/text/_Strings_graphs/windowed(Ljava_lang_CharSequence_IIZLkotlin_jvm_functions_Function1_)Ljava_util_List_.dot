digraph "CFG forkotlin.text.StringsKt___StringsKt.windowed(Ljava\/lang\/CharSequence;IIZLkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r13, \"transform\")\lkotlin.collections.SlidingWindowKt.checkWindowSizeStep(r10, r11)\lint r0 = r9.length()\lint r1 = r0 \/ r11\l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|if ((r0 % r11) != 0) goto L24\l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|r2 = 0\l}"];
Node_32 [shape=record,label="{32\:\ 0x001c|PHI: r2 \l  PHI: (r2v2 int) = (r2v1 int), (r2v4 int) binds: [B:31:0x001b, B:30:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|int r1 = r1 + r2\ljava.util.ArrayList r2 = new java.util.ArrayList(r1)\lr5 = 0\l}"];
Node_33 [shape=record,label="{33\:\ 0x0023|LOOP_START\lLOOP:0: B:33:0x0023\-\>B:45:0x0038\lPHI: r5 \l  PHI: (r5v1 'index' int) = (r5v0 'index' int), (r5v2 'index' int) binds: [B:32:0x001c, B:45:0x0038] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 \< 0) goto L23\l}"];
Node_34 [shape=record,label="{34\:\ 0x0025|if (r5 \>= r0) goto L23\l}"];
Node_35 [shape=record,label="{35\:\ 0x0027|r6 = true\l}"];
Node_37 [shape=record,label="{37\:\ 0x002a|PHI: r6 \l  PHI: (r6v1 boolean) = (r6v0 boolean), (r6v3 boolean) binds: [B:36:0x0029, B:35:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 == false) goto L22\l}"];
Node_38 [shape=record,label="{38\:\ 0x002c|int r6 = r5 + r10\l}"];
Node_39 [shape=record,label="{39\:\ 0x002e|if (r6 \< 0) goto L15\l}"];
Node_40 [shape=record,label="{40\:\ 0x0030|if (r6 \<= r0) goto L12\l}"];
Node_42 [shape=record,label="{42\:\ 0x0033|r7 = r6\l}"];
Node_51 [shape=record,label="{51\:\ 0x0038|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0038|LOOP_END\lLOOP:0: B:33:0x0023\-\>B:45:0x0038\lPHI: r7 \l  PHI: (r7v1 'coercedEnd' int) = (r7v0 'coercedEnd' int), (r7v2 'coercedEnd' int) binds: [B:50:0x0038, B:51:0x0038] A[DONT_GENERATE, DONT_INLINE]\l|r2.add(r13.invoke(r9.subSequence(r5, r7)))\lint r5 = r5 + r11\l}"];
Node_43 [shape=record,label="{43\:\ 0x0035|if (r12 == false) goto L18\l}"];
Node_44 [shape=record,label="{44\:\ 0x0037|r7 = r0\l}"];
Node_50 [shape=record,label="{50\:\ 0x0038|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0045|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0045}"];
Node_47 [shape=record,label="{47\:\ 0x0048|RETURN\l|return r2\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x0045|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0029|r6 = false\l}"];
Node_31 [shape=record,label="{31\:\ 0x001b|r2 = 1\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.text.StringsKt___StringsKt.windowed((r9v0 '$this$windowed' java.lang.CharSequence A[D('$this$windowed' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'size' int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'step' int A[D('step' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'partialWindows' boolean A[D('partialWindows' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'transform' kotlin.jvm.functions.Function1\<? super java.lang.CharSequence, ? extends R\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:45:0x0038 \-\> B:33:0x0023, CROSS_EDGE: B:44:0x0037 \-\> B:45:0x0038, CROSS_EDGE: B:39:0x002e \-\> B:43:0x0035, CROSS_EDGE: B:37:0x002a \-\> B:46:0x0045, CROSS_EDGE: B:36:0x0029 \-\> B:37:0x002a, CROSS_EDGE: B:33:0x0023 \-\> B:36:0x0029, CROSS_EDGE: B:31:0x001b \-\> B:32:0x001c\lINLINE_NOT_NEEDED\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Ljava\/lang\/CharSequence;IIZLkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/CharSequence;+TR;\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_49;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_43;
Node_40 -> Node_42;
Node_40 -> Node_43[style=dashed];
Node_42 -> Node_51;
Node_51 -> Node_45;
Node_45 -> Node_33;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_48;
Node_44 -> Node_50;
Node_50 -> Node_45;
Node_48 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_27;
Node_49 -> Node_46;
Node_36 -> Node_37;
Node_31 -> Node_32;
}

