digraph "CFG forkotlin.text.StringsKt___StringsKt.maxByOrThrow(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)C" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$maxBy' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x0007: INVOKE  (r10 I:java.lang.Object A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:int) = (r9 I:java.lang.CharSequence A[D('$this$maxBy' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:1212)\l0x000f: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0010: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0015 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0013|0x0013: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|0x0016: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0058 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0018|0x0018: INVOKE  (r1 I:char) = (r9 I:java.lang.CharSequence A[D('$this$maxBy' java.lang.CharSequence)]), (r3 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)] (LINE:1213)\l0x001c: INVOKE  (r3 I:int) = (r9 I:java.lang.CharSequence A[D('$this$maxBy' java.lang.CharSequence)]) type: STATIC call: kotlin.text.StringsKt.getLastIndex(java.lang.CharSequence):int A[MD:(java.lang.CharSequence):int (m)] (LINE:1214)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0020|0x0020: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lastIndex' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0023  (LINE:1215)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0022|RETURN\l|0x0022: RETURN  (r1 I:char A[D('maxElem' char)]) \l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0023|0x0023: INVOKE  (r4 I:java.lang.Character) = (r1 I:char A[D('maxElem' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:1216)\l0x0027: INVOKE  (r4 I:java.lang.Object) = (r10 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r4 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x002b: CHECK_CAST (r4 I:java.lang.Comparable) = (java.lang.Comparable) (r4 I:??[OBJECT, ARRAY]) \l0x002d: NEW_INSTANCE  (r5 I:kotlin.ranges.IntRange) =  kotlin.ranges.IntRange  (LINE:1217)\l0x002f: INVOKE  (r5 I:kotlin.ranges.IntRange), (r2 I:int), (r3 I:int A[D('lastIndex' int)]) type: DIRECT call: kotlin.ranges.IntRange.\<init\>(int, int):void A[MD:(int, int):void (m)]\l0x0032: INVOKE  (r2 I:kotlin.collections.IntIterator) = (r5 I:kotlin.ranges.IntRange) type: VIRTUAL call: kotlin.ranges.IntRange.iterator():kotlin.collections.IntIterator A[MD:():java.util.Iterator\<java.lang.Integer\> (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0036|LOOP_START\lLOOP:0: B:35:0x0036\-\>B:45:0x0036\l|0x0036: INVOKE  (r5 I:boolean) = (r2 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x003a|0x003a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0057 \l}"];
Node_37 [shape=record,label="{37\:\ 0x003c|0x003c: INVOKE  (r5 I:int) = (r2 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.nextInt():int A[MD:():int (m)]\l0x0040: INVOKE  (r6 I:char) = (r9 I:java.lang.CharSequence A[D('$this$maxBy' java.lang.CharSequence)]), (r5 I:int A[D('i' int)]) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)] (LINE:1218)\l0x0044: INVOKE  (r7 I:java.lang.Character) = (r6 I:char A[D('e' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:1219)\l0x0048: INVOKE  (r7 I:java.lang.Object) = (r10 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r7 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x004c: CHECK_CAST (r7 I:java.lang.Comparable) = (java.lang.Comparable) (r7 I:??[OBJECT, ARRAY]) \l0x004e: INVOKE  (r8 I:int) = \l  (r4 I:java.lang.Comparable A[D('maxValue' java.lang.Comparable)])\l  (r7 I:java.lang.Object A[D('v' java.lang.Comparable)])\l type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)] (LINE:1220)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0052|0x0052: IF  (r8 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:46:0x0036 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0054|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0054|0x0054: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxElem' char)]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('e' char)])  (LINE:1221)\l0x0055: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('maxValue' java.lang.Comparable)]) = (r7 I:??[OBJECT, ARRAY] A[D('v' java.lang.Comparable)])  (LINE:1222)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0036|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0036|LOOP_END\lSYNTHETIC\lLOOP:0: B:35:0x0036\-\>B:45:0x0036\l}"];
Node_46 [shape=record,label="{46\:\ 0x0036|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0057|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0057|RETURN\l|0x0057: RETURN  (r1 I:char A[D('maxElem' char)])  (LINE:1225)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0058|0x0058: NEW_INSTANCE  (r1 I:java.util.NoSuchElementException A[D('maxElem' char)]) =  java.util.NoSuchElementException  (LINE:1212)\l0x005a: INVOKE  (r1 I:java.util.NoSuchElementException) type: DIRECT call: java.util.NoSuchElementException.\<init\>():void A[MD:():void (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x005d|0x005d: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0015|0x0015: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final char kotlin.text.StringsKt___StringsKt.maxByOrThrow((r9 I:java.lang.CharSequence A[D('$this$maxBy' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function1\<? super java.lang.Character, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:38:0x0052 \-\> B:35:0x0036, BACK_EDGE: B:39:0x0054 \-\> B:35:0x0036, CROSS_EDGE: B:40:0x0057 \-\> B:25:?, CROSS_EDGE: B:42:0x005d \-\> B:25:?, CROSS_EDGE: B:29:0x0015 \-\> B:30:0x0016\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0040\-0x0056: r5 'i' I\l  0x0044\-0x0056: r6 'e' C\l  0x004e\-0x0056: r7 'v' Ljava\/lang\/Comparable;\l  0x001c\-0x0058: r1 'maxElem' C\l  0x0020\-0x0058: r3 'lastIndex' I\l  0x002d\-0x0058: r4 'maxValue' Ljava\/lang\/Comparable;\l  0x000b\-0x005d: r0 '$i$f$maxByOrThrow' I\l  \-1 \-0x005d: r9 '$this$maxBy' Ljava\/lang\/CharSequence;\l  \-1 \-0x005d: r10 'selector' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>]\lSIGNATURE: \<R::Ljava\/lang\/Comparable\<\-TR;\>;\>(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;+TR;\>;)C\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_41;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_25;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_44;
Node_37 -> Node_38;
Node_38 -> Node_43[style=dashed];
Node_38 -> Node_46;
Node_43 -> Node_39;
Node_39 -> Node_47;
Node_47 -> Node_45;
Node_45 -> Node_35;
Node_46 -> Node_45;
Node_44 -> Node_40;
Node_40 -> Node_25;
Node_41 -> Node_42;
Node_42 -> Node_25;
Node_29 -> Node_30;
}

