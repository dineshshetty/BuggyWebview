digraph "CFG forkotlin.text.StringsKt___StringsKt.map(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('$this$map' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r8 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:970)\l0x000d: INVOKE  (r2 I:int) = (r7 I:java.lang.CharSequence A[D('$this$map' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x0011: INVOKE  (r1 I:java.util.ArrayList), (r2 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0014: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x0016: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$map' java.lang.CharSequence)]) \l0x0017: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2583)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0019|LOOP_START\lLOOP:0: B:12:0x0019\-\>B:14:0x001f\l|0x0019: INVOKE  (r5 I:int) = (r2 I:java.lang.CharSequence A[D('$this$mapTo$iv' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|0x001d: IF  (r4 I:??[int, byte, short, char]) \>= (r5 I:??[int, byte, short, char])  \-\> B:17:0x0031 \l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|LOOP_END\lLOOP:0: B:12:0x0019\-\>B:14:0x001f\l|0x001f: INVOKE  (r5 I:char) = (r2 I:java.lang.CharSequence A[D('$this$mapTo$iv' java.lang.CharSequence)]), (r4 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x0023: INVOKE  (r6 I:java.lang.Character) = (r5 I:char A[D('item$iv' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:2584)\l0x0027: INVOKE  (r6 I:java.lang.Object) = (r8 I:kotlin.jvm.functions.Function1 A[D('transform' kotlin.jvm.functions.Function1)]), (r6 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x002b: INVOKE  (r1 I:java.util.Collection A[D('destination$iv' java.util.Collection)]), (r6 I:java.lang.Object) type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x002e: ARITH  (r4 I:int) = (r4 I:int) + (1 int)  (LINE:2583)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0031|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0032: CHECK_CAST (r1 I:java.util.List) = (java.util.List) (r1 I:??[OBJECT, ARRAY] A[D('destination$iv' java.util.Collection)]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|RETURN\l|0x0034: RETURN  (r1 I:java.util.List\<R\>)  (LINE:970)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.text.StringsKt___StringsKt.map((r7 I:java.lang.CharSequence A[D('$this$map' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function1\<? super java.lang.Character, ? extends R\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x001f \-\> B:12:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0023\-0x0031: r5 'item$iv' C\l  0x0016\-0x0032: r1 'destination$iv' Ljava\/util\/Collection;\l  0x0017\-0x0032: r2 '$this$mapTo$iv' Ljava\/lang\/CharSequence;\l  0x0018\-0x0032: r3 '$i$f$mapTo' I\l  0x000b\-0x0034: r0 '$i$f$map' I\l  \-1 \-0x0034: r7 '$this$map' Ljava\/lang\/CharSequence;\l  \-1 \-0x0034: r8 'transform' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;+TR;\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_12;
Node_17 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_10;
}

