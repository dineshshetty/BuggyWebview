digraph "CFG forkotlin.text.StringsKt___StringsKt.single(Ljava\/lang\/CharSequence;)C" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$single' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:int) = (r2 I:java.lang.CharSequence A[D('$this$single' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:269)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0009|0x0009: SWITCH  (r0 I:??)\l case 0: goto B:18:0x001a\l case 1: goto B:16:0x0014\l default: goto B:14:0x000c \l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:272)\l0x000e: CONST_STR  (r1 I:java.lang.String) =  \"Char sequence has more than one element.\" \l0x0010: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0013|0x0013: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0014|0x0014: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:271)\l0x0015: INVOKE  (r0 I:char) = (r2 I:java.lang.CharSequence A[D('$this$single' java.lang.CharSequence)]), (r0 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0019|RETURN\l|0x0019: RETURN  (r0 I:char)  (LINE:269)\l}"];
Node_18 [shape=record,label="{18\:\ 0x001a|0x001a: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException  (LINE:270)\l0x001c: CONST_STR  (r1 I:java.lang.String) =  \"Char sequence is empty.\" \l0x001e: INVOKE  (r0 I:java.util.NoSuchElementException), (r1 I:java.lang.String) type: DIRECT call: java.util.NoSuchElementException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0021|0x0021: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final char kotlin.text.StringsKt___StringsKt.single((r2 I:java.lang.CharSequence A[D('$this$single' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0019 \-\> B:11:?, CROSS_EDGE: B:19:0x0021 \-\> B:11:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0029: r2 '$this$single' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_11;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

