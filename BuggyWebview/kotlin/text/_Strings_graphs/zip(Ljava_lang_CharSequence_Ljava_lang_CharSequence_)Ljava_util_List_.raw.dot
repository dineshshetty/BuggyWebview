digraph "CFG forkotlin.text.StringsKt___StringsKt.zip(Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;)Ljava\/util\/List;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r10 I:java.lang.Object A[D('$this$zip' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"other\" \l0x0007: INVOKE  (r11 I:java.lang.Object A[D('other' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('$this$zip' java.lang.CharSequence)])  (LINE:2416)\l0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: INVOKE  (r2 I:int) = (r0 I:java.lang.CharSequence A[D('$this$zip$iv' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:2627)\l0x0010: INVOKE  (r3 I:int) = (r11 I:java.lang.CharSequence A[D('other' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x0014: INVOKE  (r2 I:int) = (r2 I:int), (r3 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0018: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:2628)\l0x001a: INVOKE  (r3 I:java.util.ArrayList), (r2 I:int A[D('length$iv' int)]) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x001d: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2629)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|LOOP_START\lLOOP:0: B:11:0x001e\-\>B:12:0x0020\l|0x001e: IF  (r4 I:??[int, byte, short, char] A[D('i$iv' int)]) \>= (r2 I:??[int, byte, short, char] A[D('length$iv' int)])  \-\> B:15:0x003b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|LOOP_END\lLOOP:0: B:11:0x001e\-\>B:12:0x0020\l|0x0020: INVOKE  (r5 I:char) = (r0 I:java.lang.CharSequence A[D('$this$zip$iv' java.lang.CharSequence)]), (r4 I:int A[D('i$iv' int)]) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)] (LINE:2630)\l0x0024: INVOKE  (r6 I:char) = (r11 I:java.lang.CharSequence A[D('other' java.lang.CharSequence)]), (r4 I:int A[D('i$iv' int)]) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x0028: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0029: INVOKE  (r8 I:java.lang.Character) = (r5 I:char A[D('c1' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:2416)\l0x002d: INVOKE  (r9 I:java.lang.Character) = (r6 I:char A[D('c2' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)]\l0x0031: INVOKE  (r5 I:kotlin.Pair A[D('c1' char)]) = (r8 I:java.lang.Object), (r9 I:java.lang.Object) type: STATIC call: kotlin.TuplesKt.to(java.lang.Object, java.lang.Object):kotlin.Pair A[MD:\<A, B\>:(A, B):kotlin.Pair\<A, B\> (m)]\l0x0035: INVOKE  (r3 I:java.util.ArrayList A[D('list$iv' java.util.ArrayList)]), (r5 I:java.lang.Object A[D('c1' char)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0038: ARITH  (r4 I:int) = (r4 I:int A[D('i$iv' int)]) + (1 int)  (LINE:2629)\l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('$this$zip$iv' java.lang.CharSequence)]) = (r3 I:??[OBJECT, ARRAY] A[D('list$iv' java.util.ArrayList)])  (LINE:2632)\l0x003c: CHECK_CAST (r0 I:java.util.List) = (java.util.List) (r0 I:??[OBJECT, ARRAY] A[D('$this$zip$iv' java.lang.CharSequence)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|RETURN\l|0x003e: RETURN  \l  (r0 I:java.util.List\<kotlin.Pair\<java.lang.Character, java.lang.Character\>\> A[D('$this$zip$iv' java.lang.CharSequence)])\l  (LINE:2416)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<kotlin.Pair\<java.lang.Character, java.lang.Character\>\> kotlin.text.StringsKt___StringsKt.zip((r10 I:java.lang.CharSequence A[D('$this$zip' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.CharSequence A[D('other' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x0020 \-\> B:11:0x001e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0024\-0x0035: r5 'c1' C\l  0x0028\-0x0035: r6 'c2' C\l  0x0029\-0x0035: r7 '$i$a$\-zip\-StringsKt___StringsKt$zip$1' I\l  0x001e\-0x003b: r4 'i$iv' I\l  0x000b\-0x003e: r0 '$this$zip$iv' Ljava\/lang\/CharSequence;\l  0x000c\-0x003e: r1 '$i$f$zip' I\l  0x0018\-0x003e: r2 'length$iv' I\l  0x001d\-0x003e: r3 'list$iv' Ljava\/util\/ArrayList;\l  \-1 \-0x003e: r10 '$this$zip' Ljava\/lang\/CharSequence;\l  \-1 \-0x003e: r11 'other' Ljava\/lang\/CharSequence;\lSIGNATURE: (Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;)Ljava\/util\/List\<Lkotlin\/Pair\<Ljava\/lang\/Character;Ljava\/lang\/Character;\>;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_11;
Node_15 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

