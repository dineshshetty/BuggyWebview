digraph "CFG forkotlin.text.StringsKt___StringsKt.associate(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$associate' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r10 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:int) = (r9 I:java.lang.CharSequence A[D('$this$associate' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:676)\l0x000f: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: kotlin.collections.MapsKt.mapCapacity(int):int A[MD:(int):int (m)]\l0x0013: CONST  (r2 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l0x0015: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: kotlin.ranges.RangesKt.coerceAtLeast(int, int):int A[MD:(int, int):int (m)]\l0x0019: NEW_INSTANCE  (r2 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap  (LINE:677)\l0x001b: INVOKE  (r2 I:java.util.LinkedHashMap), (r1 I:int A[D('capacity' int)]) type: DIRECT call: java.util.LinkedHashMap.\<init\>(int):void A[MD:(int):void (c)]\l0x001e: CHECK_CAST (r2 I:java.util.Map) = (java.util.Map) (r2 I:??[OBJECT, ARRAY]) \l0x0020: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$associate' java.lang.CharSequence)]) \l0x0021: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0022: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2522)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|LOOP_START\lLOOP:0: B:12:0x0023\-\>B:14:0x0029\l|0x0023: INVOKE  (r6 I:int) = (r3 I:java.lang.CharSequence A[D('$this$associateTo$iv' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|0x0027: IF  (r5 I:??[int, byte, short, char]) \>= (r6 I:??[int, byte, short, char])  \-\> B:17:0x0046 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|LOOP_END\lLOOP:0: B:12:0x0023\-\>B:14:0x0029\l|0x0029: INVOKE  (r6 I:char) = (r3 I:java.lang.CharSequence A[D('$this$associateTo$iv' java.lang.CharSequence)]), (r5 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x002d: INVOKE  (r7 I:java.lang.Character) = (r6 I:char A[D('element$iv' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:2523)\l0x0031: INVOKE  (r7 I:java.lang.Object) = (r10 I:kotlin.jvm.functions.Function1 A[D('transform' kotlin.jvm.functions.Function1)]), (r7 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0035: CHECK_CAST (r7 I:kotlin.Pair) = (kotlin.Pair) (r7 I:??[OBJECT, ARRAY]) \l0x0037: INVOKE  (r8 I:java.lang.Object) = (r7 I:kotlin.Pair) type: VIRTUAL call: kotlin.Pair.getFirst():java.lang.Object A[MD:():A (m)]\l0x003b: INVOKE  (r7 I:java.lang.Object) = (r7 I:kotlin.Pair) type: VIRTUAL call: kotlin.Pair.getSecond():java.lang.Object A[MD:():B (m)]\l0x003f: INVOKE  (r2 I:java.util.Map A[D('destination$iv' java.util.Map)]), (r8 I:java.lang.Object), (r7 I:java.lang.Object) type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l0x0042: ARITH  (r5 I:int) = (r5 I:int) + (1 int)  (LINE:2522)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|RETURN\l|0x0046: RETURN  (r2 I:java.util.Map\<K, V\> A[D('destination$iv' java.util.Map)])  (LINE:677)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.text.StringsKt___StringsKt.associate((r9 I:java.lang.CharSequence A[D('$this$associate' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function1\<? super java.lang.Character, ? extends kotlin.Pair\<? extends K, ? extends V\>\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x0029 \-\> B:12:0x0023\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002d\-0x0045: r6 'element$iv' C\l  0x0020\-0x0046: r2 'destination$iv' Ljava\/util\/Map;\l  0x0021\-0x0046: r3 '$this$associateTo$iv' Ljava\/lang\/CharSequence;\l  0x0022\-0x0046: r4 '$i$f$associateTo' I\l  0x000b\-0x0046: r0 '$i$f$associate' I\l  0x0019\-0x0046: r1 'capacity' I\l  \-1 \-0x0046: r9 '$this$associate' Ljava\/lang\/CharSequence;\l  \-1 \-0x0046: r10 'transform' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;+Lkotlin\/Pair\<+TK;+TV;\>;\>;)Ljava\/util\/Map\<TK;TV;\>;\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_12;
Node_17 -> Node_16;
Node_16 -> Node_10;
}

