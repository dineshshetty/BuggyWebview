digraph "CFG forkotlin.text.StringsKt___StringsKt.indexOfFirst(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)I" {
subgraph cluster_Region_6492955 {
label = "R(3:1|(1:(2:(1:7)|(1:5)))|10)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"predicate\")\lint r1 = 0\lint int r2 = r4.length()\l}"];
subgraph cluster_LoopRegion_876629934 {
label = "LOOP:0: (1:(2:(1:7)|(1:5)))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0010|LOOP_START\lLOOP:0: B:15:0x0010\-\>B:19:0x0027\lPHI: r1 \l  PHI: (r1v1 'index' int) = (r1v0 'index' int), (r1v3 'index' int) binds: [B:14:0x0000, B:19:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \< r2) goto L3\l}"];
subgraph cluster_Region_252933797 {
label = "R(1:(2:(1:7)|(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_2059911185 {
label = "R(2:(1:7)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1231791543 {
label = "IF [B:17:0x0024] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0024|if (r5.invoke(java.lang.Character.valueOf(r4.charAt(r1))).booleanValue() != false) goto L6\l}"];
subgraph cluster_Region_1359518794 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0026|RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_462177955 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0027|LOOP_END\lLOOP:0: B:15:0x0010\-\>B:19:0x0027\l|r1++\l}"];
}
}
}
}
Node_20 [shape=record,label="{20\:\ 0x002a|RETURN\l|return \-1\l}"];
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0012}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0026|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x002a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final int kotlin.text.StringsKt___StringsKt.indexOfFirst((r4v0 '$this$indexOfFirst' java.lang.CharSequence A[D('$this$indexOfFirst' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'predicate' kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0027 \-\> B:15:0x0010, CROSS_EDGE: B:21:0x002b \-\> B:13:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;Ljava\/lang\/Boolean;\>;)I\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_22[style=dashed];
Node_17 -> Node_19[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_13;
Node_19 -> Node_15;
Node_20 -> Node_13;
Node_12 -> Node_14;
Node_16 -> Node_17;
Node_23 -> Node_18;
Node_22 -> Node_20;
}

