digraph "CFG forkotlin.text.StringsKt___StringsKt.mapIndexedTo(Ljava\/lang\/CharSequence;Ljava\/util\/Collection;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/Collection;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$mapIndexedTo' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r7 I:java.lang.Object A[D('destination' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x000c: INVOKE  (r8 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1011)\l0x0011: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1012)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0012|LOOP_START\lLOOP:0: B:11:0x0012\-\>B:13:0x0018\l|0x0012: INVOKE  (r3 I:int) = (r6 I:java.lang.CharSequence A[D('$this$mapIndexedTo' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|0x0016: IF  (r2 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:15:0x0031 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0018|LOOP_END\lLOOP:0: B:11:0x0012\-\>B:13:0x0018\l|0x0018: INVOKE  (r3 I:char) = (r6 I:java.lang.CharSequence A[D('$this$mapIndexedTo' java.lang.CharSequence)]), (r2 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x001c: ARITH  (r4 I:int) = (r1 I:int A[D('index' int)]) + (1 int)  (LINE:1013)\l0x001e: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int A[D('index' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0022: INVOKE  (r5 I:java.lang.Character) = (r3 I:char A[D('item' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)]\l0x0026: INVOKE  (r1 I:java.lang.Object) = \l  (r8 I:kotlin.jvm.functions.Function2 A[D('transform' kotlin.jvm.functions.Function2)])\l  (r1 I:java.lang.Object)\l  (r5 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x002a: INVOKE  (r7 I:java.util.Collection A[D('destination' java.util.Collection)]), (r1 I:java.lang.Object) type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x002d: ARITH  (r2 I:int) = (r2 I:int) + (1 int)  (LINE:1012)\l0x002f: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|RETURN\l|0x0031: RETURN  (r7 I:C extends java.util.Collection\<? super R\> A[D('destination' java.util.Collection)])  (LINE:1014)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final C extends java.util.Collection\<? super R\> kotlin.text.StringsKt___StringsKt.mapIndexedTo((r6 I:java.lang.CharSequence A[D('$this$mapIndexedTo' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:C extends java.util.Collection\<? super R\> A[D('destination' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super java.lang.Character, ? extends R\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x0018 \-\> B:11:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x001e: r1 'index' I\l  0x001c\-0x0031: r3 'item' C\l  0x001e\-0x0031: r4 'index' I\l  0x0010\-0x0031: r0 '$i$f$mapIndexedTo' I\l  0x0031\-0x0031: r1 'index' I\l  \-1 \-0x0031: r6 '$this$mapIndexedTo' Ljava\/lang\/CharSequence;\l  \-1 \-0x0031: r7 'destination' Ljava\/util\/Collection;\l  \-1 \-0x0031: r8 'transform' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [R, C extends java.util.Collection\<? super R\>]\lSIGNATURE: \<R:Ljava\/lang\/Object;C::Ljava\/util\/Collection\<\-TR;\>;\>(Ljava\/lang\/CharSequence;TC;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Integer;\-Ljava\/lang\/Character;+TR;\>;)TC;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_11;
Node_15 -> Node_14;
Node_14 -> Node_9;
}

