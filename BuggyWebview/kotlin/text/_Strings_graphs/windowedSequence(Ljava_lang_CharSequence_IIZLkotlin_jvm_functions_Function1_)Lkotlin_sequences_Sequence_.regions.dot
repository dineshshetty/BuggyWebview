digraph "CFG forkotlin.text.StringsKt___StringsKt.windowedSequence(Ljava\/lang\/CharSequence;IIZLkotlin\/jvm\/functions\/Function1;)Lkotlin\/sequences\/Sequence;" {
subgraph cluster_Region_1946170147 {
label = "R(3:1|4|5)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"transform\")\lkotlin.collections.SlidingWindowKt.checkWindowSizeStep(r4, r5)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|PHI: r0 \l  PHI: (r0v4 kotlin.ranges.IntRange A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.ranges.IntProgression kotlin.ranges.IntProgression r0 = kotlin.ranges.RangesKt.step(r6 ? kotlin.text.StringsKt.getIndices(r3) : kotlin.ranges.RangesKt.until(0, (r3.length() \- r4) + 1), r5)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|RETURN\l|return kotlin.sequences.SequencesKt.map(kotlin.collections.CollectionsKt.asSequence(r0), new kotlin.text.StringsKt___StringsKt$windowedSequence$2(r4, r3, r7))\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x000d}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x000f}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0014}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<R\> kotlin.text.StringsKt___StringsKt.windowedSequence((r3v0 '$this$windowedSequence' java.lang.CharSequence A[D('$this$windowedSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'size' int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'step' int A[D('step' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'partialWindows' boolean A[D('partialWindows' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'transform' kotlin.jvm.functions.Function1\<? super java.lang.CharSequence, ? extends R\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0014 \-\> B:14:0x0020\lINLINE_NOT_NEEDED\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Ljava\/lang\/CharSequence;IIZLkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/CharSequence;+TR;\>;)Lkotlin\/sequences\/Sequence\<TR;\>;\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_8 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
}

