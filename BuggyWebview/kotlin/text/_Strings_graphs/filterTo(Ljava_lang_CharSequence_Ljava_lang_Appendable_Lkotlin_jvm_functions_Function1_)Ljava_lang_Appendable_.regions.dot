digraph "CFG forkotlin.text.StringsKt___StringsKt.filterTo(Ljava\/lang\/CharSequence;Ljava\/lang\/Appendable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Appendable;" {
subgraph cluster_Region_3338415 {
label = "R(3:1|(3:3|(1:5)(0)|7)|10)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"destination\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"predicate\")\lint r1 = 0\lint int r2 = r5.length()\l}"];
subgraph cluster_LoopRegion_775134286 {
label = "LOOP:0: (3:3|(1:5)(0)|7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0015|LOOP_START\lLOOP:0: B:15:0x0015\-\>B:19:0x002e\lPHI: r1 \l  PHI: (r1v1 'index' int) = (r1v0 'index' int), (r1v2 'index' int) binds: [B:14:0x0000, B:19:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \< r2) goto L3\l}"];
subgraph cluster_Region_1646719450 {
label = "R(3:3|(1:5)(0)|7)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0017|char char r3 = r5.charAt(r1)\l}"];
subgraph cluster_IfRegion_23440641 {
label = "IF [B:17:0x0029] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0029|if (r7.invoke(java.lang.Character.valueOf(r3)).booleanValue() != false) goto L5\l}"];
subgraph cluster_Region_382046730 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x002b|r6.append(r3)\l}"];
}
subgraph cluster_Region_1567005434 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_19 [shape=record,label="{19\:\ 0x002e|LOOP_END\lLOOP:0: B:15:0x0015\-\>B:19:0x002e\l|r1++\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x0031|RETURN\l|return r6\l}"];
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x002e|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x002e|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0031|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final C extends java.lang.Appendable kotlin.text.StringsKt___StringsKt.filterTo((r5v0 '$this$filterTo' java.lang.CharSequence A[D('$this$filterTo' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'destination' C extends java.lang.Appendable A[D('destination' java.lang.Appendable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'predicate' kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x002e \-\> B:15:0x0015, CROSS_EDGE: B:17:0x0029 \-\> B:19:0x002e\lINLINE_NOT_NEEDED\lTYPE_VARS: [C extends java.lang.Appendable]\lSIGNATURE: \<C::Ljava\/lang\/Appendable;\>(Ljava\/lang\/CharSequence;TC;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;Ljava\/lang\/Boolean;\>;)TC;\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_21[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_23[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_15;
Node_20 -> Node_13;
Node_12 -> Node_14;
Node_22 -> Node_19;
Node_23 -> Node_19;
Node_21 -> Node_20;
}

