digraph "CFG forkotlin.text.StringsKt___StringsKt.mapNotNull(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r12 I:java.lang.Object A[D('$this$mapNotNull' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r13 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:1024)\l0x000d: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0010: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x0012: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('$this$mapNotNull' java.lang.CharSequence)]) \l0x0013: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$mapNotNullTo$iv' java.lang.CharSequence)])  (LINE:2599)\l0x0015: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0016: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2600)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|LOOP_START\lLOOP:0: B:17:0x0017\-\>B:22:0x0031\l|0x0017: INVOKE  (r7 I:int) = (r4 I:java.lang.CharSequence A[D('$this$forEach$iv$iv' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x001b|0x001b: IF  (r6 I:??[int, byte, short, char]) \>= (r7 I:??[int, byte, short, char])  \-\> B:25:0x0034 \l}"];
Node_19 [shape=record,label="{19\:\ 0x001d|0x001d: INVOKE  (r7 I:char) = (r4 I:java.lang.CharSequence A[D('$this$forEach$iv$iv' java.lang.CharSequence)]), (r6 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x0021: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('element$iv$iv' char)]) \l0x0022: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0023: INVOKE  (r10 I:java.lang.Character) = (r8 I:char A[D('element$iv' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:2599)\l0x0027: INVOKE  (r10 I:java.lang.Object) = (r13 I:kotlin.jvm.functions.Function1 A[D('transform' kotlin.jvm.functions.Function1)]), (r10 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x002b|0x002b: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0031 \l}"];
Node_21 [shape=record,label="{21\:\ 0x002d|0x002d: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2601)\l0x002e: INVOKE  \l  (r1 I:java.util.Collection A[D('destination$iv' java.util.Collection)])\l  (r10 I:java.lang.Object A[D('it$iv' java.lang.Object)])\l type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:2599)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0031|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0031|LOOP_END\lLOOP:0: B:17:0x0017\-\>B:22:0x0031\l|0x0031: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0031|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0034|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0034|0x0036: CHECK_CAST (r1 I:java.util.List) = (java.util.List) (r1 I:??[OBJECT, ARRAY] A[D('destination$iv' java.util.Collection)]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0038|RETURN\l|0x0038: RETURN  (r1 I:java.util.List\<R\>)  (LINE:1024)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.text.StringsKt___StringsKt.mapNotNull((r12 I:java.lang.CharSequence A[D('$this$mapNotNull' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:kotlin.jvm.functions.Function1\<? super java.lang.Character, ? extends R\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:22:0x0031 \-\> B:17:0x0017, CROSS_EDGE: B:20:0x002b \-\> B:22:0x0031\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0022\-0x0031: r8 'element$iv' C\l  0x0023\-0x0031: r9 '$i$a$\-forEach\-StringsKt___StringsKt$mapNotNullTo$1$iv' I\l  0x002d\-0x0031: r10 'it$iv' Ljava\/lang\/Object;\l  0x002e\-0x0031: r11 '$i$a$\-let\-StringsKt___StringsKt$mapNotNullTo$1$1$iv' I\l  0x0021\-0x0034: r7 'element$iv$iv' C\l  0x0015\-0x0035: r4 '$this$forEach$iv$iv' Ljava\/lang\/CharSequence;\l  0x0016\-0x0035: r5 '$i$f$forEach' I\l  0x0012\-0x0036: r1 'destination$iv' Ljava\/util\/Collection;\l  0x0013\-0x0036: r2 '$this$mapNotNullTo$iv' Ljava\/lang\/CharSequence;\l  0x0014\-0x0036: r3 '$i$f$mapNotNullTo' I\l  0x000b\-0x0038: r0 '$i$f$mapNotNull' I\l  \-1 \-0x0038: r12 '$this$mapNotNull' Ljava\/lang\/CharSequence;\l  \-1 \-0x0038: r13 'transform' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;+TR;\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_21 -> Node_26;
Node_26 -> Node_22;
Node_22 -> Node_17;
Node_27 -> Node_22;
Node_25 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_15;
}

