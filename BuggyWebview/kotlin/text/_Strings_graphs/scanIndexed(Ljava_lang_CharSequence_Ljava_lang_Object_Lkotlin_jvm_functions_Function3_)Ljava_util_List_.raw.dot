digraph "CFG forkotlin.text.StringsKt___StringsKt.scanIndexed(Ljava\/lang\/CharSequence;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function3;)Ljava\/util\/List;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$scanIndexed' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"operation\" \l0x0007: INVOKE  (r11 I:java.lang.Object A[D('operation' kotlin.jvm.functions.Function3)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$scanIndexed' java.lang.CharSequence)])  (LINE:2091)\l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: INVOKE  (r3 I:int) = (r1 I:java.lang.CharSequence A[D('$this$runningFoldIndexed$iv' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:2618)\l0x0011: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|0x0012: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0016 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|0x0014: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0017|0x0017: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x001e \l}"];
Node_22 [shape=record,label="{22\:\ 0x0019|0x0019: INVOKE  (r3 I:java.util.List) = (r10 I:java.lang.Object A[D('initial' java.lang.Object)]) type: STATIC call: kotlin.collections.CollectionsKt.listOf(java.lang.Object):java.util.List A[MD:\<T\>:(T):java.util.List\<T\> (m)]\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x004f: RETURN  (r3 I:java.util.List\<R\> A[D('result$iv' java.util.ArrayList)]) A[SYNTHETIC] (LINE:2091)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x001e|0x001e: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:2619)\l0x0020: INVOKE  (r5 I:int) = (r1 I:java.lang.CharSequence A[D('$this$runningFoldIndexed$iv' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x0024: ARITH  (r5 I:int) = (r5 I:int) + (r4 I:int) \l0x0025: INVOKE  (r3 I:java.util.ArrayList), (r5 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0028: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x0029: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2620)\l0x002a: INVOKE  \l  (r4 I:java.util.ArrayList A[D('$this$runningFoldIndexed_u24lambda_u2d18$iv' java.util.ArrayList)])\l  (r10 I:java.lang.Object A[D('initial' java.lang.Object)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:2619)\l0x002d: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('$this$runningFoldIndexed_u24lambda_u2d18$iv' java.util.ArrayList)]) = (r10 I:??[OBJECT, ARRAY] A[D('initial' java.lang.Object)])  (LINE:2621)\l0x002e: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2622)\l0x002f: INVOKE  (r6 I:int) = (r1 I:java.lang.CharSequence A[D('$this$runningFoldIndexed$iv' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0033|LOOP_START\lLOOP:0: B:24:0x0033\-\>B:25:0x0035\l|0x0033: IF  (r5 I:??[int, byte, short, char] A[D('index$iv' int)]) \>= (r6 I:??[int, byte, short, char])  \-\> B:28:0x004b \l}"];
Node_25 [shape=record,label="{25\:\ 0x0035|LOOP_END\lLOOP:0: B:24:0x0033\-\>B:25:0x0035\l|0x0035: INVOKE  (r7 I:java.lang.Integer) = (r5 I:int A[D('index$iv' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:2623)\l0x0039: INVOKE  (r8 I:char) = \l  (r1 I:java.lang.CharSequence A[D('$this$runningFoldIndexed$iv' java.lang.CharSequence)])\l  (r5 I:int A[D('index$iv' int)])\l type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x003d: INVOKE  (r8 I:java.lang.Character) = (r8 I:char) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)]\l0x0041: INVOKE  (r4 I:java.lang.Object A[D('accumulator$iv' java.lang.Object)]) = \l  (r11 I:kotlin.jvm.functions.Function3 A[D('operation' kotlin.jvm.functions.Function3)])\l  (r7 I:java.lang.Object)\l  (r4 I:java.lang.Object A[D('accumulator$iv' java.lang.Object)])\l  (r8 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function3.invoke(java.lang.Object, java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2, P3):R (m)]\l0x0045: INVOKE  \l  (r3 I:java.util.ArrayList A[D('result$iv' java.util.ArrayList)])\l  (r4 I:java.lang.Object A[D('accumulator$iv' java.lang.Object)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:2624)\l0x0048: ARITH  (r5 I:int) = (r5 I:int A[D('index$iv' int)]) + (1 int)  (LINE:2622)\l}"];
Node_28 [shape=record,label="{28\:\ 0x004b|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x004b|0x004b: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('index$iv' int)]) = (r3 I:??[OBJECT, ARRAY] A[D('result$iv' java.util.ArrayList)])  (LINE:2626)\l0x004c: CHECK_CAST (r5 I:java.util.List) = (java.util.List) (r5 I:??[OBJECT, ARRAY]) \l0x004e: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('result$iv' java.util.ArrayList)]) = (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x004f|RETURN\lORIG_RETURN\l|0x004f: RETURN  (r3 I:java.util.List\<R\> A[D('result$iv' java.util.ArrayList)])  (LINE:2091)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|0x0016: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.text.StringsKt___StringsKt.scanIndexed((r9 I:java.lang.CharSequence A[D('$this$scanIndexed' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:R A[D('initial' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super R, ? super java.lang.Character, ? extends R\> A[D('operation' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x0035 \-\> B:24:0x0033, CROSS_EDGE: B:26:0x004b \-\> B:27:0x004f, CROSS_EDGE: B:20:0x0016 \-\> B:21:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0029\-0x002d: r4 '$this$runningFoldIndexed_u24lambda_u2d18$iv' Ljava\/util\/ArrayList;\l  0x002a\-0x002d: r5 '$i$a$\-apply\-StringsKt___StringsKt$runningFoldIndexed$result$1$iv' I\l  0x002f\-0x004b: r5 'index$iv' I\l  0x000c\-0x004f: r1 '$this$runningFoldIndexed$iv' Ljava\/lang\/CharSequence;\l  0x000d\-0x004f: r2 '$i$f$runningFoldIndexed' I\l  0x002d\-0x004f: r3 'result$iv' Ljava\/util\/ArrayList;\l  0x002e\-0x004f: r4 'accumulator$iv' Ljava\/lang\/Object;\l  0x000b\-0x004f: r0 '$i$f$scanIndexed' I\l  \-1 \-0x004f: r9 '$this$scanIndexed' Ljava\/lang\/CharSequence;\l  \-1 \-0x004f: r10 'initial' Ljava\/lang\/Object;\l  \-1 \-0x004f: r11 'operation' Lkotlin\/jvm\/functions\/Function3;\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Ljava\/lang\/CharSequence;TR;Lkotlin\/jvm\/functions\/Function3\<\-Ljava\/lang\/Integer;\-TR;\-Ljava\/lang\/Character;+TR;\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_29;
Node_29 -> Node_16;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_24;
Node_28 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_20 -> Node_21;
}

