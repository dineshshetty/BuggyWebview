digraph "CFG forkotlin.text.StringsKt___StringsKt.mapIndexedNotNullTo(Ljava\/lang\/CharSequence;Ljava\/util\/Collection;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/Collection;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r11, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r12, \"destination\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r13, \"transform\")\lr3 = 0\lr4 = 0\l}"];
Node_17 [shape=record,label="{17\:\ 0x0014|LOOP_START\lLOOP:0: B:17:0x0014\-\>B:22:0x0034\lPHI: r3 r4 \l  PHI: (r3v1 'index$iv' int) = (r3v0 'index$iv' int), (r3v2 'index$iv' int) binds: [B:16:0x0000, B:22:0x0034] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:16:0x0000, B:22:0x0034] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0018|if (r4 \>= r11.length()) goto L10\l}"];
Node_19 [shape=record,label="{19\:\ 0x001a|char r5 = r11.charAt(r4)\lint r6 = r3 + 1\ljava.lang.Object r9 = r13.invoke(java.lang.Integer.valueOf(r3), java.lang.Character.valueOf(r5))\l}"];
Node_20 [shape=record,label="{20\:\ 0x002e|if (r9 == null) goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x0030|r12.add(r9)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0034|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0034|LOOP_END\lLOOP:0: B:17:0x0014\-\>B:22:0x0034\l|int r4 = r4 + 1\lr3 = r6\l}"];
Node_27 [shape=record,label="{27\:\ 0x0034|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0039|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0039|RETURN\l|return r12\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final C extends java.util.Collection\<? super R\> kotlin.text.StringsKt___StringsKt.mapIndexedNotNullTo((r11v0 '$this$mapIndexedNotNullTo' java.lang.CharSequence A[D('$this$mapIndexedNotNullTo' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'destination' C extends java.util.Collection\<? super R\> A[D('destination' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'transform' kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super java.lang.Character, ? extends R\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:22:0x0034 \-\> B:17:0x0014, CROSS_EDGE: B:20:0x002e \-\> B:22:0x0034\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, C extends java.util.Collection\<? super R\>]\lSIGNATURE: \<R:Ljava\/lang\/Object;C::Ljava\/util\/Collection\<\-TR;\>;\>(Ljava\/lang\/CharSequence;TC;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Integer;\-Ljava\/lang\/Character;+TR;\>;)TC;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_21 -> Node_26;
Node_26 -> Node_22;
Node_22 -> Node_17;
Node_27 -> Node_22;
Node_25 -> Node_24;
Node_24 -> Node_15;
}

