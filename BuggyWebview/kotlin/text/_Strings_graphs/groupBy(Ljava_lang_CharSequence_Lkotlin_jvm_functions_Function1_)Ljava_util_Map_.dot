digraph "CFG forkotlin.text.StringsKt___StringsKt.groupBy(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r12, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r13, \"keySelector\")\ljava.util.Map r1 = new java.util.LinkedHashMap()\lr4 = 0\l}"];
Node_18 [shape=record,label="{18\:\ 0x0015|LOOP_START\lLOOP:0: B:18:0x0015\-\>B:24:0x003e\lPHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:17:0x0000, B:24:0x003e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|if (r4 \>= r12.length()) goto L11\l}"];
Node_20 [shape=record,label="{20\:\ 0x001b|char r5 = r12.charAt(r4)\ljava.lang.Object r6 = r13.invoke(java.lang.Character.valueOf(r5))\ljava.lang.Object r9 = r1.get(r6)\l}"];
Node_21 [shape=record,label="{21\:\ 0x002d|if (r9 != null) goto L9\l}"];
Node_22 [shape=record,label="{22\:\ 0x002f|java.util.List r10 = new java.util.ArrayList()\lr1.put(r6, r10)\l}"];
Node_29 [shape=record,label="{29\:\ 0x003e|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x003e|LOOP_END\lLOOP:0: B:18:0x0015\-\>B:24:0x003e\lPHI: r10 \l  PHI: (r10v1 'answer$iv$iv' java.lang.Object) = (r10v0 'answer$iv$iv' java.lang.Object), (r10v4 'answer$iv$iv' java.util.ArrayList) binds: [B:28:0x003e, B:29:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|java.util.List r7 = (java.util.List) r10\lr7.add(java.lang.Character.valueOf(r5))\lint r4 = r4 + 1\l}"];
Node_23 [shape=record,label="{23\:\ 0x003d|r10 = r9\l}"];
Node_28 [shape=record,label="{28\:\ 0x003e|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x004d|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x004d|RETURN\l|return r1\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, java.util.List\<java.lang.Character\>\> kotlin.text.StringsKt___StringsKt.groupBy((r12v0 '$this$groupBy' java.lang.CharSequence A[D('$this$groupBy' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'keySelector' kotlin.jvm.functions.Function1\<? super java.lang.Character, ? extends K\> A[D('keySelector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x003e \-\> B:18:0x0015, CROSS_EDGE: B:23:0x003d \-\> B:24:0x003e\lINLINE_NOT_NEEDED\lTYPE_VARS: [K]\lSIGNATURE: \<K:Ljava\/lang\/Object;\>(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;+TK;\>;)Ljava\/util\/Map\<TK;Ljava\/util\/List\<Ljava\/lang\/Character;\>;\>;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_29;
Node_29 -> Node_24;
Node_24 -> Node_18;
Node_23 -> Node_28;
Node_28 -> Node_24;
Node_27 -> Node_26;
Node_26 -> Node_16;
}

