digraph "CFG forkotlin.text.StringsKt___StringsKt.reduceIndexedOrNull(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function3;)Ljava\/lang\/Character;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"operation\")\l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|if (r7.length() != 0) goto L14\l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|r1 = true\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|PHI: r1 \l  PHI: (r1v2 boolean) = (r1v1 boolean), (r1v7 boolean) binds: [B:21:0x0015, B:20:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L7\l}"];
Node_23 [shape=record,label="{23\:\ 0x0018|RETURN\l|return null\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|char r1 = r7.charAt(0)\lkotlin.collections.IntIterator r2 = new kotlin.ranges.IntRange(1, kotlin.text.StringsKt.getLastIndex(r7)).iterator()\l}"];
Node_26 [shape=record,label="{26\:\ 0x002b|LOOP_START\lLOOP:0: B:26:0x002b\-\>B:28:0x0031\lPHI: r1 \l  PHI: (r1v4 'accumulator' char) = (r1v3 'accumulator' char), (r1v5 'accumulator' char) binds: [B:25:0x001a, B:28:0x0031] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x002f|if (r2.hasNext() == false) goto L11\l}"];
Node_28 [shape=record,label="{28\:\ 0x0031|LOOP_END\lLOOP:0: B:26:0x002b\-\>B:28:0x0031\l|int r3 = r2.nextInt()\lchar r1 = r8.invoke(java.lang.Integer.valueOf(r3), java.lang.Character.valueOf(r1), java.lang.Character.valueOf(r7.charAt(r3))).charValue()\l}"];
Node_31 [shape=record,label="{31\:\ 0x0050|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0050}"];
Node_30 [shape=record,label="{30\:\ 0x0054|RETURN\l|return java.lang.Character.valueOf(r1)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|r1 = false\l}"];
MethodNode[shape=record,label="{public static final java.lang.Character kotlin.text.StringsKt___StringsKt.reduceIndexedOrNull((r7v0 '$this$reduceIndexedOrNull' java.lang.CharSequence A[D('$this$reduceIndexedOrNull' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'operation' kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super java.lang.Character, ? super java.lang.Character, java.lang.Character\> A[D('operation' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0031 \-\> B:26:0x002b, CROSS_EDGE: B:30:0x0054 \-\> B:17:?, CROSS_EDGE: B:21:0x0015 \-\> B:22:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r2v1, types: [kotlin.collections.IntIterator]\}\lSIGNATURE: (Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function3\<\-Ljava\/lang\/Integer;\-Ljava\/lang\/Character;\-Ljava\/lang\/Character;Ljava\/lang\/Character;\>;)Ljava\/lang\/Character;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_17;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_26;
Node_31 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_17;
Node_21 -> Node_22;
}

