digraph "CFG forkotlin.text.StringsKt___StringsKt.sumOfDouble(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)D" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"selector\")\lr0 = 0.0d\lr2 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x000d|LOOP_START\lLOOP:0: B:11:0x000d\-\>B:13:0x0013\lPHI: r0 r2 \l  PHI: (r0v3 'sum' double) = (r0v2 'sum' double), (r0v4 'sum' double) binds: [B:10:0x0000, B:13:0x0013] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:10:0x0000, B:13:0x0013] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0011|if (r2 \>= r6.length()) goto L5\l}"];
Node_13 [shape=record,label="{13\:\ 0x0013|LOOP_END\lLOOP:0: B:11:0x000d\-\>B:13:0x0013\l|char r3 = r6.charAt(r2)\ldouble r0 = r0 + r7.invoke(java.lang.Character.valueOf(r3)).doubleValue()\lint r2 = r2 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|RETURN\l|return r0\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final double kotlin.text.StringsKt___StringsKt.sumOfDouble((r6v0 '$this$sumOf' java.lang.CharSequence A[D('$this$sumOf' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'selector' kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Double\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x0013 \-\> B:11:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;Ljava\/lang\/Double;\>;)D\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_11;
Node_15 -> Node_14;
Node_14 -> Node_9;
}

