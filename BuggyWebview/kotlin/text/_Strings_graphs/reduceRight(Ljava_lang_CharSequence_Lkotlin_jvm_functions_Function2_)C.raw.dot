digraph "CFG forkotlin.text.StringsKt___StringsKt.reduceRight(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function2;)C" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$reduceRight' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"operation\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('operation' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:int) = (r5 I:java.lang.CharSequence A[D('$this$reduceRight' java.lang.CharSequence)]) type: STATIC call: kotlin.text.StringsKt.getLastIndex(java.lang.CharSequence):int A[MD:(java.lang.CharSequence):int (m)] (LINE:1887)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000f|0x000f: IF  (r1 I:??[int, byte, short, char] A[D('index' int)]) \< (0 ??[int, byte, short, char])  \-\> B:19:0x0034  (LINE:1888)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0011|0x0011: ARITH  (r2 I:int) = (r1 I:int A[D('index' int)]) + (\-1 int)  (LINE:1889)\l0x0013: INVOKE  (r1 I:char) = (r5 I:java.lang.CharSequence A[D('$this$reduceRight' java.lang.CharSequence)]), (r1 I:int A[D('index' int)]) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0017|LOOP_START\lLOOP:0: B:16:0x0017\-\>B:17:0x0019\l|0x0017: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \< (0 ??[int, byte, short, char])  \-\> B:21:0x0033  (LINE:1890)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0019|LOOP_END\lLOOP:0: B:16:0x0017\-\>B:17:0x0019\l|0x0019: ARITH  (r3 I:int) = (r2 I:int A[D('index' int)]) + (\-1 int)  (LINE:1891)\l0x001b: INVOKE  (r2 I:char) = (r5 I:java.lang.CharSequence A[D('$this$reduceRight' java.lang.CharSequence)]), (r2 I:int A[D('index' int)]) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x001f: INVOKE  (r2 I:java.lang.Character) = (r2 I:char) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)]\l0x0023: INVOKE  (r4 I:java.lang.Character) = (r1 I:char A[D('accumulator' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)]\l0x0027: INVOKE  (r2 I:java.lang.Object) = \l  (r6 I:kotlin.jvm.functions.Function2 A[D('operation' kotlin.jvm.functions.Function2)])\l  (r2 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x002b: CHECK_CAST (r2 I:java.lang.Character) = (java.lang.Character) (r2 I:??[OBJECT, ARRAY]) \l0x002d: INVOKE  (r1 I:char A[D('accumulator' char)]) = (r2 I:java.lang.Character) type: VIRTUAL call: java.lang.Character.charValue():char A[MD:():char (c)]\l0x0031: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0033|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0033|RETURN\l|0x0033: RETURN  (r1 I:char A[D('accumulator' char)])  (LINE:1893)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0034|0x0034: NEW_INSTANCE  (r2 I:java.lang.UnsupportedOperationException A[D('index' int)]) =  java.lang.UnsupportedOperationException  (LINE:1888)\l0x0036: CONST_STR  (r3 I:java.lang.String) =  \"Empty char sequence can't be reduced.\" \l0x0038: INVOKE  (r2 I:java.lang.UnsupportedOperationException), (r3 I:java.lang.String) type: DIRECT call: java.lang.UnsupportedOperationException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x003b|0x003b: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final char kotlin.text.StringsKt___StringsKt.reduceRight((r5 I:java.lang.CharSequence A[D('$this$reduceRight' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function2\<? super java.lang.Character, ? super java.lang.Character, java.lang.Character\> A[D('operation' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:17:0x0019 \-\> B:16:0x0017, CROSS_EDGE: B:20:0x003b \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x0013: r1 'index' I\l  0x0013\-0x001b: r2 'index' I\l  0x001b\-0x0033: r3 'index' I\l  0x0033\-0x0034: r2 'index' I\l  0x0017\-0x0034: r1 'accumulator' C\l  0x000b\-0x003b: r0 '$i$f$reduceRight' I\l  0x0034\-0x003b: r1 'index' I\l  \-1 \-0x003b: r5 '$this$reduceRight' Ljava\/lang\/CharSequence;\l  \-1 \-0x003b: r6 'operation' Lkotlin\/jvm\/functions\/Function2;\lSIGNATURE: (Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Character;\-Ljava\/lang\/Character;Ljava\/lang\/Character;\>;)C\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_16;
Node_21 -> Node_18;
Node_18 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
}

