digraph "CFG forkotlin.text.StringsKt___StringsKt.groupBy(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r12 I:java.lang.Object A[D('$this$groupBy' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"keySelector\" \l0x0007: INVOKE  (r13 I:java.lang.Object A[D('keySelector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"valueTransform\" \l0x000c: INVOKE  (r14 I:java.lang.Object A[D('valueTransform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: NEW_INSTANCE  (r1 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap  (LINE:911)\l0x0012: INVOKE  (r1 I:java.util.LinkedHashMap) type: DIRECT call: java.util.LinkedHashMap.\<init\>():void A[MD:():void (c)]\l0x0015: CHECK_CAST (r1 I:java.util.Map) = (java.util.Map) (r1 I:??[OBJECT, ARRAY]) \l0x0017: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('$this$groupBy' java.lang.CharSequence)]) \l0x0018: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2556)\l}"];
Node_18 [shape=record,label="{18\:\ 0x001a|LOOP_START\lLOOP:0: B:18:0x001a\-\>B:24:0x0043\l|0x001a: INVOKE  (r5 I:int) = (r2 I:java.lang.CharSequence A[D('$this$groupByTo$iv' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x001e|0x001e: IF  (r4 I:??[int, byte, short, char]) \>= (r5 I:??[int, byte, short, char])  \-\> B:27:0x0056 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0020|0x0020: INVOKE  (r5 I:char) = (r2 I:java.lang.CharSequence A[D('$this$groupByTo$iv' java.lang.CharSequence)]), (r4 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x0024: INVOKE  (r6 I:java.lang.Character) = (r5 I:char A[D('element$iv' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:2557)\l0x0028: INVOKE  (r6 I:java.lang.Object) = (r13 I:kotlin.jvm.functions.Function1 A[D('keySelector' kotlin.jvm.functions.Function1)]), (r6 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x002c: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('destination$iv' java.util.Map)])  (LINE:2558)\l0x002d: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002e: INVOKE  (r9 I:java.lang.Object) = \l  (r7 I:java.util.Map A[D('$this$getOrPut$iv$iv' java.util.Map)])\l  (r6 I:java.lang.Object A[D('key$iv' java.lang.Object)])\l type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:2559)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0032|0x0032: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value$iv$iv' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0042  (LINE:2560)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0034|0x0034: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2561)\l0x0035: NEW_INSTANCE  (r11 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:2558)\l0x0037: INVOKE  (r11 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x003a: MOVE  (r10 I:??[OBJECT, ARRAY] A[D('$i$a$\-getOrPut\-StringsKt___StringsKt$groupByTo$list$2$iv' int)]) = (r11 I:??[OBJECT, ARRAY]) \l0x003b: CHECK_CAST (r10 I:java.util.List) = (java.util.List) (r10 I:??[OBJECT, ARRAY] A[D('$i$a$\-getOrPut\-StringsKt___StringsKt$groupByTo$list$2$iv' int)]) \l0x003d: INVOKE  \l  (r7 I:java.util.Map A[D('$this$getOrPut$iv$iv' java.util.Map)])\l  (r6 I:java.lang.Object A[D('key$iv' java.lang.Object)])\l  (r10 I:java.lang.Object A[D('answer$iv$iv' java.lang.Object)])\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)] (LINE:2562)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0043|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0043|LOOP_END\lLOOP:0: B:18:0x001a\-\>B:24:0x0043\l|0x0044: MOVE  (r7 I:??[OBJECT, ARRAY] A[D('$this$getOrPut$iv$iv' java.util.Map)]) = (r10 I:??[OBJECT, ARRAY])  (LINE:2558)\l0x0045: CHECK_CAST (r7 I:java.util.List) = (java.util.List) (r7 I:??[OBJECT, ARRAY]) \l0x0047: INVOKE  (r8 I:java.lang.Character) = (r5 I:char A[D('element$iv' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:2566)\l0x004b: INVOKE  (r8 I:java.lang.Object) = (r14 I:kotlin.jvm.functions.Function1 A[D('valueTransform' kotlin.jvm.functions.Function1)]), (r8 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x004f: INVOKE  (r7 I:java.util.List A[D('list$iv' java.util.List)]), (r8 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0052: ARITH  (r4 I:int) = (r4 I:int) + (1 int)  (LINE:2556)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0042|0x0042: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('value$iv$iv' java.lang.Object)])  (LINE:2565)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0043|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0056|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0056|RETURN\l|0x0056: RETURN  (r1 I:java.util.Map\<K, java.util.List\<V\>\> A[D('destination$iv' java.util.Map)])  (LINE:911)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, java.util.List\<V\>\> kotlin.text.StringsKt___StringsKt.groupBy((r12 I:java.lang.CharSequence A[D('$this$groupBy' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:kotlin.jvm.functions.Function1\<? super java.lang.Character, ? extends K\> A[D('keySelector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:kotlin.jvm.functions.Function1\<? super java.lang.Character, ? extends V\> A[D('valueTransform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x0043 \-\> B:18:0x001a, CROSS_EDGE: B:23:0x0042 \-\> B:24:0x0043\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0035\-0x003d: r10 '$i$a$\-getOrPut\-StringsKt___StringsKt$groupByTo$list$2$iv' I\l  0x003d\-0x0041: r10 'answer$iv$iv' Ljava\/lang\/Object;\l  0x002d\-0x0044: r7 '$this$getOrPut$iv$iv' Ljava\/util\/Map;\l  0x002e\-0x0044: r8 '$i$f$getOrPut' I\l  0x0032\-0x0044: r9 'value$iv$iv' Ljava\/lang\/Object;\l  0x002c\-0x0052: r6 'key$iv' Ljava\/lang\/Object;\l  0x0047\-0x0052: r7 'list$iv' Ljava\/util\/List;\l  0x0024\-0x0055: r5 'element$iv' C\l  0x0017\-0x0056: r1 'destination$iv' Ljava\/util\/Map;\l  0x0018\-0x0056: r2 '$this$groupByTo$iv' Ljava\/lang\/CharSequence;\l  0x0019\-0x0056: r3 '$i$f$groupByTo' I\l  0x0010\-0x0056: r0 '$i$f$groupBy' I\l  \-1 \-0x0056: r12 '$this$groupBy' Ljava\/lang\/CharSequence;\l  \-1 \-0x0056: r13 'keySelector' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x0056: r14 'valueTransform' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;+TK;\>;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;+TV;\>;)Ljava\/util\/Map\<TK;Ljava\/util\/List\<TV;\>;\>;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_29;
Node_29 -> Node_24;
Node_24 -> Node_18;
Node_23 -> Node_28;
Node_28 -> Node_24;
Node_27 -> Node_26;
Node_26 -> Node_16;
}

