digraph "CFG forkotlin.text.StringsKt___StringsKt.mapIndexedNotNullTo(Ljava\/lang\/CharSequence;Ljava\/util\/Collection;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/Collection;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r11 I:java.lang.Object A[D('$this$mapIndexedNotNullTo' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r12 I:java.lang.Object A[D('destination' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x000c: INVOKE  (r13 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('$this$mapIndexedNotNullTo' java.lang.CharSequence)])  (LINE:1000)\l0x0011: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2596)\l0x0013: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2597)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0014|LOOP_START\lLOOP:0: B:17:0x0014\-\>B:22:0x0034\l|0x0014: INVOKE  (r5 I:int) = (r1 I:java.lang.CharSequence A[D('$this$forEachIndexed$iv' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0018|0x0018: IF  (r4 I:??[int, byte, short, char]) \>= (r5 I:??[int, byte, short, char])  \-\> B:25:0x0039 \l}"];
Node_19 [shape=record,label="{19\:\ 0x001a|0x001a: INVOKE  (r5 I:char) = (r1 I:java.lang.CharSequence A[D('$this$forEachIndexed$iv' java.lang.CharSequence)]), (r4 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x001e: ARITH  (r6 I:int) = (r3 I:int A[D('index$iv' int)]) + (1 int) \l0x0020: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('item$iv' char)]) \l0x0021: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0022: INVOKE  (r9 I:java.lang.Integer) = (r3 I:int A[D('index' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:1000)\l0x0026: INVOKE  (r10 I:java.lang.Character) = (r7 I:char A[D('element' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)]\l0x002a: INVOKE  (r9 I:java.lang.Object) = \l  (r13 I:kotlin.jvm.functions.Function2 A[D('transform' kotlin.jvm.functions.Function2)])\l  (r9 I:java.lang.Object)\l  (r10 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x002e|0x002e: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0034 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0030|0x0030: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2490)\l0x0031: INVOKE  \l  (r12 I:java.util.Collection A[D('destination' java.util.Collection)])\l  (r9 I:java.lang.Object A[D('it' java.lang.Object)])\l type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:1000)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0034|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0034|LOOP_END\lLOOP:0: B:17:0x0014\-\>B:22:0x0034\l|0x0034: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x0036: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index$iv' int)]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0034|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0039|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0039|RETURN\l|0x0039: RETURN  (r12 I:C extends java.util.Collection\<? super R\> A[D('destination' java.util.Collection)])  (LINE:1001)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final C extends java.util.Collection\<? super R\> kotlin.text.StringsKt___StringsKt.mapIndexedNotNullTo((r11 I:java.lang.CharSequence A[D('$this$mapIndexedNotNullTo' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:C extends java.util.Collection\<? super R\> A[D('destination' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super java.lang.Character, ? extends R\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:22:0x0034 \-\> B:17:0x0014, CROSS_EDGE: B:20:0x002e \-\> B:22:0x0034\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0020: r3 'index$iv' I\l  0x0020\-0x0034: r3 'index' I\l  0x0021\-0x0034: r7 'element' C\l  0x0022\-0x0034: r8 '$i$a$\-forEachIndexed\-StringsKt___StringsKt$mapIndexedNotNullTo$1' I\l  0x0030\-0x0034: r9 'it' Ljava\/lang\/Object;\l  0x0031\-0x0034: r10 '$i$a$\-let\-StringsKt___StringsKt$mapIndexedNotNullTo$1$1' I\l  0x001e\-0x0038: r5 'item$iv' C\l  0x0020\-0x0038: r6 'index$iv' I\l  0x0011\-0x0039: r1 '$this$forEachIndexed$iv' Ljava\/lang\/CharSequence;\l  0x0012\-0x0039: r2 '$i$f$forEachIndexed' I\l  0x0038\-0x0039: r3 'index$iv' I\l  0x0010\-0x0039: r0 '$i$f$mapIndexedNotNullTo' I\l  \-1 \-0x0039: r11 '$this$mapIndexedNotNullTo' Ljava\/lang\/CharSequence;\l  \-1 \-0x0039: r12 'destination' Ljava\/util\/Collection;\l  \-1 \-0x0039: r13 'transform' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [R, C extends java.util.Collection\<? super R\>]\lSIGNATURE: \<R:Ljava\/lang\/Object;C::Ljava\/util\/Collection\<\-TR;\>;\>(Ljava\/lang\/CharSequence;TC;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Integer;\-Ljava\/lang\/Character;+TR;\>;)TC;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_21 -> Node_26;
Node_26 -> Node_22;
Node_22 -> Node_17;
Node_27 -> Node_22;
Node_25 -> Node_24;
Node_24 -> Node_15;
}

