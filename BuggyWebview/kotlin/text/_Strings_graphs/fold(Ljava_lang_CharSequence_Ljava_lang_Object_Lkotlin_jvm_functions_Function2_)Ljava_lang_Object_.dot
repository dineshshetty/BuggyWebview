digraph "CFG forkotlin.text.StringsKt___StringsKt.fold(Ljava\/lang\/CharSequence;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2;)Ljava\/lang\/Object;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"operation\")\lr1 = (R) r6\lr2 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x000d|LOOP_START\lLOOP:0: B:11:0x000d\-\>B:13:0x0013\lPHI: r1 r2 \l  PHI: (r1v1 'accumulator' java.lang.Object) = (r1v0 'accumulator' java.lang.Object), (r1v2 'accumulator' java.lang.Object) binds: [B:10:0x0000, B:13:0x0013] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:10:0x0000, B:13:0x0013] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0011|if (r2 \>= r5.length()) goto L5\l}"];
Node_13 [shape=record,label="{13\:\ 0x0013|LOOP_END\lLOOP:0: B:11:0x000d\-\>B:13:0x0013\l|char r3 = r5.charAt(r2)\ljava.lang.Object r1 = r1\ljava.lang.Object r1 = (R) r7.invoke(r1, java.lang.Character.valueOf(r3))\lint r2 = r2 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0022|RETURN\l|return (R) r1\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final R kotlin.text.StringsKt___StringsKt.fold((r5v0 '$this$fold' java.lang.CharSequence A[D('$this$fold' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 R A[D('initial' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'operation' kotlin.jvm.functions.Function2\<? super R, ? super java.lang.Character, ? extends R\> A[D('operation' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x0013 \-\> B:11:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Ljava\/lang\/CharSequence;TR;Lkotlin\/jvm\/functions\/Function2\<\-TR;\-Ljava\/lang\/Character;+TR;\>;)TR;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r1v5. Raw type applied. Possible types: R, ? super R\}\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_11;
Node_15 -> Node_14;
Node_14 -> Node_9;
}

