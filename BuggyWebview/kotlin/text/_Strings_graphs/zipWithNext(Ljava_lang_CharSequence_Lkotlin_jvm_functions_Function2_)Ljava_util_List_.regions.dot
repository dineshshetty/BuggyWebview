digraph "CFG forkotlin.text.StringsKt___StringsKt.zipWithNext(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
subgraph cluster_Region_421379034 {
label = "R(2:1|(2:(1:4)|(3:6|(1:8)|11)))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"transform\")\lint int r1 = r6.length() \- 1\l}"];
subgraph cluster_Region_1571935130 {
label = "R(2:(1:4)|(3:6|(1:8)|11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_378899801 {
label = "IF [B:15:0x0011] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0011|if (r1 \< 1) goto L3\l}"];
subgraph cluster_Region_166301295 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0017|RETURN\l|return kotlin.collections.CollectionsKt.emptyList()\l}"];
}
}
subgraph cluster_Region_306614519 {
label = "R(3:6|(1:8)|11)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0018|java.util.ArrayList java.util.ArrayList r2 = new java.util.ArrayList(r1)\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_1948744824 {
label = "LOOP:0: (1:8)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x001e|LOOP_START\lLOOP:0: B:19:0x001e\-\>B:20:0x0020\lPHI: r3 \l  PHI: (r3v1 'index' int) = (r3v0 'index' int), (r3v4 'index' int) binds: [B:18:0x0018, B:20:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r1) goto L8\l}"];
subgraph cluster_Region_9488973 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0020|LOOP_END\lLOOP:0: B:19:0x001e\-\>B:20:0x0020\l|r2.add(r7.invoke(java.lang.Character.valueOf(r6.charAt(r3)), java.lang.Character.valueOf(r6.charAt(r3 + 1))))\lr3++\l}"];
}
}
Node_22 [shape=record,label="{22\:\ 0x003f|RETURN\l|return r2\l}"];
}
}
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0013}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x003c|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x003c}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.text.StringsKt___StringsKt.zipWithNext((r6v0 '$this$zipWithNext' java.lang.CharSequence A[D('$this$zipWithNext' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'transform' kotlin.jvm.functions.Function2\<? super java.lang.Character, ? super java.lang.Character, ? extends R\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x0020 \-\> B:19:0x001e, CROSS_EDGE: B:22:0x003f \-\> B:13:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Character;\-Ljava\/lang\/Character;+TR;\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_23[style=dashed];
Node_20 -> Node_19;
Node_22 -> Node_13;
Node_12 -> Node_14;
Node_16 -> Node_17;
Node_23 -> Node_21;
Node_21 -> Node_22;
}

