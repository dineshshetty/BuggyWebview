digraph "CFG forkotlin.text.StringsKt___StringsKt.filter(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/CharSequence;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"predicate\")\ljava.lang.Appendable r1 = new java.lang.StringBuilder()\lr4 = 0\lint r5 = r8.length()\l}"];
Node_16 [shape=record,label="{16\:\ 0x0019|LOOP_START\lLOOP:0: B:16:0x0019\-\>B:20:0x0032\lPHI: r4 \l  PHI: (r4v1 'index$iv' int) = (r4v0 'index$iv' int), (r4v2 'index$iv' int) binds: [B:15:0x0000, B:20:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \>= r5) goto L9\l}"];
Node_17 [shape=record,label="{17\:\ 0x001b|char r6 = r8.charAt(r4)\l}"];
Node_18 [shape=record,label="{18\:\ 0x002d|if (r9.invoke(java.lang.Character.valueOf(r6)).booleanValue() == false) goto L8\l}"];
Node_19 [shape=record,label="{19\:\ 0x002f|r1.append(r6)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0032|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0032|LOOP_END\lLOOP:0: B:16:0x0019\-\>B:20:0x0032\l|int r4 = r4 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0032|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0035|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0035}"];
Node_22 [shape=record,label="{22\:\ 0x0038|RETURN\l|return (java.lang.CharSequence) r1\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.lang.CharSequence kotlin.text.StringsKt___StringsKt.filter((r8v0 '$this$filter' java.lang.CharSequence A[D('$this$filter' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'predicate' kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x0032 \-\> B:16:0x0019, CROSS_EDGE: B:18:0x002d \-\> B:20:0x0032\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;Ljava\/lang\/Boolean;\>;)Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_24;
Node_24 -> Node_20;
Node_20 -> Node_16;
Node_25 -> Node_20;
Node_23 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_14;
}

