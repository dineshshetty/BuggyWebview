digraph "CFG forkotlin.text.StringsKt___StringsKt.toHashSet(Ljava\/lang\/CharSequence;)Ljava\/util\/HashSet;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$toHashSet' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: NEW_INSTANCE  (r0 I:java.util.HashSet) =  java.util.HashSet  (LINE:802)\l0x0007: INVOKE  (r1 I:int) = (r3 I:java.lang.CharSequence A[D('$this$toHashSet' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x000b: CONST  (r2 I:??[int, float, short, byte, char]) = (128(0x80, float:1.8E\-43) ??[int, float, short, byte, char]) \l0x000d: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: kotlin.ranges.RangesKt.coerceAtMost(int, int):int A[MD:(int, int):int (m)]\l0x0011: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: kotlin.collections.MapsKt.mapCapacity(int):int A[MD:(int):int (m)]\l0x0015: INVOKE  (r0 I:java.util.HashSet), (r1 I:int) type: DIRECT call: java.util.HashSet.\<init\>(int):void A[MD:(int):void (c)]\l0x0018: CHECK_CAST (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:??[OBJECT, ARRAY]) \l0x001a: INVOKE  (r0 I:java.util.Collection) = (r3 I:java.lang.CharSequence A[D('$this$toHashSet' java.lang.CharSequence)]), (r0 I:java.util.Collection) type: STATIC call: kotlin.text.StringsKt.toCollection(java.lang.CharSequence, java.util.Collection):java.util.Collection A[MD:\<C extends java.util.Collection\<? super java.lang.Character\>\>:(java.lang.CharSequence, C extends java.util.Collection\<? super java.lang.Character\>):C extends java.util.Collection\<? super java.lang.Character\> (m)]\l0x001e: CHECK_CAST (r0 I:java.util.HashSet) = (java.util.HashSet) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|RETURN\l|0x0020: RETURN  (r0 I:java.util.HashSet\<java.lang.Character\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.HashSet\<java.lang.Character\> kotlin.text.StringsKt___StringsKt.toHashSet((r3 I:java.lang.CharSequence A[D('$this$toHashSet' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0020: r3 '$this$toHashSet' Ljava\/lang\/CharSequence;\lSIGNATURE: (Ljava\/lang\/CharSequence;)Ljava\/util\/HashSet\<Ljava\/lang\/Character;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

