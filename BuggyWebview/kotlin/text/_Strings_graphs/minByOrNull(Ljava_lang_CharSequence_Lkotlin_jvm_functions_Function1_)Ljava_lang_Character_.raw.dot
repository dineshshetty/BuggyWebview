digraph "CFG forkotlin.text.StringsKt___StringsKt.minByOrNull(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Character;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$minByOrNull' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x0007: INVOKE  (r10 I:java.lang.Object A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:int) = (r9 I:java.lang.CharSequence A[D('$this$minByOrNull' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:1517)\l0x000f: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0010: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0015 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0013|0x0013: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0016|0x0016: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x001a \l}"];
Node_33 [shape=record,label="{33\:\ 0x0018|RETURN\l|0x0018: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: RETURN  (r1 I:java.lang.Character) \l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x001a|0x001a: INVOKE  (r1 I:char) = (r9 I:java.lang.CharSequence A[D('$this$minByOrNull' java.lang.CharSequence)]), (r3 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)] (LINE:1518)\l0x001e: INVOKE  (r3 I:int) = (r9 I:java.lang.CharSequence A[D('$this$minByOrNull' java.lang.CharSequence)]) type: STATIC call: kotlin.text.StringsKt.getLastIndex(java.lang.CharSequence):int A[MD:(java.lang.CharSequence):int (m)] (LINE:1519)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0022|0x0022: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lastIndex' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0029  (LINE:1520)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0024|0x0024: INVOKE  (r2 I:java.lang.Character) = (r1 I:char A[D('minElem' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0028|RETURN\l|0x0028: RETURN  (r2 I:java.lang.Character) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0029|0x0029: INVOKE  (r4 I:java.lang.Character) = (r1 I:char A[D('minElem' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:1521)\l0x002d: INVOKE  (r4 I:java.lang.Object) = (r10 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r4 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0031: CHECK_CAST (r4 I:java.lang.Comparable) = (java.lang.Comparable) (r4 I:??[OBJECT, ARRAY]) \l0x0033: NEW_INSTANCE  (r5 I:kotlin.ranges.IntRange) =  kotlin.ranges.IntRange  (LINE:1522)\l0x0035: INVOKE  (r5 I:kotlin.ranges.IntRange), (r2 I:int), (r3 I:int A[D('lastIndex' int)]) type: DIRECT call: kotlin.ranges.IntRange.\<init\>(int, int):void A[MD:(int, int):void (m)]\l0x0038: INVOKE  (r2 I:kotlin.collections.IntIterator) = (r5 I:kotlin.ranges.IntRange) type: VIRTUAL call: kotlin.ranges.IntRange.iterator():kotlin.collections.IntIterator A[MD:():java.util.Iterator\<java.lang.Integer\> (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x003c|LOOP_START\lLOOP:0: B:40:0x003c\-\>B:49:0x003c\l|0x003c: INVOKE  (r5 I:boolean) = (r2 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0040|0x0040: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x005d \l}"];
Node_42 [shape=record,label="{42\:\ 0x0042|0x0042: INVOKE  (r5 I:int) = (r2 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.nextInt():int A[MD:():int (m)]\l0x0046: INVOKE  (r6 I:char) = (r9 I:java.lang.CharSequence A[D('$this$minByOrNull' java.lang.CharSequence)]), (r5 I:int A[D('i' int)]) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)] (LINE:1523)\l0x004a: INVOKE  (r7 I:java.lang.Character) = (r6 I:char A[D('e' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:1524)\l0x004e: INVOKE  (r7 I:java.lang.Object) = (r10 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r7 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0052: CHECK_CAST (r7 I:java.lang.Comparable) = (java.lang.Comparable) (r7 I:??[OBJECT, ARRAY]) \l0x0054: INVOKE  (r8 I:int) = \l  (r4 I:java.lang.Comparable A[D('minValue' java.lang.Comparable)])\l  (r7 I:java.lang.Object A[D('v' java.lang.Comparable)])\l type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)] (LINE:1525)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0058|0x0058: IF  (r8 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:50:0x003c \l}"];
Node_48 [shape=record,label="{48\:\ 0x005a|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x005a|0x005a: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('minElem' char)]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('e' char)])  (LINE:1526)\l0x005b: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('minValue' java.lang.Comparable)]) = (r7 I:??[OBJECT, ARRAY] A[D('v' java.lang.Comparable)])  (LINE:1527)\l}"];
Node_51 [shape=record,label="{51\:\ 0x003c|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x003c|LOOP_END\lSYNTHETIC\lLOOP:0: B:40:0x003c\-\>B:49:0x003c\l}"];
Node_50 [shape=record,label="{50\:\ 0x003c|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x005d|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x005d|0x005d: INVOKE  (r2 I:java.lang.Character) = (r1 I:char A[D('minElem' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:1530)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0061|RETURN\l|0x0061: RETURN  (r2 I:java.lang.Character) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0015|0x0015: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Character kotlin.text.StringsKt___StringsKt.minByOrNull((r9 I:java.lang.CharSequence A[D('$this$minByOrNull' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function1\<? super java.lang.Character, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0028 \-\> B:27:?, BACK_EDGE: B:43:0x0058 \-\> B:40:0x003c, BACK_EDGE: B:44:0x005a \-\> B:40:0x003c, CROSS_EDGE: B:46:0x0061 \-\> B:27:?, CROSS_EDGE: B:31:0x0015 \-\> B:32:0x0016\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0046\-0x005c: r5 'i' I\l  0x004a\-0x005c: r6 'e' C\l  0x0054\-0x005c: r7 'v' Ljava\/lang\/Comparable;\l  0x000b\-0x0061: r0 '$i$f$minByOrNull' I\l  0x001e\-0x0061: r1 'minElem' C\l  0x0022\-0x0061: r3 'lastIndex' I\l  0x0033\-0x0061: r4 'minValue' Ljava\/lang\/Comparable;\l  \-1 \-0x0061: r9 '$this$minByOrNull' Ljava\/lang\/CharSequence;\l  \-1 \-0x0061: r10 'selector' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>]\lSIGNATURE: \<R::Ljava\/lang\/Comparable\<\-TR;\>;\>(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;+TR;\>;)Ljava\/lang\/Character;\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_33 -> Node_27;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_39;
Node_37 -> Node_38;
Node_38 -> Node_27;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_47;
Node_42 -> Node_43;
Node_43 -> Node_48[style=dashed];
Node_43 -> Node_50;
Node_48 -> Node_44;
Node_44 -> Node_51;
Node_51 -> Node_49;
Node_49 -> Node_40;
Node_50 -> Node_49;
Node_47 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_27;
Node_31 -> Node_32;
}

