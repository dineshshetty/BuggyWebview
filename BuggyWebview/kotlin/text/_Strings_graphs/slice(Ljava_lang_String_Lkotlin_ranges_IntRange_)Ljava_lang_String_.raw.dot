digraph "CFG forkotlin.text.StringsKt___StringsKt.slice(Ljava\/lang\/String;Lkotlin\/ranges\/IntRange;)Ljava\/lang\/String;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$slice' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"indices\" \l0x0007: INVOKE  (r2 I:java.lang.Object A[D('indices' kotlin.ranges.IntRange)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:boolean) = (r2 I:kotlin.ranges.IntRange A[D('indices' kotlin.ranges.IntRange)]) type: VIRTUAL call: kotlin.ranges.IntRange.isEmpty():boolean A[MD:():boolean (m)] (LINE:521)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0013 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0010|RETURN\l|0x0010: CONST_STR  (r0 I:java.lang.String) =  \"\" \l0x0012: RETURN  (r0 I:java.lang.String) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0013|0x0013: INVOKE  (r0 I:java.lang.String) = \l  (r1 I:java.lang.String A[D('$this$slice' java.lang.String)])\l  (r2 I:kotlin.ranges.IntRange A[D('indices' kotlin.ranges.IntRange)])\l type: STATIC call: kotlin.text.StringsKt.substring(java.lang.String, kotlin.ranges.IntRange):java.lang.String A[MD:(java.lang.String, kotlin.ranges.IntRange):java.lang.String (m)] (LINE:522)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt___StringsKt.slice((r1 I:java.lang.String A[D('$this$slice' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.ranges.IntRange A[D('indices' kotlin.ranges.IntRange), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0017 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0017: r1 '$this$slice' Ljava\/lang\/String;\l  \-1 \-0x0017: r2 'indices' Lkotlin\/ranges\/IntRange;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

