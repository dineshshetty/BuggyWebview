digraph "CFG forkotlin.text.StringsKt___StringsKt.getOrElse(Ljava\/lang\/CharSequence;ILkotlin\/jvm\/functions\/Function1;)C" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$getOrElse' java.lang.CharSequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"defaultValue\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('defaultValue' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|0x000a: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \< (0 ??[int, byte, short, char])  \-\> B:17:0x0017  (LINE:135)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|0x000c: INVOKE  (r0 I:int) = (r1 I:java.lang.CharSequence A[D('$this$getOrElse' java.lang.CharSequence)]) type: STATIC call: kotlin.text.StringsKt.getLastIndex(java.lang.CharSequence):int A[MD:(java.lang.CharSequence):int (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0010|0x0010: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \> (r0 I:??[int, byte, short, char])  \-\> B:17:0x0017 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|0x0012: INVOKE  (r0 I:char) = (r1 I:java.lang.CharSequence A[D('$this$getOrElse' java.lang.CharSequence)]), (r2 I:int A[D('index' int)]) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0025: RETURN  (r0 I:char) A[SYNTHETIC]\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|0x0017: INVOKE  (r0 I:java.lang.Integer) = (r2 I:int A[D('index' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x001b: INVOKE  (r0 I:java.lang.Object) = (r3 I:kotlin.jvm.functions.Function1 A[D('defaultValue' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x001f: CHECK_CAST (r0 I:java.lang.Character) = (java.lang.Character) (r0 I:??[OBJECT, ARRAY]) \l0x0021: INVOKE  (r0 I:char) = (r0 I:java.lang.Character) type: VIRTUAL call: java.lang.Character.charValue():char A[MD:():char (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0025|RETURN\lORIG_RETURN\l|0x0025: RETURN  (r0 I:char) \l}"];
MethodNode[shape=record,label="{private static final char kotlin.text.StringsKt___StringsKt.getOrElse((r1 I:java.lang.CharSequence A[D('$this$getOrElse' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.jvm.functions.Function1\<? super java.lang.Integer, java.lang.Character\> A[D('defaultValue' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0017 \-\> B:18:0x0025, CROSS_EDGE: B:13:0x000a \-\> B:17:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0025: r1 '$this$getOrElse' Ljava\/lang\/CharSequence;\l  \-1 \-0x0025: r2 'index' I\l  \-1 \-0x0025: r3 'defaultValue' Lkotlin\/jvm\/functions\/Function1;\lSIGNATURE: (Ljava\/lang\/CharSequence;ILkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Integer;Ljava\/lang\/Character;\>;)C\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_19;
Node_19 -> Node_11;
Node_17 -> Node_18;
Node_18 -> Node_11;
}

