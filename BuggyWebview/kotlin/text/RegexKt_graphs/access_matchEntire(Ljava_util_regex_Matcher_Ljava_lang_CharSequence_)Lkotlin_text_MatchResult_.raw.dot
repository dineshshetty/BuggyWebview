digraph "CFG forkotlin.text.RegexKt.access$matchEntire(Ljava\/util\/regex\/Matcher;Ljava\/lang\/CharSequence;)Lkotlin\/text\/MatchResult;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlin.text.MatchResult) = \l  (r1 I:java.util.regex.Matcher A[D('$receiver' java.util.regex.Matcher)])\l  (r2 I:java.lang.CharSequence A[D('input' java.lang.CharSequence)])\l type: STATIC call: kotlin.text.RegexKt.matchEntire(java.util.regex.Matcher, java.lang.CharSequence):kotlin.text.MatchResult A[MD:(java.util.regex.Matcher, java.lang.CharSequence):kotlin.text.MatchResult (m)] (LINE:1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:kotlin.text.MatchResult) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlin.text.MatchResult kotlin.text.RegexKt.access$matchEntire((r1 I:java.util.regex.Matcher A[D('$receiver' java.util.regex.Matcher), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.CharSequence A[D('input' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  \l  (r1 I:java.util.regex.Matcher A[D('$receiver' java.util.regex.Matcher)])\l  (r2 I:java.lang.CharSequence A[D('input' java.lang.CharSequence)])\l type: STATIC call: kotlin.text.RegexKt.matchEntire(java.util.regex.Matcher, java.lang.CharSequence):kotlin.text.MatchResult\lDebug Info:\l  \-1 \-0x0004: r1 '$receiver' Ljava\/util\/regex\/Matcher;\l  \-1 \-0x0004: r2 'input' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

