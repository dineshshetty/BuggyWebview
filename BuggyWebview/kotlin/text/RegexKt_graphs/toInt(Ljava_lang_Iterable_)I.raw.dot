digraph "CFG forkotlin.text.RegexKt.toInt(Ljava\/lang\/Iterable;)I" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:19)\l0x0001: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('$this$toInt' java.lang.Iterable)]) \l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('initial$iv' int)])  (LINE:399)\l0x0004: INVOKE  (r4 I:java.util.Iterator) = (r1 I:java.lang.Iterable A[D('$this$fold$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:400)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|LOOP_START\lLOOP:0: B:12:0x0008\-\>B:14:0x000e\l|0x0008: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x000c|0x000c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x001f \l}"];
Node_14 [shape=record,label="{14\:\ 0x000e|LOOP_END\lLOOP:0: B:12:0x0008\-\>B:14:0x000e\l|0x000e: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0012: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) \l0x0013: CHECK_CAST (r6 I:kotlin.text.FlagEnum) = (kotlin.text.FlagEnum) (r6 I:??[OBJECT, ARRAY]) \l0x0015: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('accumulator$iv' int)]) \l0x0016: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: INVOKE  (r9 I:int) = (r6 I:kotlin.text.FlagEnum A[D('option' kotlin.text.FlagEnum)]) type: INTERFACE call: kotlin.text.FlagEnum.getValue():int A[MD:():int (m)] (LINE:19)\l0x001b: ARITH  (r3 I:??[int, boolean] A[D('accumulator$iv' int)]) = (r7 I:??[int, boolean, short, byte, char] A[D('value' int)]) \| (r9 I:??[int, boolean, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x001f|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x001f|RETURN\l|0x001f: RETURN  (r3 I:int A[D('accumulator$iv' int)])  (LINE:19)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final int kotlin.text.RegexKt.toInt((r10 I:java.lang.Iterable\<? extends kotlin.text.FlagEnum\> A[D('$this$toInt' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x000e \-\> B:12:0x0008\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x001d: r5 'element$iv' Ljava\/lang\/Object;\l  0x0015\-0x001d: r6 'option' Lkotlin\/text\/FlagEnum;\l  0x0016\-0x001d: r7 'value' I\l  0x0017\-0x001d: r8 '$i$a$\-fold\-RegexKt$toInt$1' I\l  0x0001\-0x001f: r0 'initial$iv' I\l  0x0002\-0x001f: r1 '$this$fold$iv' Ljava\/lang\/Iterable;\l  0x0003\-0x001f: r2 '$i$f$fold' I\l  0x0004\-0x001f: r3 'accumulator$iv' I\l  \-1 \-0x001f: r10 '$this$toInt' Ljava\/lang\/Iterable;\lSIGNATURE: (Ljava\/lang\/Iterable\<+Lkotlin\/text\/FlagEnum;\>;)I\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_12;
Node_17 -> Node_16;
Node_16 -> Node_10;
}

