digraph "CFG forkotlin.text.RegexKt.access$range(Ljava\/util\/regex\/MatchResult;I)Lkotlin\/ranges\/IntRange;" {
subgraph cluster_Region_948148214 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|return range(r1, r2)\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlin.ranges.IntRange kotlin.text.RegexKt.access$range((r1v0 '$receiver' java.util.regex.MatchResult A[D('$receiver' java.util.regex.MatchResult), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'groupIndex' int A[D('groupIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  (r1 I:java.util.regex.MatchResult A[D('$receiver' java.util.regex.MatchResult)]), (r2 I:int A[D('groupIndex' int)]) type: STATIC call: kotlin.text.RegexKt.range(java.util.regex.MatchResult, int):kotlin.ranges.IntRange\l}"];
MethodNode -> Node_4;Node_7 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
}

