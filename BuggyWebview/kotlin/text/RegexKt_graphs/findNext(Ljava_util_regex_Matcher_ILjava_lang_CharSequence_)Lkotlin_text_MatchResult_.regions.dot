digraph "CFG forkotlin.text.RegexKt.findNext(Ljava\/util\/regex\/Matcher;ILjava\/lang\/CharSequence;)Lkotlin\/text\/MatchResult;" {
subgraph cluster_Region_693131558 {
label = "R(1:(2:(1:6)|(1:3)))";
node [shape=record,color=blue];
subgraph cluster_Region_1198086446 {
label = "R(2:(1:6)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1676757522 {
label = "IF [B:11:0x0004] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0004|if (r1.find(r2) == true) goto L5\l}"];
subgraph cluster_Region_1759296245 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x000f|RETURN\lORIG_RETURN\l|return new kotlin.text.MatcherMatchResult(r1, r3)\l}"];
}
}
subgraph cluster_Region_1131300769 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0006|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0008}"];
MethodNode[shape=record,label="{public static final kotlin.text.MatchResult kotlin.text.RegexKt.findNext((r1v0 '$this$findNext' java.util.regex.Matcher A[D('$this$findNext' java.util.regex.Matcher), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'from' int A[D('from' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'input' java.lang.CharSequence A[D('input' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0008 \-\> B:14:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_14 -> Node_9;
Node_12 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_13 -> Node_14;
}

