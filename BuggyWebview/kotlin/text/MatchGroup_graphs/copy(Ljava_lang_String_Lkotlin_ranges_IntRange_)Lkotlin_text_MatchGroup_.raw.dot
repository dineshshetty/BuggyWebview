digraph "CFG forkotlin.text.MatchGroup.copy(Ljava\/lang\/String;Lkotlin\/ranges\/IntRange;)Lkotlin\/text\/MatchGroup;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"value\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"range\" \l0x0007: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: NEW_INSTANCE  (r0 I:kotlin.text.MatchGroup) =  kotlin.text.MatchGroup \l0x000c: INVOKE  (r0 I:kotlin.text.MatchGroup), (r2 I:java.lang.String), (r3 I:kotlin.ranges.IntRange) type: DIRECT call: kotlin.text.MatchGroup.\<init\>(java.lang.String, kotlin.ranges.IntRange):void A[MD:(java.lang.String, kotlin.ranges.IntRange):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:kotlin.text.MatchGroup) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlin.text.MatchGroup kotlin.text.MatchGroup.copy((r1 'this' I:kotlin.text.MatchGroup A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.ranges.IntRange A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

