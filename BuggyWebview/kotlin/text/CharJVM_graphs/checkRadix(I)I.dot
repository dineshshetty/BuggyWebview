digraph "CFG forkotlin.text.CharsKt__CharJVMKt.checkRadix(I)I" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000}"];
Node_10 [shape=record,label="{10\:\ 0x000c|if (new kotlin.ranges.IntRange(2, 36).contains(r5) == false) goto L5\l}"];
Node_11 [shape=record,label="{11\:\ 0x000e|RETURN\l|return r5\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x000f|java.lang.StringBuilder r3 = new java.lang.StringBuilder()\lr3.append(\"radix \")\lr3.append(r5)\lr3.append(\" was not in valid range \")\lr3.append(new kotlin.ranges.IntRange(2, 36))\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|throw new java.lang.IllegalArgumentException(r3.toString())\l}"];
MethodNode[shape=record,label="{public static final int kotlin.text.CharsKt__CharJVMKt.checkRadix((r5v0 'radix' int A[D('radix' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0032 \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

