digraph "CFG forkotlin.text.CharsKt__CharJVMKt.titlecase(CLjava\/util\/Locale;)Ljava\/lang\/String;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"locale\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('locale' java.util.Locale)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:java.lang.String) = (r5 I:char A[D('$this$titlecase' char)]), (r6 I:java.util.Locale A[D('locale' java.util.Locale)]) type: STATIC call: kotlin.text.CharsKt.uppercase(char, java.util.Locale):java.lang.String A[MD:(char, java.util.Locale):java.lang.String (m)] (LINE:271)\l0x0009: INVOKE  (r1 I:int) = (r0 I:java.lang.String A[D('localizedUppercase' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)] (LINE:272)\l0x000d: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000e: CONST_STR  (r3 I:java.lang.String) =  \"null cannot be cast to non\-null type java.lang.String\" \l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|0x0010: IF  (r1 I:??[int, byte, short, char]) \<= (r2 I:??[int, byte, short, char])  \-\> B:24:0x0047 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|0x0012: CONST  (r1 I:??[int, float, short, byte, char]) = (329(0x149, float:4.61E\-43) ??[int, float, short, byte, char])  (LINE:273)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|0x0014: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$titlecase' char)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0018 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|0x0016: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('localizedUppercase' java.lang.String)]) \l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x0046: RETURN  (r1 I:java.lang.String) A[SYNTHETIC]\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|0x0018: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: INVOKE  (r1 I:char) = (r0 I:java.lang.String A[D('localizedUppercase' java.lang.String)]), (r1 I:int) type: VIRTUAL call: java.lang.String.charAt(int):char A[MD:(int):char (c)]\l0x001d: INVOKE  (r0 I:java.lang.Object A[D('localizedUppercase' java.lang.String)]), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0020: INVOKE  (r2 I:java.lang.String) = (r0 I:java.lang.String A[D('localizedUppercase' java.lang.String)]), (r2 I:int) type: VIRTUAL call: java.lang.String.substring(int):java.lang.String A[MD:(int):java.lang.String (c)]\l0x0024: CONST_STR  (r4 I:java.lang.String) =  \"this as java.lang.String).substring(startIndex)\" \l0x0026: INVOKE  (r2 I:java.lang.Object), (r4 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0029: INVOKE  (r2 I:java.lang.Object), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x002c: SGET  (r3 I:java.util.Locale) =  java.util.Locale.ROOT java.util.Locale \l0x002e: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String), (r3 I:java.util.Locale) type: VIRTUAL call: java.lang.String.toLowerCase(java.util.Locale):java.lang.String A[MD:(java.util.Locale):java.lang.String (c)]\l0x0032: CONST_STR  (r3 I:java.lang.String) =  \"this as java.lang.String).toLowerCase(Locale.ROOT)\" \l0x0034: INVOKE  (r2 I:java.lang.Object), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0037: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0039: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x003c: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x003f: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0042: INVOKE  (r1 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0046|RETURN\lORIG_RETURN\l|0x0046: RETURN  (r1 I:java.lang.String) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0047|0x0047: INVOKE  (r1 I:java.lang.String) = (r5 I:char A[D('$this$titlecase' char)]) type: STATIC call: java.lang.String.valueOf(char):java.lang.String A[MD:(char):java.lang.String (c)] (LINE:275)\l0x004b: INVOKE  (r1 I:java.lang.Object), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x004e: SGET  (r2 I:java.util.Locale) =  java.util.Locale.ROOT java.util.Locale \l0x0050: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.String), (r2 I:java.util.Locale) type: VIRTUAL call: java.lang.String.toUpperCase(java.util.Locale):java.lang.String A[MD:(java.util.Locale):java.lang.String (c)]\l0x0054: CONST_STR  (r2 I:java.lang.String) =  \"this as java.lang.String).toUpperCase(Locale.ROOT)\" \l0x0056: INVOKE  (r1 I:java.lang.Object), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0059: INVOKE  (r1 I:boolean) = (r0 I:java.lang.Object A[D('localizedUppercase' java.lang.String)]), (r1 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x005d|0x005d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0060 \l}"];
Node_26 [shape=record,label="{26\:\ 0x005f|RETURN\l|0x005f: RETURN  (r0 I:java.lang.String A[D('localizedUppercase' java.lang.String)])  (LINE:276)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0060|0x0060: INVOKE  (r1 I:char) = (r5 I:char A[D('$this$titlecase' char)]) type: STATIC call: java.lang.Character.toTitleCase(char):char A[MD:(char):char (c)] (LINE:278)\l0x0064: INVOKE  (r1 I:java.lang.String) = (r1 I:char) type: STATIC call: java.lang.String.valueOf(char):java.lang.String A[MD:(char):java.lang.String (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0068|RETURN\l|0x0068: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.CharsKt__CharJVMKt.titlecase((r5 I:char A[D('$this$titlecase' char), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.Locale A[D('locale' java.util.Locale), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0018 \-\> B:23:0x0046, CROSS_EDGE: B:26:0x005f \-\> B:16:?, CROSS_EDGE: B:28:0x0068 \-\> B:16:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0068: r0 'localizedUppercase' Ljava\/lang\/String;\l  \-1 \-0x0068: r5 '$this$titlecase' C\l  \-1 \-0x0068: r6 'locale' Ljava\/util\/Locale;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_29;
Node_29 -> Node_16;
Node_22 -> Node_23;
Node_23 -> Node_16;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_16;
Node_27 -> Node_28;
Node_28 -> Node_16;
}

