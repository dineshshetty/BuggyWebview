digraph "CFG forkotlin.text.StringsKt__StringBuilderJVMKt.appendln(Ljava\/lang\/StringBuilder;Ljava\/lang\/String;)Ljava\/lang\/StringBuilder;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"\<this\>\")\lr1.append(r2)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, \"append(value)\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|return kotlin.text.StringsKt.appendln(r1)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.lang.StringBuilder kotlin.text.StringsKt__StringBuilderJVMKt.appendln((r1v0 '$this$appendln' java.lang.StringBuilder A[D('$this$appendln' java.lang.StringBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'value' java.lang.String A[D('value' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>WARNING:Lkotlin\/DeprecationLevel;\}, message=Use appendLine instead. Note that the new method always appends the line feed character 'n' regardless of the system line separator., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=appendLine(value), imports=[[]]\}\}\}\}\}\}\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

