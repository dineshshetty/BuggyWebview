digraph "CFG forkotlin.text.StringsKt__StringBuilderJVMKt.insertRange(Ljava\/lang\/StringBuilder;I[CII)Ljava\/lang\/StringBuilder;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$insertRange' java.lang.StringBuilder)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"value\" \l0x0007: INVOKE  (r4 I:java.lang.Object A[D('value' char[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: ARITH  (r0 I:int) = (r6 I:int A[D('endIndex' int)]) \- (r5 I:int A[D('startIndex' int)])  (LINE:137)\l0x000c: INVOKE  (r0 I:java.lang.StringBuilder) = \l  (r2 I:java.lang.StringBuilder A[D('$this$insertRange' java.lang.StringBuilder)])\l  (r3 I:int A[D('index' int)])\l  (r4 I:char[] A[D('value' char[])])\l  (r5 I:int A[D('startIndex' int)])\l  (r0 I:int)\l type: VIRTUAL call: java.lang.StringBuilder.insert(int, char[], int, int):java.lang.StringBuilder A[MD:(int, char[], int, int):java.lang.StringBuilder (c)]\l0x0010: CONST_STR  (r1 I:java.lang.String) =  \"this.insert(index, valueâ€¦x, endIndex \- startIndex)\" \l0x0012: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|RETURN\l|0x0015: RETURN  (r0 I:java.lang.StringBuilder) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.lang.StringBuilder kotlin.text.StringsKt__StringBuilderJVMKt.insertRange((r2 I:java.lang.StringBuilder A[D('$this$insertRange' java.lang.StringBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:char[] A[D('value' char[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('startIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('endIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0015: r2 '$this$insertRange' Ljava\/lang\/StringBuilder;\l  \-1 \-0x0015: r3 'index' I\l  \-1 \-0x0015: r4 'value' [C\l  \-1 \-0x0015: r5 'startIndex' I\l  \-1 \-0x0015: r6 'endIndex' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

