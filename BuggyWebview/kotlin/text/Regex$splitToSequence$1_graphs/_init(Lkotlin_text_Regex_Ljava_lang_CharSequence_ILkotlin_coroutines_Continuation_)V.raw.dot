digraph "CFG forkotlin.text.Regex$splitToSequence$1.\<init\>(Lkotlin\/text\/Regex;Ljava\/lang\/CharSequence;ILkotlin\/coroutines\/Continuation;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IPUT  (r2 I:kotlin.text.Regex), (r1 I:kotlin.text.Regex$splitToSequence$1) kotlin.text.Regex$splitToSequence$1.this$0 kotlin.text.Regex \l0x0002: IPUT  (r3 I:java.lang.CharSequence), (r1 I:kotlin.text.Regex$splitToSequence$1) kotlin.text.Regex$splitToSequence$1.$input java.lang.CharSequence \l0x0004: IPUT  (r4 I:int), (r1 I:kotlin.text.Regex$splitToSequence$1) kotlin.text.Regex$splitToSequence$1.$limit int \l0x0006: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0007: INVOKE  (r1 I:kotlin.coroutines.jvm.internal.RestrictedSuspendLambda), (r0 I:int), (r5 I:kotlin.coroutines.Continuation) type: DIRECT call: kotlin.coroutines.jvm.internal.RestrictedSuspendLambda.\<init\>(int, kotlin.coroutines.Continuation):void A[MD:(int, kotlin.coroutines.Continuation\<java.lang.Object\>):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|0x000a: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void kotlin.text.Regex$splitToSequence$1.\<init\>((r1 'this' I:kotlin.text.Regex$splitToSequence$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.text.Regex A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.coroutines.Continuation\<? super kotlin.text.Regex$splitToSequence$1\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | SIGNATURE: (Lkotlin\/text\/Regex;Ljava\/lang\/CharSequence;ILkotlin\/coroutines\/Continuation\<\-Lkotlin\/text\/Regex$splitToSequence$1;\>;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

