digraph "CFG forkotlin.text._OneToManyTitlecaseMappingsKt.titlecaseImpl(C)Ljava\/lang\/String;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.String) = (r5 I:char A[D('$this$titlecaseImpl' char)]) type: STATIC call: java.lang.String.valueOf(char):java.lang.String A[MD:(char):java.lang.String (c)] (LINE:15)\l0x0004: CONST_STR  (r1 I:java.lang.String) =  \"null cannot be cast to non\-null type java.lang.String\" \l0x0006: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0009: SGET  (r2 I:java.util.Locale) =  java.util.Locale.ROOT java.util.Locale \l0x000b: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String), (r2 I:java.util.Locale) type: VIRTUAL call: java.lang.String.toUpperCase(java.util.Locale):java.lang.String A[MD:(java.util.Locale):java.lang.String (c)]\l0x000f: CONST_STR  (r2 I:java.lang.String) =  \"this as java.lang.String).toUpperCase(Locale.ROOT)\" \l0x0011: INVOKE  (r0 I:java.lang.Object), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0014: INVOKE  (r2 I:int) = (r0 I:java.lang.String A[D('uppercase' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)] (LINE:16)\l0x0018: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0019|0x0019: IF  (r2 I:??[int, byte, short, char]) \<= (r3 I:??[int, byte, short, char])  \-\> B:21:0x0050 \l}"];
Node_16 [shape=record,label="{16\:\ 0x001b|0x001b: CONST  (r2 I:??[int, float, short, byte, char]) = (329(0x149, float:4.61E\-43) ??[int, float, short, byte, char])  (LINE:17)\l}"];
Node_17 [shape=record,label="{17\:\ 0x001d|0x001d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$titlecaseImpl' char)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0021 \l}"];
Node_18 [shape=record,label="{18\:\ 0x001f|0x001f: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('uppercase' java.lang.String)]) \l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x004f: RETURN  (r1 I:java.lang.String) A[SYNTHETIC]\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0021|0x0021: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0022: INVOKE  (r2 I:char) = (r0 I:java.lang.String A[D('uppercase' java.lang.String)]), (r2 I:int) type: VIRTUAL call: java.lang.String.charAt(int):char A[MD:(int):char (c)]\l0x0026: INVOKE  (r0 I:java.lang.Object A[D('uppercase' java.lang.String)]), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0029: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.String A[D('uppercase' java.lang.String)]), (r3 I:int) type: VIRTUAL call: java.lang.String.substring(int):java.lang.String A[MD:(int):java.lang.String (c)]\l0x002d: CONST_STR  (r4 I:java.lang.String) =  \"this as java.lang.String).substring(startIndex)\" \l0x002f: INVOKE  (r3 I:java.lang.Object), (r4 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0032: INVOKE  (r3 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0035: SGET  (r1 I:java.util.Locale) =  java.util.Locale.ROOT java.util.Locale \l0x0037: INVOKE  (r1 I:java.lang.String) = (r3 I:java.lang.String), (r1 I:java.util.Locale) type: VIRTUAL call: java.lang.String.toLowerCase(java.util.Locale):java.lang.String A[MD:(java.util.Locale):java.lang.String (c)]\l0x003b: CONST_STR  (r3 I:java.lang.String) =  \"this as java.lang.String).toLowerCase(Locale.ROOT)\" \l0x003d: INVOKE  (r1 I:java.lang.Object), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0040: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0042: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0045: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0048: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004b: INVOKE  (r1 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x004f|RETURN\lORIG_RETURN\l|0x004f: RETURN  (r1 I:java.lang.String) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0050|0x0050: INVOKE  (r1 I:char) = (r5 I:char A[D('$this$titlecaseImpl' char)]) type: STATIC call: java.lang.Character.toTitleCase(char):char A[MD:(char):char (c)] (LINE:19)\l0x0054: INVOKE  (r1 I:java.lang.String) = (r1 I:char) type: STATIC call: java.lang.String.valueOf(char):java.lang.String A[MD:(char):java.lang.String (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0058|RETURN\l|0x0058: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text._OneToManyTitlecaseMappingsKt.titlecaseImpl((r5 I:char A[D('$this$titlecaseImpl' char), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0021 \-\> B:20:0x004f, CROSS_EDGE: B:22:0x0058 \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x0058: r0 'uppercase' Ljava\/lang\/String;\l  \-1 \-0x0058: r5 '$this$titlecaseImpl' C\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_23;
Node_23 -> Node_13;
Node_19 -> Node_20;
Node_20 -> Node_13;
Node_21 -> Node_22;
Node_22 -> Node_13;
}

