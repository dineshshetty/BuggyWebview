digraph "CFG forkotlin.text.StringsKt__StringNumberConversionsJVMKt.toBigIntegerOrNull(Ljava\/lang\/String;I)Ljava\/math\/BigInteger;" {
subgraph cluster_Region_1002515334 {
label = "R(3:1|2|16)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"\<this\>\")\lkotlin.text.CharsKt.checkRadix(r6)\lint int r0 = r5.length()\l}"];
subgraph cluster_SwitchRegion_1476210249 {
label = "Switch: 3
 case 0 -> R(1:20)
 case 1 -> R(2:(1:19)|1)
 case default -> R(4:4|6|(1:(2:(1:12)|(1:10)))|1)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x000e|switch(r0) \{\l    case 0: goto L20;\l    case 1: goto L17;\l    default: goto L3;\l\}\l}"];
subgraph cluster_Region_1655725364 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0026|RETURN\l|return null\l}"];
}
subgraph cluster_Region_2025791750 {
label = "R(2:(1:19)|1)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1830438607 {
label = "IF [B:29:0x0023] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0023|if (kotlin.text.CharsKt.digitOf(r5.charAt(0), r6) \< 0) goto L19\l}"];
subgraph cluster_Region_1996435359 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0025|RETURN\l|return null\l}"];
}
}
Node_InsnContainer_382113161 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_376822184 {
label = "R(4:4|6|(1:(2:(1:12)|(1:10)))|1)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0017|int r1 = r5.charAt(0) == '\-' ? 1 : 0\l}"];
Node_32 [shape=record,label="{32\:\ 0x0027|PHI: r1 \l  PHI: (r1v4 'start' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|int r3 = r1\l}"];
subgraph cluster_LoopRegion_1970091473 {
label = "LOOP:0: (1:(2:(1:12)|(1:10)))";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0028|LOOP_START\lLOOP:0: B:33:0x0028\-\>B:37:0x0035\lPHI: r3 \l  PHI: (r3v2 'index' int) = (r3v1 'index' int), (r3v3 'index' int) binds: [B:32:0x0027, B:37:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r0) goto L8\l}"];
subgraph cluster_Region_401613126 {
label = "R(1:(2:(1:12)|(1:10)))";
node [shape=record,color=blue];
subgraph cluster_Region_685977929 {
label = "R(2:(1:12)|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_443265103 {
label = "IF [B:35:0x0032] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0032|if (kotlin.text.CharsKt.digitOf(r5.charAt(r3), r6) \< 0) goto L11\l}"];
subgraph cluster_Region_661610525 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0034|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_618290683 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0035|LOOP_END\lLOOP:0: B:33:0x0028\-\>B:37:0x0035\l|r3++\l}"];
}
}
}
}
Node_InsnContainer_94884772 [shape=record,label="{|break\l}"];
}
}
Node_39 [shape=record,label="{39\:\ 0x0041|RETURN\l|return new java.math.BigInteger(r5, kotlin.text.CharsKt.checkRadix(r6))\l}"];
}
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0011}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0019}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x002a}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0034|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0038|SYNTHETIC\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0038}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x001b}"];
MethodNode[shape=record,label="{public static final java.math.BigInteger kotlin.text.StringsKt__StringNumberConversionsJVMKt.toBigIntegerOrNull((r5v0 '$this$toBigIntegerOrNull' java.lang.String A[D('$this$toBigIntegerOrNull' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'radix' int A[D('radix' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:37:0x0035 \-\> B:33:0x0028, CROSS_EDGE: B:39:0x0041 \-\> B:22:?, CROSS_EDGE: B:26:0x0017 \-\> B:32:0x0027, CROSS_EDGE: B:30:0x0025 \-\> B:22:?, CROSS_EDGE: B:29:0x0023 \-\> B:38:0x0038, CROSS_EDGE: B:31:0x0026 \-\> B:22:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_21;Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_28;
Node_24 -> Node_31;
Node_31 -> Node_22;
Node_29 -> Node_30;
Node_29 -> Node_38[style=dashed];
Node_30 -> Node_22;
Node_26 -> Node_27;
Node_26 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_41[style=dashed];
Node_35 -> Node_37[style=dashed];
Node_35 -> Node_40;
Node_36 -> Node_22;
Node_37 -> Node_33;
Node_39 -> Node_22;
Node_21 -> Node_23;
Node_25 -> Node_26;
Node_27 -> Node_32;
Node_34 -> Node_35;
Node_40 -> Node_36;
Node_41 -> Node_38;
Node_38 -> Node_39;
Node_28 -> Node_29;
}

