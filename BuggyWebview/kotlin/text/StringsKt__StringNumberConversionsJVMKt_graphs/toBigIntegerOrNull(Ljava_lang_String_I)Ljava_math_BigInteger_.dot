digraph "CFG forkotlin.text.StringsKt__StringNumberConversionsJVMKt.toBigIntegerOrNull(Ljava\/lang\/String;I)Ljava\/math\/BigInteger;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"\<this\>\")\lkotlin.text.CharsKt.checkRadix(r6)\lint r0 = r5.length()\lr1 = 0\l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|switch(r0) \{\l    case 0: goto L20;\l    case 1: goto L17;\l    default: goto L3;\l\}\l}"];
Node_25 [shape=record,label="{25\:\ 0x0011}"];
Node_26 [shape=record,label="{26\:\ 0x0017|if (r5.charAt(0) != '\-') goto L6\l}"];
Node_27 [shape=record,label="{27\:\ 0x0019|r1 = 1\l}"];
Node_32 [shape=record,label="{32\:\ 0x0027|PHI: r1 \l  PHI: (r1v4 'start' int) = (r1v0 'start' int), (r1v5 'start' int) binds: [B:26:0x0017, B:27:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|r3 = r1\l}"];
Node_33 [shape=record,label="{33\:\ 0x0028|LOOP_START\lLOOP:0: B:33:0x0028\-\>B:37:0x0035\lPHI: r3 \l  PHI: (r3v2 'index' int) = (r3v1 'index' int), (r3v3 'index' int) binds: [B:32:0x0027, B:37:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \>= r0) goto L14\l}"];
Node_34 [shape=record,label="{34\:\ 0x002a}"];
Node_35 [shape=record,label="{35\:\ 0x0032|if (kotlin.text.CharsKt.digitOf(r5.charAt(r3), r6) \>= 0) goto L10\l}"];
Node_37 [shape=record,label="{37\:\ 0x0035|LOOP_END\lLOOP:0: B:33:0x0028\-\>B:37:0x0035\l|int r3 = r3 + 1\l}"];
Node_40 [shape=record,label="{40\:\ 0x0034|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0034|RETURN\l|return null\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x0038|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0038}"];
Node_39 [shape=record,label="{39\:\ 0x0041|RETURN\l|return new java.math.BigInteger(r5, kotlin.text.CharsKt.checkRadix(r6))\l}"];
Node_28 [shape=record,label="{28\:\ 0x001b}"];
Node_29 [shape=record,label="{29\:\ 0x0023|if (kotlin.text.CharsKt.digitOf(r5.charAt(0), r6) \>= 0) goto L15\l}"];
Node_30 [shape=record,label="{30\:\ 0x0025|RETURN\l|return null\l}"];
Node_31 [shape=record,label="{31\:\ 0x0026|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public static final java.math.BigInteger kotlin.text.StringsKt__StringNumberConversionsJVMKt.toBigIntegerOrNull((r5v0 '$this$toBigIntegerOrNull' java.lang.String A[D('$this$toBigIntegerOrNull' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'radix' int A[D('radix' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:37:0x0035 \-\> B:33:0x0028, CROSS_EDGE: B:39:0x0041 \-\> B:22:?, CROSS_EDGE: B:26:0x0017 \-\> B:32:0x0027, CROSS_EDGE: B:30:0x0025 \-\> B:22:?, CROSS_EDGE: B:29:0x0023 \-\> B:38:0x0038, CROSS_EDGE: B:31:0x0026 \-\> B:22:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_28;
Node_24 -> Node_31;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_32;
Node_27 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_41;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_40[style=dashed];
Node_37 -> Node_33;
Node_40 -> Node_36;
Node_36 -> Node_22;
Node_41 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_22;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_38;
Node_30 -> Node_22;
Node_31 -> Node_22;
}

