digraph "CFG forkotlin.ResultKt.mapCatching(Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0006: INVOKE  (r0 I:boolean) = (r3 I:java.lang.Object A[D('$this$mapCatching' java.lang.Object)]) type: STATIC call: kotlin.Result.isSuccess\-impl(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)] (LINE:267)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0025 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0025|0x0025: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.lang.Object A[D('$this$mapCatching' java.lang.Object)]) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[MD:\<T\>:(java.lang.Object):java.lang.Object (m)] (LINE:268)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0029|RETURN\lORIG_RETURN\l|0x0029: RETURN  (r0 I:java.lang.Object)  (LINE:266)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0019, blocks: (B:18:0x000c), top: B:24:0x000c \}\lCatch: all \-\> 0x0019\l|0x000c: SGET  (r0 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion A[Catch: all \-\> 0x0019, TRY_ENTER]\l0x000e: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('$this$mapCatching' java.lang.Object)]) \l0x000f: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:341)\l0x0010: INVOKE  (r2 I:java.lang.Object) = \l  (r4 I:kotlin.jvm.functions.Function1 A[D('transform' kotlin.jvm.functions.Function1)])\l  (r0 I:java.lang.Object A[D('$this$mapCatching_u24lambda_u2d3' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0019, MD:(P1):R (m)] (LINE:267)\l0x0014: INVOKE  (r0 I:java.lang.Object) = (r2 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0019, MD:\<T\>:(java.lang.Object):java.lang.Object (m), TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0029: RETURN  (r0 I:java.lang.Object) A[SYNTHETIC] (LINE:266)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0019|ExcHandler: all \-\> 0x0019\l|0x0019: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0019]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001a|0x001a: SGET  (r1 I:kotlin.Result$Companion) =  kotlin.Result.Companion kotlin.Result$Companion \l0x001c: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Throwable) type: STATIC call: kotlin.ResultKt.createFailure(java.lang.Throwable):java.lang.Object A[MD:(java.lang.Throwable):java.lang.Object (m)]\l0x0020: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Object) type: STATIC call: kotlin.Result.constructor\-impl(java.lang.Object):java.lang.Object A[MD:\<T\>:(java.lang.Object):java.lang.Object (m)]\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|0x0029: RETURN  (r0 I:java.lang.Object) A[SYNTHETIC] (LINE:266)\l}"];
MethodNode[shape=record,label="{private static final java.lang.Object kotlin.ResultKt.mapCatching((r3 I:java.lang.Object A[D('$this$mapCatching' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function1\<? super T, ? extends R\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x000c \-\> B:23:0x0029, CROSS_EDGE: B:21:0x001a \-\> B:23:0x0029, CROSS_EDGE: B:24:0x000c \-\> B:20:0x0019\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0019, blocks: (B:18:0x000c), top: B:24:0x000c \}\lTYPE_VARS: [R, T]\lSIGNATURE: \<R:Ljava\/lang\/Object;T:Ljava\/lang\/Object;\>(Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)Ljava\/lang\/Object;\lDebug Info:\l  0x000f\-0x0014: r0 '$this$mapCatching_u24lambda_u2d3' Ljava\/lang\/Object;\l  0x0010\-0x0014: r1 '$i$a$\-runCatching\-ResultKt$mapCatching$1' I\l  \-1 \-0x0029: r3 '$this$mapCatching' Ljava\/lang\/Object;\l  \-1 \-0x0029: r4 'transform' Lkotlin\/jvm\/functions\/Function1;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_22;
Node_17 -> Node_24[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_15;
Node_24 -> Node_18;
Node_24 -> Node_20;
Node_18 -> Node_25;
Node_18 -> Node_27;
Node_25 -> Node_20;
Node_27 -> Node_15;
Node_20 -> Node_21;
Node_21 -> Node_26;
Node_26 -> Node_15;
}

