digraph "CFG forkotlin.reflect.KTypeProjection.Companion.contravariant(Lkotlin\/reflect\/KType;)Lkotlin\/reflect\/KTypeProjection;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"type\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('type' kotlin.reflect.KType)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: NEW_INSTANCE  (r0 I:kotlin.reflect.KTypeProjection) =  kotlin.reflect.KTypeProjection  (LINE:79)\l0x0007: SGET  (r1 I:kotlin.reflect.KVariance) =  kotlin.reflect.KVariance.IN kotlin.reflect.KVariance \l0x0009: INVOKE  \l  (r0 I:kotlin.reflect.KTypeProjection)\l  (r1 I:kotlin.reflect.KVariance)\l  (r3 I:kotlin.reflect.KType A[D('type' kotlin.reflect.KType)])\l type: DIRECT call: kotlin.reflect.KTypeProjection.\<init\>(kotlin.reflect.KVariance, kotlin.reflect.KType):void A[MD:(kotlin.reflect.KVariance, kotlin.reflect.KType):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:kotlin.reflect.KTypeProjection) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlin.reflect.KTypeProjection kotlin.reflect.KTypeProjection.Companion.contravariant((r2 'this' I:kotlin.reflect.KTypeProjection$Companion A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlin.reflect.KType A[D('type' kotlin.reflect.KType), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/jvm\/JvmStatic;=Annotation\{RUNTIME, type=Lkotlin\/jvm\/JvmStatic;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000c: r3 'type' Lkotlin\/reflect\/KType;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

