digraph "CFG forkotlin.reflect.KTypeProjection.toString()Ljava\/lang\/String;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: IGET  (r0 I:kotlin.reflect.KVariance) = (r2 I:kotlin.reflect.KTypeProjection) kotlin.reflect.KTypeProjection.variance kotlin.reflect.KVariance  (LINE:43)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0006 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|0x0004: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|0x000e: SWITCH  (r0 I:??)\l case \-1: goto B:29:0x0046\l case 0: goto B:24:0x0011\l case 1: goto B:28:0x003f\l case 2: goto B:27:0x002b\l case 3: goto B:26:0x0017\l default: goto B:24:0x0011 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|0x0011: NEW_INSTANCE  (r0 I:kotlin.NoWhenBranchMatchedException) =  kotlin.NoWhenBranchMatchedException  (LINE:47)\l0x0013: INVOKE  (r0 I:kotlin.NoWhenBranchMatchedException) type: DIRECT call: kotlin.NoWhenBranchMatchedException.\<init\>():void A[MD:():void (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0016|0x0016: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0017|0x0017: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0019: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x001c: CONST_STR  (r1 I:java.lang.String) =  \"out \" \l0x001e: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0021: IGET  (r1 I:kotlin.reflect.KType) = (r2 I:kotlin.reflect.KTypeProjection) kotlin.reflect.KTypeProjection.type kotlin.reflect.KType \l0x0023: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0026: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0048: RETURN  (r0 I:java.lang.String) A[SYNTHETIC] (LINE:48)\l}"];
Node_27 [shape=record,label="{27\:\ 0x002b|0x002b: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:46)\l0x002d: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0030: CONST_STR  (r1 I:java.lang.String) =  \"in \" \l0x0032: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0035: IGET  (r1 I:kotlin.reflect.KType) = (r2 I:kotlin.reflect.KTypeProjection) kotlin.reflect.KTypeProjection.type kotlin.reflect.KType \l0x0037: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x003a: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|0x0048: RETURN  (r0 I:java.lang.String) A[SYNTHETIC] (LINE:48)\l}"];
Node_28 [shape=record,label="{28\:\ 0x003f|0x003f: IGET  (r0 I:kotlin.reflect.KType) = (r2 I:kotlin.reflect.KTypeProjection) kotlin.reflect.KTypeProjection.type kotlin.reflect.KType  (LINE:45)\l0x0041: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: STATIC call: java.lang.String.valueOf(java.lang.Object):java.lang.String A[MD:(java.lang.Object):java.lang.String (c)]\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0048: RETURN  (r0 I:java.lang.String) A[SYNTHETIC] (LINE:48)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0046|RETURN\lORIG_RETURN\l|0x0046: CONST_STR  (r0 I:java.lang.String) =  \"*\"  (LINE:44)\l0x0048: RETURN  (r0 I:java.lang.String)  (LINE:48)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|0x0006: SGET  (r1 I:int[]) =  kotlin.reflect.KTypeProjection.WhenMappings.$EnumSwitchMapping$0 int[] \l0x0008: INVOKE  (r0 I:int) = (r0 I:kotlin.reflect.KVariance) type: VIRTUAL call: kotlin.reflect.KVariance.ordinal():int A[MD:():int (c)]\l0x000c: AGET  (r0 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][]), (r0 I:??[int, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public java.lang.String kotlin.reflect.KTypeProjection.toString((r2 'this' I:kotlin.reflect.KTypeProjection A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0048 \-\> B:18:?, CROSS_EDGE: B:27:0x002b \-\> B:30:0x0048, CROSS_EDGE: B:28:0x003f \-\> B:30:0x0048, CROSS_EDGE: B:29:0x0046 \-\> B:30:0x0048, CROSS_EDGE: B:22:0x0006 \-\> B:23:0x000e\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_26;
Node_23 -> Node_27;
Node_23 -> Node_28;
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_18;
Node_26 -> Node_31;
Node_31 -> Node_18;
Node_27 -> Node_32;
Node_32 -> Node_18;
Node_28 -> Node_33;
Node_33 -> Node_18;
Node_29 -> Node_18;
Node_22 -> Node_23;
}

