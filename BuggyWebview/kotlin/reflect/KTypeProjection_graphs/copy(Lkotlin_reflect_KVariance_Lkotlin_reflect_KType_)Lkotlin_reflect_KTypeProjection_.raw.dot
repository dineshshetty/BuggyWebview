digraph "CFG forkotlin.reflect.KTypeProjection.copy(Lkotlin\/reflect\/KVariance;Lkotlin\/reflect\/KType;)Lkotlin\/reflect\/KTypeProjection;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlin.reflect.KTypeProjection) =  kotlin.reflect.KTypeProjection \l0x0002: INVOKE  (r0 I:kotlin.reflect.KTypeProjection), (r2 I:kotlin.reflect.KVariance), (r3 I:kotlin.reflect.KType) type: DIRECT call: kotlin.reflect.KTypeProjection.\<init\>(kotlin.reflect.KVariance, kotlin.reflect.KType):void A[MD:(kotlin.reflect.KVariance, kotlin.reflect.KType):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0005|RETURN\l|0x0005: RETURN  (r0 I:kotlin.reflect.KTypeProjection) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlin.reflect.KTypeProjection kotlin.reflect.KTypeProjection.copy((r1 'this' I:kotlin.reflect.KTypeProjection A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.reflect.KVariance A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.reflect.KType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

