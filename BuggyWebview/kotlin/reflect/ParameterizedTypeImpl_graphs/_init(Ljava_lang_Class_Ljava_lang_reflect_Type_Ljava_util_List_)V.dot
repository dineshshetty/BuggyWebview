digraph "CFG forkotlin.reflect.ParameterizedTypeImpl.\<init\>(Ljava\/lang\/Class;Ljava\/lang\/reflect\/Type;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"rawType\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"typeArguments\")\lr5.rawType = r6\lr5.ownerType = r7\ljava.util.Collection r0 = r8\ljava.lang.Object[] r3 = r0.toArray(new java.lang.reflect.Type[0])\lkotlin.jvm.internal.Intrinsics.checkNotNull(r3, \"null cannot be cast to non\-null type kotlin.Array\<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray\>\")\lr5.typeArguments = (java.lang.reflect.Type[]) r3\l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.reflect.ParameterizedTypeImpl.\<init\>((r5v0 'this' kotlin.reflect.ParameterizedTypeImpl A[IMMUTABLE_TYPE, THIS]), (r6v0 'rawType' java.lang.Class\<?\> A[D('rawType' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'ownerType' java.lang.reflect.Type A[D('ownerType' java.lang.reflect.Type), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'typeArguments' java.util.List\<? extends java.lang.reflect.Type\> A[D('typeArguments' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/lang\/Class\<*\>;Ljava\/lang\/reflect\/Type;Ljava\/util\/List\<+Ljava\/lang\/reflect\/Type;\>;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

