digraph "CFG forkotlin.reflect.ParameterizedTypeImpl.hashCode()I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Class\<?\>) = (r2 I:kotlin.reflect.ParameterizedTypeImpl) kotlin.reflect.ParameterizedTypeImpl.rawType java.lang.Class  (LINE:216)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.hashCode():int A[MD:():int (c)]\l0x0006: IGET  (r1 I:java.lang.reflect.Type) = (r2 I:kotlin.reflect.ParameterizedTypeImpl) kotlin.reflect.ParameterizedTypeImpl.ownerType java.lang.reflect.Type \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r1 I:int) = (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.hashCode():int A[MD:():int (c)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) ^ (r1 I:??[int, boolean, short, byte, char]) \l0x0011: INVOKE  (r1 I:java.lang.reflect.Type[]) = (r2 I:kotlin.reflect.ParameterizedTypeImpl) type: VIRTUAL call: kotlin.reflect.ParameterizedTypeImpl.getActualTypeArguments():java.lang.reflect.Type[] A[MD:():java.lang.reflect.Type[] (m)]\l0x0015: INVOKE  (r1 I:int) = (r1 I:java.lang.Object[]) type: STATIC call: java.util.Arrays.hashCode(java.lang.Object[]):int A[MD:(java.lang.Object[]):int (c)]\l0x0019: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) ^ (r1 I:??[int, boolean, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|RETURN\l|0x001a: RETURN  (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public int kotlin.reflect.ParameterizedTypeImpl.hashCode((r2 'this' I:kotlin.reflect.ParameterizedTypeImpl A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000f \-\> B:6:0x0010\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
}

