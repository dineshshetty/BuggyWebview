digraph "CFG forkotlin.reflect.ParameterizedTypeImpl.getTypeName()Ljava\/lang\/String;" {
subgraph cluster_Region_1529810949 {
label = "R(6:1|(1:3)(1:14)|4|(1:9)|10|11) | DECL_VAR: java.lang.String null, java.lang.String null\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|java.lang.StringBuilder java.lang.StringBuilder r0 = new java.lang.StringBuilder()\ljava.lang.reflect.Type java.lang.reflect.Type r3 = r14.ownerType\l}"];
subgraph cluster_IfRegion_529178023 {
label = "IF [B:3:0x0009] THEN: R(1:3) ELSE: R(1:14)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r3 != null) goto L3\l}"];
subgraph cluster_Region_1348156757 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|java.lang.String r3 = kotlin.reflect.TypesJVMKt.typeToString(r3)\lr0.append(r3)\lr0.append(\"$\")\lr0.append(r14.rawType.getSimpleName())\l}"];
}
subgraph cluster_Region_451338717 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0021|java.lang.String r3 = kotlin.reflect.TypesJVMKt.typeToString(r14.rawType)\lr0.append(r3)\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x002c|java.lang.reflect.Type[] java.lang.reflect.Type[] r4 = r14.typeArguments\l}"];
subgraph cluster_IfRegion_372423318 {
label = "IF [B:11:0x0036] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0036|if ((!(r4.length == 0)) != false) goto L9\l}"];
subgraph cluster_Region_1015422218 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0038|kotlin.collections.ArraysKt.joinTo(r4, r0, (r14 & 2) != 0 ? \", \" : null, (r14 & 4) != 0 ? \"\" : \"\<\", (r14 & 8) != 0 ? \"\" : \"\>\", (r14 & 16) != 0 ? \-1 : 0, (r14 & 32) != 0 ? \"...\" : null, (r14 & 64) != 0 ? null : kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1.INSTANCE)\l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x0053|java.lang.String java.lang.String r0 = r0.toString()\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"StringBuilder().apply(builderAction).toString()\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x005d|RETURN\l|return r0\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0030}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0032}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0035|PHI: r3 \l  PHI: (r3v6 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0034}"];
MethodNode[shape=record,label="{public java.lang.String kotlin.reflect.ParameterizedTypeImpl.getTypeName((r14v0 'this' kotlin.reflect.ParameterizedTypeImpl A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:11:0x0036 \-\> B:13:0x0053, CROSS_EDGE: B:9:0x0034 \-\> B:10:0x0035, CROSS_EDGE: B:5:0x0021 \-\> B:6:0x002c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{java.lang.reflect.Type.getTypeName():java.lang.String\}]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_0 -> Node_2;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_9 -> Node_10;
}

