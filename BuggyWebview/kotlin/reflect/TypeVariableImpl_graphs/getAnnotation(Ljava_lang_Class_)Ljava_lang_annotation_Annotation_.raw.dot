digraph "CFG forkotlin.reflect.TypeVariableImpl.getAnnotation(Ljava\/lang\/Class;)Ljava\/lang\/annotation\/Annotation;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"annotationClass\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('annotationClass' java.lang.Class)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:131)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:T extends java.lang.annotation.Annotation) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final T extends java.lang.annotation.Annotation kotlin.reflect.TypeVariableImpl.getAnnotation((r1 'this' I:kotlin.reflect.TypeVariableImpl A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Class\<T extends java.lang.annotation.Annotation\> A[D('annotationClass' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0006: r2 'annotationClass' Ljava\/lang\/Class;\lTYPE_VARS: [T extends java.lang.annotation.Annotation]\lSIGNATURE: \<T::Ljava\/lang\/annotation\/Annotation;\>(Ljava\/lang\/Class\<TT;\>;)TT;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

