digraph "CFG forkotlin.reflect.TypeVariableImpl.getGenericDeclaration()Ljava\/lang\/reflect\/GenericDeclaration;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"getGenericDeclaration() is not yet supported for type variables created from KType: \")\lr0.append(r4.typeParameter)\ljava.lang.String r0 = r0.toString()\ljava.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"An operation is not implemented: \")\lr2.append(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|throw new kotlin.Standard(r2.toString())\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.reflect.GenericDeclaration kotlin.reflect.TypeVariableImpl.getGenericDeclaration((r4v0 'this' kotlin.reflect.TypeVariableImpl A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{java.lang.reflect.TypeVariable.getGenericDeclaration():D extends java.lang.reflect.GenericDeclaration\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

