digraph "CFG forkotlin.reflect.KClasses.safeCast(Lkotlin\/reflect\/KClass;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$safeCast' kotlin.reflect.KClass)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:boolean) = \l  (r1 I:kotlin.reflect.KClass A[D('$this$safeCast' kotlin.reflect.KClass)])\l  (r2 I:java.lang.Object A[D('value' java.lang.Object)])\l type: INTERFACE call: kotlin.reflect.KClass.isInstance(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)] (LINE:46)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: CONST_STR  (r0 I:java.lang.String) =  \"null cannot be cast to non\-null type T of kotlin.reflect.KClasses.safeCast\" \l0x000d: INVOKE  (r2 I:java.lang.Object A[D('value' java.lang.Object)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0010: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('value' java.lang.Object)]) \l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|0x0013: RETURN  (r0 I:T) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: RETURN  (r0 I:T) \l}"];
MethodNode[shape=record,label="{public static final T kotlin.reflect.KClasses.safeCast((r1 I:kotlin.reflect.KClass\<T\> A[D('$this$safeCast' kotlin.reflect.KClass), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.Object A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0012 \-\> B:6:0x0013\lDebug Info:\l  \-1 \-0x0013: r1 '$this$safeCast' Lkotlin\/reflect\/KClass;\l  \-1 \-0x0013: r2 'value' Ljava\/lang\/Object;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/reflect\/KClass\<TT;\>;Ljava\/lang\/Object;)TT;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_1;
}

