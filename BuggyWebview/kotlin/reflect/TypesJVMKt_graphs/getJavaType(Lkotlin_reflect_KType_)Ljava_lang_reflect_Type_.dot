digraph "CFG forkotlin.reflect.TypesJVMKt.getJavaType(Lkotlin\/reflect\/KType;)Ljava\/lang\/reflect\/Type;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\l}"];
Node_13 [shape=record,label="{13\:\ 0x0007|if ((r3 instanceof kotlin.jvm.internal.KTypeBase) == false) goto L8\l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|java.lang.reflect.Type r0 = ((kotlin.jvm.internal.KTypeBase) r3).getJavaType()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0010|if (r0 == null) goto L8\l}"];
Node_16 [shape=record,label="{16\:\ 0x0012}"];
Node_17 [shape=record,label="{17\:\ 0x0013|RETURN\l|return r0\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0014}"];
Node_19 [shape=record,label="{19\:\ 0x001b|RETURN\l|return computeJavaType$default(r3, false, 1, null)\l}"];
MethodNode[shape=record,label="{public static final java.lang.reflect.Type kotlin.reflect.TypesJVMKt.getJavaType((r3v0 '$this$javaType' kotlin.reflect.KType A[D('$this$javaType' kotlin.reflect.KType), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x001b \-\> B:11:?, CROSS_EDGE: B:13:0x0007 \-\> B:18:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

