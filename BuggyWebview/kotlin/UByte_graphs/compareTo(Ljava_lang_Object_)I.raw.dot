digraph "CFG forkotlin.UByte.compareTo(Ljava\/lang\/Object;)I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)])  (LINE:13)\l0x0001: CHECK_CAST (r0 I:kotlin.UByte) = (kotlin.UByte) (r0 I:??[OBJECT, ARRAY]) \l0x0003: INVOKE  (r0 I:byte) = (r0 I:kotlin.UByte) type: VIRTUAL call: kotlin.UByte.unbox\-impl():byte A[MD:():byte (m)]\l0x0007: INVOKE  (r1 I:byte) = (r2 I:kotlin.UByte) type: VIRTUAL call: kotlin.UByte.unbox\-impl():byte A[MD:():byte (m)]\l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x000d: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x000f: INVOKE  (r0 I:int) = (r1 I:int), (r0 I:int) type: STATIC call: kotlin.jvm.internal.Intrinsics.compare(int, int):int A[MD:(int, int):int (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ int kotlin.UByte.compareTo((r2 'this' I:kotlin.UByte A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlin.UByte A[D('other' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0013: r3 'other' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [ClspMth\{java.lang.Comparable.compareTo(T):int\}]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

