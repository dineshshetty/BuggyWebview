digraph "CFG forkotlin.math.MathKt__MathJVMKt.log(DD)D" {
subgraph cluster_Region_290515225 {
label = "R(1:(2:(1:(2:(1:10)|(1:8)))|(1:12)))";
node [shape=record,color=blue];
subgraph cluster_Region_53535233 {
label = "R(2:(1:(2:(1:10)|(1:8)))|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_130823604 {
label = "IF [B:18:0x0004] THEN: R(1:(2:(1:10)|(1:8))) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0004|if (r6 \> 0.0d) goto L3\l}"];
subgraph cluster_Region_336086693 {
label = "R(1:(2:(1:10)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_33975580 {
label = "R(2:(1:10)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_102938551 {
label = "IF [B:23:0x000f] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000f|PHI: r0 \l  PHI: (r0v4 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r6 == 1.0d) != false) goto L10\l}"];
subgraph cluster_Region_1621447506 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return Double.NaN\l}"];
}
}
subgraph cluster_Region_911084685 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x001b|RETURN\l|return java.lang.Math.log(r4) \/ java.lang.Math.log(r6)\l}"];
}
}
}
}
subgraph cluster_Region_127007189 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x001c|RETURN\lORIG_RETURN\l|return Double.NaN\l}"];
}
}
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0000}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0006}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000a}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000c}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0012}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x000e}"];
MethodNode[shape=record,label="{public static final double kotlin.math.MathKt__MathJVMKt.log((r4v0 'x' double A[D('x' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'base' double A[D('base' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x001e \-\> B:16:?, CROSS_EDGE: B:22:0x000e \-\> B:23:0x000f, CROSS_EDGE: B:18:0x0004 \-\> B:27:0x001c\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_15;Node_18 -> Node_19;
Node_18 -> Node_27[style=dashed];
Node_23 -> Node_25[style=dashed];
Node_23 -> Node_29;
Node_29 -> Node_16;
Node_26 -> Node_16;
Node_27 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_25 -> Node_26;
Node_22 -> Node_23;
}

