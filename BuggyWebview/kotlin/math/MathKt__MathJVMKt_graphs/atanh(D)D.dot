digraph "CFG forkotlin.math.MathKt__MathJVMKt.atanh(D)D" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000}"];
Node_14 [shape=record,label="{14\:\ 0x0008|if ((java.lang.Math.abs(r7) \> kotlin.math.MathJVM.taylor_n_bound ? 1 : (java.lang.Math.abs(r7) == kotlin.math.MathJVM.taylor_n_bound ? 0 : \-1)) \>= 0) goto L9\l}"];
Node_15 [shape=record,label="{15\:\ 0x000a}"];
Node_16 [shape=record,label="{16\:\ 0x0013|if ((java.lang.Math.abs(r7) \> kotlin.math.MathJVM.taylor_2_bound ? 1 : (java.lang.Math.abs(r7) == kotlin.math.MathJVM.taylor_2_bound ? 0 : \-1)) \<= 0) goto L8\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|double r0 = r7 + (((r7 * r7) * r7) \/ ((double) 3))\l}"];
Node_18 [shape=record,label="{18\:\ 0x001d|RETURN\lORIG_RETURN\l|return r0\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return r7\l}"];
Node_19 [shape=record,label="{19\:\ 0x001e|double r0 = (double) 1\l}"];
Node_20 [shape=record,label="{20\:\ 0x002b|RETURN\l|return java.lang.Math.log((r0 + r7) \/ (r0 \- r7)) \/ ((double) 2)\l}"];
MethodNode[shape=record,label="{public static final double kotlin.math.MathKt__MathJVMKt.atanh((r7v0 'x' double A[D('x' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0013 \-\> B:18:0x001d, CROSS_EDGE: B:20:0x002b \-\> B:12:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_12;
Node_21 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
}

