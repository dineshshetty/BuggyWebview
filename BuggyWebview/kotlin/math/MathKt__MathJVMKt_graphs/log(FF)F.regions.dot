digraph "CFG forkotlin.math.MathKt__MathJVMKt.log(FF)F" {
subgraph cluster_Region_345860511 {
label = "R(1:(2:(1:(2:(1:10)|(1:8)))|(1:12)))";
node [shape=record,color=blue];
subgraph cluster_Region_1592297373 {
label = "R(2:(1:(2:(1:10)|(1:8)))|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_402969257 {
label = "IF [B:18:0x0003] THEN: R(1:(2:(1:10)|(1:8))) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0003|if (r5 \> 0.0f) goto L3\l}"];
subgraph cluster_Region_282320685 {
label = "R(1:(2:(1:10)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1870499129 {
label = "R(2:(1:10)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1966287652 {
label = "IF [B:23:0x000e] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000e|PHI: r0 \l  PHI: (r0v6 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r5 == 1.0f) != false) goto L10\l}"];
subgraph cluster_Region_1268526769 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return Float.NaN\l}"];
}
}
subgraph cluster_Region_1169734232 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x001d|RETURN\l|return (float) (java.lang.Math.log(r4) \/ java.lang.Math.log(r5))\l}"];
}
}
}
}
subgraph cluster_Region_1185932179 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x001e|RETURN\lORIG_RETURN\l|return Float.NaN\l}"];
}
}
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0000}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0005}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0009}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000b}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0011}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x000d}"];
MethodNode[shape=record,label="{public static final float kotlin.math.MathKt__MathJVMKt.log((r4v0 'x' float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'base' float A[D('base' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0020 \-\> B:16:?, CROSS_EDGE: B:22:0x000d \-\> B:23:0x000e, CROSS_EDGE: B:18:0x0003 \-\> B:27:0x001e\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_15;Node_18 -> Node_19;
Node_18 -> Node_27[style=dashed];
Node_23 -> Node_25[style=dashed];
Node_23 -> Node_29;
Node_29 -> Node_16;
Node_26 -> Node_16;
Node_27 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_25 -> Node_26;
Node_22 -> Node_23;
}

