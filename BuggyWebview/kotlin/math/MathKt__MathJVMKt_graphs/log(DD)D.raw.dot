digraph "CFG forkotlin.math.MathKt__MathJVMKt.log(DD)D" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST  (r0 I:??[long, double]) = (0 ??[long, double])  (LINE:319)\l0x0002: CMP_G  (r2 I:int) = (r6 I:double A[D('base' double)]), (r0 I:double) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|0x0004: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:27:0x001c \l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|0x0006: CONST  (r0 I:??[long, double]) = (4607182418800017408(0x3ff0000000000000, double:1.0) ??[long, double]) \l0x0008: CMP_G  (r2 I:int) = (r6 I:double A[D('base' double)]), (r0 I:double) \l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|0x000a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x000e \l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|0x000c: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0012 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0012|0x0012: INVOKE  (r0 I:double) = (r4 I:double A[D('x' double)]) type: STATIC call: java.lang.Math.log(double):double A[MD:(double):double (c)] (LINE:320)\l0x0016: INVOKE  (r2 I:double) = (r6 I:double A[D('base' double)]) type: STATIC call: java.lang.Math.log(double):double A[MD:(double):double (c)]\l0x001a: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l}"];
Node_26 [shape=record,label="{26\:\ 0x001b|RETURN\l|0x001b: RETURN  (r0 I:double) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x001c: CONST  (r0 I:??[long, double]) = (9221120237041090560(0x7ff8000000000000, double:NaN) ??[long, double]) A[SYNTHETIC] (LINE:319)\l0x001e: RETURN  (r0 I:double) A[SYNTHETIC]\l}"];
Node_22 [shape=record,label="{22\:\ 0x000e|0x000e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|RETURN\lORIG_RETURN\l|0x001c: CONST  (r0 I:??[long, double]) = (9221120237041090560(0x7ff8000000000000, double:NaN) ??[long, double])  (LINE:319)\l0x001e: RETURN  (r0 I:double) \l}"];
MethodNode[shape=record,label="{public static final double kotlin.math.MathKt__MathJVMKt.log((r4 I:double A[D('x' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:double A[D('base' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x001e \-\> B:16:?, CROSS_EDGE: B:22:0x000e \-\> B:23:0x000f, CROSS_EDGE: B:18:0x0004 \-\> B:27:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001e: r4 'x' D\l  \-1 \-0x001e: r6 'base' D\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_29[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_16;
Node_29 -> Node_16;
Node_22 -> Node_23;
Node_27 -> Node_16;
}

