digraph "CFG forkotlin.math.MathKt__MathJVMKt.log(DD)D" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x0004|if ((r6 \> 0.0d ? 1 : (r6 == 0.0d ? 0 : \-1)) \<= 0) goto L12\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006}"];
Node_20 [shape=record,label="{20\:\ 0x000a|if ((r6 \> 1.0d ? 1 : (r6 == 1.0d ? 0 : \-1)) != 0) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|r0 = true\l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|PHI: r0 \l  PHI: (r0v4 boolean) = (r0v3 boolean), (r0v8 boolean) binds: [B:22:0x000e, B:21:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L7\l}"];
Node_25 [shape=record,label="{25\:\ 0x0012}"];
Node_26 [shape=record,label="{26\:\ 0x001b|RETURN\l|return java.lang.Math.log(r4) \/ java.lang.Math.log(r6)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return Double.NaN\l}"];
Node_22 [shape=record,label="{22\:\ 0x000e|r0 = false\l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|RETURN\lORIG_RETURN\l|return Double.NaN\l}"];
MethodNode[shape=record,label="{public static final double kotlin.math.MathKt__MathJVMKt.log((r4v0 'x' double A[D('x' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'base' double A[D('base' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x001e \-\> B:16:?, CROSS_EDGE: B:22:0x000e \-\> B:23:0x000f, CROSS_EDGE: B:18:0x0004 \-\> B:27:0x001c\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_29[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_16;
Node_29 -> Node_16;
Node_22 -> Node_23;
Node_27 -> Node_16;
}

