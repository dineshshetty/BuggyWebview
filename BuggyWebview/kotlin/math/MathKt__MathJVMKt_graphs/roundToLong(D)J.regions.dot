digraph "CFG forkotlin.math.MathKt__MathJVMKt.roundToLong(D)J" {
subgraph cluster_Region_689126576 {
label = "R(1:(2:(1:7)|(1:4)))";
node [shape=record,color=blue];
subgraph cluster_Region_1000236475 {
label = "R(2:(1:7)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_265198902 {
label = "IF [B:11:0x0004] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0004|if (java.lang.Double.isNaN(r2) == true) goto L6\l}"];
subgraph cluster_Region_1390363063 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0012|throw new java.lang.IllegalArgumentException(\"Cannot round NaN value.\")\l}"];
}
}
subgraph cluster_Region_1654194656 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000a|RETURN\l|return java.lang.Math.round(r2)\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0006}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000b}"];
MethodNode[shape=record,label="{public static final long kotlin.math.MathKt__MathJVMKt.roundToLong((r2v0 '$this$roundToLong' double A[D('$this$roundToLong' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0012 \-\> B:9:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_8;Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_15 -> Node_9;
Node_13 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

