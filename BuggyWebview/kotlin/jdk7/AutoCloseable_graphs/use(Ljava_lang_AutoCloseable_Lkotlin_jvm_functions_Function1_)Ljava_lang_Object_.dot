digraph "CFG forkotlin.jdk7.AutoCloseableKt.use(Ljava\/lang\/AutoCloseable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"block\")\lr1 = 1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:3:0x0009), top: B:12:0x0009 \}\lCatch: all \-\> 0x0017\l|java.lang.Object r2 = r4.invoke(r3)     \/\/ Catch: java.lang.Throwable \-\> L17\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|kotlin.jvm.internal.InlineMarker.finallyStart(1)\lcloseFinally(r3, null)\lkotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|RETURN\l|return r2\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|ExcHandler: all \-\> 0x0017\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018}"];
Node_14 [shape=record,label="{14\:\ 0x001a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|TRY_ENTER\lTRY_LEAVE\lDONT_GENERATE\lFINALLY_INSNS\lTryCatch #1 \{all \-\> 0x001b, blocks: (B:8:0x001a), top: B:14:0x001a \}\lCatch: all \-\> 0x001b\l|throw r2     \/\/ Catch: java.lang.Throwable \-\> L1b\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|DONT_GENERATE\lFINALLY_INSNS\lExcHandler: all \-\> 0x001b\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|DONT_GENERATE\lFINALLY_INSNS\l|kotlin.jvm.internal.InlineMarker.finallyStart(r1)\lcloseFinally(r3, r2)\lkotlin.jvm.internal.InlineMarker.finallyEnd(r1)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|DONT_GENERATE\lFINALLY_INSNS\l|throw r2\l}"];
MethodNode[shape=record,label="{private static final R kotlin.jdk7.AutoCloseableKt.use((r3v0 T extends java.lang.AutoCloseable A[D('$this$use' java.lang.AutoCloseable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'block' kotlin.jvm.functions.Function1\<? super T extends java.lang.AutoCloseable, ? extends R\> A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x001a \-\> B:1:?, CROSS_EDGE: B:11:0x0025 \-\> B:1:?, CROSS_EDGE: B:14:0x001a \-\> B:9:0x001b, CROSS_EDGE: B:12:0x0009 \-\> B:6:0x0017\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:3:0x0009), top: B:12:0x0009 \}, TryCatch #1 \{all \-\> 0x001b, blocks: (B:8:0x001a), top: B:14:0x001a \}\lTYPE_VARS: [R, T extends java.lang.AutoCloseable]\lSIGNATURE: \<T::Ljava\/lang\/AutoCloseable;R:Ljava\/lang\/Object;\>(TT;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)TR;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Finally have unexpected throw blocks count: 2, expect 1\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_12;
Node_12 -> Node_3;
Node_12 -> Node_6;
Node_3 -> Node_4;
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_13 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_14;
Node_14 -> Node_8;
Node_14 -> Node_9;
Node_8 -> Node_1;
Node_8 -> Node_15;
Node_15 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
}

