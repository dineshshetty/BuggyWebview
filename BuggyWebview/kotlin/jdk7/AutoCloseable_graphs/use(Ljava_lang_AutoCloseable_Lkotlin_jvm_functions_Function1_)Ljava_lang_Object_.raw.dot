digraph "CFG forkotlin.jdk7.AutoCloseableKt.use(Ljava\/lang\/AutoCloseable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"block\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('block' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0006: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:40)\l0x0008: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:42)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:3:0x0009), top: B:12:0x0009 \}\lCatch: all \-\> 0x0017\l|0x0009: INVOKE  (r2 I:java.lang.Object) = \l  (r4 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)])\l  (r3 I:java.lang.Object A[D('$this$use' java.lang.AutoCloseable)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0017, MD:(P1):R (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0010: INVOKE  \l  (r3 I:java.lang.AutoCloseable A[D('$this$use' java.lang.AutoCloseable)])\l  (r0 I:java.lang.Throwable A[D('exception' java.lang.Throwable)])\l type: STATIC call: kotlin.jdk7.AutoCloseableKt.closeFinally(java.lang.AutoCloseable, java.lang.Throwable):void A[MD:(java.lang.AutoCloseable, java.lang.Throwable):void (m)] (LINE:47)\l0x0013: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|RETURN\l|0x0016: RETURN  (r2 I:R)  (LINE:42)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|ExcHandler: all \-\> 0x0017\l|0x0017: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0017] (LINE:43)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('exception' java.lang.Throwable)]) = (r2 I:??[OBJECT, ARRAY] A[D('e' java.lang.Throwable)])  (LINE:44)\l}"];
Node_14 [shape=record,label="{14\:\ 0x001a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x001b, blocks: (B:8:0x001a), top: B:14:0x001a \}\lCatch: all \-\> 0x001b\l|0x001a: THROW  (r2 I:java.lang.Throwable A[D('e' java.lang.Throwable)]) A[Catch: all \-\> 0x001b, TRY_ENTER, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|ExcHandler: all \-\> 0x001b\l|0x001b: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x001b] (LINE:46)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x001f: INVOKE  \l  (r3 I:java.lang.AutoCloseable A[D('$this$use' java.lang.AutoCloseable)])\l  (r0 I:java.lang.Throwable A[D('exception' java.lang.Throwable)])\l type: STATIC call: kotlin.jdk7.AutoCloseableKt.closeFinally(java.lang.AutoCloseable, java.lang.Throwable):void A[MD:(java.lang.AutoCloseable, java.lang.Throwable):void (m)] (LINE:47)\l0x0022: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static final R kotlin.jdk7.AutoCloseableKt.use((r3 I:T extends java.lang.AutoCloseable A[D('$this$use' java.lang.AutoCloseable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function1\<? super T extends java.lang.AutoCloseable, ? extends R\> A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x001a \-\> B:1:?, CROSS_EDGE: B:11:0x0025 \-\> B:1:?, CROSS_EDGE: B:14:0x001a \-\> B:9:0x001b, CROSS_EDGE: B:12:0x0009 \-\> B:6:0x0017\lDebug Info:\l  0x0007\-0x001a: r0 'exception' Ljava\/lang\/Throwable;\l  \-1 \-0x001a: r3 '$this$use' Ljava\/lang\/AutoCloseable;\l  \-1 \-0x001a: r4 'block' Lkotlin\/jvm\/functions\/Function1;\l  0x0018\-0x001b: r2 'e' Ljava\/lang\/Throwable;\l  0x001b\-0x0025: r0 'exception' Ljava\/lang\/Throwable;\l  0x001b\-0x0025: r3 '$this$use' Ljava\/lang\/AutoCloseable;\l  0x001b\-0x0025: r4 'block' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R, T extends java.lang.AutoCloseable]\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:3:0x0009), top: B:12:0x0009 \}, TryCatch #1 \{all \-\> 0x001b, blocks: (B:8:0x001a), top: B:14:0x001a \}\lSIGNATURE: \<T::Ljava\/lang\/AutoCloseable;R:Ljava\/lang\/Object;\>(TT;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)TR;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_12;
Node_12 -> Node_3;
Node_12 -> Node_6;
Node_3 -> Node_4;
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_13 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_14;
Node_14 -> Node_8;
Node_14 -> Node_9;
Node_8 -> Node_1;
Node_8 -> Node_15;
Node_15 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
}

