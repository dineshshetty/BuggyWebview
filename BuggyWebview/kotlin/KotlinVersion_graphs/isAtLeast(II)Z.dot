digraph "CFG forkotlin.KotlinVersion.isAtLeast(II)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|int r0 = r1.major\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|if (r0 \> r2) goto L8\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|if (r0 != r2) goto L6\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006}"];
Node_18 [shape=record,label="{18\:\ 0x0008|if (r1.minor \< r3) goto L6\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|SYNTHETIC\lRETURN\l|return false\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|RETURN\lORIG_RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public final boolean kotlin.KotlinVersion.isAtLeast((r1v0 'this' kotlin.KotlinVersion A[IMMUTABLE_TYPE, THIS]), (r2v0 'major' int A[D('major' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'minor' int A[D('minor' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x000d \-\> B:22:0x000e, CROSS_EDGE: B:16:0x0004 \-\> B:20:0x000b, CROSS_EDGE: B:15:0x0002 \-\> B:21:0x000d\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_21[style=dashed];
Node_20 -> Node_13;
Node_21 -> Node_13;
}

