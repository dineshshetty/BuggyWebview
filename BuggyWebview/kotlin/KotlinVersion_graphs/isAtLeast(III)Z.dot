digraph "CFG forkotlin.KotlinVersion.isAtLeast(III)Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|int r0 = r1.major\l}"];
Node_18 [shape=record,label="{18\:\ 0x0002|if (r0 \> r2) goto L11\l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|if (r0 != r2) goto L9\l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|int r0 = r1.minor\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008|if (r0 \> r3) goto L11\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|if (r0 != r3) goto L9\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c}"];
Node_24 [shape=record,label="{24\:\ 0x000e|if (r1.patch \< r4) goto L9\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|SYNTHETIC\lRETURN\l|return false\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0013|RETURN\lORIG_RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public final boolean kotlin.KotlinVersion.isAtLeast((r1v0 'this' kotlin.KotlinVersion A[IMMUTABLE_TYPE, THIS]), (r2v0 'major' int A[D('major' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'minor' int A[D('minor' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'patch' int A[D('patch' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0013 \-\> B:28:0x0014, CROSS_EDGE: B:22:0x000a \-\> B:26:0x0011, CROSS_EDGE: B:21:0x0008 \-\> B:27:0x0013, CROSS_EDGE: B:19:0x0004 \-\> B:26:0x0011, CROSS_EDGE: B:18:0x0002 \-\> B:27:0x0013\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_26;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_27[style=dashed];
Node_26 -> Node_16;
Node_27 -> Node_16;
}

