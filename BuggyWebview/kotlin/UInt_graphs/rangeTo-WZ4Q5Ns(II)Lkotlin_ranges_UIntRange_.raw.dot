digraph "CFG forkotlin.UInt.rangeTo\-WZ4Q5Ns(II)Lkotlin\/ranges\/UIntRange;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlin.ranges.UIntRange) =  kotlin.ranges.UIntRange  (LINE:238)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: INVOKE  \l  (r0 I:kotlin.ranges.UIntRange)\l  (r2 I:int A[D('arg0' int)])\l  (r3 I:int A[D('other' int)])\l  (r1 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlin.ranges.UIntRange.\<init\>(int, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(int, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:kotlin.ranges.UIntRange) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final kotlin.ranges.UIntRange kotlin.UInt.rangeTo\-WZ4Q5Ns((r2 I:int A[D('arg0' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('other' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0006: r2 'arg0' I\l  \-1 \-0x0006: r3 'other' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

