digraph "CFG forkotlin.ULongArray.Iterator.next\-s\-VKNKU()J" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r3 I:kotlin.ULongArray$Iterator) kotlin.ULongArray.Iterator.index int  (LINE:49)\l0x0002: IGET  (r1 I:long[]) = (r3 I:kotlin.ULongArray$Iterator) kotlin.ULongArray.Iterator.array long[] \l0x0004: ARRAY_LENGTH  (r2 I:int) = (r1 I:??[]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0005|0x0005: IF  (r0 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:14:0x0012 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0007|0x0007: ARITH  (r2 I:int) = (r0 I:int) + (1 int) \l0x0009: IPUT  (r2 I:int), (r3 I:kotlin.ULongArray$Iterator) kotlin.ULongArray.Iterator.index int \l0x000b: AGET  (r0 I:??[long, double]) = (r1 I:??[long, double][]), (r0 I:??[int, short, byte, char]) \l0x000d: INVOKE  (r0 I:long) = (r0 I:long) type: STATIC call: kotlin.ULong.constructor\-impl(long):long A[MD:(long):long (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:long) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0012|0x0012: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException \l0x0014: IGET  (r1 I:int) = (r3 I:kotlin.ULongArray$Iterator) kotlin.ULongArray.Iterator.index int \l0x0016: INVOKE  (r1 I:java.lang.String) = (r1 I:int) type: STATIC call: java.lang.String.valueOf(int):java.lang.String A[MD:(int):java.lang.String (c)]\l0x001a: INVOKE  (r0 I:java.util.NoSuchElementException), (r1 I:java.lang.String) type: DIRECT call: java.util.NoSuchElementException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001d|0x001d: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public long kotlin.ULongArray.Iterator.next\-s\-VKNKU((r3 'this' I:kotlin.ULongArray$Iterator A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x001d \-\> B:9:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

