digraph "CFG forkotlin.comparisons.ComparisonsKt___ComparisonsKt.minOf(Ljava\/lang\/Object;[Ljava\/lang\/Object;Ljava\/util\/Comparator;)Ljava\/lang\/Object;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"other\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('other' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"comparator\" \l0x0007: INVOKE  (r7 I:java.lang.Object A[D('comparator' java.util.Comparator)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('a' java.lang.Object)])  (LINE:389)\l0x000b: ARRAY_LENGTH  (r1 I:int) = (r6 I:??[] A[D('other' java.lang.Object[])])  (LINE:390)\l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|LOOP_START\lLOOP:0: B:15:0x000d\-\>B:19:0x0018\l|0x000d: IF  (r2 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:21:0x001b \l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|0x000f: AGET  (r3 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY][] A[D('other' java.lang.Object[])]), (r2 I:??[int, short, byte, char]) \l0x0011: INVOKE  (r4 I:int) = \l  (r7 I:java.util.Comparator A[D('comparator' java.util.Comparator)])\l  (r0 I:java.lang.Object A[D('min' java.lang.Object)])\l  (r3 I:java.lang.Object A[D('e' java.lang.Object)])\l type: INTERFACE call: java.util.Comparator.compare(java.lang.Object, java.lang.Object):int A[MD:(T, T):int (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|0x0015: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:23:0x0018 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|0x0017: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('min' java.lang.Object)]) = (r3 I:??[OBJECT, ARRAY] A[D('e' java.lang.Object)]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0018|LOOP_END\lLOOP:0: B:15:0x000d\-\>B:19:0x0018\l|0x0018: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0018|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x001b|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x001b|RETURN\l|0x001b: RETURN  (r0 I:T A[D('min' java.lang.Object)])  (LINE:391)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final T kotlin.comparisons.ComparisonsKt___ComparisonsKt.minOf((r5 I:T A[D('a' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:T[] A[D('other' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.Comparator\<? super T\> A[D('comparator' java.util.Comparator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0018 \-\> B:15:0x000d, CROSS_EDGE: B:17:0x0015 \-\> B:19:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x001b: r3 'e' Ljava\/lang\/Object;\l  0x000b\-0x001b: r0 'min' Ljava\/lang\/Object;\l  \-1 \-0x001b: r5 'a' Ljava\/lang\/Object;\l  \-1 \-0x001b: r6 'other' [Ljava\/lang\/Object;\l  \-1 \-0x001b: r7 'comparator' Ljava\/util\/Comparator;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(TT;[TT;Ljava\/util\/Comparator\<\-TT;\>;)TT;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_22;
Node_22 -> Node_19;
Node_19 -> Node_15;
Node_23 -> Node_19;
Node_21 -> Node_20;
Node_20 -> Node_13;
}

