digraph "CFG forkotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3.compare(Ljava\/lang\/Object;Ljava\/lang\/Object;)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.util.Comparator\<? super K\>) = (r3 I:kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3) kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3.$comparator java.util.Comparator  (LINE:112)\l0x0002: IGET  (r1 I:kotlin.jvm.functions.Function1\<T, K\>) = (r3 I:kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3) kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3.$selector kotlin.jvm.functions.Function1 \l0x0004: INVOKE  (r2 I:java.lang.Object) = (r1 I:kotlin.jvm.functions.Function1), (r4 I:java.lang.Object A[D('a' java.lang.Object)]) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0008: INVOKE  (r1 I:java.lang.Object) = (r1 I:kotlin.jvm.functions.Function1), (r5 I:java.lang.Object A[D('b' java.lang.Object)]) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x000c: INVOKE  (r0 I:int) = (r0 I:java.util.Comparator), (r2 I:java.lang.Object), (r1 I:java.lang.Object) type: INTERFACE call: java.util.Comparator.compare(java.lang.Object, java.lang.Object):int A[MD:(T, T):int (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final int kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3.compare((r3 'this' I:kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3\<T\> A[IMMUTABLE_TYPE, THIS]), (r4 I:T A[D('a' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:T A[D('b' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0010: r4 'a' Ljava\/lang\/Object;\l  \-1 \-0x0010: r5 'b' Ljava\/lang\/Object;\lTYPE_VARS: [T]\lSIGNATURE: (TT;TT;)I\lMETHOD_OVERRIDE: [ClspMth\{java.util.Comparator.compare(T, T):int\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

