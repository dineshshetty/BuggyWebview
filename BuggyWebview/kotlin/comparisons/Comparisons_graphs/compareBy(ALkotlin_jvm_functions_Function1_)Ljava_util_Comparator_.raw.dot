digraph "CFG forkotlin.comparisons.ComparisonsKt__ComparisonsKt.compareBy([Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Comparator;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"selectors\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('selectors' kotlin.jvm.functions.Function1[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: ARRAY_LENGTH  (r0 I:int) = (r2 I:??[] A[D('selectors' kotlin.jvm.functions.Function1[])])  (LINE:90)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0006|0x0006: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:27:0x000a \l}"];
Node_26 [shape=record,label="{26\:\ 0x0008|0x0008: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0015 \l}"];
Node_29 [shape=record,label="{29\:\ 0x000d|0x000d: NEW_INSTANCE  (r0 I:kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$1) =  kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$1  (LINE:91)\l0x000f: INVOKE  \l  (r0 I:kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$1)\l  (r2 I:kotlin.jvm.functions.Function1[] A[D('selectors' kotlin.jvm.functions.Function1[])])\l type: DIRECT call: kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$1.\<init\>(kotlin.jvm.functions.Function1[]):void A[MD:(kotlin.jvm.functions.Function1\<? super T, ? extends java.lang.Comparable\<?\>\>[]):void (m)]\l0x0012: CHECK_CAST (r0 I:java.util.Comparator) = (java.util.Comparator) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0014|RETURN\l|0x0014: RETURN  (r0 I:java.util.Comparator\<T\>) \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0015|0x0015: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:90)\l0x0017: CONST_STR  (r1 I:java.lang.String) =  \"Failed requirement.\" \l0x0019: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x001d: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0020|0x0020: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_27 [shape=record,label="{27\:\ 0x000a|0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.util.Comparator\<T\> kotlin.comparisons.ComparisonsKt__ComparisonsKt.compareBy((r2 I:kotlin.jvm.functions.Function1\<? super T, ? extends java.lang.Comparable\<?\>\>[] A[D('selectors' kotlin.jvm.functions.Function1[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x0020 \-\> B:23:?, CROSS_EDGE: B:27:0x000a \-\> B:28:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0020: r2 'selectors' [Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([Lkotlin\/jvm\/functions\/Function1\<\-TT;+Ljava\/lang\/Comparable\<*\>;\>;)Ljava\/util\/Comparator\<TT;\>;\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_23;
Node_31 -> Node_32;
Node_32 -> Node_23;
Node_27 -> Node_28;
}

