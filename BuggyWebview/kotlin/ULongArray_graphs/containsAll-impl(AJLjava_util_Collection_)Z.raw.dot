digraph "CFG forkotlin.ULongArray.containsAll\-impl([JLjava\/util\/Collection;)Z" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0002: INVOKE  (r11 I:java.lang.Object A[D('elements' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('elements' java.util.Collection)])  (LINE:62)\l0x0006: CHECK_CAST (r0 I:java.lang.Iterable) = (java.lang.Iterable) (r0 I:??[OBJECT, ARRAY]) \l0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('$this$all$iv' java.lang.Iterable)])  (LINE:87)\l0x000a: CHECK_CAST (r2 I:java.util.Collection) = (java.util.Collection) (r2 I:??[OBJECT, ARRAY]) \l0x000c: INVOKE  (r2 I:boolean) = (r2 I:java.util.Collection) type: INTERFACE call: java.util.Collection.isEmpty():boolean A[MD:():boolean (c)]\l0x0010: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0011: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0012|0x0012: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0016 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0014|SYNTHETIC\lRETURN\l|0x0014: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x003e: RETURN  (r3 I:boolean) A[SYNTHETIC] (LINE:62)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0016|0x0016: INVOKE  (r2 I:java.util.Iterator) = (r0 I:java.lang.Iterable A[D('$this$all$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:88)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|LOOP_START\lLOOP:0: B:30:0x001a\-\>B:38:0x003a\l|0x001a: INVOKE  (r5 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x001e|0x001e: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x003d \l}"];
Node_32 [shape=record,label="{32\:\ 0x0020|0x0020: INVOKE  (r5 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0024: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) \l0x0025: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0026: INSTANCE_OF  (r8 I:boolean) = (r6 I:??[OBJECT, ARRAY] A[D('it' java.lang.Object)]) kotlin.ULong  (LINE:62)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0028|0x0028: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0039 \l}"];
Node_34 [shape=record,label="{34\:\ 0x002a|0x002a: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('it' java.lang.Object)]) \l0x002b: CHECK_CAST (r8 I:kotlin.ULong) = (kotlin.ULong) (r8 I:??[OBJECT, ARRAY]) \l0x002d: INVOKE  (r8 I:long) = (r8 I:kotlin.ULong) type: VIRTUAL call: kotlin.ULong.unbox\-impl():long A[MD:():long (m)]\l0x0031: INVOKE  (r8 I:boolean) = (r10 I:long[] A[D('arg0' long[])]), (r8 I:long) type: STATIC call: kotlin.collections.ArraysKt.contains(long[], long):boolean A[MD:(long[], long):boolean (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0035|0x0035: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0039 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0037|0x0037: CONST  (r6 I:??[boolean, int, float, short, byte, char] A[D('it' java.lang.Object)]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x003a|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x003a|LOOP_END\lLOOP:0: B:30:0x001a\-\>B:38:0x003a\l|0x003a: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001a \l}"];
Node_42 [shape=record,label="{42\:\ 0x003e|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|0x003e: RETURN  (r3 I:boolean) A[SYNTHETIC] (LINE:62)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0039|0x0039: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('it' java.lang.Object)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x003a|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x003d|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x003d|RETURN\lORIG_RETURN\l|0x003d: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:89)\l0x003e: RETURN  (r3 I:boolean)  (LINE:62)\l}"];
MethodNode[shape=record,label="{public static boolean kotlin.ULongArray.containsAll\-impl((r10 I:long[] A[D('arg0' long[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.util.Collection\<kotlin.ULong\> A[D('elements' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:38:0x003a \-\> B:30:0x001a, CROSS_EDGE: B:38:0x003a \-\> B:41:0x003e, CROSS_EDGE: B:37:0x0039 \-\> B:38:0x003a, CROSS_EDGE: B:33:0x0028 \-\> B:37:0x0039, CROSS_EDGE: B:40:0x003d \-\> B:41:0x003e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0025\-0x003a: r6 'it' Ljava\/lang\/Object;\l  0x0026\-0x003a: r7 '$i$a$\-all\-ULongArray$containsAll$1' I\l  0x0024\-0x003d: r5 'element$iv' Ljava\/lang\/Object;\l  0x0008\-0x003e: r0 '$this$all$iv' Ljava\/lang\/Iterable;\l  0x0009\-0x003e: r1 '$i$f$all' I\l  \-1 \-0x003e: r10 'arg0' [J\l  \-1 \-0x003e: r11 'elements' Ljava\/util\/Collection;\lSIGNATURE: ([JLjava\/util\/Collection\<Lkotlin\/ULong;\>;)Z\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_25;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_43;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_45;
Node_45 -> Node_38;
Node_38 -> Node_30;
Node_38 -> Node_42[style=dashed];
Node_42 -> Node_47;
Node_47 -> Node_25;
Node_37 -> Node_44;
Node_44 -> Node_38;
Node_43 -> Node_40;
Node_40 -> Node_25;
}

