digraph "CFG forkotlin.PreconditionsKt__AssertionsJVMKt.assert(ZLkotlin\/jvm\/functions\/Function0;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"lazyMessage\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('lazyMessage' kotlin.jvm.functions.Function0)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0009  (LINE:33)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|RETURN\l|0x0008: RETURN    (LINE:38)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: INVOKE  (r0 I:java.lang.Object) = (r3 I:kotlin.jvm.functions.Function0 A[D('lazyMessage' kotlin.jvm.functions.Function0)]) type: INTERFACE call: kotlin.jvm.functions.Function0.invoke():java.lang.Object A[MD:():R (m)] (LINE:34)\l0x000d: NEW_INSTANCE  (r1 I:java.lang.AssertionError) =  java.lang.AssertionError  (LINE:35)\l0x000f: INVOKE  (r1 I:java.lang.AssertionError), (r0 I:java.lang.Object A[D('message' java.lang.Object)]) type: DIRECT call: java.lang.AssertionError.\<init\>(java.lang.Object):void A[MD:(java.lang.Object):void (c)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static final void kotlin.PreconditionsKt__AssertionsJVMKt.assert((r2 I:boolean A[D('value' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.jvm.functions.Function0\<? extends java.lang.Object\> A[D('lazyMessage' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0012 \-\> B:1:?\lDebug Info:\l  0x000d\-0x0012: r0 'message' Ljava\/lang\/Object;\l  \-1 \-0x0012: r2 'value' Z\l  \-1 \-0x0012: r3 'lazyMessage' Lkotlin\/jvm\/functions\/Function0;\lSIGNATURE: (ZLkotlin\/jvm\/functions\/Function0\<+Ljava\/lang\/Object;\>;)V\lRENAME_REASON:not valid java name\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

