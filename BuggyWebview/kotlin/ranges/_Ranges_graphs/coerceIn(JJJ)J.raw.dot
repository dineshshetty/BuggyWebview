digraph "CFG forkotlin.ranges.RangesKt___RangesKt.coerceIn(JJJ)J" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CMP_L  (r0 I:int) = (r5 I:long A[D('minimumValue' long)]), (r7 I:long A[D('maximumValue' long)])  (LINE:1249)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|0x0002: IF  (r0 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:24:0x000f \l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: CMP_L  (r0 I:int) = (r3 I:long A[D('$this$coerceIn' long)]), (r5 I:long A[D('minimumValue' long)])  (LINE:1250)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:20:0x0009 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|RETURN\l|0x0008: RETURN  (r5 I:long A[D('minimumValue' long)]) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: CMP_L  (r0 I:int) = (r3 I:long A[D('$this$coerceIn' long)]), (r7 I:long A[D('maximumValue' long)])  (LINE:1251)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|0x000b: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:23:0x000e \l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|RETURN\l|0x000d: RETURN  (r7 I:long A[D('maximumValue' long)]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|RETURN\l|0x000e: RETURN  (r3 I:long A[D('$this$coerceIn' long)])  (LINE:1252)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:1249)\l0x0011: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0013: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0016: CONST_STR  (r2 I:java.lang.String) =  \"Cannot coerce value to an empty range: maximum \" \l0x0018: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001b: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:long A[D('maximumValue' long)]) type: VIRTUAL call: java.lang.StringBuilder.append(long):java.lang.StringBuilder A[MD:(long):java.lang.StringBuilder (c)]\l0x001e: CONST_STR  (r2 I:java.lang.String) =  \" is less than minimum \" \l0x0020: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0023: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:long A[D('minimumValue' long)]) type: VIRTUAL call: java.lang.StringBuilder.append(long):java.lang.StringBuilder A[MD:(long):java.lang.StringBuilder (c)]\l0x0026: CONST  (r2 I:??[int, float, short, byte, char]) = (46 ??[int, float, short, byte, char]) \l0x0028: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x002b: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x002f: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0032|0x0032: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final long kotlin.ranges.RangesKt___RangesKt.coerceIn((r3 I:long A[D('$this$coerceIn' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:long A[D('minimumValue' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:long A[D('maximumValue' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x000d \-\> B:14:?, CROSS_EDGE: B:23:0x000e \-\> B:14:?, CROSS_EDGE: B:25:0x0032 \-\> B:14:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0032: r3 '$this$coerceIn' J\l  \-1 \-0x0032: r5 'minimumValue' J\l  \-1 \-0x0032: r7 'maximumValue' J\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_14;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_14;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

