digraph "CFG forkotlin.ranges.RangesKt___RangesKt.intRangeContains(Lkotlin\/ranges\/ClosedRange;J)Z" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$contains' kotlin.ranges.ClosedRange)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:java.lang.Integer) = (r4 I:long A[D('value' long)]) type: STATIC call: kotlin.ranges.RangesKt.toIntExactOrNull(long):java.lang.Integer A[MD:(long):java.lang.Integer (m)] (LINE:510)\l0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1360)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' java.lang.Integer)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0014  (LINE:510)\l}"];
Node_12 [shape=record,label="{12\:\ 0x000c|0x000c: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('it' java.lang.Integer)]) \l0x000d: CHECK_CAST (r2 I:java.lang.Comparable) = (java.lang.Comparable) (r2 I:??[OBJECT, ARRAY]) \l0x000f: INVOKE  (r2 I:boolean) = (r3 I:kotlin.ranges.ClosedRange A[D('$this$contains' kotlin.ranges.ClosedRange)]), (r2 I:java.lang.Comparable) type: INTERFACE call: kotlin.ranges.ClosedRange.contains(java.lang.Comparable):boolean A[MD:(T extends java.lang.Comparable\<? super T\>):boolean (m)]\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0015: RETURN  (r2 I:boolean) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0014|RETURN\lORIG_RETURN\l|0x0014: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.ranges.RangesKt___RangesKt.intRangeContains((r3 I:kotlin.ranges.ClosedRange\<java.lang.Integer\> A[D('$this$contains' kotlin.ranges.ClosedRange), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('value' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0014 \-\> B:14:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0015: r0 'it' Ljava\/lang\/Integer;\l  0x000a\-0x0015: r1 '$i$a$\-let\-RangesKt___RangesKt$contains$11' I\l  \-1 \-0x0015: r3 '$this$contains' Lkotlin\/ranges\/ClosedRange;\l  \-1 \-0x0015: r4 'value' J\lSIGNATURE: (Lkotlin\/ranges\/ClosedRange\<Ljava\/lang\/Integer;\>;J)Z\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_9;
}

