digraph "CFG forkotlin.ranges.RangesKt___RangesKt.intRangeContains(Lkotlin\/ranges\/ClosedRange;D)Z" {
subgraph cluster_Region_651352959 {
label = "R(2:1|(2:(1:4)|(1:6)))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\ljava.lang.Integer java.lang.Integer r0 = kotlin.ranges.RangesKt.toIntExactOrNull(r4)\l}"];
subgraph cluster_Region_10206141 {
label = "R(2:(1:4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1385725670 {
label = "IF [B:11:0x000a] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000a|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_864038039 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return r3.contains(r0)\l}"];
}
}
subgraph cluster_Region_321816179 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0014|RETURN\lORIG_RETURN\l|return false\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x000c}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ boolean kotlin.ranges.RangesKt___RangesKt.intRangeContains((r3v0 '$this$contains' kotlin.ranges.ClosedRange A[D('$this$contains' kotlin.ranges.ClosedRange), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'value' double A[D('value' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=This `contains` operation mixing integer and floating point arguments has ambiguous semantics and is going to be removed.\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{errorSince=1.4, hiddenSince=1.5, warningSince=1.3\}\}\}\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:13:0x0014 \-\> B:14:0x0015\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_15 -> Node_9;
Node_13 -> Node_9;
Node_8 -> Node_10;
Node_12 -> Node_15;
}

