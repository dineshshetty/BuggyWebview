digraph "CFG forkotlin.ranges.RangesKt___RangesKt.coerceAtMost(II)I" {
subgraph cluster_Region_1670777264 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|RETURN\l|return r1 \> r2 ? r2 : r1\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0002}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0004}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0005|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public static final int kotlin.ranges.RangesKt___RangesKt.coerceAtMost((r1v0 '$this$coerceAtMost' int A[D('$this$coerceAtMost' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'maximumValue' int A[D('maximumValue' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0004 \-\> B:12:0x0005\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_9 -> Node_11;
Node_7 -> Node_9;
Node_10 -> Node_13;
Node_13 -> Node_8;
Node_11 -> Node_12;
Node_12 -> Node_8;
}

