digraph "CFG forkotlin.ranges.RangesKt___RangesKt.coerceIn(Ljava\/lang\/Comparable;Lkotlin\/ranges\/ClosedRange;)Ljava\/lang\/Comparable;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"range\")\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|if ((r4 instanceof kotlin.ranges.ClosedFloatingPointRange) == false) goto L6\l}"];
Node_24 [shape=record,label="{24\:\ 0x000e}"];
Node_25 [shape=record,label="{25\:\ 0x0015|RETURN\l|return (T) kotlin.ranges.RangesKt.coerceIn(r3, (kotlin.ranges.ClosedFloatingPointRange) r4)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0016}"];
Node_27 [shape=record,label="{27\:\ 0x001a|if (r4.isEmpty() != false) goto L18\l}"];
Node_28 [shape=record,label="{28\:\ 0x001d}"];
Node_29 [shape=record,label="{29\:\ 0x0025|if (r3.compareTo(r4.getStart()) \>= 0) goto L12\l}"];
Node_30 [shape=record,label="{30\:\ 0x0027}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return r4.getStart()\l}"];
Node_31 [shape=record,label="{31\:\ 0x002c}"];
Node_32 [shape=record,label="{32\:\ 0x0034|if (r3.compareTo(r4.getEndInclusive()) \<= 0) goto L16\l}"];
Node_33 [shape=record,label="{33\:\ 0x0036}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return r4.getEndInclusive()\l}"];
Node_34 [shape=record,label="{34\:\ 0x003b}"];
Node_35 [shape=record,label="{35\:\ 0x003c|RETURN\lORIG_RETURN\l|return r3\l}"];
Node_36 [shape=record,label="{36\:\ 0x003d|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Cannot coerce value to an empty range: \")\lr1.append(r4)\lr1.append('.')\l}"];
Node_37 [shape=record,label="{37\:\ 0x0058|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{public static final T extends java.lang.Comparable\<? super T\> kotlin.ranges.RangesKt___RangesKt.coerceIn((r3v0 T extends java.lang.Comparable\<? super T\> A[D('$this$coerceIn' java.lang.Comparable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'range' kotlin.ranges.ClosedRange\<T extends java.lang.Comparable\<? super T\>\> A[D('range' kotlin.ranges.ClosedRange), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x003c \-\> B:21:?, CROSS_EDGE: B:33:0x0036 \-\> B:35:0x003c, CROSS_EDGE: B:34:0x003b \-\> B:35:0x003c, CROSS_EDGE: B:37:0x0058 \-\> B:21:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T extends java.lang.Comparable\<? super T\>]\lSIGNATURE: \<T::Ljava\/lang\/Comparable\<\-TT;\>;\>(TT;Lkotlin\/ranges\/ClosedRange\<TT;\>;)TT;\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_21;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_36;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_38;
Node_38 -> Node_21;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_39;
Node_39 -> Node_21;
Node_34 -> Node_35;
Node_35 -> Node_21;
Node_36 -> Node_37;
Node_37 -> Node_21;
}

