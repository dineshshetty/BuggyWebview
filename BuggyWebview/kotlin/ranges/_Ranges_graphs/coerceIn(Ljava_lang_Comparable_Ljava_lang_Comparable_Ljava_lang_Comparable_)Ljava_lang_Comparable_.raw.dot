digraph "CFG forkotlin.ranges.RangesKt___RangesKt.coerceIn(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$coerceIn' java.lang.Comparable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0005|0x0005: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('minimumValue' java.lang.Comparable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0041  (LINE:1187)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0007|0x0007: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('maximumValue' java.lang.Comparable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0041 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0009|0x0009: INVOKE  (r0 I:int) = \l  (r4 I:java.lang.Comparable A[D('minimumValue' java.lang.Comparable)])\l  (r5 I:java.lang.Object A[D('maximumValue' java.lang.Comparable)])\l type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)] (LINE:1188)\l}"];
Node_30 [shape=record,label="{30\:\ 0x000d|0x000d: IF  (r0 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:37:0x001d \l}"];
Node_31 [shape=record,label="{31\:\ 0x000f|0x000f: INVOKE  (r0 I:int) = \l  (r3 I:java.lang.Comparable A[D('$this$coerceIn' java.lang.Comparable)])\l  (r4 I:java.lang.Object A[D('minimumValue' java.lang.Comparable)])\l type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)] (LINE:1189)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0013|0x0013: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:34:0x0016 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0015|RETURN\l|0x0015: RETURN  (r4 I:T extends java.lang.Comparable\<? super T\> A[D('minimumValue' java.lang.Comparable)]) \l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0016|0x0016: INVOKE  (r0 I:int) = \l  (r3 I:java.lang.Comparable A[D('$this$coerceIn' java.lang.Comparable)])\l  (r5 I:java.lang.Object A[D('maximumValue' java.lang.Comparable)])\l type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)] (LINE:1190)\l}"];
Node_35 [shape=record,label="{35\:\ 0x001a|0x001a: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:47:0x0053 \l}"];
Node_36 [shape=record,label="{36\:\ 0x001c|RETURN\l|0x001c: RETURN  (r5 I:T extends java.lang.Comparable\<? super T\> A[D('maximumValue' java.lang.Comparable)]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0053|RETURN\l|0x0053: RETURN  (r3 I:T extends java.lang.Comparable\<? super T\> A[D('$this$coerceIn' java.lang.Comparable)])  (LINE:1196)\l}"];
Node_37 [shape=record,label="{37\:\ 0x001d|0x001d: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:1188)\l0x001f: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0021: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0024: CONST_STR  (r2 I:java.lang.String) =  \"Cannot coerce value to an empty range: maximum \" \l0x0026: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0029: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.Object A[D('maximumValue' java.lang.Comparable)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x002c: CONST_STR  (r2 I:java.lang.String) =  \" is less than minimum \" \l0x002e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0031: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.Object A[D('minimumValue' java.lang.Comparable)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0034: CONST  (r2 I:??[int, float, short, byte, char]) = (46 ??[int, float, short, byte, char]) \l0x0036: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0039: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x003d: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0040|0x0040: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0041|0x0041: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('minimumValue' java.lang.Comparable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x004a  (LINE:1193)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0043|0x0043: INVOKE  (r0 I:int) = \l  (r3 I:java.lang.Comparable A[D('$this$coerceIn' java.lang.Comparable)])\l  (r4 I:java.lang.Object A[D('minimumValue' java.lang.Comparable)])\l type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0047|0x0047: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:43:0x004a \l}"];
Node_42 [shape=record,label="{42\:\ 0x0049|RETURN\l|0x0049: RETURN  (r4 I:T extends java.lang.Comparable\<? super T\> A[D('minimumValue' java.lang.Comparable)]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x004a|0x004a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('maximumValue' java.lang.Comparable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0053  (LINE:1194)\l}"];
Node_44 [shape=record,label="{44\:\ 0x004c|0x004c: INVOKE  (r0 I:int) = \l  (r3 I:java.lang.Comparable A[D('$this$coerceIn' java.lang.Comparable)])\l  (r5 I:java.lang.Object A[D('maximumValue' java.lang.Comparable)])\l type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0050|0x0050: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:47:0x0053 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0052|RETURN\l|0x0052: RETURN  (r5 I:T extends java.lang.Comparable\<? super T\> A[D('maximumValue' java.lang.Comparable)]) \l}"];
MethodNode[shape=record,label="{public static final T extends java.lang.Comparable\<? super T\> kotlin.ranges.RangesKt___RangesKt.coerceIn((r3 I:T extends java.lang.Comparable\<? super T\> A[D('$this$coerceIn' java.lang.Comparable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:T extends java.lang.Comparable\<? super T\> A[D('minimumValue' java.lang.Comparable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:T extends java.lang.Comparable\<? super T\> A[D('maximumValue' java.lang.Comparable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x001c \-\> B:25:?, CROSS_EDGE: B:47:0x0053 \-\> B:25:?, CROSS_EDGE: B:38:0x0040 \-\> B:25:?, CROSS_EDGE: B:42:0x0049 \-\> B:25:?, CROSS_EDGE: B:46:0x0052 \-\> B:25:?, CROSS_EDGE: B:45:0x0050 \-\> B:47:0x0053, CROSS_EDGE: B:43:0x004a \-\> B:47:0x0053, CROSS_EDGE: B:39:0x0041 \-\> B:43:0x004a, CROSS_EDGE: B:27:0x0005 \-\> B:39:0x0041\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0053: r3 '$this$coerceIn' Ljava\/lang\/Comparable;\l  \-1 \-0x0053: r4 'minimumValue' Ljava\/lang\/Comparable;\l  \-1 \-0x0053: r5 'maximumValue' Ljava\/lang\/Comparable;\lTYPE_VARS: [T extends java.lang.Comparable\<? super T\>]\lSIGNATURE: \<T::Ljava\/lang\/Comparable\<\-TT;\>;\>(TT;TT;TT;)TT;\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_39;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_39;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_37;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_25;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_47;
Node_36 -> Node_25;
Node_47 -> Node_25;
Node_37 -> Node_38;
Node_38 -> Node_25;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_43;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_25;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_47;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_25;
}

