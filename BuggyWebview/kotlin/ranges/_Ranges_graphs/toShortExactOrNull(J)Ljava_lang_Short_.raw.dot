digraph "CFG forkotlin.ranges.RangesKt___RangesKt.toShortExactOrNull(J)Ljava\/lang\/Short;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlin.ranges.LongRange) =  kotlin.ranges.LongRange  (LINE:853)\l0x0002: CONST  (r1 I:??[long, double]) = (\-32768(0xffffffffffff8000, double:NaN) ??[long, double]) \l0x0004: CONST  (r3 I:??[long, double]) = (32767(0x7fff, double:1.6189E\-319) ??[long, double]) \l0x0006: INVOKE  (r0 I:kotlin.ranges.LongRange), (r1 I:long), (r3 I:long) type: DIRECT call: kotlin.ranges.LongRange.\<init\>(long, long):void A[MD:(long, long):void (m)]\l0x0009: INVOKE  (r0 I:boolean) = (r0 I:kotlin.ranges.LongRange), (r5 I:long A[D('$this$toShortExactOrNull' long)]) type: VIRTUAL call: kotlin.ranges.LongRange.contains(long):boolean A[MD:(long):boolean (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0016 \l}"];
Node_12 [shape=record,label="{12\:\ 0x000f|0x000f: CAST (r0 I:int) = (int) (r5 I:long A[D('$this$toShortExactOrNull' long)]) \l0x0010: CAST (r0 I:short) = (short) (r0 I:int) \l0x0011: INVOKE  (r0 I:java.lang.Short) = (r0 I:short) type: STATIC call: java.lang.Short.valueOf(short):java.lang.Short A[MD:(short):java.lang.Short (c)]\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0017: RETURN  (r0 I:java.lang.Short) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0016|RETURN\lORIG_RETURN\l|0x0016: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: RETURN  (r0 I:java.lang.Short) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Short kotlin.ranges.RangesKt___RangesKt.toShortExactOrNull((r5 I:long A[D('$this$toShortExactOrNull' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0016 \-\> B:14:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0017: r5 '$this$toShortExactOrNull' J\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_9;
}

