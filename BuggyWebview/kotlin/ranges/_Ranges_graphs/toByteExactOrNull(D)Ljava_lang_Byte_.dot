digraph "CFG forkotlin.ranges.RangesKt___RangesKt.toByteExactOrNull(D)Ljava\/lang\/Byte;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|r0 = false\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|if ((r4 \> 127.0d ? 1 : (r4 == 127.0d ? 0 : \-1)) \> 0) goto L6\l}"];
Node_16 [shape=record,label="{16\:\ 0x000a}"];
Node_17 [shape=record,label="{17\:\ 0x000e|if (((\-128.0d) \> r4 ? 1 : ((\-128.0d) == r4 ? 0 : \-1)) \> 0) goto L6\l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|r0 = true\l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v0 boolean), (r0v0 boolean), (r0v6 boolean) binds: [B:15:0x0008, B:17:0x000e, B:18:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L10\l}"];
Node_20 [shape=record,label="{20\:\ 0x0013}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Byte.valueOf((byte) ((int) r4))\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x001a|RETURN\lORIG_RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public static final java.lang.Byte kotlin.ranges.RangesKt___RangesKt.toByteExactOrNull((r4v0 '$this$toByteExactOrNull' double A[D('$this$toByteExactOrNull' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001a \-\> B:22:0x001b, CROSS_EDGE: B:17:0x000e \-\> B:19:0x0011, CROSS_EDGE: B:15:0x0008 \-\> B:19:0x0011\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_13;
}

