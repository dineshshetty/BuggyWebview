digraph "CFG forkotlin.ranges.RangesKt___RangesKt.toIntExactOrNull(F)Ljava\/lang\/Integer;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|r0 = false\l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|if ((r2 \> 2.1474836E9f ? 1 : (r2 == 2.1474836E9f ? 0 : \-1)) \> 0) goto L6\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007}"];
Node_17 [shape=record,label="{17\:\ 0x000b|if (((\-2.1474836E9f) \> r2 ? 1 : ((\-2.1474836E9f) == r2 ? 0 : \-1)) \> 0) goto L6\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|r0 = true\l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v0 boolean), (r0v0 boolean), (r0v5 boolean) binds: [B:15:0x0005, B:17:0x000b, B:18:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L10\l}"];
Node_20 [shape=record,label="{20\:\ 0x0010}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Integer.valueOf((int) r2)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|RETURN\lORIG_RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public static final java.lang.Integer kotlin.ranges.RangesKt___RangesKt.toIntExactOrNull((r2v0 '$this$toIntExactOrNull' float A[D('$this$toIntExactOrNull' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0016 \-\> B:22:0x0017, CROSS_EDGE: B:17:0x000b \-\> B:19:0x000e, CROSS_EDGE: B:15:0x0005 \-\> B:19:0x000e\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_13;
}

