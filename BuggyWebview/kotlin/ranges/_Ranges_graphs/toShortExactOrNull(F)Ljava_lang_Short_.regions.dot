digraph "CFG forkotlin.ranges.RangesKt___RangesKt.toShortExactOrNull(F)Ljava\/lang\/Short;" {
subgraph cluster_Region_1854978756 {
label = "R(3:1|(1:5)|(2:(1:8)|(1:10)))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|boolean r0 = false\l}"];
subgraph cluster_IfRegion_2037965113 {
label = "IF [B:15:0x0006, B:17:0x000c] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0006|if (r2 \<= 32767.0f) goto L3\l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|ADDED_TO_REGION\l|if ((\-32768.0f) \<= r2) goto L5\l}"];
subgraph cluster_Region_185758764 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000e|r0 = true\l}"];
}
}
subgraph cluster_Region_1564415822 {
label = "R(2:(1:8)|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1031849737 {
label = "IF [B:19:0x000f] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x000f|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v0 boolean), (r0v0 boolean), (r0v6 boolean) binds: [B:15:0x0006, B:17:0x000c, B:18:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == true) goto L7\l}"];
subgraph cluster_Region_1231558720 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Short.valueOf((short) r2)\l}"];
}
}
subgraph cluster_Region_1365394688 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0018|RETURN\lORIG_RETURN\l|return null\l}"];
}
}
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0008}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0011}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.lang.Short kotlin.ranges.RangesKt___RangesKt.toShortExactOrNull((r2v0 '$this$toShortExactOrNull' float A[D('$this$toShortExactOrNull' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0018 \-\> B:22:0x0019, CROSS_EDGE: B:17:0x000c \-\> B:19:0x000f, CROSS_EDGE: B:15:0x0006 \-\> B:19:0x000f\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_23 -> Node_13;
Node_21 -> Node_13;
Node_12 -> Node_14;
Node_16 -> Node_17;
Node_20 -> Node_23;
}

