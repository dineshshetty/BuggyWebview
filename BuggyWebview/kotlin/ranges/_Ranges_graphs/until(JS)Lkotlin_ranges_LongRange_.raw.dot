digraph "CFG forkotlin.ranges.RangesKt___RangesKt.until(JS)Lkotlin\/ranges\/LongRange;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlin.ranges.LongRange) =  kotlin.ranges.LongRange  (LINE:1004)\l0x0002: CAST (r1 I:long) = (long) (r7 I:int A[D('to' short)]) \l0x0003: CONST  (r3 I:??[long, double]) = (1 ??[long, double]) \l0x0005: ARITH  (r1 I:long) = (r1 I:long) \- (r3 I:long) \l0x0006: INVOKE  (r0 I:kotlin.ranges.LongRange), (r5 I:long A[D('$this$until' long)]), (r1 I:long) type: DIRECT call: kotlin.ranges.LongRange.\<init\>(long, long):void A[MD:(long, long):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|RETURN\l|0x0009: RETURN  (r0 I:kotlin.ranges.LongRange) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.ranges.LongRange kotlin.ranges.RangesKt___RangesKt.until((r5 I:long A[D('$this$until' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:short A[D('to' short), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0009: r5 '$this$until' J\l  \-1 \-0x0009: r7 'to' S\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

