digraph "CFG forkotlin.ranges.URangesKt___URangesKt.coerceIn\-JPwROB0(JLkotlin\/ranges\/ClosedRange;)J" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"range\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('range' kotlin.ranges.ClosedRange)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INSTANCE_OF  (r0 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('range' kotlin.ranges.ClosedRange)]) kotlin.ranges.ClosedFloatingPointRange  (LINE:613)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001b \l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|0x0009: INVOKE  (r0 I:kotlin.ULong) = (r3 I:long A[D('$this$coerceIn_u2dJPwROB0' long)]) type: STATIC call: kotlin.ULong.box\-impl(long):kotlin.ULong A[MD:(long):kotlin.ULong (m)] (LINE:614)\l0x000d: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('range' kotlin.ranges.ClosedRange)]) \l0x000e: CHECK_CAST (r1 I:kotlin.ranges.ClosedFloatingPointRange) = (kotlin.ranges.ClosedFloatingPointRange) (r1 I:??[OBJECT, ARRAY]) \l0x0010: INVOKE  (r0 I:java.lang.Comparable) = (r0 I:java.lang.Comparable), (r1 I:kotlin.ranges.ClosedFloatingPointRange) type: STATIC call: kotlin.ranges.RangesKt.coerceIn(java.lang.Comparable, kotlin.ranges.ClosedFloatingPointRange):java.lang.Comparable A[MD:\<T extends java.lang.Comparable\<? super T\>\>:(T extends java.lang.Comparable\<? super T\>, kotlin.ranges.ClosedFloatingPointRange\<T extends java.lang.Comparable\<? super T\>\>):T extends java.lang.Comparable\<? super T\> (m)]\l0x0014: CHECK_CAST (r0 I:kotlin.ULong) = (kotlin.ULong) (r0 I:??[OBJECT, ARRAY]) \l0x0016: INVOKE  (r0 I:long) = (r0 I:kotlin.ULong) type: VIRTUAL call: kotlin.ULong.unbox\-impl():long A[MD:():long (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|RETURN\l|0x001a: RETURN  (r0 I:long) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x001b|0x001b: INVOKE  (r0 I:boolean) = (r5 I:kotlin.ranges.ClosedRange A[D('range' kotlin.ranges.ClosedRange)]) type: INTERFACE call: kotlin.ranges.ClosedRange.isEmpty():boolean A[MD:():boolean (m)] (LINE:616)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001f|0x001f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x005a \l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|0x0022: INVOKE  (r0 I:java.lang.Comparable) = (r5 I:kotlin.ranges.ClosedRange A[D('range' kotlin.ranges.ClosedRange)]) type: INTERFACE call: kotlin.ranges.ClosedRange.getStart():java.lang.Comparable A[MD:():T extends java.lang.Comparable\<? super T\> (m)] (LINE:618)\l0x0026: CHECK_CAST (r0 I:kotlin.ULong) = (kotlin.ULong) (r0 I:??[OBJECT, ARRAY]) \l0x0028: INVOKE  (r0 I:long) = (r0 I:kotlin.ULong) type: VIRTUAL call: kotlin.ULong.unbox\-impl():long A[MD:():long (m)]\l0x002c: INVOKE  (r0 I:int) = (r3 I:long A[D('$this$coerceIn_u2dJPwROB0' long)]), (r0 I:long) type: STATIC call: kotlin.UnsignedKt.ulongCompare(long, long):int A[MD:(long, long):int (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0030|0x0030: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:31:0x003d \l}"];
Node_30 [shape=record,label="{30\:\ 0x0032|0x0032: INVOKE  (r0 I:java.lang.Comparable) = (r5 I:kotlin.ranges.ClosedRange A[D('range' kotlin.ranges.ClosedRange)]) type: INTERFACE call: kotlin.ranges.ClosedRange.getStart():java.lang.Comparable A[MD:():T extends java.lang.Comparable\<? super T\> (m)]\l0x0036: CHECK_CAST (r0 I:kotlin.ULong) = (kotlin.ULong) (r0 I:??[OBJECT, ARRAY]) \l0x0038: INVOKE  (r0 I:long) = (r0 I:kotlin.ULong) type: VIRTUAL call: kotlin.ULong.unbox\-impl():long A[MD:():long (m)]\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|0x0059: RETURN  (r0 I:long) A[SYNTHETIC] (LINE:617)\l}"];
Node_31 [shape=record,label="{31\:\ 0x003d|0x003d: INVOKE  (r0 I:java.lang.Comparable) = (r5 I:kotlin.ranges.ClosedRange A[D('range' kotlin.ranges.ClosedRange)]) type: INTERFACE call: kotlin.ranges.ClosedRange.getEndInclusive():java.lang.Comparable A[MD:():T extends java.lang.Comparable\<? super T\> (m)] (LINE:619)\l0x0041: CHECK_CAST (r0 I:kotlin.ULong) = (kotlin.ULong) (r0 I:??[OBJECT, ARRAY]) \l0x0043: INVOKE  (r0 I:long) = (r0 I:kotlin.ULong) type: VIRTUAL call: kotlin.ULong.unbox\-impl():long A[MD:():long (m)]\l0x0047: INVOKE  (r0 I:int) = (r3 I:long A[D('$this$coerceIn_u2dJPwROB0' long)]), (r0 I:long) type: STATIC call: kotlin.UnsignedKt.ulongCompare(long, long):int A[MD:(long, long):int (m)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x004b|0x004b: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:34:0x0058 \l}"];
Node_33 [shape=record,label="{33\:\ 0x004d|0x004d: INVOKE  (r0 I:java.lang.Comparable) = (r5 I:kotlin.ranges.ClosedRange A[D('range' kotlin.ranges.ClosedRange)]) type: INTERFACE call: kotlin.ranges.ClosedRange.getEndInclusive():java.lang.Comparable A[MD:():T extends java.lang.Comparable\<? super T\> (m)]\l0x0051: CHECK_CAST (r0 I:kotlin.ULong) = (kotlin.ULong) (r0 I:??[OBJECT, ARRAY]) \l0x0053: INVOKE  (r0 I:long) = (r0 I:kotlin.ULong) type: VIRTUAL call: kotlin.ULong.unbox\-impl():long A[MD:():long (m)]\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x0059: RETURN  (r0 I:long) A[SYNTHETIC] (LINE:617)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0058|0x0058: MOVE  (r0 I:??[long, double]) = (r3 I:??[long, double] A[D('$this$coerceIn_u2dJPwROB0' long)])  (LINE:620)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0059|RETURN\lORIG_RETURN\l|0x0059: RETURN  (r0 I:long)  (LINE:617)\l}"];
Node_36 [shape=record,label="{36\:\ 0x005a|0x005a: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:616)\l0x005c: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x005e: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0061: CONST_STR  (r2 I:java.lang.String) =  \"Cannot coerce value to an empty range: \" \l0x0063: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0066: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.Object A[D('range' kotlin.ranges.ClosedRange)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0069: CONST  (r2 I:??[int, float, short, byte, char]) = (46 ??[int, float, short, byte, char]) \l0x006b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x006e: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0072: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0075|0x0075: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final long kotlin.ranges.URangesKt___URangesKt.coerceIn\-JPwROB0((r3 I:long A[D('$this$coerceIn_u2dJPwROB0' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.ranges.ClosedRange\<kotlin.ULong\> A[D('range' kotlin.ranges.ClosedRange), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0059 \-\> B:21:?, CROSS_EDGE: B:33:0x004d \-\> B:35:0x0059, CROSS_EDGE: B:34:0x0058 \-\> B:35:0x0059, CROSS_EDGE: B:37:0x0075 \-\> B:21:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0075: r3 '$this$coerceIn_u2dJPwROB0' J\l  \-1 \-0x0075: r5 'range' Lkotlin\/ranges\/ClosedRange;\lSIGNATURE: (JLkotlin\/ranges\/ClosedRange\<Lkotlin\/ULong;\>;)J\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_21;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_36;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_38;
Node_38 -> Node_21;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_39;
Node_39 -> Node_21;
Node_34 -> Node_35;
Node_35 -> Node_21;
Node_36 -> Node_37;
Node_37 -> Node_21;
}

