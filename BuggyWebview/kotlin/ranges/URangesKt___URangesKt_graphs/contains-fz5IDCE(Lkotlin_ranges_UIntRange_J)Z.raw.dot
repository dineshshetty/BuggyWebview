digraph "CFG forkotlin.ranges.URangesKt___URangesKt.contains\-fz5IDCE(Lkotlin\/ranges\/UIntRange;J)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$this$contains\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$contains_u2dfz5IDCE' kotlin.ranges.UIntRange)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[int, float, short, byte, char]) = (32 ??[int, float, short, byte, char])  (LINE:259)\l0x0007: ARITH  (r0 I:long) = (r6 I:long A[D('value' long)]) \>\>\> (r0 I:long) \l0x0009: INVOKE  (r0 I:long) = (r0 I:long) type: STATIC call: kotlin.ULong.constructor\-impl(long):long A[MD:(long):long (m)]\l0x000d: CONST  (r2 I:??[long, double]) = (0 ??[long, double]) \l0x000f: CMP_L  (r4 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0011|0x0011: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0020 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0013|0x0013: CAST (r0 I:int) = (int) (r6 I:long A[D('value' long)]) \l0x0014: INVOKE  (r0 I:int) = (r0 I:int) type: STATIC call: kotlin.UInt.constructor\-impl(int):int A[MD:(int):int (m)]\l0x0018: INVOKE  (r0 I:boolean) = (r5 I:kotlin.ranges.UIntRange A[D('$this$contains_u2dfz5IDCE' kotlin.ranges.UIntRange)]), (r0 I:int) type: VIRTUAL call: kotlin.ranges.UIntRange.contains\-WZ4Q5Ns(int):boolean A[MD:(int):boolean (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001c|0x001c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0020 \l}"];
Node_16 [shape=record,label="{16\:\ 0x001e|SYNTHETIC\lRETURN\l|0x001e: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0021: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0020|RETURN\lORIG_RETURN\l|0x0020: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0021: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.ranges.URangesKt___URangesKt.contains\-fz5IDCE((r5 I:kotlin.ranges.UIntRange A[D('$this$contains_u2dfz5IDCE' kotlin.ranges.UIntRange), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[D('value' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0020 \-\> B:18:0x0021, CROSS_EDGE: B:13:0x0011 \-\> B:17:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0021: r5 '$this$contains_u2dfz5IDCE' Lkotlin\/ranges\/UIntRange;\l  \-1 \-0x0021: r6 'value' J\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

