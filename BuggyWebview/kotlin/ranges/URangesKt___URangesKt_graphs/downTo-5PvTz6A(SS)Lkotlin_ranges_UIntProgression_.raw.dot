digraph "CFG forkotlin.ranges.URangesKt___URangesKt.downTo\-5PvTz6A(SS)Lkotlin\/ranges\/UIntProgression;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:kotlin.ranges.UIntProgression$Companion) =  kotlin.ranges.UIntProgression.Companion kotlin.ranges.UIntProgression$Companion  (LINE:325)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (65535(0xffff, float:9.1834E\-41) ??[int, float, short, byte, char]) \l0x0005: ARITH  (r2 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char] A[D('$this$downTo_u2d5PvTz6A' short)]) & (r1 I:??[int, boolean, short, byte, char]) \l0x0007: INVOKE  (r2 I:int) = (r2 I:int) type: STATIC call: kotlin.UInt.constructor\-impl(int):int A[MD:(int):int (m)]\l0x000b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r5 I:??[int, boolean, short, byte, char] A[D('to' short)]) \l0x000c: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: kotlin.UInt.constructor\-impl(int):int A[MD:(int):int (m)]\l0x0010: CONST  (r3 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0011: INVOKE  (r0 I:kotlin.ranges.UIntProgression) = (r0 I:kotlin.ranges.UIntProgression$Companion), (r2 I:int), (r1 I:int), (r3 I:int) type: VIRTUAL call: kotlin.ranges.UIntProgression.Companion.fromClosedRange\-Nkh28Cs(int, int, int):kotlin.ranges.UIntProgression A[MD:(int, int, int):kotlin.ranges.UIntProgression (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|RETURN\l|0x0015: RETURN  (r0 I:kotlin.ranges.UIntProgression) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.ranges.UIntProgression kotlin.ranges.URangesKt___URangesKt.downTo\-5PvTz6A((r4 I:short A[D('$this$downTo_u2d5PvTz6A' short), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:short A[D('to' short), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0015: r4 '$this$downTo_u2d5PvTz6A' S\l  \-1 \-0x0015: r5 'to' S\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

