digraph "CFG forkotlin.ranges.URangesKt___URangesKt.step(Lkotlin\/ranges\/ULongProgression;J)Lkotlin\/ranges\/ULongProgression;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r11 I:java.lang.Object A[D('$this$step' kotlin.ranges.ULongProgression)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[long, double]) = (0 ??[long, double])  (LINE:362)\l0x0007: CMP_L  (r2 I:int) = (r12 I:long A[D('step' long)]), (r0 I:long) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0009|0x0009: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:17:0x000d \l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|0x000b: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|0x000e: INVOKE  (r3 I:java.lang.Long) = (r12 I:long A[D('step' long)]) type: STATIC call: java.lang.Long.valueOf(long):java.lang.Long A[MD:(long):java.lang.Long (c)]\l0x0012: CHECK_CAST (r3 I:java.lang.Number) = (java.lang.Number) (r3 I:??[OBJECT, ARRAY]) \l0x0014: INVOKE  (r2 I:boolean), (r3 I:java.lang.Number) type: STATIC call: kotlin.ranges.RangesKt.checkStepIsPositive(boolean, java.lang.Number):void A[MD:(boolean, java.lang.Number):void (m)]\l0x0017: SGET  (r4 I:kotlin.ranges.ULongProgression$Companion) =  kotlin.ranges.ULongProgression.Companion kotlin.ranges.ULongProgression$Companion  (LINE:363)\l0x0019: INVOKE  (r5 I:long) = (r11 I:kotlin.ranges.ULongProgression A[D('$this$step' kotlin.ranges.ULongProgression)]) type: VIRTUAL call: kotlin.ranges.ULongProgression.getFirst\-s\-VKNKU():long A[MD:():long (m)]\l0x001d: INVOKE  (r7 I:long) = (r11 I:kotlin.ranges.ULongProgression A[D('$this$step' kotlin.ranges.ULongProgression)]) type: VIRTUAL call: kotlin.ranges.ULongProgression.getLast\-s\-VKNKU():long A[MD:():long (m)]\l0x0021: INVOKE  (r2 I:long) = (r11 I:kotlin.ranges.ULongProgression A[D('$this$step' kotlin.ranges.ULongProgression)]) type: VIRTUAL call: kotlin.ranges.ULongProgression.getStep():long A[MD:():long (m)]\l0x0025: CMP_L  (r9 I:int) = (r2 I:long), (r0 I:long) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0027|0x0027: IF  (r9 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:21:0x002b \l}"];
Node_20 [shape=record,label="{20\:\ 0x0029|0x0029: MOVE  (r9 I:??[long, double]) = (r12 I:??[long, double] A[D('step' long)]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x002d|0x002d: INVOKE  (r0 I:kotlin.ranges.ULongProgression) = (r4 I:kotlin.ranges.ULongProgression$Companion), (r5 I:long), (r7 I:long), (r9 I:long) type: VIRTUAL call: kotlin.ranges.ULongProgression.Companion.fromClosedRange\-7ftBX0g(long, long, long):kotlin.ranges.ULongProgression A[MD:(long, long, long):kotlin.ranges.ULongProgression (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0031|RETURN\l|0x0031: RETURN  (r0 I:kotlin.ranges.ULongProgression) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x002b|0x002b: NEG  (r0 I:long) = (r12 I:long A[D('step' long)]) \l0x002c: MOVE  (r9 I:??[long, double]) = (r0 I:??[long, double]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x000d|0x000d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final kotlin.ranges.ULongProgression kotlin.ranges.URangesKt___URangesKt.step((r11 I:kotlin.ranges.ULongProgression A[D('$this$step' kotlin.ranges.ULongProgression), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:long A[D('step' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x002b \-\> B:22:0x002d, CROSS_EDGE: B:17:0x000d \-\> B:18:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0031: r11 '$this$step' Lkotlin\/ranges\/ULongProgression;\l  \-1 \-0x0031: r12 'step' J\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_22;
Node_17 -> Node_18;
}

