digraph "CFG forkotlin.ranges.URangesKt___URangesKt.until\-5PvTz6A(SS)Lkotlin\/ranges\/UIntRange;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (65535(0xffff, float:9.1834E\-41) ??[int, float, short, byte, char])  (LINE:410)\l0x0003: ARITH  (r1 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char] A[D('to' short)]) & (r0 I:??[int, boolean, short, byte, char]) \l0x0005: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: kotlin.jvm.internal.Intrinsics.compare(int, int):int A[MD:(int, int):int (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x000a|0x000a: IF  (r1 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:14:0x0013 \l}"];
Node_12 [shape=record,label="{12\:\ 0x000c|0x000c: SGET  (r0 I:kotlin.ranges.UIntRange$Companion) =  kotlin.ranges.UIntRange.Companion kotlin.ranges.UIntRange$Companion \l0x000e: INVOKE  (r0 I:kotlin.ranges.UIntRange) = (r0 I:kotlin.ranges.UIntRange$Companion) type: VIRTUAL call: kotlin.ranges.UIntRange.Companion.getEMPTY():kotlin.ranges.UIntRange A[MD:():kotlin.ranges.UIntRange (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0012|RETURN\l|0x0012: RETURN  (r0 I:kotlin.ranges.UIntRange) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0013|0x0013: ARITH  (r1 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char] A[D('$this$until_u2d5PvTz6A' short)]) & (r0 I:??[int, boolean, short, byte, char])  (LINE:411)\l0x0015: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: kotlin.UInt.constructor\-impl(int):int A[MD:(int):int (m)]\l0x0019: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (r5 I:??[int, boolean, short, byte, char] A[D('to' short)]) \l0x001a: INVOKE  (r0 I:int) = (r0 I:int) type: STATIC call: kotlin.UInt.constructor\-impl(int):int A[MD:(int):int (m)]\l0x001e: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l0x0020: INVOKE  (r0 I:int) = (r0 I:int) type: STATIC call: kotlin.UInt.constructor\-impl(int):int A[MD:(int):int (m)]\l0x0024: NEW_INSTANCE  (r2 I:kotlin.ranges.UIntRange) =  kotlin.ranges.UIntRange \l0x0026: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0027: INVOKE  (r2 I:kotlin.ranges.UIntRange), (r1 I:int), (r0 I:int), (r3 I:kotlin.jvm.internal.DefaultConstructorMarker) type: DIRECT call: kotlin.ranges.UIntRange.\<init\>(int, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(int, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|RETURN\l|0x002a: RETURN  (r2 I:kotlin.ranges.UIntRange) \l}"];
MethodNode[shape=record,label="{public static final kotlin.ranges.UIntRange kotlin.ranges.URangesKt___URangesKt.until\-5PvTz6A((r4 I:short A[D('$this$until_u2d5PvTz6A' short), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:short A[D('to' short), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x002a \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002a: r4 '$this$until_u2d5PvTz6A' S\l  \-1 \-0x002a: r5 'to' S\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

