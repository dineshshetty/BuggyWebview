digraph "CFG forkotlin.ranges.URangesKt___URangesKt.until\-J1ME1BU(II)Lkotlin\/ranges\/UIntRange;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:386)\l0x0001: INVOKE  (r0 I:int) = (r4 I:int A[D('to' int)]), (r0 I:int) type: STATIC call: kotlin.UnsignedKt.uintCompare(int, int):int A[MD:(int, int):int (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0005|0x0005: IF  (r0 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:14:0x000e \l}"];
Node_12 [shape=record,label="{12\:\ 0x0007|0x0007: SGET  (r0 I:kotlin.ranges.UIntRange$Companion) =  kotlin.ranges.UIntRange.Companion kotlin.ranges.UIntRange$Companion \l0x0009: INVOKE  (r0 I:kotlin.ranges.UIntRange) = (r0 I:kotlin.ranges.UIntRange$Companion) type: VIRTUAL call: kotlin.ranges.UIntRange.Companion.getEMPTY():kotlin.ranges.UIntRange A[MD:():kotlin.ranges.UIntRange (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x000d|RETURN\l|0x000d: RETURN  (r0 I:kotlin.ranges.UIntRange) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000e|0x000e: NEW_INSTANCE  (r0 I:kotlin.ranges.UIntRange) =  kotlin.ranges.UIntRange  (LINE:387)\l0x0010: ARITH  (r1 I:int) = (r4 I:int A[D('to' int)]) + (\-1 int) \l0x0012: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: kotlin.UInt.constructor\-impl(int):int A[MD:(int):int (m)]\l0x0016: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: INVOKE  \l  (r0 I:kotlin.ranges.UIntRange)\l  (r3 I:int A[D('$this$until_u2dJ1ME1BU' int)])\l  (r1 I:int)\l  (r2 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlin.ranges.UIntRange.\<init\>(int, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(int, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001a|RETURN\l|0x001a: RETURN  (r0 I:kotlin.ranges.UIntRange) \l}"];
MethodNode[shape=record,label="{public static final kotlin.ranges.UIntRange kotlin.ranges.URangesKt___URangesKt.until\-J1ME1BU((r3 I:int A[D('$this$until_u2dJ1ME1BU' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('to' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x001a \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001a: r3 '$this$until_u2dJ1ME1BU' I\l  \-1 \-0x001a: r4 'to' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

