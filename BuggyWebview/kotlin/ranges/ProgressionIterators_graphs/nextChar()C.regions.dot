digraph "CFG forkotlin.ranges.CharProgressionIterator.nextChar()C" {
subgraph cluster_Region_362558049 {
label = "R(3:1|(1:(2:(1:10)|(1:5)))(1:11)|7)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|int int r0 = r3.next\l}"];
subgraph cluster_IfRegion_672379230 {
label = "IF [B:15:0x0004] THEN: R(1:(2:(1:10)|(1:5))) ELSE: R(1:11)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0004|if (r0 == r3.finalElement) goto L3\l}"];
subgraph cluster_Region_396336498 {
label = "R(1:(2:(1:10)|(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_582174622 {
label = "R(2:(1:10)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_802528075 {
label = "IF [B:17:0x0008] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0008|if (r3.hasNext == false) goto L9\l}"];
subgraph cluster_Region_1767195880 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0013|throw new java.util.NoSuchElementException()\l}"];
}
}
subgraph cluster_Region_46801085 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000a|r3.hasNext = false\l}"];
}
}
}
subgraph cluster_Region_981276877 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0014|r3.next += r3.step\l}"];
}
}
Node_23 [shape=record,label="{23\:\ 0x001c|RETURN\l|return (char) r0\l}"];
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0006}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x001b}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000e}"];
MethodNode[shape=record,label="{public char kotlin.ranges.CharProgressionIterator.nextChar((r3v0 'this' kotlin.ranges.CharProgressionIterator A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0013 \-\> B:13:?, CROSS_EDGE: B:21:0x0014 \-\> B:22:0x001b\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlin.collections.CharIterator.nextChar():char]\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_21[style=dashed];
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_20 -> Node_13;
Node_18 -> Node_22;
Node_21 -> Node_22;
Node_23 -> Node_13;
Node_12 -> Node_14;
Node_16 -> Node_17;
Node_22 -> Node_23;
Node_19 -> Node_20;
}

