digraph "CFG forkotlin.ranges.ULongRange.hashCode()I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r7 I:kotlin.ranges.ULongRange) type: VIRTUAL call: kotlin.ranges.ULongRange.isEmpty():boolean A[MD:():boolean (m)] (LINE:37)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0008 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|SYNTHETIC\lRETURN\l|0x0006: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0034: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0008|0x0008: INVOKE  (r0 I:long) = (r7 I:kotlin.ranges.ULongRange) type: VIRTUAL call: kotlin.ranges.ULongRange.getFirst\-s\-VKNKU():long A[MD:():long (m)]\l0x000c: INVOKE  (r2 I:long) = (r7 I:kotlin.ranges.ULongRange) type: VIRTUAL call: kotlin.ranges.ULongRange.getFirst\-s\-VKNKU():long A[MD:():long (m)]\l0x0010: CONST  (r4 I:??[int, float, short, byte, char]) = (32 ??[int, float, short, byte, char]) \l0x0012: ARITH  (r2 I:long) = (r2 I:long) \>\>\> (r4 I:long) \l0x0013: INVOKE  (r2 I:long) = (r2 I:long) type: STATIC call: kotlin.ULong.constructor\-impl(long):long A[MD:(long):long (m)]\l0x0017: ARITH  (r0 I:long) = (r0 I:long) ^ (r2 I:long) \l0x0018: INVOKE  (r0 I:long) = (r0 I:long) type: STATIC call: kotlin.ULong.constructor\-impl(long):long A[MD:(long):long (m)]\l0x001c: CAST (r1 I:int) = (int) (r0 I:long) \l0x001d: ARITH  (r1 I:int) = (r1 I:int) * (31 int) \l0x001f: INVOKE  (r2 I:long) = (r7 I:kotlin.ranges.ULongRange) type: VIRTUAL call: kotlin.ranges.ULongRange.getLast\-s\-VKNKU():long A[MD:():long (m)]\l0x0023: INVOKE  (r5 I:long) = (r7 I:kotlin.ranges.ULongRange) type: VIRTUAL call: kotlin.ranges.ULongRange.getLast\-s\-VKNKU():long A[MD:():long (m)]\l0x0027: ARITH  (r4 I:long) = (r5 I:long) \>\>\> (r4 I:long) \l0x0029: INVOKE  (r4 I:long) = (r4 I:long) type: STATIC call: kotlin.ULong.constructor\-impl(long):long A[MD:(long):long (m)]\l0x002d: ARITH  (r2 I:long) = (r2 I:long) ^ (r4 I:long) \l0x002e: INVOKE  (r2 I:long) = (r2 I:long) type: STATIC call: kotlin.ULong.constructor\-impl(long):long A[MD:(long):long (m)]\l0x0032: CAST (r0 I:int) = (int) (r2 I:long) \l0x0033: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0034|RETURN\lORIG_RETURN\l|0x0034: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int kotlin.ranges.ULongRange.hashCode((r7 'this' I:kotlin.ranges.ULongRange A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0008 \-\> B:14:0x0034\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlin.ranges.ULongProgression.hashCode():int]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

