digraph "CFG forkotlin.ranges.ULongRange.toString()Ljava\/lang\/String;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:39)\l0x0002: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0005: INVOKE  (r1 I:long) = (r3 I:kotlin.ranges.ULongRange) type: VIRTUAL call: kotlin.ranges.ULongRange.getFirst\-s\-VKNKU():long A[MD:():long (m)]\l0x0009: INVOKE  (r1 I:java.lang.String) = (r1 I:long) type: STATIC call: kotlin.ULong.toString\-impl(long):java.lang.String A[MD:(long):java.lang.String (m)]\l0x000d: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0010: CONST_STR  (r1 I:java.lang.String) =  \"..\" \l0x0012: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0015: INVOKE  (r1 I:long) = (r3 I:kotlin.ranges.ULongRange) type: VIRTUAL call: kotlin.ranges.ULongRange.getLast\-s\-VKNKU():long A[MD:():long (m)]\l0x0019: INVOKE  (r1 I:java.lang.String) = (r1 I:long) type: STATIC call: kotlin.ULong.toString\-impl(long):java.lang.String A[MD:(long):java.lang.String (m)]\l0x001d: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0020: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|RETURN\l|0x0024: RETURN  (r0 I:java.lang.String) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.String kotlin.ranges.ULongRange.toString((r3 'this' I:kotlin.ranges.ULongRange A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlin.ranges.ULongProgression.toString():java.lang.String]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

