digraph "CFG forkotlin.ranges.LongProgression.hashCode()I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r9 I:kotlin.ranges.LongProgression) type: VIRTUAL call: kotlin.ranges.LongProgression.isEmpty():boolean A[MD:():boolean (m)] (LINE:181)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0008 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|SYNTHETIC\lRETURN\l|0x0006: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0023: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0008|0x0008: CONST  (r0 I:??[int, float, short, byte, char]) = (31 ??[int, float, short, byte, char]) \l0x000a: CAST (r0 I:long) = (long) (r0 I:int) \l0x000b: IGET  (r2 I:long) = (r9 I:kotlin.ranges.LongProgression) kotlin.ranges.LongProgression.first long \l0x000d: CONST  (r4 I:??[int, float, short, byte, char]) = (32 ??[int, float, short, byte, char]) \l0x000f: ARITH  (r5 I:long) = (r2 I:long) \>\>\> (r4 I:long) \l0x0011: ARITH  (r2 I:long) = (r2 I:long) ^ (r5 I:long) \l0x0012: ARITH  (r2 I:long) = (r2 I:long) * (r0 I:long) \l0x0014: IGET  (r5 I:long) = (r9 I:kotlin.ranges.LongProgression) kotlin.ranges.LongProgression.last long \l0x0016: ARITH  (r7 I:long) = (r5 I:long) \>\>\> (r4 I:long) \l0x0018: ARITH  (r5 I:long) = (r5 I:long) ^ (r7 I:long) \l0x0019: ARITH  (r2 I:long) = (r2 I:long) + (r5 I:long) \l0x001a: ARITH  (r0 I:long) = (r0 I:long) * (r2 I:long) \l0x001c: IGET  (r2 I:long) = (r9 I:kotlin.ranges.LongProgression) kotlin.ranges.LongProgression.step long \l0x001e: ARITH  (r4 I:long) = (r2 I:long) \>\>\> (r4 I:long) \l0x0020: ARITH  (r2 I:long) = (r2 I:long) ^ (r4 I:long) \l0x0021: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l0x0022: CAST (r0 I:int) = (int) (r0 I:long) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|RETURN\lORIG_RETURN\l|0x0023: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int kotlin.ranges.LongProgression.hashCode((r9 'this' I:kotlin.ranges.LongProgression A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0008 \-\> B:14:0x0023\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlin.ranges.LongProgression.hashCode():int]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

