digraph "CFG forkotlin.ranges.LongProgression.isEmpty()Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:long) = (r7 I:kotlin.ranges.LongProgression) kotlin.ranges.LongProgression.step long  (LINE:174)\l0x0002: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0003: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: CONST  (r4 I:??[long, double]) = (0 ??[long, double]) \l0x0006: CMP_L  (r6 I:int) = (r0 I:long), (r4 I:long) \l0x0008: IGET  (r0 I:long) = (r7 I:kotlin.ranges.LongProgression) kotlin.ranges.LongProgression.first long \l0x000a: IGET  (r4 I:long) = (r7 I:kotlin.ranges.LongProgression) kotlin.ranges.LongProgression.last long \l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|0x000c: IF  (r6 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:21:0x0013 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|0x000e: CMP_L  (r6 I:int) = (r0 I:long), (r4 I:long) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: IF  (r6 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:24:0x0018 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: RETURN  (r2 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0019: RETURN  (r2 I:boolean) A[SYNTHETIC]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|0x0013: CMP_L  (r6 I:int) = (r0 I:long), (r4 I:long) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|0x0015: IF  (r6 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:24:0x0018 \l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|0x0019: RETURN  (r2 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public boolean kotlin.ranges.LongProgression.isEmpty((r7 'this' I:kotlin.ranges.LongProgression A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0010 \-\> B:25:0x0019, CROSS_EDGE: B:22:0x0015 \-\> B:24:0x0018, CROSS_EDGE: B:22:0x0015 \-\> B:25:0x0019\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlin.ranges.ClosedRange.isEmpty():boolean, kotlin.ranges.LongProgression.isEmpty():boolean]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_24;
Node_19 -> Node_27[style=dashed];
Node_24 -> Node_15;
Node_27 -> Node_15;
Node_21 -> Node_22;
Node_22 -> Node_24;
Node_22 -> Node_26[style=dashed];
Node_26 -> Node_15;
}

