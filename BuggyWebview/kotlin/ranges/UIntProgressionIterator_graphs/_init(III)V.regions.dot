digraph "CFG forkotlin.ranges.UIntProgressionIterator.\<init\>(III)V" {
subgraph cluster_Region_1762156137 {
label = "R(4:1|(1:4)|5|8)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0000|r3.finalElement = r5\lboolean r0 = true\lint int r2 = kotlin.UnsignedUtils.uintCompare(r4, r5)\l}"];
subgraph cluster_IfRegion_112356476 {
label = "IF [B:18:0x000b, B:21:0x0010, B:19:0x000d] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000b|if (r6 \<= 0) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|ADDED_TO_REGION\l|if (r2 \< 0) goto L4\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|ADDED_TO_REGION\l|if (r2 \> 0) goto L4\l}"];
subgraph cluster_Region_1701466189 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0013|r0 = false\l}"];
}
}
Node_24 [shape=record,label="{24\:\ 0x0014|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v0 boolean), (r0v7 boolean), (r0v0 boolean) binds: [B:21:0x0010, B:23:0x0013, B:19:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|r3.hasNext = r0\lr3.step = kotlin.UInt.m238constructorimpl(r6)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0023|PHI: r0 \l  PHI: (r0v5 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r3.next = r3.hasNext ? r4 : r5\l}"];
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x001e}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0020}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0025}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0022}"];
MethodNode[shape=record,label="{private void kotlin.ranges.UIntProgressionIterator.\<init\>((r3v0 'this' kotlin.ranges.UIntProgressionIterator A[IMMUTABLE_TYPE, THIS]), (r4v0 'first' int A[D('first' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'last' int A[D('last' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'step' int A[D('step' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0022 \-\> B:28:0x0023, CROSS_EDGE: B:19:0x000d \-\> B:24:0x0014, CROSS_EDGE: B:21:0x0010 \-\> B:23:0x0013, CROSS_EDGE: B:21:0x0010 \-\> B:24:0x0014\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_15;Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_24[style=dashed];
Node_19 -> Node_23;
Node_19 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_28 -> Node_29;
Node_15 -> Node_17;
Node_25 -> Node_26;
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_29 -> Node_16;
Node_27 -> Node_28;
}

