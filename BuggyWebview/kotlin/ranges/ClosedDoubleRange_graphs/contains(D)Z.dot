digraph "CFG forkotlin.ranges.ClosedDoubleRange.contains(D)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000}"];
Node_13 [shape=record,label="{13\:\ 0x0004|if ((r4 \> r3._start ? 1 : (r4 == r3._start ? 0 : \-1)) \< 0) goto L7\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006}"];
Node_15 [shape=record,label="{15\:\ 0x000a|if ((r4 \> r3._endInclusive ? 1 : (r4 == r3._endInclusive ? 0 : \-1)) \> 0) goto L7\l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|SYNTHETIC\lRETURN\l|return true\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|RETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean kotlin.ranges.ClosedDoubleRange.contains((r3v0 'this' kotlin.ranges.ClosedDoubleRange A[IMMUTABLE_TYPE, THIS]), (r4v0 'value' double A[D('value' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000e \-\> B:18:0x000f, CROSS_EDGE: B:13:0x0004 \-\> B:17:0x000e\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

