digraph "CFG forkotlin.ranges.RangesKt__RangesKt.rangeTo(DD)Lkotlin\/ranges\/ClosedFloatingPointRange;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlin.ranges.ClosedDoubleRange) =  kotlin.ranges.ClosedDoubleRange  (LINE:97)\l0x0002: INVOKE  (r0 I:kotlin.ranges.ClosedDoubleRange), (r1 I:double A[D('$this$rangeTo' double)]), (r3 I:double A[D('that' double)]) type: DIRECT call: kotlin.ranges.ClosedDoubleRange.\<init\>(double, double):void A[MD:(double, double):void (m)]\l0x0005: CHECK_CAST (r0 I:kotlin.ranges.ClosedFloatingPointRange) = (kotlin.ranges.ClosedFloatingPointRange) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:kotlin.ranges.ClosedFloatingPointRange\<java.lang.Double\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.ranges.ClosedFloatingPointRange\<java.lang.Double\> kotlin.ranges.RangesKt__RangesKt.rangeTo((r1 I:double A[D('$this$rangeTo' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:double A[D('that' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r1 '$this$rangeTo' D\l  \-1 \-0x0007: r3 'that' D\lSIGNATURE: (DD)Lkotlin\/ranges\/ClosedFloatingPointRange\<Ljava\/lang\/Double;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

