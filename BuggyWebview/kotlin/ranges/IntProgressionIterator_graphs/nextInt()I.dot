digraph "CFG forkotlin.ranges.IntProgressionIterator.nextInt()I" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|int r0 = r3.next\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|if (r0 != r3.finalElement) goto L10\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006}"];
Node_16 [shape=record,label="{16\:\ 0x0008|if (r3.hasNext == false) goto L8\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|r3.hasNext = false\l}"];
Node_21 [shape=record,label="{21\:\ 0x001b|RETURN\l|return r0\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000e}"];
Node_19 [shape=record,label="{19\:\ 0x0013|throw new java.util.NoSuchElementException()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|r3.next = r3.next + r3.step\l}"];
MethodNode[shape=record,label="{public int kotlin.ranges.IntProgressionIterator.nextInt((r3v0 'this' kotlin.ranges.IntProgressionIterator A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0013 \-\> B:12:?, CROSS_EDGE: B:20:0x0014 \-\> B:21:0x001b\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlin.collections.IntIterator.nextInt():int]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_21;
Node_21 -> Node_12;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
}

