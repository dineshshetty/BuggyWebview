digraph "CFG forkotlin.ranges.IntProgressionIterator.\<init\>(III)V" {
subgraph cluster_Region_86513805 {
label = "R(4:1|(1:4)|5|8)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0000|r2.step = r5\lr2.finalElement = r4\lboolean r0 = true\l}"];
subgraph cluster_IfRegion_391779935 {
label = "IF [B:18:0x0009, B:21:0x000e, B:19:0x000b] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0009|if (r5 \<= 0) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|ADDED_TO_REGION\l|if (r3 \< r4) goto L4\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|ADDED_TO_REGION\l|if (r3 \> r4) goto L4\l}"];
subgraph cluster_Region_700238876 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0011|r0 = false\l}"];
}
}
Node_24 [shape=record,label="{24\:\ 0x0012|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v0 boolean), (r0v5 boolean), (r0v0 boolean) binds: [B:21:0x000e, B:23:0x0011, B:19:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|r2.hasNext = r0\l}"];
Node_28 [shape=record,label="{28\:\ 0x0019|PHI: r0 \l  PHI: (r0v3 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r2.next = r0 ? r3 : r4\l}"];
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0014}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0016}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x001b}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0018}"];
MethodNode[shape=record,label="{public void kotlin.ranges.IntProgressionIterator.\<init\>((r2v0 'this' kotlin.ranges.IntProgressionIterator A[IMMUTABLE_TYPE, THIS]), (r3v0 'first' int A[D('first' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'last' int A[D('last' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'step' int A[D('step' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0018 \-\> B:28:0x0019, CROSS_EDGE: B:19:0x000b \-\> B:24:0x0012, CROSS_EDGE: B:21:0x000e \-\> B:23:0x0011, CROSS_EDGE: B:21:0x000e \-\> B:24:0x0012\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_15;Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_24[style=dashed];
Node_19 -> Node_23;
Node_19 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_28 -> Node_29;
Node_15 -> Node_17;
Node_25 -> Node_26;
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_29 -> Node_16;
Node_27 -> Node_28;
}

