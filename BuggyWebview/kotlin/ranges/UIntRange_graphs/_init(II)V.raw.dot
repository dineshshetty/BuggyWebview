digraph "CFG forkotlin.ranges.UIntRange.\<init\>(II)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:19)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0002: INVOKE  \l  (r2 I:kotlin.ranges.UIntProgression)\l  (r3 I:int A[D('start' int)])\l  (r4 I:int A[D('endInclusive' int)])\l  (r0 I:int)\l  (r1 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlin.ranges.UIntProgression.\<init\>(int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0005|RETURN\l|0x0005: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void kotlin.ranges.UIntRange.\<init\>((r2 'this' I:kotlin.ranges.UIntRange A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('endInclusive' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0005: r3 'start' I\l  \-1 \-0x0005: r4 'endInclusive' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

