digraph "CFG forkotlin.ranges.ComparableRange.hashCode()I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r2 I:kotlin.ranges.ComparableRange) type: VIRTUAL call: kotlin.ranges.ComparableRange.isEmpty():boolean A[MD:():boolean (m)] (LINE:25)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0008 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|SYNTHETIC\lRETURN\l|0x0006: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x001b: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0008|0x0008: INVOKE  (r0 I:java.lang.Comparable) = (r2 I:kotlin.ranges.ComparableRange) type: VIRTUAL call: kotlin.ranges.ComparableRange.getStart():java.lang.Comparable A[MD:():T extends java.lang.Comparable\<? super T\> (m)]\l0x000c: INVOKE  (r0 I:int) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.hashCode():int A[MD:():int (c)]\l0x0010: ARITH  (r0 I:int) = (r0 I:int) * (31 int) \l0x0012: INVOKE  (r1 I:java.lang.Comparable) = (r2 I:kotlin.ranges.ComparableRange) type: VIRTUAL call: kotlin.ranges.ComparableRange.getEndInclusive():java.lang.Comparable A[MD:():T extends java.lang.Comparable\<? super T\> (m)]\l0x0016: INVOKE  (r1 I:int) = (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.hashCode():int A[MD:():int (c)]\l0x001a: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x001b|RETURN\lORIG_RETURN\l|0x001b: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int kotlin.ranges.ComparableRange.hashCode((r2 'this' I:kotlin.ranges.ComparableRange\<T extends java.lang.Comparable\<? super T\>\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0008 \-\> B:14:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: [T extends java.lang.Comparable\<? super T\>]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

