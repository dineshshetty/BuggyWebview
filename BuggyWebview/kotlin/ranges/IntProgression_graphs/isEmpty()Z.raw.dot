digraph "CFG forkotlin.ranges.IntProgression.isEmpty()Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r4 I:kotlin.ranges.IntProgression) kotlin.ranges.IntProgression.step int  (LINE:112)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:21:0x000d \l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: IGET  (r0 I:int) = (r4 I:kotlin.ranges.IntProgression) kotlin.ranges.IntProgression.first int \l0x0008: IGET  (r3 I:int) = (r4 I:kotlin.ranges.IntProgression) kotlin.ranges.IntProgression.last int \l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: IF  (r0 I:??[int, byte, short, char]) \<= (r3 I:??[int, byte, short, char])  \-\> B:24:0x0014 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0014|RETURN\lORIG_RETURN\l|0x0014: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: RETURN  (r1 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0015: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|0x000d: IGET  (r0 I:int) = (r4 I:kotlin.ranges.IntProgression) kotlin.ranges.IntProgression.first int \l0x000f: IGET  (r3 I:int) = (r4 I:kotlin.ranges.IntProgression) kotlin.ranges.IntProgression.last int \l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: IF  (r0 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:24:0x0014 \l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|0x0015: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public boolean kotlin.ranges.IntProgression.isEmpty((r4 'this' I:kotlin.ranges.IntProgression A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000a \-\> B:25:0x0015, CROSS_EDGE: B:22:0x0011 \-\> B:24:0x0014, CROSS_EDGE: B:22:0x0011 \-\> B:25:0x0015\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlin.ranges.ClosedRange.isEmpty():boolean, kotlin.ranges.IntProgression.isEmpty():boolean]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_24;
Node_19 -> Node_27[style=dashed];
Node_24 -> Node_15;
Node_27 -> Node_15;
Node_21 -> Node_22;
Node_22 -> Node_24;
Node_22 -> Node_26[style=dashed];
Node_26 -> Node_15;
}

