digraph "CFG forkotlin.NumbersKt__FloorDivModKt.mod(DD)D" {
subgraph cluster_Region_1544358575 {
label = "R(3:1|(1:(1:10))|13)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0000|double double r0 = r9 % r11\l}"];
subgraph cluster_IfRegion_1720582552 {
label = "IF [B:22:0x000d] THEN: R(1:(1:10)) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000d|PHI: r4 \l  PHI: (r4v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r0 == 0.0d) == false) goto L5\l}"];
subgraph cluster_Region_1895722553 {
label = "R(1:(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1390426139 {
label = "IF [B:27:0x001d] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x001d|PHI: r2 \l  PHI: (r2v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|if ((java.lang.Math.signum(r0) == java.lang.Math.signum(r11)) == false) goto L9\l}"];
subgraph cluster_Region_178248271 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return r0 + r11\l}"];
}
}
}
}
Node_30 [shape=record,label="{30\:\ 0x0023|RETURN\lORIG_RETURN\l|return r0\l}"];
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0008}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000a}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x000f}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0019}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x001c}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x001f}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0022}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000c}"];
MethodNode[shape=record,label="{private static final double kotlin.NumbersKt__FloorDivModKt.mod((r9v0 '$this$mod' double A[D('$this$mod' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'other' double A[D('other' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0022 \-\> B:30:0x0023, CROSS_EDGE: B:24:0x0019 \-\> B:27:0x001d, CROSS_EDGE: B:22:0x000d \-\> B:29:0x0022, CROSS_EDGE: B:21:0x000c \-\> B:22:0x000d\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_16;Node_18 -> Node_19;
Node_22 -> Node_23;
Node_22 -> Node_29[style=dashed];
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_31 -> Node_17;
Node_30 -> Node_17;
Node_16 -> Node_18;
Node_19 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_27;
Node_26 -> Node_27;
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_21 -> Node_22;
}

