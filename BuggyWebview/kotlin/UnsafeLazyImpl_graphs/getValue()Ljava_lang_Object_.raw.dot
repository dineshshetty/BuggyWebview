digraph "CFG forkotlin.UnsafeLazyImpl.getValue()Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object) = (r2 I:kotlin.UnsafeLazyImpl) kotlin.UnsafeLazyImpl._value java.lang.Object  (LINE:80)\l0x0002: SGET  (r1 I:kotlin.UNINITIALIZED_VALUE) =  kotlin.UNINITIALIZED_VALUE.INSTANCE kotlin.UNINITIALIZED_VALUE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0014 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|0x0006: IGET  (r0 I:kotlin.jvm.functions.Function0\<? extends T\>) = (r2 I:kotlin.UnsafeLazyImpl) kotlin.UnsafeLazyImpl.initializer kotlin.jvm.functions.Function0  (LINE:81)\l0x0008: INVOKE  (r0 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x000b: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlin.jvm.functions.Function0) type: INTERFACE call: kotlin.jvm.functions.Function0.invoke():java.lang.Object A[MD:():R (m)]\l0x000f: IPUT  (r0 I:java.lang.Object), (r2 I:kotlin.UnsafeLazyImpl) kotlin.UnsafeLazyImpl._value java.lang.Object \l0x0011: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:82)\l0x0012: IPUT  (r0 I:kotlin.jvm.functions.Function0\<? extends T\>), (r2 I:kotlin.UnsafeLazyImpl) kotlin.UnsafeLazyImpl.initializer kotlin.jvm.functions.Function0 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0014|0x0014: IGET  (r0 I:java.lang.Object) = (r2 I:kotlin.UnsafeLazyImpl) kotlin.UnsafeLazyImpl._value java.lang.Object  (LINE:85)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:T) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public T kotlin.UnsafeLazyImpl.getValue((r2 'this' I:kotlin.UnsafeLazyImpl\<T\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0004 \-\> B:12:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: ()TT;\lMETHOD_OVERRIDE: [kotlin.Lazy.getValue():T]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

