digraph "CFG forkotlin.random.KotlinRandom.setSeed(J)V" {
subgraph cluster_Region_1372278865 {
label = "R(1:(2:(2:3|4)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_684341486 {
label = "R(2:(2:3|4)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_816340370 {
label = "IF [B:11:0x0002] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0002|if (r2.seedInitialized == false) goto L3\l}"];
subgraph cluster_Region_1710485914 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0004|r2.seedInitialized = true\l}"];
Node_13 [shape=record,label="{13\:\ 0x0007|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1857125549 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x000f|throw new java.lang.UnsupportedOperationException(\"Setting seed is not supported.\")\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0008}"];
MethodNode[shape=record,label="{public void kotlin.random.KotlinRandom.setSeed((r2v0 'this' kotlin.random.KotlinRandom A[IMMUTABLE_TYPE, THIS]), (r3v0 'seed' long A[D('seed' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x000f \-\> B:9:?\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [ClspMth\{java.util.Random.setSeed(long):void\}]\l}"];
MethodNode -> Node_8;Node_11 -> Node_12;
Node_11 -> Node_14[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_15 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_14 -> Node_15;
}

