digraph "CFG forkotlin.random.URandomKt.nextUInt\-a8DCA5k(Lkotlin\/random\/Random;II)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$this$nextUInt\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$nextUInt_u2da8DCA5k' kotlin.random.Random)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r5 I:int A[D('from' int)]), (r6 I:int A[D('until' int)]) type: STATIC call: kotlin.random.URandomKt.checkUIntRangeBounds\-J1ME1BU(int, int):void A[MD:(int, int):void (m)] (LINE:39)\l0x0008: CONST  (r0 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char])  (LINE:41)\l0x000a: ARITH  (r1 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char] A[D('from' int)]) ^ (r0 I:??[int, boolean, short, byte, char]) \l0x000c: ARITH  (r2 I:??[int, boolean]) = (r6 I:??[int, boolean, short, byte, char] A[D('until' int)]) ^ (r0 I:??[int, boolean, short, byte, char])  (LINE:42)\l0x000e: INVOKE  (r3 I:int) = \l  (r4 I:kotlin.random.Random A[D('$this$nextUInt_u2da8DCA5k' kotlin.random.Random)])\l  (r1 I:int A[D('signedFrom' int)])\l  (r2 I:int A[D('signedUntil' int)])\l type: VIRTUAL call: kotlin.random.Random.nextInt(int, int):int A[MD:(int, int):int (m)] (LINE:44)\l0x0012: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) ^ (r3 I:??[int, boolean, short, byte, char]) \l0x0013: INVOKE  (r3 I:int) = (r0 I:int A[D('signedResult' int)]) type: STATIC call: kotlin.UInt.constructor\-impl(int):int A[MD:(int):int (m)] (LINE:45)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|RETURN\l|0x0017: RETURN  (r3 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final int kotlin.random.URandomKt.nextUInt\-a8DCA5k((r4 I:kotlin.random.Random A[D('$this$nextUInt_u2da8DCA5k' kotlin.random.Random), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('from' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('until' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  0x0013\-0x0017: r0 'signedResult' I\l  0x000c\-0x0017: r1 'signedFrom' I\l  0x000e\-0x0017: r2 'signedUntil' I\l  \-1 \-0x0017: r4 '$this$nextUInt_u2da8DCA5k' Lkotlin\/random\/Random;\l  \-1 \-0x0017: r5 'from' I\l  \-1 \-0x0017: r6 'until' I\lRENAME_REASON:not valid java name\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

