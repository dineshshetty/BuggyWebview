digraph "CFG forkotlin.random.URandomKt.nextULong(Lkotlin\/random\/Random;Lkotlin\/ranges\/ULongRange;)J" {
subgraph cluster_Region_444988784 {
label = "R(2:1|(2:14|15)(1:(1:6)(1:(2:(2:10|11)|(1:13)))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r11, \"range\")\l}"];
subgraph cluster_IfRegion_567937733 {
label = "IF [B:3:0x000f] THEN: R(2:14|15) ELSE: R(1:(1:6)(1:(2:(2:10|11)|(1:13))))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r11.isEmpty() != false) goto L14\l}"];
subgraph cluster_Region_1814349116 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x006f}"];
Node_13 [shape=record,label="{13\:\ 0x0085|throw new java.lang.IllegalArgumentException(\"Cannot get random in empty range: \" + r11)\l}"];
}
subgraph cluster_Region_1514218118 {
label = "R(1:(1:6)(1:(2:(2:10|11)|(1:13)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1872378563 {
label = "IF [B:5:0x0021] THEN: R(1:6) ELSE: R(1:(2:(2:10|11)|(1:13))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0021|if (kotlin.UnsignedUtils.ulongCompare(r11.m1381getLastsVKNKU(), \-1L) \< 0) goto L5\l}"];
subgraph cluster_Region_510101975 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return m1372nextULongjmpaWc(r10, r11.m1380getFirstsVKNKU(), kotlin.ULong.m316constructorimpl(r11.m1381getLastsVKNKU() + kotlin.ULong.m316constructorimpl(1 & 4294967295L)))\l}"];
}
subgraph cluster_Region_1419817474 {
label = "R(1:(2:(2:10|11)|(1:13)))";
node [shape=record,color=blue];
subgraph cluster_Region_128384770 {
label = "R(2:(2:10|11)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_970232087 {
label = "IF [B:8:0x0046] THEN: R(2:10|11) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0046|if (kotlin.UnsignedUtils.ulongCompare(r11.m1380getFirstsVKNKU(), 0L) \> 0) goto L10\l}"];
subgraph cluster_Region_1656889374 {
label = "R(2:10|11)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0048|long long r0 = 1 & 4294967295L\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.ULong.m316constructorimpl(m1372nextULongjmpaWc(r10, kotlin.ULong.m316constructorimpl(r11.m1380getFirstsVKNKU() \- kotlin.ULong.m316constructorimpl(r0)), r11.m1381getLastsVKNKU()) + kotlin.ULong.m316constructorimpl(r0))\l}"];
}
}
subgraph cluster_Region_459247307 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x006e|RETURN\lORIG_RETURN\l|return nextULong(r10)\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0011}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0023}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x003c}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x006a}"];
MethodNode[shape=record,label="{public static final long kotlin.random.URandomKt.nextULong((r10v0 '$this$nextULong' kotlin.random.Random A[D('$this$nextULong' kotlin.random.Random), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'range' kotlin.ranges.ULongRange A[D('range' kotlin.ranges.ULongRange), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0048 \-\> B:11:0x006e, CROSS_EDGE: B:10:0x006a \-\> B:11:0x006e, CROSS_EDGE: B:13:0x0085 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_14 -> Node_1;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_15 -> Node_1;
Node_11 -> Node_1;
Node_0 -> Node_2;
Node_4 -> Node_5;
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_10 -> Node_11;
}

