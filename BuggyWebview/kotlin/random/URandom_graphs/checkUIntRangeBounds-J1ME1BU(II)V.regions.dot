digraph "CFG forkotlin.random.URandomKt.checkUIntRangeBounds\-J1ME1BU(II)V" {
subgraph cluster_Region_2002750814 {
label = "R(1:(1:(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1018307166 {
label = "R(1:(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1171770983 {
label = "IF [B:6:0x0009] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0009|PHI: r0 \l  PHI: (r0v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((kotlin.UnsignedUtils.uintCompare(r4, r3) \> 0) != true) goto L7\l}"];
subgraph cluster_Region_363957760 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0022|throw new java.lang.IllegalArgumentException(kotlin.random.RandomKt.boundsErrorMessage(kotlin.UInt.m232boximpl(r3), kotlin.UInt.m232boximpl(r4)).toString())\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0004}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0006}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000b}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000c}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0008}"];
MethodNode[shape=record,label="{public static final void kotlin.random.URandomKt.checkUIntRangeBounds\-J1ME1BU((r3v0 'from' int A[D('from' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'until' int A[D('until' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0022 \-\> B:1:?, CROSS_EDGE: B:5:0x0008 \-\> B:6:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lRENAME_REASON:not valid java name\l}"];
MethodNode -> Node_0;Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_9 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_5 -> Node_6;
}

