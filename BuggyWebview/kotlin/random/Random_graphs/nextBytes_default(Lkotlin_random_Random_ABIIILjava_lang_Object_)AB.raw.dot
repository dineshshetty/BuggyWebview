digraph "CFG forkotlin.random.Random.nextBytes$default(Lkotlin\/random\/Random;[BIIILjava\/lang\/Object;)[B" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0011  (LINE:221)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|0x0002: ARITH  (r5 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0007 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: ARITH  (r4 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x000c \l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|0x000b: ARRAY_LENGTH  (r3 I:int) = (r1 I:??[]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: INVOKE  (r0 I:byte[]) = (r0 I:kotlin.random.Random), (r1 I:byte[]), (r2 I:int), (r3 I:int) type: VIRTUAL call: kotlin.random.Random.nextBytes(byte[], int, int):byte[] A[MD:(byte[], int, int):byte[] (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:byte[]) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|0x0011: NEW_INSTANCE  (r0 I:java.lang.UnsupportedOperationException) =  java.lang.UnsupportedOperationException \l0x0013: CONST_STR  (r1 I:java.lang.String) =  \"Super calls with default arguments not supported in this target, function: nextBytes\" \l0x0015: INVOKE  (r0 I:java.lang.UnsupportedOperationException), (r1 I:java.lang.String) type: DIRECT call: java.lang.UnsupportedOperationException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|0x0018: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ byte[] kotlin.random.Random.nextBytes$default((r0 I:kotlin.random.Random A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:20:0x0009 \-\> B:22:0x000c, CROSS_EDGE: B:17:0x0004 \-\> B:19:0x0007, CROSS_EDGE: B:25:0x0018 \-\> B:14:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_24;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

