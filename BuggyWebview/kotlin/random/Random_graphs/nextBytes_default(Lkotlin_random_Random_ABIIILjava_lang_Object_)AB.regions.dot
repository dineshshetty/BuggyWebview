digraph "CFG forkotlin.random.Random.nextBytes$default(Lkotlin\/random\/Random;[BIIILjava\/lang\/Object;)[B" {
subgraph cluster_Region_1428972677 {
label = "R(1:(2:(3:(1:4)|(1:7)|9)|(1:12)))";
node [shape=record,color=blue];
subgraph cluster_Region_1000035615 {
label = "R(2:(3:(1:4)|(1:7)|9)|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1700565079 {
label = "IF [B:15:0x0000] THEN: R(3:(1:4)|(1:7)|9) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0000|if (r5 == null) goto L2\l}"];
subgraph cluster_Region_1839372132 {
label = "R(3:(1:4)|(1:7)|9)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1537007129 {
label = "IF [B:17:0x0004] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0004|if ((r4 & 2) != 0) goto L4\l}"];
subgraph cluster_Region_978209752 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0006|r2 = 0\l}"];
}
}
subgraph cluster_IfRegion_991013614 {
label = "IF [B:20:0x0009] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0009|if ((r4 & 4) != 0) goto L7\l}"];
subgraph cluster_Region_1114702687 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x000b|int r3 = r1.length\l}"];
}
}
Node_23 [shape=record,label="{23\:\ 0x0010|RETURN\l|return r0.nextBytes(r1, r2, r3)\l}"];
}
}
subgraph cluster_Region_2141221150 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0018|throw new java.lang.UnsupportedOperationException(\"Super calls with default arguments not supported in this target, function: nextBytes\")\l}"];
}
}
}
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0002}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0007|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:17:0x0004, B:18:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x000c|PHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:20:0x0009, B:21:0x000b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0011}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ byte[] kotlin.random.Random.nextBytes$default((r0v0 kotlin.random.Random A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:20:0x0009 \-\> B:22:0x000c, CROSS_EDGE: B:17:0x0004 \-\> B:19:0x0007, CROSS_EDGE: B:25:0x0018 \-\> B:14:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_15 -> Node_16;
Node_15 -> Node_24[style=dashed];
Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_22;
Node_23 -> Node_14;
Node_25 -> Node_14;
Node_13 -> Node_15;
Node_16 -> Node_17;
Node_19 -> Node_20;
Node_22 -> Node_23;
Node_24 -> Node_25;
}

