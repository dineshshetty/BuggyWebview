digraph "CFG forkotlin.random.FallbackThreadLocalRandom$implStorage$1.initialValue()Ljava\/util\/Random;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.util.Random) =  java.util.Random  (LINE:52)\l0x0002: INVOKE  (r0 I:java.util.Random) type: DIRECT call: java.util.Random.\<init\>():void A[MD:():void (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|RETURN\l|0x0005: RETURN  (r0 I:java.util.Random) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected java.util.Random kotlin.random.FallbackThreadLocalRandom$implStorage$1.initialValue((r1 'this' I:kotlin.random.FallbackThreadLocalRandom$implStorage$1 A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lMETHOD_OVERRIDE: [ClspMth\{java.lang.ThreadLocal.initialValue():T\}]\lBRIDGED_BY: kotlin.random.FallbackThreadLocalRandom$implStorage$1.initialValue():java.util.Random\lRENAME_REASON:avoid collision after fix types in other method\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

