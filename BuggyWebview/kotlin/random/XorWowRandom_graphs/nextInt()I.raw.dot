digraph "CFG forkotlin.random.XorWowRandom.nextInt()I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r4 I:kotlin.random.XorWowRandom) kotlin.random.XorWowRandom.x int  (LINE:40)\l0x0002: ARITH  (r1 I:int) = (r0 I:int A[D('t' int)]) \>\>\> (2 int)  (LINE:41)\l0x0004: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('t' int)]) ^ (r1 I:??[int, boolean, short, byte, char]) \l0x0005: IGET  (r1 I:int) = (r4 I:kotlin.random.XorWowRandom) kotlin.random.XorWowRandom.y int  (LINE:42)\l0x0007: IPUT  (r1 I:int), (r4 I:kotlin.random.XorWowRandom) kotlin.random.XorWowRandom.x int \l0x0009: IGET  (r1 I:int) = (r4 I:kotlin.random.XorWowRandom) kotlin.random.XorWowRandom.z int  (LINE:43)\l0x000b: IPUT  (r1 I:int), (r4 I:kotlin.random.XorWowRandom) kotlin.random.XorWowRandom.y int \l0x000d: IGET  (r1 I:int) = (r4 I:kotlin.random.XorWowRandom) kotlin.random.XorWowRandom.w int  (LINE:44)\l0x000f: IPUT  (r1 I:int), (r4 I:kotlin.random.XorWowRandom) kotlin.random.XorWowRandom.z int \l0x0011: IGET  (r1 I:int) = (r4 I:kotlin.random.XorWowRandom) kotlin.random.XorWowRandom.v int  (LINE:45)\l0x0013: IPUT  (r1 I:int A[D('v0' int)]), (r4 I:kotlin.random.XorWowRandom) kotlin.random.XorWowRandom.w int  (LINE:46)\l0x0015: ARITH  (r2 I:int) = (r0 I:int A[D('t' int)]) \<\< (1 int)  (LINE:47)\l0x0017: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) ^ (r0 I:??[int, boolean, short, byte, char] A[D('t' int)]) \l0x0018: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) ^ (r1 I:??[int, boolean, short, byte, char] A[D('v0' int)]) \l0x0019: ARITH  (r3 I:int) = (r1 I:int A[D('v0' int)]) \<\< (4 int) \l0x001b: ARITH  (r0 I:??[int, boolean] A[D('t' int)]) = (r2 I:??[int, boolean, short, byte, char]) ^ (r3 I:??[int, boolean, short, byte, char]) \l0x001d: IPUT  (r0 I:int A[D('t' int)]), (r4 I:kotlin.random.XorWowRandom) kotlin.random.XorWowRandom.v int  (LINE:48)\l0x001f: IGET  (r2 I:int) = (r4 I:kotlin.random.XorWowRandom) kotlin.random.XorWowRandom.addend int  (LINE:49)\l0x0021: CONST  (r3 I:??[int, float, short, byte, char]) = (362437(0x587c5, float:5.07882E\-40) ??[int, float, short, byte, char]) \l0x0024: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0025: IPUT  (r2 I:int), (r4 I:kotlin.random.XorWowRandom) kotlin.random.XorWowRandom.addend int \l0x0027: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int A[D('t' int)])  (LINE:50)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0028|RETURN\l|0x0028: RETURN  (r2 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int kotlin.random.XorWowRandom.nextInt((r4 'this' I:kotlin.random.XorWowRandom A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lDebug Info:\l  0x0002\-0x0028: r0 't' I\l  0x0013\-0x0028: r1 'v0' I\lMETHOD_OVERRIDE: [kotlin.random.Random.nextInt():int]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

