digraph "CFG forkotlin.random.XorWowRandom.\<init\>(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NOT  (r5 I:int) = (r8 I:int A[D('seed1' int)])  (LINE:28)\l0x0001: ARITH  (r0 I:int) = (r8 I:int A[D('seed1' int)]) \<\< (10 int) \l0x0003: ARITH  (r1 I:int) = (r9 I:int A[D('seed2' int)]) \>\>\> (4 int) \l0x0005: ARITH  (r6 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) ^ (r1 I:??[int, boolean, short, byte, char]) \l0x0007: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x000a: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('seed1' int)]) \l0x000b: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('seed2' int)]) \l0x000c: INVOKE  (r0 I:kotlin.random.XorWowRandom), (r1 I:int), (r2 I:int), (r3 I:int), (r4 I:int), (r5 I:int), (r6 I:int) type: DIRECT call: kotlin.random.XorWowRandom.\<init\>(int, int, int, int, int, int):void A[MD:(int, int, int, int, int, int):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|0x000f: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.random.XorWowRandom.\<init\>((r7 'this' I:kotlin.random.XorWowRandom A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('seed1' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('seed2' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x000f: r8 'seed1' I\l  \-1 \-0x000f: r9 'seed2' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

