digraph "CFG forkotlin.random.PlatformRandomKt.asJavaRandom(Lkotlin\/random\/Random;)Ljava\/util\/Random;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$asJavaRandom' kotlin.random.Random)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INSTANCE_OF  (r0 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('$this$asJavaRandom' kotlin.random.Random)]) kotlin.random.AbstractPlatformRandom  (LINE:16)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$asJavaRandom' kotlin.random.Random)]) \l0x000a: CHECK_CAST (r0 I:kotlin.random.AbstractPlatformRandom) = (kotlin.random.AbstractPlatformRandom) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0016 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: INVOKE  (r0 I:java.util.Random) = (r0 I:kotlin.random.AbstractPlatformRandom) type: VIRTUAL call: kotlin.random.AbstractPlatformRandom.getImpl():java.util.Random A[MD:():java.util.Random (m)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:? \l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|0x001d: RETURN  (r0 I:java.util.Random) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: NEW_INSTANCE  (r0 I:kotlin.random.KotlinRandom) =  kotlin.random.KotlinRandom \l0x0018: INVOKE  (r0 I:kotlin.random.KotlinRandom), (r1 I:kotlin.random.Random A[D('$this$asJavaRandom' kotlin.random.Random)]) type: DIRECT call: kotlin.random.KotlinRandom.\<init\>(kotlin.random.Random):void A[MD:(kotlin.random.Random):void (m)]\l0x001b: CHECK_CAST (r0 I:java.util.Random) = (java.util.Random) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|RETURN\lORIG_RETURN\l|0x001d: RETURN  (r0 I:java.util.Random) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.util.Random kotlin.random.PlatformRandomKt.asJavaRandom((r1 I:kotlin.random.Random A[D('$this$asJavaRandom' kotlin.random.Random), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0014 \-\> B:10:0x001d, CROSS_EDGE: B:6:0x000e \-\> B:9:0x0016, CROSS_EDGE: B:5:0x000d \-\> B:6:0x000e\lDebug Info:\l  \-1 \-0x001d: r1 '$this$asJavaRandom' Lkotlin\/random\/Random;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_11 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_5 -> Node_6;
}

