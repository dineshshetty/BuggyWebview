digraph "CFG forkotlin.random.jdk8.PlatformThreadLocalRandom.nextInt(II)I" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:java.util.concurrent.ThreadLocalRandom) =  type: STATIC call: java.util.concurrent.ThreadLocalRandom.current():java.util.concurrent.ThreadLocalRandom A[MD:():java.util.concurrent.ThreadLocalRandom (c)] (LINE:15)\l0x0004: INVOKE  (r0 I:int) = (r0 I:java.util.concurrent.ThreadLocalRandom), (r2 I:int A[D('from' int)]), (r3 I:int A[D('until' int)]) type: VIRTUAL call: java.util.concurrent.ThreadLocalRandom.nextInt(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int kotlin.random.jdk8.PlatformThreadLocalRandom.nextInt((r1 'this' I:kotlin.random.jdk8.PlatformThreadLocalRandom A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('from' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('until' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r2 'from' I\l  \-1 \-0x0008: r3 'until' I\lMETHOD_OVERRIDE: [kotlin.random.Random.nextInt(int, int):int]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

