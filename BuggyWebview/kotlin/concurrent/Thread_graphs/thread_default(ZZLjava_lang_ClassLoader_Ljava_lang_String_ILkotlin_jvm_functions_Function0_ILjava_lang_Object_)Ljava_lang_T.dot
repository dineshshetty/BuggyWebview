digraph "CFG forkotlin.concurrent.ThreadsKt.thread$default(ZZLjava\/lang\/ClassLoader;Ljava\/lang\/String;ILkotlin\/jvm\/functions\/Function0;ILjava\/lang\/Object;)Ljava\/lang\/Thread;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000}"];
Node_27 [shape=record,label="{27\:\ 0x0002|if ((r12 & 1) == 0) goto L23\l}"];
Node_28 [shape=record,label="{28\:\ 0x0004|r0 = true\l}"];
Node_30 [shape=record,label="{30\:\ 0x0008|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v0 boolean), (r0v2 boolean) binds: [B:29:0x0007, B:28:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_31 [shape=record,label="{31\:\ 0x000a|if ((r12 & 2) == 0) goto L22\l}"];
Node_32 [shape=record,label="{32\:\ 0x000c|r1 = false\l}"];
Node_34 [shape=record,label="{34\:\ 0x0010|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v2 boolean) binds: [B:33:0x000f, B:32:0x000c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0013|if ((r12 & 4) == 0) goto L21\l}"];
Node_36 [shape=record,label="{36\:\ 0x0015|r2 = null\l}"];
Node_38 [shape=record,label="{38\:\ 0x0018|PHI: r2 \l  PHI: (r2v1 java.lang.ClassLoader) = (r2v0 java.lang.ClassLoader), (r2v2 java.lang.ClassLoader) binds: [B:37:0x0017, B:36:0x0015] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_39 [shape=record,label="{39\:\ 0x001a|if ((r12 & 8) == 0) goto L20\l}"];
Node_40 [shape=record,label="{40\:\ 0x001c|r3 = null\l}"];
Node_42 [shape=record,label="{42\:\ 0x001f|PHI: r3 \l  PHI: (r3v1 java.lang.String) = (r3v0 java.lang.String), (r3v2 java.lang.String) binds: [B:41:0x001e, B:40:0x001c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0021|if ((r12 & 16) == 0) goto L19\l}"];
Node_44 [shape=record,label="{44\:\ 0x0023|r4 = \-1\l}"];
Node_46 [shape=record,label="{46\:\ 0x0027|PHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:45:0x0026, B:44:0x0023] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_47 [shape=record,label="{47\:\ 0x002c|RETURN\l|return thread(r0, r1, r2, r3, r4, r11)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0026|r4 = r10\l}"];
Node_41 [shape=record,label="{41\:\ 0x001e|r3 = r9\l}"];
Node_37 [shape=record,label="{37\:\ 0x0017|r2 = r8\l}"];
Node_33 [shape=record,label="{33\:\ 0x000f|r1 = r7\l}"];
Node_29 [shape=record,label="{29\:\ 0x0007|r0 = r6\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ java.lang.Thread kotlin.concurrent.ThreadsKt.thread$default((r6v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.lang.ClassLoader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 kotlin.jvm.functions.Function0 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lMETHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:45:0x0026 \-\> B:46:0x0027, CROSS_EDGE: B:41:0x001e \-\> B:42:0x001f, CROSS_EDGE: B:37:0x0017 \-\> B:38:0x0018, CROSS_EDGE: B:33:0x000f \-\> B:34:0x0010, CROSS_EDGE: B:29:0x0007 \-\> B:30:0x0008\lINLINE: 0x0028: INVOKE  \l  (wrap: boolean : ?: TERNARYnull = ((wrap: int : 0x0000: ARITH  (r13v1 int A[REMOVE]) = (r12v0 int) & (1 int)) != (0 int)) ? true : (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]))\l  (wrap: boolean : ?: TERNARYnull = ((wrap: int : 0x0008: ARITH  (r6v1 int A[REMOVE]) = (r12v0 int) & (2 int)) != (0 int)) ? false : (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]))\l  (wrap: java.lang.ClassLoader : ?: TERNARYnull = ((wrap: int : 0x0010: ARITH  (r6v2 int A[REMOVE]) = (r12v0 int) & (4 int)) != (0 int)) ? (null java.lang.ClassLoader) : (r8 I:??[OBJECT, ARRAY]))\l  (wrap: java.lang.String : ?: TERNARYnull = ((wrap: int : 0x0018: ARITH  (r6v3 int A[REMOVE]) = (r12v0 int) & (8 int)) != (0 int)) ? (null java.lang.String) : (r9 I:??[OBJECT, ARRAY]))\l  (wrap: int : ?: TERNARYnull = ((wrap: int : 0x001f: ARITH  (r6v4 int A[REMOVE]) = (r12v0 int) & (16 int)) != (0 int)) ? (\-1 int) : (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]))\l  (r11 I:kotlin.jvm.functions.Function0)\l type: STATIC call: kotlin.concurrent.ThreadsKt.thread(boolean, boolean, java.lang.ClassLoader, java.lang.String, int, kotlin.jvm.functions.Function0):java.lang.Thread\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [20=6]\}\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_25;
Node_45 -> Node_46;
Node_41 -> Node_42;
Node_37 -> Node_38;
Node_33 -> Node_34;
Node_29 -> Node_30;
}

