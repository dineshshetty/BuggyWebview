digraph "CFG forkotlin.concurrent.ThreadsKt.getOrSet(Ljava\/lang\/ThreadLocal;Lkotlin\/jvm\/functions\/Function0;)Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$getOrSet' java.lang.ThreadLocal)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"default\" \l0x0007: INVOKE  (r4 I:java.lang.Object A[D('default' kotlin.jvm.functions.Function0)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.lang.ThreadLocal A[D('$this$getOrSet' java.lang.ThreadLocal)]) type: VIRTUAL call: java.lang.ThreadLocal.get():java.lang.Object A[MD:():T (c)] (LINE:59)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0010|0x0010: INVOKE  (r0 I:java.lang.Object) = (r4 I:kotlin.jvm.functions.Function0 A[D('default' kotlin.jvm.functions.Function0)]) type: INTERFACE call: kotlin.jvm.functions.Function0.invoke():java.lang.Object A[MD:():R (m)]\l0x0014: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0015: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:62)\l0x0016: INVOKE  \l  (r3 I:java.lang.ThreadLocal A[D('$this$getOrSet' java.lang.ThreadLocal)])\l  (r1 I:java.lang.Object A[D('p0' java.lang.Object)])\l type: VIRTUAL call: java.lang.ThreadLocal.set(java.lang.Object):void A[MD:(T):void (c)] (LINE:59)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0019|RETURN\lORIG_RETURN\l|0x0019: RETURN  (r0 I:T) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0019: RETURN  (r0 I:T) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{private static final T kotlin.concurrent.ThreadsKt.getOrSet((r3 I:java.lang.ThreadLocal\<T\> A[D('$this$getOrSet' java.lang.ThreadLocal), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function0\<? extends T\> A[D('default' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x000e \-\> B:12:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x0019: r1 'p0' Ljava\/lang\/Object;\l  0x0016\-0x0019: r2 '$i$a$\-also\-ThreadsKt$getOrSet$1' I\l  \-1 \-0x0019: r3 '$this$getOrSet' Ljava\/lang\/ThreadLocal;\l  \-1 \-0x0019: r4 'default' Lkotlin\/jvm\/functions\/Function0;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/ThreadLocal\<TT;\>;Lkotlin\/jvm\/functions\/Function0\<+TT;\>;)TT;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

