digraph "CFG forkotlin.concurrent.LocksKt.write(Ljava\/util\/concurrent\/locks\/ReentrantReadWriteLock;Lkotlin\/jvm\/functions\/Function0;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"action\")\ljava.util.concurrent.locks.ReentrantReadWriteLock$ReadLock r0 = r8.readLock()\lr2 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|if (r8.getWriteHoldCount() != 0) goto L26\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|int r1 = r8.getReadHoldCount()\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|PHI: r1 \l  PHI: (r1v2 'readCount' int) = (r1v1 'readCount' int), (r1v3 'readCount' int) binds: [B:5:0x001b, B:4:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|r3 = 0\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|LOOP_START\lLOOP:0: B:7:0x001d\-\>B:8:0x001f\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v3 int) binds: [B:6:0x001c, B:8:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \>= r1) goto L7\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|LOOP_END\lLOOP:0: B:7:0x001d\-\>B:8:0x001f\l|r0.unlock()\lint r3 = r3 + 1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0027|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock r3 = r8.writeLock()\lr3.lock()\lr4 = 1\l}"];
Node_22 [shape=record,label="{22\:\ 0x0030|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0049, blocks: (B:10:0x0030), top: B:22:0x0030 \}\lCatch: all \-\> 0x0049\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|DONT_GENERATE\l|kotlin.jvm.internal.InlineMarker.finallyStart(r4)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|LOOP_START\lDONT_GENERATE\lLOOP:1: B:12:0x0038\-\>B:13:0x003a\lPHI: r2 \l  PHI: (r2v3 int) = (r2v0 int), (r2v4 int) binds: [B:11:0x0034, B:13:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r1) goto L14\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|LOOP_END\lDONT_GENERATE\lLOOP:1: B:12:0x0038\-\>B:13:0x003a\l|r6 = r2\lr7 = false\lr0.lock()\lint r2 = r2 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0042|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|DONT_GENERATE\l|r3.unlock()\lkotlin.jvm.internal.InlineMarker.finallyEnd(r4)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|RETURN\l|return r9.invoke()\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|ExcHandler: all \-\> 0x0049\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_17 [shape=record,label="{17\:\ 0x004a|FINALLY_INSNS\l|kotlin.jvm.internal.InlineMarker.finallyStart(1)\l}"];
Node_18 [shape=record,label="{18\:\ 0x004d|LOOP_START\lFINALLY_INSNS\lLOOP:2: B:18:0x004d\-\>B:19:0x004f\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:17:0x004a, B:19:0x004f] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r1) goto L23\l}"];
Node_19 [shape=record,label="{19\:\ 0x004f|LOOP_END\lFINALLY_INSNS\lLOOP:2: B:18:0x004d\-\>B:19:0x004f\l|r6 = r2\lr0.lock()\lint r2 = r2 + 1\l}"];
Node_26 [shape=record,label="{26\:\ 0x0057|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|FINALLY_INSNS\l|r3.unlock()\lkotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_21 [shape=record,label="{21\:\ 0x005d|throw r5\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|r1 = 0\l}"];
MethodNode[shape=record,label="{private static final T kotlin.concurrent.LocksKt.write((r8v0 '$this$write' java.util.concurrent.locks.ReentrantReadWriteLock A[D('$this$write' java.util.concurrent.locks.ReentrantReadWriteLock), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'action' kotlin.jvm.functions.Function0\<? extends T\> A[D('action' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:8:0x001f \-\> B:7:0x001d, BACK_EDGE: B:13:0x003a \-\> B:12:0x0038, BACK_EDGE: B:19:0x004f \-\> B:18:0x004d, CROSS_EDGE: B:21:0x005d \-\> B:1:?, CROSS_EDGE: B:22:0x0030 \-\> B:16:0x0049, CROSS_EDGE: B:5:0x001b \-\> B:6:0x001c\lTryCatch #0 \{all \-\> 0x0049, blocks: (B:10:0x0030), top: B:22:0x0030 \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/concurrent\/locks\/ReentrantReadWriteLock;Lkotlin\/jvm\/functions\/Function0\<+TT;\>;)TT;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_24;
Node_8 -> Node_7;
Node_24 -> Node_9;
Node_9 -> Node_22;
Node_22 -> Node_10;
Node_22 -> Node_16;
Node_10 -> Node_11;
Node_10 -> Node_23;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_25;
Node_13 -> Node_12;
Node_25 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_23 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_26;
Node_19 -> Node_18;
Node_26 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_5 -> Node_6;
}

