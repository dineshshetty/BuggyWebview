digraph "CFG forkotlin.concurrent.TimersKt.timer(Ljava\/lang\/String;Z)Ljava\/util\/Timer;" {
subgraph cluster_Region_525716381 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000b|RETURN\lPHI: r0 \l  PHI: (r0v2 java.util.Timer A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|return r1 == null ? new java.util.Timer(r2) : new java.util.Timer(r1, r2)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0002}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0004}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0008}"];
MethodNode[shape=record,label="{public static final java.util.Timer kotlin.concurrent.TimersKt.timer((r1v0 'name' java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'daemon' boolean A[D('daemon' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0008 \-\> B:6:0x000b\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_6 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
}

