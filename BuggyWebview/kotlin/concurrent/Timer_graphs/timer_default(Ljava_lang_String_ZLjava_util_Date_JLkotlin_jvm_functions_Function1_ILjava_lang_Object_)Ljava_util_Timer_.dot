digraph "CFG forkotlin.concurrent.TimersKt.timer$default(Ljava\/lang\/String;ZLjava\/util\/Date;JLkotlin\/jvm\/functions\/Function1;ILjava\/lang\/Object;)Ljava\/util\/Timer;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if ((r6 & 1) == 0) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|r0 = null\l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|PHI: r0 \l  PHI: (r0v1 'name' java.lang.String) = (r0v0 'name' java.lang.String), (r0v2 'name' java.lang.String) binds: [B:3:0x0002, B:4:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|if ((r6 & 2) == 0) goto L7\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|r1 = false\l}"];
Node_8 [shape=record,label="{8\:\ 0x000a|PHI: r1 \l  PHI: (r1v1 'daemon' boolean) = (r1v0 'daemon' boolean), (r1v2 'daemon' boolean) binds: [B:6:0x0007, B:7:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r2, \"startAt\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"action\")\ljava.util.Timer r6 = timer(r0, r1)\lr6.schedule(new kotlin.concurrent.TimersKt$timerTask$1(r5), r2, r3)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|RETURN\l|return r6\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.util.Timer kotlin.concurrent.TimersKt.timer$default((r0v0 'name' java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 'daemon' boolean A[D('daemon' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'startAt' java.util.Date A[D('startAt' java.util.Date), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'period' long A[D('period' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'action' kotlin.jvm.functions.Function1 A[D('action' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:6:0x0007 \-\> B:8:0x000a, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0005\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

