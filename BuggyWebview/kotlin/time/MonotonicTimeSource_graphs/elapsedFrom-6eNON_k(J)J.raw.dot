digraph "CFG forkotlin.time.MonotonicTimeSource.elapsedFrom\-6eNON_k(J)J" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:long) = (r2 I:kotlin.time.MonotonicTimeSource) type: DIRECT call: kotlin.time.MonotonicTimeSource.read():long A[MD:():long (m)] (LINE:19)\l0x0004: INVOKE  (r0 I:long) = (r0 I:long), (r3 I:long A[D('timeMark' long)]) type: STATIC call: kotlin.time.LongSaturatedMathKt.saturatingDiff(long, long):long A[MD:(long, long):long (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final long kotlin.time.MonotonicTimeSource.elapsedFrom\-6eNON_k((r2 'this' I:kotlin.time.MonotonicTimeSource A[IMMUTABLE_TYPE, THIS]), (r3 I:long A[D('timeMark' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r3 'timeMark' J\lRENAME_REASON:not valid java name\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

