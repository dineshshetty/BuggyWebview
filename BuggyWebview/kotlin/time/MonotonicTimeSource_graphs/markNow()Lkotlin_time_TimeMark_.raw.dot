digraph "CFG forkotlin.time.MonotonicTimeSource.markNow()Lkotlin\/time\/TimeMark;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:long) = (r2 I:kotlin.time.MonotonicTimeSource) type: VIRTUAL call: kotlin.time.MonotonicTimeSource.markNow\-z9LOYto():long A[MD:():long (m)] (LINE:10)\l0x0004: INVOKE  (r0 I:kotlin.time.TimeSource$Monotonic$ValueTimeMark) = (r0 I:long) type: STATIC call: kotlin.time.TimeSource.Monotonic.ValueTimeMark.box\-impl(long):kotlin.time.TimeSource$Monotonic$ValueTimeMark A[MD:(long):kotlin.time.TimeSource$Monotonic$ValueTimeMark (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:kotlin.time.TimeMark) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ kotlin.time.TimeMark kotlin.time.MonotonicTimeSource.markNow((r2 'this' I:kotlin.time.MonotonicTimeSource A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lMETHOD_OVERRIDE: [kotlin.time.TimeSource.markNow():kotlin.time.TimeMark]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

