digraph "CFG forkotlin.time.DurationKt.toDuration(JLkotlin\/time\/DurationUnit;)J" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"unit\" \l0x0002: INVOKE  (r13 I:java.lang.Object A[D('unit' kotlin.time.DurationUnit)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: SGET  (r0 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit.NANOSECONDS kotlin.time.DurationUnit  (LINE:1080)\l0x0007: CONST  (r1 I:??[long, double]) = (4611686018426999999(0x3ffffffffffa14bf, double:1.9999999999138678) ??[long, double]) \l0x000c: INVOKE  (r0 I:long) = (r1 I:long), (r0 I:kotlin.time.DurationUnit), (r13 I:kotlin.time.DurationUnit A[D('unit' kotlin.time.DurationUnit)]) type: STATIC call: kotlin.time.DurationUnitKt.convertDurationUnitOverflow(long, kotlin.time.DurationUnit, kotlin.time.DurationUnit):long A[MD:(long, kotlin.time.DurationUnit, kotlin.time.DurationUnit):long (m)]\l0x0010: NEW_INSTANCE  (r2 I:kotlin.ranges.LongRange) =  kotlin.ranges.LongRange  (LINE:1081)\l0x0012: NEG  (r3 I:long) = (r0 I:long A[D('maxNsInUnit' long)]) \l0x0013: INVOKE  (r2 I:kotlin.ranges.LongRange), (r3 I:long), (r0 I:long A[D('maxNsInUnit' long)]) type: DIRECT call: kotlin.ranges.LongRange.\<init\>(long, long):void A[MD:(long, long):void (m)]\l0x0016: INVOKE  (r2 I:boolean) = (r2 I:kotlin.ranges.LongRange), (r11 I:long A[D('$this$toDuration' long)]) type: VIRTUAL call: kotlin.ranges.LongRange.contains(long):boolean A[MD:(long):boolean (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x001a|0x001a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0027 \l}"];
Node_20 [shape=record,label="{20\:\ 0x001c|0x001c: SGET  (r2 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit.NANOSECONDS kotlin.time.DurationUnit  (LINE:1082)\l0x001e: INVOKE  (r2 I:long) = \l  (r11 I:long A[D('$this$toDuration' long)])\l  (r13 I:kotlin.time.DurationUnit A[D('unit' kotlin.time.DurationUnit)])\l  (r2 I:kotlin.time.DurationUnit)\l type: STATIC call: kotlin.time.DurationUnitKt.convertDurationUnitOverflow(long, kotlin.time.DurationUnit, kotlin.time.DurationUnit):long A[MD:(long, kotlin.time.DurationUnit, kotlin.time.DurationUnit):long (m)]\l0x0022: INVOKE  (r2 I:long) = (r2 I:long) type: STATIC call: kotlin.time.DurationKt.durationOfNanos(long):long A[MD:(long):long (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0026|RETURN\l|0x0026: RETURN  (r2 I:long) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0027|0x0027: SGET  (r2 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit.MILLISECONDS kotlin.time.DurationUnit  (LINE:1084)\l0x0029: INVOKE  (r9 I:long) = \l  (r11 I:long A[D('$this$toDuration' long)])\l  (r13 I:kotlin.time.DurationUnit A[D('unit' kotlin.time.DurationUnit)])\l  (r2 I:kotlin.time.DurationUnit)\l type: STATIC call: kotlin.time.DurationUnitKt.convertDurationUnit(long, kotlin.time.DurationUnit, kotlin.time.DurationUnit):long A[MD:(long, kotlin.time.DurationUnit, kotlin.time.DurationUnit):long (m)]\l0x002d: CONST  (r5 I:??[long, double]) = (\-4611686018427387903(0xc000000000000001, double:\-2.0000000000000004) ??[long, double])  (LINE:1085)\l0x0032: CONST  (r7 I:??[long, double]) = (4611686018427387903(0x3fffffffffffffff, double:1.9999999999999998) ??[long, double]) \l0x0037: MOVE  (r3 I:??[long, double]) = (r9 I:??[long, double] A[D('millis' long)]) \l0x0038: INVOKE  (r2 I:long) = (r3 I:long), (r5 I:long), (r7 I:long) type: STATIC call: kotlin.ranges.RangesKt.coerceIn(long, long, long):long A[MD:(long, long, long):long (m)]\l0x003c: INVOKE  (r2 I:long) = (r2 I:long) type: STATIC call: kotlin.time.DurationKt.durationOfMillis(long):long A[MD:(long):long (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0040|RETURN\l|0x0040: RETURN  (r2 I:long) \l}"];
MethodNode[shape=record,label="{public static final long kotlin.time.DurationKt.toDuration((r11 I:long A[D('$this$toDuration' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:kotlin.time.DurationUnit A[D('unit' kotlin.time.DurationUnit), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0040 \-\> B:17:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0010\-0x0040: r0 'maxNsInUnit' J\l  0x002d\-0x0040: r9 'millis' J\l  \-1 \-0x0040: r11 '$this$toDuration' J\l  \-1 \-0x0040: r13 'unit' Lkotlin\/time\/DurationUnit;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_22 -> Node_23;
Node_23 -> Node_17;
}

