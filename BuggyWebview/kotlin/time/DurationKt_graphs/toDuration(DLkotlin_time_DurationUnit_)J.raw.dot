digraph "CFG forkotlin.time.DurationKt.toDuration(DLkotlin\/time\/DurationUnit;)J" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"unit\" \l0x0002: INVOKE  (r11 I:java.lang.Object A[D('unit' kotlin.time.DurationUnit)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: SGET  (r0 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit.NANOSECONDS kotlin.time.DurationUnit  (LINE:1099)\l0x0007: INVOKE  (r0 I:double) = \l  (r9 I:double A[D('$this$toDuration' double)])\l  (r11 I:kotlin.time.DurationUnit A[D('unit' kotlin.time.DurationUnit)])\l  (r0 I:kotlin.time.DurationUnit)\l type: STATIC call: kotlin.time.DurationUnitKt.convertDurationUnit(double, kotlin.time.DurationUnit, kotlin.time.DurationUnit):double A[MD:(double, kotlin.time.DurationUnit, kotlin.time.DurationUnit):double (m)]\l0x000b: INVOKE  (r2 I:boolean) = (r0 I:double A[D('valueInNs' double)]) type: STATIC call: java.lang.Double.isNaN(double):boolean A[MD:(double):boolean (c)] (LINE:1100)\l0x000f: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) ^ (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0011|0x0011: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0041 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0013|0x0013: INVOKE  (r2 I:long) = (r0 I:double A[D('valueInNs' double)]) type: STATIC call: kotlin.math.MathKt.roundToLong(double):long A[MD:(double):long (m)] (LINE:1101)\l0x0017: NEW_INSTANCE  (r4 I:kotlin.ranges.LongRange) =  kotlin.ranges.LongRange  (LINE:1102)\l0x0019: CONST  (r5 I:??[long, double]) = (\-4611686018426999999(0xc00000000005eb41, double:\-2.0000000001722644) ??[long, double]) \l0x001e: CONST  (r7 I:??[long, double]) = (4611686018426999999(0x3ffffffffffa14bf, double:1.9999999999138678) ??[long, double]) \l0x0023: INVOKE  (r4 I:kotlin.ranges.LongRange), (r5 I:long), (r7 I:long) type: DIRECT call: kotlin.ranges.LongRange.\<init\>(long, long):void A[MD:(long, long):void (m)]\l0x0026: INVOKE  (r4 I:boolean) = (r4 I:kotlin.ranges.LongRange), (r2 I:long A[D('nanos' long)]) type: VIRTUAL call: kotlin.ranges.LongRange.contains(long):boolean A[MD:(long):boolean (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x002a|0x002a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0031 \l}"];
Node_30 [shape=record,label="{30\:\ 0x002c|0x002c: INVOKE  (r4 I:long) = (r2 I:long A[D('nanos' long)]) type: STATIC call: kotlin.time.DurationKt.durationOfNanos(long):long A[MD:(long):long (m)] (LINE:1103)\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0040: RETURN  (r4 I:long A[D('millis' long)]) A[SYNTHETIC] (LINE:1102)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0031|0x0031: SGET  (r4 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit.MILLISECONDS kotlin.time.DurationUnit  (LINE:1105)\l0x0033: INVOKE  (r4 I:double) = \l  (r9 I:double A[D('$this$toDuration' double)])\l  (r11 I:kotlin.time.DurationUnit A[D('unit' kotlin.time.DurationUnit)])\l  (r4 I:kotlin.time.DurationUnit)\l type: STATIC call: kotlin.time.DurationUnitKt.convertDurationUnit(double, kotlin.time.DurationUnit, kotlin.time.DurationUnit):double A[MD:(double, kotlin.time.DurationUnit, kotlin.time.DurationUnit):double (m)]\l0x0037: INVOKE  (r4 I:long) = (r4 I:double) type: STATIC call: kotlin.math.MathKt.roundToLong(double):long A[MD:(double):long (m)]\l0x003b: INVOKE  (r6 I:long) = (r4 I:long A[D('millis' long)]) type: STATIC call: kotlin.time.DurationKt.durationOfMillisNormalized(long):long A[MD:(long):long (m)] (LINE:1106)\l0x003f: MOVE  (r4 I:??[long, double] A[D('millis' long)]) = (r6 I:??[long, double]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0040|RETURN\lORIG_RETURN\l|0x0040: RETURN  (r4 I:long A[D('millis' long)])  (LINE:1102)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0041|0x0041: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('nanos' long)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1464)\l0x0043: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException A[D('$i$a$\-require\-DurationKt$toDuration$1' int)]) =  java.lang.IllegalArgumentException \l0x0045: CONST_STR  (r3 I:java.lang.String) =  \"Duration value cannot be NaN.\" \l0x0047: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004b: INVOKE  (r2 I:java.lang.IllegalArgumentException), (r3 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x004e|0x004e: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final long kotlin.time.DurationKt.toDuration((r9 I:double A[D('$this$toDuration' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlin.time.DurationUnit A[D('unit' kotlin.time.DurationUnit), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0031 \-\> B:32:0x0040, CROSS_EDGE: B:34:0x004e \-\> B:25:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003b\-0x0040: r4 'millis' J\l  0x0017\-0x0041: r2 'nanos' J\l  0x0042\-0x0043: r2 '$i$a$\-require\-DurationKt$toDuration$1' I\l  0x000b\-0x004e: r0 'valueInNs' D\l  \-1 \-0x004e: r9 '$this$toDuration' D\l  \-1 \-0x004e: r11 'unit' Lkotlin\/time\/DurationUnit;\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_33;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_35;
Node_35 -> Node_25;
Node_31 -> Node_32;
Node_32 -> Node_25;
Node_33 -> Node_34;
Node_34 -> Node_25;
}

