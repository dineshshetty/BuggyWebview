digraph "CFG forkotlin.time.Duration.plus\-LRDsOJo(JJ)J" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0001|0x0001: INVOKE  (r0 I:boolean) = (r10 I:long A[D('arg0' long)]) type: STATIC call: kotlin.time.Duration.isInfinite\-impl(long):boolean A[MD:(long):boolean (m)] (LINE:457)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x001f \l}"];
Node_33 [shape=record,label="{33\:\ 0x0007|0x0007: INVOKE  (r0 I:boolean) = (r12 I:long A[D('other' long)]) type: STATIC call: kotlin.time.Duration.isFinite\-impl(long):boolean A[MD:(long):boolean (m)] (LINE:458)\l}"];
Node_34 [shape=record,label="{34\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x001e \l}"];
Node_35 [shape=record,label="{35\:\ 0x000d|0x000d: ARITH  (r0 I:long) = (r10 I:long A[D('arg0' long)]) ^ (r12 I:long A[D('other' long)]) \l0x000f: CONST  (r2 I:??[long, double]) = (0 ??[long, double]) \l0x0011: CMP_L  (r4 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0013|0x0013: IF  (r4 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:38:0x0016 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0016|0x0016: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:461)\l0x0018: CONST_STR  (r1 I:java.lang.String) =  \"Summing infinite durations of different signs yields an undefined result.\" \l0x001a: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x001d|0x001d: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x001e|RETURN\l|0x001e: RETURN  (r10 I:long A[D('arg0' long)])  (LINE:459)\l}"];
Node_41 [shape=record,label="{41\:\ 0x001f|0x001f: INVOKE  (r0 I:boolean) = (r12 I:long A[D('other' long)]) type: STATIC call: kotlin.time.Duration.isInfinite\-impl(long):boolean A[MD:(long):boolean (m)] (LINE:463)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0023|0x0023: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0026 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0025|RETURN\l|0x0025: RETURN  (r12 I:long A[D('other' long)]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0026|0x0027: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:467)\l0x0028: CAST (r1 I:int) = (int) (r10 I:long A[D('arg0' long)])  (LINE:1467)\l0x0029: ARITH  (r0 I:??[int, boolean] A[D('$i$f$getUnitDiscriminator\-impl' int)]) = (r1 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char]) \l0x002b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:467)\l0x002c: CAST (r2 I:int) = (int) (r12 I:long A[D('other' long)])  (LINE:1467)\l0x002d: ARITH  (r1 I:??[int, boolean] A[D('$i$f$getUnitDiscriminator\-impl' int)]) = (r2 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x002f|0x002f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$i$f$getUnitDiscriminator\-impl' int)])  \-\> B:50:0x004b  (LINE:467)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0031|0x0031: INVOKE  (r0 I:long) = (r10 I:long A[D('arg0' long)]) type: STATIC call: kotlin.time.Duration.getValue\-impl(long):long A[MD:(long):long (m)] (LINE:468)\l0x0035: INVOKE  (r2 I:long) = (r12 I:long A[D('other' long)]) type: STATIC call: kotlin.time.Duration.getValue\-impl(long):long A[MD:(long):long (m)]\l0x0039: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l0x003b: INVOKE  (r2 I:boolean) = (r10 I:long A[D('arg0' long)]) type: STATIC call: kotlin.time.Duration.isInNanos\-impl(long):boolean A[MD:(long):boolean (m)] (LINE:470)\l}"];
Node_47 [shape=record,label="{47\:\ 0x003f|0x003f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0046 \l}"];
Node_48 [shape=record,label="{48\:\ 0x0041|0x0041: INVOKE  (r2 I:long) = (r0 I:long A[D('result' long)]) type: STATIC call: kotlin.time.DurationKt.access$durationOfNanosNormalized(long):long A[MD:(long):long (m)] (LINE:471)\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\l|0x006c: RETURN  (r2 I:long) A[SYNTHETIC] (LINE:466)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0046|0x0046: INVOKE  (r2 I:long) = (r0 I:long A[D('result' long)]) type: STATIC call: kotlin.time.DurationKt.access$durationOfMillisNormalized(long):long A[MD:(long):long (m)] (LINE:473)\l}"];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lRETURN\l|0x006c: RETURN  (r2 I:long) A[SYNTHETIC] (LINE:466)\l}"];
Node_50 [shape=record,label="{50\:\ 0x004b|0x004b: INVOKE  (r0 I:boolean) = (r10 I:long A[D('arg0' long)]) type: STATIC call: kotlin.time.Duration.isInMillis\-impl(long):boolean A[MD:(long):boolean (m)] (LINE:476)\l}"];
Node_51 [shape=record,label="{51\:\ 0x004f|0x004f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x005f \l}"];
Node_52 [shape=record,label="{52\:\ 0x0051|0x0051: INVOKE  (r3 I:long) = (r10 I:long A[D('arg0' long)]) type: STATIC call: kotlin.time.Duration.getValue\-impl(long):long A[MD:(long):long (m)] (LINE:477)\l0x0055: INVOKE  (r5 I:long) = (r12 I:long A[D('other' long)]) type: STATIC call: kotlin.time.Duration.getValue\-impl(long):long A[MD:(long):long (m)]\l0x0059: MOVE  (r1 I:??[long, double]) = (r10 I:??[long, double] A[D('arg0' long)]) \l0x005a: INVOKE  (r2 I:long) = (r1 I:long), (r3 I:long), (r5 I:long) type: STATIC call: kotlin.time.Duration.addValuesMixedRanges\-UwyO8pc(long, long, long):long A[MD:(long, long, long):long (m)]\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|0x006c: RETURN  (r2 I:long) A[SYNTHETIC] (LINE:466)\l}"];
Node_53 [shape=record,label="{53\:\ 0x005f|0x005f: INVOKE  (r6 I:long) = (r12 I:long A[D('other' long)]) type: STATIC call: kotlin.time.Duration.getValue\-impl(long):long A[MD:(long):long (m)] (LINE:479)\l0x0063: INVOKE  (r8 I:long) = (r10 I:long A[D('arg0' long)]) type: STATIC call: kotlin.time.Duration.getValue\-impl(long):long A[MD:(long):long (m)]\l0x0067: MOVE  (r4 I:??[long, double]) = (r10 I:??[long, double] A[D('arg0' long)]) \l0x0068: INVOKE  (r2 I:long) = (r4 I:long), (r6 I:long), (r8 I:long) type: STATIC call: kotlin.time.Duration.addValuesMixedRanges\-UwyO8pc(long, long, long):long A[MD:(long, long, long):long (m)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x006c|RETURN\lORIG_RETURN\l|0x006c: RETURN  (r2 I:long)  (LINE:466)\l}"];
MethodNode[shape=record,label="{public static final long kotlin.time.Duration.plus\-LRDsOJo((r10 I:long A[D('arg0' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:long A[D('other' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:40:0x001e \-\> B:30:?, CROSS_EDGE: B:34:0x000b \-\> B:40:0x001e, CROSS_EDGE: B:43:0x0025 \-\> B:30:?, CROSS_EDGE: B:54:0x006c \-\> B:30:?, CROSS_EDGE: B:49:0x0046 \-\> B:54:0x006c, CROSS_EDGE: B:52:0x0051 \-\> B:54:0x006c, CROSS_EDGE: B:53:0x005f \-\> B:54:0x006c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0028\-0x002b: r0 '$i$f$getUnitDiscriminator\-impl' I\l  0x002c\-0x002f: r1 '$i$f$getUnitDiscriminator\-impl' I\l  0x003a\-0x004a: r0 'result' J\l  \-1 \-0x006c: r10 'arg0' J\l  \-1 \-0x006c: r12 'other' J\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_41;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_40;
Node_35 -> Node_36;
Node_36 -> Node_38;
Node_36 -> Node_40[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_30;
Node_40 -> Node_30;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_30;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_50;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_55;
Node_55 -> Node_30;
Node_49 -> Node_56;
Node_56 -> Node_30;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_57;
Node_57 -> Node_30;
Node_53 -> Node_54;
Node_54 -> Node_30;
}

