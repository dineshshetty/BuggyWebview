digraph "CFG forkotlin.time.Duration.times\-UwyO8pc(JI)J" {
Node_47 [shape=record,label="{47\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x0000}"];
Node_50 [shape=record,label="{50\:\ 0x0006|if (m1491isInfiniteimpl(r20) == false) goto L12\l}"];
Node_51 [shape=record,label="{51\:\ 0x0009|if (r22 == 0) goto L10\l}"];
Node_52 [shape=record,label="{52\:\ 0x000b|if (r22 \<= 0) goto L8\l}"];
Node_53 [shape=record,label="{53\:\ 0x000d}"];
Node_86 [shape=record,label="{86\:\ ?|SYNTHETIC\lRETURN\l|return r20\l}"];
Node_48 [shape=record,label="{48\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_54 [shape=record,label="{54\:\ 0x0010}"];
Node_55 [shape=record,label="{55\:\ 0x0014|RETURN\lORIG_RETURN\l|return m1511unaryMinusUwyO8pc(r20)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0015}"];
Node_57 [shape=record,label="{57\:\ 0x001c|throw new java.lang.IllegalArgumentException(\"Multiplying infinite duration by zero yields an undefined result.\")\l}"];
Node_58 [shape=record,label="{58\:\ 0x001d|if (r22 != 0) goto L15\l}"];
Node_59 [shape=record,label="{59\:\ 0x001f}"];
Node_60 [shape=record,label="{60\:\ 0x0021|RETURN\l|return kotlin.time.Duration.ZERO\l}"];
Node_61 [shape=record,label="{61\:\ 0x0022|long r1 = m1486getValueimpl(r20)\llong r3 = ((long) r22) * r1\l}"];
Node_62 [shape=record,label="{62\:\ 0x002d|if (m1490isInNanosimpl(r20) == false) goto L37\l}"];
Node_63 [shape=record,label="{63\:\ 0x002f}"];
Node_64 [shape=record,label="{64\:\ 0x003e|if (new kotlin.ranges.LongRange(\-2147483647L, 2147483647L).contains(r1) == false) goto L21\l}"];
Node_65 [shape=record,label="{65\:\ 0x0040|long r5 = kotlin.time.DurationKt.durationOfNanos(r3)\l}"];
Node_87 [shape=record,label="{87\:\ ?|SYNTHETIC\lRETURN\l|return r5\l}"];
Node_66 [shape=record,label="{66\:\ 0x0046}"];
Node_67 [shape=record,label="{67\:\ 0x004b|if (((r3 \/ ((long) r22)) \> r1 ? 1 : ((r3 \/ ((long) r22)) == r1 ? 0 : \-1)) != 0) goto L25\l}"];
Node_68 [shape=record,label="{68\:\ 0x004d|long r5 = kotlin.time.DurationKt.durationOfNanosNormalized(r3)\l}"];
Node_88 [shape=record,label="{88\:\ ?|SYNTHETIC\lRETURN\l|return r5\l}"];
Node_69 [shape=record,label="{69\:\ 0x0053|long r10 = kotlin.time.DurationKt.nanosToMillis(r1)\llong r12 = kotlin.time.DurationKt.millisToNanos(r10)\llong r12 = r1 \- r12\llong r14 = ((long) r22) * r10\llong r5 = kotlin.time.DurationKt.nanosToMillis(((long) r22) * r12)\llong r5 = r5 + r14\l}"];
Node_70 [shape=record,label="{70\:\ 0x006d|if (((r14 \/ ((long) r22)) \> r10 ? 1 : ((r14 \/ ((long) r22)) == r10 ? 0 : \-1)) != 0) goto L31\l}"];
Node_71 [shape=record,label="{71\:\ 0x006f}"];
Node_72 [shape=record,label="{72\:\ 0x0075|if (((r5 ^ r14) \> 0 ? 1 : ((r5 ^ r14) == 0 ? 0 : \-1)) \< 0) goto L31\l}"];
Node_73 [shape=record,label="{73\:\ 0x0077|long r7 = kotlin.time.DurationKt.durationOfMillis(kotlin.ranges.RangesKt.coerceIn(r5, new kotlin.ranges.LongRange(\-4611686018427387903L, kotlin.time.DurationKt.MAX_MILLIS)))\l}"];
Node_89 [shape=record,label="{89\:\ ?|SYNTHETIC\lRETURN\l|return r7\l}"];
Node_74 [shape=record,label="{74\:\ 0x0094}"];
Node_75 [shape=record,label="{75\:\ 0x00a0|if ((kotlin.math.MathKt.getSign(r1) * kotlin.math.MathKt.getSign(r22)) \<= 0) goto L35\l}"];
Node_76 [shape=record,label="{76\:\ 0x00a2}"];
Node_90 [shape=record,label="{90\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.time.Duration.INFINITE\l}"];
Node_77 [shape=record,label="{77\:\ 0x00a6}"];
Node_91 [shape=record,label="{91\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.time.Duration.NEG_INFINITE\l}"];
Node_78 [shape=record,label="{78\:\ 0x00a9}"];
Node_79 [shape=record,label="{79\:\ 0x00ae|if (((r3 \/ ((long) r22)) \> r1 ? 1 : ((r3 \/ ((long) r22)) == r1 ? 0 : \-1)) != 0) goto L41\l}"];
Node_80 [shape=record,label="{80\:\ 0x00b0|long r5 = kotlin.time.DurationKt.durationOfMillis(kotlin.ranges.RangesKt.coerceIn(r3, new kotlin.ranges.LongRange(\-4611686018427387903L, kotlin.time.DurationKt.MAX_MILLIS)))\l}"];
Node_92 [shape=record,label="{92\:\ ?|SYNTHETIC\lRETURN\l|return r5\l}"];
Node_81 [shape=record,label="{81\:\ 0x00ca}"];
Node_82 [shape=record,label="{82\:\ 0x00d4|if ((kotlin.math.MathKt.getSign(r1) * kotlin.math.MathKt.getSign(r22)) \<= 0) goto L45\l}"];
Node_83 [shape=record,label="{83\:\ 0x00d6}"];
Node_93 [shape=record,label="{93\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.time.Duration.INFINITE\l}"];
Node_84 [shape=record,label="{84\:\ 0x00d9}"];
Node_85 [shape=record,label="{85\:\ 0x00db|RETURN\lORIG_RETURN\l|return kotlin.time.Duration.NEG_INFINITE\l}"];
MethodNode[shape=record,label="{public static final long kotlin.time.Duration.times\-UwyO8pc((r20v0 'arg0' long A[D('arg0' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'scale' int A[D('scale' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:54:0x0010 \-\> B:55:0x0014, CROSS_EDGE: B:57:0x001c \-\> B:48:?, CROSS_EDGE: B:60:0x0021 \-\> B:48:?, CROSS_EDGE: B:85:0x00db \-\> B:48:?, CROSS_EDGE: B:68:0x004d \-\> B:85:0x00db, CROSS_EDGE: B:73:0x0077 \-\> B:85:0x00db, CROSS_EDGE: B:76:0x00a2 \-\> B:85:0x00db, CROSS_EDGE: B:77:0x00a6 \-\> B:85:0x00db, CROSS_EDGE: B:70:0x006d \-\> B:74:0x0094, CROSS_EDGE: B:80:0x00b0 \-\> B:85:0x00db, CROSS_EDGE: B:83:0x00d6 \-\> B:85:0x00db, CROSS_EDGE: B:84:0x00d9 \-\> B:85:0x00db\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_47;Node_47 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_58;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_56;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_86;
Node_86 -> Node_48;
Node_54 -> Node_55;
Node_55 -> Node_48;
Node_56 -> Node_57;
Node_57 -> Node_48;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_61;
Node_59 -> Node_60;
Node_60 -> Node_48;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_78;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_87;
Node_87 -> Node_48;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_69;
Node_68 -> Node_88;
Node_88 -> Node_48;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_74;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_74;
Node_73 -> Node_89;
Node_89 -> Node_48;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_77;
Node_76 -> Node_90;
Node_90 -> Node_48;
Node_77 -> Node_91;
Node_91 -> Node_48;
Node_78 -> Node_79;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_81;
Node_80 -> Node_92;
Node_92 -> Node_48;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_84;
Node_83 -> Node_93;
Node_93 -> Node_48;
Node_84 -> Node_85;
Node_85 -> Node_48;
}

