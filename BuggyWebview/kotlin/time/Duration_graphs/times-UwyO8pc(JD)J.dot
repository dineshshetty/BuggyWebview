digraph "CFG forkotlin.time.Duration.times\-UwyO8pc(JD)J" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|int r0 = kotlin.math.MathKt.roundToInt(r8)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0007|if ((((double) r0) \> r8 ? 1 : (((double) r0) == r8 ? 0 : \-1)) != 0) goto L10\l}"];
Node_15 [shape=record,label="{15\:\ 0x0009|r1 = true\l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|PHI: r1 \l  PHI: (r1v2 boolean) = (r1v1 boolean), (r1v5 boolean) binds: [B:16:0x000b, B:15:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L8\l}"];
Node_18 [shape=record,label="{18\:\ 0x000e}"];
Node_19 [shape=record,label="{19\:\ 0x0012|RETURN\l|return m1497timesUwyO8pc(r6, r0)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|kotlin.time.DurationUnit r1 = m1484getStorageUnitimpl(r6)\ldouble r2 = m1502toDoubleimpl(r6, r1) * r8\l}"];
Node_21 [shape=record,label="{21\:\ 0x0021|RETURN\l|return kotlin.time.DurationKt.toDuration(r2, r1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|r1 = false\l}"];
MethodNode[shape=record,label="{public static final long kotlin.time.Duration.times\-UwyO8pc((r6v0 'arg0' long A[D('arg0' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'scale' double A[D('scale' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0021 \-\> B:12:?, CROSS_EDGE: B:16:0x000b \-\> B:17:0x000c\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

