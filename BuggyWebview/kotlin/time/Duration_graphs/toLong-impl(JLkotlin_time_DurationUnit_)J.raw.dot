digraph "CFG forkotlin.time.Duration.toLong\-impl(JLkotlin\/time\/DurationUnit;)J" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"unit\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('unit' kotlin.time.DurationUnit)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0006: SGET  (r0 I:long) =  kotlin.time.Duration.INFINITE long  (LINE:765)\l0x0008: CMP_L  (r2 I:int) = (r3 I:long A[D('arg0' long)]), (r0 I:long) \l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|0x000a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0012 \l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|SYNTHETIC\lRETURN\l|0x000c: CONST  (r0 I:??[long, double]) = (9223372036854775807(0x7fffffffffffffff, double:NaN) ??[long, double]) \l0x0027: RETURN  (r0 I:long) A[SYNTHETIC] (LINE:764)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|0x0012: SGET  (r0 I:long) =  kotlin.time.Duration.NEG_INFINITE long  (LINE:766)\l0x0014: CMP_L  (r2 I:int) = (r3 I:long A[D('arg0' long)]), (r0 I:long) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0016|0x0016: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x001b \l}"];
Node_19 [shape=record,label="{19\:\ 0x0018|SYNTHETIC\lRETURN\l|0x0018: CONST  (r0 I:??[long, double]) = (\-9223372036854775808 ??[long, double]) \l0x0027: RETURN  (r0 I:long) A[SYNTHETIC] (LINE:764)\l}"];
Node_20 [shape=record,label="{20\:\ 0x001b|0x001b: INVOKE  (r0 I:long) = (r3 I:long A[D('arg0' long)]) type: STATIC call: kotlin.time.Duration.getValue\-impl(long):long A[MD:(long):long (m)] (LINE:767)\l0x001f: INVOKE  (r2 I:kotlin.time.DurationUnit) = (r3 I:long A[D('arg0' long)]) type: STATIC call: kotlin.time.Duration.getStorageUnit\-impl(long):kotlin.time.DurationUnit A[MD:(long):kotlin.time.DurationUnit (m)]\l0x0023: INVOKE  (r0 I:long) = (r0 I:long), (r2 I:kotlin.time.DurationUnit), (r5 I:kotlin.time.DurationUnit A[D('unit' kotlin.time.DurationUnit)]) type: STATIC call: kotlin.time.DurationUnitKt.convertDurationUnit(long, kotlin.time.DurationUnit, kotlin.time.DurationUnit):long A[MD:(long, kotlin.time.DurationUnit, kotlin.time.DurationUnit):long (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0027|RETURN\lORIG_RETURN\l|0x0027: RETURN  (r0 I:long)  (LINE:764)\l}"];
MethodNode[shape=record,label="{public static final long kotlin.time.Duration.toLong\-impl((r3 I:long A[D('arg0' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.time.DurationUnit A[D('unit' kotlin.time.DurationUnit), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0018 \-\> B:21:0x0027, CROSS_EDGE: B:20:0x001b \-\> B:21:0x0027\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0027: r3 'arg0' J\l  \-1 \-0x0027: r5 'unit' Lkotlin\/time\/DurationUnit;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_13;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_13;
Node_20 -> Node_21;
Node_21 -> Node_13;
}

