digraph "CFG forkotlin.time.Duration.toString\-impl(JLkotlin\/time\/DurationUnit;I)Ljava\/lang\/String;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"unit\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('unit' kotlin.time.DurationUnit)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|0x0005: IF  (r7 I:??[int, byte, short, char] A[D('decimals' int)]) \< (0 ??[int, byte, short, char])  \-\> B:20:0x0009  (LINE:1016)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0039 \l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: INVOKE  (r0 I:double) = (r4 I:long A[D('arg0' long)]), (r6 I:kotlin.time.DurationUnit A[D('unit' kotlin.time.DurationUnit)]) type: STATIC call: kotlin.time.Duration.toDouble\-impl(long, kotlin.time.DurationUnit):double A[MD:(long, kotlin.time.DurationUnit):double (m)] (LINE:1017)\l0x0010: INVOKE  (r2 I:boolean) = (r0 I:double A[D('number' double)]) type: STATIC call: java.lang.Double.isInfinite(double):boolean A[MD:(double):boolean (c)] (LINE:1018)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|0x0014: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001b \l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|0x0016: INVOKE  (r2 I:java.lang.String) = (r0 I:double A[D('number' double)]) type: STATIC call: java.lang.String.valueOf(double):java.lang.String A[MD:(double):java.lang.String (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|RETURN\l|0x001a: RETURN  (r2 I:java.lang.String) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x001b|0x001b: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:1019)\l0x001d: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0020: CONST  (r3 I:??[int, float, short, byte, char]) = (12 ??[int, float, short, byte, char]) \l0x0022: INVOKE  (r3 I:int) = (r7 I:int A[D('decimals' int)]), (r3 I:int) type: STATIC call: kotlin.ranges.RangesKt.coerceAtMost(int, int):int A[MD:(int, int):int (m)]\l0x0026: INVOKE  (r3 I:java.lang.String) = (r0 I:double A[D('number' double)]), (r3 I:int) type: STATIC call: kotlin.time.DurationJvmKt.formatToExactDecimals(double, int):java.lang.String A[MD:(double, int):java.lang.String (m)]\l0x002a: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002d: INVOKE  (r3 I:java.lang.String) = (r6 I:kotlin.time.DurationUnit A[D('unit' kotlin.time.DurationUnit)]) type: STATIC call: kotlin.time.DurationUnitKt.shortName(kotlin.time.DurationUnit):java.lang.String A[MD:(kotlin.time.DurationUnit):java.lang.String (m)]\l0x0031: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0034: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0038|RETURN\l|0x0038: RETURN  (r2 I:java.lang.String) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0039|0x0039: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('number' double)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1477)\l0x003a: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:1016)\l0x003c: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x003f: CONST_STR  (r2 I:java.lang.String) =  \"decimals must be not negative, but was \" \l0x0041: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0044: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:int A[D('decimals' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0047: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-Duration$toString$2' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004b: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x004d: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0051: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0054|0x0054: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.time.Duration.toString\-impl((r4 I:long A[D('arg0' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.time.DurationUnit A[D('unit' kotlin.time.DurationUnit), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('decimals' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0038 \-\> B:16:?, CROSS_EDGE: B:29:0x0054 \-\> B:16:?, CROSS_EDGE: B:20:0x0009 \-\> B:21:0x000a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0010\-0x0039: r0 'number' D\l  0x003a\-0x004b: r0 '$i$a$\-require\-Duration$toString$2' I\l  \-1 \-0x0054: r4 'arg0' J\l  \-1 \-0x0054: r6 'unit' Lkotlin\/time\/DurationUnit;\l  \-1 \-0x0054: r7 'decimals' I\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_28;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_16;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_28 -> Node_29;
Node_29 -> Node_16;
Node_20 -> Node_21;
}

