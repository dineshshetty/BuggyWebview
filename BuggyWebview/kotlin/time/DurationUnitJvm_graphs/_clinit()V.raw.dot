digraph "CFG forkotlin.time.DurationUnit.\<clinit\>()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit  (LINE:19)\l0x0002: SGET  (r1 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.NANOSECONDS java.util.concurrent.TimeUnit \l0x0004: CONST_STR  (r2 I:java.lang.String) =  \"NANOSECONDS\" \l0x0006: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: INVOKE  (r0 I:kotlin.time.DurationUnit), (r2 I:java.lang.String), (r3 I:int), (r1 I:java.util.concurrent.TimeUnit) type: DIRECT call: kotlin.time.DurationUnit.\<init\>(java.lang.String, int, java.util.concurrent.TimeUnit):void A[MD:(java.lang.String, int, java.util.concurrent.TimeUnit):void (m)]\l0x000a: SPUT  (r0 I:kotlin.time.DurationUnit) kotlin.time.DurationUnit.NANOSECONDS kotlin.time.DurationUnit \l0x000c: NEW_INSTANCE  (r0 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit  (LINE:23)\l0x000e: SGET  (r1 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.MICROSECONDS java.util.concurrent.TimeUnit \l0x0010: CONST_STR  (r2 I:java.lang.String) =  \"MICROSECONDS\" \l0x0012: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0013: INVOKE  (r0 I:kotlin.time.DurationUnit), (r2 I:java.lang.String), (r3 I:int), (r1 I:java.util.concurrent.TimeUnit) type: DIRECT call: kotlin.time.DurationUnit.\<init\>(java.lang.String, int, java.util.concurrent.TimeUnit):void A[MD:(java.lang.String, int, java.util.concurrent.TimeUnit):void (m)]\l0x0016: SPUT  (r0 I:kotlin.time.DurationUnit) kotlin.time.DurationUnit.MICROSECONDS kotlin.time.DurationUnit \l0x0018: NEW_INSTANCE  (r0 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit  (LINE:27)\l0x001a: SGET  (r1 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.MILLISECONDS java.util.concurrent.TimeUnit \l0x001c: CONST_STR  (r2 I:java.lang.String) =  \"MILLISECONDS\" \l0x001e: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x001f: INVOKE  (r0 I:kotlin.time.DurationUnit), (r2 I:java.lang.String), (r3 I:int), (r1 I:java.util.concurrent.TimeUnit) type: DIRECT call: kotlin.time.DurationUnit.\<init\>(java.lang.String, int, java.util.concurrent.TimeUnit):void A[MD:(java.lang.String, int, java.util.concurrent.TimeUnit):void (m)]\l0x0022: SPUT  (r0 I:kotlin.time.DurationUnit) kotlin.time.DurationUnit.MILLISECONDS kotlin.time.DurationUnit \l0x0024: NEW_INSTANCE  (r0 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit  (LINE:31)\l0x0026: SGET  (r1 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.SECONDS java.util.concurrent.TimeUnit \l0x0028: CONST_STR  (r2 I:java.lang.String) =  \"SECONDS\" \l0x002a: CONST  (r3 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x002b: INVOKE  (r0 I:kotlin.time.DurationUnit), (r2 I:java.lang.String), (r3 I:int), (r1 I:java.util.concurrent.TimeUnit) type: DIRECT call: kotlin.time.DurationUnit.\<init\>(java.lang.String, int, java.util.concurrent.TimeUnit):void A[MD:(java.lang.String, int, java.util.concurrent.TimeUnit):void (m)]\l0x002e: SPUT  (r0 I:kotlin.time.DurationUnit) kotlin.time.DurationUnit.SECONDS kotlin.time.DurationUnit \l0x0030: NEW_INSTANCE  (r0 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit  (LINE:35)\l0x0032: SGET  (r1 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.MINUTES java.util.concurrent.TimeUnit \l0x0034: CONST_STR  (r2 I:java.lang.String) =  \"MINUTES\" \l0x0036: CONST  (r3 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0037: INVOKE  (r0 I:kotlin.time.DurationUnit), (r2 I:java.lang.String), (r3 I:int), (r1 I:java.util.concurrent.TimeUnit) type: DIRECT call: kotlin.time.DurationUnit.\<init\>(java.lang.String, int, java.util.concurrent.TimeUnit):void A[MD:(java.lang.String, int, java.util.concurrent.TimeUnit):void (m)]\l0x003a: SPUT  (r0 I:kotlin.time.DurationUnit) kotlin.time.DurationUnit.MINUTES kotlin.time.DurationUnit \l0x003c: NEW_INSTANCE  (r0 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit  (LINE:39)\l0x003e: SGET  (r1 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.HOURS java.util.concurrent.TimeUnit \l0x0040: CONST_STR  (r2 I:java.lang.String) =  \"HOURS\" \l0x0042: CONST  (r3 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l0x0043: INVOKE  (r0 I:kotlin.time.DurationUnit), (r2 I:java.lang.String), (r3 I:int), (r1 I:java.util.concurrent.TimeUnit) type: DIRECT call: kotlin.time.DurationUnit.\<init\>(java.lang.String, int, java.util.concurrent.TimeUnit):void A[MD:(java.lang.String, int, java.util.concurrent.TimeUnit):void (m)]\l0x0046: SPUT  (r0 I:kotlin.time.DurationUnit) kotlin.time.DurationUnit.HOURS kotlin.time.DurationUnit \l0x0048: NEW_INSTANCE  (r0 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit  (LINE:43)\l0x004a: SGET  (r1 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.DAYS java.util.concurrent.TimeUnit \l0x004c: CONST_STR  (r2 I:java.lang.String) =  \"DAYS\" \l0x004e: CONST  (r3 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l0x004f: INVOKE  (r0 I:kotlin.time.DurationUnit), (r2 I:java.lang.String), (r3 I:int), (r1 I:java.util.concurrent.TimeUnit) type: DIRECT call: kotlin.time.DurationUnit.\<init\>(java.lang.String, int, java.util.concurrent.TimeUnit):void A[MD:(java.lang.String, int, java.util.concurrent.TimeUnit):void (m)]\l0x0052: SPUT  (r0 I:kotlin.time.DurationUnit) kotlin.time.DurationUnit.DAYS kotlin.time.DurationUnit \l0x0054: INVOKE  (r0 I:kotlin.time.DurationUnit[]) =  type: STATIC call: kotlin.time.DurationUnit.$values():kotlin.time.DurationUnit[] A[MD:():kotlin.time.DurationUnit[] (m)]\l0x0058: SPUT  (r0 I:kotlin.time.DurationUnit[]) kotlin.time.DurationUnit.$VALUES kotlin.time.DurationUnit[] \l}"];
Node_7 [shape=record,label="{7\:\ 0x005a|RETURN\l|0x005a: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlin.time.DurationUnit.\<clinit\>()  | DONT_GENERATE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

