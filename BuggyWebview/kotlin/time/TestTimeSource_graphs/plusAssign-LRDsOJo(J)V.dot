digraph "CFG forkotlin.time.TestTimeSource.plusAssign\-LRDsOJo(J)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|long r0 = kotlin.time.Duration.m1505toLongimpl(r12, getUnit())\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if ((r0 \> Long.MIN_VALUE ? 1 : (r0 == Long.MIN_VALUE ? 0 : \-1)) == 0) goto L13\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if ((r0 \> Long.MAX_VALUE ? 1 : (r0 == Long.MAX_VALUE ? 0 : \-1)) == 0) goto L13\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|long r2 = r11.reading\llong r4 = r2 + r0\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|if (((r2 ^ r0) \> 0 ? 1 : ((r2 ^ r0) == 0 ? 0 : \-1)) \< 0) goto L10\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023}"];
Node_9 [shape=record,label="{9\:\ 0x0026|if (((r2 ^ r4) \> 0 ? 1 : ((r2 ^ r4) == 0 ? 0 : \-1)) \>= 0) goto L10\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|m1592overflowLRDsOJo(r12)\l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|PHI: r4 \l  PHI: (r4v5 'newReading' long) = (r4v4 'newReading' long), (r4v7 'newReading' long), (r4v7 'newReading' long), (r4v7 'newReading' long) binds: [B:17:0x0048, B:7:0x0021, B:9:0x0026, B:10:0x0028] A[DONT_GENERATE, DONT_INLINE]\l|r11.reading = r4\l}"];
Node_19 [shape=record,label="{19\:\ 0x004c|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|double r2 = kotlin.time.Duration.m1502toDoubleimpl(r12, getUnit())\ldouble r4 = ((double) r11.reading) + r2\l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|if ((r4 \> 9.223372036854776E18d ? 1 : (r4 == 9.223372036854776E18d ? 0 : \-1)) \> 0) goto L18\l}"];
Node_14 [shape=record,label="{14\:\ 0x003f}"];
Node_15 [shape=record,label="{15\:\ 0x0043|if ((r4 \> (\-9.223372036854776E18d) ? 1 : (r4 == (\-9.223372036854776E18d) ? 0 : \-1)) \>= 0) goto L17\l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|r4 = (long) r4\l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|m1592overflowLRDsOJo(r12)\l}"];
MethodNode[shape=record,label="{public final void kotlin.time.TestTimeSource.plusAssign\-LRDsOJo((r11v0 'this' kotlin.time.TestTimeSource A[IMMUTABLE_TYPE, THIS]), (r12v0 'duration' long A[D('duration' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0026 \-\> B:18:0x004a, CROSS_EDGE: B:7:0x0021 \-\> B:18:0x004a, CROSS_EDGE: B:17:0x0048 \-\> B:18:0x004a, CROSS_EDGE: B:15:0x0043 \-\> B:17:0x0048, CROSS_EDGE: B:13:0x003d \-\> B:16:0x0045, CROSS_EDGE: B:3:0x000c \-\> B:12:0x002d\lTYPE_VARS: EMPTY\lRENAME_REASON:not valid java name\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_18;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_18;
Node_10 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_16 -> Node_17;
}

