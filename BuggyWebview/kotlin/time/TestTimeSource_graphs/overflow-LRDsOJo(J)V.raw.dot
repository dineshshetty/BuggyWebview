digraph "CFG forkotlin.time.TestTimeSource.overflow\-LRDsOJo(J)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:107)\l0x0002: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0004: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0007: CONST_STR  (r2 I:java.lang.String) =  \"TestTimeSource will overflow if its reading \" \l0x0009: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x000c: IGET  (r2 I:long) = (r4 I:kotlin.time.TestTimeSource) kotlin.time.TestTimeSource.reading long \l0x000e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:long) type: VIRTUAL call: java.lang.StringBuilder.append(long):java.lang.StringBuilder A[MD:(long):java.lang.StringBuilder (c)]\l0x0011: CONST_STR  (r2 I:java.lang.String) =  \"ns is advanced by \" \l0x0013: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0016: INVOKE  (r2 I:java.lang.String) = (r5 I:long A[D('duration' long)]) type: STATIC call: kotlin.time.Duration.toString\-impl(long):java.lang.String A[MD:(long):java.lang.String (m)]\l0x001a: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x001d: CONST  (r2 I:??[int, float, short, byte, char]) = (46 ??[int, float, short, byte, char]) \l0x001f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0022: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0026: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|0x0029: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final void kotlin.time.TestTimeSource.overflow\-LRDsOJo((r4 'this' I:kotlin.time.TestTimeSource A[IMMUTABLE_TYPE, THIS]), (r5 I:long A[D('duration' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0029: r5 'duration' J\lRENAME_REASON:not valid java name\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

