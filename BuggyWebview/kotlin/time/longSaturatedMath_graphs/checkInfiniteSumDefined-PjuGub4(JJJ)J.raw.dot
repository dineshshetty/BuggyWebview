digraph "CFG forkotlin.time.LongSaturatedMathKt.checkInfiniteSumDefined\-PjuGub4(JJJ)J" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r7 I:long A[D('duration' long)]) type: STATIC call: kotlin.time.Duration.isInfinite\-impl(long):boolean A[MD:(long):boolean (m)] (LINE:30)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0017 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: ARITH  (r0 I:long) = (r5 I:long A[D('longNs' long)]) ^ (r9 I:long A[D('durationNs' long)]) \l0x0008: CONST  (r2 I:??[long, double]) = (0 ??[long, double]) \l0x000a: CMP_L  (r4 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_15 [shape=record,label="{15\:\ 0x000c|0x000c: IF  (r4 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:17:0x000f \l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0011: CONST_STR  (r1 I:java.lang.String) =  \"Summing infinities of different signs\" \l0x0013: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0016|0x0016: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0017|RETURN\l|0x0017: RETURN  (r5 I:long A[D('longNs' long)])  (LINE:31)\l}"];
MethodNode[shape=record,label="{private static final long kotlin.time.LongSaturatedMathKt.checkInfiniteSumDefined\-PjuGub4((r5 I:long A[D('longNs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:long A[D('duration' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[D('durationNs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0017 \-\> B:11:?, CROSS_EDGE: B:13:0x0004 \-\> B:19:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0017: r5 'longNs' J\l  \-1 \-0x0017: r7 'duration' J\l  \-1 \-0x0017: r9 'durationNs' J\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

