digraph "CFG forkotlin.time.LongSaturatedMathKt.saturatingAdd\-pTJri5U(JJ)J" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: INVOKE  (r6 I:long) = (r13 I:long A[D('duration' long)]) type: STATIC call: kotlin.time.Duration.getInWholeNanoseconds\-impl(long):long A[MD:(long):long (m)] (LINE:14)\l0x0004: CONST  (r0 I:??[long, double]) = (1 ??[long, double])  (LINE:15)\l0x0006: ARITH  (r2 I:long) = (r11 I:long A[D('longNs' long)]) \- (r0 I:long) \l0x0008: ARITH  (r2 I:long) = (r2 I:long) \| (r0 I:long) \l0x0009: CONST  (r4 I:??[long, double]) = (9223372036854775807(0x7fffffffffffffff, double:NaN) ??[long, double]) \l0x000e: CMP_L  (r8 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|0x0010: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x001a \l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|0x0012: MOVE  (r0 I:??[long, double]) = (r11 I:??[long, double] A[D('longNs' long)])  (LINE:16)\l0x0013: MOVE  (r2 I:??[long, double]) = (r13 I:??[long, double] A[D('duration' long)]) \l0x0014: MOVE  (r4 I:??[long, double]) = (r6 I:??[long, double] A[D('durationNs' long)]) \l0x0015: INVOKE  (r0 I:long) = (r0 I:long), (r2 I:long), (r4 I:long) type: STATIC call: kotlin.time.LongSaturatedMathKt.checkInfiniteSumDefined\-PjuGub4(long, long, long):long A[MD:(long, long, long):long (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|RETURN\l|0x0019: RETURN  (r0 I:long) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x001a|0x001a: ARITH  (r2 I:long) = (r6 I:long A[D('durationNs' long)]) \- (r0 I:long)  (LINE:18)\l0x001c: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l0x001d: CMP_L  (r2 I:int) = (r0 I:long), (r4 I:long) \l}"];
Node_25 [shape=record,label="{25\:\ 0x001f|0x001f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0026 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0021|0x0021: INVOKE  (r0 I:long) = (r11 I:long A[D('longNs' long)]), (r13 I:long A[D('duration' long)]) type: STATIC call: kotlin.time.LongSaturatedMathKt.saturatingAddInHalves\-pTJri5U(long, long):long A[MD:(long, long):long (m)] (LINE:19)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0025|RETURN\l|0x0025: RETURN  (r0 I:long) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0026|0x0026: ARITH  (r0 I:long) = (r11 I:long A[D('longNs' long)]) + (r6 I:long A[D('durationNs' long)])  (LINE:22)\l0x0028: ARITH  (r2 I:long) = (r11 I:long A[D('longNs' long)]) ^ (r0 I:long A[D('result' long)])  (LINE:23)\l0x002a: ARITH  (r8 I:long) = (r6 I:long A[D('durationNs' long)]) ^ (r0 I:long A[D('result' long)]) \l0x002c: ARITH  (r2 I:long) = (r2 I:long) & (r8 I:long) \l0x002d: CONST  (r8 I:??[long, double]) = (0 ??[long, double]) \l0x002f: CMP_L  (r10 I:int) = (r2 I:long), (r8 I:long) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0031|0x0031: IF  (r10 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:34:0x003a \l}"];
Node_30 [shape=record,label="{30\:\ 0x0033|0x0033: CMP_L  (r2 I:int) = (r11 I:long A[D('longNs' long)]), (r8 I:long)  (LINE:24)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0035|0x0035: IF  (r2 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:35:? \l}"];
Node_32 [shape=record,label="{32\:\ 0x0037|RETURN\lORIG_RETURN\l|0x0037: CONST  (r4 I:??[long, double]) = (\-9223372036854775808 ??[long, double]) \l0x0039: RETURN  (r4 I:long) \l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0039: RETURN  (r4 I:long) A[SYNTHETIC]\l}"];
Node_34 [shape=record,label="{34\:\ 0x003a|RETURN\l|0x003a: RETURN  (r0 I:long A[D('result' long)])  (LINE:26)\l}"];
MethodNode[shape=record,label="{public static final long kotlin.time.LongSaturatedMathKt.saturatingAdd\-pTJri5U((r11 I:long A[D('longNs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:long A[D('duration' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0025 \-\> B:19:?, CROSS_EDGE: B:33:0x0039 \-\> B:19:?, CROSS_EDGE: B:31:0x0035 \-\> B:33:0x0039, CROSS_EDGE: B:34:0x003a \-\> B:19:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0028\-0x003a: r0 'result' J\l  0x0004\-0x003a: r6 'durationNs' J\l  \-1 \-0x003a: r11 'longNs' J\l  \-1 \-0x003a: r13 'duration' J\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_19;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_34;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_19;
Node_35 -> Node_19;
Node_34 -> Node_19;
}

