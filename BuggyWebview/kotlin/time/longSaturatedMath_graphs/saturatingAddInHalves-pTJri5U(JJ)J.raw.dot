digraph "CFG forkotlin.time.LongSaturatedMathKt.saturatingAddInHalves\-pTJri5U(JJ)J" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:35)\l0x0001: INVOKE  (r0 I:long) = (r9 I:long A[D('duration' long)]), (r0 I:int) type: STATIC call: kotlin.time.Duration.div\-UwyO8pc(long, int):long A[MD:(long, int):long (m)]\l0x0005: INVOKE  (r2 I:long) = (r0 I:long A[D('half' long)]) type: STATIC call: kotlin.time.Duration.getInWholeNanoseconds\-impl(long):long A[MD:(long):long (m)] (LINE:36)\l0x0009: CONST  (r4 I:??[long, double]) = (1 ??[long, double]) \l0x000b: ARITH  (r2 I:long) = (r2 I:long) \- (r4 I:long) \l0x000c: ARITH  (r2 I:long) = (r2 I:long) \| (r4 I:long) \l0x000d: CONST  (r4 I:??[long, double]) = (9223372036854775807(0x7fffffffffffffff, double:NaN) ??[long, double]) \l0x0012: CMP_L  (r6 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0014|0x0014: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0020 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|0x0016: CAST (r2 I:double) = (double) (r7 I:long A[D('longNs' long)])  (LINE:38)\l0x0017: SGET  (r4 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit.NANOSECONDS kotlin.time.DurationUnit \l0x0019: INVOKE  (r4 I:double) = (r9 I:long A[D('duration' long)]), (r4 I:kotlin.time.DurationUnit) type: STATIC call: kotlin.time.Duration.toDouble\-impl(long, kotlin.time.DurationUnit):double A[MD:(long, kotlin.time.DurationUnit):double (m)]\l0x001d: ARITH  (r2 I:double) = (r2 I:double) + (r4 I:double) \l0x001e: CAST (r2 I:long) = (long) (r2 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|RETURN\l|0x001f: RETURN  (r2 I:long) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|0x0020: INVOKE  (r2 I:long) = (r7 I:long A[D('longNs' long)]), (r0 I:long A[D('half' long)]) type: STATIC call: kotlin.time.LongSaturatedMathKt.saturatingAdd\-pTJri5U(long, long):long A[MD:(long, long):long (m)] (LINE:40)\l0x0024: INVOKE  (r2 I:long) = (r2 I:long), (r0 I:long A[D('half' long)]) type: STATIC call: kotlin.time.LongSaturatedMathKt.saturatingAdd\-pTJri5U(long, long):long A[MD:(long, long):long (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0028|RETURN\l|0x0028: RETURN  (r2 I:long) \l}"];
MethodNode[shape=record,label="{private static final long kotlin.time.LongSaturatedMathKt.saturatingAddInHalves\-pTJri5U((r7 I:long A[D('longNs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[D('duration' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0028 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0028: r0 'half' J\l  \-1 \-0x0028: r7 'longNs' J\l  \-1 \-0x0028: r9 'duration' J\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

