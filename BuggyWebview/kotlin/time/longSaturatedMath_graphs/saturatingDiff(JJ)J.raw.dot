digraph "CFG forkotlin.time.LongSaturatedMathKt.saturatingDiff(JJ)J" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST  (r0 I:??[long, double]) = (1 ??[long, double])  (LINE:45)\l0x0002: ARITH  (r2 I:long) = (r12 I:long A[D('originNs' long)]) \- (r0 I:long) \l0x0004: ARITH  (r0 I:long) = (r0 I:long) \| (r2 I:long) \l0x0005: CONST  (r2 I:??[long, double]) = (9223372036854775807(0x7fffffffffffffff, double:NaN) ??[long, double]) \l0x000a: CMP_L  (r4 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_15 [shape=record,label="{15\:\ 0x000c|0x000c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0019 \l}"];
Node_16 [shape=record,label="{16\:\ 0x000e|0x000e: SGET  (r0 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit.DAYS kotlin.time.DurationUnit  (LINE:46)\l0x0010: INVOKE  (r0 I:long) = (r12 I:long A[D('originNs' long)]), (r0 I:kotlin.time.DurationUnit) type: STATIC call: kotlin.time.DurationKt.toDuration(long, kotlin.time.DurationUnit):long A[MD:(long, kotlin.time.DurationUnit):long (m)]\l0x0014: INVOKE  (r0 I:long) = (r0 I:long) type: STATIC call: kotlin.time.Duration.unaryMinus\-UwyO8pc(long):long A[MD:(long):long (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:long) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0019|0x0019: ARITH  (r0 I:long) = (r10 I:long A[D('valueNs' long)]) \- (r12 I:long A[D('originNs' long)])  (LINE:48)\l0x001b: ARITH  (r2 I:long) = (r0 I:long A[D('result' long)]) ^ (r10 I:long A[D('valueNs' long)])  (LINE:49)\l0x001d: ARITH  (r4 I:long) = (r0 I:long A[D('result' long)]) ^ (r12 I:long A[D('originNs' long)]) \l0x001f: NOT  (r4 I:long) = (r4 I:long) \l0x0020: ARITH  (r2 I:long) = (r2 I:long) & (r4 I:long) \l0x0021: CONST  (r4 I:??[long, double]) = (0 ??[long, double]) \l0x0023: CMP_L  (r6 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0025|0x0025: IF  (r6 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:22:0x004a \l}"];
Node_20 [shape=record,label="{20\:\ 0x0027|0x0027: CONST  (r2 I:??[int, float, short, byte, char]) = (1000000(0xf4240, float:1.401298E\-39) ??[int, float, short, byte, char])  (LINE:50)\l0x002a: CAST (r2 I:long) = (long) (r2 I:int) \l0x002b: ARITH  (r4 I:long) = (r10 I:long A[D('valueNs' long)]) \/ (r2 I:long) \l0x002d: ARITH  (r6 I:long) = (r12 I:long A[D('originNs' long)]) \/ (r2 I:long) \l0x002f: ARITH  (r4 I:long) = (r4 I:long) \- (r6 I:long) \l0x0030: ARITH  (r6 I:long) = (r10 I:long A[D('valueNs' long)]) % (r2 I:long)  (LINE:51)\l0x0032: ARITH  (r2 I:long) = (r12 I:long A[D('originNs' long)]) % (r2 I:long) \l0x0034: ARITH  (r6 I:long) = (r6 I:long) \- (r2 I:long) \l0x0035: SGET  (r2 I:kotlin.time.Duration$Companion) =  kotlin.time.Duration.Companion kotlin.time.Duration$Companion  (LINE:52)\l0x0037: SGET  (r2 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit.MILLISECONDS kotlin.time.DurationUnit \l0x0039: INVOKE  (r2 I:long) = (r4 I:long A[D('resultMs' long)]), (r2 I:kotlin.time.DurationUnit) type: STATIC call: kotlin.time.DurationKt.toDuration(long, kotlin.time.DurationUnit):long A[MD:(long, kotlin.time.DurationUnit):long (m)]\l0x003d: SGET  (r8 I:kotlin.time.Duration$Companion) =  kotlin.time.Duration.Companion kotlin.time.Duration$Companion \l0x003f: SGET  (r8 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit.NANOSECONDS kotlin.time.DurationUnit \l0x0041: INVOKE  (r8 I:long) = (r6 I:long A[D('resultNs' long)]), (r8 I:kotlin.time.DurationUnit) type: STATIC call: kotlin.time.DurationKt.toDuration(long, kotlin.time.DurationUnit):long A[MD:(long, kotlin.time.DurationUnit):long (m)]\l0x0045: INVOKE  (r2 I:long) = (r2 I:long), (r8 I:long) type: STATIC call: kotlin.time.Duration.plus\-LRDsOJo(long, long):long A[MD:(long, long):long (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0049|RETURN\l|0x0049: RETURN  (r2 I:long) \l}"];
Node_22 [shape=record,label="{22\:\ 0x004a|0x004a: SGET  (r2 I:kotlin.time.Duration$Companion) =  kotlin.time.Duration.Companion kotlin.time.Duration$Companion  (LINE:54)\l0x004c: SGET  (r2 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit.NANOSECONDS kotlin.time.DurationUnit \l0x004e: INVOKE  (r2 I:long) = (r0 I:long A[D('result' long)]), (r2 I:kotlin.time.DurationUnit) type: STATIC call: kotlin.time.DurationKt.toDuration(long, kotlin.time.DurationUnit):long A[MD:(long, kotlin.time.DurationUnit):long (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0052|RETURN\l|0x0052: RETURN  (r2 I:long) \l}"];
MethodNode[shape=record,label="{public static final long kotlin.time.LongSaturatedMathKt.saturatingDiff((r10 I:long A[D('valueNs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:long A[D('originNs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0049 \-\> B:13:?, CROSS_EDGE: B:23:0x0052 \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0030\-0x004a: r4 'resultMs' J\l  0x0035\-0x004a: r6 'resultNs' J\l  0x001b\-0x0052: r0 'result' J\l  \-1 \-0x0052: r10 'valueNs' J\l  \-1 \-0x0052: r12 'originNs' J\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

