digraph "CFG forkotlin.time.Duration.Companion.parseIsoString\-UwyO8pc(Ljava\/lang\/String;)J" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"value\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('value' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0006: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:410)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_13 [shape=record,label="{13\:\ 0x0007|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IllegalArgumentException \-\> 0x000c, blocks: (B:13:0x0007), top: B:18:0x0007 \}\lCatch: IllegalArgumentException \-\> 0x000c\l|0x0007: INVOKE  (r0 I:long) = (r5 I:java.lang.String A[D('value' java.lang.String)]), (r0 I:boolean) type: STATIC call: kotlin.time.DurationKt.access$parseDuration(java.lang.String, boolean):long A[Catch: IllegalArgumentException \-\> 0x000c, MD:(java.lang.String, boolean):long (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x000b|RETURN\l|0x000b: RETURN  (r0 I:long)  (LINE:413)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_15 [shape=record,label="{15\:\ 0x000c|ExcHandler: IllegalArgumentException \-\> 0x000c\l|0x000c: MOVE_EXCEPTION  (r0 I:java.lang.IllegalArgumentException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalArgumentException \-\> 0x000c] (LINE:411)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000d|0x000d: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:412)\l0x000f: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0011: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0014: CONST_STR  (r3 I:java.lang.String) =  \"Invalid ISO duration string format: '\" \l0x0016: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0019: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String A[D('value' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001c: CONST_STR  (r3 I:java.lang.String) =  \"'.\" \l0x001e: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0021: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0025: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('e' java.lang.IllegalArgumentException)]) \l0x0026: CHECK_CAST (r3 I:java.lang.Throwable) = (java.lang.Throwable) (r3 I:??[OBJECT, ARRAY]) \l0x0028: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r2 I:java.lang.String), (r3 I:java.lang.Throwable) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|0x002b: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final long kotlin.time.Duration.Companion.parseIsoString\-UwyO8pc((r4 'this' I:kotlin.time.Duration$Companion A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[D('value' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x002b \-\> B:11:?, CROSS_EDGE: B:18:0x0007 \-\> B:15:0x000c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x002b: r0 'e' Ljava\/lang\/IllegalArgumentException;\l  \-1 \-0x002b: r5 'value' Ljava\/lang\/String;\lTryCatch #0 \{IllegalArgumentException \-\> 0x000c, blocks: (B:13:0x0007), top: B:18:0x0007 \}\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_18;
Node_18 -> Node_13;
Node_18 -> Node_15;
Node_13 -> Node_14;
Node_13 -> Node_19;
Node_14 -> Node_11;
Node_19 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_11;
}

