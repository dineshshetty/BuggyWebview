digraph "CFG forkotlin.time.TimeSourceKt.compareTo(Lkotlin\/time\/TimeMark;Lkotlin\/time\/TimeMark;)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$compareTo' kotlin.time.TimeMark)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"other\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('other' kotlin.time.TimeMark)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: NEW_INSTANCE  (r0 I:java.lang.Error) =  java.lang.Error  (LINE:153)\l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"Operation is disallowed.\" \l0x000e: INVOKE  (r0 I:java.lang.Error), (r1 I:java.lang.String) type: DIRECT call: java.lang.Error.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final int kotlin.time.TimeSourceKt.compareTo((r2 I:kotlin.time.TimeMark A[D('$this$compareTo' kotlin.time.TimeMark), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.time.TimeMark A[D('other' kotlin.time.TimeMark), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>ERROR:Lkotlin\/DeprecationLevel;\}, message=Comparing one TimeMark to another is not a well defined operation because these time marks could have been obtained from the different time sources.\}\}\}\lDebug Info:\l  \-1 \-0x0011: r2 '$this$compareTo' Lkotlin\/time\/TimeMark;\l  \-1 \-0x0011: r3 'other' Lkotlin\/time\/TimeMark;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

