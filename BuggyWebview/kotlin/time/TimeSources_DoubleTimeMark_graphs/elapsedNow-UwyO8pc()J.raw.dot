digraph "CFG forkotlin.time.AbstractDoubleTimeSource.DoubleTimeMark.elapsedNow\-UwyO8pc()J" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:kotlin.time.AbstractDoubleTimeSource) = (r4 I:kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark) kotlin.time.AbstractDoubleTimeSource.DoubleTimeMark.timeSource kotlin.time.AbstractDoubleTimeSource  (LINE:53)\l0x0002: INVOKE  (r0 I:double) = (r0 I:kotlin.time.AbstractDoubleTimeSource) type: VIRTUAL call: kotlin.time.AbstractDoubleTimeSource.read():double A[MD:():double (m)]\l0x0006: IGET  (r2 I:double) = (r4 I:kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark) kotlin.time.AbstractDoubleTimeSource.DoubleTimeMark.startedAt double \l0x0008: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x0009: IGET  (r2 I:kotlin.time.AbstractDoubleTimeSource) = (r4 I:kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark) kotlin.time.AbstractDoubleTimeSource.DoubleTimeMark.timeSource kotlin.time.AbstractDoubleTimeSource \l0x000b: INVOKE  (r2 I:kotlin.time.DurationUnit) = (r2 I:kotlin.time.AbstractDoubleTimeSource) type: VIRTUAL call: kotlin.time.AbstractDoubleTimeSource.getUnit():kotlin.time.DurationUnit A[MD:():kotlin.time.DurationUnit (m)]\l0x000f: INVOKE  (r0 I:long) = (r0 I:double), (r2 I:kotlin.time.DurationUnit) type: STATIC call: kotlin.time.DurationKt.toDuration(double, kotlin.time.DurationUnit):long A[MD:(double, kotlin.time.DurationUnit):long (m)]\l0x0013: IGET  (r2 I:long) = (r4 I:kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark) kotlin.time.AbstractDoubleTimeSource.DoubleTimeMark.offset long \l0x0015: INVOKE  (r0 I:long) = (r0 I:long), (r2 I:long) type: STATIC call: kotlin.time.Duration.minus\-LRDsOJo(long, long):long A[MD:(long, long):long (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|RETURN\l|0x0019: RETURN  (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public long kotlin.time.AbstractDoubleTimeSource.DoubleTimeMark.elapsedNow\-UwyO8pc((r4 'this' I:kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lRENAME_REASON:not valid java name\lMETHOD_OVERRIDE: [kotlin.time.TimeMark.elapsedNow\-UwyO8pc():long]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

