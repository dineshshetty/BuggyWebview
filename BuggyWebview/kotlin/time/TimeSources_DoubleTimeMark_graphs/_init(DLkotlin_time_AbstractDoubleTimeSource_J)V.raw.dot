digraph "CFG forkotlin.time.AbstractDoubleTimeSource.DoubleTimeMark.\<init\>(DLkotlin\/time\/AbstractDoubleTimeSource;J)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:52)\l0x0003: IPUT  (r1 I:double A[D('startedAt' double)]), (r0 I:kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark) kotlin.time.AbstractDoubleTimeSource.DoubleTimeMark.startedAt double \l0x0005: IPUT  \l  (r3 I:kotlin.time.AbstractDoubleTimeSource A[D('timeSource' kotlin.time.AbstractDoubleTimeSource)])\l  (r0 I:kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark)\l kotlin.time.AbstractDoubleTimeSource.DoubleTimeMark.timeSource kotlin.time.AbstractDoubleTimeSource \l0x0007: IPUT  (r4 I:long A[D('offset' long)]), (r0 I:kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark) kotlin.time.AbstractDoubleTimeSource.DoubleTimeMark.offset long \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|RETURN\l|0x0009: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void kotlin.time.AbstractDoubleTimeSource.DoubleTimeMark.\<init\>((r0 'this' I:kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark A[IMMUTABLE_TYPE, THIS]), (r1 I:double A[D('startedAt' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.time.AbstractDoubleTimeSource A[D('timeSource' kotlin.time.AbstractDoubleTimeSource), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('offset' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0009: r1 'startedAt' D\l  \-1 \-0x0009: r3 'timeSource' Lkotlin\/time\/AbstractDoubleTimeSource;\l  \-1 \-0x0009: r4 'offset' J\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

