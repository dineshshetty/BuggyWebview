digraph "CFG forkotlin.time.AdjustedTimeMark.plus\-LRDsOJo(J)Lkotlin\/time\/TimeMark;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlin.time.AdjustedTimeMark) =  kotlin.time.AdjustedTimeMark  (LINE:160)\l0x0002: IGET  (r1 I:kotlin.time.TimeMark) = (r5 I:kotlin.time.AdjustedTimeMark) kotlin.time.AdjustedTimeMark.mark kotlin.time.TimeMark \l0x0004: IGET  (r2 I:long) = (r5 I:kotlin.time.AdjustedTimeMark) kotlin.time.AdjustedTimeMark.adjustment long \l0x0006: INVOKE  (r2 I:long) = (r2 I:long), (r6 I:long A[D('duration' long)]) type: STATIC call: kotlin.time.Duration.plus\-LRDsOJo(long, long):long A[MD:(long, long):long (m)]\l0x000a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  \l  (r0 I:kotlin.time.AdjustedTimeMark)\l  (r1 I:kotlin.time.TimeMark)\l  (r2 I:long)\l  (r4 I:kotlin.jvm.internal.DefaultConstructorMarker)\l type: DIRECT call: kotlin.time.AdjustedTimeMark.\<init\>(kotlin.time.TimeMark, long, kotlin.jvm.internal.DefaultConstructorMarker):void A[MD:(kotlin.time.TimeMark, long, kotlin.jvm.internal.DefaultConstructorMarker):void (m)]\l0x000e: CHECK_CAST (r0 I:kotlin.time.TimeMark) = (kotlin.time.TimeMark) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:kotlin.time.TimeMark) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlin.time.TimeMark kotlin.time.AdjustedTimeMark.plus\-LRDsOJo((r5 'this' I:kotlin.time.AdjustedTimeMark A[IMMUTABLE_TYPE, THIS]), (r6 I:long A[D('duration' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0010: r6 'duration' J\lMETHOD_OVERRIDE: [kotlin.time.TimeMark.plus\-LRDsOJo(long):kotlin.time.TimeMark]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

