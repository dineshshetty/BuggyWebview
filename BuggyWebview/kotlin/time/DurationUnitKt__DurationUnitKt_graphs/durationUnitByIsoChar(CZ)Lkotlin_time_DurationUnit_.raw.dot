digraph "CFG forkotlin.time.DurationUnitKt__DurationUnitKt.durationUnitByIsoChar(CZ)Lkotlin\/time\/DurationUnit;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0001|0x0001: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isTimeComponent' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0022  (LINE:91)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|0x0004: CONST  (r0 I:??[int, float, short, byte, char]) = (68 ??[int, float, short, byte, char])  (LINE:93)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|0x0006: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isoChar' char)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x000b \l}"];
Node_28 [shape=record,label="{28\:\ 0x0008|0x0008: SGET  (r0 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit.DAYS kotlin.time.DurationUnit \l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|0x0037: RETURN  (r0 I:kotlin.time.DurationUnit) A[SYNTHETIC] (LINE:105)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:94)\l0x000d: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000f: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0012: CONST_STR  (r2 I:java.lang.String) =  \"Invalid or unsupported duration ISO non\-time unit: \" \l0x0014: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0017: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:char A[D('isoChar' char)]) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x001a: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x001e: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0021|0x0021: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|0x0023: CONST  (r0 I:??[int, float, short, byte, char]) = (72 ??[int, float, short, byte, char])  (LINE:99)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0025|0x0025: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isoChar' char)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x002a \l}"];
Node_33 [shape=record,label="{33\:\ 0x0027|0x0027: SGET  (r0 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit.HOURS kotlin.time.DurationUnit \l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lRETURN\l|0x0037: RETURN  (r0 I:kotlin.time.DurationUnit) A[SYNTHETIC] (LINE:105)\l}"];
Node_34 [shape=record,label="{34\:\ 0x002a|0x002a: CONST  (r0 I:??[int, float, short, byte, char]) = (77 ??[int, float, short, byte, char])  (LINE:100)\l}"];
Node_35 [shape=record,label="{35\:\ 0x002c|0x002c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isoChar' char)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0031 \l}"];
Node_36 [shape=record,label="{36\:\ 0x002e|0x002e: SGET  (r0 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit.MINUTES kotlin.time.DurationUnit \l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|0x0037: RETURN  (r0 I:kotlin.time.DurationUnit) A[SYNTHETIC] (LINE:105)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0031|0x0031: CONST  (r0 I:??[int, float, short, byte, char]) = (83 ??[int, float, short, byte, char])  (LINE:101)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0033|0x0033: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isoChar' char)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0038 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0035|0x0035: SGET  (r0 I:kotlin.time.DurationUnit) =  kotlin.time.DurationUnit.SECONDS kotlin.time.DurationUnit \l}"];
Node_40 [shape=record,label="{40\:\ 0x0037|RETURN\lORIG_RETURN\l|0x0037: RETURN  (r0 I:kotlin.time.DurationUnit)  (LINE:105)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0038|0x0038: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:102)\l0x003a: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003c: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x003f: CONST_STR  (r2 I:java.lang.String) =  \"Invalid duration ISO time unit: \" \l0x0041: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0044: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:char A[D('isoChar' char)]) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0047: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004b: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x004e|0x004e: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final kotlin.time.DurationUnit kotlin.time.DurationUnitKt__DurationUnitKt.durationUnitByIsoChar((r3 I:char A[D('isoChar' char), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('isTimeComponent' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0021 \-\> B:24:?, CROSS_EDGE: B:33:0x0027 \-\> B:40:0x0037, CROSS_EDGE: B:36:0x002e \-\> B:40:0x0037, CROSS_EDGE: B:39:0x0035 \-\> B:40:0x0037, CROSS_EDGE: B:42:0x004e \-\> B:24:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x004e: r3 'isoChar' C\l  \-1 \-0x004e: r4 'isTimeComponent' Z\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_43;
Node_43 -> Node_24;
Node_29 -> Node_30;
Node_30 -> Node_24;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_44;
Node_44 -> Node_24;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_45;
Node_45 -> Node_24;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_41;
Node_39 -> Node_40;
Node_40 -> Node_24;
Node_41 -> Node_42;
Node_42 -> Node_24;
}

