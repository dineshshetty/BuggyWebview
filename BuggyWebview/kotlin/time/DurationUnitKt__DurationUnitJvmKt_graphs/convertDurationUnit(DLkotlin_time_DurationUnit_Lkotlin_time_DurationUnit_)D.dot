digraph "CFG forkotlin.time.DurationUnitKt__DurationUnitJvmKt.convertDurationUnit(DLkotlin\/time\/DurationUnit;Lkotlin\/time\/DurationUnit;)D" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"sourceUnit\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"targetUnit\")\llong r0 = r10.getTimeUnit$kotlin_stdlib().convert(1, r9.getTimeUnit$kotlin_stdlib())\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|if ((r0 \> 0 ? 1 : (r0 == 0 ? 0 : \-1)) \<= 0) goto L6\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e}"];
Node_13 [shape=record,label="{13\:\ 0x0021|RETURN\l|return ((double) r0) * r7\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0022|long r2 = r9.getTimeUnit$kotlin_stdlib().convert(1, r10.getTimeUnit$kotlin_stdlib())\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|RETURN\l|return r7 \/ ((double) r2)\l}"];
MethodNode[shape=record,label="{public static final double kotlin.time.DurationUnitKt__DurationUnitJvmKt.convertDurationUnit((r7v0 'value' double A[D('value' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'sourceUnit' kotlin.time.DurationUnit A[D('sourceUnit' kotlin.time.DurationUnit), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'targetUnit' kotlin.time.DurationUnit A[D('targetUnit' kotlin.time.DurationUnit), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0031 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

