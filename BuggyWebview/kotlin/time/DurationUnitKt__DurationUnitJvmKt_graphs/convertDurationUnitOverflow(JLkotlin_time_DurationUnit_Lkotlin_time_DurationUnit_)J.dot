digraph "CFG forkotlin.time.DurationUnitKt__DurationUnitJvmKt.convertDurationUnitOverflow(JLkotlin\/time\/DurationUnit;Lkotlin\/time\/DurationUnit;)J" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"sourceUnit\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"targetUnit\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|RETURN\l|return r5.getTimeUnit$kotlin_stdlib().convert(r2, r4.getTimeUnit$kotlin_stdlib())\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final long kotlin.time.DurationUnitKt__DurationUnitJvmKt.convertDurationUnitOverflow((r2v0 'value' long A[D('value' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'sourceUnit' kotlin.time.DurationUnit A[D('sourceUnit' kotlin.time.DurationUnit), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'targetUnit' kotlin.time.DurationUnit A[D('targetUnit' kotlin.time.DurationUnit), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

