digraph "CFG forkotlin.time.TimeSource.Monotonic.markNow()Lkotlin\/time\/TimeMark;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:long) = (r2 I:kotlin.time.TimeSource$Monotonic) type: VIRTUAL call: kotlin.time.TimeSource.Monotonic.markNow\-z9LOYto():long A[MD:():long (m)] (LINE:38)\l0x0004: INVOKE  (r0 I:kotlin.time.TimeSource$Monotonic$ValueTimeMark) = (r0 I:long) type: STATIC call: kotlin.time.TimeSource.Monotonic.ValueTimeMark.box\-impl(long):kotlin.time.TimeSource$Monotonic$ValueTimeMark A[MD:(long):kotlin.time.TimeSource$Monotonic$ValueTimeMark (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:kotlin.time.TimeMark) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ kotlin.time.TimeMark kotlin.time.TimeSource.Monotonic.markNow((r2 'this' I:kotlin.time.TimeSource$Monotonic A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlin.time.TimeSource.markNow():kotlin.time.TimeMark]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

