digraph "CFG forkotlin.streams.jdk8.StreamsKt.asSequence(Ljava\/util\/stream\/DoubleStream;)Lkotlin\/sequences\/Sequence;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$asSequence' java.util.stream.DoubleStream)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: NEW_INSTANCE  (r0 I:kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4) =  kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4  (LINE:55)\l0x0007: INVOKE  \l  (r0 I:kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4)\l  (r1 I:java.util.stream.DoubleStream A[D('$this$asSequence' java.util.stream.DoubleStream)])\l type: DIRECT call: kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4.\<init\>(java.util.stream.DoubleStream):void A[MD:(java.util.stream.DoubleStream):void (m)]\l0x000a: CHECK_CAST (r0 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:kotlin.sequences.Sequence\<java.lang.Double\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<java.lang.Double\> kotlin.streams.jdk8.StreamsKt.asSequence((r1 I:java.util.stream.DoubleStream A[D('$this$asSequence' java.util.stream.DoubleStream), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000c: r1 '$this$asSequence' Ljava\/util\/stream\/DoubleStream;\lSIGNATURE: (Ljava\/util\/stream\/DoubleStream;)Lkotlin\/sequences\/Sequence\<Ljava\/lang\/Double;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

