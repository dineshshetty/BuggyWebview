digraph "CFG forkotlin.streams.jdk8.StreamsKt.asStream(Lkotlin\/sequences\/Sequence;)Ljava\/util\/stream\/Stream;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$asStream' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: NEW_INSTANCE  (r0 I:kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticLambda0) =  kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticLambda0  (LINE:64)\l0x0007: INVOKE  \l  (r0 I:kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticLambda0)\l  (r3 I:kotlin.sequences.Sequence A[D('$this$asStream' kotlin.sequences.Sequence)])\l type: DIRECT call: kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticLambda0.\<init\>(kotlin.sequences.Sequence):void A[MD:(kotlin.sequences.Sequence):void (m)]\l0x000a: CONST  (r1 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: INVOKE  (r0 I:java.util.stream.Stream) = (r0 I:java.util.function.Supplier), (r1 I:int), (r2 I:boolean) type: STATIC call: java.util.stream.StreamSupport.stream(java.util.function.Supplier, int, boolean):java.util.stream.Stream A[MD:\<T\>:(java.util.function.Supplier\<? extends java.util.Spliterator\<T\>\>, int, boolean):java.util.stream.Stream\<T\> (c)]\l0x0011: CONST_STR  (r1 I:java.lang.String) =  \"stream(\{ Spliterators.spâ€¦literator.ORDERED, false)\" \l0x0013: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:java.util.stream.Stream\<T\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.stream.Stream\<T\> kotlin.streams.jdk8.StreamsKt.asStream((r3 I:kotlin.sequences.Sequence\<? extends T\> A[D('$this$asStream' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0016: r3 '$this$asStream' Lkotlin\/sequences\/Sequence;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;)Ljava\/util\/stream\/Stream\<TT;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

