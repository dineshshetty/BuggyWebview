digraph "CFG forkotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2.iterator()Ljava\/util\/Iterator;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:22)\l0x0001: IGET  (r1 I:java.util.stream.IntStream) = (r3 I:kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2) kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2.$this_asSequence$inlined java.util.stream.IntStream  (LINE:681)\l0x0003: INVOKE  (r1 I:java.util.PrimitiveIterator$OfInt) = (r1 I:java.util.stream.IntStream) type: INTERFACE call: java.util.stream.IntStream.iterator():java.util.PrimitiveIterator$OfInt A[MD:():java.util.PrimitiveIterator$OfInt (c)]\l0x0007: CONST_STR  (r2 I:java.lang.String) =  \"iterator()\" \l0x0009: INVOKE  (r1 I:java.lang.Object), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000c: CHECK_CAST (r1 I:java.util.Iterator) = (java.util.Iterator) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|RETURN\l|0x000e: RETURN  (r1 I:java.util.Iterator\<java.lang.Integer\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.util.Iterator\<java.lang.Integer\> kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2.iterator((r3 'this' I:kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2 A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lDebug Info:\l  0x0001\-0x000e: r0 '$i$a$\-Sequence\-StreamsKt$asSequence$2' I\lSIGNATURE: ()Ljava\/util\/Iterator\<Ljava\/lang\/Integer;\>;\lMETHOD_OVERRIDE: [kotlin.sequences.Sequence.iterator():java.util.Iterator\<T\>]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

