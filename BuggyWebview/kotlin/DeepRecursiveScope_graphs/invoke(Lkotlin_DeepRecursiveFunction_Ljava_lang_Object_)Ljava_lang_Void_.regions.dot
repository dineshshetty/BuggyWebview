digraph "CFG forkotlin.DeepRecursiveScope.invoke(Lkotlin\/DeepRecursiveFunction;Ljava\/lang\/Object;)Ljava\/lang\/Void;" {
subgraph cluster_Region_1697596938 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|throw new java.lang.UnsupportedOperationException(\"Should not be called from DeepRecursiveScope\")\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final java.lang.Void kotlin.DeepRecursiveScope.invoke((r2v0 'this' kotlin.DeepRecursiveScope\<T, R\> A[IMMUTABLE_TYPE, THIS]), (r3v0 kotlin.DeepRecursiveFunction\<?, ?\> A[D('$this$invoke' kotlin.DeepRecursiveFunction), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'value' java.lang.Object A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{level=\{ENCODED_FIELD: Lkotlin\/DeprecationLevel;\-\>ERROR:Lkotlin\/DeprecationLevel;\}, message='invoke' should not be called from DeepRecursiveScope. Use 'callRecursive' to do recursion in the heap instead of the call stack., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=this.callRecursive(value), imports=[[]]\}\}\}\}\}\}\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: (Lkotlin\/DeepRecursiveFunction\<**\>;Ljava\/lang\/Object;)Ljava\/lang\/Void;\l}"];
MethodNode -> Node_4;Node_6 -> Node_7;
Node_7 -> Node_5;
Node_4 -> Node_6;
}

