digraph "CFG forkotlin.NumbersKt__BigIntegersKt.toBigDecimal$default(Ljava\/math\/BigInteger;ILjava\/math\/MathContext;ILjava\/lang\/Object;)Ljava\/math\/BigDecimal;" {
subgraph cluster_Region_1603800834 {
label = "R(4:(1:3)|(1:6)|7|8)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1282605841 {
label = "IF [B:13:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|if ((r3 & 1) != 0) goto L3\l}"];
subgraph cluster_Region_1733400610 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0004|r1 = 0\l}"];
}
}
subgraph cluster_IfRegion_1868664403 {
label = "IF [B:16:0x0007] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0007|if ((r3 & 2) != 0) goto L6\l}"];
subgraph cluster_Region_1635461318 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0009|java.math.MathContext java.math.MathContext r3 = java.math.MathContext.UNLIMITED\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r3, \"UNLIMITED\")\lr2 = r3\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x0011|PHI: r2 \l  PHI: (r2v1 'mathContext' java.math.MathContext) = (r2v0 'mathContext' java.math.MathContext), (r2v2 'mathContext' java.math.MathContext) binds: [B:16:0x0007, B:17:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r0, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r2, \"mathContext\")\l}"];
Node_19 [shape=record,label="{19\:\ 0x0020|RETURN\l|return new java.math.BigDecimal(r0, r1, r2)\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0005|PHI: r1 \l  PHI: (r1v1 'scale' int) = (r1v0 'scale' int), (r1v2 'scale' int) binds: [B:13:0x0002, B:14:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.math.BigDecimal kotlin.NumbersKt__BigIntegersKt.toBigDecimal$default((r0v0 '$this$toBigDecimal_u24default' java.math.BigInteger A[D('$this$toBigDecimal_u24default' java.math.BigInteger), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 'scale' int A[D('scale' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'mathContext' java.math.MathContext A[D('mathContext' java.math.MathContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:16:0x0007 \-\> B:18:0x0011, CROSS_EDGE: B:13:0x0002 \-\> B:15:0x0005\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_15 -> Node_16;
}

