digraph "CFG forkotlin.UnsignedKt.ulongDivide\-eb3DHEI(JJ)J" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|r4 = 0\l}"];
Node_23 [shape=record,label="{23\:\ 0x0006|if ((r15 \> 0 ? 1 : (r15 == 0 ? 0 : \-1)) \>= 0) goto L9\l}"];
Node_24 [shape=record,label="{24\:\ 0x0008}"];
Node_25 [shape=record,label="{25\:\ 0x000c|if (ulongCompare(r13, r15) \>= 0) goto L5\l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|r4 = 1\l}"];
Node_28 [shape=record,label="{28\:\ 0x0011|PHI: r4 \l  PHI: (r4v6 long) = (r4v0 long), (r4v8 long) binds: [B:25:0x000c, B:27:0x000f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0015|RETURN\l|return kotlin.ULong.m316constructorimpl(r4)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0016}"];
Node_31 [shape=record,label="{31\:\ 0x0018|if ((r13 \> 0 ? 1 : (r13 == 0 ? 0 : \-1)) \< 0) goto L13\l}"];
Node_32 [shape=record,label="{32\:\ 0x001a}"];
Node_33 [shape=record,label="{33\:\ 0x0020|RETURN\l|return kotlin.ULong.m316constructorimpl(r13 \/ r15)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0021|r4 = 1\llong r5 = ((r13 \>\>\> 1) \/ r15) \<\< 1\llong r7 = r13 \- (r5 * r15)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0036|if (ulongCompare(kotlin.ULong.m316constructorimpl(r7), kotlin.ULong.m316constructorimpl(r15)) \< 0) goto L15\l}"];
Node_37 [shape=record,label="{37\:\ 0x0039|r4 = 0\l}"];
Node_38 [shape=record,label="{38\:\ 0x003a|PHI: r4 \l  PHI: (r4v2 int) = (r4v1 int), (r4v3 int) binds: [B:35:0x0036, B:37:0x0039] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0040|RETURN\l|return kotlin.ULong.m316constructorimpl(((long) r4) + r5)\l}"];
MethodNode[shape=record,label="{public static final long kotlin.UnsignedKt.ulongDivide\-eb3DHEI((r13v0 'v1' long A[D('v1' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'v2' long A[D('v2' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x000c \-\> B:28:0x0011, CROSS_EDGE: B:33:0x0020 \-\> B:21:?, CROSS_EDGE: B:39:0x0040 \-\> B:21:?, CROSS_EDGE: B:35:0x0036 \-\> B:38:0x003a\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_30;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_28[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_21;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_21;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_38[style=dashed];
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_21;
}

