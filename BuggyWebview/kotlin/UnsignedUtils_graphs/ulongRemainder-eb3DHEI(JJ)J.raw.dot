digraph "CFG forkotlin.UnsignedKt.ulongRemainder\-eb3DHEI(JJ)J" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: MOVE  (r0 I:??[long, double]) = (r14 I:??[long, double] A[D('v1' long)])  (LINE:43)\l0x0001: MOVE  (r2 I:??[long, double]) = (r16 I:??[long, double] A[D('v2' long)])  (LINE:44)\l0x0003: CONST  (r4 I:??[long, double]) = (0 ??[long, double])  (LINE:45)\l0x0005: CMP_L  (r6 I:int) = (r2 I:long A[D('divisor' long)]), (r4 I:long) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0007|0x0007: IF  (r6 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:28:0x0018 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0009|0x0009: INVOKE  (r4 I:int) = (r14 I:long A[D('v1' long)]), (r16 I:long A[D('v2' long)]) type: STATIC call: kotlin.UnsignedKt.ulongCompare(long, long):int A[MD:(long, long):int (m)] (LINE:46)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000d|0x000d: IF  (r4 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:26:0x0011 \l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|0x000f: MOVE  (r4 I:??[long, double]) = (r14 I:??[long, double] A[D('v1' long)])  (LINE:47)\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x0017: RETURN  (r4 I:long) A[SYNTHETIC] (LINE:46)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|0x0011: ARITH  (r4 I:long) = (r14 I:long A[D('v1' long)]) \- (r16 I:long A[D('v2' long)])  (LINE:49)\l0x0013: INVOKE  (r4 I:long) = (r4 I:long) type: STATIC call: kotlin.ULong.constructor\-impl(long):long A[MD:(long):long (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0017|RETURN\lORIG_RETURN\l|0x0017: RETURN  (r4 I:long)  (LINE:46)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|0x0018: CMP_L  (r6 I:int) = (r0 I:long A[D('dividend' long)]), (r4 I:long)  (LINE:54)\l}"];
Node_29 [shape=record,label="{29\:\ 0x001a|0x001a: IF  (r6 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:32:0x0023 \l}"];
Node_30 [shape=record,label="{30\:\ 0x001c|0x001c: ARITH  (r4 I:long) = (r0 I:long A[D('dividend' long)]) % (r2 I:long A[D('divisor' long)])  (LINE:55)\l0x001e: INVOKE  (r4 I:long) = (r4 I:long) type: STATIC call: kotlin.ULong.constructor\-impl(long):long A[MD:(long):long (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|RETURN\l|0x0022: RETURN  (r4 I:long) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|0x0023: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:59)\l0x0024: ARITH  (r7 I:long) = (r0 I:long A[D('dividend' long)]) \>\>\> (r6 I:long) \l0x0026: ARITH  (r7 I:long) = (r7 I:long) \/ (r2 I:long A[D('divisor' long)]) \l0x0027: ARITH  (r6 I:long) = (r7 I:long) \<\< (r6 I:long) \l0x0029: ARITH  (r8 I:long) = (r6 I:long A[D('quotient' long)]) * (r2 I:long A[D('divisor' long)])  (LINE:60)\l0x002b: ARITH  (r8 I:long) = (r0 I:long A[D('dividend' long)]) \- (r8 I:long) \l0x002d: INVOKE  (r10 I:long) = (r8 I:long A[D('rem' long)]) type: STATIC call: kotlin.ULong.constructor\-impl(long):long A[MD:(long):long (m)] (LINE:61)\l0x0031: INVOKE  (r12 I:long) = (r2 I:long A[D('divisor' long)]) type: STATIC call: kotlin.ULong.constructor\-impl(long):long A[MD:(long):long (m)]\l0x0035: INVOKE  (r10 I:int) = (r10 I:long), (r12 I:long) type: STATIC call: kotlin.UnsignedKt.ulongCompare(long, long):int A[MD:(long, long):int (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0039|0x0039: IF  (r10 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:35:0x003c \l}"];
Node_34 [shape=record,label="{34\:\ 0x003b|0x003b: MOVE  (r4 I:??[long, double]) = (r2 I:??[long, double] A[D('divisor' long)]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x003c|0x003c: ARITH  (r4 I:long) = (r8 I:long A[D('rem' long)]) \- (r4 I:long) \l0x003e: INVOKE  (r4 I:long) = (r4 I:long) type: STATIC call: kotlin.ULong.constructor\-impl(long):long A[MD:(long):long (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0042|RETURN\l|0x0042: RETURN  (r4 I:long) \l}"];
MethodNode[shape=record,label="{public static final long kotlin.UnsignedKt.ulongRemainder\-eb3DHEI((r14 I:long A[D('v1' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:long A[D('v2' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0011 \-\> B:27:0x0017, CROSS_EDGE: B:31:0x0022 \-\> B:20:?, CROSS_EDGE: B:36:0x0042 \-\> B:20:?, CROSS_EDGE: B:33:0x0039 \-\> B:35:0x003c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0042: r0 'dividend' J\l  0x0003\-0x0042: r2 'divisor' J\l  0x0029\-0x0042: r6 'quotient' J\l  0x002d\-0x0042: r8 'rem' J\l  \-1 \-0x0042: r14 'v1' J\l  \-1 \-0x0042: r16 'v2' J\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_37;
Node_37 -> Node_20;
Node_26 -> Node_27;
Node_27 -> Node_20;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_20;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_20;
}

