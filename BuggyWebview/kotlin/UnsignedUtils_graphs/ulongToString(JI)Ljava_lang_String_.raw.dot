digraph "CFG forkotlin.UnsignedKt.ulongToString(JI)Ljava\/lang\/String;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"toString(this, checkRadix(radix))\"  (LINE:95)\l0x0002: CONST  (r1 I:??[long, double]) = (0 ??[long, double]) \l0x0004: CMP_L  (r3 I:int) = (r8 I:long A[D('v' long)]), (r1 I:long) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: IF  (r3 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:17:0x0014 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|0x0008: INVOKE  (r1 I:int) = (r10 I:int A[D('base' int)]) type: STATIC call: kotlin.text.CharsKt.checkRadix(int):int A[MD:(int):int (m)]\l0x000c: INVOKE  (r1 I:java.lang.String) = (r8 I:long A[D('v' long)]), (r1 I:int) type: STATIC call: java.lang.Long.toString(long, int):java.lang.String A[MD:(long, int):java.lang.String (c)]\l0x0010: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|RETURN\l|0x0013: RETURN  (r1 I:java.lang.String) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0014|0x0014: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:97)\l0x0015: ARITH  (r2 I:long) = (r8 I:long A[D('v' long)]) \>\>\> (r1 I:long) \l0x0017: CAST (r4 I:long) = (long) (r10 I:int A[D('base' int)]) \l0x0018: ARITH  (r2 I:long) = (r2 I:long) \/ (r4 I:long) \l0x0019: ARITH  (r1 I:long) = (r2 I:long) \<\< (r1 I:long) \l0x001b: CAST (r3 I:long) = (long) (r10 I:int A[D('base' int)])  (LINE:98)\l0x001c: ARITH  (r3 I:long) = (r3 I:long) * (r1 I:long A[D('quotient' long)]) \l0x001e: ARITH  (r3 I:long) = (r8 I:long A[D('v' long)]) \- (r3 I:long) \l0x0020: CAST (r5 I:long) = (long) (r10 I:int A[D('base' int)])  (LINE:99)\l0x0021: CMP_L  (r7 I:int) = (r3 I:long A[D('rem' long)]), (r5 I:long) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0023|0x0023: IF  (r7 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:20:0x002a \l}"];
Node_19 [shape=record,label="{19\:\ 0x0025|0x0025: CAST (r5 I:long) = (long) (r10 I:int A[D('base' int)])  (LINE:100)\l0x0026: ARITH  (r3 I:long) = (r3 I:long A[D('rem' long)]) \- (r5 I:long) \l0x0027: CONST  (r5 I:??[long, double]) = (1 ??[long, double])  (LINE:101)\l0x0029: ARITH  (r1 I:long) = (r1 I:long A[D('quotient' long)]) + (r5 I:long) \l}"];
Node_20 [shape=record,label="{20\:\ 0x002a|0x002a: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:103)\l0x002c: INVOKE  (r5 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x002f: INVOKE  (r6 I:int) = (r10 I:int A[D('base' int)]) type: STATIC call: kotlin.text.CharsKt.checkRadix(int):int A[MD:(int):int (m)]\l0x0033: INVOKE  (r6 I:java.lang.String) = (r1 I:long A[D('quotient' long)]), (r6 I:int) type: STATIC call: java.lang.Long.toString(long, int):java.lang.String A[MD:(long, int):java.lang.String (c)]\l0x0037: INVOKE  (r6 I:java.lang.Object), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x003a: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003d: INVOKE  (r6 I:int) = (r10 I:int A[D('base' int)]) type: STATIC call: kotlin.text.CharsKt.checkRadix(int):int A[MD:(int):int (m)]\l0x0041: INVOKE  (r6 I:java.lang.String) = (r3 I:long A[D('rem' long)]), (r6 I:int) type: STATIC call: java.lang.Long.toString(long, int):java.lang.String A[MD:(long, int):java.lang.String (c)]\l0x0045: INVOKE  (r6 I:java.lang.Object), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0048: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004b: INVOKE  (r0 I:java.lang.String) = (r5 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x004f|RETURN\l|0x004f: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.UnsignedKt.ulongToString((r8 I:long A[D('v' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('base' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x004f \-\> B:12:?, CROSS_EDGE: B:18:0x0023 \-\> B:20:0x002a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x004f: r1 'quotient' J\l  0x0020\-0x004f: r3 'rem' J\l  \-1 \-0x004f: r8 'v' J\l  \-1 \-0x004f: r10 'base' I\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

