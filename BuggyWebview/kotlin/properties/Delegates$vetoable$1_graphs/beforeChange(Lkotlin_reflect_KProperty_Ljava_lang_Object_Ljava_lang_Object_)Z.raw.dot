digraph "CFG forkotlin.properties.Delegates$vetoable$1.beforeChange(Lkotlin\/reflect\/KProperty;Ljava\/lang\/Object;Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"property\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('property' kotlin.reflect.KProperty)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: IGET  (r0 I:kotlin.jvm.functions.Function3\<kotlin.reflect.KProperty\<?\>, T, T, java.lang.Boolean\>) = (r1 I:kotlin.properties.Delegates$vetoable$1) kotlin.properties.Delegates$vetoable$1.$onChange kotlin.jvm.functions.Function3  (LINE:52)\l0x0007: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:kotlin.jvm.functions.Function3)\l  (r2 I:java.lang.Object A[D('property' kotlin.reflect.KProperty)])\l  (r3 I:java.lang.Object A[D('oldValue' java.lang.Object)])\l  (r4 I:java.lang.Object A[D('newValue' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function3.invoke(java.lang.Object, java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2, P3):R (m)]\l0x000b: CHECK_CAST (r0 I:java.lang.Boolean) = (java.lang.Boolean) (r0 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected boolean kotlin.properties.Delegates$vetoable$1.beforeChange((r1 'this' I:kotlin.properties.Delegates$vetoable$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.reflect.KProperty\<?\> A[D('property' kotlin.reflect.KProperty), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:T A[D('oldValue' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:T A[D('newValue' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0011: r2 'property' Lkotlin\/reflect\/KProperty;\l  \-1 \-0x0011: r3 'oldValue' Ljava\/lang\/Object;\l  \-1 \-0x0011: r4 'newValue' Ljava\/lang\/Object;\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlin\/reflect\/KProperty\<*\>;TT;TT;)Z\lMETHOD_OVERRIDE: [kotlin.properties.ObservableProperty.beforeChange(kotlin.reflect.KProperty\<?\>, V, V):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

