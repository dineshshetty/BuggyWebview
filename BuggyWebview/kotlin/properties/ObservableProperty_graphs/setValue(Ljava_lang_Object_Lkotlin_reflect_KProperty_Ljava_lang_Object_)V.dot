digraph "CFG forkotlin.properties.ObservableProperty.setValue(Ljava\/lang\/Object;Lkotlin\/reflect\/KProperty;Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"property\")\lV r0 = r2.value\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (beforeChange(r4, r0, r5) != false) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|r2.value = r5\lafterChange(r4, r0, r5)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void kotlin.properties.ObservableProperty.setValue((r2v0 'this' kotlin.properties.ObservableProperty\<V\> A[IMMUTABLE_TYPE, THIS]), (r3v0 'thisRef' java.lang.Object A[D('thisRef' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'property' kotlin.reflect.KProperty\<?\> A[D('property' kotlin.reflect.KProperty), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 V A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0013 \-\> B:1:?\lTYPE_VARS: [V]\lSIGNATURE: (Ljava\/lang\/Object;Lkotlin\/reflect\/KProperty\<*\>;TV;)V\lMETHOD_OVERRIDE: [kotlin.properties.ReadWriteProperty.setValue(T, kotlin.reflect.KProperty\<?\>, V):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

