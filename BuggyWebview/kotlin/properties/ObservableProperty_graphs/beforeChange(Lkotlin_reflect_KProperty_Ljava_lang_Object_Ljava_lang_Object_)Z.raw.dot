digraph "CFG forkotlin.properties.ObservableProperty.beforeChange(Lkotlin\/reflect\/KProperty;Ljava\/lang\/Object;Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"property\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('property' kotlin.reflect.KProperty)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:23)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected boolean kotlin.properties.ObservableProperty.beforeChange((r1 'this' I:kotlin.properties.ObservableProperty\<V\> A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.reflect.KProperty\<?\> A[D('property' kotlin.reflect.KProperty), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:V A[D('oldValue' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:V A[D('newValue' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0006: r2 'property' Lkotlin\/reflect\/KProperty;\l  \-1 \-0x0006: r3 'oldValue' Ljava\/lang\/Object;\l  \-1 \-0x0006: r4 'newValue' Ljava\/lang\/Object;\lTYPE_VARS: [V]\lSIGNATURE: (Lkotlin\/reflect\/KProperty\<*\>;TV;TV;)Z\lMETHOD_OVERRIDE: [kotlin.properties.ObservableProperty.beforeChange(kotlin.reflect.KProperty\<?\>, V, V):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

