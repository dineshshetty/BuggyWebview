digraph "CFG forkotlin.properties.ObservableProperty.getValue(Ljava\/lang\/Object;Lkotlin\/reflect\/KProperty;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"property\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|RETURN\l|return r1.value\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public V kotlin.properties.ObservableProperty.getValue((r1v0 'this' kotlin.properties.ObservableProperty\<V\> A[IMMUTABLE_TYPE, THIS]), (r2v0 'thisRef' java.lang.Object A[D('thisRef' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'property' kotlin.reflect.KProperty\<?\> A[D('property' kotlin.reflect.KProperty), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: [V]\lSIGNATURE: (Ljava\/lang\/Object;Lkotlin\/reflect\/KProperty\<*\>;)TV;\lMETHOD_OVERRIDE: [kotlin.properties.ReadOnlyProperty.getValue(T, kotlin.reflect.KProperty\<?\>):V]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

