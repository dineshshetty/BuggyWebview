digraph "CFG forkotlin._Assertions.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlin._Assertions) =  kotlin._Assertions \l0x0002: INVOKE  (r0 I:kotlin._Assertions) type: DIRECT call: kotlin._Assertions.\<init\>():void A[MD:():void (m)]\l0x0005: SPUT  (r0 I:kotlin._Assertions) kotlin._Assertions.INSTANCE kotlin._Assertions \l0x0007: INVOKE  (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)] (LINE:14)\l0x000a: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000b: SPUT  (r0 I:boolean) kotlin._Assertions.ENABLED boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|RETURN\l|0x000d: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlin._Assertions.\<clinit\>()  | USE_LINES_HINTS\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

