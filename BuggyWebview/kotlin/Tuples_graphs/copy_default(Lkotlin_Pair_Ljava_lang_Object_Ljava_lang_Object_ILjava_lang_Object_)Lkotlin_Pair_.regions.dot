digraph "CFG forkotlin.Pair.copy$default(Lkotlin\/Pair;Ljava\/lang\/Object;Ljava\/lang\/Object;ILjava\/lang\/Object;)Lkotlin\/Pair;" {
subgraph cluster_Region_212626231 {
label = "R(3:(1:3)|(1:6)|8)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1732506672 {
label = "IF [B:13:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|if ((r3 & 1) != 0) goto L3\l}"];
subgraph cluster_Region_1805289146 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0004|A r1 = r0.first\l}"];
}
}
subgraph cluster_IfRegion_292570558 {
label = "IF [B:16:0x0008] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0008|if ((r3 & 2) != 0) goto L6\l}"];
subgraph cluster_Region_2120900980 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000a|B r2 = r0.second\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x0010|RETURN\l|return r0.copy(r1, r2)\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0006|PHI: r1 \l  PHI: (r1v1 java.lang.Object) = (r1v0 java.lang.Object), (r1v2 java.lang.Object) binds: [B:13:0x0002, B:14:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x000c|PHI: r2 \l  PHI: (r2v1 java.lang.Object) = (r2v0 java.lang.Object), (r2v2 java.lang.Object) binds: [B:16:0x0008, B:17:0x000a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ kotlin.Pair kotlin.Pair.copy$default((r0v0 kotlin.Pair A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:16:0x0008 \-\> B:18:0x000c, CROSS_EDGE: B:13:0x0002 \-\> B:15:0x0006\lINLINE_NOT_NEEDED\lTYPE_VARS: [A, B]\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r0v0, resolved type: kotlin.Pair\}\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_19 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_18 -> Node_19;
}

