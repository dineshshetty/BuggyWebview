digraph "CFG forkotlin.Pair.hashCode()I" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|A r0 = r4.first\lr1 = 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x0003|if (r0 != null) goto L10\l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|r0 = 0\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|PHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int) binds: [B:17:0x0007, B:16:0x0005] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = r0 * 31\lB r3 = r4.second\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|if (r3 != null) goto L6\l}"];
Node_21 [shape=record,label="{21\:\ 0x0012|int r1 = r3.hashCode()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:19:0x000f, B:21:0x0012] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|RETURN\l|return r2 + r1\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|int r0 = r0.hashCode()\l}"];
MethodNode[shape=record,label="{public int kotlin.Pair.hashCode((r4v0 'this' kotlin.Pair\<A, B\> A[IMMUTABLE_TYPE, THIS]))  | CROSS_EDGE: B:19:0x000f \-\> B:22:0x0016, CROSS_EDGE: B:17:0x0007 \-\> B:18:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: [A, B]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_22[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_17 -> Node_18;
}

