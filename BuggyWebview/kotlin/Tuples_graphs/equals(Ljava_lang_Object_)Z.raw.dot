digraph "CFG forkotlin.Pair.equals(Ljava\/lang\/Object;)Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0001|0x0001: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0004 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0003|RETURN\l|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|0x0004: INSTANCE_OF  (r1 I:boolean) = (r6 I:??[OBJECT, ARRAY]) kotlin.Pair \l0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x000a \l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|RETURN\l|0x0009: RETURN  (r2 I:boolean) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000a|0x000a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x000b: CHECK_CAST (r1 I:kotlin.Pair) = (kotlin.Pair) (r1 I:??[OBJECT, ARRAY]) \l0x000d: IGET  (r3 I:A) = (r5 I:kotlin.Pair) kotlin.Pair.first java.lang.Object \l0x000f: IGET  (r4 I:A) = (r1 I:kotlin.Pair) kotlin.Pair.first java.lang.Object \l0x0011: INVOKE  (r3 I:boolean) = (r3 I:java.lang.Object), (r4 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0015|0x0015: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0018 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|RETURN\l|0x0017: RETURN  (r2 I:boolean) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0018|0x0018: IGET  (r3 I:B) = (r5 I:kotlin.Pair) kotlin.Pair.second java.lang.Object \l0x001a: IGET  (r1 I:B) = (r1 I:kotlin.Pair) kotlin.Pair.second java.lang.Object \l0x001c: INVOKE  (r1 I:boolean) = (r3 I:java.lang.Object), (r1 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0020|0x0020: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0023 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|RETURN\l|0x0022: RETURN  (r2 I:boolean) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0023|RETURN\l|0x0023: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlin.Pair.equals((r5 'this' I:kotlin.Pair\<A, B\> A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:22:0x0009 \-\> B:16:?, CROSS_EDGE: B:25:0x0017 \-\> B:16:?, CROSS_EDGE: B:28:0x0022 \-\> B:16:?, CROSS_EDGE: B:29:0x0023 \-\> B:16:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [A, B]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_16;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_16;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_16;
Node_29 -> Node_16;
}

