digraph "CFG forkotlin.SynchronizedLazyImpl.\<init\>(Lkotlin\/jvm\/functions\/Function0;Ljava\/lang\/Object;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"initializer\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('initializer' kotlin.jvm.functions.Function0)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r1 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:55)\l0x0008: IPUT  \l  (r2 I:kotlin.jvm.functions.Function0\<? extends T\> A[D('initializer' kotlin.jvm.functions.Function0)])\l  (r1 I:kotlin.SynchronizedLazyImpl)\l kotlin.SynchronizedLazyImpl.initializer kotlin.jvm.functions.Function0  (LINE:56)\l0x000a: SGET  (r0 I:kotlin.UNINITIALIZED_VALUE) =  kotlin.UNINITIALIZED_VALUE.INSTANCE kotlin.UNINITIALIZED_VALUE  (LINE:57)\l0x000c: IPUT  (r0 I:java.lang.Object), (r1 I:kotlin.SynchronizedLazyImpl) kotlin.SynchronizedLazyImpl._value java.lang.Object \l}"];
Node_11 [shape=record,label="{11\:\ 0x000e|0x000e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lock' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0012  (LINE:59)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0010|0x0010: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0013|0x0013: IPUT  (r0 I:java.lang.Object), (r1 I:kotlin.SynchronizedLazyImpl) kotlin.SynchronizedLazyImpl.lock java.lang.Object \l}"];
Node_15 [shape=record,label="{15\:\ 0x0015|RETURN\l|0x0015: RETURN    (LINE:55)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0012|0x0012: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('lock' java.lang.Object)]) \l}"];
MethodNode[shape=record,label="{public void kotlin.SynchronizedLazyImpl.\<init\>((r1 'this' I:kotlin.SynchronizedLazyImpl\<T\> A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.jvm.functions.Function0\<? extends T\> A[D('initializer' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object A[D('lock' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0012 \-\> B:14:0x0013\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0015: r2 'initializer' Lkotlin\/jvm\/functions\/Function0;\l  \-1 \-0x0015: r3 'lock' Ljava\/lang\/Object;\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlin\/jvm\/functions\/Function0\<+TT;\>;Ljava\/lang\/Object;)V\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

