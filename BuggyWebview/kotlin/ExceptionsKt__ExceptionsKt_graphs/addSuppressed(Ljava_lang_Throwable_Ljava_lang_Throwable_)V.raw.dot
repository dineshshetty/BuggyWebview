digraph "CFG forkotlin.ExceptionsKt__ExceptionsKt.addSuppressed(Ljava\/lang\/Throwable;Ljava\/lang\/Throwable;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$addSuppressed' java.lang.Throwable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"exception\" \l0x0007: INVOKE  (r2 I:java.lang.Object A[D('exception' java.lang.Throwable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$addSuppressed' java.lang.Throwable)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('exception' java.lang.Throwable)])  \-\> B:13:?  (LINE:70)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000c|0x000c: SGET  (r0 I:kotlin.internal.PlatformImplementations) =  kotlin.internal.PlatformImplementationsKt.IMPLEMENTATIONS kotlin.internal.PlatformImplementations  (LINE:71)\l0x000e: INVOKE  \l  (r0 I:kotlin.internal.PlatformImplementations)\l  (r1 I:java.lang.Throwable A[D('$this$addSuppressed' java.lang.Throwable)])\l  (r2 I:java.lang.Throwable A[D('exception' java.lang.Throwable)])\l type: VIRTUAL call: kotlin.internal.PlatformImplementations.addSuppressed(java.lang.Throwable, java.lang.Throwable):void A[MD:(java.lang.Throwable, java.lang.Throwable):void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0011|RETURN\lORIG_RETURN\l|0x0011: RETURN    (LINE:72)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0011: RETURN   A[SYNTHETIC] (LINE:72)\l}"];
MethodNode[shape=record,label="{public static final void kotlin.ExceptionsKt__ExceptionsKt.addSuppressed((r1 I:java.lang.Throwable A[D('$this$addSuppressed' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x000a \-\> B:12:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0011: r1 '$this$addSuppressed' Ljava\/lang\/Throwable;\l  \-1 \-0x0011: r2 'exception' Ljava\/lang\/Throwable;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

