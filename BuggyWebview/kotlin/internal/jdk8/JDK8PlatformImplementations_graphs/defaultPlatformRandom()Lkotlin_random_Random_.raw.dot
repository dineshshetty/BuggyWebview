digraph "CFG forkotlin.internal.jdk8.JDK8PlatformImplementations.defaultPlatformRandom()Lkotlin\/random\/Random;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlin.random.jdk8.PlatformThreadLocalRandom) =  kotlin.random.jdk8.PlatformThreadLocalRandom  (LINE:39)\l0x0002: INVOKE  (r0 I:kotlin.random.jdk8.PlatformThreadLocalRandom) type: DIRECT call: kotlin.random.jdk8.PlatformThreadLocalRandom.\<init\>():void A[MD:():void (m)]\l0x0005: CHECK_CAST (r0 I:kotlin.random.Random) = (kotlin.random.Random) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:kotlin.random.Random) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlin.random.Random kotlin.internal.jdk8.JDK8PlatformImplementations.defaultPlatformRandom((r1 'this' I:kotlin.internal.jdk8.JDK8PlatformImplementations A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lMETHOD_OVERRIDE: [kotlin.internal.PlatformImplementations.defaultPlatformRandom():kotlin.random.Random]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

