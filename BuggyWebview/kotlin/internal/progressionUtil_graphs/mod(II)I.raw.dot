digraph "CFG forkotlin.internal.ProgressionUtilKt.mod(II)I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: ARITH  (r0 I:int) = (r2 I:int A[D('a' int)]) % (r3 I:int A[D('b' int)])  (LINE:10)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|0x0002: IF  (r0 I:??[int, byte, short, char] A[D('mod' int)]) \< (0 ??[int, byte, short, char])  \-\> B:13:0x0006  (LINE:11)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('mod' int)]) \l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0008: RETURN  (r1 I:int) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|0x0006: ARITH  (r1 I:int) = (r0 I:int A[D('mod' int)]) + (r3 I:int A[D('b' int)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|RETURN\lORIG_RETURN\l|0x0008: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{private static final int kotlin.internal.ProgressionUtilKt.mod((r2 I:int A[D('a' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('b' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0006 \-\> B:14:0x0008\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x0008: r0 'mod' I\l  \-1 \-0x0008: r2 'a' I\l  \-1 \-0x0008: r3 'b' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

