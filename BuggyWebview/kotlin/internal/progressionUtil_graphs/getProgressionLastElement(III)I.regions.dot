digraph "CFG forkotlin.internal.ProgressionUtilKt.getProgressionLastElement(III)I" {
subgraph cluster_Region_635169650 {
label = "R(2:(1:(1:4))(1:(1:13)(1:(1:11)))|7)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1410156012 {
label = "IF [B:17:0x0001] THEN: R(1:(1:4)) ELSE: R(1:(1:13)(1:(1:11)))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0001|if (r4 \> 0) goto L2\l}"];
subgraph cluster_Region_981893761 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1609310881 {
label = "IF [B:18:0x0003] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0003|if (r2 \< r3) goto L3\l}"];
subgraph cluster_Region_630641237 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return r3 \- differenceModulo(r3, r2, r4)\l}"];
}
}
}
subgraph cluster_Region_462078254 {
label = "R(1:(1:13)(1:(1:11))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_362203732 {
label = "IF [B:21:0x000d] THEN: R(1:13) ELSE: R(1:(1:11)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x000d|if (r4 \>= 0) goto L12\l}"];
subgraph cluster_Region_726735725 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0021|throw new java.lang.IllegalArgumentException(\"Step is zero.\")\l}"];
}
subgraph cluster_Region_944136232 {
label = "R(1:(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1963480511 {
label = "IF [B:22:0x000f] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000f|if (r2 \> r3) goto L10\l}"];
subgraph cluster_Region_1450173728 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0019|RETURN\lORIG_RETURN\l|return differenceModulo(r2, r3, \-r4) + r3\l}"];
}
}
}
}
}
}
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return r3\l}"];
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0006}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0011}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0013}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x001a}"];
MethodNode[shape=record,label="{public static final int kotlin.internal.ProgressionUtilKt.getProgressionLastElement((r2v0 'start' int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'end' int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'step' int A[D('step' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0011 \-\> B:25:0x0019, CROSS_EDGE: B:22:0x000f \-\> B:23:0x0011, CROSS_EDGE: B:24:0x0013 \-\> B:25:0x0019, CROSS_EDGE: B:27:0x0021 \-\> B:16:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_15;Node_17 -> Node_18;
Node_17 -> Node_21[style=dashed];
Node_18 -> Node_20;
Node_18 -> Node_23[style=dashed];
Node_28 -> Node_16;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_27 -> Node_16;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_25 -> Node_16;
Node_29 -> Node_16;
Node_15 -> Node_17;
Node_20 -> Node_28;
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_26 -> Node_27;
}

