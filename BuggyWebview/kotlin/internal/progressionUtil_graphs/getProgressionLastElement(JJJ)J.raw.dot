digraph "CFG forkotlin.internal.ProgressionUtilKt.getProgressionLastElement(JJJ)J" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0001|0x0001: CONST  (r0 I:??[long, double]) = (0 ??[long, double])  (LINE:69)\l0x0003: CMP_L  (r2 I:int) = (r11 I:long A[D('step' long)]), (r0 I:long) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0005|0x0005: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:27:0x0016 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0007|0x0007: CMP_L  (r0 I:int) = (r7 I:long A[D('start' long)]), (r9 I:long A[D('end' long)]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|0x0009: IF  (r0 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:26:0x000c \l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|0x000c: MOVE  (r0 I:??[long, double]) = (r9 I:??[long, double] A[D('end' long)]) \l0x000d: MOVE  (r2 I:??[long, double]) = (r7 I:??[long, double] A[D('start' long)]) \l0x000e: MOVE  (r4 I:??[long, double]) = (r11 I:??[long, double] A[D('step' long)]) \l0x000f: INVOKE  (r0 I:long) = (r0 I:long), (r2 I:long), (r4 I:long) type: STATIC call: kotlin.internal.ProgressionUtilKt.differenceModulo(long, long, long):long A[MD:(long, long, long):long (m)]\l0x0013: ARITH  (r0 I:long) = (r9 I:long A[D('end' long)]) \- (r0 I:long) \l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN  (r0 I:long) A[SYNTHETIC] (LINE:72)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x001e|0x001e: MOVE  (r0 I:??[long, double]) = (r9 I:??[long, double] A[D('end' long)])  (LINE:72)\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN  (r0 I:long) A[SYNTHETIC] (LINE:72)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|0x0016: CMP_L  (r2 I:int) = (r11 I:long A[D('step' long)]), (r0 I:long)  (LINE:70)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|0x0018: IF  (r2 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:34:0x0029 \l}"];
Node_29 [shape=record,label="{29\:\ 0x001a|0x001a: CMP_L  (r0 I:int) = (r7 I:long A[D('start' long)]), (r9 I:long A[D('end' long)]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x001c|0x001c: IF  (r0 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:32:0x0020 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0020|0x0020: NEG  (r5 I:long) = (r11 I:long A[D('step' long)])  (LINE:70)\l0x0021: MOVE  (r1 I:??[long, double]) = (r7 I:??[long, double] A[D('start' long)]) \l0x0022: MOVE  (r3 I:??[long, double]) = (r9 I:??[long, double] A[D('end' long)]) \l0x0023: INVOKE  (r0 I:long) = (r1 I:long), (r3 I:long), (r5 I:long) type: STATIC call: kotlin.internal.ProgressionUtilKt.differenceModulo(long, long, long):long A[MD:(long, long, long):long (m)]\l0x0027: ARITH  (r0 I:long) = (r0 I:long) + (r9 I:long A[D('end' long)]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0028|RETURN\lORIG_RETURN\l|0x0028: RETURN  (r0 I:long)  (LINE:72)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0029|0x0029: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:71)\l0x002b: CONST_STR  (r1 I:java.lang.String) =  \"Step is zero.\" \l0x002d: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0030|0x0030: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final long kotlin.internal.ProgressionUtilKt.getProgressionLastElement((r7 I:long A[D('start' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[D('end' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:long A[D('step' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x001e \-\> B:33:0x0028, CROSS_EDGE: B:30:0x001c \-\> B:31:0x001e, CROSS_EDGE: B:32:0x0020 \-\> B:33:0x0028, CROSS_EDGE: B:35:0x0030 \-\> B:20:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0030: r7 'start' J\l  \-1 \-0x0030: r9 'end' J\l  \-1 \-0x0030: r11 'step' J\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_31[style=dashed];
Node_26 -> Node_36;
Node_36 -> Node_20;
Node_31 -> Node_37;
Node_37 -> Node_20;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_34;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_20;
Node_34 -> Node_35;
Node_35 -> Node_20;
}

