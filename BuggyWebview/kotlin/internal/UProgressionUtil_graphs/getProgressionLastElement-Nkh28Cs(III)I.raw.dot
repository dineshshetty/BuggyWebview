digraph "CFG forkotlin.internal.UProgressionUtilKt.getProgressionLastElement\-Nkh28Cs(III)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0001|0x0001: IF  (r4 I:??[int, byte, short, char] A[D('step' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:7:0x0019  (LINE:40)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: INVOKE  (r0 I:int) = (r2 I:int A[D('start' int)]), (r3 I:int A[D('end' int)]) type: STATIC call: kotlin.UnsignedKt.uintCompare(int, int):int A[MD:(int, int):int (m)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r0 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:6:0x000a \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: INVOKE  (r0 I:int) = (r4 I:int A[D('step' int)]) type: STATIC call: kotlin.UInt.constructor\-impl(int):int A[MD:(int):int (m)]\l0x000e: INVOKE  (r0 I:int) = (r3 I:int A[D('end' int)]), (r2 I:int A[D('start' int)]), (r0 I:int) type: STATIC call: kotlin.internal.UProgressionUtilKt.differenceModulo\-WZ9TVnA(int, int, int):int A[MD:(int, int, int):int (m)]\l0x0012: ARITH  (r0 I:int) = (r3 I:int A[D('end' int)]) \- (r0 I:int) \l0x0014: INVOKE  (r0 I:int) = (r0 I:int) type: STATIC call: kotlin.UInt.constructor\-impl(int):int A[MD:(int):int (m)]\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0031: RETURN  (r0 I:int) A[SYNTHETIC] (LINE:43)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('end' int)])  (LINE:43)\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|0x0031: RETURN  (r0 I:int) A[SYNTHETIC] (LINE:43)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: IF  (r4 I:??[int, byte, short, char] A[D('step' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:13:0x0032  (LINE:41)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: INVOKE  (r0 I:int) = (r2 I:int A[D('start' int)]), (r3 I:int A[D('end' int)]) type: STATIC call: kotlin.UnsignedKt.uintCompare(int, int):int A[MD:(int, int):int (m)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: IF  (r0 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:11:0x0023 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: NEG  (r0 I:int) = (r4 I:int A[D('step' int)])  (LINE:41)\l0x0024: INVOKE  (r0 I:int) = (r0 I:int) type: STATIC call: kotlin.UInt.constructor\-impl(int):int A[MD:(int):int (m)]\l0x0028: INVOKE  (r0 I:int) = (r2 I:int A[D('start' int)]), (r3 I:int A[D('end' int)]), (r0 I:int) type: STATIC call: kotlin.internal.UProgressionUtilKt.differenceModulo\-WZ9TVnA(int, int, int):int A[MD:(int, int, int):int (m)]\l0x002c: ARITH  (r0 I:int) = (r0 I:int) + (r3 I:int A[D('end' int)]) \l0x002d: INVOKE  (r0 I:int) = (r0 I:int) type: STATIC call: kotlin.UInt.constructor\-impl(int):int A[MD:(int):int (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|RETURN\lORIG_RETURN\l|0x0031: RETURN  (r0 I:int)  (LINE:43)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:42)\l0x0034: CONST_STR  (r1 I:java.lang.String) =  \"Step is zero.\" \l0x0036: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|0x0039: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final int kotlin.internal.UProgressionUtilKt.getProgressionLastElement\-Nkh28Cs((r2 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('step' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0021 \-\> B:12:0x0031, CROSS_EDGE: B:9:0x001f \-\> B:10:0x0021, CROSS_EDGE: B:11:0x0023 \-\> B:12:0x0031, CROSS_EDGE: B:14:0x0039 \-\> B:1:?\lDebug Info:\l  \-1 \-0x0039: r2 'start' I\l  \-1 \-0x0039: r3 'end' I\l  \-1 \-0x0039: r4 'step' I\lRENAME_REASON:not valid java name\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_10[style=dashed];
Node_6 -> Node_15;
Node_15 -> Node_1;
Node_10 -> Node_16;
Node_16 -> Node_1;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_13 -> Node_14;
Node_14 -> Node_1;
}

