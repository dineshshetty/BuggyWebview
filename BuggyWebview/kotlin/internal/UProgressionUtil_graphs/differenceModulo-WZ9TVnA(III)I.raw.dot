digraph "CFG forkotlin.internal.UProgressionUtilKt.differenceModulo\-WZ9TVnA(III)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r3 I:int A[D('a' int)]), (r5 I:int A[D('c' int)]) type: STATIC call: kotlin.UnsignedKt.uintRemainder\-J1ME1BU(int, int):int A[MD:(int, int):int (m)] (LINE:10)\l0x0004: INVOKE  (r1 I:int) = (r4 I:int A[D('b' int)]), (r5 I:int A[D('c' int)]) type: STATIC call: kotlin.UnsignedKt.uintRemainder\-J1ME1BU(int, int):int A[MD:(int, int):int (m)] (LINE:11)\l0x0008: INVOKE  (r2 I:int) = (r0 I:int A[D('ac' int)]), (r1 I:int A[D('bc' int)]) type: STATIC call: kotlin.UnsignedKt.uintCompare(int, int):int A[MD:(int, int):int (m)] (LINE:12)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r2 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: ARITH  (r2 I:int) = (r0 I:int A[D('ac' int)]) \- (r1 I:int A[D('bc' int)]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: INVOKE  (r2 I:int) = (r2 I:int) type: STATIC call: kotlin.UInt.constructor\-impl(int):int A[MD:(int):int (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|RETURN\l|0x001c: RETURN  (r2 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: ARITH  (r2 I:int) = (r0 I:int A[D('ac' int)]) \- (r1 I:int A[D('bc' int)]) \l0x0013: INVOKE  (r2 I:int) = (r2 I:int) type: STATIC call: kotlin.UInt.constructor\-impl(int):int A[MD:(int):int (m)]\l0x0017: ARITH  (r2 I:int) = (r2 I:int) + (r5 I:int A[D('c' int)]) \l}"];
MethodNode[shape=record,label="{private static final int kotlin.internal.UProgressionUtilKt.differenceModulo\-WZ9TVnA((r3 I:int A[D('a' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('b' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('c' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0011 \-\> B:6:0x0018\lDebug Info:\l  0x0004\-0x001c: r0 'ac' I\l  0x0008\-0x001c: r1 'bc' I\l  \-1 \-0x001c: r3 'a' I\l  \-1 \-0x001c: r4 'b' I\l  \-1 \-0x001c: r5 'c' I\lRENAME_REASON:not valid java name\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
}

