digraph "CFG forkotlin.internal.jdk7.JDK7PlatformImplementations.addSuppressed(Ljava\/lang\/Throwable;Ljava\/lang\/Throwable;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"cause\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('cause' java.lang.Throwable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"exception\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('exception' java.lang.Throwable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  \l  (r2 I:java.lang.Throwable A[D('cause' java.lang.Throwable)])\l  (r3 I:java.lang.Throwable A[D('exception' java.lang.Throwable)])\l type: VIRTUAL call: java.lang.Throwable.addSuppressed(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (c)] (LINE:14)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|RETURN\l|0x000d: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.internal.jdk7.JDK7PlatformImplementations.addSuppressed((r1 'this' I:kotlin.internal.jdk7.JDK7PlatformImplementations A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Throwable A[D('cause' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000d: r2 'cause' Ljava\/lang\/Throwable;\l  \-1 \-0x000d: r3 'exception' Ljava\/lang\/Throwable;\lMETHOD_OVERRIDE: [kotlin.internal.PlatformImplementations.addSuppressed(java.lang.Throwable, java.lang.Throwable):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

