digraph "CFG forkotlin.internal.PlatformImplementations.getSuppressed(Ljava\/lang\/Throwable;)Ljava\/util\/List;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"exception\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('exception' java.lang.Throwable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: SGET  (r0 I:java.lang.reflect.Method) =  kotlin.internal.PlatformImplementations.ReflectThrowable.getSuppressed java.lang.reflect.Method  (LINE:37)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x001c \l}"];
Node_15 [shape=record,label="{15\:\ 0x0009|0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x000c: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Method)\l  (r4 I:java.lang.Object A[D('exception' java.lang.Throwable)])\l  (r1 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x001c \l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:119)\l0x0013: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('it' java.lang.Object)])  (LINE:37)\l0x0014: CHECK_CAST (r2 I:java.lang.Throwable[]) = (java.lang.Throwable[]) (r2 I:??[OBJECT, ARRAY]) \l0x0016: INVOKE  (r0 I:java.util.List A[D('it' java.lang.Object)]) = (r2 I:java.lang.Object[]) type: STATIC call: kotlin.collections.ArraysKt.asList(java.lang.Object[]):java.util.List A[MD:\<T\>:(T[]):java.util.List\<T\> (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x001a|0x001a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:? \l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0020: RETURN  (r0 I:java.util.List\<java.lang.Throwable\>) A[SYNTHETIC] (LINE:37)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x001c|0x001c: INVOKE  (r0 I:java.util.List) =  type: STATIC call: kotlin.collections.CollectionsKt.emptyList():java.util.List A[MD:\<T\>:():java.util.List\<T\> (m)] (LINE:38)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0020|RETURN\lORIG_RETURN\l|0x0020: RETURN  (r0 I:java.util.List\<java.lang.Throwable\>)  (LINE:37)\l}"];
MethodNode[shape=record,label="{public java.util.List\<java.lang.Throwable\> kotlin.internal.PlatformImplementations.getSuppressed((r3 'this' I:kotlin.internal.PlatformImplementations A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.Throwable A[D('exception' java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x001a \-\> B:20:0x0020, CROSS_EDGE: B:16:0x0010 \-\> B:19:0x001c, CROSS_EDGE: B:14:0x0007 \-\> B:19:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x001a: r0 'it' Ljava\/lang\/Object;\l  0x0013\-0x001a: r1 '$i$a$\-let\-PlatformImplementations$getSuppressed$1' I\l  \-1 \-0x0020: r4 'exception' Ljava\/lang\/Throwable;\lSIGNATURE: (Ljava\/lang\/Throwable;)Ljava\/util\/List\<Ljava\/lang\/Throwable;\>;\lMETHOD_OVERRIDE: [kotlin.internal.PlatformImplementations.getSuppressed(java.lang.Throwable):java.util.List\<java.lang.Throwable\>]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_21 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
}

