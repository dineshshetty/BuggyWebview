digraph "CFG forkotlin.sequences.IndexingSequence$iterator$1.next()Lkotlin\/collections\/IndexedValue;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|int r1 = r3.index\lr3.index = r1 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r1 \>= 0) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|kotlin.collections.CollectionsKt.throwIndexOverflow()\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d}"];
Node_6 [shape=record,label="{6\:\ 0x0016|RETURN\l|return new kotlin.collections.IndexedValue\<\>(r1, r3.iterator.next())\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlin.collections.IndexedValue\<T\> kotlin.sequences.IndexingSequence$iterator$1.next((r3v0 'this' kotlin.sequences.IndexingSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:3:0x0008 \-\> B:5:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ()Lkotlin\/collections\/IndexedValue\<TT;\>;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Iterator.next():E\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

