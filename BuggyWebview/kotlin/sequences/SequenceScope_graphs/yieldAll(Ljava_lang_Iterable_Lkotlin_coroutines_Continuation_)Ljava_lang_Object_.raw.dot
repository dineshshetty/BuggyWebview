digraph "CFG forkotlin.sequences.SequenceScope.yieldAll(Ljava\/lang\/Iterable;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('elements' java.lang.Iterable)]) java.util.Collection  (LINE:78)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0010 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('elements' java.lang.Iterable)]) \l0x0005: CHECK_CAST (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r0 I:boolean) = (r0 I:java.util.Collection) type: INTERFACE call: java.util.Collection.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0010 \l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|0x000d: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:java.lang.Object) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|0x0010: INVOKE  (r0 I:java.util.Iterator) = (r3 I:java.lang.Iterable A[D('elements' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:79)\l0x0014: INVOKE  (r0 I:java.lang.Object) = \l  (r2 I:kotlin.sequences.SequenceScope)\l  (r0 I:java.util.Iterator)\l  (r4 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)])\l type: VIRTUAL call: kotlin.sequences.SequenceScope.yieldAll(java.util.Iterator, kotlin.coroutines.Continuation):java.lang.Object A[MD:(java.util.Iterator\<? extends T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l0x0018: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x001c|0x001c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x001f \l}"];
Node_23 [shape=record,label="{23\:\ 0x001e|RETURN\l|0x001e: RETURN  (r0 I:java.lang.Object) \l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|0x001f: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|RETURN\l|0x0021: RETURN  (r0 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlin.sequences.SequenceScope.yieldAll((r2 'this' I:kotlin.sequences.SequenceScope\<T\> A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Iterable\<? extends T\> A[D('elements' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.coroutines.Continuation\<? super kotlin.Unit\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x001e \-\> B:14:?, CROSS_EDGE: B:25:0x0021 \-\> B:14:?, CROSS_EDGE: B:16:0x0002 \-\> B:21:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0021: r3 'elements' Ljava\/lang\/Iterable;\l  \-1 \-0x0021: r4 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [T]\lSIGNATURE: (Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/coroutines\/Continuation\<\-Lkotlin\/Unit;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_14;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

