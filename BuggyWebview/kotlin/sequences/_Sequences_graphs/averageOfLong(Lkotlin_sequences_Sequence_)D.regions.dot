digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.averageOfLong(Lkotlin\/sequences\/Sequence;)D" {
subgraph cluster_Region_1595515355 {
label = "R(3:1|(2:4|(1:7)(0))|(2:(1:13)|(1:16)))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"\<this\>\")\ldouble r0 = 0.0d\lint r2 = 0\ljava.util.Iterator r3 = r8.iterator()\l\l}"];
subgraph cluster_LoopRegion_1648663536 {
label = "LOOP:0: (2:4|(1:7)(0))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0010|java.lang.Object \lif (r3.hasNext() != false) goto L4\l}"];
subgraph cluster_Region_2094895502 {
label = "R(2:4|(1:7)(0))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0012|long long r4 = r4.longValue()\lr0 += r4\lr2++\l}"];
subgraph cluster_IfRegion_1603137707 {
label = "IF [B:24:0x0020] THEN: R(1:7) ELSE: R(0)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0020|if (r2 \< 0) goto L6\l}"];
subgraph cluster_Region_650545228 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0022|kotlin.collections.CollectionsKt.throwCountOverflow()\l}"];
}
subgraph cluster_Region_1415749950 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
subgraph cluster_Region_541696312 {
label = "R(2:(1:13)|(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1292408744 {
label = "IF [B:26:0x0026] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0026|if (r2 == 0) goto L13\l}"];
subgraph cluster_Region_1720989146 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0028|SYNTHETIC\lRETURN\l|return Double.NaN\l}"];
}
}
subgraph cluster_Region_1295592562 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x002e|RETURN\lORIG_RETURN\l|return r0 \/ r2\l}"];
}
}
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000c|LOOP_START\lLOOP:0: B:21:0x000c\-\>B:32:0x000c\lPHI: r0 r2 \l  PHI: (r0v2 'sum' double) = (r0v1 'sum' double), (r0v3 'sum' double) binds: [B:20:0x0000, B:32:0x000c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'count' int) = (r2v0 'count' int), (r2v2 'count' int) binds: [B:20:0x0000, B:32:0x000c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0022|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x000c|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x000c|LOOP_END\lSYNTHETIC\lLOOP:0: B:21:0x000c\-\>B:32:0x000c\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x000c|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0026|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x002b}"];
MethodNode[shape=record,label="{public static final double kotlin.sequences.SequencesKt___SequencesKt.averageOfLong((r8v0 kotlin.sequences.Sequence\<java.lang.Long\> A[D('$this$average' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x0020 \-\> B:21:0x000c, BACK_EDGE: B:25:0x0022 \-\> B:21:0x000c, CROSS_EDGE: B:28:0x002b \-\> B:29:0x002e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlin\/sequences\/Sequence\<Ljava\/lang\/Long;\>;)D\l}"];
MethodNode -> Node_18;Node_20 -> Node_21;
Node_22 -> Node_23;
Node_22 -> Node_31[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_30;
Node_24 -> Node_33[style=dashed];
Node_25 -> Node_34;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_19;
Node_29 -> Node_19;
Node_18 -> Node_20;
Node_21 -> Node_22;
Node_30 -> Node_25;
Node_34 -> Node_32;
Node_32 -> Node_21;
Node_33 -> Node_32;
Node_31 -> Node_26;
Node_28 -> Node_29;
}

