digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.associateWith(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r8 I:java.lang.Object A[D('$this$associateWith' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"valueSelector\" \l0x0007: INVOKE  (r9 I:java.lang.Object A[D('valueSelector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r1 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap  (LINE:759)\l0x000d: INVOKE  (r1 I:java.util.LinkedHashMap) type: DIRECT call: java.util.LinkedHashMap.\<init\>():void A[MD:():void (c)]\l0x0010: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$this$associateWith' kotlin.sequences.Sequence)])  (LINE:760)\l0x0011: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: INVOKE  (r4 I:java.util.Iterator) = (r2 I:kotlin.sequences.Sequence A[D('$this$associateWithTo$iv' kotlin.sequences.Sequence)]) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:3129)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|LOOP_START\lLOOP:0: B:12:0x0016\-\>B:14:0x001c\l|0x0016: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001a|0x001a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x002b \l}"];
Node_14 [shape=record,label="{14\:\ 0x001c|LOOP_END\lLOOP:0: B:12:0x0016\-\>B:14:0x001c\l|0x001c: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0020: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('result' java.util.LinkedHashMap)])  (LINE:3130)\l0x0021: CHECK_CAST (r6 I:java.util.Map) = (java.util.Map) (r6 I:??[OBJECT, ARRAY]) \l0x0023: INVOKE  (r7 I:java.lang.Object) = \l  (r9 I:kotlin.jvm.functions.Function1 A[D('valueSelector' kotlin.jvm.functions.Function1)])\l  (r5 I:java.lang.Object A[D('element$iv' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0027: INVOKE  (r6 I:java.util.Map), (r5 I:java.lang.Object A[D('element$iv' java.lang.Object)]), (r7 I:java.lang.Object) type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|0x002b: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('$this$associateWithTo$iv' kotlin.sequences.Sequence)]) = (r1 I:??[OBJECT, ARRAY] A[D('result' java.util.LinkedHashMap)])  (LINE:3132)\l0x002c: CHECK_CAST (r2 I:java.util.Map) = (java.util.Map) (r2 I:??[OBJECT, ARRAY] A[D('$this$associateWithTo$iv' kotlin.sequences.Sequence)]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|RETURN\l|0x002e: RETURN  (r2 I:java.util.Map\<K, V\> A[D('$this$associateWithTo$iv' kotlin.sequences.Sequence)])  (LINE:760)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.sequences.SequencesKt___SequencesKt.associateWith((r8 I:kotlin.sequences.Sequence\<? extends K\> A[D('$this$associateWith' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.jvm.functions.Function1\<? super K, ? extends V\> A[D('valueSelector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x001c \-\> B:12:0x0016\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0020\-0x002b: r5 'element$iv' Ljava\/lang\/Object;\l  0x0011\-0x002e: r2 '$this$associateWithTo$iv' Lkotlin\/sequences\/Sequence;\l  0x0012\-0x002e: r3 '$i$f$associateWithTo' I\l  0x000b\-0x002e: r0 '$i$f$associateWith' I\l  0x0010\-0x002e: r1 'result' Ljava\/util\/LinkedHashMap;\l  \-1 \-0x002e: r8 '$this$associateWith' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x002e: r9 'valueSelector' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TK;\>;Lkotlin\/jvm\/functions\/Function1\<\-TK;+TV;\>;)Ljava\/util\/Map\<TK;TV;\>;\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_12;
Node_17 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_10;
}

