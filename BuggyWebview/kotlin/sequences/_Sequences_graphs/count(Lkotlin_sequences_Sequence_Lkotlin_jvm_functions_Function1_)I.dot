digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.count(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function1;)I" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"predicate\")\lr1 = 0\ljava.util.Iterator r2 = r5.iterator()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|LOOP_START\lLOOP:0: B:21:0x0010\-\>B:32:0x0010\lPHI: r1 \l  PHI: (r1v1 'count' int) = (r1v0 'count' int), (r1v2 'count' int) binds: [B:20:0x0000, B:32:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|if (r2.hasNext() == false) goto L15\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|java.lang.Object r3 = (T) r2.next()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0024|if (r6.invoke(r3).booleanValue() == false) goto L14\l}"];
Node_29 [shape=record,label="{29\:\ 0x0026|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0026|int r1 = r1 + 1\l}"];
Node_26 [shape=record,label="{26\:\ 0x0028|if (r1 \>= 0) goto L13\l}"];
Node_31 [shape=record,label="{31\:\ 0x002a|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x002a|kotlin.collections.CollectionsKt.throwCountOverflow()\l}"];
Node_35 [shape=record,label="{35\:\ 0x0010|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0010|LOOP_END\lSYNTHETIC\lLOOP:0: B:21:0x0010\-\>B:32:0x0010\lPHI: r1 \l  PHI: (r1v2 'count' int) = (r1v1 'count' int), (r1v3 'count' int), (r1v3 'count' int) binds: [B:33:0x0010, B:34:0x0010, B:35:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0010|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0010|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x002e|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x002e|RETURN\l|return r1\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final int kotlin.sequences.SequencesKt___SequencesKt.count((r5v0 kotlin.sequences.Sequence\<? extends T\> A[D('$this$count' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'predicate' kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x0024 \-\> B:21:0x0010, BACK_EDGE: B:26:0x0028 \-\> B:21:0x0010, BACK_EDGE: B:27:0x002a \-\> B:21:0x0010\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)I\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r3v1. Raw type applied. Possible types: T, ? super T\}\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_30;
Node_23 -> Node_24;
Node_24 -> Node_29[style=dashed];
Node_24 -> Node_33;
Node_29 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_31[style=dashed];
Node_26 -> Node_34;
Node_31 -> Node_27;
Node_27 -> Node_35;
Node_35 -> Node_32;
Node_32 -> Node_21;
Node_34 -> Node_32;
Node_33 -> Node_32;
Node_30 -> Node_28;
Node_28 -> Node_19;
}

