digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.joinToString(Lkotlin\/sequences\/Sequence;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;ILjava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/String;" {
subgraph cluster_Region_1065765309 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"separator\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r11, \"prefix\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r12, \"postfix\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r14, \"truncated\")\ljava.lang.String java.lang.String r0 = ((java.lang.StringBuilder) kotlin.sequences.SequencesKt.joinTo(r9, new java.lang.StringBuilder(), r10, r11, r12, r13, r14, r15)).toString()\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"joinTo(StringBuilder(), â€¦ed, transform).toString()\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|RETURN\l|return r0\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.sequences.SequencesKt___SequencesKt.joinToString((r9v0 kotlin.sequences.Sequence\<? extends T\> A[D('$this$joinToString' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'separator' java.lang.CharSequence A[D('separator' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'prefix' java.lang.CharSequence A[D('prefix' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'postfix' java.lang.CharSequence A[D('postfix' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'limit' int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'truncated' java.lang.CharSequence A[D('truncated' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 kotlin.jvm.functions.Function1\<? super T, ? extends java.lang.CharSequence\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;ILjava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-TT;+Ljava\/lang\/CharSequence;\>;)Ljava\/lang\/String;\l}"];
MethodNode -> Node_4;Node_6 -> Node_7;
Node_7 -> Node_5;
Node_4 -> Node_6;
}

