digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.mapIndexedNotNullTo(Lkotlin\/sequences\/Sequence;Ljava\/util\/Collection;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/Collection;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r11 I:java.lang.Object A[D('$this$mapIndexedNotNullTo' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r12 I:java.lang.Object A[D('destination' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x000c: INVOKE  (r13 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('$this$mapIndexedNotNullTo' kotlin.sequences.Sequence)])  (LINE:1088)\l0x0011: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3173)\l0x0013: INVOKE  (r4 I:java.util.Iterator) = (r1 I:kotlin.sequences.Sequence A[D('$this$forEachIndexed$iv' kotlin.sequences.Sequence)]) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:3174)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0017|LOOP_START\lLOOP:0: B:20:0x0017\-\>B:28:0x0039\l|0x0017: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001b|0x001b: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x003c \l}"];
Node_22 [shape=record,label="{22\:\ 0x001d|0x001d: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0021: ARITH  (r6 I:int) = (r3 I:int A[D('index$iv' int)]) + (1 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0023|0x0023: IF  (r3 I:??[int, byte, short, char] A[D('index$iv' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:25:0x0028 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0025|0x0025: INVOKE   type: STATIC call: kotlin.collections.CollectionsKt.throwIndexOverflow():void A[MD:():void (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0028|0x0028: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('item$iv' java.lang.Object)]) \l0x0029: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002a: INVOKE  (r9 I:java.lang.Integer) = (r3 I:int A[D('index' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:1088)\l0x002e: INVOKE  (r9 I:java.lang.Object) = \l  (r13 I:kotlin.jvm.functions.Function2 A[D('transform' kotlin.jvm.functions.Function2)])\l  (r9 I:java.lang.Object)\l  (r7 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0032|0x0032: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0039 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0034|0x0034: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3113)\l0x0035: INVOKE  \l  (r12 I:java.util.Collection A[D('destination' java.util.Collection)])\l  (r9 I:java.lang.Object A[D('it' java.lang.Object)])\l type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:1088)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0039|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0039|LOOP_END\lLOOP:0: B:20:0x0017\-\>B:28:0x0039\l|0x0039: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index$iv' int)])  (LINE:3174)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0039|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x003c|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x003c|RETURN\l|0x003c: RETURN  (r12 I:C extends java.util.Collection\<? super R\> A[D('destination' java.util.Collection)])  (LINE:1089)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final C extends java.util.Collection\<? super R\> kotlin.sequences.SequencesKt___SequencesKt.mapIndexedNotNullTo((r11 I:kotlin.sequences.Sequence\<? extends T\> A[D('$this$mapIndexedNotNullTo' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:C extends java.util.Collection\<? super R\> A[D('destination' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super T, ? extends R\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0039 \-\> B:20:0x0017, CROSS_EDGE: B:26:0x0032 \-\> B:28:0x0039, CROSS_EDGE: B:23:0x0023 \-\> B:25:0x0028\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0023: r3 'index$iv' I\l  0x0034\-0x0038: r9 'it' Ljava\/lang\/Object;\l  0x0035\-0x0038: r10 '$i$a$\-let\-SequencesKt___SequencesKt$mapIndexedNotNullTo$1$1' I\l  0x0028\-0x0039: r3 'index' I\l  0x0021\-0x0039: r5 'item$iv' Ljava\/lang\/Object;\l  0x0029\-0x0039: r7 'element' Ljava\/lang\/Object;\l  0x002a\-0x0039: r8 '$i$a$\-forEachIndexed\-SequencesKt___SequencesKt$mapIndexedNotNullTo$1' I\l  0x0023\-0x003b: r6 'index$iv' I\l  0x0011\-0x003c: r1 '$this$forEachIndexed$iv' Lkotlin\/sequences\/Sequence;\l  0x0012\-0x003c: r2 '$i$f$forEachIndexed' I\l  0x003b\-0x003c: r3 'index$iv' I\l  0x0010\-0x003c: r0 '$i$f$mapIndexedNotNullTo' I\l  \-1 \-0x003c: r11 '$this$mapIndexedNotNullTo' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x003c: r12 'destination' Ljava\/util\/Collection;\l  \-1 \-0x003c: r13 'transform' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [R, C extends java.util.Collection\<? super R\>, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;C::Ljava\/util\/Collection\<\-TR;\>;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;TC;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Integer;\-TT;+TR;\>;)TC;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_31;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_33;
Node_27 -> Node_32;
Node_32 -> Node_28;
Node_28 -> Node_20;
Node_33 -> Node_28;
Node_31 -> Node_30;
Node_30 -> Node_18;
}

