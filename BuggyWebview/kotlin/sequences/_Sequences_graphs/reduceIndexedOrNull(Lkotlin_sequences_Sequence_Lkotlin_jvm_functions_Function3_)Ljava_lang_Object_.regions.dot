digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.reduceIndexedOrNull(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function3;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1492049012 {
label = "R(2:1|(2:(3:5|(3:8|(1:10)(0)|12)|15)|(1:3)))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"operation\")\ljava.util.Iterator java.util.Iterator r1 = r6.iterator()\l}"];
subgraph cluster_Region_12619237 {
label = "R(2:(3:5|(3:8|(1:10)(0)|12)|15)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1409712087 {
label = "IF [B:20:0x0013] THEN: R(3:5|(3:8|(1:10)(0)|12)|15) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0013|if (r1.hasNext() == true) goto L5\l}"];
subgraph cluster_Region_563224609 {
label = "R(3:5|(3:8|(1:10)(0)|12)|15)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0017|int r2 = 1\ljava.lang.Object T r3 = r1.next()\l}"];
subgraph cluster_LoopRegion_1574917210 {
label = "LOOP:0: (3:8|(1:10)(0)|12)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0020|if (r1.hasNext() != false) goto L8\l}"];
subgraph cluster_Region_1945911017 {
label = "R(3:8|(1:10)(0)|12)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0022|int int r4 = r2 + 1\l}"];
subgraph cluster_IfRegion_350429062 {
label = "IF [B:27:0x0024] THEN: R(1:10) ELSE: R(0)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0024|if (r2 \< 0) goto L10\l}"];
subgraph cluster_Region_1702191840 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0026|kotlin.collections.CollectionsKt.throwIndexOverflow()\l}"];
}
subgraph cluster_Region_514432181 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_29 [shape=record,label="{29\:\ 0x0029|LOOP_END\lLOOP:0: B:24:0x001c\-\>B:29:0x0029\l|java.lang.Object r3 = (S) r7.invoke(java.lang.Integer.valueOf(r2), r3, (T) r1.next())\lr2 = r4\l}"];
}
}
Node_30 [shape=record,label="{30\:\ 0x0037|RETURN\l|return (S) r3\l}"];
}
}
subgraph cluster_Region_577643162 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0015|RETURN\l|return null\l}"];
}
}
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x001c|LOOP_START\lLOOP:0: B:24:0x001c\-\>B:29:0x0029\lPHI: r2 r3 \l  PHI: (r2v2 'index' int) = (r2v1 'index' int), (r2v4 'index' int) binds: [B:23:0x0017, B:29:0x0029] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'accumulator' java.lang.Object) = (r3v0 'accumulator' T extends S), (r3v2 'accumulator' java.lang.Object) binds: [B:23:0x0017, B:29:0x0029] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0029|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0029|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0037|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final S kotlin.sequences.SequencesKt___SequencesKt.reduceIndexedOrNull((r6v0 kotlin.sequences.Sequence\<? extends T extends S\> A[D('$this$reduceIndexedOrNull' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'operation' kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super S, ? super T extends S, ? extends S\> A[D('operation' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x0029 \-\> B:24:0x001c, CROSS_EDGE: B:27:0x0024 \-\> B:29:0x0029, CROSS_EDGE: B:30:0x0037 \-\> B:18:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [S, T extends S]\lSIGNATURE: \<S:Ljava\/lang\/Object;T::TS;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function3\<\-Ljava\/lang\/Integer;\-TS;\-TT;+TS;\>;)TS;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r5v0. Raw type applied. Possible types: T extends S, ? super T extends S\}\l}"];
MethodNode -> Node_17;Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_25 -> Node_31[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_33[style=dashed];
Node_28 -> Node_32;
Node_29 -> Node_24;
Node_30 -> Node_18;
Node_21 -> Node_18;
Node_17 -> Node_19;
Node_24 -> Node_25;
Node_32 -> Node_29;
Node_33 -> Node_29;
Node_31 -> Node_30;
}

