digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.filterIndexed(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function2;)Lkotlin\/sequences\/Sequence;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$filterIndexed' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: NEW_INSTANCE  (r0 I:kotlin.sequences.TransformingSequence) =  kotlin.sequences.TransformingSequence  (LINE:445)\l0x000c: NEW_INSTANCE  (r1 I:kotlin.sequences.FilteringSequence) =  kotlin.sequences.FilteringSequence \l0x000e: NEW_INSTANCE  (r2 I:kotlin.sequences.IndexingSequence) =  kotlin.sequences.IndexingSequence \l0x0010: INVOKE  \l  (r2 I:kotlin.sequences.IndexingSequence)\l  (r5 I:kotlin.sequences.Sequence A[D('$this$filterIndexed' kotlin.sequences.Sequence)])\l type: DIRECT call: kotlin.sequences.IndexingSequence.\<init\>(kotlin.sequences.Sequence):void A[MD:(kotlin.sequences.Sequence\<? extends T\>):void (m)]\l0x0013: CHECK_CAST (r2 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r2 I:??[OBJECT, ARRAY]) \l0x0015: NEW_INSTANCE  (r3 I:kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1) =  kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1 \l0x0017: INVOKE  \l  (r3 I:kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1)\l  (r6 I:kotlin.jvm.functions.Function2 A[D('predicate' kotlin.jvm.functions.Function2)])\l type: DIRECT call: kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1.\<init\>(kotlin.jvm.functions.Function2):void A[MD:(kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super T, java.lang.Boolean\>):void (m)]\l0x001a: CHECK_CAST (r3 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r3 I:??[OBJECT, ARRAY]) \l0x001c: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001d: INVOKE  \l  (r1 I:kotlin.sequences.FilteringSequence)\l  (r2 I:kotlin.sequences.Sequence)\l  (r4 I:boolean)\l  (r3 I:kotlin.jvm.functions.Function1)\l type: DIRECT call: kotlin.sequences.FilteringSequence.\<init\>(kotlin.sequences.Sequence, boolean, kotlin.jvm.functions.Function1):void A[MD:(kotlin.sequences.Sequence\<? extends T\>, boolean, kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\>):void (m)]\l0x0020: CHECK_CAST (r1 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r1 I:??[OBJECT, ARRAY]) \l0x0022: SGET  (r2 I:kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2) =  kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2.INSTANCE kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2 \l0x0024: CHECK_CAST (r2 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r2 I:??[OBJECT, ARRAY]) \l0x0026: INVOKE  (r0 I:kotlin.sequences.TransformingSequence), (r1 I:kotlin.sequences.Sequence), (r2 I:kotlin.jvm.functions.Function1) type: DIRECT call: kotlin.sequences.TransformingSequence.\<init\>(kotlin.sequences.Sequence, kotlin.jvm.functions.Function1):void A[MD:(kotlin.sequences.Sequence\<? extends T\>, kotlin.jvm.functions.Function1\<? super T, ? extends R\>):void (m)]\l0x0029: CHECK_CAST (r0 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|RETURN\l|0x002b: RETURN  (r0 I:kotlin.sequences.Sequence\<T\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<T\> kotlin.sequences.SequencesKt___SequencesKt.filterIndexed((r5 I:kotlin.sequences.Sequence\<? extends T\> A[D('$this$filterIndexed' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002b: r5 '$this$filterIndexed' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x002b: r6 'predicate' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Integer;\-TT;Ljava\/lang\/Boolean;\>;)Lkotlin\/sequences\/Sequence\<TT;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

