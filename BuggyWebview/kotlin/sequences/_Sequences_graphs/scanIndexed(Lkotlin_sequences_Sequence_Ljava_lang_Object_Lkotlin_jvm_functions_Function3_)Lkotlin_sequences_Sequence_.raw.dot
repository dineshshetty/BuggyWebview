digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.scanIndexed(Lkotlin\/sequences\/Sequence;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function3;)Lkotlin\/sequences\/Sequence;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$scanIndexed' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"operation\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('operation' kotlin.jvm.functions.Function3)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:kotlin.sequences.Sequence) = \l  (r1 I:kotlin.sequences.Sequence A[D('$this$scanIndexed' kotlin.sequences.Sequence)])\l  (r2 I:java.lang.Object A[D('initial' java.lang.Object)])\l  (r3 I:kotlin.jvm.functions.Function3 A[D('operation' kotlin.jvm.functions.Function3)])\l type: STATIC call: kotlin.sequences.SequencesKt.runningFoldIndexed(kotlin.sequences.Sequence, java.lang.Object, kotlin.jvm.functions.Function3):kotlin.sequences.Sequence A[MD:\<T, R\>:(kotlin.sequences.Sequence\<? extends T\>, R, kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super R, ? super T, ? extends R\>):kotlin.sequences.Sequence\<R\> (m)] (LINE:2423)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:kotlin.sequences.Sequence\<R\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<R\> kotlin.sequences.SequencesKt___SequencesKt.scanIndexed((r1 I:kotlin.sequences.Sequence\<? extends T\> A[D('$this$scanIndexed' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:R A[D('initial' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super R, ? super T, ? extends R\> A[D('operation' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000e: r1 '$this$scanIndexed' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x000e: r2 'initial' Ljava\/lang\/Object;\l  \-1 \-0x000e: r3 'operation' Lkotlin\/jvm\/functions\/Function3;\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;TR;Lkotlin\/jvm\/functions\/Function3\<\-Ljava\/lang\/Integer;\-TR;\-TT;+TR;\>;)Lkotlin\/sequences\/Sequence\<TR;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

