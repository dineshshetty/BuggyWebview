digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.singleOrNull(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
subgraph cluster_Region_4197538 {
label = "R(3:1|(2:4|(1:(2:(1:12)|(1:8)))(0))|(2:(1:18)|(1:17)))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"predicate\")\lT r1 = null\lboolean r2 = false\ljava.util.Iterator r3 = r7.iterator()\l\l}"];
subgraph cluster_LoopRegion_1356132405 {
label = "LOOP:0: (2:4|(1:(2:(1:12)|(1:8)))(0))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0016|java.lang.Object \lif (r3.hasNext() != false) goto L4\l}"];
subgraph cluster_Region_741798261 {
label = "R(2:4|(1:(2:(1:12)|(1:8)))(0))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0018|java.lang.Object r4 = r3.next()\l}"];
subgraph cluster_IfRegion_786801164 {
label = "IF [B:25:0x0026] THEN: R(1:(2:(1:12)|(1:8))) ELSE: R(0)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0026|if (r8.invoke(r4).booleanValue() != false) goto L6\l}"];
subgraph cluster_Region_325543398 {
label = "R(1:(2:(1:12)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1682270951 {
label = "R(2:(1:12)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1958368060 {
label = "IF [B:26:0x0028] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0028|if (r2 == true) goto L11\l}"];
subgraph cluster_Region_2137227843 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x002a|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1078184332 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x002b|r1 = r4\lr2 = true\l}"];
}
}
}
subgraph cluster_Region_2090183265 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
subgraph cluster_Region_1425385536 {
label = "R(2:(1:18)|(1:17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1956606997 {
label = "IF [B:29:0x002e] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x002e|if (r2 == true) goto L18\l}"];
subgraph cluster_Region_110555397 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0031|RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_464056939 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0030|RETURN\l|return null\l}"];
}
}
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0011|LOOP_START\lLOOP:0: B:22:0x0011\-\>B:35:0x0011\lPHI: r1 r2 \l  PHI: (r1v1 T) = (r1v0 T), (r1v2 T) binds: [B:21:0x0000, B:35:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'found' boolean) = (r2v0 'found' boolean), (r2v2 'found' boolean) binds: [B:21:0x0000, B:35:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0028|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0011|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0011|LOOP_END\lSYNTHETIC\lLOOP:0: B:22:0x0011\-\>B:35:0x0011\lPHI: r1 r2 \l  PHI: (r1v2 T) = (r1v1 T), (r1v3 T) binds: [B:36:0x0011, B:37:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 'found' boolean) = (r2v1 'found' boolean), (r2v3 'found' boolean) binds: [B:36:0x0011, B:37:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x002a|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0011|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x002e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final T kotlin.sequences.SequencesKt___SequencesKt.singleOrNull((r7v0 kotlin.sequences.Sequence\<? extends T\> A[D('$this$singleOrNull' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'predicate' kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x0026 \-\> B:22:0x0011, BACK_EDGE: B:28:0x002b \-\> B:22:0x0011, CROSS_EDGE: B:30:0x0030 \-\> B:20:?, CROSS_EDGE: B:31:0x0031 \-\> B:20:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)TT;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r4v1, resolved type: java.lang.Object\}\l}"];
MethodNode -> Node_19;Node_21 -> Node_22;
Node_23 -> Node_24;
Node_23 -> Node_33[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_32;
Node_25 -> Node_36[style=dashed];
Node_26 -> Node_28[style=dashed];
Node_26 -> Node_34;
Node_27 -> Node_20;
Node_28 -> Node_37;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_31 -> Node_20;
Node_30 -> Node_20;
Node_19 -> Node_21;
Node_22 -> Node_23;
Node_32 -> Node_26;
Node_37 -> Node_35;
Node_35 -> Node_22;
Node_34 -> Node_27;
Node_36 -> Node_35;
Node_33 -> Node_29;
}

