digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.maxOfWithOrNull(Lkotlin\/sequences\/Sequence;Ljava\/util\/Comparator;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"comparator\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"selector\")\ljava.util.Iterator r0 = r4.iterator()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0017|if (r0.hasNext() != false) goto L5\l}"];
Node_22 [shape=record,label="{22\:\ 0x0019|RETURN\l|return null\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x001b|java.lang.Object r1 = (R) r6.invoke((T) r0.next())\l}"];
Node_25 [shape=record,label="{25\:\ 0x0023|LOOP_START\lLOOP:0: B:25:0x0023\-\>B:33:0x0023\lPHI: r1 \l  PHI: (r1v3 'maxValue' java.lang.Object) = (r1v2 'maxValue' java.lang.Object), (r1v4 'maxValue' java.lang.Object) binds: [B:24:0x001b, B:33:0x0023] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|if (r0.hasNext() == false) goto L15\l}"];
Node_27 [shape=record,label="{27\:\ 0x0029|java.lang.Object r2 = r6.invoke((T) r0.next())\l}"];
Node_28 [shape=record,label="{28\:\ 0x0035|if (r5.compare(r1, r2) \>= 0) goto L14\l}"];
Node_31 [shape=record,label="{31\:\ 0x0037|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0037|r1 = r2\lr1 = (R) r1\l}"];
Node_35 [shape=record,label="{35\:\ 0x0023|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0023|LOOP_END\lSYNTHETIC\lLOOP:0: B:25:0x0023\-\>B:33:0x0023\lPHI: r1 \l  PHI: (r1v4 'maxValue' java.lang.Object) = (r1v3 'maxValue' java.lang.Object), (r1v5 'maxValue' java.lang.Object) binds: [B:34:0x0023, B:35:0x0023] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0023|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0039|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0039|RETURN\l|return (R) r1\l}"];
MethodNode[shape=record,label="{private static final R kotlin.sequences.SequencesKt___SequencesKt.maxOfWithOrNull((r4v0 kotlin.sequences.Sequence\<? extends T\> A[D('$this$maxOfWithOrNull' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'comparator' java.util.Comparator\<? super R\> A[D('comparator' java.util.Comparator), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'selector' kotlin.jvm.functions.Function1\<? super T, ? extends R\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0035 \-\> B:25:0x0023, BACK_EDGE: B:29:0x0037 \-\> B:25:0x0023, CROSS_EDGE: B:30:0x0039 \-\> B:19:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Ljava\/util\/Comparator\<\-TR;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)TR;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r2v2, resolved type: java.lang.Object\l \-\> Type inference failed for r1v1. Raw type applied. Possible types: T, ? super T\l \-\> Type inference failed for r2v1. Raw type applied. Possible types: T, ? super T\l \-\> Type inference failed for r1v9. Raw type applied. Possible types: R, ? super R\}\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_32;
Node_27 -> Node_28;
Node_28 -> Node_31[style=dashed];
Node_28 -> Node_34;
Node_31 -> Node_29;
Node_29 -> Node_35;
Node_35 -> Node_33;
Node_33 -> Node_25;
Node_34 -> Node_33;
Node_32 -> Node_30;
Node_30 -> Node_19;
}

