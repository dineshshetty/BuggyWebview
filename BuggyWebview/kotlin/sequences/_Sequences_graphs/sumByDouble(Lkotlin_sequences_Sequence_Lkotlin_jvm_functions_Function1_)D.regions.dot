digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.sumByDouble(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function1;)D" {
subgraph cluster_Region_496508018 {
label = "R(3:1|(1:4)|6)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"selector\")\ldouble r1 = 0.0d\ljava.util.Iterator java.util.Iterator\<? extends T\> r3 = r7.iterator()\l}"];
subgraph cluster_LoopRegion_2137926140 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0015|if (r3.hasNext() != false) goto L4\l}"];
subgraph cluster_Region_649449989 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0017|LOOP_END\lLOOP:0: B:11:0x0011\-\>B:13:0x0017\l|java.lang.Object java.lang.Object r4 = (T) r3.next()\lr1 += r8.invoke(r4).doubleValue()\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0027|RETURN\l|return r1\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0011|LOOP_START\lLOOP:0: B:11:0x0011\-\>B:13:0x0017\lPHI: r1 \l  PHI: (r1v1 'sum' double) = (r1v0 'sum' double), (r1v2 'sum' double) binds: [B:10:0x0000, B:13:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0027|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final double kotlin.sequences.SequencesKt___SequencesKt.sumByDouble((r7v0 kotlin.sequences.Sequence\<? extends T\> A[D('$this$sumByDouble' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'selector' kotlin.jvm.functions.Function1\<? super T, java.lang.Double\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use sumOf instead., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=this.sumOf(selector), imports=[[]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{warningSince=1.5\}\}\}\lINLINE_NOT_NEEDED\lBACK_EDGE: B:13:0x0017 \-\> B:11:0x0011\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Double;\>;)D\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r4v1. Raw type applied. Possible types: T, ? super T\}\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_15[style=dashed];
Node_13 -> Node_11;
Node_14 -> Node_9;
Node_8 -> Node_10;
Node_11 -> Node_12;
Node_15 -> Node_14;
}

