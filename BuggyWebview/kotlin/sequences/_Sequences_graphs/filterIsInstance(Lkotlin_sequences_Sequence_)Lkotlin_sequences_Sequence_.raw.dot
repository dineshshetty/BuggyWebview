digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.filterIsInstance(Lkotlin\/sequences\/Sequence;)Lkotlin\/sequences\/Sequence;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$filterIsInstance' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: INVOKE   type: STATIC call: kotlin.jvm.internal.Intrinsics.needClassReification():void A[MD:():void (m)] (LINE:473)\l0x0009: SGET  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1) =  kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1.INSTANCE kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1 \l0x000b: CHECK_CAST (r1 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r1 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  (r1 I:kotlin.sequences.Sequence) = \l  (r3 I:kotlin.sequences.Sequence A[D('$this$filterIsInstance' kotlin.sequences.Sequence)])\l  (r1 I:kotlin.jvm.functions.Function1)\l type: STATIC call: kotlin.sequences.SequencesKt.filter(kotlin.sequences.Sequence, kotlin.jvm.functions.Function1):kotlin.sequences.Sequence A[MD:\<T\>:(kotlin.sequences.Sequence\<? extends T\>, kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\>):kotlin.sequences.Sequence\<T\> (m)]\l0x0011: CONST_STR  (r2 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlin.sequences.Sequence\<R of kotlin.sequences.SequencesKt___SequencesKt.filterIsInstance\>\" \l0x0013: INVOKE  (r1 I:java.lang.Object), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|RETURN\l|0x0016: RETURN  (r1 I:kotlin.sequences.Sequence\<R\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlin.sequences.Sequence\<R\> kotlin.sequences.SequencesKt___SequencesKt.filterIsInstance((r3 I:kotlin.sequences.Sequence\<?\> A[D('$this$filterIsInstance' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0016: r0 '$i$f$filterIsInstance' I\l  \-1 \-0x0016: r3 '$this$filterIsInstance' Lkotlin\/sequences\/Sequence;\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<*\>;)Lkotlin\/sequences\/Sequence\<TR;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

