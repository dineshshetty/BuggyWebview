digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.elementAtOrNull(Lkotlin\/sequences\/Sequence;I)Ljava\/lang\/Object;" {
subgraph cluster_Region_1559308097 {
label = "R(2:1|(2:(1:3)|(3:5|(2:8|(1:10)(1:12))|14)))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"\<this\>\")\l}"];
subgraph cluster_Region_382617028 {
label = "R(2:(1:3)|(3:5|(2:8|(1:10)(1:12))|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1150088643 {
label = "IF [B:18:0x0006] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0006|if (r6 \< 0) goto L3\l}"];
subgraph cluster_Region_2095032654 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0008|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1203454197 {
label = "R(3:5|(2:8|(1:10)(1:12))|14)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0009|java.util.Iterator r1 = r5.iterator()\lint r2 = 0\l\l}"];
subgraph cluster_LoopRegion_692142779 {
label = "LOOP:0: (2:8|(1:10)(1:12))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0012|java.lang.Object \lif (r1.hasNext() != false) goto L8\l}"];
subgraph cluster_Region_1657461440 {
label = "R(2:8|(1:10)(1:12))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0014|java.lang.Object r3 = r1.next()\lint int r4 = r2 + 1\l}"];
subgraph cluster_IfRegion_165273607 {
label = "IF [B:24:0x001a] THEN: R(1:10) ELSE: R(1:12)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x001a|if (r6 != r2) goto L10\l}"];
subgraph cluster_Region_1677194842 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x001d|LOOP_END\lLOOP:0: B:21:0x000e\-\>B:26:0x001d\l|r2 = r4\l}"];
}
subgraph cluster_Region_1304805938 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x001c|RETURN\l|return r3\l}"];
}
}
}
}
Node_27 [shape=record,label="{27\:\ 0x001f|RETURN\l|return null\l}"];
}
}
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000e|LOOP_START\lLOOP:0: B:21:0x000e\-\>B:26:0x001d\lPHI: r2 \l  PHI: (r2v1 'count' int) = (r2v0 'count' int), (r2v2 'count' int) binds: [B:20:0x0009, B:26:0x001d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x001c|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x001f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final T kotlin.sequences.SequencesKt___SequencesKt.elementAtOrNull((r5v0 kotlin.sequences.Sequence\<? extends T\> A[D('$this$elementAtOrNull' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'index' int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x001c \-\> B:16:?, BACK_EDGE: B:26:0x001d \-\> B:21:0x000e, CROSS_EDGE: B:27:0x001f \-\> B:16:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;I)TT;\l}"];
MethodNode -> Node_15;Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_16;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_22 -> Node_28[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_29[style=dashed];
Node_26 -> Node_21;
Node_25 -> Node_16;
Node_27 -> Node_16;
Node_15 -> Node_17;
Node_21 -> Node_22;
Node_29 -> Node_25;
Node_28 -> Node_27;
}

