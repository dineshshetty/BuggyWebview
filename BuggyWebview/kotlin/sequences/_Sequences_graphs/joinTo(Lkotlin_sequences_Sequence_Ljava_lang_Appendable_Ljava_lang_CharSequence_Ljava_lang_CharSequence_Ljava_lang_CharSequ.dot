digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.joinTo(Lkotlin\/sequences\/Sequence;Ljava\/lang\/Appendable;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;ILjava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Appendable;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"buffer\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"separator\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"prefix\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"postfix\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"truncated\")\lr5.append(r7)\lr0 = 0\ljava.util.Iterator r1 = r4.iterator()\l}"];
Node_25 [shape=record,label="{25\:\ 0x0026|LOOP_START\lLOOP:0: B:25:0x0026\-\>B:34:0x003e\lPHI: r0 \l  PHI: (r0v7 'count' int) = (r0v6 'count' int), (r0v9 'count' int) binds: [B:24:0x0000, B:34:0x003e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x002a|if (r1.hasNext() == false) goto L19\l}"];
Node_27 [shape=record,label="{27\:\ 0x002c|java.lang.Object r2 = r1.next()\lint r0 = r0 + 1\l}"];
Node_28 [shape=record,label="{28\:\ 0x0033|if (r0 \<= 1) goto L7\l}"];
Node_29 [shape=record,label="{29\:\ 0x0035|r5.append(r6)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0038|if (r9 \< 0) goto L18\l}"];
Node_31 [shape=record,label="{31\:\ 0x003a|if (r0 \> r9) goto L9\l}"];
Node_41 [shape=record,label="{41\:\ 0x0042|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0042|PHI: r0 \l  PHI: (r0v8 'count' int) = (r0v7 'count' int), (r0v9 'count' int) binds: [B:40:0x0042, B:41:0x0042] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 \< 0) goto L13\l}"];
Node_36 [shape=record,label="{36\:\ 0x0044|if (r0 \<= r9) goto L13\l}"];
Node_37 [shape=record,label="{37\:\ 0x0046|r5.append(r10)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0049|r5.append(r8)\l}"];
Node_39 [shape=record,label="{39\:\ 0x004c|RETURN\l|return r5\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x003e|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x003e|LOOP_END\lLOOP:0: B:25:0x0026\-\>B:34:0x003e\l|kotlin.text.StringsKt.appendElement(r5, r2, r11)\l}"];
Node_42 [shape=record,label="{42\:\ 0x003e|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0042|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final A extends java.lang.Appendable kotlin.sequences.SequencesKt___SequencesKt.joinTo((r4v0 kotlin.sequences.Sequence\<? extends T\> A[D('$this$joinTo' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'buffer' A extends java.lang.Appendable A[D('buffer' java.lang.Appendable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'separator' java.lang.CharSequence A[D('separator' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'prefix' java.lang.CharSequence A[D('prefix' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'postfix' java.lang.CharSequence A[D('postfix' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'limit' int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'truncated' java.lang.CharSequence A[D('truncated' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 kotlin.jvm.functions.Function1\<? super T, ? extends java.lang.CharSequence\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x003e \-\> B:25:0x0026, CROSS_EDGE: B:36:0x0044 \-\> B:38:0x0049, CROSS_EDGE: B:35:0x0042 \-\> B:38:0x0049, CROSS_EDGE: B:30:0x0038 \-\> B:34:0x003e, CROSS_EDGE: B:28:0x0033 \-\> B:30:0x0038, CROSS_EDGE: B:26:0x002a \-\> B:35:0x0042\lINLINE_NOT_NEEDED\lTYPE_VARS: [A extends java.lang.Appendable, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;A::Ljava\/lang\/Appendable;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;TA;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;ILjava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-TT;+Ljava\/lang\/CharSequence;\>;)TA;\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_40;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_42;
Node_31 -> Node_41;
Node_31 -> Node_43[style=dashed];
Node_41 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_38;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_23;
Node_43 -> Node_34;
Node_34 -> Node_25;
Node_42 -> Node_34;
Node_40 -> Node_35;
}

