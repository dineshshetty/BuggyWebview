digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.averageOfLong(Lkotlin\/sequences\/Sequence;)D" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r8 I:java.lang.Object A[D('$this$average' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[long, double]) = (0 ??[long, double])  (LINE:2978)\l0x0007: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2979)\l0x0008: INVOKE  (r3 I:java.util.Iterator) = (r8 I:kotlin.sequences.Sequence A[D('$this$average' kotlin.sequences.Sequence)]) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:2980)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|LOOP_START\lLOOP:0: B:21:0x000c\-\>B:32:0x000c\l|0x000c: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|0x0010: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0026 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0012|0x0012: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0016: CHECK_CAST (r4 I:java.lang.Number) = (java.lang.Number) (r4 I:??[OBJECT, ARRAY]) \l0x0018: INVOKE  (r4 I:long) = (r4 I:java.lang.Number) type: VIRTUAL call: java.lang.Number.longValue():long A[MD:():long (c)]\l0x001c: CAST (r6 I:double) = (double) (r4 I:long A[D('element' long)])  (LINE:2981)\l0x001d: ARITH  (r0 I:double) = (r0 I:double A[D('sum' double)]) + (r6 I:double) \l0x001e: ARITH  (r2 I:int) = (r2 I:int A[D('count' int)]) + (1 int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0020|0x0020: IF  (r2 I:??[int, byte, short, char] A[D('count' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:33:0x000c  (LINE:2982)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0022|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0022|0x0022: INVOKE   type: STATIC call: kotlin.collections.CollectionsKt.throwCountOverflow():void A[MD:():void (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x000c|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x000c|LOOP_END\lSYNTHETIC\lLOOP:0: B:21:0x000c\-\>B:32:0x000c\l}"];
Node_33 [shape=record,label="{33\:\ 0x000c|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0026|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0026|0x0026: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('count' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x002b  (LINE:2984)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0028|SYNTHETIC\lRETURN\l|0x0028: CONST  (r3 I:??[long, double]) = (9221120237041090560(0x7ff8000000000000, double:NaN) ??[long, double]) \l0x002e: RETURN  (r3 I:double) A[SYNTHETIC]\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x002b|0x002b: CAST (r3 I:double) = (double) (r2 I:int A[D('count' int)]) \l0x002c: ARITH  (r3 I:double) = (r0 I:double A[D('sum' double)]) \/ (r3 I:double) \l}"];
Node_29 [shape=record,label="{29\:\ 0x002e|RETURN\lORIG_RETURN\l|0x002e: RETURN  (r3 I:double) \l}"];
MethodNode[shape=record,label="{public static final double kotlin.sequences.SequencesKt___SequencesKt.averageOfLong((r8 I:kotlin.sequences.Sequence\<java.lang.Long\> A[D('$this$average' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x0020 \-\> B:21:0x000c, BACK_EDGE: B:25:0x0022 \-\> B:21:0x000c, CROSS_EDGE: B:28:0x002b \-\> B:29:0x002e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x0025: r4 'element' J\l  0x0007\-0x002e: r0 'sum' D\l  0x0008\-0x002e: r2 'count' I\l  \-1 \-0x002e: r8 '$this$average' Lkotlin\/sequences\/Sequence;\lSIGNATURE: (Lkotlin\/sequences\/Sequence\<Ljava\/lang\/Long;\>;)D\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_31;
Node_23 -> Node_24;
Node_24 -> Node_30[style=dashed];
Node_24 -> Node_33;
Node_30 -> Node_25;
Node_25 -> Node_34;
Node_34 -> Node_32;
Node_32 -> Node_21;
Node_33 -> Node_32;
Node_31 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_19;
Node_28 -> Node_29;
Node_29 -> Node_19;
}

