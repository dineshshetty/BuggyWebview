digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.single(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$single' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r7 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:346)\l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:347)\l0x000d: INVOKE  (r3 I:java.util.Iterator) = (r6 I:kotlin.sequences.Sequence A[D('$this$single' kotlin.sequences.Sequence)]) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:348)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|LOOP_START\lLOOP:0: B:24:0x0011\-\>B:39:0x0011\l|0x0011: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0015|0x0015: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0034 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0017|0x0017: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001b: INVOKE  (r5 I:java.lang.Object) = \l  (r7 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)])\l  (r4 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:349)\l0x001f: CHECK_CAST (r5 I:java.lang.Boolean) = (java.lang.Boolean) (r5 I:??[OBJECT, ARRAY]) \l0x0021: INVOKE  (r5 I:boolean) = (r5 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0025|0x0025: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0011 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0027|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0027|0x0027: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('found' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x002c  (LINE:350)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0029|0x0029: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('single' java.lang.Object)]) = (r4 I:??[OBJECT, ARRAY] A[D('element' java.lang.Object)])  (LINE:351)\l0x002a: CONST  (r2 I:??[boolean, int, float, short, byte, char] A[D('found' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:352)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0011|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0011|LOOP_END\lSYNTHETIC\lLOOP:0: B:24:0x0011\-\>B:39:0x0011\l}"];
Node_38 [shape=record,label="{38\:\ 0x002c|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x002c|0x002c: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:350)\l0x002e: CONST_STR  (r5 I:java.lang.String) =  \"Sequence contains more than one matching element.\" \l0x0030: INVOKE  (r3 I:java.lang.IllegalArgumentException), (r5 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0033|0x0033: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0011|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0034|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0034|0x0034: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('found' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0037  (LINE:355)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0036|RETURN\l|0x0036: RETURN  (r1 I:T A[D('single' java.lang.Object)])  (LINE:357)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0037|0x0037: NEW_INSTANCE  (r3 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException  (LINE:355)\l0x0039: CONST_STR  (r4 I:java.lang.String) =  \"Sequence contains no element matching the predicate.\" \l0x003b: INVOKE  (r3 I:java.util.NoSuchElementException), (r4 I:java.lang.String) type: DIRECT call: java.util.NoSuchElementException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x003e|0x003e: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final T kotlin.sequences.SequencesKt___SequencesKt.single((r6 I:kotlin.sequences.Sequence\<? extends T\> A[D('$this$single' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x0025 \-\> B:24:0x0011, BACK_EDGE: B:29:0x0029 \-\> B:24:0x0011, CROSS_EDGE: B:33:0x0036 \-\> B:22:?, CROSS_EDGE: B:35:0x003e \-\> B:22:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x002b: r4 'element' Ljava\/lang\/Object;\l  0x002c\-0x0034: r4 'element' Ljava\/lang\/Object;\l  0x000b\-0x003e: r0 '$i$f$single' I\l  0x000c\-0x003e: r1 'single' Ljava\/lang\/Object;\l  0x000d\-0x003e: r2 'found' Z\l  \-1 \-0x003e: r6 '$this$single' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x003e: r7 'predicate' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)TT;\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_37;
Node_26 -> Node_27;
Node_27 -> Node_36[style=dashed];
Node_27 -> Node_40;
Node_36 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_38;
Node_29 -> Node_41;
Node_41 -> Node_39;
Node_39 -> Node_24;
Node_38 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_22;
Node_40 -> Node_39;
Node_37 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_22;
Node_34 -> Node_35;
Node_35 -> Node_22;
}

