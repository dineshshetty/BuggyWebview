digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.minOf(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Comparable;" {
subgraph cluster_Region_2023669371 {
label = "R(2:1|(2:(1:17)|(3:3|(2:6|(1:9)(0))|14)))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"selector\")\ljava.util.Iterator java.util.Iterator r0 = r4.iterator()\l}"];
subgraph cluster_Region_822853784 {
label = "R(2:(1:17)|(3:3|(2:6|(1:9)(0))|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1901185478 {
label = "IF [B:21:0x0012] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0012|if (r0.hasNext() == false) goto L16\l}"];
subgraph cluster_Region_1445817681 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x003c|throw new java.util.NoSuchElementException()\l}"];
}
}
subgraph cluster_Region_932018679 {
label = "R(3:3|(2:6|(1:9)(0))|14)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0014|java.lang.Comparable R r1 = r5.invoke((T) r0.next())\l}"];
subgraph cluster_LoopRegion_2082971706 {
label = "LOOP:0: (2:6|(1:9)(0))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0022|if (r0.hasNext() != false) goto L6\l}"];
subgraph cluster_Region_1900520611 {
label = "R(2:6|(1:9)(0))";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0024|java.lang.Comparable R r2 = r5.invoke((T) r0.next())\l}"];
subgraph cluster_IfRegion_1387912790 {
label = "IF [B:26:0x0032] THEN: R(1:9) ELSE: R(0)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0032|if (r1.compareTo(r2) \> 0) goto L8\l}"];
subgraph cluster_Region_245845172 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0034|r1 = r2\l}"];
}
subgraph cluster_Region_1960934899 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_28 [shape=record,label="{28\:\ 0x0036|RETURN\l|return r1\l}"];
}
}
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x001e|LOOP_START\lLOOP:0: B:23:0x001e\-\>B:33:0x001e\lPHI: r1 \l  PHI: (r1v5 R extends java.lang.Comparable\<? super R\>) = (r1v4 R extends java.lang.Comparable\<? super R\>), (r1v6 R extends java.lang.Comparable\<? super R\>) binds: [B:22:0x0014, B:33:0x001e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0034|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x001e|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x001e|LOOP_END\lSYNTHETIC\lLOOP:0: B:23:0x001e\-\>B:33:0x001e\lPHI: r1 \l  PHI: (r1v6 R extends java.lang.Comparable\<? super R\>) = (r1v5 R extends java.lang.Comparable\<? super R\>), (r1v7 R extends java.lang.Comparable\<? super R\>) binds: [B:34:0x001e, B:35:0x001e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x001e|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0036|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0037}"];
MethodNode[shape=record,label="{private static final R extends java.lang.Comparable\<? super R\> kotlin.sequences.SequencesKt___SequencesKt.minOf((r4v0 kotlin.sequences.Sequence\<? extends T\> A[D('$this$minOf' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'selector' kotlin.jvm.functions.Function1\<? super T, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x0032 \-\> B:23:0x001e, BACK_EDGE: B:27:0x0034 \-\> B:23:0x001e, CROSS_EDGE: B:30:0x003c \-\> B:19:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R::Ljava\/lang\/Comparable\<\-TR;\>;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)TR;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r1v2. Raw type applied. Possible types: T, ? super T\l \-\> Type inference failed for r2v1. Raw type applied. Possible types: T, ? super T\}\l}"];
MethodNode -> Node_18;Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_29;
Node_30 -> Node_19;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_24 -> Node_32[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_31;
Node_26 -> Node_34[style=dashed];
Node_27 -> Node_35;
Node_28 -> Node_19;
Node_18 -> Node_20;
Node_23 -> Node_24;
Node_31 -> Node_27;
Node_35 -> Node_33;
Node_33 -> Node_23;
Node_34 -> Node_33;
Node_32 -> Node_28;
Node_29 -> Node_30;
}

