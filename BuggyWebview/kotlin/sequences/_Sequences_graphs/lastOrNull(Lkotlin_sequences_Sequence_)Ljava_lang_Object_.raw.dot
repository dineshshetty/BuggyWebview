digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.lastOrNull(Lkotlin\/sequences\/Sequence;)Ljava\/lang\/Object;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$lastOrNull' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:java.util.Iterator) = (r3 I:kotlin.sequences.Sequence A[D('$this$lastOrNull' kotlin.sequences.Sequence)]) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:299)\l0x0009: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:300)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0011 \l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|RETURN\l|0x000f: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:301)\l0x0010: RETURN  (r1 I:T) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|0x0011: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:302)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0015|LOOP_START\lLOOP:0: B:19:0x0015\-\>B:21:0x001b\l|0x0015: INVOKE  (r2 I:boolean) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:303)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0019|0x0019: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0020 \l}"];
Node_21 [shape=record,label="{21\:\ 0x001b|LOOP_END\lLOOP:0: B:19:0x0015\-\>B:21:0x001b\l|0x001b: INVOKE  (r1 I:java.lang.Object A[D('last' java.lang.Object)]) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:304)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0020|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0020|RETURN\l|0x0020: RETURN  (r1 I:T A[D('last' java.lang.Object)])  (LINE:305)\l}"];
MethodNode[shape=record,label="{public static final T kotlin.sequences.SequencesKt___SequencesKt.lastOrNull((r3 I:kotlin.sequences.Sequence\<? extends T\> A[D('$this$lastOrNull' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x001b \-\> B:19:0x0015, CROSS_EDGE: B:22:0x0020 \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0020: r0 'iterator' Ljava\/util\/Iterator;\l  0x0015\-0x0020: r1 'last' Ljava\/lang\/Object;\l  \-1 \-0x0020: r3 '$this$lastOrNull' Lkotlin\/sequences\/Sequence;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;)TT;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_19;
Node_23 -> Node_22;
Node_22 -> Node_13;
}

