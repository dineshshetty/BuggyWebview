digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.singleOrNull(Lkotlin\/sequences\/Sequence;)Ljava\/lang\/Object;" {
subgraph cluster_Region_61507031 {
label = "R(2:1|(2:(2:5|(2:(1:7)|(1:8)))|(1:3)))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\ljava.util.Iterator java.util.Iterator r0 = r4.iterator()\l}"];
subgraph cluster_Region_1637134894 {
label = "R(2:(2:5|(2:(1:7)|(1:8)))|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1247490109 {
label = "IF [B:12:0x000e] THEN: R(2:5|(2:(1:7)|(1:8))) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x000e|if (r0.hasNext() == true) goto L5\l}"];
subgraph cluster_Region_939949133 {
label = "R(2:5|(2:(1:7)|(1:8)))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0011|java.lang.Object T r1 = r0.next()\l}"];
subgraph cluster_Region_1542782303 {
label = "R(2:(1:7)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1434776025 {
label = "IF [B:15:0x0019] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0019|if (r0.hasNext() == true) goto L7\l}"];
subgraph cluster_Region_1357531000 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x001b|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_47661699 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x001c|RETURN\l|return r1\l}"];
}
}
}
}
subgraph cluster_Region_345318731 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0010|RETURN\l|return null\l}"];
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final T kotlin.sequences.SequencesKt___SequencesKt.singleOrNull((r4v0 kotlin.sequences.Sequence\<? extends T\> A[D('$this$singleOrNull' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x001b \-\> B:10:?, CROSS_EDGE: B:17:0x001c \-\> B:10:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;)TT;\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_10;
Node_17 -> Node_10;
Node_13 -> Node_10;
Node_9 -> Node_11;
}

