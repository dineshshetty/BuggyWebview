digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.firstOrNull(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$firstOrNull' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r5 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:java.util.Iterator) = (r4 I:kotlin.sequences.Sequence A[D('$this$firstOrNull' kotlin.sequences.Sequence)]) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:179)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000f|LOOP_START\lLOOP:0: B:15:0x000f\-\>B:18:0x0023\l|0x000f: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|0x0013: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0026 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|0x0015: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0019: INVOKE  (r3 I:java.lang.Object) = \l  (r5 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)])\l  (r2 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x001d: CHECK_CAST (r3 I:java.lang.Boolean) = (java.lang.Boolean) (r3 I:??[OBJECT, ARRAY]) \l0x001f: INVOKE  (r3 I:boolean) = (r3 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0023|LOOP_END\lLOOP:0: B:15:0x000f\-\>B:18:0x0023\l|0x0023: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x000f \l}"];
Node_22 [shape=record,label="{22\:\ 0x0025|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0025|RETURN\l|0x0025: RETURN  (r2 I:T A[D('element' java.lang.Object)]) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0026|RETURN\l|0x0026: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:180)\l0x0027: RETURN  (r1 I:T) \l}"];
MethodNode[shape=record,label="{public static final T kotlin.sequences.SequencesKt___SequencesKt.firstOrNull((r4 I:kotlin.sequences.Sequence\<? extends T\> A[D('$this$firstOrNull' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:18:0x0023 \-\> B:15:0x000f, CROSS_EDGE: B:21:0x0027 \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0019\-0x0026: r2 'element' Ljava\/lang\/Object;\l  0x000b\-0x0027: r0 '$i$f$firstOrNull' I\l  \-1 \-0x0027: r4 '$this$firstOrNull' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x0027: r5 'predicate' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)TT;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_15;
Node_18 -> Node_22[style=dashed];
Node_22 -> Node_19;
Node_19 -> Node_13;
Node_23 -> Node_20;
Node_20 -> Node_13;
}

