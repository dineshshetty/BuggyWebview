digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.minOfOrNull(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Double;" {
subgraph cluster_Region_988917442 {
label = "R(2:1|(2:(3:5|(1:8)|11)|(1:3)))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"selector\")\ljava.util.Iterator java.util.Iterator r0 = r5.iterator()\l}"];
subgraph cluster_Region_74609622 {
label = "R(2:(3:5|(1:8)|11)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_424132165 {
label = "IF [B:16:0x0012] THEN: R(3:5|(1:8)|11) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0012|if (r0.hasNext() == true) goto L5\l}"];
subgraph cluster_Region_1676793765 {
label = "R(3:5|(1:8)|11)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0016|double double r1 = r6.invoke((T) r0.next()).doubleValue()\l}"];
subgraph cluster_LoopRegion_571474365 {
label = "LOOP:0: (1:8)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0028|if (r0.hasNext() != false) goto L8\l}"];
subgraph cluster_Region_354430083 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x002a|LOOP_END\lLOOP:0: B:20:0x0024\-\>B:22:0x002a\l|double double r3 = r6.invoke((T) r0.next()).doubleValue()\ldouble r1 = java.lang.Math.min(r1, r3)\l}"];
}
}
Node_24 [shape=record,label="{24\:\ 0x0041|RETURN\l|return java.lang.Double.valueOf(r1)\l}"];
}
}
subgraph cluster_Region_1680893455 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0014|RETURN\l|return null\l}"];
}
}
}
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0024|LOOP_START\lLOOP:0: B:20:0x0024\-\>B:22:0x002a\lPHI: r1 \l  PHI: (r1v5 'minValue' double) = (r1v4 'minValue' double), (r1v6 'minValue' double) binds: [B:19:0x0016, B:22:0x002a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x003d|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x003d}"];
MethodNode[shape=record,label="{private static final java.lang.Double kotlin.sequences.SequencesKt___SequencesKt.minOfOrNull((r5v0 kotlin.sequences.Sequence\<? extends T\> A[D('$this$minOfOrNull' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'selector' kotlin.jvm.functions.Function1\<? super T, java.lang.Double\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:22:0x002a \-\> B:20:0x0024, CROSS_EDGE: B:24:0x0041 \-\> B:14:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Double;\>;)Ljava\/lang\/Double;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r1v1. Raw type applied. Possible types: T, ? super T\l \-\> Type inference failed for r3v2. Raw type applied. Possible types: T, ? super T\}\l}"];
MethodNode -> Node_13;Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_21 -> Node_25[style=dashed];
Node_22 -> Node_20;
Node_24 -> Node_14;
Node_17 -> Node_14;
Node_13 -> Node_15;
Node_20 -> Node_21;
Node_25 -> Node_23;
Node_23 -> Node_24;
}

