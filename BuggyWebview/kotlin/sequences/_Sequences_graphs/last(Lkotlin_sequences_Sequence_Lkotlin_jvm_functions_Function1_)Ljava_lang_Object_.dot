digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.last(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"predicate\")\lr1 = null\lr2 = false\ljava.util.Iterator r3 = r6.iterator()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|LOOP_START\lLOOP:0: B:20:0x0011\-\>B:31:0x0011\lPHI: r1 r2 \l  PHI: (r1v1 T) = (r1v0 T), (r1v2 T) binds: [B:19:0x0000, B:31:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'found' boolean) = (r2v0 'found' boolean), (r2v2 'found' boolean) binds: [B:19:0x0000, B:31:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|if (r3.hasNext() == false) goto L11\l}"];
Node_22 [shape=record,label="{22\:\ 0x0017|java.lang.Object r4 = r3.next()\l}"];
Node_23 [shape=record,label="{23\:\ 0x0025|if (r7.invoke(r4).booleanValue() == false) goto L10\l}"];
Node_29 [shape=record,label="{29\:\ 0x0027|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0027|r1 = r4\lr2 = true\l}"];
Node_33 [shape=record,label="{33\:\ 0x0011|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0011|LOOP_END\lSYNTHETIC\lLOOP:0: B:20:0x0011\-\>B:31:0x0011\lPHI: r1 r2 \l  PHI: (r1v2 T) = (r1v1 T), (r1v3 T) binds: [B:32:0x0011, B:33:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 'found' boolean) = (r2v1 'found' boolean), (r2v3 'found' boolean) binds: [B:32:0x0011, B:33:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0011|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x002a|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x002a|if (r2 == false) goto L15\l}"];
Node_26 [shape=record,label="{26\:\ 0x002c|RETURN\l|return r1\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x002d}"];
Node_28 [shape=record,label="{28\:\ 0x0034|throw new java.util.NoSuchElementException(\"Sequence contains no element matching the predicate.\")\l}"];
MethodNode[shape=record,label="{public static final T kotlin.sequences.SequencesKt___SequencesKt.last((r6v0 kotlin.sequences.Sequence\<? extends T\> A[D('$this$last' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'predicate' kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x0025 \-\> B:20:0x0011, BACK_EDGE: B:24:0x0027 \-\> B:20:0x0011, CROSS_EDGE: B:28:0x0034 \-\> B:18:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)TT;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r4v2, resolved type: java.lang.Object\}\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_30;
Node_22 -> Node_23;
Node_23 -> Node_29[style=dashed];
Node_23 -> Node_32;
Node_29 -> Node_24;
Node_24 -> Node_33;
Node_33 -> Node_31;
Node_31 -> Node_20;
Node_32 -> Node_31;
Node_30 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_18;
Node_27 -> Node_28;
Node_28 -> Node_18;
}

