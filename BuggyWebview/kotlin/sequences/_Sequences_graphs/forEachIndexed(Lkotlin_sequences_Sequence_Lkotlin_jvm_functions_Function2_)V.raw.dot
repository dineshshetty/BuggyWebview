digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.forEachIndexed(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function2;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$forEachIndexed' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"action\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('action' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1302)\l0x000c: INVOKE  (r2 I:java.util.Iterator) = (r5 I:kotlin.sequences.Sequence A[D('$this$forEachIndexed' kotlin.sequences.Sequence)]) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:1303)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0010|LOOP_START\lLOOP:0: B:16:0x0010\-\>B:21:0x0021\l|0x0010: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0014|0x0014: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x002a \l}"];
Node_18 [shape=record,label="{18\:\ 0x0016|0x0016: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001a: ARITH  (r4 I:int) = (r1 I:int A[D('index' int)]) + (1 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x001c|0x001c: IF  (r1 I:??[int, byte, short, char] A[D('index' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:25:0x0021 \l}"];
Node_20 [shape=record,label="{20\:\ 0x001e|0x001e: INVOKE   type: STATIC call: kotlin.collections.CollectionsKt.throwIndexOverflow():void A[MD:():void (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0021|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0021|LOOP_END\lLOOP:0: B:16:0x0010\-\>B:21:0x0021\l|0x0021: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0025: INVOKE  \l  (r6 I:kotlin.jvm.functions.Function2 A[D('action' kotlin.jvm.functions.Function2)])\l  (r1 I:java.lang.Object)\l  (r3 I:java.lang.Object A[D('item' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x0028: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x002a|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x002a|RETURN\l|0x002a: RETURN    (LINE:1304)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void kotlin.sequences.SequencesKt___SequencesKt.forEachIndexed((r5 I:kotlin.sequences.Sequence\<? extends T\> A[D('$this$forEachIndexed' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super T, kotlin.Unit\> A[D('action' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0021 \-\> B:16:0x0010, CROSS_EDGE: B:19:0x001c \-\> B:21:0x0021\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x001c: r1 'index' I\l  0x001a\-0x002a: r3 'item' Ljava\/lang\/Object;\l  0x001c\-0x002a: r4 'index' I\l  0x000b\-0x002a: r0 '$i$f$forEachIndexed' I\l  0x002a\-0x002a: r1 'index' I\l  \-1 \-0x002a: r5 '$this$forEachIndexed' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x002a: r6 'action' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Integer;\-TT;Lkotlin\/Unit;\>;)V\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_24;
Node_24 -> Node_21;
Node_21 -> Node_16;
Node_25 -> Node_21;
Node_23 -> Node_22;
Node_22 -> Node_14;
}

