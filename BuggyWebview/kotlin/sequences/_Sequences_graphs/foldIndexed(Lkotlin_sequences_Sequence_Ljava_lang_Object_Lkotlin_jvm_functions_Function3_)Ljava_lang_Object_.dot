digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.foldIndexed(Lkotlin\/sequences\/Sequence;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function3;)Ljava\/lang\/Object;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"operation\")\lr1 = 0\lr2 = (R) r7\ljava.util.Iterator r3 = r6.iterator()\l}"];
Node_16 [shape=record,label="{16\:\ 0x0011|LOOP_START\lLOOP:0: B:16:0x0011\-\>B:21:0x0022\lPHI: r1 r2 \l  PHI: (r1v1 'index' int) = (r1v0 'index' int), (r1v3 'index' int) binds: [B:15:0x0000, B:21:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'accumulator' java.lang.Object) = (r2v0 'accumulator' java.lang.Object), (r2v2 'accumulator' java.lang.Object) binds: [B:15:0x0000, B:21:0x0022] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|if (r3.hasNext() == false) goto L10\l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|java.lang.Object r4 = (T) r3.next()\lint r5 = r1 + 1\l}"];
Node_19 [shape=record,label="{19\:\ 0x001d|if (r1 \>= 0) goto L9\l}"];
Node_20 [shape=record,label="{20\:\ 0x001f|kotlin.collections.CollectionsKt.throwIndexOverflow()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0022|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0022|LOOP_END\lLOOP:0: B:16:0x0011\-\>B:21:0x0022\l|java.lang.Object r2 = (R) r8.invoke(java.lang.Integer.valueOf(r1), r2, r4)\lr1 = r5\l}"];
Node_25 [shape=record,label="{25\:\ 0x0022|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x002c|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x002c|RETURN\l|return (R) r2\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final R kotlin.sequences.SequencesKt___SequencesKt.foldIndexed((r6v0 kotlin.sequences.Sequence\<? extends T\> A[D('$this$foldIndexed' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 R A[D('initial' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'operation' kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super R, ? super T, ? extends R\> A[D('operation' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0022 \-\> B:16:0x0011, CROSS_EDGE: B:19:0x001d \-\> B:21:0x0022\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;TR;Lkotlin\/jvm\/functions\/Function3\<\-Ljava\/lang\/Integer;\-TR;\-TT;+TR;\>;)TR;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r4v1. Raw type applied. Possible types: T, ? super T\l \-\> Type inference failed for r2v5. Raw type applied. Possible types: R, ? super R\}\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_24;
Node_24 -> Node_21;
Node_21 -> Node_16;
Node_25 -> Node_21;
Node_23 -> Node_22;
Node_22 -> Node_14;
}

