digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.minByOrNull(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('$this$minByOrNull' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x0007: INVOKE  (r8 I:java.lang.Object A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:java.util.Iterator) = (r7 I:kotlin.sequences.Sequence A[D('$this$minByOrNull' kotlin.sequences.Sequence)]) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:1817)\l0x000f: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:1818)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|0x0013: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0017 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|RETURN\l|0x0015: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0016: RETURN  (r2 I:T) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|0x0017: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:1819)\l0x001b: INVOKE  (r3 I:boolean) = (r1 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:1820)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|0x001f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0022 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|RETURN\l|0x0021: RETURN  (r2 I:T A[D('minElem' java.lang.Object)]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0022|0x0022: INVOKE  (r3 I:java.lang.Object) = \l  (r8 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)])\l  (r2 I:java.lang.Object A[D('minElem' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:1821)\l0x0026: CHECK_CAST (r3 I:java.lang.Comparable) = (java.lang.Comparable) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0028|LOOP_START\lLOOP:0: B:27:0x0028\-\>B:31:0x003e\l|0x0028: INVOKE  (r4 I:java.lang.Object) = (r1 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:1823)\l0x002c: INVOKE  (r5 I:java.lang.Object) = \l  (r8 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)])\l  (r4 I:java.lang.Object A[D('e' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:1824)\l0x0030: CHECK_CAST (r5 I:java.lang.Comparable) = (java.lang.Comparable) (r5 I:??[OBJECT, ARRAY]) \l0x0032: INVOKE  (r6 I:int) = \l  (r3 I:java.lang.Comparable A[D('minValue' java.lang.Comparable)])\l  (r5 I:java.lang.Object A[D('v' java.lang.Comparable)])\l type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)] (LINE:1825)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0036|0x0036: IF  (r6 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:30:0x003a \l}"];
Node_29 [shape=record,label="{29\:\ 0x0038|0x0038: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('minElem' java.lang.Object)]) = (r4 I:??[OBJECT, ARRAY] A[D('e' java.lang.Object)])  (LINE:1826)\l0x0039: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('minValue' java.lang.Comparable)]) = (r5 I:??[OBJECT, ARRAY] A[D('v' java.lang.Comparable)])  (LINE:1827)\l}"];
Node_30 [shape=record,label="{30\:\ 0x003a|0x003a: INVOKE  (r6 I:boolean) = (r1 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:1829)\l}"];
Node_31 [shape=record,label="{31\:\ 0x003e|LOOP_END\lLOOP:0: B:27:0x0028\-\>B:31:0x003e\l|0x003e: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0028 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0040|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0040|RETURN\l|0x0040: RETURN  (r2 I:T A[D('minElem' java.lang.Object)])  (LINE:1830)\l}"];
MethodNode[shape=record,label="{public static final T kotlin.sequences.SequencesKt___SequencesKt.minByOrNull((r7 I:kotlin.sequences.Sequence\<? extends T\> A[D('$this$minByOrNull' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function1\<? super T, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0021 \-\> B:18:?, BACK_EDGE: B:31:0x003e \-\> B:27:0x0028, CROSS_EDGE: B:32:0x0040 \-\> B:18:?, CROSS_EDGE: B:28:0x0036 \-\> B:30:0x003a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002c\-0x0040: r4 'e' Ljava\/lang\/Object;\l  0x0032\-0x0040: r5 'v' Ljava\/lang\/Comparable;\l  0x000b\-0x0040: r0 '$i$f$minByOrNull' I\l  0x000f\-0x0040: r1 'iterator' Ljava\/util\/Iterator;\l  0x001b\-0x0040: r2 'minElem' Ljava\/lang\/Object;\l  0x0028\-0x0040: r3 'minValue' Ljava\/lang\/Comparable;\l  \-1 \-0x0040: r7 '$this$minByOrNull' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x0040: r8 'selector' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R::Ljava\/lang\/Comparable\<\-TR;\>;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)TT;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_18;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_18;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_27;
Node_31 -> Node_33[style=dashed];
Node_33 -> Node_32;
Node_32 -> Node_18;
}

