digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.elementAtOrElse(Lkotlin\/sequences\/Sequence;ILkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$elementAtOrElse' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"defaultValue\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('defaultValue' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|0x000a: IF  (r5 I:??[int, byte, short, char] A[D('index' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:23:0x0015  (LINE:46)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|0x000c: INVOKE  (r0 I:java.lang.Integer) = (r5 I:int A[D('index' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:47)\l0x0010: INVOKE  (r0 I:java.lang.Object) = (r6 I:kotlin.jvm.functions.Function1 A[D('defaultValue' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|RETURN\l|0x0014: RETURN  (r0 I:T) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|0x0015: INVOKE  (r0 I:java.util.Iterator) = (r4 I:kotlin.sequences.Sequence A[D('$this$elementAtOrElse' kotlin.sequences.Sequence)]) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:48)\l0x0019: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:49)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001a|LOOP_START\lLOOP:0: B:24:0x001a\-\>B:29:0x0029\l|0x001a: INVOKE  (r2 I:boolean) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:50)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001e|0x001e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x002b \l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|0x0020: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:51)\l0x0024: ARITH  (r3 I:int) = (r1 I:int A[D('count' int)]) + (1 int)  (LINE:52)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0026|0x0026: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('count' int)])  \-\> B:29:0x0029 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0029|LOOP_END\lLOOP:0: B:24:0x001a\-\>B:29:0x0029\l|0x0029: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('count' int)])  (LINE:52)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0028|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0028|RETURN\l|0x0028: RETURN  (r2 I:T A[D('element' java.lang.Object)])  (LINE:53)\l}"];
Node_33 [shape=record,label="{33\:\ 0x002b|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x002b|0x002b: INVOKE  (r2 I:java.lang.Integer) = (r5 I:int A[D('index' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:55)\l0x002f: INVOKE  (r2 I:java.lang.Object) = (r6 I:kotlin.jvm.functions.Function1 A[D('defaultValue' kotlin.jvm.functions.Function1)]), (r2 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0033|RETURN\l|0x0033: RETURN  (r2 I:T) \l}"];
MethodNode[shape=record,label="{public static final T kotlin.sequences.SequencesKt___SequencesKt.elementAtOrElse((r4 I:kotlin.sequences.Sequence\<? extends T\> A[D('$this$elementAtOrElse' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function1\<? super java.lang.Integer, ? extends T\> A[D('defaultValue' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0028 \-\> B:18:?, BACK_EDGE: B:29:0x0029 \-\> B:24:0x001a, CROSS_EDGE: B:31:0x0033 \-\> B:18:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x0026: r1 'count' I\l  0x0024\-0x002b: r2 'element' Ljava\/lang\/Object;\l  0x0026\-0x002b: r3 'count' I\l  0x0019\-0x0033: r0 'iterator' Ljava\/util\/Iterator;\l  0x002b\-0x0033: r1 'count' I\l  \-1 \-0x0033: r4 '$this$elementAtOrElse' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x0033: r5 'index' I\l  \-1 \-0x0033: r6 'defaultValue' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;ILkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Integer;+TT;\>;)TT;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_18;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_33;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_32[style=dashed];
Node_29 -> Node_24;
Node_32 -> Node_28;
Node_28 -> Node_18;
Node_33 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_18;
}

