digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.plus(Lkotlin\/sequences\/Sequence;Lkotlin\/sequences\/Sequence;)Lkotlin\/sequences\/Sequence;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$plus' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('elements' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:2752)\l0x000b: NEW_ARRAY  (r0 I:kotlin.sequences.Sequence[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: kotlin.sequences.Sequence[] \l0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: APUT  \l  (r0 I:??[OBJECT, ARRAY][])\l  (r1 I:??[int, short, byte, char])\l  (r2 I:??[OBJECT, ARRAY] A[D('$this$plus' kotlin.sequences.Sequence)])\l \l0x0010: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0011: APUT  \l  (r0 I:??[OBJECT, ARRAY][])\l  (r1 I:??[int, short, byte, char])\l  (r3 I:??[OBJECT, ARRAY] A[D('elements' kotlin.sequences.Sequence)])\l \l0x0013: INVOKE  (r0 I:kotlin.sequences.Sequence) = (r0 I:java.lang.Object[]) type: STATIC call: kotlin.sequences.SequencesKt.sequenceOf(java.lang.Object[]):kotlin.sequences.Sequence A[MD:\<T\>:(T[]):kotlin.sequences.Sequence\<T\> VARARG (m)]\l0x0017: INVOKE  (r0 I:kotlin.sequences.Sequence) = (r0 I:kotlin.sequences.Sequence) type: STATIC call: kotlin.sequences.SequencesKt.flatten(kotlin.sequences.Sequence):kotlin.sequences.Sequence A[MD:\<T\>:(kotlin.sequences.Sequence\<? extends kotlin.sequences.Sequence\<? extends T\>\>):kotlin.sequences.Sequence\<T\> (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|RETURN\l|0x001b: RETURN  (r0 I:kotlin.sequences.Sequence\<T\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<T\> kotlin.sequences.SequencesKt___SequencesKt.plus((r2 I:kotlin.sequences.Sequence\<? extends T\> A[D('$this$plus' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.sequences.Sequence\<? extends T\> A[D('elements' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001b: r2 '$this$plus' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x001b: r3 'elements' Lkotlin\/sequences\/Sequence;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/sequences\/Sequence\<+TT;\>;)Lkotlin\/sequences\/Sequence\<TT;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

