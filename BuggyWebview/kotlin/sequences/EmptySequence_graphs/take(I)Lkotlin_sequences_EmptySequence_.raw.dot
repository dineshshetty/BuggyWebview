digraph "CFG forkotlin.sequences.EmptySequence.take(I)Lkotlin\/sequences\/EmptySequence;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:kotlin.sequences.EmptySequence) =  kotlin.sequences.EmptySequence.INSTANCE kotlin.sequences.EmptySequence  (LINE:47)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0002|RETURN\l|0x0002: RETURN  (r0 I:kotlin.sequences.EmptySequence) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlin.sequences.EmptySequence kotlin.sequences.EmptySequence.take((r1 'this' I:kotlin.sequences.EmptySequence A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('n' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0002: r2 'n' I\lREPLACED_BY: kotlin.sequences.EmptySequence.take(int):kotlin.sequences.Sequence\lMETHOD_OVERRIDE: [kotlin.sequences.DropTakeSequence.take(int):kotlin.sequences.Sequence\<T\>]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

