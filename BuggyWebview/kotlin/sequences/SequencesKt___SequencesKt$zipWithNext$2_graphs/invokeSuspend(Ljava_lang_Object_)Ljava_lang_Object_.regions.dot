digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1159586999 {
label = "R(4:1|2|(2:10|(2:(1:14)|(1:12)))|17) | DECL_VAR: kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2 null, java.util.Iterator iterator, kotlin.sequences.SequenceScope $this$result, java.lang.Object current\l";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0000|java.lang.Object java.lang.Object r0 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_1259506734 {
label = "Switch: 3
 case 0 -> R(2:18|(2:22|1)(1:21))
 case 1 -> R(2:6|1)
 case default -> R(1:4)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0006|switch(r10.label) \{\l    case 0: goto L18;\l    case 1: goto L6;\l    default: goto L3;\l\}\l}"];
subgraph cluster_Region_720960483 {
label = "R(2:18|(2:22|1)(1:21))";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0020|kotlin.ResultKt.throwOnFailure(r11)\lr1 = r10\lkotlin.sequences.SequenceScope kotlin.sequences.SequenceScope r2 = (kotlin.sequences.SequenceScope) r1.L$0\ljava.util.Iterator r3 = r1.$this_zipWithNext.iterator()\l}"];
subgraph cluster_IfRegion_925651176 {
label = "IF [B:32:0x0032] THEN: R(2:22|1) ELSE: R(1:21)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0032|if (r3.hasNext() == true) goto L22\l}"];
subgraph cluster_Region_295779526 {
label = "R(2:22|1)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0037|r4 = r2\lr2 = r3.next()\l}"];
Node_InsnContainer_1157006755 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_61483177 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0036|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
}
}
subgraph cluster_Region_6986327 {
label = "R(2:6|1)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0011|r1 = r10\ljava.lang.Object r2 = r1.L$2\ljava.util.Iterator r3 = (java.util.Iterator) r1.L$1\lkotlin.sequences.SequenceScope r4 = (kotlin.sequences.SequenceScope) r1.L$0\lkotlin.ResultKt.throwOnFailure(r11)\l}"];
Node_InsnContainer_1543943950 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_167249782 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0010|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
}
}
subgraph cluster_LoopRegion_2035499127 {
label = "LOOP:0: (2:10|(2:(1:14)|(1:12)))";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0042|if (r3.hasNext() != false) goto L10\l}"];
subgraph cluster_Region_1579838700 {
label = "R(2:10|(2:(1:14)|(1:12)))";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0044|java.lang.Object java.lang.Object r5 = r3.next()\lr1.L$0 = r4\lr1.L$1 = r3\lr1.L$2 = r5\lr1.label = 1\l}"];
subgraph cluster_Region_728678548 {
label = "R(2:(1:14)|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2126376176 {
label = "IF [B:39:0x005e] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x005e|if (r4.yield(r1.$transform.invoke(r2, r5), r1) == r0) goto L13\l}"];
subgraph cluster_Region_2042325761 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0060|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_870362768 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0061|LOOP_END\lLOOP:0: B:36:0x003e\-\>B:41:0x0061\l|r2 = r5\l}"];
}
}
}
}
Node_44 [shape=record,label="{44\:\ 0x0066|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0009}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x003e|SYNTHETIC\lPHI: r1 r2 r3 r4 \l  PHI: (r1v2 kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2) = (r1v1 kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2), (r1v3 kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2) binds: [B:35:0x0037, B:30:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 'current' java.lang.Object) = (r2v2 'current' java.lang.Object), (r2v7 'current' java.lang.Object) binds: [B:35:0x0037, B:30:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 'iterator' java.util.Iterator) = (r3v1 'iterator' java.util.Iterator), (r3v4 'iterator' java.util.Iterator) binds: [B:35:0x0037, B:30:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 '$this$result' kotlin.sequences.SequenceScope) = (r4v2 '$this$result' kotlin.sequences.SequenceScope), (r4v5 '$this$result' kotlin.sequences.SequenceScope) binds: [B:35:0x0037, B:30:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x003e|LOOP_START\lLOOP:0: B:36:0x003e\-\>B:41:0x0061\lPHI: r2 \l  PHI: (r2v4 'current' java.lang.Object) = (r2v3 'current' java.lang.Object), (r2v6 'current' java.lang.Object) binds: [B:47:0x003e, B:41:0x0061] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0060|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0064|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0064}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0034}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2.invokeSuspend((r10v0 'this' kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2 A[IMMUTABLE_TYPE, THIS]), (r11v0 '$result' java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:40:0x0060 \-\> B:25:?, BACK_EDGE: B:41:0x0061 \-\> B:36:0x003e, CROSS_EDGE: B:44:0x0066 \-\> B:25:?, CROSS_EDGE: B:34:0x0036 \-\> B:25:?, CROSS_EDGE: B:35:0x0037 \-\> B:36:0x003e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_24;Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_30;
Node_27 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_35 -> Node_47;
Node_34 -> Node_25;
Node_30 -> Node_47;
Node_29 -> Node_25;
Node_37 -> Node_38;
Node_37 -> Node_45[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_41[style=dashed];
Node_39 -> Node_46;
Node_40 -> Node_25;
Node_41 -> Node_36;
Node_44 -> Node_25;
Node_24 -> Node_26;
Node_28 -> Node_29;
Node_47 -> Node_36;
Node_36 -> Node_37;
Node_46 -> Node_40;
Node_45 -> Node_43;
Node_43 -> Node_44;
Node_33 -> Node_34;
}

