digraph "CFG forkotlin.sequences.SequencesKt__SequencesKt$shuffled$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r9 I:kotlin.sequences.SequencesKt__SequencesKt$shuffled$1) kotlin.sequences.SequencesKt__SequencesKt$shuffled$1.label int  (LINE:139)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:7:0x001e\l case 1: goto B:6:0x0011\l default: goto B:4:0x0009 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: NEW_INSTANCE  (r10 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:147)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r10 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY])  (LINE:139)\l0x0012: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$shuffled$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$shuffled$1)])\l kotlin.sequences.SequencesKt__SequencesKt$shuffled$1.L$1 java.lang.Object \l0x0014: CHECK_CAST (r2 I:java.util.List) = (java.util.List) (r2 I:??[OBJECT, ARRAY]) \l0x0016: IGET  (r3 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$shuffled$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$shuffled$1)])\l kotlin.sequences.SequencesKt__SequencesKt$shuffled$1.L$0 java.lang.Object \l0x0018: CHECK_CAST (r3 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r3 I:??[OBJECT, ARRAY]) \l0x001a: INVOKE  (r10 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x002f|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|LOOP_START\lLOOP:0: B:8:0x002f\-\>B:14:0x0062\l|0x002f: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('buffer' java.util.List)])  (LINE:141)\l0x0030: CHECK_CAST (r4 I:java.util.Collection) = (java.util.Collection) (r4 I:??[OBJECT, ARRAY]) \l0x0032: INVOKE  (r4 I:boolean) = (r4 I:java.util.Collection) type: INTERFACE call: java.util.Collection.isEmpty():boolean A[MD:():boolean (c)]\l0x0036: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0037: ARITH  (r4 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) ^ (r5 I:??[int, boolean, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0066 \l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|0x003a: IGET  (r4 I:kotlin.random.Random) = \l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$shuffled$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$shuffled$1)])\l kotlin.sequences.SequencesKt__SequencesKt$shuffled$1.$random kotlin.random.Random  (LINE:142)\l0x003c: INVOKE  (r6 I:int) = (r2 I:java.util.List A[D('buffer' java.util.List)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l0x0040: INVOKE  (r4 I:int) = (r4 I:kotlin.random.Random), (r6 I:int) type: VIRTUAL call: kotlin.random.Random.nextInt(int):int A[MD:(int):int (m)]\l0x0044: INVOKE  (r6 I:java.lang.Object) = (r2 I:java.util.List A[D('buffer' java.util.List)]) type: STATIC call: kotlin.collections.CollectionsKt.removeLast(java.util.List):java.lang.Object A[MD:\<T\>:(java.util.List\<T\>):T (m)] (LINE:143)\l0x0048: INVOKE  (r7 I:int) = (r2 I:java.util.List A[D('buffer' java.util.List)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:144)\l}"];
Node_11 [shape=record,label="{11\:\ 0x004c|0x004c: IF  (r4 I:??[int, byte, short, char] A[D('j' int)]) \>= (r7 I:??[int, byte, short, char])  \-\> B:13:0x0054 \l}"];
Node_12 [shape=record,label="{12\:\ 0x004e|0x004e: INVOKE  (r7 I:java.lang.Object) = \l  (r2 I:java.util.List A[D('buffer' java.util.List)])\l  (r4 I:int A[D('j' int)])\l  (r6 I:java.lang.Object A[D('last' java.lang.Object)])\l type: INTERFACE call: java.util.List.set(int, java.lang.Object):java.lang.Object A[MD:(int, E):E (c)]\l0x0052: MOVE  (r6 I:??[OBJECT, ARRAY] A[D('last' java.lang.Object)]) = (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0054|0x0054: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('j' int)]) = (r6 I:??[OBJECT, ARRAY] A[D('last' java.lang.Object)]) \l0x0055: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.sequences.SequencesKt__SequencesKt$shuffled$1)])  (LINE:145)\l0x0056: CHECK_CAST (r6 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r6 I:??[OBJECT, ARRAY]) \l0x0058: IPUT  \l  (r3 I:java.lang.Object A[D('$this$sequence' kotlin.sequences.SequenceScope)])\l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$shuffled$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$shuffled$1)])\l kotlin.sequences.SequencesKt__SequencesKt$shuffled$1.L$0 java.lang.Object \l0x005a: IPUT  \l  (r2 I:java.lang.Object A[D('buffer' java.util.List)])\l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$shuffled$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$shuffled$1)])\l kotlin.sequences.SequencesKt__SequencesKt$shuffled$1.L$1 java.lang.Object \l0x005c: IPUT  \l  (r5 I:int)\l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$shuffled$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$shuffled$1)])\l kotlin.sequences.SequencesKt__SequencesKt$shuffled$1.label int \l0x005e: INVOKE  (r4 I:java.lang.Object A[D('value' java.lang.Object)]) = \l  (r3 I:kotlin.sequences.SequenceScope A[D('$this$sequence' kotlin.sequences.SequenceScope)])\l  (r4 I:java.lang.Object A[D('value' java.lang.Object)])\l  (r6 I:kotlin.coroutines.Continuation)\l type: VIRTUAL call: kotlin.sequences.SequenceScope.yield(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0062|LOOP_END\lLOOP:0: B:8:0x002f\-\>B:14:0x0062\l|0x0062: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' java.lang.Object)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002f \l}"];
Node_19 [shape=record,label="{19\:\ 0x0064|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0064|RETURN\l|0x0064: RETURN  (r0 I:java.lang.Object)  (LINE:139)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0066|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0066|0x0066: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:147)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0068|RETURN\l|0x0068: RETURN  (r0 I:java.lang.Object) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: INVOKE  (r10 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0021: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY]) \l0x0022: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$shuffled$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$shuffled$1)])\l kotlin.sequences.SequencesKt__SequencesKt$shuffled$1.L$0 java.lang.Object \l0x0024: CHECK_CAST (r2 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r2 I:??[OBJECT, ARRAY]) \l0x0026: IGET  (r3 I:kotlin.sequences.Sequence\<T\>) = \l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$shuffled$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$shuffled$1)])\l kotlin.sequences.SequencesKt__SequencesKt$shuffled$1.$this_shuffled kotlin.sequences.Sequence  (LINE:140)\l0x0028: INVOKE  (r3 I:java.util.List) = (r3 I:kotlin.sequences.Sequence) type: STATIC call: kotlin.sequences.SequencesKt.toMutableList(kotlin.sequences.Sequence):java.util.List A[MD:\<T\>:(kotlin.sequences.Sequence\<? extends T\>):java.util.List\<T\> (m)]\l0x002c: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x002d: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$sequence' kotlin.sequences.SequenceScope)]) \l0x002e: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('$this$sequence' kotlin.sequences.SequenceScope)]) = (r8 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlin.sequences.SequencesKt__SequencesKt$shuffled$1.invokeSuspend((r9 'this' I:kotlin.sequences.SequencesKt__SequencesKt$shuffled$1 A[IMMUTABLE_TYPE, THIS]), (r10 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0064 \-\> B:1:?, BACK_EDGE: B:14:0x0062 \-\> B:8:0x002f, CROSS_EDGE: B:11:0x004c \-\> B:13:0x0054, CROSS_EDGE: B:18:0x0068 \-\> B:1:?, CROSS_EDGE: B:7:0x001e \-\> B:8:0x002f\lDebug Info:\l  0x0012\-0x001e: r1 'this' Lkotlin\/sequences\/SequencesKt__SequencesKt$shuffled$1;\l  0x0016\-0x001e: r2 'buffer' Ljava\/util\/List;\l  0x001a\-0x001e: r3 '$this$sequence' Lkotlin\/sequences\/SequenceScope;\l  0x0012\-0x001e: r10 '$result' Ljava\/lang\/Object;\l  0x0026\-0x002f: r2 '$this$sequence' Lkotlin\/sequences\/SequenceScope;\l  0x0044\-0x0054: r4 'j' I\l  0x0048\-0x0054: r6 'last' Ljava\/lang\/Object;\l  0x0055\-0x0062: r4 'value' Ljava\/lang\/Object;\l  0x0022\-0x0071: r1 'this' Lkotlin\/sequences\/SequencesKt__SequencesKt$shuffled$1;\l  0x002f\-0x0071: r2 'buffer' Ljava\/util\/List;\l  0x002f\-0x0071: r3 '$this$sequence' Lkotlin\/sequences\/SequenceScope;\l  0x0022\-0x0071: r10 '$result' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_21;
Node_21 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_20;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_8;
Node_14 -> Node_19[style=dashed];
Node_19 -> Node_15;
Node_15 -> Node_1;
Node_20 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_7 -> Node_21;
}

