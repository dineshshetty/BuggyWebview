digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1426947830 {
label = "R(2:1|2) | DECL_VAR: kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 null, kotlin.sequences.SequenceScope $this$sequence, java.util.Iterator iterator, java.lang.Object accumulator\l";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0000|java.lang.Object java.lang.Object r0 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_299216152 {
label = "Switch: 4
 case 0 -> R(3:18|(3:20|(1:22)|(2:10|(1:13)))|16)
 case 1 -> R(3:17|(0)|16)
 case 2 -> R(3:6|(0)|16)
 case default -> R(1:4)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0006|switch(r7.label) \{\l    case 0: goto L18;\l    case 1: goto L17;\l    case 2: goto L6;\l    default: goto L3;\l\}\l}"];
subgraph cluster_Region_740612361 {
label = "R(3:18|(3:20|(1:22)|(2:10|(1:13)))|16)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x002f|kotlin.ResultKt.throwOnFailure(r8)\lr1 = r7\lkotlin.sequences.SequenceScope r4 = (kotlin.sequences.SequenceScope) r1.L$0\ljava.util.Iterator r3 = r1.$this_runningReduce.iterator()\l}"];
subgraph cluster_IfRegion_1170685872 {
label = "IF [B:34:0x0042] THEN: R(3:20|(1:22)|(2:10|(1:13))) ELSE: null";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0042|if (r3.hasNext() != false) goto L20\l}"];
subgraph cluster_Region_517378113 {
label = "R(3:20|(1:22)|(2:10|(1:13)))";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0044|java.lang.Object r2 = r3.next()\lr1.L$0 = r4\lr1.L$1 = r3\lr1.L$2 = r2\lr1.label = 1\l}"];
subgraph cluster_IfRegion_1332166311 {
label = "IF [B:36:0x0058] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0058|if (r4.yield(r2, r1) == r0) goto L22\l}"];
subgraph cluster_Region_664882198 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x005a|RETURN\l|return r0\l}"];
}
}
subgraph cluster_LoopRegion_525123809 {
label = "LOOP:0: (2:10|(1:13))";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0060|if (r3.hasNext() != false) goto L10\l}"];
subgraph cluster_Region_338750979 {
label = "R(2:10|(1:13))";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0062|java.lang.Object r2 = r1.$operation.invoke(r2, r3.next())\lr1.L$0 = r4\lr1.L$1 = r3\lr1.L$2 = r2\lr1.label = 2\l}"];
subgraph cluster_IfRegion_1686400600 {
label = "IF [B:42:0x007c] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x007c|LOOP_END\lLOOP:0: B:39:0x005c\-\>B:42:0x007c\l|if (r4.yield(r2, r1) == r0) goto L12\l}"];
subgraph cluster_Region_1522550512 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x007e|RETURN\l|return r0\l}"];
}
}
}
}
}
}
Node_46 [shape=record,label="{46\:\ 0x0082|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
subgraph cluster_Region_21553511 {
label = "R(3:17|(0)|16)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0020|r1 = r7\ljava.lang.Object r2 = r1.L$2\ljava.util.Iterator r3 = (java.util.Iterator) r1.L$1\lkotlin.sequences.SequenceScope r4 = (kotlin.sequences.SequenceScope) r1.L$0\lkotlin.ResultKt.throwOnFailure(r8)\l}"];
subgraph cluster_LoopRegion_1360679774 {
label = "LOOP:0: (0)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0060|if (r3.hasNext() != false) goto L10\l}"];
subgraph cluster_Region_1830525192 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_46 [shape=record,label="{46\:\ 0x0082|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
subgraph cluster_Region_1182378424 {
label = "R(3:6|(0)|16)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0011|r1 = r7\ljava.lang.Object r2 = r1.L$2\ljava.util.Iterator r3 = (java.util.Iterator) r1.L$1\lkotlin.sequences.SequenceScope r4 = (kotlin.sequences.SequenceScope) r1.L$0\lkotlin.ResultKt.throwOnFailure(r8)\l}"];
subgraph cluster_LoopRegion_291312036 {
label = "LOOP:0: (0)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0060|if (r3.hasNext() != false) goto L10\l}"];
subgraph cluster_Region_1752141990 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_46 [shape=record,label="{46\:\ 0x0082|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
subgraph cluster_Region_1810677334 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0010|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
}
}
}
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0009}"];
Node_26 [shape=record,color=red,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x005c|SYNTHETIC\lPHI: r1 r2 r3 r4 \l  PHI: (r1v3 kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1) = (r1v1 kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1), (r1v2 kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1), (r1v4 kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1) binds: [B:36:0x0058, B:32:0x0020, B:31:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v5 'accumulator' java.lang.Object) = (r2v3 'accumulator' java.lang.Object), (r2v4 'accumulator' java.lang.Object), (r2v8 'accumulator' java.lang.Object) binds: [B:36:0x0058, B:32:0x0020, B:31:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v3 'iterator' java.util.Iterator) = (r3v0 'iterator' java.util.Iterator), (r3v2 'iterator' java.util.Iterator), (r3v5 'iterator' java.util.Iterator) binds: [B:36:0x0058, B:32:0x0020, B:31:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v4 '$this$sequence' kotlin.sequences.SequenceScope) = (r4v1 '$this$sequence' kotlin.sequences.SequenceScope), (r4v3 '$this$sequence' kotlin.sequences.SequenceScope), (r4v6 '$this$sequence' kotlin.sequences.SequenceScope) binds: [B:36:0x0058, B:32:0x0020, B:31:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x005c|LOOP_START\lLOOP:0: B:39:0x005c\-\>B:42:0x007c\lPHI: r2 \l  PHI: (r2v6 'accumulator' java.lang.Object) = (r2v5 'accumulator' java.lang.Object), (r2v7 'accumulator' java.lang.Object) binds: [B:49:0x005c, B:42:0x007c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x007e|SYNTHETIC\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0080|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0080}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.invokeSuspend((r7v0 'this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[IMMUTABLE_TYPE, THIS]), (r8v0 '$result' java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:43:0x007e \-\> B:26:?, BACK_EDGE: B:42:0x007c \-\> B:39:0x005c, CROSS_EDGE: B:46:0x0082 \-\> B:26:?, CROSS_EDGE: B:32:0x0020 \-\> B:39:0x005c, CROSS_EDGE: B:37:0x005a \-\> B:26:?, CROSS_EDGE: B:36:0x0058 \-\> B:39:0x005c, CROSS_EDGE: B:34:0x0042 \-\> B:45:0x0080\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Removed duplicated region for block: B:41:0x0062 \l \-\> Removed duplicated region for block: B:41:0x0062 \l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [2340=4]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_25;Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_31;
Node_28 -> Node_32;
Node_28 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_34 -> Node_45[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_49[style=dashed];
Node_37 -> Node_26;
Node_40 -> Node_41;
Node_40 -> Node_47[style=dashed];
Node_41 -> Node_42;
Node_42 -> Node_39[style=dashed];
Node_42 -> Node_48;
Node_43 -> Node_26;
Node_46 -> Node_26;
Node_32 -> Node_49;
Node_40 -> Node_41;
Node_40 -> Node_47[style=dashed];
Node_46 -> Node_26;
Node_31 -> Node_49;
Node_40 -> Node_41;
Node_40 -> Node_47[style=dashed];
Node_46 -> Node_26;
Node_30 -> Node_26;
Node_25 -> Node_27;
Node_29 -> Node_30;
Node_49 -> Node_39;
Node_39 -> Node_40;
Node_48 -> Node_43;
Node_47 -> Node_45;
Node_45 -> Node_46;
}

