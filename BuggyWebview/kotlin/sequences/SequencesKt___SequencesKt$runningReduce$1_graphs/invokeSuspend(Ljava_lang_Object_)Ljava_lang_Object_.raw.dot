digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r7 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1) kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.label int  (LINE:2340)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:33:0x002f\l case 1: goto B:32:0x0020\l case 2: goto B:31:0x0011\l default: goto B:29:0x0009 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0009|0x0009: NEW_INSTANCE  (r8 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:2350)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r8 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0010|0x0010: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0011|0x0011: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY])  (LINE:2340)\l0x0012: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.L$2 java.lang.Object \l0x0014: IGET  (r3 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.L$1 java.lang.Object \l0x0016: CHECK_CAST (r3 I:java.util.Iterator) = (java.util.Iterator) (r3 I:??[OBJECT, ARRAY]) \l0x0018: IGET  (r4 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.L$0 java.lang.Object \l0x001a: CHECK_CAST (r4 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r4 I:??[OBJECT, ARRAY]) \l0x001c: INVOKE  (r8 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x005c|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x005c|LOOP_START\lLOOP:0: B:39:0x005c\-\>B:42:0x007c\l|0x005c: INVOKE  (r5 I:boolean) = (r3 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0060|0x0060: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0080 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0062|0x0062: IGET  (r5 I:kotlin.jvm.functions.Function2\<S, T, S\>) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.$operation kotlin.jvm.functions.Function2  (LINE:2346)\l0x0064: INVOKE  (r6 I:java.lang.Object) = (r3 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0068: INVOKE  (r2 I:java.lang.Object A[D('accumulator' java.lang.Object)]) = \l  (r5 I:kotlin.jvm.functions.Function2)\l  (r2 I:java.lang.Object A[D('accumulator' java.lang.Object)])\l  (r6 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x006c: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])  (LINE:2347)\l0x006d: CHECK_CAST (r5 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r5 I:??[OBJECT, ARRAY]) \l0x006f: IPUT  \l  (r4 I:java.lang.Object A[D('$this$sequence' kotlin.sequences.SequenceScope)])\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.L$0 java.lang.Object \l0x0071: IPUT  \l  (r3 I:java.lang.Object A[D('iterator' java.util.Iterator)])\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.L$1 java.lang.Object \l0x0073: IPUT  \l  (r2 I:java.lang.Object A[D('accumulator' java.lang.Object)])\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.L$2 java.lang.Object \l0x0075: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0076: IPUT  \l  (r6 I:int)\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.label int \l0x0078: INVOKE  (r5 I:java.lang.Object) = \l  (r4 I:kotlin.sequences.SequenceScope A[D('$this$sequence' kotlin.sequences.SequenceScope)])\l  (r2 I:java.lang.Object A[D('accumulator' java.lang.Object)])\l  (r5 I:kotlin.coroutines.Continuation)\l type: VIRTUAL call: kotlin.sequences.SequenceScope.yield(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x007c|LOOP_END\lLOOP:0: B:39:0x005c\-\>B:42:0x007c\l|0x007c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x005c \l}"];
Node_48 [shape=record,label="{48\:\ 0x007e|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x007e|RETURN\l|0x007e: RETURN  (r0 I:java.lang.Object)  (LINE:2340)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0080|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0080|0x0080: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:2350)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0082|RETURN\l|0x0082: RETURN  (r0 I:java.lang.Object) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0020|0x0020: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)]) = (r7 I:??[OBJECT, ARRAY]) \l0x0021: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.L$2 java.lang.Object \l0x0023: IGET  (r3 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.L$1 java.lang.Object \l0x0025: CHECK_CAST (r3 I:java.util.Iterator) = (java.util.Iterator) (r3 I:??[OBJECT, ARRAY]) \l0x0027: IGET  (r4 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.L$0 java.lang.Object \l0x0029: CHECK_CAST (r4 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r4 I:??[OBJECT, ARRAY]) \l0x002b: INVOKE  (r8 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x002f|0x002f: INVOKE  (r8 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0032: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0033: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.L$0 java.lang.Object \l0x0035: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x0036: CHECK_CAST (r4 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r4 I:??[OBJECT, ARRAY]) \l0x0038: IGET  (r2 I:kotlin.sequences.Sequence\<T\>) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.$this_runningReduce kotlin.sequences.Sequence  (LINE:2341)\l0x003a: INVOKE  (r3 I:java.util.Iterator) = (r2 I:kotlin.sequences.Sequence) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)]\l0x003e: INVOKE  (r2 I:boolean) = (r3 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:2342)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0042|0x0042: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0080 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0044|0x0044: INVOKE  (r2 I:java.lang.Object) = (r3 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:2343)\l0x0048: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])  (LINE:2344)\l0x0049: CHECK_CAST (r5 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r5 I:??[OBJECT, ARRAY]) \l0x004b: IPUT  \l  (r4 I:java.lang.Object A[D('$this$sequence' kotlin.sequences.SequenceScope)])\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.L$0 java.lang.Object \l0x004d: IPUT  \l  (r3 I:java.lang.Object A[D('iterator' java.util.Iterator)])\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.L$1 java.lang.Object \l0x004f: IPUT  \l  (r2 I:java.lang.Object A[D('accumulator' java.lang.Object)])\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.L$2 java.lang.Object \l0x0051: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0052: IPUT  \l  (r6 I:int)\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.label int \l0x0054: INVOKE  (r5 I:java.lang.Object) = \l  (r4 I:kotlin.sequences.SequenceScope A[D('$this$sequence' kotlin.sequences.SequenceScope)])\l  (r2 I:java.lang.Object A[D('accumulator' java.lang.Object)])\l  (r5 I:kotlin.coroutines.Continuation)\l type: VIRTUAL call: kotlin.sequences.SequenceScope.yield(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0058|0x0058: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x005c \l}"];
Node_37 [shape=record,label="{37\:\ 0x005a|RETURN\l|0x005a: RETURN  (r0 I:java.lang.Object)  (LINE:2340)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1.invokeSuspend((r7 'this' I:kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:43:0x007e \-\> B:26:?, BACK_EDGE: B:42:0x007c \-\> B:39:0x005c, CROSS_EDGE: B:46:0x0082 \-\> B:26:?, CROSS_EDGE: B:32:0x0020 \-\> B:39:0x005c, CROSS_EDGE: B:37:0x005a \-\> B:26:?, CROSS_EDGE: B:36:0x0058 \-\> B:39:0x005c, CROSS_EDGE: B:34:0x0042 \-\> B:45:0x0080\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0020: r1 'this' Lkotlin\/sequences\/SequencesKt___SequencesKt$runningReduce$1;\l  0x0014\-0x0020: r2 'accumulator' Ljava\/lang\/Object;\l  0x0018\-0x0020: r3 'iterator' Ljava\/util\/Iterator;\l  0x001c\-0x0020: r4 '$this$sequence' Lkotlin\/sequences\/SequenceScope;\l  0x0012\-0x0020: r8 '$result' Ljava\/lang\/Object;\l  0x0021\-0x002f: r1 'this' Lkotlin\/sequences\/SequencesKt___SequencesKt$runningReduce$1;\l  0x0023\-0x002f: r2 'accumulator' Ljava\/lang\/Object;\l  0x0027\-0x002f: r3 'iterator' Ljava\/util\/Iterator;\l  0x002b\-0x002f: r4 '$this$sequence' Lkotlin\/sequences\/SequenceScope;\l  0x0021\-0x002f: r8 '$result' Ljava\/lang\/Object;\l  0x0048\-0x0080: r2 'accumulator' Ljava\/lang\/Object;\l  0x003e\-0x0080: r3 'iterator' Ljava\/util\/Iterator;\l  0x0038\-0x0080: r4 '$this$sequence' Lkotlin\/sequences\/SequenceScope;\l  0x0033\-0x008d: r1 'this' Lkotlin\/sequences\/SequencesKt___SequencesKt$runningReduce$1;\l  0x0033\-0x008d: r8 '$result' Ljava\/lang\/Object;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [2340=4]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_31;
Node_28 -> Node_32;
Node_28 -> Node_33;
Node_29 -> Node_30;
Node_30 -> Node_26;
Node_31 -> Node_49;
Node_49 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_47;
Node_41 -> Node_42;
Node_42 -> Node_39;
Node_42 -> Node_48[style=dashed];
Node_48 -> Node_43;
Node_43 -> Node_26;
Node_47 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_26;
Node_32 -> Node_49;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_45;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_49;
Node_37 -> Node_26;
}

