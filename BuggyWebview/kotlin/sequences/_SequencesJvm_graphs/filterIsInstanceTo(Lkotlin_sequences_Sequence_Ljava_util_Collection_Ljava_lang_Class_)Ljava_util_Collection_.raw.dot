digraph "CFG forkotlin.sequences.SequencesKt___SequencesJvmKt.filterIsInstanceTo(Lkotlin\/sequences\/Sequence;Ljava\/util\/Collection;Ljava\/lang\/Class;)Ljava\/util\/Collection;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$filterIsInstanceTo' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r4 I:java.lang.Object A[D('destination' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"klass\" \l0x000c: INVOKE  (r5 I:java.lang.Object A[D('klass' java.lang.Class)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: INVOKE  (r0 I:java.util.Iterator) = (r3 I:kotlin.sequences.Sequence A[D('$this$filterIsInstanceTo' kotlin.sequences.Sequence)]) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:38)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|LOOP_START\lLOOP:0: B:3:0x0013\-\>B:11:0x0013\l|0x0013: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0027 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001d: INVOKE  (r2 I:boolean) = (r5 I:java.lang.Class A[D('klass' java.lang.Class)]), (r1 I:java.lang.Object A[D('element' java.lang.Object)]) type: VIRTUAL call: java.lang.Class.isInstance(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0013 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: INVOKE  \l  (r4 I:java.util.Collection A[D('destination' java.util.Collection)])\l  (r1 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0013|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x0013\-\>B:11:0x0013\l}"];
Node_12 [shape=record,label="{12\:\ 0x0013|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|RETURN\l|0x0027: RETURN  (r4 I:C extends java.util.Collection\<? super R\> A[D('destination' java.util.Collection)])  (LINE:39)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final C extends java.util.Collection\<? super R\> kotlin.sequences.SequencesKt___SequencesJvmKt.filterIsInstanceTo((r3 I:kotlin.sequences.Sequence\<?\> A[D('$this$filterIsInstanceTo' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:C extends java.util.Collection\<? super R\> A[D('destination' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Class\<R\> A[D('klass' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:6:0x0021 \-\> B:3:0x0013, BACK_EDGE: B:7:0x0023 \-\> B:3:0x0013\lDebug Info:\l  0x001d\-0x0027: r1 'element' Ljava\/lang\/Object;\l  \-1 \-0x0027: r3 '$this$filterIsInstanceTo' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x0027: r4 'destination' Ljava\/util\/Collection;\l  \-1 \-0x0027: r5 'klass' Ljava\/lang\/Class;\lTYPE_VARS: [R, C extends java.util.Collection\<? super R\>]\lSIGNATURE: \<C::Ljava\/util\/Collection\<\-TR;\>;R:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<*\>;TC;Ljava\/lang\/Class\<TR;\>;)TC;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_9[style=dashed];
Node_6 -> Node_12;
Node_9 -> Node_7;
Node_7 -> Node_13;
Node_13 -> Node_11;
Node_11 -> Node_3;
Node_12 -> Node_11;
Node_10 -> Node_8;
Node_8 -> Node_1;
}

