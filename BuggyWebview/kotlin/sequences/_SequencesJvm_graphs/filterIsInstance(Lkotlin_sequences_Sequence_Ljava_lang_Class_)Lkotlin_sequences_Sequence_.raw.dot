digraph "CFG forkotlin.sequences.SequencesKt___SequencesJvmKt.filterIsInstance(Lkotlin\/sequences\/Sequence;Ljava\/lang\/Class;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$filterIsInstance' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"klass\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('klass' java.lang.Class)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: NEW_INSTANCE  (r0 I:kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1) =  kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1  (LINE:26)\l0x000c: INVOKE  \l  (r0 I:kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1)\l  (r3 I:java.lang.Class A[D('klass' java.lang.Class)])\l type: DIRECT call: kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1.\<init\>(java.lang.Class):void A[MD:(java.lang.Class\<R\>):void (m)]\l0x000f: CHECK_CAST (r0 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r0 I:??[OBJECT, ARRAY]) \l0x0011: INVOKE  (r0 I:kotlin.sequences.Sequence) = \l  (r2 I:kotlin.sequences.Sequence A[D('$this$filterIsInstance' kotlin.sequences.Sequence)])\l  (r0 I:kotlin.jvm.functions.Function1)\l type: STATIC call: kotlin.sequences.SequencesKt.filter(kotlin.sequences.Sequence, kotlin.jvm.functions.Function1):kotlin.sequences.Sequence A[MD:\<T\>:(kotlin.sequences.Sequence\<? extends T\>, kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\>):kotlin.sequences.Sequence\<T\> (m)]\l0x0015: CONST_STR  (r1 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlin.sequences.Sequence\<R of kotlin.sequences.SequencesKt___SequencesJvmKt.filterIsInstance\>\" \l0x0017: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|RETURN\l|0x001a: RETURN  (r0 I:kotlin.sequences.Sequence\<R\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<R\> kotlin.sequences.SequencesKt___SequencesJvmKt.filterIsInstance((r2 I:kotlin.sequences.Sequence\<?\> A[D('$this$filterIsInstance' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Class\<R\> A[D('klass' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x001a: r2 '$this$filterIsInstance' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x001a: r3 'klass' Ljava\/lang\/Class;\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<*\>;Ljava\/lang\/Class\<TR;\>;)Lkotlin\/sequences\/Sequence\<TR;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

