digraph "CFG forkotlin.sequences.SequencesKt___SequencesJvmKt.maxBy(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"selector\")\ljava.util.Iterator r3 = r9.iterator()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|if (r3.hasNext() != false) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|RETURN\lORIG_RETURN\l|return null\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|java.lang.Object r4 = r3.next()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|if (r3.hasNext() != false) goto L7\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|java.lang.Comparable r5 = r10.invoke(r4)\lr4 = r4\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|LOOP_START\lLOOP:0: B:9:0x002a\-\>B:13:0x0040\lPHI: r4 r5 \l  PHI: (r4v2 'maxElem$iv' java.lang.Object) = (r4v8 'maxElem$iv' java.lang.Object), (r4v9 'maxElem$iv' java.lang.Object) binds: [B:8:0x0024, B:13:0x0040] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v3 'maxValue$iv' java.lang.Comparable) = (r5v2 'maxValue$iv' java.lang.Comparable), (r5v4 'maxValue$iv' java.lang.Comparable) binds: [B:8:0x0024, B:13:0x0040] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Object r6 = r3.next()\ljava.lang.Comparable r7 = r10.invoke(r6)\lr4 = r4\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|if (r5.compareTo(r7) \>= 0) goto L11\l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|r4 = r6\lr5 = r7\lr4 = (T) r4\l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|PHI: r4 r5 \l  PHI: (r4v3 'maxElem$iv' java.lang.Object) = (r4v10 'maxElem$iv' java.lang.Object), (r4v11 'maxElem$iv' java.lang.Object) binds: [B:10:0x0038, B:11:0x003a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v4 'maxValue$iv' java.lang.Comparable) = (r5v3 'maxValue$iv' java.lang.Comparable), (r5v5 'maxValue$iv' java.lang.Comparable) binds: [B:10:0x0038, B:11:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|r4 = r4\l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|LOOP_END\lLOOP:0: B:9:0x002a\-\>B:13:0x0040\l|if (r3.hasNext() != false) goto L8\l}"];
Node_15 [shape=record,label="{15\:\ 0x0043|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return (T) r4\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return r4\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ T kotlin.sequences.SequencesKt___SequencesJvmKt.maxBy((r9v0 kotlin.sequences.Sequence\<? extends T\> A[D('$this$maxBy' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'selector' kotlin.jvm.functions.Function1\<? super T, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use maxByOrNull instead., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=this.maxByOrNull(selector), imports=[[]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{errorSince=1.5, hiddenSince=1.6, warningSince=1.4\}\}\}\lBACK_EDGE: B:13:0x0040 \-\> B:9:0x002a, CROSS_EDGE: B:13:0x0040 \-\> B:14:0x0043, CROSS_EDGE: B:10:0x0038 \-\> B:12:0x003c, CROSS_EDGE: B:6:0x0021 \-\> B:14:0x0043\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R::Ljava\/lang\/Comparable\<\-TR;\>;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)TT;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l \-\> Type inference failed for: r4v1, types: [T, java.lang.Object]\l DEBUG: \l \-\> Multi\-variable search result rejected for r6v0, resolved type: java.lang.Object\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_16[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_13 -> Node_15[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_1;
Node_16 -> Node_1;
}

