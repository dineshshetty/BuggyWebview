digraph "CFG forkotlin.sequences.SequencesKt___SequencesJvmKt.maxBy(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$maxBy' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x0007: INVOKE  (r10 I:java.lang.Object A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$maxBy' kotlin.sequences.Sequence)])  (LINE:89)\l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: INVOKE  (r3 I:java.util.Iterator) = (r1 I:kotlin.sequences.Sequence A[D('$this$maxByOrNull$iv' kotlin.sequences.Sequence)]) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:173)\l0x0011: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator A[D('iterator$iv' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:174)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|RETURN\lORIG_RETURN\l|0x0017: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0043: RETURN  (r4 I:T A[D('maxElem$iv' java.lang.Object)])  (LINE:89)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator A[D('iterator$iv' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:175)\l0x001d: INVOKE  (r5 I:boolean) = (r3 I:java.util.Iterator A[D('iterator$iv' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:176)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0024 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: INVOKE  (r5 I:java.lang.Object) = \l  (r10 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)])\l  (r4 I:java.lang.Object A[D('maxElem$iv' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:177)\l0x0028: CHECK_CAST (r5 I:java.lang.Comparable) = (java.lang.Comparable) (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|LOOP_START\lLOOP:0: B:9:0x002a\-\>B:13:0x0040\l|0x002a: INVOKE  (r6 I:java.lang.Object) = (r3 I:java.util.Iterator A[D('iterator$iv' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:179)\l0x002e: INVOKE  (r7 I:java.lang.Object) = \l  (r10 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)])\l  (r6 I:java.lang.Object A[D('e$iv' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:180)\l0x0032: CHECK_CAST (r7 I:java.lang.Comparable) = (java.lang.Comparable) (r7 I:??[OBJECT, ARRAY]) \l0x0034: INVOKE  (r8 I:int) = \l  (r5 I:java.lang.Comparable A[D('maxValue$iv' java.lang.Comparable)])\l  (r7 I:java.lang.Object A[D('v$iv' java.lang.Comparable)])\l type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)] (LINE:181)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: IF  (r8 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:12:0x003c \l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('maxElem$iv' java.lang.Object)]) = (r6 I:??[OBJECT, ARRAY] A[D('e$iv' java.lang.Object)])  (LINE:182)\l0x003b: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('maxValue$iv' java.lang.Comparable)]) = (r7 I:??[OBJECT, ARRAY] A[D('v$iv' java.lang.Comparable)])  (LINE:183)\l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|0x003c: INVOKE  (r8 I:boolean) = (r3 I:java.util.Iterator A[D('iterator$iv' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:185)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|LOOP_END\lLOOP:0: B:9:0x002a\-\>B:13:0x0040\l|0x0040: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002a \l}"];
Node_15 [shape=record,label="{15\:\ 0x0043|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|0x0043: RETURN  (r4 I:T A[D('maxElem$iv' java.lang.Object)]) A[SYNTHETIC] (LINE:89)\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|0x0043: RETURN  (r4 I:T A[D('maxElem$iv' java.lang.Object)]) A[SYNTHETIC] (LINE:89)\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ T kotlin.sequences.SequencesKt___SequencesJvmKt.maxBy((r9 I:kotlin.sequences.Sequence\<? extends T\> A[D('$this$maxBy' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function1\<? super T, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use maxByOrNull instead., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=this.maxByOrNull(selector), imports=[[]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{errorSince=1.5, hiddenSince=1.6, warningSince=1.4\}\}\}\lBACK_EDGE: B:13:0x0040 \-\> B:9:0x002a, CROSS_EDGE: B:13:0x0040 \-\> B:14:0x0043, CROSS_EDGE: B:10:0x0038 \-\> B:12:0x003c, CROSS_EDGE: B:6:0x0021 \-\> B:14:0x0043\lDebug Info:\l  0x002e\-0x0042: r6 'e$iv' Ljava\/lang\/Object;\l  0x0034\-0x0042: r7 'v$iv' Ljava\/lang\/Comparable;\l  0x000c\-0x0043: r1 '$this$maxByOrNull$iv' Lkotlin\/sequences\/Sequence;\l  0x000d\-0x0043: r2 '$i$f$maxByOrNull' I\l  0x0011\-0x0043: r3 'iterator$iv' Ljava\/util\/Iterator;\l  0x001d\-0x0043: r4 'maxElem$iv' Ljava\/lang\/Object;\l  0x002a\-0x0043: r5 'maxValue$iv' Ljava\/lang\/Comparable;\l  0x000b\-0x0043: r0 '$i$f$maxBy' I\l  \-1 \-0x0043: r9 '$this$maxBy' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x0043: r10 'selector' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R::Ljava\/lang\/Comparable\<\-TR;\>;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)TT;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_16[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_13 -> Node_15[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_1;
Node_16 -> Node_1;
}

