digraph "CFG forkotlin.sequences.SequencesKt___SequencesJvmKt.filterIsInstance(Lkotlin\/sequences\/Sequence;Ljava\/lang\/Class;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r2, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"klass\")\lkotlin.sequences.Sequence r0 = kotlin.sequences.SequencesKt.filter(r2, new kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1(r3))\lkotlin.jvm.internal.Intrinsics.checkNotNull(r0, \"null cannot be cast to non\-null type kotlin.sequences.Sequence\<R of kotlin.sequences.SequencesKt___SequencesJvmKt.filterIsInstance\>\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|RETURN\l|return r0\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<R\> kotlin.sequences.SequencesKt___SequencesJvmKt.filterIsInstance((r2v0 kotlin.sequences.Sequence\<?\> A[D('$this$filterIsInstance' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'klass' java.lang.Class\<R\> A[D('klass' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<*\>;Ljava\/lang\/Class\<TR;\>;)Lkotlin\/sequences\/Sequence\<TR;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

