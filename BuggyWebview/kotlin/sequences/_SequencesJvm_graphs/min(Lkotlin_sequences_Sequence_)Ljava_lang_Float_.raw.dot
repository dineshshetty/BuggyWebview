digraph "CFG forkotlin.sequences.SequencesKt___SequencesJvmKt.min(Lkotlin\/sequences\/Sequence;)Ljava\/lang\/Float;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$min' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:java.lang.Float) = (r1 I:kotlin.sequences.Sequence A[D('$this$min' kotlin.sequences.Sequence)]) type: STATIC call: kotlin.sequences.SequencesKt.minOrNull(kotlin.sequences.Sequence):java.lang.Float A[MD:\<T extends java.lang.Comparable\<? super T\>\>:(kotlin.sequences.Sequence\<? extends T extends java.lang.Comparable\<? super T\>\>):T extends java.lang.Comparable\<? super T\> (m)] (LINE:112)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|RETURN\l|0x0009: RETURN  (r0 I:java.lang.Float) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ java.lang.Float kotlin.sequences.SequencesKt___SequencesJvmKt.min((r1 I:kotlin.sequences.Sequence A[D('$this$min' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use minOrNull instead., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=this.minOrNull(), imports=[[]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{errorSince=1.5, hiddenSince=1.6, warningSince=1.4\}\}\}\lDebug Info:\l  \-1 \-0x0009: r1 '$this$min' Lkotlin\/sequences\/Sequence;\lRENAME_REASON:collision with other method in class\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

