digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1.invoke(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlin.Pair) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1)\l  (r2 I:java.lang.Object A[D('p1' java.lang.Object)])\l  (r3 I:java.lang.Object A[D('p2' java.lang.Object)])\l type: VIRTUAL call: kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1.invoke(java.lang.Object, java.lang.Object):kotlin.Pair A[MD:(T, T):kotlin.Pair\<T, T\> (m)] (LINE:2843)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:java.lang.Object) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ java.lang.Object kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1.invoke((r1 'this' I:kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Object A[D('p1' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object A[D('p2' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0004: r2 'p1' Ljava\/lang\/Object;\l  \-1 \-0x0004: r3 'p2' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function2.invoke(P1, P2):R]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

