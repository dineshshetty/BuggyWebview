digraph "CFG forkotlin.sequences.DropSequence$iterator$1.drop()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|LOOP_START\lLOOP:0: B:2:0x0000\-\>B:6:0x000c\l|0x0000: IGET  (r0 I:int) = (r1 I:kotlin.sequences.DropSequence$iterator$1) kotlin.sequences.DropSequence$iterator$1.left int  (LINE:495)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:8:0x0018 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: IGET  (r0 I:java.util.Iterator\<T\>) = (r1 I:kotlin.sequences.DropSequence$iterator$1) kotlin.sequences.DropSequence$iterator$1.iterator java.util.Iterator \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0018 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|LOOP_END\lLOOP:0: B:2:0x0000\-\>B:6:0x000c\l|0x000c: IGET  (r0 I:java.util.Iterator\<T\>) = (r1 I:kotlin.sequences.DropSequence$iterator$1) kotlin.sequences.DropSequence$iterator$1.iterator java.util.Iterator  (LINE:496)\l0x000e: INVOKE  (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0011: IGET  (r0 I:int) = (r1 I:kotlin.sequences.DropSequence$iterator$1) kotlin.sequences.DropSequence$iterator$1.left int  (LINE:497)\l0x0013: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l0x0015: IPUT  (r0 I:int), (r1 I:kotlin.sequences.DropSequence$iterator$1) kotlin.sequences.DropSequence$iterator$1.left int \l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|0x0018: RETURN   A[SYNTHETIC] (LINE:499)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: RETURN    (LINE:499)\l}"];
MethodNode[shape=record,label="{private final void kotlin.sequences.DropSequence$iterator$1.drop((r1 'this' I:kotlin.sequences.DropSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:6:0x000c \-\> B:2:0x0000, CROSS_EDGE: B:3:0x0002 \-\> B:7:0x0018\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_2;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_8 -> Node_7;
Node_7 -> Node_1;
}

