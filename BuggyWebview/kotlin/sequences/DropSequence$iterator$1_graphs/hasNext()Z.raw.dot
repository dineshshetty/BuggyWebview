digraph "CFG forkotlin.sequences.DropSequence$iterator$1.hasNext()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r1 I:kotlin.sequences.DropSequence$iterator$1) type: DIRECT call: kotlin.sequences.DropSequence$iterator$1.drop():void A[MD:():void (m)] (LINE:507)\l0x0003: IGET  (r0 I:java.util.Iterator\<T\>) = (r1 I:kotlin.sequences.DropSequence$iterator$1) kotlin.sequences.DropSequence$iterator$1.iterator java.util.Iterator  (LINE:508)\l0x0005: INVOKE  (r0 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|RETURN\l|0x0009: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean kotlin.sequences.DropSequence$iterator$1.hasNext((r1 'this' I:kotlin.sequences.DropSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lMETHOD_OVERRIDE: [ClspMth\{java.util.Iterator.hasNext():boolean\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

