digraph "CFG forkotlin.sequences.TakeWhileSequence$iterator$1.\<init\>(Lkotlin\/sequences\/TakeWhileSequence;)V" {
subgraph cluster_Region_1326730248 {
label = "R(1:1) | DECL_VAR: kotlin.sequences.Sequence null\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|r1.this$0 = r2\lkotlin.sequences.Sequence r0 = ((kotlin.sequences.TakeWhileSequence) r2).sequence\lr1.iterator = r0.iterator()\lr1.nextState = \-1\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0012}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.sequences.TakeWhileSequence$iterator$1.\<init\>((r1v0 'this' kotlin.sequences.TakeWhileSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]), (r2v0 kotlin.sequences.TakeWhileSequence\<T\> A[D('$receiver' kotlin.sequences.TakeWhileSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l INFO: \l \-\> Access modifiers changed from: package\-private\}\lSIGNATURE: (Lkotlin\/sequences\/TakeWhileSequence\<TT;\>;)V\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_0 -> Node_2;
Node_3 -> Node_1;
}

