digraph "CFG forkotlin.sequences.DropWhileSequence$iterator$1.drop()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|LOOP_START\lLOOP:0: B:2:0x0000\-\>B:5:0x001e\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r2.iterator.hasNext() == false) goto L9\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|java.lang.Object r0 = r2.iterator.next()\lkotlin.jvm.functions.Function1 r1 = ((kotlin.sequences.DropWhileSequence) r2.this$0).predicate\l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|LOOP_END\lLOOP:0: B:2:0x0000\-\>B:5:0x001e\l|if (((java.lang.Boolean) r1.invoke(r0)).booleanValue() != false) goto L1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|r2.nextItem = r0\lr2.dropState = 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|r2.dropState = 0\l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private final void kotlin.sequences.DropWhileSequence$iterator$1.drop((r2v0 'this' kotlin.sequences.DropWhileSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:5:0x001e \-\> B:2:0x0000, CROSS_EDGE: B:9:0x0029 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r0v4, types: [T, java.lang.Object]\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_2;
Node_5 -> Node_11[style=dashed];
Node_11 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_10 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

