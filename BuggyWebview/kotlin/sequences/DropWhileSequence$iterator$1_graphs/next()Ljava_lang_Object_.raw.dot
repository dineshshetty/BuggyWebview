digraph "CFG forkotlin.sequences.DropWhileSequence$iterator$1.next()Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r2 I:kotlin.sequences.DropWhileSequence$iterator$1) kotlin.sequences.DropWhileSequence$iterator$1.dropState int  (LINE:541)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0008 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: INVOKE  (r2 I:kotlin.sequences.DropWhileSequence$iterator$1) type: DIRECT call: kotlin.sequences.DropWhileSequence$iterator$1.drop():void A[MD:():void (m)] (LINE:542)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: IGET  (r0 I:int) = (r2 I:kotlin.sequences.DropWhileSequence$iterator$1) kotlin.sequences.DropWhileSequence$iterator$1.dropState int  (LINE:544)\l0x000a: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0017 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: IGET  (r0 I:T) = (r2 I:kotlin.sequences.DropWhileSequence$iterator$1) kotlin.sequences.DropWhileSequence$iterator$1.nextItem java.lang.Object  (LINE:546)\l0x0010: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:547)\l0x0011: IPUT  (r1 I:T), (r2 I:kotlin.sequences.DropWhileSequence$iterator$1) kotlin.sequences.DropWhileSequence$iterator$1.nextItem java.lang.Object \l0x0013: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:548)\l0x0014: IPUT  (r1 I:int), (r2 I:kotlin.sequences.DropWhileSequence$iterator$1) kotlin.sequences.DropWhileSequence$iterator$1.dropState int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:T A[D('result' java.lang.Object)])  (LINE:549)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: IGET  (r0 I:java.util.Iterator\<T\> A[D('result' java.lang.Object)]) = (r2 I:kotlin.sequences.DropWhileSequence$iterator$1) kotlin.sequences.DropWhileSequence$iterator$1.iterator java.util.Iterator  (LINE:551)\l0x0019: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|RETURN\l|0x001d: RETURN  (r0 I:T) \l}"];
MethodNode[shape=record,label="{public T kotlin.sequences.DropWhileSequence$iterator$1.next((r2 'this' I:kotlin.sequences.DropWhileSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x001d \-\> B:1:?, CROSS_EDGE: B:3:0x0003 \-\> B:5:0x0008\lDebug Info:\l  0x0010\-0x0017: r0 'result' Ljava\/lang\/Object;\lTYPE_VARS: EMPTY\lSIGNATURE: ()TT;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Iterator.next():E\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

