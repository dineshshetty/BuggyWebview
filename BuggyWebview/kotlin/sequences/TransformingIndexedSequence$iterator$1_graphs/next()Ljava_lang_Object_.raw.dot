digraph "CFG forkotlin.sequences.TransformingIndexedSequence$iterator$1.next()Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:kotlin.sequences.TransformingIndexedSequence\<T, R\>) = (r3 I:kotlin.sequences.TransformingIndexedSequence$iterator$1) kotlin.sequences.TransformingIndexedSequence$iterator$1.this$0 kotlin.sequences.TransformingIndexedSequence  (LINE:234)\l0x0002: INVOKE  (r0 I:kotlin.jvm.functions.Function2) = (r0 I:kotlin.sequences.TransformingIndexedSequence) type: STATIC call: kotlin.sequences.TransformingIndexedSequence.access$getTransformer$p(kotlin.sequences.TransformingIndexedSequence):kotlin.jvm.functions.Function2 A[MD:(kotlin.sequences.TransformingIndexedSequence):kotlin.jvm.functions.Function2 (m)]\l0x0006: IGET  (r1 I:int) = (r3 I:kotlin.sequences.TransformingIndexedSequence$iterator$1) kotlin.sequences.TransformingIndexedSequence$iterator$1.index int \l0x0008: ARITH  (r2 I:int) = (r1 I:int) + (1 int) \l0x000a: IPUT  (r2 I:int), (r3 I:kotlin.sequences.TransformingIndexedSequence$iterator$1) kotlin.sequences.TransformingIndexedSequence$iterator$1.index int \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r1 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: INVOKE   type: STATIC call: kotlin.collections.CollectionsKt.throwIndexOverflow():void A[MD:():void (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0015: IGET  (r2 I:java.util.Iterator\<T\>) = (r3 I:kotlin.sequences.TransformingIndexedSequence$iterator$1) kotlin.sequences.TransformingIndexedSequence$iterator$1.iterator java.util.Iterator \l0x0017: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001b: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlin.jvm.functions.Function2), (r1 I:java.lang.Object), (r2 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|RETURN\l|0x001f: RETURN  (r0 I:R) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public R kotlin.sequences.TransformingIndexedSequence$iterator$1.next((r3 'this' I:kotlin.sequences.TransformingIndexedSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:3:0x000c \-\> B:5:0x0011\lTYPE_VARS: EMPTY\lSIGNATURE: ()TR;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Iterator.next():E\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

