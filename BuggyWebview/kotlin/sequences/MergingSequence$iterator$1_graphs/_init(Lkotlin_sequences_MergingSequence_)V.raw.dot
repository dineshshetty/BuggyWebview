digraph "CFG forkotlin.sequences.MergingSequence$iterator$1.\<init\>(Lkotlin\/sequences\/MergingSequence;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IPUT  \l  (r2 I:kotlin.sequences.MergingSequence\<T1, T2, V\> A[D('$receiver' kotlin.sequences.MergingSequence)])\l  (r1 I:kotlin.sequences.MergingSequence$iterator$1)\l kotlin.sequences.MergingSequence$iterator$1.this$0 kotlin.sequences.MergingSequence \l0x0002: INVOKE  (r1 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:273)\l0x0005: INVOKE  (r0 I:kotlin.sequences.Sequence) = (r2 I:kotlin.sequences.MergingSequence A[D('$receiver' kotlin.sequences.MergingSequence)]) type: STATIC call: kotlin.sequences.MergingSequence.access$getSequence1$p(kotlin.sequences.MergingSequence):kotlin.sequences.Sequence A[MD:(kotlin.sequences.MergingSequence):kotlin.sequences.Sequence (m)] (LINE:274)\l0x0009: INVOKE  (r0 I:java.util.Iterator) = (r0 I:kotlin.sequences.Sequence) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)]\l0x000d: IPUT  (r0 I:java.util.Iterator\<T1\>), (r1 I:kotlin.sequences.MergingSequence$iterator$1) kotlin.sequences.MergingSequence$iterator$1.iterator1 java.util.Iterator \l0x000f: INVOKE  (r0 I:kotlin.sequences.Sequence) = (r2 I:kotlin.sequences.MergingSequence A[D('$receiver' kotlin.sequences.MergingSequence)]) type: STATIC call: kotlin.sequences.MergingSequence.access$getSequence2$p(kotlin.sequences.MergingSequence):kotlin.sequences.Sequence A[MD:(kotlin.sequences.MergingSequence):kotlin.sequences.Sequence (m)] (LINE:275)\l0x0013: INVOKE  (r0 I:java.util.Iterator) = (r0 I:kotlin.sequences.Sequence) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)]\l0x0017: IPUT  (r0 I:java.util.Iterator\<T2\>), (r1 I:kotlin.sequences.MergingSequence$iterator$1) kotlin.sequences.MergingSequence$iterator$1.iterator2 java.util.Iterator \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|RETURN\l|0x0019: RETURN    (LINE:273)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void kotlin.sequences.MergingSequence$iterator$1.\<init\>((r1 'this' I:kotlin.sequences.MergingSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.sequences.MergingSequence\<T1, T2, V\> A[D('$receiver' kotlin.sequences.MergingSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0019: r2 '$receiver' Lkotlin\/sequences\/MergingSequence;\lTYPE_VARS: EMPTY\lSIGNATURE: (Lkotlin\/sequences\/MergingSequence\<TT1;TT2;TV;\>;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

