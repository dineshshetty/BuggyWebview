digraph "CFG forkotlin.sequences.FilteringSequence.\<init\>(Lkotlin\/sequences\/Sequence;ZLkotlin\/jvm\/functions\/Function1;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"sequence\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('sequence' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r4 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r1 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:157)\l0x000d: IPUT  \l  (r2 I:kotlin.sequences.Sequence\<T\> A[D('sequence' kotlin.sequences.Sequence)])\l  (r1 I:kotlin.sequences.FilteringSequence)\l kotlin.sequences.FilteringSequence.sequence kotlin.sequences.Sequence  (LINE:158)\l0x000f: IPUT  (r3 I:boolean A[D('sendWhen' boolean)]), (r1 I:kotlin.sequences.FilteringSequence) kotlin.sequences.FilteringSequence.sendWhen boolean  (LINE:159)\l0x0011: IPUT  \l  (r4 I:kotlin.jvm.functions.Function1\<T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1)])\l  (r1 I:kotlin.sequences.FilteringSequence)\l kotlin.sequences.FilteringSequence.predicate kotlin.jvm.functions.Function1  (LINE:160)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|RETURN\l|0x0013: RETURN    (LINE:157)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.sequences.FilteringSequence.\<init\>((r1 'this' I:kotlin.sequences.FilteringSequence\<T\> A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.sequences.Sequence\<? extends T\> A[D('sequence' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[D('sendWhen' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0013: r2 'sequence' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x0013: r3 'sendWhen' Z\l  \-1 \-0x0013: r4 'predicate' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [T]\lSIGNATURE: (Lkotlin\/sequences\/Sequence\<+TT;\>;ZLkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

