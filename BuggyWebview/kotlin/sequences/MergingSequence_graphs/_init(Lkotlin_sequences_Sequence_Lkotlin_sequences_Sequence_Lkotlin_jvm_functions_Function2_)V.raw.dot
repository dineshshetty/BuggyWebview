digraph "CFG forkotlin.sequences.MergingSequence.\<init\>(Lkotlin\/sequences\/Sequence;Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function2;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"sequence1\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('sequence1' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"sequence2\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('sequence2' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x000c: INVOKE  (r4 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: INVOKE  (r1 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:267)\l0x0012: IPUT  \l  (r2 I:kotlin.sequences.Sequence\<T1\> A[D('sequence1' kotlin.sequences.Sequence)])\l  (r1 I:kotlin.sequences.MergingSequence)\l kotlin.sequences.MergingSequence.sequence1 kotlin.sequences.Sequence  (LINE:269)\l0x0014: IPUT  \l  (r3 I:kotlin.sequences.Sequence\<T2\> A[D('sequence2' kotlin.sequences.Sequence)])\l  (r1 I:kotlin.sequences.MergingSequence)\l kotlin.sequences.MergingSequence.sequence2 kotlin.sequences.Sequence  (LINE:270)\l0x0016: IPUT  \l  (r4 I:kotlin.jvm.functions.Function2\<T1, T2, V\> A[D('transform' kotlin.jvm.functions.Function2)])\l  (r1 I:kotlin.sequences.MergingSequence)\l kotlin.sequences.MergingSequence.transform kotlin.jvm.functions.Function2  (LINE:271)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|RETURN\l|0x0018: RETURN    (LINE:268)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.sequences.MergingSequence.\<init\>((r1 'this' I:kotlin.sequences.MergingSequence\<T1, T2, V\> A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.sequences.Sequence\<? extends T1\> A[D('sequence1' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.sequences.Sequence\<? extends T2\> A[D('sequence2' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function2\<? super T1, ? super T2, ? extends V\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r2 'sequence1' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x0018: r3 'sequence2' Lkotlin\/sequences\/Sequence;\l  \-1 \-0x0018: r4 'transform' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [V, T1, T2]\lSIGNATURE: (Lkotlin\/sequences\/Sequence\<+TT1;\>;Lkotlin\/sequences\/Sequence\<+TT2;\>;Lkotlin\/jvm\/functions\/Function2\<\-TT1;\-TT2;+TV;\>;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

