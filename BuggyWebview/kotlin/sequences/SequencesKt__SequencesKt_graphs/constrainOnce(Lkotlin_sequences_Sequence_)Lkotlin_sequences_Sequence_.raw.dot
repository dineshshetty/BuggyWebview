digraph "CFG forkotlin.sequences.SequencesKt__SequencesKt.constrainOnce(Lkotlin\/sequences\/Sequence;)Lkotlin\/sequences\/Sequence;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$constrainOnce' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INSTANCE_OF  (r0 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('$this$constrainOnce' kotlin.sequences.Sequence)]) kotlin.sequences.ConstrainedOnceSequence  (LINE:626)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x000b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$constrainOnce' kotlin.sequences.Sequence)]) \l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0012: RETURN  (r0 I:kotlin.sequences.Sequence\<T\>) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:kotlin.sequences.ConstrainedOnceSequence) =  kotlin.sequences.ConstrainedOnceSequence \l0x000d: INVOKE  \l  (r0 I:kotlin.sequences.ConstrainedOnceSequence)\l  (r1 I:kotlin.sequences.Sequence A[D('$this$constrainOnce' kotlin.sequences.Sequence)])\l type: DIRECT call: kotlin.sequences.ConstrainedOnceSequence.\<init\>(kotlin.sequences.Sequence):void A[MD:(kotlin.sequences.Sequence\<? extends T\>):void (m)]\l0x0010: CHECK_CAST (r0 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: RETURN  (r0 I:kotlin.sequences.Sequence\<T\>) \l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<T\> kotlin.sequences.SequencesKt__SequencesKt.constrainOnce((r1 I:kotlin.sequences.Sequence\<? extends T\> A[D('$this$constrainOnce' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000b \-\> B:14:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0012: r1 '$this$constrainOnce' Lkotlin\/sequences\/Sequence;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;)Lkotlin\/sequences\/Sequence\<TT;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

