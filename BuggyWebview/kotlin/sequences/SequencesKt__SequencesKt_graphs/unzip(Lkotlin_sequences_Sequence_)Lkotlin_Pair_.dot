digraph "CFG forkotlin.sequences.SequencesKt__SequencesKt.unzip(Lkotlin\/sequences\/Sequence;)Lkotlin\/Pair;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"\<this\>\")\ljava.util.ArrayList r0 = new java.util.ArrayList()\ljava.util.ArrayList r1 = new java.util.ArrayList()\ljava.util.Iterator r2 = r5.iterator()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0013|LOOP_START\lLOOP:0: B:12:0x0013\-\>B:14:0x0019\l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|if (r2.hasNext() == false) goto L5\l}"];
Node_14 [shape=record,label="{14\:\ 0x0019|LOOP_END\lLOOP:0: B:12:0x0013\-\>B:14:0x0019\l|kotlin.Pair r3 = r2.next()\lr0.add(r3.getFirst())\lr1.add(r3.getSecond())\l}"];
Node_17 [shape=record,label="{17\:\ 0x002e|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e}"];
Node_16 [shape=record,label="{16\:\ 0x0032|RETURN\l|return kotlin.TuplesKt.m15to(r0, r1)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.Pair\<java.util.List\<T\>, java.util.List\<R\>\> kotlin.sequences.SequencesKt__SequencesKt.unzip((r5v0 kotlin.sequences.Sequence\<? extends kotlin.Pair\<? extends T, ? extends R\>\> A[D('$this$unzip' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x0019 \-\> B:12:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+Lkotlin\/Pair\<+TT;+TR;\>;\>;)Lkotlin\/Pair\<Ljava\/util\/List\<TT;\>;Ljava\/util\/List\<TR;\>;\>;\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_12;
Node_17 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_10;
}

