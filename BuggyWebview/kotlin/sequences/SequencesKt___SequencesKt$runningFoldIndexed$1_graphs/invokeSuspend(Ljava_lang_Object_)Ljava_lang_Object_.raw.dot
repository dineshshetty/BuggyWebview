digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r10 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1) kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.label int  (LINE:2313)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:35:0x002b\l case 1: goto B:34:0x0022\l case 2: goto B:33:0x0011\l default: goto B:31:0x0009 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0009|0x0009: NEW_INSTANCE  (r11 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:2321)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r11 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0010|0x0010: THROW  (r11 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0011|0x0011: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY])  (LINE:2313)\l0x0012: IGET  (r2 I:int) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.I$0 int \l0x0014: IGET  (r3 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$2 java.lang.Object \l0x0016: CHECK_CAST (r3 I:java.util.Iterator) = (java.util.Iterator) (r3 I:??[OBJECT, ARRAY]) \l0x0018: IGET  (r4 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$1 java.lang.Object \l0x001a: IGET  (r5 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$0 java.lang.Object \l0x001c: CHECK_CAST (r5 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r5 I:??[OBJECT, ARRAY]) \l0x001e: INVOKE  (r11 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0051|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0051|LOOP_START\lLOOP:0: B:39:0x0051\-\>B:47:0x0081\l|0x0051: INVOKE  (r6 I:boolean) = (r3 I:java.util.Iterator A[D('index' int)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0055|0x0055: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0083 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0057|0x0057: INVOKE  (r6 I:java.lang.Object) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x005b: IGET  (r7 I:kotlin.jvm.functions.Function3\<java.lang.Integer, R, T, R\>) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$operation kotlin.jvm.functions.Function3  (LINE:2318)\l0x005d: ARITH  (r8 I:int) = (r2 I:int A[D('index' int)]) + (1 int) \l}"];
Node_42 [shape=record,label="{42\:\ 0x005f|0x005f: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:44:0x0064 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0061|0x0061: INVOKE   type: STATIC call: kotlin.collections.CollectionsKt.throwIndexOverflow():void A[MD:():void (m)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0064|0x0064: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) type: STATIC call: kotlin.coroutines.jvm.internal.Boxing.boxInt(int):java.lang.Integer A[MD:(int):java.lang.Integer (m)]\l0x0068: INVOKE  (r4 I:java.lang.Object A[D('accumulator' java.lang.Object)]) = \l  (r7 I:kotlin.jvm.functions.Function3)\l  (r2 I:java.lang.Object)\l  (r4 I:java.lang.Object A[D('accumulator' java.lang.Object)])\l  (r6 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function3.invoke(java.lang.Object, java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2, P3):R (m)]\l0x006c: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])  (LINE:2319)\l0x006d: CHECK_CAST (r2 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r2 I:??[OBJECT, ARRAY]) \l0x006f: IPUT  \l  (r5 I:java.lang.Object A[D('$this$sequence' kotlin.sequences.SequenceScope)])\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$0 java.lang.Object \l0x0071: IPUT  \l  (r4 I:java.lang.Object A[D('accumulator' java.lang.Object)])\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$1 java.lang.Object \l0x0073: IPUT  \l  (r3 I:java.lang.Object)\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$2 java.lang.Object \l0x0075: IPUT  \l  (r8 I:int A[D('index' int)])\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.I$0 int \l0x0077: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0078: IPUT  \l  (r6 I:int)\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.label int \l0x007a: INVOKE  (r2 I:java.lang.Object) = \l  (r5 I:kotlin.sequences.SequenceScope A[D('$this$sequence' kotlin.sequences.SequenceScope)])\l  (r4 I:java.lang.Object A[D('accumulator' java.lang.Object)])\l  (r2 I:kotlin.coroutines.Continuation)\l type: VIRTUAL call: kotlin.sequences.SequenceScope.yield(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x007e|0x007e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0081 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0081|LOOP_END\lLOOP:0: B:39:0x0051\-\>B:47:0x0081\l|0x0081: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)])  (LINE:2319)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0080|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0080|RETURN\l|0x0080: RETURN  (r0 I:java.lang.Object)  (LINE:2313)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0083|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0083|0x0083: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:2321)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0085|RETURN\l|0x0085: RETURN  (r0 I:java.lang.Object) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0022|0x0022: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)]) = (r10 I:??[OBJECT, ARRAY]) \l0x0023: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$0 java.lang.Object \l0x0025: CHECK_CAST (r2 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r2 I:??[OBJECT, ARRAY]) \l0x0027: INVOKE  (r11 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0044|0x0044: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2315)\l0x0045: IGET  (r4 I:R) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$initial java.lang.Object  (LINE:2316)\l0x0047: IGET  (r5 I:kotlin.sequences.Sequence\<T\>) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$this_runningFoldIndexed kotlin.sequences.Sequence  (LINE:2317)\l0x0049: INVOKE  (r5 I:java.util.Iterator) = (r5 I:kotlin.sequences.Sequence) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)]\l0x004d: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY]) \l0x004e: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$sequence' kotlin.sequences.SequenceScope)]) \l0x004f: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$this$sequence' kotlin.sequences.SequenceScope)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)]) \l0x0050: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('index' int)]) = (r9 I:??[OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x002b|0x002b: INVOKE  (r11 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x002e: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l0x002f: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$0 java.lang.Object \l0x0031: CHECK_CAST (r2 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r2 I:??[OBJECT, ARRAY]) \l0x0033: IGET  (r3 I:R) = \l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$initial java.lang.Object  (LINE:2314)\l0x0035: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)]) \l0x0036: CHECK_CAST (r4 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r4 I:??[OBJECT, ARRAY]) \l0x0038: IPUT  \l  (r2 I:java.lang.Object A[D('$this$sequence' kotlin.sequences.SequenceScope)])\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$0 java.lang.Object \l0x003a: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x003b: IPUT  \l  (r5 I:int)\l  (r1 I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[D('this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1)])\l kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.label int \l0x003d: INVOKE  (r3 I:java.lang.Object) = \l  (r2 I:kotlin.sequences.SequenceScope A[D('$this$sequence' kotlin.sequences.SequenceScope)])\l  (r3 I:java.lang.Object)\l  (r4 I:kotlin.coroutines.Continuation)\l type: VIRTUAL call: kotlin.sequences.SequenceScope.yield(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0041|0x0041: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0044 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0043|RETURN\l|0x0043: RETURN  (r0 I:java.lang.Object)  (LINE:2313)\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.invokeSuspend((r10 'this' I:kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[IMMUTABLE_TYPE, THIS]), (r11 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:46:0x0080 \-\> B:28:?, BACK_EDGE: B:47:0x0081 \-\> B:39:0x0051, CROSS_EDGE: B:42:0x005f \-\> B:44:0x0064, CROSS_EDGE: B:50:0x0085 \-\> B:28:?, CROSS_EDGE: B:38:0x0044 \-\> B:39:0x0051, CROSS_EDGE: B:37:0x0043 \-\> B:28:?, CROSS_EDGE: B:36:0x0041 \-\> B:38:0x0044\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0022: r1 'this' Lkotlin\/sequences\/SequencesKt___SequencesKt$runningFoldIndexed$1;\l  0x0014\-0x0022: r2 'index' I\l  0x001a\-0x0022: r4 'accumulator' Ljava\/lang\/Object;\l  0x001e\-0x0022: r5 '$this$sequence' Lkotlin\/sequences\/SequenceScope;\l  0x0012\-0x0022: r11 '$result' Ljava\/lang\/Object;\l  0x0023\-0x002b: r1 'this' Lkotlin\/sequences\/SequencesKt___SequencesKt$runningFoldIndexed$1;\l  0x0027\-0x002b: r2 '$this$sequence' Lkotlin\/sequences\/SequenceScope;\l  0x0023\-0x002b: r11 '$result' Ljava\/lang\/Object;\l  0x0045\-0x0051: r3 'index' I\l  0x0033\-0x0051: r2 '$this$sequence' Lkotlin\/sequences\/SequenceScope;\l  0x0051\-0x005f: r2 'index' I\l  0x005b\-0x006c: r6 'element' Ljava\/lang\/Object;\l  0x005f\-0x0082: r8 'index' I\l  0x002f\-0x008f: r1 'this' Lkotlin\/sequences\/SequencesKt___SequencesKt$runningFoldIndexed$1;\l  0x0082\-0x008f: r2 'index' I\l  0x0047\-0x008f: r4 'accumulator' Ljava\/lang\/Object;\l  0x0051\-0x008f: r5 '$this$sequence' Lkotlin\/sequences\/SequenceScope;\l  0x002f\-0x008f: r11 '$result' Ljava\/lang\/Object;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [2313=4]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_33;
Node_30 -> Node_34;
Node_30 -> Node_35;
Node_31 -> Node_32;
Node_32 -> Node_28;
Node_33 -> Node_53;
Node_53 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_51;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_47;
Node_45 -> Node_52[style=dashed];
Node_47 -> Node_39;
Node_52 -> Node_46;
Node_46 -> Node_28;
Node_51 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_28;
Node_34 -> Node_38;
Node_38 -> Node_53;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_28;
}

