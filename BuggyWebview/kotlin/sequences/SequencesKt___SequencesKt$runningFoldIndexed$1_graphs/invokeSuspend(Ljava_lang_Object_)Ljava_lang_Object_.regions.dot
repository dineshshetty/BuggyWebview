digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1305037308 {
label = "R(4:1|2|(4:10|(1:12)|13|(2:(1:17)|(1:15)))|20) | DECL_VAR: kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 null, kotlin.sequences.SequenceScope $this$sequence, java.lang.Object accumulator, kotlin.sequences.SequenceScope $this$sequence, int index, java.util.Iterator null\l";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0000|java.lang.Object java.lang.Object r0 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
subgraph cluster_SwitchRegion_1905843379 {
label = "Switch: 4
 case 0 -> R(4:23|(1:25)|22|1)
 case 1 -> R(3:21|22|1)
 case 2 -> R(2:6|1)
 case default -> R(1:4)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0006|switch(r10.label) \{\l    case 0: goto L23;\l    case 1: goto L21;\l    case 2: goto L6;\l    default: goto L3;\l\}\l}"];
subgraph cluster_Region_2220859 {
label = "R(4:23|(1:25)|22|1)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x002b|kotlin.ResultKt.throwOnFailure(r11)\lr1 = r10\lkotlin.sequences.SequenceScope r2 = (kotlin.sequences.SequenceScope) r1.L$0\lr1.L$0 = r2\lr1.label = 1\l}"];
subgraph cluster_IfRegion_1611181176 {
label = "IF [B:36:0x0041] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0041|if (r2.yield(r1.$initial, r1) == r0) goto L25\l}"];
subgraph cluster_Region_1547381073 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0043|RETURN\l|return r0\l}"];
}
}
Node_38 [shape=record,label="{38\:\ 0x0044|PHI: r1 r2 \l  PHI: (r1v2 kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1) = (r1v1 kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1), (r1v3 kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1) binds: [B:36:0x0041, B:34:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 '$this$sequence' kotlin.sequences.SequenceScope) = (r2v1 '$this$sequence' kotlin.sequences.SequenceScope), (r2v5 '$this$sequence' kotlin.sequences.SequenceScope) binds: [B:36:0x0041, B:34:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|R r4 = r1.$initial\lr5 = r2\lr2 = 0\lr3 = r1.$this_runningFoldIndexed.iterator()\l}"];
Node_InsnContainer_1475708828 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_89465807 {
label = "R(3:21|22|1)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0022|r1 = r10\lkotlin.sequences.SequenceScope r2 = (kotlin.sequences.SequenceScope) r1.L$0\lkotlin.ResultKt.throwOnFailure(r11)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0044|PHI: r1 r2 \l  PHI: (r1v2 kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1) = (r1v1 kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1), (r1v3 kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1) binds: [B:36:0x0041, B:34:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 '$this$sequence' kotlin.sequences.SequenceScope) = (r2v1 '$this$sequence' kotlin.sequences.SequenceScope), (r2v5 '$this$sequence' kotlin.sequences.SequenceScope) binds: [B:36:0x0041, B:34:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|R r4 = r1.$initial\lr5 = r2\lr2 = 0\lr3 = r1.$this_runningFoldIndexed.iterator()\l}"];
Node_InsnContainer_1714453101 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1362336372 {
label = "R(2:6|1)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0011|r1 = r10\lint r2 = r1.I$0\ljava.util.Iterator r3 = (java.util.Iterator) r1.L$2\ljava.lang.Object r4 = r1.L$1\lkotlin.sequences.SequenceScope r5 = (kotlin.sequences.SequenceScope) r1.L$0\lkotlin.ResultKt.throwOnFailure(r11)\l}"];
Node_InsnContainer_1337029261 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_2021347980 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0010|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
}
}
subgraph cluster_LoopRegion_55178104 {
label = "LOOP:0: (4:10|(1:12)|13|(2:(1:17)|(1:15)))";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0055|if (r3.hasNext() != false) goto L10\l}"];
subgraph cluster_Region_193076144 {
label = "R(4:10|(1:12)|13|(2:(1:17)|(1:15)))";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0057|java.lang.Object java.lang.Object r6 = r3.next()\lkotlin.jvm.functions.Function3\<java.lang.Integer, R, T, R\> kotlin.jvm.functions.Function3\<java.lang.Integer, R, T, R\> r7 = r1.$operation\lint int r8 = r2 + 1\l}"];
subgraph cluster_IfRegion_1716458094 {
label = "IF [B:42:0x005f] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x005f|if (r2 \< 0) goto L12\l}"];
subgraph cluster_Region_573448496 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0061|kotlin.collections.CollectionsKt.throwIndexOverflow()\l}"];
}
}
Node_44 [shape=record,label="{44\:\ 0x0064|java.lang.Object r4 = r7.invoke(kotlin.coroutines.jvm.internal.boxing.boxInt(r2), r4, r6)\lr1.L$0 = r5\lr1.L$1 = r4\lr1.L$2 = r3\lr1.I$0 = r8\lr1.label = 2\l}"];
subgraph cluster_Region_6551755 {
label = "R(2:(1:17)|(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_577686410 {
label = "IF [B:45:0x007e] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x007e|if (r5.yield(r4, r1) == r0) goto L16\l}"];
subgraph cluster_Region_636477586 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0080|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_70584768 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x0081|LOOP_END\lLOOP:0: B:39:0x0051\-\>B:47:0x0081\l|r2 = r8\l}"];
}
}
}
}
Node_50 [shape=record,label="{50\:\ 0x0085|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
}
Node_27 [shape=record,color=red,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0009}"];
Node_28 [shape=record,color=red,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x0051|SYNTHETIC\lPHI: r1 r2 r3 r4 r5 \l  PHI: (r1v4 kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1) = (r1v2 kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1), (r1v5 kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1) binds: [B:38:0x0044, B:33:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v6 'index' int) = (r2v3 'index' int), (r2v13 'index' int) binds: [B:38:0x0044, B:33:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v4 java.util.Iterator) = (r3v3 java.util.Iterator), (r3v6 java.util.Iterator) binds: [B:38:0x0044, B:33:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 'accumulator' java.lang.Object) = (r4v2 'accumulator' java.lang.Object), (r4v6 'accumulator' java.lang.Object) binds: [B:38:0x0044, B:33:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v4 '$this$sequence' kotlin.sequences.SequenceScope) = (r5v3 '$this$sequence' kotlin.sequences.SequenceScope), (r5v6 '$this$sequence' kotlin.sequences.SequenceScope) binds: [B:38:0x0044, B:33:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0051|LOOP_START\lLOOP:0: B:39:0x0051\-\>B:47:0x0081\lPHI: r2 r4 \l  PHI: (r2v7 'index' int) = (r2v6 'index' int), (r2v12 'index' int) binds: [B:53:0x0051, B:47:0x0081] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v4 'accumulator' java.lang.Object) = (r4v3 'accumulator' java.lang.Object), (r4v5 'accumulator' java.lang.Object) binds: [B:53:0x0051, B:47:0x0081] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0080|SYNTHETIC\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0083|SYNTHETIC\l}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x0083}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.invokeSuspend((r10v0 'this' kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 A[IMMUTABLE_TYPE, THIS]), (r11v0 '$result' java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:46:0x0080 \-\> B:28:?, BACK_EDGE: B:47:0x0081 \-\> B:39:0x0051, CROSS_EDGE: B:42:0x005f \-\> B:44:0x0064, CROSS_EDGE: B:50:0x0085 \-\> B:28:?, CROSS_EDGE: B:38:0x0044 \-\> B:39:0x0051, CROSS_EDGE: B:37:0x0043 \-\> B:28:?, CROSS_EDGE: B:36:0x0041 \-\> B:38:0x0044\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [2313=4]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_27;Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_33;
Node_30 -> Node_34;
Node_30 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_38[style=dashed];
Node_37 -> Node_28;
Node_38 -> Node_53;
Node_34 -> Node_38;
Node_38 -> Node_53;
Node_33 -> Node_53;
Node_32 -> Node_28;
Node_40 -> Node_41;
Node_40 -> Node_51[style=dashed];
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_42 -> Node_44[style=dashed];
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_47[style=dashed];
Node_45 -> Node_52;
Node_46 -> Node_28;
Node_47 -> Node_39;
Node_50 -> Node_28;
Node_27 -> Node_29;
Node_31 -> Node_32;
Node_53 -> Node_39;
Node_39 -> Node_40;
Node_52 -> Node_46;
Node_51 -> Node_49;
Node_49 -> Node_50;
}

