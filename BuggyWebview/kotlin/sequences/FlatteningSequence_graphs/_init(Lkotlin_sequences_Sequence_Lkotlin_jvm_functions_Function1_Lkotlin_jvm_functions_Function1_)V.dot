digraph "CFG forkotlin.sequences.FlatteningSequence.\<init\>(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function1;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r2, \"sequence\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"transformer\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"iterator\")\lr1.sequence = r2\lr1.transformer = r3\lr1.iterator = r4\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.sequences.FlatteningSequence.\<init\>((r1v0 'this' kotlin.sequences.FlatteningSequence\<T, R, E\> A[IMMUTABLE_TYPE, THIS]), (r2v0 'sequence' kotlin.sequences.Sequence\<? extends T\> A[D('sequence' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'transformer' kotlin.jvm.functions.Function1\<? super T, ? extends R\> A[D('transformer' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'iterator' kotlin.jvm.functions.Function1\<? super R, ? extends java.util.Iterator\<? extends E\>\> A[D('iterator' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T, E]\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r2v0, resolved type: kotlin.sequences.Sequence\<? extends T\>\l \-\> Multi\-variable search result rejected for r3v0, resolved type: kotlin.jvm.functions.Function1\<? super T, ? extends R\>\l \-\> Multi\-variable search result rejected for r4v0, resolved type: kotlin.jvm.functions.Function1\<? super R, ? extends java.util.Iterator\<? extends E\>\>\}\lSIGNATURE: (Lkotlin\/sequences\/Sequence\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;Lkotlin\/jvm\/functions\/Function1\<\-TR;+Ljava\/util\/Iterator\<+TE;\>;\>;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

