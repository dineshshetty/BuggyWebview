digraph "CFG forkotlin.sequences.TransformingSequence.flatten$kotlin_stdlib(Lkotlin\/jvm\/functions\/Function1;)Lkotlin\/sequences\/Sequence;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"iterator\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('iterator' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: NEW_INSTANCE  (r0 I:kotlin.sequences.FlatteningSequence) =  kotlin.sequences.FlatteningSequence  (LINE:219)\l0x0007: IGET  (r1 I:kotlin.sequences.Sequence\<T\>) = (r3 I:kotlin.sequences.TransformingSequence) kotlin.sequences.TransformingSequence.sequence kotlin.sequences.Sequence \l0x0009: IGET  (r2 I:kotlin.jvm.functions.Function1\<T, R\>) = (r3 I:kotlin.sequences.TransformingSequence) kotlin.sequences.TransformingSequence.transformer kotlin.jvm.functions.Function1 \l0x000b: INVOKE  \l  (r0 I:kotlin.sequences.FlatteningSequence)\l  (r1 I:kotlin.sequences.Sequence)\l  (r2 I:kotlin.jvm.functions.Function1)\l  (r4 I:kotlin.jvm.functions.Function1 A[D('iterator' kotlin.jvm.functions.Function1)])\l type: DIRECT call: kotlin.sequences.FlatteningSequence.\<init\>(kotlin.sequences.Sequence, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1):void A[MD:(kotlin.sequences.Sequence\<? extends T\>, kotlin.jvm.functions.Function1\<? super T, ? extends R\>, kotlin.jvm.functions.Function1\<? super R, ? extends java.util.Iterator\<? extends E\>\>):void (m)]\l0x000e: CHECK_CAST (r0 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:kotlin.sequences.Sequence\<E\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlin.sequences.Sequence\<E\> kotlin.sequences.TransformingSequence.flatten$kotlin_stdlib((r3 'this' I:kotlin.sequences.TransformingSequence\<T, R\> A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlin.jvm.functions.Function1\<? super R, ? extends java.util.Iterator\<? extends E\>\> A[D('iterator' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0010: r4 'iterator' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R, T, E]\lSIGNATURE: \<E:Ljava\/lang\/Object;\>(Lkotlin\/jvm\/functions\/Function1\<\-TR;+Ljava\/util\/Iterator\<+TE;\>;\>;)Lkotlin\/sequences\/Sequence\<TE;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

