digraph "CFG forkotlin.sequences.FlatteningSequence$iterator$1.ensureItemIterator()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|java.util.Iterator\<? extends E\> r0 = r5.itemIterator\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r0 == 0) goto L23\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006}"];
Node_5 [shape=record,label="{5\:\ 0x000a|if (r0.hasNext() != false) goto L23\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|r0 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v1 boolean), (r0v10 boolean) binds: [B:7:0x000e, B:6:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L8\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|r5.itemIterator = null\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|LOOP_START\lLOOP:0: B:10:0x0014\-\>B:16:0x0041\l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|if (r5.itemIterator != null) goto L21\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018}"];
Node_13 [shape=record,label="{13\:\ 0x001e|if (r5.iterator.hasNext() != false) goto L13\l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|java.lang.Object r0 = r5.iterator.next()\lkotlin.jvm.functions.Function1 r3 = ((kotlin.sequences.FlatteningSequence) r5.this$0).iterator\lkotlin.jvm.functions.Function1 r4 = ((kotlin.sequences.FlatteningSequence) r5.this$0).transformer\ljava.util.Iterator r3 = (java.util.Iterator) r3.invoke(r4.invoke(r0))\l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|LOOP_END\lLOOP:0: B:10:0x0014\-\>B:16:0x0041\l|if (r3.hasNext() == false) goto L9\l}"];
Node_20 [shape=record,label="{20\:\ 0x0043|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0043|r5.itemIterator = r3\l}"];
Node_18 [shape=record,label="{18\:\ 0x0045|RETURN\l|return true\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0020|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|RETURN\l|return false\l}"];
Node_21 [shape=record,label="{21\:\ 0x0046|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0046|RETURN\l|return true\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|r0 = false\l}"];
MethodNode[shape=record,label="{private final boolean kotlin.sequences.FlatteningSequence$iterator$1.ensureItemIterator((r5v0 'this' kotlin.sequences.FlatteningSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:16:0x0041 \-\> B:10:0x0014, CROSS_EDGE: B:18:0x0045 \-\> B:1:?, CROSS_EDGE: B:19:0x0046 \-\> B:1:?, CROSS_EDGE: B:8:0x000f \-\> B:10:0x0014, CROSS_EDGE: B:7:0x000e \-\> B:8:0x000f, CROSS_EDGE: B:3:0x0004 \-\> B:7:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_23;
Node_9 -> Node_23;
Node_23 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_22[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_10;
Node_16 -> Node_20[style=dashed];
Node_20 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_22 -> Node_14;
Node_14 -> Node_1;
Node_21 -> Node_19;
Node_19 -> Node_1;
Node_7 -> Node_8;
}

