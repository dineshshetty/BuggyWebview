digraph "CFG forkotlin.sequences.FlatteningSequence$iterator$1.ensureItemIterator()Z" {
subgraph cluster_Region_198216708 {
label = "R(4:1|(1:7)|(1:(2:(1:20)|(2:13|(2:16|17))))|22) | DECL_VAR: kotlin.jvm.functions.Function1 null, kotlin.jvm.functions.Function1 null\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|java.util.Iterator\<? extends E\> java.util.Iterator\<? extends E\> r0 = r5.itemIterator\l}"];
subgraph cluster_IfRegion_1061948649 {
label = "IF [B:8:0x000f] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x000f|PHI: r0 \l  PHI: (r0v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (((r0 == 0 \|\| r0.hasNext()) ? false : true) != false) goto L7\l}"];
subgraph cluster_Region_1955082787 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0011|r5.itemIterator = null\l}"];
}
}
subgraph cluster_LoopRegion_2067830103 {
label = "LOOP:0: (1:(2:(1:20)|(2:13|(2:16|17))))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0016|if (r5.itemIterator == null) goto L11\l}"];
subgraph cluster_Region_1127126722 {
label = "R(1:(2:(1:20)|(2:13|(2:16|17))))";
node [shape=record,color=blue];
subgraph cluster_Region_127913512 {
label = "R(2:(1:20)|(2:13|(2:16|17)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_850652626 {
label = "IF [B:13:0x001e] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x001e|if (r5.iterator.hasNext() != true) goto L19\l}"];
subgraph cluster_Region_1302740222 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0020|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1465699233 {
label = "R(2:13|(2:16|17))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0021|java.lang.Object java.lang.Object r0 = r5.iterator.next()\lkotlin.jvm.functions.Function1 r3 = ((kotlin.sequences.FlatteningSequence) r5.this$0).iterator\lkotlin.jvm.functions.Function1 r4 = ((kotlin.sequences.FlatteningSequence) r5.this$0).transformer\ljava.util.Iterator java.util.Iterator r3 = (java.util.Iterator) r3.invoke(r4.invoke(r0))\l}"];
subgraph cluster_IfRegion_1648149753 {
label = "IF [B:16:0x0041] THEN: R(2:16|17) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0041|LOOP_END\lLOOP:0: B:10:0x0014\-\>B:16:0x0041\l|if (r3.hasNext() != false) goto L15\l}"];
subgraph cluster_Region_1837356054 {
label = "R(2:16|17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0043|r5.itemIterator = r3\l}"];
Node_18 [shape=record,label="{18\:\ 0x0045|RETURN\l|return true\l}"];
}
}
}
}
}
}
Node_19 [shape=record,label="{19\:\ 0x0046|RETURN\l|return true\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0004}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0006}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000a|REMOVE\lADDED_TO_REGION\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000c}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0014|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0014|LOOP_START\lLOOP:0: B:10:0x0014\-\>B:16:0x0041\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0018}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0043|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0020|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0046|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000e}"];
MethodNode[shape=record,label="{private final boolean kotlin.sequences.FlatteningSequence$iterator$1.ensureItemIterator((r5v0 'this' kotlin.sequences.FlatteningSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:16:0x0041 \-\> B:10:0x0014, CROSS_EDGE: B:18:0x0045 \-\> B:1:?, CROSS_EDGE: B:19:0x0046 \-\> B:1:?, CROSS_EDGE: B:8:0x000f \-\> B:10:0x0014, CROSS_EDGE: B:7:0x000e \-\> B:8:0x000f, CROSS_EDGE: B:3:0x0004 \-\> B:7:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_8 -> Node_9;
Node_8 -> Node_23[style=dashed];
Node_9 -> Node_23;
Node_11 -> Node_12;
Node_11 -> Node_21[style=dashed];
Node_13 -> Node_15[style=dashed];
Node_13 -> Node_22;
Node_14 -> Node_1;
Node_15 -> Node_16;
Node_16 -> Node_10[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_19 -> Node_1;
Node_0 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_23 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_20 -> Node_17;
Node_22 -> Node_14;
Node_21 -> Node_19;
Node_7 -> Node_8;
}

