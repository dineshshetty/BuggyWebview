digraph "CFG forkotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r10 I:kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1) kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.label int  (LINE:328)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: SWITCH  (r1 I:??)\l case 0: goto B:7:0x0020\l case 1: goto B:6:0x0011\l default: goto B:4:0x0009 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: NEW_INSTANCE  (r11 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:334)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000d: INVOKE  (r11 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: THROW  (r11 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY])  (LINE:328)\l0x0012: IGET  (r2 I:int) = \l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1)])\l kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.I$0 int \l0x0014: IGET  (r3 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1)])\l kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.L$1 java.lang.Object \l0x0016: CHECK_CAST (r3 I:java.util.Iterator) = (java.util.Iterator) (r3 I:??[OBJECT, ARRAY]) \l0x0018: IGET  (r4 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1)])\l kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.L$0 java.lang.Object \l0x001a: CHECK_CAST (r4 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r4 I:??[OBJECT, ARRAY]) \l0x001c: INVOKE  (r11 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0033|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x0033|LOOP_START\lLOOP:0: B:8:0x0033\-\>B:16:0x0069\l|0x0033: INVOKE  (r5 I:boolean) = (r3 I:java.util.Iterator A[D('index' int)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|0x0037: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x006b \l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|0x0039: INVOKE  (r5 I:java.lang.Object) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x003d: IGET  (r6 I:kotlin.jvm.functions.Function2\<java.lang.Integer, T, C\>) = \l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1)])\l kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$transform kotlin.jvm.functions.Function2  (LINE:331)\l0x003f: ARITH  (r7 I:int) = (r2 I:int A[D('index' int)]) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0041|0x0041: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:13:0x0046 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|0x0043: INVOKE   type: STATIC call: kotlin.collections.CollectionsKt.throwIndexOverflow():void A[MD:():void (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|0x0046: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) type: STATIC call: kotlin.coroutines.jvm.internal.Boxing.boxInt(int):java.lang.Integer A[MD:(int):java.lang.Integer (m)]\l0x004a: INVOKE  (r2 I:java.lang.Object) = \l  (r6 I:kotlin.jvm.functions.Function2)\l  (r2 I:java.lang.Object)\l  (r5 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x004e: IGET  (r5 I:kotlin.jvm.functions.Function1\<C, java.util.Iterator\<R\>\> A[D('element' java.lang.Object)]) = \l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1)])\l kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$iterator kotlin.jvm.functions.Function1  (LINE:332)\l0x0050: INVOKE  (r5 I:java.lang.Object) = (r5 I:kotlin.jvm.functions.Function1), (r2 I:java.lang.Object A[D('result' java.lang.Object)]) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0054: CHECK_CAST (r5 I:java.util.Iterator) = (java.util.Iterator) (r5 I:??[OBJECT, ARRAY]) \l0x0056: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1)]) \l0x0057: CHECK_CAST (r6 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r6 I:??[OBJECT, ARRAY]) \l0x0059: IPUT  \l  (r4 I:java.lang.Object A[D('$this$sequence' kotlin.sequences.SequenceScope)])\l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1)])\l kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.L$0 java.lang.Object \l0x005b: IPUT  \l  (r3 I:java.lang.Object)\l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1)])\l kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.L$1 java.lang.Object \l0x005d: IPUT  \l  (r7 I:int A[D('index' int)])\l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1)])\l kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.I$0 int \l0x005f: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0060: IPUT  \l  (r8 I:int)\l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1)])\l kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.label int \l0x0062: INVOKE  (r2 I:java.lang.Object A[D('result' java.lang.Object)]) = \l  (r4 I:kotlin.sequences.SequenceScope A[D('$this$sequence' kotlin.sequences.SequenceScope)])\l  (r5 I:java.util.Iterator)\l  (r6 I:kotlin.coroutines.Continuation)\l type: VIRTUAL call: kotlin.sequences.SequenceScope.yieldAll(java.util.Iterator, kotlin.coroutines.Continuation):java.lang.Object A[MD:(java.util.Iterator\<? extends T\>, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0066|0x0066: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' java.lang.Object)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0069 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0069|LOOP_END\lLOOP:0: B:8:0x0033\-\>B:16:0x0069\l|0x0069: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)])  (LINE:332)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0068|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0068|RETURN\l|0x0068: RETURN  (r0 I:java.lang.Object)  (LINE:328)\l}"];
Node_21 [shape=record,label="{21\:\ 0x006b|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x006b|0x006b: SGET  (r0 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:334)\l}"];
Node_19 [shape=record,label="{19\:\ 0x006d|RETURN\l|0x006d: RETURN  (r0 I:java.lang.Object) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: INVOKE  (r11 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0023: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l0x0024: IGET  (r2 I:java.lang.Object) = \l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1)])\l kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.L$0 java.lang.Object \l0x0026: CHECK_CAST (r2 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r2 I:??[OBJECT, ARRAY]) \l0x0028: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:329)\l0x0029: IGET  (r4 I:kotlin.sequences.Sequence\<T\>) = \l  (r1 I:kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1 A[D('this' kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1)])\l kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$source kotlin.sequences.Sequence  (LINE:330)\l0x002b: INVOKE  (r4 I:java.util.Iterator) = (r4 I:kotlin.sequences.Sequence) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)]\l0x002f: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l0x0030: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$sequence' kotlin.sequences.SequenceScope)]) \l0x0031: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$this$sequence' kotlin.sequences.SequenceScope)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)]) \l0x0032: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('index' int)]) = (r9 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.invokeSuspend((r10 'this' I:kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1 A[IMMUTABLE_TYPE, THIS]), (r11 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0068 \-\> B:1:?, BACK_EDGE: B:16:0x0069 \-\> B:8:0x0033, CROSS_EDGE: B:11:0x0041 \-\> B:13:0x0046, CROSS_EDGE: B:19:0x006d \-\> B:1:?, CROSS_EDGE: B:7:0x0020 \-\> B:8:0x0033\lDebug Info:\l  0x0012\-0x0020: r1 'this' Lkotlin\/sequences\/SequencesKt__SequencesKt$flatMapIndexed$1;\l  0x0014\-0x0020: r2 'index' I\l  0x001c\-0x0020: r4 '$this$sequence' Lkotlin\/sequences\/SequenceScope;\l  0x0012\-0x0020: r11 '$result' Ljava\/lang\/Object;\l  0x0029\-0x0033: r3 'index' I\l  0x0028\-0x0033: r2 '$this$sequence' Lkotlin\/sequences\/SequenceScope;\l  0x0033\-0x0041: r2 'index' I\l  0x003d\-0x004e: r5 'element' Ljava\/lang\/Object;\l  0x004e\-0x0066: r2 'result' Ljava\/lang\/Object;\l  0x0041\-0x006a: r7 'index' I\l  0x0024\-0x0075: r1 'this' Lkotlin\/sequences\/SequencesKt__SequencesKt$flatMapIndexed$1;\l  0x006a\-0x0075: r2 'index' I\l  0x0033\-0x0075: r4 '$this$sequence' Lkotlin\/sequences\/SequenceScope;\l  0x0024\-0x0075: r11 '$result' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_22;
Node_22 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_21;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_20[style=dashed];
Node_16 -> Node_8;
Node_20 -> Node_15;
Node_15 -> Node_1;
Node_21 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_1;
Node_7 -> Node_22;
}

