digraph "CFG forkotlin.sequences.SequenceBuilderIterator.hasNext()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|LOOP_START\lLOOP:0: B:2:0x0000\-\>B:14:0x0021\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|switch(r3.state) \{\l    case 0: goto L19;\l    case 1: goto L3;\l    case 2: goto L17;\l    case 3: goto L17;\l    case 4: goto L15;\l    default: goto L12;\l\}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0010|java.util.Iterator\<? extends T\> r0 = r3.nextIterator\lkotlin.jvm.internal.Intrinsics.checkNotNull(r0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|if (r0.hasNext() == false) goto L5\l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|r3.nextIterator = null\l}"];
Node_19 [shape=record,label="{19\:\ 0x0021|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0021|LOOP_END\lLOOP:0: B:2:0x0000\-\>B:14:0x0021\l|r3.state = 5\lkotlin.coroutines.Continuation\<? super kotlin.Unit\> r0 = r3.nextStep\lkotlin.jvm.internal.Intrinsics.checkNotNull(r0)\lr3.nextStep = null\lkotlin.Result$Companion r1 = kotlin.Result.Companion\lr0.resumeWith(kotlin.Result.m144constructorimpl(kotlin.Unit.INSTANCE))\l}"];
Node_18 [shape=record,label="{18\:\ 0x001b|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|r3.state = 2\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|RETURN\l|return true\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|SYNTHETIC\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008}"];
Node_5 [shape=record,label="{5\:\ 0x000c|throw exceptionalState()\l}"];
Node_16 [shape=record,label="{16\:\ 0x000d|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|RETURN\l|return false\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|RETURN\l|return true\l}"];
Node_20 [shape=record,label="{20\:\ 0x0021|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean kotlin.sequences.SequenceBuilderIterator.hasNext((r3v0 'this' kotlin.sequences.SequenceBuilderIterator\<T\> A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:7:0x000e \-\> B:1:?, CROSS_EDGE: B:8:0x000f \-\> B:1:?, CROSS_EDGE: B:12:0x001e \-\> B:1:?, BACK_EDGE: B:14:0x0021 \-\> B:2:0x0000, CROSS_EDGE: B:3:0x0005 \-\> B:14:0x0021\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lMETHOD_OVERRIDE: [ClspMth\{java.util.Iterator.hasNext():boolean\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_9;
Node_3 -> Node_15;
Node_3 -> Node_16;
Node_3 -> Node_17;
Node_3 -> Node_20;
Node_9 -> Node_10;
Node_10 -> Node_13;
Node_10 -> Node_18[style=dashed];
Node_13 -> Node_19;
Node_19 -> Node_14;
Node_14 -> Node_2;
Node_18 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_15 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_16 -> Node_6;
Node_6 -> Node_1;
Node_17 -> Node_8;
Node_8 -> Node_1;
Node_20 -> Node_14;
}

