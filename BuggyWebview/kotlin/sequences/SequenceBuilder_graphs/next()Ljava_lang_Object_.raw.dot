digraph "CFG forkotlin.sequences.SequenceBuilderIterator.next()Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r2 I:kotlin.sequences.SequenceBuilderIterator) kotlin.sequences.SequenceBuilderIterator.state int  (LINE:132)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: SWITCH  (r0 I:??)\l case 0: goto B:10:0x0021\l case 1: goto B:10:0x0021\l case 2: goto B:8:0x0014\l case 3: goto B:6:0x000a\l default: goto B:4:0x0005 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: INVOKE  (r0 I:java.lang.Throwable) = (r2 I:kotlin.sequences.SequenceBuilderIterator) type: DIRECT call: kotlin.sequences.SequenceBuilderIterator.exceptionalState():java.lang.Throwable A[MD:():java.lang.Throwable (m)] (LINE:145)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:139)\l0x000b: IPUT  (r0 I:int), (r2 I:kotlin.sequences.SequenceBuilderIterator) kotlin.sequences.SequenceBuilderIterator.state int \l0x000d: IGET  (r0 I:T) = (r2 I:kotlin.sequences.SequenceBuilderIterator) kotlin.sequences.SequenceBuilderIterator.nextValue java.lang.Object  (LINE:141)\l0x0010: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:142)\l0x0011: IPUT  (r1 I:T), (r2 I:kotlin.sequences.SequenceBuilderIterator) kotlin.sequences.SequenceBuilderIterator.nextValue java.lang.Object \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:T A[D('result' java.lang.Object)])  (LINE:143)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('result' java.lang.Object)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:135)\l0x0015: IPUT  (r0 I:int), (r2 I:kotlin.sequences.SequenceBuilderIterator) kotlin.sequences.SequenceBuilderIterator.state int \l0x0017: IGET  (r0 I:java.util.Iterator\<? extends T\>) = (r2 I:kotlin.sequences.SequenceBuilderIterator) kotlin.sequences.SequenceBuilderIterator.nextIterator java.util.Iterator  (LINE:136)\l0x0019: INVOKE  (r0 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x001c: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|RETURN\l|0x0020: RETURN  (r0 I:T) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: INVOKE  (r0 I:java.lang.Object) = (r2 I:kotlin.sequences.SequenceBuilderIterator) type: DIRECT call: kotlin.sequences.SequenceBuilderIterator.nextNotReady():java.lang.Object A[MD:():T (m)] (LINE:133)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|RETURN\l|0x0025: RETURN  (r0 I:T) \l}"];
MethodNode[shape=record,label="{public T kotlin.sequences.SequenceBuilderIterator.next((r2 'this' I:kotlin.sequences.SequenceBuilderIterator\<T\> A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:7:0x0013 \-\> B:1:?, CROSS_EDGE: B:9:0x0020 \-\> B:1:?, CROSS_EDGE: B:11:0x0025 \-\> B:1:?\lDebug Info:\l  0x0010\-0x0014: r0 'result' Ljava\/lang\/Object;\lTYPE_VARS: [T]\lSIGNATURE: ()TT;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Iterator.next():E\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_3 -> Node_8;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_1;
}

