digraph "CFG forkotlin.sequences.SequenceBuilderIterator.next()Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|switch(r2.state) \{\l    case 0: goto L10;\l    case 1: goto L10;\l    case 2: goto L8;\l    case 3: goto L6;\l    default: goto L3;\l\}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005}"];
Node_5 [shape=record,label="{5\:\ 0x0009|throw exceptionalState()\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|r2.state = 0\lT r0 = r2.nextValue\lr2.nextValue = null\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|RETURN\l|return r0\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|r2.state = 1\ljava.util.Iterator\<? extends T\> r0 = r2.nextIterator\lkotlin.jvm.internal.Intrinsics.checkNotNull(r0)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|RETURN\l|return r0.next()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021}"];
Node_11 [shape=record,label="{11\:\ 0x0025|RETURN\l|return nextNotReady()\l}"];
MethodNode[shape=record,label="{public T kotlin.sequences.SequenceBuilderIterator.next((r2v0 'this' kotlin.sequences.SequenceBuilderIterator\<T\> A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:7:0x0013 \-\> B:1:?, CROSS_EDGE: B:9:0x0020 \-\> B:1:?, CROSS_EDGE: B:11:0x0025 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: ()TT;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Iterator.next():E\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_3 -> Node_8;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_1;
}

