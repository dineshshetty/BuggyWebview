digraph "CFG forkotlin.sequences.DistinctIterator.computeNext()V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|LOOP_START\lLOOP:0: B:14:0x0000\-\>B:17:0x001a\l|0x0000: IGET  (r0 I:java.util.Iterator\<T\>) = (r3 I:kotlin.sequences.DistinctIterator) kotlin.sequences.DistinctIterator.source java.util.Iterator  (LINE:570)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0020 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: IGET  (r0 I:java.util.Iterator\<T\>) = (r3 I:kotlin.sequences.DistinctIterator) kotlin.sequences.DistinctIterator.source java.util.Iterator  (LINE:571)\l0x000a: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x000e: IGET  (r1 I:kotlin.jvm.functions.Function1\<T, K\>) = (r3 I:kotlin.sequences.DistinctIterator) kotlin.sequences.DistinctIterator.keySelector kotlin.jvm.functions.Function1  (LINE:572)\l0x0010: INVOKE  (r1 I:java.lang.Object) = (r1 I:kotlin.jvm.functions.Function1), (r0 I:java.lang.Object A[D('next' java.lang.Object)]) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0014: IGET  (r2 I:java.util.HashSet\<K\>) = (r3 I:kotlin.sequences.DistinctIterator) kotlin.sequences.DistinctIterator.observed java.util.HashSet  (LINE:574)\l0x0016: INVOKE  (r2 I:boolean) = (r2 I:java.util.HashSet), (r1 I:java.lang.Object A[D('key' java.lang.Object)]) type: VIRTUAL call: java.util.HashSet.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x001a|LOOP_END\lLOOP:0: B:14:0x0000\-\>B:17:0x001a\l|0x001a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0000 \l}"];
Node_23 [shape=record,label="{23\:\ 0x001c|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x001c|0x001c: INVOKE  (r3 I:kotlin.sequences.DistinctIterator), (r0 I:java.lang.Object A[D('next' java.lang.Object)]) type: VIRTUAL call: kotlin.sequences.DistinctIterator.setNext(java.lang.Object):void A[MD:(T):void (m)] (LINE:575)\l}"];
Node_19 [shape=record,label="{19\:\ 0x001f|RETURN\l|0x001f: RETURN    (LINE:576)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0020|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0020|0x0020: INVOKE  (r3 I:kotlin.sequences.DistinctIterator) type: VIRTUAL call: kotlin.sequences.DistinctIterator.done():void A[MD:():void (m)] (LINE:580)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0023|RETURN\l|0x0023: RETURN    (LINE:581)\l}"];
MethodNode[shape=record,label="{protected void kotlin.sequences.DistinctIterator.computeNext((r3 'this' I:kotlin.sequences.DistinctIterator\<T, K\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:17:0x001a \-\> B:14:0x0000, CROSS_EDGE: B:21:0x0023 \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000e\-0x0020: r0 'next' Ljava\/lang\/Object;\l  0x0014\-0x0020: r1 'key' Ljava\/lang\/Object;\lTYPE_VARS: [T, K]\lMETHOD_OVERRIDE: [kotlin.collections.AbstractIterator.computeNext():void]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_14;
Node_17 -> Node_23[style=dashed];
Node_23 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_13;
Node_22 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_13;
}

