digraph "CFG forkotlin.sequences.DistinctIterator.computeNext()V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|LOOP_START\lLOOP:0: B:14:0x0000\-\>B:17:0x001a\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|if (r3.source.hasNext() == false) goto L9\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|java.lang.Object r0 = r3.source.next()\ljava.lang.Object r1 = r3.keySelector.invoke(r0)\l}"];
Node_17 [shape=record,label="{17\:\ 0x001a|LOOP_END\lLOOP:0: B:14:0x0000\-\>B:17:0x001a\l|if (r3.observed.add(r1) == false) goto L1\l}"];
Node_23 [shape=record,label="{23\:\ 0x001c|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x001c|setNext(r0)\l}"];
Node_19 [shape=record,label="{19\:\ 0x001f|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0020|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0020|done()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0023|RETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void kotlin.sequences.DistinctIterator.computeNext((r3v0 'this' kotlin.sequences.DistinctIterator\<T, K\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:17:0x001a \-\> B:14:0x0000, CROSS_EDGE: B:21:0x0023 \-\> B:13:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T, K]\lMETHOD_OVERRIDE: [kotlin.collections.AbstractIterator.computeNext():void]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_14;
Node_17 -> Node_23[style=dashed];
Node_23 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_13;
Node_22 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_13;
}

