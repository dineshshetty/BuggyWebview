digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|java.lang.Object r0 = kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED()\l}"];
Node_32 [shape=record,label="{32\:\ 0x0006|switch(r10.label) \{\l    case 0: goto L23;\l    case 1: goto L21;\l    case 2: goto L6;\l    default: goto L3;\l\}\l}"];
Node_33 [shape=record,label="{33\:\ 0x0009}"];
Node_34 [shape=record,label="{34\:\ 0x0010|throw new java.lang.IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\")\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0011|r1 = r10\lint r2 = r1.I$0\ljava.lang.Object r3 = r1.L$2\ljava.util.Iterator r4 = (java.util.Iterator) r1.L$1\lkotlin.sequences.SequenceScope r5 = (kotlin.sequences.SequenceScope) r1.L$0\lkotlin.ResultKt.throwOnFailure(r11)\lr3 = r2\lr2 = r3\l}"];
Node_57 [shape=record,label="{57\:\ 0x0066|SYNTHETIC\lPHI: r1 r2 r3 r4 r5 \l  PHI: (r1v4 'accumulator' kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1) = (r1v2 'accumulator' kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1), (r1v5 'accumulator' kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1) binds: [B:42:0x0061, B:35:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v6 'accumulator' java.lang.Object) = (r2v4 'accumulator' java.lang.Object), (r2v13 'accumulator' java.lang.Object) binds: [B:42:0x0061, B:35:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v5 'index' int) = (r3v2 'index' int), (r3v11 'index' int) binds: [B:42:0x0061, B:35:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v6 'iterator' java.util.Iterator) = (r4v3 'iterator' java.util.Iterator), (r4v8 'iterator' java.util.Iterator) binds: [B:42:0x0061, B:35:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v5 '$this$sequence' kotlin.sequences.SequenceScope) = (r5v4 '$this$sequence' kotlin.sequences.SequenceScope), (r5v7 '$this$sequence' kotlin.sequences.SequenceScope) binds: [B:42:0x0061, B:35:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0066|LOOP_START\lLOOP:0: B:43:0x0066\-\>B:51:0x0096\lPHI: r2 r3 \l  PHI: (r2v7 'accumulator' java.lang.Object) = (r2v6 'accumulator' java.lang.Object), (r2v11 'accumulator' java.lang.Object) binds: [B:57:0x0066, B:51:0x0096] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v6 'index' int) = (r3v5 'index' int), (r3v9 'index' int) binds: [B:57:0x0066, B:51:0x0096] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_44 [shape=record,label="{44\:\ 0x006a|if (r4.hasNext() == false) goto L18\l}"];
Node_45 [shape=record,label="{45\:\ 0x006c|kotlin.jvm.functions.Function3\<java.lang.Integer, S, T, S\> r6 = r1.$operation\lint r7 = r3 + 1\l}"];
Node_46 [shape=record,label="{46\:\ 0x0070|if (r3 \>= 0) goto L13\l}"];
Node_47 [shape=record,label="{47\:\ 0x0072|kotlin.collections.CollectionsKt.throwIndexOverflow()\l}"];
Node_48 [shape=record,label="{48\:\ 0x0075|java.lang.Object r3 = r6.invoke(kotlin.coroutines.jvm.internal.boxing.boxInt(r3), r2, r4.next())\lr1.L$0 = r5\lr1.L$1 = r4\lr1.L$2 = r3\lr1.I$0 = r7\lr1.label = 2\l}"];
Node_49 [shape=record,label="{49\:\ 0x0093|if (r5.yield(r3, (kotlin.coroutines.Continuation) r1) != r0) goto L15\l}"];
Node_51 [shape=record,label="{51\:\ 0x0096|LOOP_END\lLOOP:0: B:43:0x0066\-\>B:51:0x0096\l|r2 = r3\lr3 = r7\l}"];
Node_55 [shape=record,label="{55\:\ 0x0095|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0095|RETURN\l|return r0\l}"];
Node_56 [shape=record,label="{56\:\ 0x0099|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0099}"];
Node_54 [shape=record,label="{54\:\ 0x009b|RETURN\l|return kotlin.Unit.INSTANCE\l}"];
Node_36 [shape=record,label="{36\:\ 0x0026|r1 = r10\ljava.lang.Object r2 = r1.L$2\ljava.util.Iterator r3 = (java.util.Iterator) r1.L$1\lkotlin.sequences.SequenceScope r4 = (kotlin.sequences.SequenceScope) r1.L$0\lkotlin.ResultKt.throwOnFailure(r11)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0061|PHI: r1 r2 r3 r4 \l  PHI: (r1v2 'accumulator' kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1) = (r1v1 'accumulator' kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1), (r1v3 'accumulator' kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1) binds: [B:40:0x005e, B:36:0x0026] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v4 'accumulator' java.lang.Object) = (r2v3 'accumulator' java.lang.Object), (r2v5 'accumulator' java.lang.Object) binds: [B:40:0x005e, B:36:0x0026] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'iterator' java.util.Iterator) = (r3v0 'iterator' java.util.Iterator), (r3v4 'iterator' java.util.Iterator) binds: [B:40:0x005e, B:36:0x0026] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 '$this$sequence' kotlin.sequences.SequenceScope) = (r4v1 '$this$sequence' kotlin.sequences.SequenceScope), (r4v5 '$this$sequence' kotlin.sequences.SequenceScope) binds: [B:40:0x005e, B:36:0x0026] A[DONT_GENERATE, DONT_INLINE]\l|r9 = r4\lr4 = r3\lr3 = 1\lr5 = r9\l}"];
Node_37 [shape=record,label="{37\:\ 0x0035|kotlin.ResultKt.throwOnFailure(r11)\lr1 = r10\lkotlin.sequences.SequenceScope r4 = (kotlin.sequences.SequenceScope) r1.L$0\ljava.util.Iterator r3 = r1.$this_runningReduceIndexed.iterator()\l}"];
Node_38 [shape=record,label="{38\:\ 0x0048|if (r3.hasNext() == false) goto L19\l}"];
Node_39 [shape=record,label="{39\:\ 0x004a|java.lang.Object r2 = r3.next()\lr1.L$0 = r4\lr1.L$1 = r3\lr1.L$2 = r2\lr1.label = 1\l}"];
Node_40 [shape=record,label="{40\:\ 0x005e|if (r4.yield(r2, r1) != r0) goto L22\l}"];
Node_41 [shape=record,label="{41\:\ 0x0060|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.invokeSuspend((r10v0 'this' kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1 A[IMMUTABLE_TYPE, THIS]), (r11v0 '$result' java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:50:0x0095 \-\> B:30:?, BACK_EDGE: B:51:0x0096 \-\> B:43:0x0066, CROSS_EDGE: B:46:0x0070 \-\> B:48:0x0075, CROSS_EDGE: B:54:0x009b \-\> B:30:?, CROSS_EDGE: B:42:0x0061 \-\> B:43:0x0066, CROSS_EDGE: B:41:0x0060 \-\> B:30:?, CROSS_EDGE: B:40:0x005e \-\> B:42:0x0061, CROSS_EDGE: B:38:0x0048 \-\> B:53:0x0099\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [2369=4]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_35;
Node_32 -> Node_36;
Node_32 -> Node_37;
Node_33 -> Node_34;
Node_34 -> Node_30;
Node_35 -> Node_57;
Node_57 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_56;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_51;
Node_49 -> Node_55[style=dashed];
Node_51 -> Node_43;
Node_55 -> Node_50;
Node_50 -> Node_30;
Node_56 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_30;
Node_36 -> Node_42;
Node_42 -> Node_57;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_53;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_30;
}

