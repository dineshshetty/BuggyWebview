digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1.invoke(Ljava\/lang\/Object;)Ljava\/lang\/Boolean;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:kotlin.jvm.internal.Ref$BooleanRef) = (r2 I:kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1) kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1.$removed kotlin.jvm.internal.Ref$BooleanRef  (LINE:2603)\l0x0002: IGET  (r0 I:boolean) = (r0 I:kotlin.jvm.internal.Ref$BooleanRef) kotlin.jvm.internal.Ref.BooleanRef.element boolean \l0x0004: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IGET  (r0 I:T) = (r2 I:kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1) kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1.$element java.lang.Object \l0x0009: INVOKE  (r0 I:boolean) = (r3 I:java.lang.Object A[D('it' java.lang.Object)]), (r0 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IGET  (r0 I:kotlin.jvm.internal.Ref$BooleanRef) = (r2 I:kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1) kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1.$removed kotlin.jvm.internal.Ref$BooleanRef \l0x0011: IPUT  (r1 I:boolean), (r0 I:kotlin.jvm.internal.Ref$BooleanRef) kotlin.jvm.internal.Ref.BooleanRef.element boolean \l0x0013: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: INVOKE  (r0 I:java.lang.Boolean) = (r1 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:java.lang.Boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final java.lang.Boolean kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1.invoke((r2 'this' I:kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1 A[IMMUTABLE_TYPE, THIS]), (r3 I:T A[D('it' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000d \-\> B:7:0x0014, CROSS_EDGE: B:3:0x0005 \-\> B:7:0x0014\lTYPE_VARS: EMPTY\lSIGNATURE: (TT;)Ljava\/lang\/Boolean;\lDebug Info:\l  \-1 \-0x0018: r3 'it' Ljava\/lang\/Object;\lBRIDGED_BY: kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1.invoke(java.lang.Object):java.lang.Boolean\lJadxCommentsAttr\{\l WARN: \l \-\> Can't rename method to resolve collision\}\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function1.invoke(P1):R]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_1;
}

