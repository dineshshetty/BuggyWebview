digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1.invoke(Ljava\/lang\/Object;)Ljava\/lang\/Boolean;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|r1 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r2.$removed.element != false) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007}"];
Node_5 [shape=record,label="{5\:\ 0x000d|if (kotlin.jvm.internal.Intrinsics.areEqual(r3, r2.$element) == false) goto L6\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|r2.$removed.element = true\lr1 = false\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v0 boolean), (r1v2 boolean) binds: [B:3:0x0005, B:5:0x000d, B:6:0x000f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|RETURN\l|return java.lang.Boolean.valueOf(r1)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final java.lang.Boolean kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1.invoke((r2v0 'this' kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1 A[IMMUTABLE_TYPE, THIS]), (r3v0 T A[D('it' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000d \-\> B:7:0x0014, CROSS_EDGE: B:3:0x0005 \-\> B:7:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (TT;)Ljava\/lang\/Boolean;\lBRIDGED_BY: kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1.invoke(java.lang.Object):java.lang.Boolean\lJadxCommentsAttr\{\l WARN: \l \-\> Can't rename method to resolve collision\}\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function1.invoke(P1):R]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_1;
}

