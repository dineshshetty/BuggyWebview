digraph "CFG forkotlin.collections.IndexingIterator.next()Lkotlin\/collections\/IndexedValue;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlin.collections.IndexedValue) =  kotlin.collections.IndexedValue  (LINE:41)\l0x0002: IGET  (r1 I:int) = (r3 I:kotlin.collections.IndexingIterator) kotlin.collections.IndexingIterator.index int \l0x0004: ARITH  (r2 I:int) = (r1 I:int) + (1 int) \l0x0006: IPUT  (r2 I:int), (r3 I:kotlin.collections.IndexingIterator) kotlin.collections.IndexingIterator.index int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0008|0x0008: IF  (r1 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:12:0x000d \l}"];
Node_11 [shape=record,label="{11\:\ 0x000a|0x000a: INVOKE   type: STATIC call: kotlin.collections.CollectionsKt.throwIndexOverflow():void A[MD:():void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x000d|0x000d: IGET  (r2 I:java.util.Iterator\<T\>) = (r3 I:kotlin.collections.IndexingIterator) kotlin.collections.IndexingIterator.iterator java.util.Iterator \l0x000f: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0013: INVOKE  (r0 I:kotlin.collections.IndexedValue), (r1 I:int), (r2 I:java.lang.Object) type: DIRECT call: kotlin.collections.IndexedValue.\<init\>(int, java.lang.Object):void A[MD:(int, T):void (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:kotlin.collections.IndexedValue\<T\>) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlin.collections.IndexedValue\<T\> kotlin.collections.IndexingIterator.next((r3 'this' I:kotlin.collections.IndexingIterator\<T\> A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x0008 \-\> B:12:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: ()Lkotlin\/collections\/IndexedValue\<TT;\>;\lREPLACED_BY: kotlin.collections.IndexingIterator.next():java.lang.Object\lMETHOD_OVERRIDE: [ClspMth\{java.util.Iterator.next():E\}]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

