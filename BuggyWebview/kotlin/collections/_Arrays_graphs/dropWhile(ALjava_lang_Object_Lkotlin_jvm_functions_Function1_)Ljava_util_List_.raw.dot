digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.dropWhile([Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('$this$dropWhile' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r8 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3630)\l0x000c: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:3631)\l0x000e: INVOKE  (r2 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0011: ARRAY_LENGTH  (r3 I:int) = (r7 I:??[] A[D('$this$dropWhile' java.lang.Object[])])  (LINE:3632)\l0x0012: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|LOOP_START\lLOOP:0: B:20:0x0013\-\>B:27:0x002d\l|0x0013: IF  (r4 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:30:0x0030 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|0x0015: AGET  (r5 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][] A[D('$this$dropWhile' java.lang.Object[])]), (r4 I:??[int, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0017|0x0017: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('yielding' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x001d  (LINE:3633)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|0x0019: INVOKE  (r2 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r5 I:java.lang.Object A[D('item' java.lang.Object)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:3634)\l}"];
Node_32 [shape=record,label="{32\:\ 0x002d|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x002d|LOOP_END\lLOOP:0: B:20:0x0013\-\>B:27:0x002d\l|0x002d: ARITH  (r4 I:int) = (r4 I:int) + (1 int)  (LINE:3632)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001d|0x001d: INVOKE  (r6 I:java.lang.Object) = \l  (r8 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)])\l  (r5 I:java.lang.Object A[D('item' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:3635)\l0x0021: CHECK_CAST (r6 I:java.lang.Boolean) = (java.lang.Boolean) (r6 I:??[OBJECT, ARRAY]) \l0x0023: INVOKE  (r6 I:boolean) = (r6 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0027|0x0027: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x002d \l}"];
Node_26 [shape=record,label="{26\:\ 0x0029|0x0029: INVOKE  (r2 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r5 I:java.lang.Object A[D('item' java.lang.Object)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:3636)\l0x002c: CONST  (r1 I:??[boolean, int, float, short, byte, char] A[D('yielding' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:3637)\l}"];
Node_31 [shape=record,label="{31\:\ 0x002d|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x002d|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0030|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0030|0x0030: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('list' java.util.ArrayList)])  (LINE:3639)\l0x0031: CHECK_CAST (r3 I:java.util.List) = (java.util.List) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0033|RETURN\l|0x0033: RETURN  (r3 I:java.util.List\<T\>) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.ArraysKt___ArraysKt.dropWhile((r7 I:T[] A[D('$this$dropWhile' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x002d \-\> B:20:0x0013, CROSS_EDGE: B:26:0x0029 \-\> B:27:0x002d, CROSS_EDGE: B:25:0x0027 \-\> B:27:0x002d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0017\-0x0030: r5 'item' Ljava\/lang\/Object;\l  0x000b\-0x0033: r0 '$i$f$dropWhile' I\l  0x000c\-0x0033: r1 'yielding' Z\l  0x0011\-0x0033: r2 'list' Ljava\/util\/ArrayList;\l  \-1 \-0x0033: r7 '$this$dropWhile' [Ljava\/lang\/Object;\l  \-1 \-0x0033: r8 'predicate' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)Ljava\/util\/List\<TT;\>;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_30;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_32;
Node_32 -> Node_27;
Node_27 -> Node_20;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_33;
Node_26 -> Node_31;
Node_31 -> Node_27;
Node_33 -> Node_27;
Node_30 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_18;
}

