digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.runningReduce([SLkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$runningReduce' short[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"operation\" \l0x0007: INVOKE  (r7 I:java.lang.Object A[D('operation' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: ARRAY_LENGTH  (r0 I:int) = (r6 I:??[] A[D('$this$runningReduce' short[])])  (LINE:21339)\l0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0010 \l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|0x000e: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0018 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0013|0x0013: INVOKE  (r0 I:java.util.List) =  type: STATIC call: kotlin.collections.CollectionsKt.emptyList():java.util.List A[MD:\<T\>:():java.util.List\<T\> (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:java.util.List\<java.lang.Short\>) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0018|0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:21340)\l0x0019: AGET  (r0 I:short A[D('accumulator' short), IMMUTABLE_TYPE]) = (r6 I:short[] A[D('$this$runningReduce' short[]), IMMUTABLE_TYPE]), (r1 I:??[int, short, byte, char]) \l0x001b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:21341)\l0x001d: ARRAY_LENGTH  (r2 I:int) = (r6 I:??[] A[D('$this$runningReduce' short[])]) \l0x001e: INVOKE  (r1 I:java.util.ArrayList), (r2 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0021: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0022: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:24725)\l0x0023: INVOKE  (r4 I:java.lang.Short) = (r0 I:short A[D('accumulator' short)]) type: STATIC call: java.lang.Short.valueOf(short):java.lang.Short A[MD:(short):java.lang.Short (c)] (LINE:21341)\l0x0027: INVOKE  (r2 I:java.util.ArrayList A[D('$this$runningReduce_u24lambda_u2d146' java.util.ArrayList)]), (r4 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x002a: CONST  (r2 I:??[boolean, int, float, short, byte, char] A[D('$this$runningReduce_u24lambda_u2d146' java.util.ArrayList)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:21342)\l0x002b: ARRAY_LENGTH  (r3 I:int) = (r6 I:??[] A[D('$this$runningReduce' short[])]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x002c|LOOP_START\lLOOP:0: B:25:0x002c\-\>B:26:0x002e\l|0x002c: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:29:0x004c \l}"];
Node_26 [shape=record,label="{26\:\ 0x002e|LOOP_END\lLOOP:0: B:25:0x002c\-\>B:26:0x002e\l|0x002e: INVOKE  (r4 I:java.lang.Short) = (r0 I:short A[D('accumulator' short)]) type: STATIC call: java.lang.Short.valueOf(short):java.lang.Short A[MD:(short):java.lang.Short (c)] (LINE:21343)\l0x0032: AGET  (r5 I:short A[IMMUTABLE_TYPE]) = (r6 I:short[] A[D('$this$runningReduce' short[]), IMMUTABLE_TYPE]), (r2 I:??[int, short, byte, char] A[D('index' int)]) \l0x0034: INVOKE  (r5 I:java.lang.Short) = (r5 I:short) type: STATIC call: java.lang.Short.valueOf(short):java.lang.Short A[MD:(short):java.lang.Short (c)]\l0x0038: INVOKE  (r4 I:java.lang.Object) = \l  (r7 I:kotlin.jvm.functions.Function2 A[D('operation' kotlin.jvm.functions.Function2)])\l  (r4 I:java.lang.Object)\l  (r5 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x003c: CHECK_CAST (r4 I:java.lang.Number) = (java.lang.Number) (r4 I:??[OBJECT, ARRAY]) \l0x003e: INVOKE  (r0 I:short A[D('accumulator' short)]) = (r4 I:java.lang.Number) type: VIRTUAL call: java.lang.Number.shortValue():short A[MD:():short (c)]\l0x0042: INVOKE  (r4 I:java.lang.Short) = (r0 I:short A[D('accumulator' short)]) type: STATIC call: java.lang.Short.valueOf(short):java.lang.Short A[MD:(short):java.lang.Short (c)] (LINE:21344)\l0x0046: INVOKE  (r1 I:java.util.ArrayList A[D('result' java.util.ArrayList)]), (r4 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0049: ARITH  (r2 I:int) = (r2 I:int A[D('index' int)]) + (1 int)  (LINE:21342)\l}"];
Node_29 [shape=record,label="{29\:\ 0x004c|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x004c|0x004c: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('index' int)]) = (r1 I:??[OBJECT, ARRAY] A[D('result' java.util.ArrayList)])  (LINE:21346)\l0x004d: CHECK_CAST (r2 I:java.util.List) = (java.util.List) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x004f|RETURN\l|0x004f: RETURN  (r2 I:java.util.List\<java.lang.Short\>) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|0x0010: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private static final java.util.List\<java.lang.Short\> kotlin.collections.ArraysKt___ArraysKt.runningReduce((r6 I:short[] A[D('$this$runningReduce' short[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function2\<? super java.lang.Short, ? super java.lang.Short, java.lang.Short\> A[D('operation' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x002e \-\> B:25:0x002c, CROSS_EDGE: B:28:0x004f \-\> B:16:?, CROSS_EDGE: B:20:0x0010 \-\> B:21:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0022\-0x002a: r2 '$this$runningReduce_u24lambda_u2d146' Ljava\/util\/ArrayList;\l  0x0023\-0x002a: r3 '$i$a$\-apply\-ArraysKt___ArraysKt$runningReduce$result$3' I\l  0x002b\-0x004c: r2 'index' I\l  0x0019\-0x004f: r0 'accumulator' S\l  0x002a\-0x004f: r1 'result' Ljava\/util\/ArrayList;\l  \-1 \-0x004f: r6 '$this$runningReduce' [S\l  \-1 \-0x004f: r7 'operation' Lkotlin\/jvm\/functions\/Function2;\lSIGNATURE: ([SLkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Short;\-Ljava\/lang\/Short;Ljava\/lang\/Short;\>;)Ljava\/util\/List\<Ljava\/lang\/Short;\>;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_16;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_25;
Node_29 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_16;
Node_20 -> Node_21;
}

