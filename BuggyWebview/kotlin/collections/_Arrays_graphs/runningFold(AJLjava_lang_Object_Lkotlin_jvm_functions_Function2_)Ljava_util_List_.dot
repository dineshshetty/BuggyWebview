digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.runningFold([JLjava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"operation\")\lr1 = 0\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|if (r7.length != 0) goto L14\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|r0 = true\l}"];
Node_21 [shape=record,label="{21\:\ 0x0012|PHI: r0 \l  PHI: (r0v4 boolean) = (r0v3 boolean), (r0v7 boolean) binds: [B:20:0x0011, B:19:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L8\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014}"];
Node_23 [shape=record,label="{23\:\ 0x0018|RETURN\l|return kotlin.collections.CollectionsKt.listOf(r8)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0019|java.util.ArrayList r0 = new java.util.ArrayList(r7.length + 1)\lr0.add(r8)\lr2 = (java.lang.Object) r8\lint r3 = r7.length\l}"];
Node_25 [shape=record,label="{25\:\ 0x0027|LOOP_START\lLOOP:0: B:25:0x0027\-\>B:26:0x0029\lPHI: r1 r2 \l  PHI: (r1v1 int) = (r1v0 int), (r1v4 int) binds: [B:24:0x0019, B:26:0x0029] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 'accumulator' java.lang.Object) = (r2v2 'accumulator' java.lang.Object), (r2v4 'accumulator' java.lang.Object) binds: [B:24:0x0019, B:26:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r3) goto L11\l}"];
Node_26 [shape=record,label="{26\:\ 0x0029|LOOP_END\lLOOP:0: B:25:0x0027\-\>B:26:0x0029\l|r4 = r7[r1]\ljava.lang.Object r2 = r2\ljava.lang.Object r2 = (R) r9.invoke(r2, java.lang.Long.valueOf(r4))\lr0.add(r2)\lint r1 = r1 + 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x0039|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0039}"];
Node_28 [shape=record,label="{28\:\ 0x003c|RETURN\l|return r0\l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|r0 = false\l}"];
MethodNode[shape=record,label="{private static final java.util.List\<R\> kotlin.collections.ArraysKt___ArraysKt.runningFold((r7v0 '$this$runningFold' long[] A[D('$this$runningFold' long[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 R A[D('initial' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'operation' kotlin.jvm.functions.Function2\<? super R, ? super java.lang.Long, ? extends R\> A[D('operation' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x0029 \-\> B:25:0x0027, CROSS_EDGE: B:28:0x003c \-\> B:16:?, CROSS_EDGE: B:20:0x0011 \-\> B:21:0x0012\lINLINE_NOT_NEEDED\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>([JTR;Lkotlin\/jvm\/functions\/Function2\<\-TR;\-Ljava\/lang\/Long;+TR;\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_16;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_25;
Node_29 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_16;
Node_20 -> Node_21;
}

