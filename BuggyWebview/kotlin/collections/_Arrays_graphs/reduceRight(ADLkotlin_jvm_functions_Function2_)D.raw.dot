digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.reduceRight([DLkotlin\/jvm\/functions\/Function2;)D" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('$this$reduceRight' double[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"operation\" \l0x0007: INVOKE  (r8 I:java.lang.Object A[D('operation' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:int) = (r7 I:double[] A[D('$this$reduceRight' double[])]) type: STATIC call: kotlin.collections.ArraysKt.getLastIndex(double[]):int A[MD:(double[]):int (m)] (LINE:20170)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000f|0x000f: IF  (r1 I:??[int, byte, short, char] A[D('index' int)]) \< (0 ??[int, byte, short, char])  \-\> B:19:0x0030  (LINE:20171)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0011|0x0011: ARITH  (r2 I:int) = (r1 I:int A[D('index' int)]) + (\-1 int)  (LINE:20172)\l0x0013: AGET  (r3 I:??[long, double]) = (r7 I:??[long, double][] A[D('$this$reduceRight' double[])]), (r1 I:??[int, short, byte, char] A[D('index' int)]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0015|LOOP_START\lLOOP:0: B:16:0x0015\-\>B:17:0x0017\l|0x0015: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \< (0 ??[int, byte, short, char])  \-\> B:21:0x002f  (LINE:20173)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|LOOP_END\lLOOP:0: B:16:0x0015\-\>B:17:0x0017\l|0x0017: ARITH  (r1 I:int) = (r2 I:int A[D('index' int)]) + (\-1 int)  (LINE:20174)\l0x0019: AGET  (r5 I:??[long, double]) = (r7 I:??[long, double][] A[D('$this$reduceRight' double[])]), (r2 I:??[int, short, byte, char] A[D('index' int)]) \l0x001b: INVOKE  (r2 I:java.lang.Double) = (r5 I:double) type: STATIC call: java.lang.Double.valueOf(double):java.lang.Double A[MD:(double):java.lang.Double (c)]\l0x001f: INVOKE  (r5 I:java.lang.Double) = (r3 I:double A[D('accumulator' double)]) type: STATIC call: java.lang.Double.valueOf(double):java.lang.Double A[MD:(double):java.lang.Double (c)]\l0x0023: INVOKE  (r2 I:java.lang.Object) = \l  (r8 I:kotlin.jvm.functions.Function2 A[D('operation' kotlin.jvm.functions.Function2)])\l  (r2 I:java.lang.Object)\l  (r5 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x0027: CHECK_CAST (r2 I:java.lang.Number) = (java.lang.Number) (r2 I:??[OBJECT, ARRAY]) \l0x0029: INVOKE  (r3 I:double A[D('accumulator' double)]) = (r2 I:java.lang.Number) type: VIRTUAL call: java.lang.Number.doubleValue():double A[MD:():double (c)]\l0x002d: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x002f|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x002f|RETURN\l|0x002f: RETURN  (r3 I:double A[D('accumulator' double)])  (LINE:20176)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0030|0x0030: NEW_INSTANCE  (r2 I:java.lang.UnsupportedOperationException A[D('index' int)]) =  java.lang.UnsupportedOperationException  (LINE:20171)\l0x0032: CONST_STR  (r3 I:java.lang.String) =  \"Empty array can't be reduced.\" \l0x0034: INVOKE  (r2 I:java.lang.UnsupportedOperationException), (r3 I:java.lang.String) type: DIRECT call: java.lang.UnsupportedOperationException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0037|0x0037: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final double kotlin.collections.ArraysKt___ArraysKt.reduceRight((r7 I:double[] A[D('$this$reduceRight' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function2\<? super java.lang.Double, ? super java.lang.Double, java.lang.Double\> A[D('operation' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:17:0x0017 \-\> B:16:0x0015, CROSS_EDGE: B:20:0x0037 \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x0013: r1 'index' I\l  0x0013\-0x0019: r2 'index' I\l  0x0019\-0x002f: r1 'index' I\l  0x002f\-0x0030: r2 'index' I\l  0x0015\-0x0030: r3 'accumulator' D\l  0x000b\-0x0037: r0 '$i$f$reduceRight' I\l  0x0030\-0x0037: r1 'index' I\l  \-1 \-0x0037: r7 '$this$reduceRight' [D\l  \-1 \-0x0037: r8 'operation' Lkotlin\/jvm\/functions\/Function2;\lSIGNATURE: ([DLkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Double;\-Ljava\/lang\/Double;Ljava\/lang\/Double;\>;)D\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_16;
Node_21 -> Node_18;
Node_18 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
}

