digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.associateBy([DLkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r11, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r12, \"keySelector\")\lint r1 = kotlin.ranges.RangesKt.coerceAtLeast(kotlin.collections.MapsKt.mapCapacity(r11.length), 16)\ljava.util.Map r2 = new java.util.LinkedHashMap(r1)\lint r5 = r11.length\lr6 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|LOOP_START\lLOOP:0: B:11:0x0021\-\>B:12:0x0023\lPHI: r6 \l  PHI: (r6v1 int) = (r6v0 int), (r6v2 int) binds: [B:10:0x0000, B:12:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 \>= r5) goto L4\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|LOOP_END\lLOOP:0: B:11:0x0021\-\>B:12:0x0023\l|r7 = r11[r6]\lr2.put(r12.invoke(java.lang.Double.valueOf(r7)), java.lang.Double.valueOf(r7))\lint r6 = r6 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|RETURN\l|return r2\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, java.lang.Double\> kotlin.collections.ArraysKt___ArraysKt.associateBy((r11v0 '$this$associateBy' double[] A[D('$this$associateBy' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'keySelector' kotlin.jvm.functions.Function1\<? super java.lang.Double, ? extends K\> A[D('keySelector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x0023 \-\> B:11:0x0021\lINLINE_NOT_NEEDED\lTYPE_VARS: [K]\lSIGNATURE: \<K:Ljava\/lang\/Object;\>([DLkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Double;+TK;\>;)Ljava\/util\/Map\<TK;Ljava\/lang\/Double;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_11;
Node_15 -> Node_14;
Node_14 -> Node_9;
}

