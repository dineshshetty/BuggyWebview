digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.takeWhile([DLkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('$this$takeWhile' double[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r8 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:5351)\l0x000d: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0010: ARRAY_LENGTH  (r2 I:int) = (r7 I:??[] A[D('$this$takeWhile' double[])])  (LINE:5352)\l0x0011: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0012|LOOP_START\lLOOP:0: B:15:0x0012\-\>B:19:0x0027\l|0x0012: IF  (r3 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:22:0x0031 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0014|0x0014: AGET  (r4 I:??[long, double]) = (r7 I:??[long, double][] A[D('$this$takeWhile' double[])]), (r3 I:??[int, short, byte, char]) \l0x0016: INVOKE  (r6 I:java.lang.Double) = (r4 I:double A[D('item' double)]) type: STATIC call: java.lang.Double.valueOf(double):java.lang.Double A[MD:(double):java.lang.Double (c)] (LINE:5353)\l0x001a: INVOKE  (r6 I:java.lang.Object) = (r8 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)]), (r6 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x001e: CHECK_CAST (r6 I:java.lang.Boolean) = (java.lang.Boolean) (r6 I:??[OBJECT, ARRAY]) \l0x0020: INVOKE  (r6 I:boolean) = (r6 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0024|0x0024: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0027 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0027|LOOP_END\lLOOP:0: B:15:0x0012\-\>B:19:0x0027\l|0x0027: INVOKE  (r6 I:java.lang.Double) = (r4 I:double A[D('item' double)]) type: STATIC call: java.lang.Double.valueOf(double):java.lang.Double A[MD:(double):java.lang.Double (c)] (LINE:5355)\l0x002b: INVOKE  (r1 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r6 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x002e: ARITH  (r3 I:int) = (r3 I:int) + (1 int)  (LINE:5352)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0031|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0031|0x0031: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('list' java.util.ArrayList)])  (LINE:5357)\l0x0032: CHECK_CAST (r2 I:java.util.List) = (java.util.List) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0034|RETURN\l|0x0034: RETURN  (r2 I:java.util.List\<java.lang.Double\>) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0031|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<java.lang.Double\> kotlin.collections.ArraysKt___ArraysKt.takeWhile((r7 I:double[] A[D('$this$takeWhile' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function1\<? super java.lang.Double, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0027 \-\> B:15:0x0012, CROSS_EDGE: B:15:0x0012 \-\> B:20:0x0031\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0031: r4 'item' D\l  0x000b\-0x0034: r0 '$i$f$takeWhile' I\l  0x0010\-0x0034: r1 'list' Ljava\/util\/ArrayList;\l  \-1 \-0x0034: r7 '$this$takeWhile' [D\l  \-1 \-0x0034: r8 'predicate' Lkotlin\/jvm\/functions\/Function1;\lSIGNATURE: ([DLkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Double;Ljava\/lang\/Boolean;\>;)Ljava\/util\/List\<Ljava\/lang\/Double;\>;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_23[style=dashed];
Node_19 -> Node_15;
Node_23 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_22 -> Node_20;
}

