digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.groupByTo([Ljava\/lang\/Object;Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r10 I:java.lang.Object A[D('$this$groupByTo' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r11 I:java.lang.Object A[D('destination' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"keySelector\" \l0x000c: INVOKE  (r12 I:java.lang.Object A[D('keySelector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST_STR  (r0 I:java.lang.String) =  \"valueTransform\" \l0x0011: INVOKE  (r13 I:java.lang.Object A[D('valueTransform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0014: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: ARRAY_LENGTH  (r1 I:int) = (r10 I:??[] A[D('$this$groupByTo' java.lang.Object[])])  (LINE:11162)\l0x0016: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0017|LOOP_START\lLOOP:0: B:16:0x0017\-\>B:21:0x0036\l|0x0017: IF  (r2 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:23:0x0044 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0019|0x0019: AGET  (r3 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY][] A[D('$this$groupByTo' java.lang.Object[])]), (r2 I:??[int, short, byte, char]) \l0x001b: INVOKE  (r4 I:java.lang.Object) = \l  (r12 I:kotlin.jvm.functions.Function1 A[D('keySelector' kotlin.jvm.functions.Function1)])\l  (r3 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:11163)\l0x001f: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('destination' java.util.Map)])  (LINE:11164)\l0x0020: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0021: INVOKE  (r7 I:java.lang.Object) = (r5 I:java.util.Map A[D('$this$getOrPut$iv' java.util.Map)]), (r4 I:java.lang.Object A[D('key' java.lang.Object)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:25313)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0025|0x0025: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value$iv' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0035  (LINE:25314)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0027|0x0027: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:25315)\l0x0028: NEW_INSTANCE  (r9 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:11164)\l0x002a: INVOKE  (r9 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x002d: MOVE  (r8 I:??[OBJECT, ARRAY] A[D('$i$a$\-getOrPut\-ArraysKt___ArraysKt$groupByTo$list$10' int)]) = (r9 I:??[OBJECT, ARRAY]) \l0x002e: CHECK_CAST (r8 I:java.util.List) = (java.util.List) (r8 I:??[OBJECT, ARRAY] A[D('$i$a$\-getOrPut\-ArraysKt___ArraysKt$groupByTo$list$10' int)]) \l0x0030: INVOKE  \l  (r5 I:java.util.Map A[D('$this$getOrPut$iv' java.util.Map)])\l  (r4 I:java.lang.Object A[D('key' java.lang.Object)])\l  (r8 I:java.lang.Object A[D('answer$iv' java.lang.Object)])\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)] (LINE:25316)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0036|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0036|LOOP_END\lLOOP:0: B:16:0x0017\-\>B:21:0x0036\l|0x0037: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('$this$getOrPut$iv' java.util.Map)]) = (r8 I:??[OBJECT, ARRAY])  (LINE:11164)\l0x0038: CHECK_CAST (r5 I:java.util.List) = (java.util.List) (r5 I:??[OBJECT, ARRAY]) \l0x003a: INVOKE  (r6 I:java.lang.Object) = \l  (r13 I:kotlin.jvm.functions.Function1 A[D('valueTransform' kotlin.jvm.functions.Function1)])\l  (r3 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:11165)\l0x003e: INVOKE  (r5 I:java.util.List A[D('list' java.util.List)]), (r6 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0041: ARITH  (r2 I:int) = (r2 I:int) + (1 int)  (LINE:11162)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0035|0x0035: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('value$iv' java.lang.Object)])  (LINE:25319)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0036|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0044|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0044|RETURN\l|0x0044: RETURN  (r11 I:M extends java.util.Map\<? super K, java.util.List\<V\>\> A[D('destination' java.util.Map)])  (LINE:11167)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final M extends java.util.Map\<? super K, java.util.List\<V\>\> kotlin.collections.ArraysKt___ArraysKt.groupByTo((r10 I:T[] A[D('$this$groupByTo' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:M extends java.util.Map\<? super K, java.util.List\<V\>\> A[D('destination' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlin.jvm.functions.Function1\<? super T, ? extends K\> A[D('keySelector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:kotlin.jvm.functions.Function1\<? super T, ? extends V\> A[D('valueTransform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0036 \-\> B:16:0x0017, CROSS_EDGE: B:20:0x0035 \-\> B:21:0x0036\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0028\-0x0030: r8 '$i$a$\-getOrPut\-ArraysKt___ArraysKt$groupByTo$list$10' I\l  0x0030\-0x0034: r8 'answer$iv' Ljava\/lang\/Object;\l  0x0020\-0x0037: r5 '$this$getOrPut$iv' Ljava\/util\/Map;\l  0x0021\-0x0037: r6 '$i$f$getOrPut' I\l  0x0025\-0x0037: r7 'value$iv' Ljava\/lang\/Object;\l  0x001f\-0x0041: r4 'key' Ljava\/lang\/Object;\l  0x003a\-0x0041: r5 'list' Ljava\/util\/List;\l  0x001b\-0x0044: r3 'element' Ljava\/lang\/Object;\l  0x0015\-0x0044: r0 '$i$f$groupByTo' I\l  \-1 \-0x0044: r10 '$this$groupByTo' [Ljava\/lang\/Object;\l  \-1 \-0x0044: r11 'destination' Ljava\/util\/Map;\l  \-1 \-0x0044: r12 'keySelector' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x0044: r13 'valueTransform' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [T, V, K, M extends java.util.Map\<? super K, java.util.List\<V\>\>]\lSIGNATURE: \<T:Ljava\/lang\/Object;K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;M::Ljava\/util\/Map\<\-TK;Ljava\/util\/List\<TV;\>;\>;\>([TT;TM;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TK;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TV;\>;)TM;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_25;
Node_25 -> Node_21;
Node_21 -> Node_16;
Node_20 -> Node_24;
Node_24 -> Node_21;
Node_23 -> Node_22;
Node_22 -> Node_14;
}

