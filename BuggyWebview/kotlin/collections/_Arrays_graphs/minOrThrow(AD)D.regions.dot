digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.minOrThrow([D)D" {
subgraph cluster_Region_2145447751 {
label = "R(2:1|(2:(1:13)|(3:5|(1:8)|10)))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\l}"];
subgraph cluster_Region_1348214815 {
label = "R(2:(1:13)|(3:5|(1:8)|10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1606231213 {
label = "IF [B:21:0x000d] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x000d|PHI: r0 \l  PHI: (r0v3 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r6.length == 0) != false) goto L12\l}"];
subgraph cluster_Region_1130967207 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0035|throw new java.util.NoSuchElementException()\l}"];
}
}
subgraph cluster_Region_1219309442 {
label = "R(3:5|(1:8)|10)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000f|double r2 = r6[0]\lkotlin.collections.IntIterator ?? r0 = new kotlin.ranges.IntRange(1, kotlin.collections.ArraysKt.getLastIndex(r6)).iterator()\l}"];
subgraph cluster_LoopRegion_1085139765 {
label = "LOOP:0: (1:8)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0022|if (r0.hasNext() != false) goto L8\l}"];
subgraph cluster_Region_1199140192 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0024|LOOP_END\lLOOP:0: B:23:0x001e\-\>B:25:0x0024\l|int int r1 = r0.nextInt()\ldouble r4 = r6[r1]\ldouble r2 = java.lang.Math.min(r2, r4)\l}"];
}
}
Node_26 [shape=record,label="{26\:\ 0x002f|RETURN\l|return r2\l}"];
}
}
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0008}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000a}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x001e|LOOP_START\lLOOP:0: B:23:0x001e\-\>B:25:0x0024\lPHI: r2 \l  PHI: (r2v2 'min' double) = (r2v1 'min' double), (r2v3 'min' double) binds: [B:22:0x000f, B:25:0x0024] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x002f|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0030}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000c}"];
MethodNode[shape=record,label="{public static final double kotlin.collections.ArraysKt___ArraysKt.minOrThrow((r6v0 '$this$min' double[] A[D('$this$min' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x0024 \-\> B:23:0x001e, CROSS_EDGE: B:28:0x0035 \-\> B:16:?, CROSS_EDGE: B:20:0x000c \-\> B:21:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r0v6, types: [kotlin.collections.IntIterator]\}\l}"];
MethodNode -> Node_15;Node_17 -> Node_18;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_28 -> Node_16;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_24 -> Node_29[style=dashed];
Node_25 -> Node_23;
Node_26 -> Node_16;
Node_15 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_23 -> Node_24;
Node_29 -> Node_26;
Node_27 -> Node_28;
Node_20 -> Node_21;
}

