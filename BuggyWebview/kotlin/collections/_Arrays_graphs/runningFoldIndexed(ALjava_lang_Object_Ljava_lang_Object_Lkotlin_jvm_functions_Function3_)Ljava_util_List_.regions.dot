digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.runningFoldIndexed([Ljava\/lang\/Object;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function3;)Ljava\/util\/List;" {
subgraph cluster_Region_1762150658 {
label = "R(2:1|(2:(1:6)|(3:8|(1:10)|13)))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"operation\")\l}"];
subgraph cluster_Region_2130778454 {
label = "R(2:(1:6)|(3:8|(1:10)|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1601139319 {
label = "IF [B:21:0x0012] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0012|PHI: r1 \l  PHI: (r1v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r7.length == 0) == true) goto L5\l}"];
subgraph cluster_Region_1000606252 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0018|RETURN\l|return kotlin.collections.CollectionsKt.listOf(r8)\l}"];
}
}
subgraph cluster_Region_77706504 {
label = "R(3:8|(1:10)|13)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0019|java.util.ArrayList java.util.ArrayList r1 = new java.util.ArrayList(r7.length + 1)\lr1.add(r8)\ljava.lang.Object r2 = (java.lang.Object) r8\lint r3 = 0\lint int r4 = r7.length\l}"];
subgraph cluster_LoopRegion_460316590 {
label = "LOOP:0: (1:10)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0028|LOOP_START\lLOOP:0: B:25:0x0028\-\>B:26:0x002a\lPHI: r2 r3 \l  PHI: (r2v3 'accumulator' java.lang.Object) = (r2v2 'accumulator' java.lang.Object), (r2v4 'accumulator' java.lang.Object) binds: [B:24:0x0019, B:26:0x002a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v4 'index' int) = (r3v3 'index' int), (r3v7 'index' int) binds: [B:24:0x0019, B:26:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r4) goto L10\l}"];
subgraph cluster_Region_1512785409 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x002a|LOOP_END\lLOOP:0: B:25:0x0028\-\>B:26:0x002a\l|java.lang.Object r2 = (R) r9.invoke(java.lang.Integer.valueOf(r3), r2, r7[r3])\lr1.add(r2)\lr3++\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x003d|RETURN\l|return r1\l}"];
}
}
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x000d}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000f}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0014}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x003a|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x003a}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0011}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.collections.ArraysKt___ArraysKt.runningFoldIndexed((r7v0 T[] A[D('$this$runningFoldIndexed' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 R A[D('initial' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'operation' kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super R, ? super T, ? extends R\> A[D('operation' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x002a \-\> B:25:0x0028, CROSS_EDGE: B:28:0x003d \-\> B:16:?, CROSS_EDGE: B:20:0x0011 \-\> B:21:0x0012\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>([TT;TR;Lkotlin\/jvm\/functions\/Function3\<\-Ljava\/lang\/Integer;\-TR;\-TT;+TR;\>;)Ljava\/util\/List\<TR;\>;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r6v0, resolved type: android.Manifest\}\l}"];
MethodNode -> Node_15;Node_17 -> Node_18;
Node_21 -> Node_22;
Node_21 -> Node_24[style=dashed];
Node_23 -> Node_16;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_29[style=dashed];
Node_26 -> Node_25;
Node_28 -> Node_16;
Node_15 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_22 -> Node_23;
Node_29 -> Node_27;
Node_27 -> Node_28;
Node_20 -> Node_21;
}

