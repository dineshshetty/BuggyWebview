digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.maxOfWith([ZLjava\/util\/Comparator;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$maxOfWith' boolean[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"comparator\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('comparator' java.util.Comparator)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x000c: INVOKE  (r7 I:java.lang.Object A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: ARRAY_LENGTH  (r0 I:int) = (r5 I:??[] A[D('$this$maxOfWith' boolean[])])  (LINE:15629)\l0x0010: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0011: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0016 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|0x0014: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0017|0x0017: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x004d \l}"];
Node_28 [shape=record,label="{28\:\ 0x0019|0x0019: AGET  (r0 I:boolean A[IMMUTABLE_TYPE]) = (r5 I:boolean[] A[D('$this$maxOfWith' boolean[]), IMMUTABLE_TYPE]), (r2 I:??[int, short, byte, char])  (LINE:15630)\l0x001b: INVOKE  (r0 I:java.lang.Boolean) = (r0 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)]\l0x001f: INVOKE  (r0 I:java.lang.Object) = (r7 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0023: NEW_INSTANCE  (r2 I:kotlin.ranges.IntRange) =  kotlin.ranges.IntRange  (LINE:15631)\l0x0025: INVOKE  (r3 I:int) = (r5 I:boolean[] A[D('$this$maxOfWith' boolean[])]) type: STATIC call: kotlin.collections.ArraysKt.getLastIndex(boolean[]):int A[MD:(boolean[]):int (m)]\l0x0029: INVOKE  (r2 I:kotlin.ranges.IntRange), (r1 I:int), (r3 I:int) type: DIRECT call: kotlin.ranges.IntRange.\<init\>(int, int):void A[MD:(int, int):void (m)]\l0x002c: INVOKE  (r1 I:kotlin.collections.IntIterator) = (r2 I:kotlin.ranges.IntRange) type: VIRTUAL call: kotlin.ranges.IntRange.iterator():kotlin.collections.IntIterator A[MD:():java.util.Iterator\<java.lang.Integer\> (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0030|LOOP_START\lLOOP:0: B:29:0x0030\-\>B:39:0x0030\l|0x0030: INVOKE  (r2 I:boolean) = (r1 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0034|0x0034: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x004c \l}"];
Node_31 [shape=record,label="{31\:\ 0x0036|0x0036: INVOKE  (r2 I:int) = (r1 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.nextInt():int A[MD:():int (m)]\l0x003a: AGET  (r3 I:boolean A[IMMUTABLE_TYPE]) = (r5 I:boolean[] A[D('$this$maxOfWith' boolean[]), IMMUTABLE_TYPE]), (r2 I:??[int, short, byte, char] A[D('i' int)])  (LINE:15632)\l0x003c: INVOKE  (r3 I:java.lang.Boolean) = (r3 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)]\l0x0040: INVOKE  (r3 I:java.lang.Object) = (r7 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r3 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0044: INVOKE  (r4 I:int) = \l  (r6 I:java.util.Comparator A[D('comparator' java.util.Comparator)])\l  (r0 I:java.lang.Object A[D('maxValue' java.lang.Object)])\l  (r3 I:java.lang.Object A[D('v' java.lang.Object)])\l type: INTERFACE call: java.util.Comparator.compare(java.lang.Object, java.lang.Object):int A[MD:(T, T):int (c)] (LINE:15633)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0048|0x0048: IF  (r4 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:40:0x0030 \l}"];
Node_38 [shape=record,label="{38\:\ 0x004a|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x004a|0x004a: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('maxValue' java.lang.Object)]) = (r3 I:??[OBJECT, ARRAY] A[D('v' java.lang.Object)])  (LINE:15634)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0030|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0030|LOOP_END\lSYNTHETIC\lLOOP:0: B:29:0x0030\-\>B:39:0x0030\l}"];
Node_40 [shape=record,label="{40\:\ 0x0030|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x004c|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x004c|RETURN\l|0x004c: RETURN  (r0 I:R A[D('maxValue' java.lang.Object)])  (LINE:15637)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x004d|0x004d: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException A[D('maxValue' java.lang.Object)]) =  java.util.NoSuchElementException  (LINE:15629)\l0x004f: INVOKE  (r0 I:java.util.NoSuchElementException) type: DIRECT call: java.util.NoSuchElementException.\<init\>():void A[MD:():void (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0052|0x0052: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|0x0016: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private static final R kotlin.collections.ArraysKt___ArraysKt.maxOfWith((r5 I:boolean[] A[D('$this$maxOfWith' boolean[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.Comparator\<? super R\> A[D('comparator' java.util.Comparator), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function1\<? super java.lang.Boolean, ? extends R\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:32:0x0048 \-\> B:29:0x0030, BACK_EDGE: B:33:0x004a \-\> B:29:0x0030, CROSS_EDGE: B:36:0x0052 \-\> B:22:?, CROSS_EDGE: B:26:0x0016 \-\> B:27:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003a\-0x004b: r2 'i' I\l  0x0044\-0x004b: r3 'v' Ljava\/lang\/Object;\l  0x0023\-0x004d: r0 'maxValue' Ljava\/lang\/Object;\l  \-1 \-0x0052: r5 '$this$maxOfWith' [Z\l  \-1 \-0x0052: r6 'comparator' Ljava\/util\/Comparator;\l  \-1 \-0x0052: r7 'selector' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>([ZLjava\/util\/Comparator\<\-TR;\>;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Boolean;+TR;\>;)TR;\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_35;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_37;
Node_31 -> Node_32;
Node_32 -> Node_38[style=dashed];
Node_32 -> Node_40;
Node_38 -> Node_33;
Node_33 -> Node_41;
Node_41 -> Node_39;
Node_39 -> Node_29;
Node_40 -> Node_39;
Node_37 -> Node_34;
Node_34 -> Node_22;
Node_35 -> Node_36;
Node_36 -> Node_22;
Node_26 -> Node_27;
}

