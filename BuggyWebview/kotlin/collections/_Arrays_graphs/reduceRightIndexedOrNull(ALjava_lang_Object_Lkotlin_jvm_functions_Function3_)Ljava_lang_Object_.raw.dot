digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.reduceRightIndexedOrNull([Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function3;)Ljava\/lang\/Object;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$reduceRightIndexedOrNull' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"operation\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('operation' kotlin.jvm.functions.Function3)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:int) = (r5 I:java.lang.Object[] A[D('$this$reduceRightIndexedOrNull' java.lang.Object[])]) type: STATIC call: kotlin.collections.ArraysKt.getLastIndex(java.lang.Object[]):int A[MD:\<T\>:(T[]):int (m)] (LINE:20443)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000f|0x000f: IF  (r1 I:??[int, byte, short, char] A[D('index' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:17:0x0013  (LINE:20444)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0011|RETURN\l|0x0011: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: RETURN  (r2 I:S) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0013|0x0013: ARITH  (r2 I:int) = (r1 I:int A[D('index' int)]) + (\-1 int)  (LINE:20445)\l0x0015: AGET  (r1 I:??[OBJECT, ARRAY]) = \l  (r5 I:??[OBJECT, ARRAY][] A[D('$this$reduceRightIndexedOrNull' java.lang.Object[])])\l  (r1 I:??[int, short, byte, char] A[D('index' int)])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|LOOP_START\lLOOP:0: B:18:0x0017\-\>B:19:0x0019\l|0x0017: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \< (0 ??[int, byte, short, char])  \-\> B:21:0x0026  (LINE:20446)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|LOOP_END\lLOOP:0: B:18:0x0017\-\>B:19:0x0019\l|0x0019: INVOKE  (r3 I:java.lang.Integer) = (r2 I:int A[D('index' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:20447)\l0x001d: AGET  (r4 I:??[OBJECT, ARRAY]) = \l  (r5 I:??[OBJECT, ARRAY][] A[D('$this$reduceRightIndexedOrNull' java.lang.Object[])])\l  (r2 I:??[int, short, byte, char] A[D('index' int)])\l \l0x001f: INVOKE  (r1 I:java.lang.Object A[D('accumulator' java.lang.Object)]) = \l  (r6 I:kotlin.jvm.functions.Function3 A[D('operation' kotlin.jvm.functions.Function3)])\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l  (r1 I:java.lang.Object A[D('accumulator' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function3.invoke(java.lang.Object, java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2, P3):R (m)]\l0x0023: ARITH  (r2 I:int) = (r2 I:int A[D('index' int)]) + (\-1 int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0026|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0026|RETURN\l|0x0026: RETURN  (r1 I:S A[D('accumulator' java.lang.Object)])  (LINE:20450)\l}"];
MethodNode[shape=record,label="{public static final S kotlin.collections.ArraysKt___ArraysKt.reduceRightIndexedOrNull((r5 I:T extends S[] A[D('$this$reduceRightIndexedOrNull' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super T extends S, ? super S, ? extends S\> A[D('operation' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0019 \-\> B:18:0x0017, CROSS_EDGE: B:20:0x0026 \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x0015: r1 'index' I\l  0x000b\-0x0026: r0 '$i$f$reduceRightIndexedOrNull' I\l  0x0017\-0x0026: r1 'accumulator' Ljava\/lang\/Object;\l  0x0015\-0x0026: r2 'index' I\l  \-1 \-0x0026: r5 '$this$reduceRightIndexedOrNull' [Ljava\/lang\/Object;\l  \-1 \-0x0026: r6 'operation' Lkotlin\/jvm\/functions\/Function3;\lTYPE_VARS: [S, T extends S]\lSIGNATURE: \<S:Ljava\/lang\/Object;T::TS;\>([TT;Lkotlin\/jvm\/functions\/Function3\<\-Ljava\/lang\/Integer;\-TT;\-TS;+TS;\>;)TS;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_12;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_18;
Node_21 -> Node_20;
Node_20 -> Node_12;
}

