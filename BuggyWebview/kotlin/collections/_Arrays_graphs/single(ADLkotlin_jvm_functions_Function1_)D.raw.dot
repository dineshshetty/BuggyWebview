digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.single([DLkotlin\/jvm\/functions\/Function1;)D" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r8 I:java.lang.Object A[D('$this$single' double[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r9 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3016)\l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3017)\l0x000d: ARRAY_LENGTH  (r3 I:int) = (r8 I:??[] A[D('$this$single' double[])])  (LINE:3018)\l0x000e: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|LOOP_START\lLOOP:0: B:23:0x000f\-\>B:30:0x0033\l|0x000f: IF  (r4 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:37:0x0036 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|0x0011: AGET  (r5 I:??[long, double]) = (r8 I:??[long, double][] A[D('$this$single' double[])]), (r4 I:??[int, short, byte, char]) \l0x0013: INVOKE  (r7 I:java.lang.Double) = (r5 I:double A[D('element' double)]) type: STATIC call: java.lang.Double.valueOf(double):java.lang.Double A[MD:(double):java.lang.Double (c)] (LINE:3019)\l0x0017: INVOKE  (r7 I:java.lang.Object) = (r9 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)]), (r7 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x001b: CHECK_CAST (r7 I:java.lang.Boolean) = (java.lang.Boolean) (r7 I:??[OBJECT, ARRAY]) \l0x001d: INVOKE  (r7 I:boolean) = (r7 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|0x0021: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0033 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0023|0x0023: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('found' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x002b  (LINE:3020)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0025|0x0025: INVOKE  (r1 I:java.lang.Double A[D('single' java.lang.Double)]) = (r5 I:double A[D('element' double)]) type: STATIC call: java.lang.Double.valueOf(double):java.lang.Double A[MD:(double):java.lang.Double (c)] (LINE:3021)\l0x0029: CONST  (r2 I:??[boolean, int, float, short, byte, char] A[D('found' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:3022)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0033|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0033|LOOP_END\lLOOP:0: B:23:0x000f\-\>B:30:0x0033\l|0x0033: ARITH  (r4 I:int) = (r4 I:int) + (1 int)  (LINE:3018)\l}"];
Node_36 [shape=record,label="{36\:\ 0x002b|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x002b|0x002b: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:3020)\l0x002d: CONST_STR  (r4 I:java.lang.String) =  \"Array contains more than one matching element.\" \l0x002f: INVOKE  (r3 I:java.lang.IllegalArgumentException), (r4 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0032|0x0032: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0033|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0036|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0036|0x0036: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('found' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0042  (LINE:3025)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0038|0x0038: CONST_STR  (r3 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlin.Double\"  (LINE:3027)\l0x003a: INVOKE  (r1 I:java.lang.Object A[D('single' java.lang.Double)]), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x003d: INVOKE  (r3 I:double) = (r1 I:java.lang.Double A[D('single' java.lang.Double)]) type: VIRTUAL call: java.lang.Double.doubleValue():double A[MD:():double (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0041|RETURN\l|0x0041: RETURN  (r3 I:double) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0042|0x0042: NEW_INSTANCE  (r3 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException  (LINE:3025)\l0x0044: CONST_STR  (r4 I:java.lang.String) =  \"Array contains no element matching the predicate.\" \l0x0046: INVOKE  (r3 I:java.util.NoSuchElementException), (r4 I:java.lang.String) type: DIRECT call: java.util.NoSuchElementException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0049|0x0049: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final double kotlin.collections.ArraysKt___ArraysKt.single((r8 I:double[] A[D('$this$single' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.jvm.functions.Function1\<? super java.lang.Double, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:30:0x0033 \-\> B:23:0x000f, CROSS_EDGE: B:25:0x0021 \-\> B:30:0x0033, CROSS_EDGE: B:33:0x0041 \-\> B:21:?, CROSS_EDGE: B:35:0x0049 \-\> B:21:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0036: r5 'element' D\l  0x000b\-0x0049: r0 '$i$f$single' I\l  0x000c\-0x0049: r1 'single' Ljava\/lang\/Double;\l  0x000d\-0x0049: r2 'found' Z\l  \-1 \-0x0049: r8 '$this$single' [D\l  \-1 \-0x0049: r9 'predicate' Lkotlin\/jvm\/functions\/Function1;\lSIGNATURE: ([DLkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Double;Ljava\/lang\/Boolean;\>;)D\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_37;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_38;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_36;
Node_27 -> Node_39;
Node_39 -> Node_30;
Node_30 -> Node_23;
Node_36 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_21;
Node_38 -> Node_30;
Node_37 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_21;
Node_34 -> Node_35;
Node_35 -> Node_21;
}

