digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.minOf([FLkotlin\/jvm\/functions\/Function1;)F" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"selector\")\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|if (r4.length != 0) goto L14\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|r0 = true\l}"];
Node_21 [shape=record,label="{21\:\ 0x0012|PHI: r0 \l  PHI: (r0v4 boolean) = (r0v3 boolean), (r0v13 boolean) binds: [B:20:0x0011, B:19:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != false) goto L12\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|float r0 = r5.invoke(java.lang.Float.valueOf(r4[0])).floatValue()\lkotlin.collections.IntIterator r1 = new kotlin.ranges.IntRange(1, kotlin.collections.ArraysKt.getLastIndex(r4)).iterator()\l}"];
Node_23 [shape=record,label="{23\:\ 0x0031|LOOP_START\lLOOP:0: B:23:0x0031\-\>B:25:0x0037\lPHI: r0 \l  PHI: (r0v11 'minValue' float) = (r0v10 'minValue' float), (r0v12 'minValue' float) binds: [B:22:0x0014, B:25:0x0037] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0035|if (r1.hasNext() == false) goto L9\l}"];
Node_25 [shape=record,label="{25\:\ 0x0037|LOOP_END\lLOOP:0: B:23:0x0031\-\>B:25:0x0037\l|int r2 = r1.nextInt()\lfloat r3 = r5.invoke(java.lang.Float.valueOf(r4[r2])).floatValue()\lfloat r0 = java.lang.Math.min(r0, r3)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0050|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0050|RETURN\l|return r0\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0051}"];
Node_28 [shape=record,label="{28\:\ 0x0056|throw new java.util.NoSuchElementException()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|r0 = false\l}"];
MethodNode[shape=record,label="{private static final float kotlin.collections.ArraysKt___ArraysKt.minOf((r4v0 '$this$minOf' float[] A[D('$this$minOf' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'selector' kotlin.jvm.functions.Function1\<? super java.lang.Float, java.lang.Float\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x0037 \-\> B:23:0x0031, CROSS_EDGE: B:28:0x0056 \-\> B:16:?, CROSS_EDGE: B:20:0x0011 \-\> B:21:0x0012\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ([FLkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Float;Ljava\/lang\/Float;\>;)F\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r1v1, types: [kotlin.collections.IntIterator]\}\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_29;
Node_25 -> Node_23;
Node_29 -> Node_26;
Node_26 -> Node_16;
Node_27 -> Node_28;
Node_28 -> Node_16;
Node_20 -> Node_21;
}

