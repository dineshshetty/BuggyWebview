digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.lastOrNull([S)Ljava\/lang\/Short;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$lastOrNull' short[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: ARRAY_LENGTH  (r0 I:int) = (r2 I:??[] A[D('$this$lastOrNull' short[])])  (LINE:2235)\l0x0006: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x000b \l}"];
Node_15 [shape=record,label="{15\:\ 0x0009|0x0009: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0010 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|SYNTHETIC\lRETURN\l|0x000e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: RETURN  (r0 I:java.lang.Short) A[SYNTHETIC]\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: ARRAY_LENGTH  (r0 I:int) = (r2 I:??[] A[D('$this$lastOrNull' short[])]) \l0x0011: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0012: AGET  (r0 I:short A[IMMUTABLE_TYPE]) = (r2 I:short[] A[D('$this$lastOrNull' short[]), IMMUTABLE_TYPE]), (r0 I:??[int, short, byte, char]) \l0x0014: INVOKE  (r0 I:java.lang.Short) = (r0 I:short) type: STATIC call: java.lang.Short.valueOf(short):java.lang.Short A[MD:(short):java.lang.Short (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: RETURN  (r0 I:java.lang.Short) \l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|0x000b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Short kotlin.collections.ArraysKt___ArraysKt.lastOrNull((r2 I:short[] A[D('$this$lastOrNull' short[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0010 \-\> B:20:0x0018, CROSS_EDGE: B:16:0x000b \-\> B:17:0x000c\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r2 '$this$lastOrNull' [S\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_16 -> Node_17;
}

