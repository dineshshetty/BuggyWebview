digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.mapIndexed([JLkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r11 I:java.lang.Object A[D('$this$mapIndexed' long[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r12 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:11465)\l0x000d: ARRAY_LENGTH  (r2 I:int) = (r11 I:??[] A[D('$this$mapIndexed' long[])]) \l0x000e: INVOKE  (r1 I:java.util.ArrayList), (r2 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0011: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x0013: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('$this$mapIndexed' long[])]) \l0x0014: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:25419)\l0x0016: ARRAY_LENGTH  (r5 I:int) = (r2 I:??[] A[D('$this$mapIndexedTo$iv' long[])])  (LINE:25420)\l0x0017: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|LOOP_START\lLOOP:0: B:11:0x0018\-\>B:12:0x001a\l|0x0018: IF  (r6 I:??[int, byte, short, char]) \>= (r5 I:??[int, byte, short, char])  \-\> B:15:0x0031 \l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|LOOP_END\lLOOP:0: B:11:0x0018\-\>B:12:0x001a\l|0x001a: AGET  (r7 I:??[long, double]) = (r2 I:??[long, double][] A[D('$this$mapIndexedTo$iv' long[])]), (r6 I:??[int, short, byte, char]) \l0x001c: ARITH  (r9 I:int) = (r4 I:int A[D('index$iv' int)]) + (1 int)  (LINE:25421)\l0x001e: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int A[D('index$iv' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0022: INVOKE  (r10 I:java.lang.Long) = (r7 I:long A[D('item$iv' long)]) type: STATIC call: java.lang.Long.valueOf(long):java.lang.Long A[MD:(long):java.lang.Long (c)]\l0x0026: INVOKE  (r4 I:java.lang.Object) = \l  (r12 I:kotlin.jvm.functions.Function2 A[D('transform' kotlin.jvm.functions.Function2)])\l  (r4 I:java.lang.Object)\l  (r10 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x002a: INVOKE  (r1 I:java.util.Collection A[D('destination$iv' java.util.Collection)]), (r4 I:java.lang.Object) type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x002d: ARITH  (r6 I:int) = (r6 I:int) + (1 int)  (LINE:25420)\l0x002f: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index$iv' int)]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0032: CHECK_CAST (r1 I:java.util.List) = (java.util.List) (r1 I:??[OBJECT, ARRAY] A[D('destination$iv' java.util.Collection)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0034|RETURN\l|0x0034: RETURN  (r1 I:java.util.List\<R\>)  (LINE:11465)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.collections.ArraysKt___ArraysKt.mapIndexed((r11 I:long[] A[D('$this$mapIndexed' long[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super java.lang.Long, ? extends R\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x001a \-\> B:11:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x001e: r4 'index$iv' I\l  0x001c\-0x0031: r7 'item$iv' J\l  0x001e\-0x0031: r9 'index$iv' I\l  0x0013\-0x0032: r1 'destination$iv' Ljava\/util\/Collection;\l  0x0014\-0x0032: r2 '$this$mapIndexedTo$iv' [J\l  0x0015\-0x0032: r3 '$i$f$mapIndexedTo' I\l  0x0031\-0x0032: r4 'index$iv' I\l  0x000b\-0x0034: r0 '$i$f$mapIndexed' I\l  \-1 \-0x0034: r11 '$this$mapIndexed' [J\l  \-1 \-0x0034: r12 'transform' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>([JLkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Integer;\-Ljava\/lang\/Long;+TR;\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_11;
Node_15 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

