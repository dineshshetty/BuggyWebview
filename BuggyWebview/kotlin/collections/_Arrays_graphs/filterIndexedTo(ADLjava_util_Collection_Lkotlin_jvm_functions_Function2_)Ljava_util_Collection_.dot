digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.filterIndexedTo([DLjava\/util\/Collection;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/Collection;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r17, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r18, \"destination\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r19, \"predicate\")\lr2 = 0\lr6 = 0\lint r7 = r17.length\lr8 = 0\l}"];
Node_16 [shape=record,label="{16\:\ 0x001c|LOOP_START\lLOOP:0: B:16:0x001c\-\>B:20:0x0041\lPHI: r2 r6 r8 \l  PHI: (r2v4 '$i$f$filterIndexedTo' int) = (r2v3 '$i$f$filterIndexedTo' int), (r2v9 '$i$f$filterIndexedTo' int) binds: [B:15:0x0000, B:20:0x0041] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 'index$iv' int) = (r6v0 'index$iv' int), (r6v2 'index$iv' int) binds: [B:15:0x0000, B:20:0x0041] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v2 int) binds: [B:15:0x0000, B:20:0x0041] A[DONT_GENERATE, DONT_INLINE]\l|if (r8 \>= r7) goto L9\l}"];
Node_17 [shape=record,label="{17\:\ 0x001e|r9 = r17[r8]\lint r11 = r6 + 1\lr16 = r2\l}"];
Node_18 [shape=record,label="{18\:\ 0x0038|if (r19.invoke(java.lang.Integer.valueOf(r6), java.lang.Double.valueOf(r9)).booleanValue() == false) goto L8\l}"];
Node_19 [shape=record,label="{19\:\ 0x003a|r18.add(java.lang.Double.valueOf(r9))\l}"];
Node_24 [shape=record,label="{24\:\ 0x0041|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|LOOP_END\lLOOP:0: B:16:0x001c\-\>B:20:0x0041\l|int r8 = r8 + 1\lr6 = r11\lr2 = r16\l}"];
Node_25 [shape=record,label="{25\:\ 0x0041|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0049|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0049|RETURN\l|return r18\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final C extends java.util.Collection\<? super java.lang.Double\> kotlin.collections.ArraysKt___ArraysKt.filterIndexedTo((r17v0 '$this$filterIndexedTo' double[] A[D('$this$filterIndexedTo' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'destination' C extends java.util.Collection\<? super java.lang.Double\> A[D('destination' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'predicate' kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super java.lang.Double, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x0041 \-\> B:16:0x001c, CROSS_EDGE: B:18:0x0038 \-\> B:20:0x0041\lINLINE_NOT_NEEDED\lTYPE_VARS: [C extends java.util.Collection\<? super java.lang.Double\>]\lSIGNATURE: \<C::Ljava\/util\/Collection\<\-Ljava\/lang\/Double;\>;\>([DTC;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Integer;\-Ljava\/lang\/Double;Ljava\/lang\/Boolean;\>;)TC;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_24;
Node_24 -> Node_20;
Node_20 -> Node_16;
Node_25 -> Node_20;
Node_23 -> Node_22;
Node_22 -> Node_14;
}

