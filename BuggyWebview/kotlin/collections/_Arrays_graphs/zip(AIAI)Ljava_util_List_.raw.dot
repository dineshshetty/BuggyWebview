digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.zip([I[I)Ljava\/util\/List;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r10 I:java.lang.Object A[D('$this$zip' int[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"other\" \l0x0007: INVOKE  (r11 I:java.lang.Object A[D('other' int[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('$this$zip' int[])])  (LINE:23684)\l0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: ARRAY_LENGTH  (r2 I:int) = (r0 I:??[] A[D('$this$zip$iv' int[])])  (LINE:25638)\l0x000d: ARRAY_LENGTH  (r3 I:int) = (r11 I:??[] A[D('other' int[])]) \l0x000e: INVOKE  (r2 I:int) = (r2 I:int), (r3 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0012: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:25639)\l0x0014: INVOKE  (r3 I:java.util.ArrayList), (r2 I:int A[D('size$iv' int)]) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0017: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:25640)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|LOOP_START\lLOOP:0: B:11:0x0018\-\>B:12:0x001a\l|0x0018: IF  (r4 I:??[int, byte, short, char] A[D('i$iv' int)]) \>= (r2 I:??[int, byte, short, char] A[D('size$iv' int)])  \-\> B:15:0x0031 \l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|LOOP_END\lLOOP:0: B:11:0x0018\-\>B:12:0x001a\l|0x001a: AGET  (r5 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][] A[D('$this$zip$iv' int[])]), (r4 I:??[int, short, byte, char] A[D('i$iv' int)])  (LINE:25641)\l0x001c: AGET  (r6 I:??[int, float, short, byte, char]) = (r11 I:??[int, float][] A[D('other' int[])]), (r4 I:??[int, short, byte, char] A[D('i$iv' int)]) \l0x001e: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001f: INVOKE  (r8 I:java.lang.Integer) = (r5 I:int A[D('t1' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:23684)\l0x0023: INVOKE  (r9 I:java.lang.Integer) = (r6 I:int A[D('t2' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0027: INVOKE  (r5 I:kotlin.Pair A[D('t1' int)]) = (r8 I:java.lang.Object), (r9 I:java.lang.Object) type: STATIC call: kotlin.TuplesKt.to(java.lang.Object, java.lang.Object):kotlin.Pair A[MD:\<A, B\>:(A, B):kotlin.Pair\<A, B\> (m)]\l0x002b: INVOKE  (r3 I:java.util.ArrayList A[D('list$iv' java.util.ArrayList)]), (r5 I:java.lang.Object A[D('t1' int)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x002e: ARITH  (r4 I:int) = (r4 I:int A[D('i$iv' int)]) + (1 int)  (LINE:25640)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0031: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('$this$zip$iv' int[])]) = (r3 I:??[OBJECT, ARRAY] A[D('list$iv' java.util.ArrayList)])  (LINE:25643)\l0x0032: CHECK_CAST (r0 I:java.util.List) = (java.util.List) (r0 I:??[OBJECT, ARRAY] A[D('$this$zip$iv' int[])]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0034|RETURN\l|0x0034: RETURN  (r0 I:java.util.List\<kotlin.Pair\<java.lang.Integer, java.lang.Integer\>\> A[D('$this$zip$iv' int[])])  (LINE:23684)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<kotlin.Pair\<java.lang.Integer, java.lang.Integer\>\> kotlin.collections.ArraysKt___ArraysKt.zip((r10 I:int[] A[D('$this$zip' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int[] A[D('other' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x001a \-\> B:11:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x002b: r5 't1' I\l  0x001e\-0x002b: r6 't2' I\l  0x001f\-0x002b: r7 '$i$a$\-zip\-ArraysKt___ArraysKt$zip$21' I\l  0x0018\-0x0031: r4 'i$iv' I\l  0x000b\-0x0034: r0 '$this$zip$iv' [I\l  0x000c\-0x0034: r1 '$i$f$zip' I\l  0x0012\-0x0034: r2 'size$iv' I\l  0x0017\-0x0034: r3 'list$iv' Ljava\/util\/ArrayList;\l  \-1 \-0x0034: r10 '$this$zip' [I\l  \-1 \-0x0034: r11 'other' [I\lSIGNATURE: ([I[I)Ljava\/util\/List\<Lkotlin\/Pair\<Ljava\/lang\/Integer;Ljava\/lang\/Integer;\>;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_11;
Node_15 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

