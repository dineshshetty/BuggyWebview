digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.associate([DLkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r11 I:java.lang.Object A[D('$this$associate' double[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r12 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: ARRAY_LENGTH  (r1 I:int) = (r11 I:??[] A[D('$this$associate' double[])])  (LINE:8766)\l0x000c: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: kotlin.collections.MapsKt.mapCapacity(int):int A[MD:(int):int (m)]\l0x0010: CONST  (r2 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l0x0012: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: kotlin.ranges.RangesKt.coerceAtLeast(int, int):int A[MD:(int, int):int (m)]\l0x0016: NEW_INSTANCE  (r2 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap  (LINE:8767)\l0x0018: INVOKE  (r2 I:java.util.LinkedHashMap), (r1 I:int A[D('capacity' int)]) type: DIRECT call: java.util.LinkedHashMap.\<init\>(int):void A[MD:(int):void (c)]\l0x001b: CHECK_CAST (r2 I:java.util.Map) = (java.util.Map) (r2 I:??[OBJECT, ARRAY]) \l0x001d: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('$this$associate' double[])]) \l0x001e: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001f: ARRAY_LENGTH  (r5 I:int) = (r3 I:??[] A[D('$this$associateTo$iv' double[])])  (LINE:24878)\l0x0020: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|LOOP_START\lLOOP:0: B:11:0x0021\-\>B:12:0x0023\l|0x0021: IF  (r6 I:??[int, byte, short, char]) \>= (r5 I:??[int, byte, short, char])  \-\> B:15:0x003e \l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|LOOP_END\lLOOP:0: B:11:0x0021\-\>B:12:0x0023\l|0x0023: AGET  (r7 I:??[long, double]) = (r3 I:??[long, double][] A[D('$this$associateTo$iv' double[])]), (r6 I:??[int, short, byte, char]) \l0x0025: INVOKE  (r9 I:java.lang.Double) = (r7 I:double A[D('element$iv' double)]) type: STATIC call: java.lang.Double.valueOf(double):java.lang.Double A[MD:(double):java.lang.Double (c)] (LINE:24879)\l0x0029: INVOKE  (r9 I:java.lang.Object) = (r12 I:kotlin.jvm.functions.Function1 A[D('transform' kotlin.jvm.functions.Function1)]), (r9 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x002d: CHECK_CAST (r9 I:kotlin.Pair) = (kotlin.Pair) (r9 I:??[OBJECT, ARRAY]) \l0x002f: INVOKE  (r10 I:java.lang.Object) = (r9 I:kotlin.Pair) type: VIRTUAL call: kotlin.Pair.getFirst():java.lang.Object A[MD:():A (m)]\l0x0033: INVOKE  (r9 I:java.lang.Object) = (r9 I:kotlin.Pair) type: VIRTUAL call: kotlin.Pair.getSecond():java.lang.Object A[MD:():B (m)]\l0x0037: INVOKE  (r2 I:java.util.Map A[D('destination$iv' java.util.Map)]), (r10 I:java.lang.Object), (r9 I:java.lang.Object) type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l0x003a: ARITH  (r6 I:int) = (r6 I:int) + (1 int)  (LINE:24878)\l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|RETURN\l|0x003e: RETURN  (r2 I:java.util.Map\<K, V\> A[D('destination$iv' java.util.Map)])  (LINE:8767)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.ArraysKt___ArraysKt.associate((r11 I:double[] A[D('$this$associate' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlin.jvm.functions.Function1\<? super java.lang.Double, ? extends kotlin.Pair\<? extends K, ? extends V\>\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x0023 \-\> B:11:0x0021\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0025\-0x003d: r7 'element$iv' D\l  0x001d\-0x003e: r2 'destination$iv' Ljava\/util\/Map;\l  0x001e\-0x003e: r3 '$this$associateTo$iv' [D\l  0x001f\-0x003e: r4 '$i$f$associateTo' I\l  0x000b\-0x003e: r0 '$i$f$associate' I\l  0x0016\-0x003e: r1 'capacity' I\l  \-1 \-0x003e: r11 '$this$associate' [D\l  \-1 \-0x003e: r12 'transform' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>([DLkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Double;+Lkotlin\/Pair\<+TK;+TV;\>;\>;)Ljava\/util\/Map\<TK;TV;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_11;
Node_15 -> Node_14;
Node_14 -> Node_9;
}

