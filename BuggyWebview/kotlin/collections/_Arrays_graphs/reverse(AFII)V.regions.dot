digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.reverse([FII)V" {
subgraph cluster_Region_1877186285 {
label = "R(2:1|(2:(1:3)|(2:5|(1:7))))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"\<this\>\")\lkotlin.collections.AbstractList.Companion.checkRangeIndexes$kotlin_stdlib(r6, r7, r5.length)\lint int r0 = (r6 + r7) \/ 2\l}"];
subgraph cluster_Region_1162621700 {
label = "R(2:(1:3)|(2:5|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_989132455 {
label = "IF [B:13:0x000f] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000f|if (r6 == r0) goto L3\l}"];
subgraph cluster_Region_1457782924 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0011|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_372308844 {
label = "R(2:5|(1:7))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0012|int int r1 = r7 \- 1\lint r2 = r6\l}"];
subgraph cluster_LoopRegion_63958117 {
label = "LOOP:0: (1:7)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0015|LOOP_START\lLOOP:0: B:16:0x0015\-\>B:17:0x0017\lPHI: r1 r2 \l  PHI: (r1v2 'reverseIndex' int) = (r1v1 'reverseIndex' int), (r1v3 'reverseIndex' int) binds: [B:15:0x0012, B:17:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'index' int) = (r2v0 'index' int), (r2v2 'index' int) binds: [B:15:0x0012, B:17:0x0017] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< r0) goto L7\l}"];
subgraph cluster_Region_1704416185 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0017|LOOP_END\lLOOP:0: B:16:0x0015\-\>B:17:0x0017\l|float r3 = r5[r2]\lr5[r2] = r5[r1]\lr5[r1] = r3\lr1\-\-\lr2++\l}"];
}
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0025|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0025}"];
MethodNode[shape=record,label="{public static final void kotlin.collections.ArraysKt___ArraysKt.reverse((r5v0 '$this$reverse' float[] A[D('$this$reverse' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'fromIndex' int A[D('fromIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'toIndex' int A[D('toIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:17:0x0017 \-\> B:16:0x0015, CROSS_EDGE: B:18:0x0025 \-\> B:11:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_19[style=dashed];
Node_17 -> Node_16;
Node_10 -> Node_12;
Node_19 -> Node_18;
Node_18 -> Node_11;
}

