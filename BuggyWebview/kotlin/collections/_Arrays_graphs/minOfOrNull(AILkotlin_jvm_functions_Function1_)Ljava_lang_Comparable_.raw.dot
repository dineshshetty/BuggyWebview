digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.minOfOrNull([ILkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Comparable;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$minOfOrNull' int[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: ARRAY_LENGTH  (r0 I:int) = (r5 I:??[] A[D('$this$minOfOrNull' int[])])  (LINE:17939)\l0x000b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0011 \l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|0x000f: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0016 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0014|RETURN\l|0x0014: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: RETURN  (r0 I:R extends java.lang.Comparable\<? super R\>) \l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|0x0016: AGET  (r0 I:??[int, float, short, byte, char]) = (r5 I:??[int, float][] A[D('$this$minOfOrNull' int[])]), (r2 I:??[int, short, byte, char])  (LINE:17940)\l0x0018: INVOKE  (r0 I:java.lang.Integer) = (r0 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x001c: INVOKE  (r0 I:java.lang.Object) = (r6 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0020: CHECK_CAST (r0 I:java.lang.Comparable) = (java.lang.Comparable) (r0 I:??[OBJECT, ARRAY]) \l0x0022: NEW_INSTANCE  (r2 I:kotlin.ranges.IntRange) =  kotlin.ranges.IntRange  (LINE:17941)\l0x0024: INVOKE  (r3 I:int) = (r5 I:int[] A[D('$this$minOfOrNull' int[])]) type: STATIC call: kotlin.collections.ArraysKt.getLastIndex(int[]):int A[MD:(int[]):int (m)]\l0x0028: INVOKE  (r2 I:kotlin.ranges.IntRange), (r1 I:int), (r3 I:int) type: DIRECT call: kotlin.ranges.IntRange.\<init\>(int, int):void A[MD:(int, int):void (m)]\l0x002b: INVOKE  (r1 I:kotlin.collections.IntIterator) = (r2 I:kotlin.ranges.IntRange) type: VIRTUAL call: kotlin.ranges.IntRange.iterator():kotlin.collections.IntIterator A[MD:():java.util.Iterator\<java.lang.Integer\> (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x002f|LOOP_START\lLOOP:0: B:31:0x002f\-\>B:39:0x002f\l|0x002f: INVOKE  (r2 I:boolean) = (r1 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0033|0x0033: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x004d \l}"];
Node_33 [shape=record,label="{33\:\ 0x0035|0x0035: INVOKE  (r2 I:int) = (r1 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.nextInt():int A[MD:():int (m)]\l0x0039: AGET  (r3 I:??[int, float, short, byte, char]) = (r5 I:??[int, float][] A[D('$this$minOfOrNull' int[])]), (r2 I:??[int, short, byte, char] A[D('i' int)])  (LINE:17942)\l0x003b: INVOKE  (r3 I:java.lang.Integer) = (r3 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x003f: INVOKE  (r3 I:java.lang.Object) = (r6 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r3 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0043: CHECK_CAST (r3 I:java.lang.Comparable) = (java.lang.Comparable) (r3 I:??[OBJECT, ARRAY]) \l0x0045: INVOKE  (r4 I:int) = \l  (r0 I:java.lang.Comparable A[D('minValue' java.lang.Comparable)])\l  (r3 I:java.lang.Object A[D('v' java.lang.Comparable)])\l type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)] (LINE:17943)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0049|0x0049: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:40:0x002f \l}"];
Node_38 [shape=record,label="{38\:\ 0x004b|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x004b|0x004b: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('minValue' java.lang.Comparable)]) = (r3 I:??[OBJECT, ARRAY] A[D('v' java.lang.Comparable)])  (LINE:17944)\l}"];
Node_41 [shape=record,label="{41\:\ 0x002f|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x002f|LOOP_END\lSYNTHETIC\lLOOP:0: B:31:0x002f\-\>B:39:0x002f\l}"];
Node_40 [shape=record,label="{40\:\ 0x002f|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x004d|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x004d|RETURN\l|0x004d: RETURN  (r0 I:R extends java.lang.Comparable\<? super R\> A[D('minValue' java.lang.Comparable)])  (LINE:17947)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|0x0011: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private static final R extends java.lang.Comparable\<? super R\> kotlin.collections.ArraysKt___ArraysKt.minOfOrNull((r5 I:int[] A[D('$this$minOfOrNull' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function1\<? super java.lang.Integer, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x0049 \-\> B:31:0x002f, BACK_EDGE: B:35:0x004b \-\> B:31:0x002f, CROSS_EDGE: B:36:0x004d \-\> B:22:?, CROSS_EDGE: B:26:0x0011 \-\> B:27:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0039\-0x004c: r2 'i' I\l  0x0045\-0x004c: r3 'v' Ljava\/lang\/Comparable;\l  0x0022\-0x004d: r0 'minValue' Ljava\/lang\/Comparable;\l  \-1 \-0x004d: r5 '$this$minOfOrNull' [I\l  \-1 \-0x004d: r6 'selector' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>]\lSIGNATURE: \<R::Ljava\/lang\/Comparable\<\-TR;\>;\>([ILkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Integer;+TR;\>;)TR;\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_22;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_34;
Node_34 -> Node_38[style=dashed];
Node_34 -> Node_40;
Node_38 -> Node_35;
Node_35 -> Node_41;
Node_41 -> Node_39;
Node_39 -> Node_31;
Node_40 -> Node_39;
Node_37 -> Node_36;
Node_36 -> Node_22;
Node_26 -> Node_27;
}

