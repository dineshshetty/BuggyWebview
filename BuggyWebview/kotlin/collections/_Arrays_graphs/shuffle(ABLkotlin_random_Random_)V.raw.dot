digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.shuffle([BLkotlin\/random\/Random;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$shuffle' byte[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"random\" \l0x0007: INVOKE  (r5 I:java.lang.Object A[D('random' kotlin.random.Random)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:int) = (r4 I:byte[] A[D('$this$shuffle' byte[])]) type: STATIC call: kotlin.collections.ArraysKt.getLastIndex(byte[]):int A[MD:(byte[]):int (m)] (LINE:6024)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000e|LOOP_START\lLOOP:0: B:10:0x000e\-\>B:11:0x0010\l|0x000e: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:13:0x0021 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0010|LOOP_END\lLOOP:0: B:10:0x000e\-\>B:11:0x0010\l|0x0010: ARITH  (r1 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:6025)\l0x0012: INVOKE  (r1 I:int) = (r5 I:kotlin.random.Random A[D('random' kotlin.random.Random)]), (r1 I:int) type: VIRTUAL call: kotlin.random.Random.nextInt(int):int A[MD:(int):int (m)]\l0x0016: AGET  (r2 I:??[int, short, byte, char]) = (r4 I:byte[] A[D('$this$shuffle' byte[]), IMMUTABLE_TYPE]), (r0 I:??[int, short, byte, char] A[D('i' int)])  (LINE:6026)\l0x0018: AGET  (r3 I:??[int, short, byte, char]) = (r4 I:byte[] A[D('$this$shuffle' byte[]), IMMUTABLE_TYPE]), (r1 I:??[int, short, byte, char] A[D('j' int)])  (LINE:6027)\l0x001a: APUT  \l  (r4 I:byte[] A[D('$this$shuffle' byte[]), IMMUTABLE_TYPE])\l  (r0 I:??[int, short, byte, char] A[D('i' int)])\l  (r3 I:byte A[IMMUTABLE_TYPE])\l \l0x001c: APUT  \l  (r4 I:byte[] A[D('$this$shuffle' byte[]), IMMUTABLE_TYPE])\l  (r1 I:??[int, short, byte, char] A[D('j' int)])\l  (r2 I:byte A[D('copy' byte), IMMUTABLE_TYPE])\l  (LINE:6028)\l0x001e: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (\-1 int)  (LINE:6024)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|RETURN\l|0x0021: RETURN    (LINE:6030)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void kotlin.collections.ArraysKt___ArraysKt.shuffle((r4 I:byte[] A[D('$this$shuffle' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.random.Random A[D('random' kotlin.random.Random), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x0010 \-\> B:10:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x001e: r1 'j' I\l  0x0018\-0x001e: r2 'copy' B\l  0x000e\-0x0021: r0 'i' I\l  \-1 \-0x0021: r4 '$this$shuffle' [B\l  \-1 \-0x0021: r5 'random' Lkotlin\/random\/Random;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_10;
Node_13 -> Node_12;
Node_12 -> Node_8;
}

