digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.scan([Ljava\/lang\/Object;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r8 I:java.lang.Object A[D('$this$scan' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"operation\" \l0x0007: INVOKE  (r10 I:java.lang.Object A[D('operation' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$this$scan' java.lang.Object[])])  (LINE:21689)\l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: ARRAY_LENGTH  (r3 I:int) = (r1 I:??[] A[D('$this$runningFold$iv' java.lang.Object[])])  (LINE:25482)\l0x000e: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|0x0010: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0014 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|0x0012: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|0x0015: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x001c \l}"];
Node_22 [shape=record,label="{22\:\ 0x0017|0x0017: INVOKE  (r3 I:java.util.List) = (r9 I:java.lang.Object A[D('initial' java.lang.Object)]) type: STATIC call: kotlin.collections.CollectionsKt.listOf(java.lang.Object):java.util.List A[MD:\<T\>:(T):java.util.List\<T\> (m)]\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x003c: RETURN  (r3 I:java.util.List\<R\> A[D('result$iv' java.util.ArrayList)]) A[SYNTHETIC] (LINE:21689)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x001c|0x001c: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:25483)\l0x001e: ARRAY_LENGTH  (r6 I:int) = (r1 I:??[] A[D('$this$runningFold$iv' java.lang.Object[])]) \l0x001f: ARITH  (r6 I:int) = (r6 I:int) + (r5 I:int) \l0x0020: INVOKE  (r3 I:java.util.ArrayList), (r6 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0023: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x0024: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:25484)\l0x0025: INVOKE  \l  (r5 I:java.util.ArrayList A[D('$this$runningFold_u24lambda_u2d126$iv' java.util.ArrayList)])\l  (r9 I:java.lang.Object A[D('initial' java.lang.Object)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:25483)\l0x0028: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('$this$runningFold_u24lambda_u2d126$iv' java.util.ArrayList)]) = (r9 I:??[OBJECT, ARRAY] A[D('initial' java.lang.Object)])  (LINE:25485)\l0x0029: ARRAY_LENGTH  (r6 I:int) = (r1 I:??[] A[D('$this$runningFold$iv' java.lang.Object[])])  (LINE:25486)\l}"];
Node_24 [shape=record,label="{24\:\ 0x002a|LOOP_START\lLOOP:0: B:24:0x002a\-\>B:25:0x002c\l|0x002a: IF  (r4 I:??[int, byte, short, char]) \>= (r6 I:??[int, byte, short, char])  \-\> B:28:0x0038 \l}"];
Node_25 [shape=record,label="{25\:\ 0x002c|LOOP_END\lLOOP:0: B:24:0x002a\-\>B:25:0x002c\l|0x002c: AGET  (r7 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('$this$runningFold$iv' java.lang.Object[])]), (r4 I:??[int, short, byte, char]) \l0x002e: INVOKE  (r5 I:java.lang.Object A[D('accumulator$iv' java.lang.Object)]) = \l  (r10 I:kotlin.jvm.functions.Function2 A[D('operation' kotlin.jvm.functions.Function2)])\l  (r5 I:java.lang.Object A[D('accumulator$iv' java.lang.Object)])\l  (r7 I:java.lang.Object A[D('element$iv' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)] (LINE:25487)\l0x0032: INVOKE  \l  (r3 I:java.util.ArrayList A[D('result$iv' java.util.ArrayList)])\l  (r5 I:java.lang.Object A[D('accumulator$iv' java.lang.Object)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:25488)\l0x0035: ARITH  (r4 I:int) = (r4 I:int) + (1 int)  (LINE:25486)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0038|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0038|0x0038: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('result$iv' java.util.ArrayList)])  (LINE:25490)\l0x0039: CHECK_CAST (r4 I:java.util.List) = (java.util.List) (r4 I:??[OBJECT, ARRAY]) \l0x003b: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('result$iv' java.util.ArrayList)]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x003c|RETURN\lORIG_RETURN\l|0x003c: RETURN  (r3 I:java.util.List\<R\> A[D('result$iv' java.util.ArrayList)])  (LINE:21689)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|0x0014: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.collections.ArraysKt___ArraysKt.scan((r8 I:T[] A[D('$this$scan' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:R A[D('initial' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function2\<? super R, ? super T, ? extends R\> A[D('operation' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x002c \-\> B:24:0x002a, CROSS_EDGE: B:26:0x0038 \-\> B:27:0x003c, CROSS_EDGE: B:20:0x0014 \-\> B:21:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0024\-0x0028: r5 '$this$runningFold_u24lambda_u2d126$iv' Ljava\/util\/ArrayList;\l  0x0025\-0x0028: r6 '$i$a$\-apply\-ArraysKt___ArraysKt$runningFold$result$1$iv' I\l  0x002e\-0x0038: r7 'element$iv' Ljava\/lang\/Object;\l  0x000c\-0x003c: r1 '$this$runningFold$iv' [Ljava\/lang\/Object;\l  0x000d\-0x003c: r2 '$i$f$runningFold' I\l  0x0028\-0x003c: r3 'result$iv' Ljava\/util\/ArrayList;\l  0x0029\-0x003c: r5 'accumulator$iv' Ljava\/lang\/Object;\l  0x000b\-0x003c: r0 '$i$f$scan' I\l  \-1 \-0x003c: r8 '$this$scan' [Ljava\/lang\/Object;\l  \-1 \-0x003c: r9 'initial' Ljava\/lang\/Object;\l  \-1 \-0x003c: r10 'operation' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>([TT;TR;Lkotlin\/jvm\/functions\/Function2\<\-TR;\-TT;+TR;\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_29;
Node_29 -> Node_16;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_24;
Node_28 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_20 -> Node_21;
}

