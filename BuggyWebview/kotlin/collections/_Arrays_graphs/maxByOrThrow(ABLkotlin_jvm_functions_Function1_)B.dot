digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.maxByOrThrow([BLkotlin\/jvm\/functions\/Function1;)B" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"selector\")\l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|if (r9.length != 0) goto L23\l}"];
Node_28 [shape=record,label="{28\:\ 0x0010|r1 = true\l}"];
Node_30 [shape=record,label="{30\:\ 0x0013|PHI: r1 \l  PHI: (r1v2 boolean) = (r1v1 boolean), (r1v8 boolean) binds: [B:29:0x0012, B:28:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != false) goto L21\l}"];
Node_31 [shape=record,label="{31\:\ 0x0015|r1 = r9[0]\lint r3 = kotlin.collections.ArraysKt.getLastIndex(r9)\l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|if (r3 != 0) goto L9\l}"];
Node_33 [shape=record,label="{33\:\ 0x001d|RETURN\l|return r1\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x001e|java.lang.Comparable r4 = r10.invoke(java.lang.Byte.valueOf(r1))\lkotlin.collections.IntIterator r2 = new kotlin.ranges.IntRange(1, r3).iterator()\l}"];
Node_35 [shape=record,label="{35\:\ 0x0031|LOOP_START\lLOOP:0: B:35:0x0031\-\>B:45:0x0031\lPHI: r1 r4 \l  PHI: (r1v5 'maxElem' byte) = (r1v4 'maxElem' byte), (r1v6 'maxElem' byte) binds: [B:34:0x001e, B:45:0x0031] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 'maxValue' java.lang.Comparable) = (r4v2 'maxValue' java.lang.Comparable), (r4v4 'maxValue' java.lang.Comparable) binds: [B:34:0x001e, B:45:0x0031] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0035|if (r2.hasNext() == false) goto L19\l}"];
Node_37 [shape=record,label="{37\:\ 0x0037|int r5 = r2.nextInt()\lr6 = r9[r5]\ljava.lang.Comparable r7 = r10.invoke(java.lang.Byte.valueOf(r6))\l}"];
Node_38 [shape=record,label="{38\:\ 0x004b|if (r4.compareTo(r7) \>= 0) goto L18\l}"];
Node_44 [shape=record,label="{44\:\ 0x004d|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x004d|r1 = r6\lr4 = r7\l}"];
Node_47 [shape=record,label="{47\:\ 0x0031|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0031|LOOP_END\lSYNTHETIC\lLOOP:0: B:35:0x0031\-\>B:45:0x0031\lPHI: r1 r4 \l  PHI: (r1v6 'maxElem' byte) = (r1v5 'maxElem' byte), (r1v7 'maxElem' byte) binds: [B:46:0x0031, B:47:0x0031] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v4 'maxValue' java.lang.Comparable) = (r4v3 'maxValue' java.lang.Comparable), (r4v5 'maxValue' java.lang.Comparable) binds: [B:46:0x0031, B:47:0x0031] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0031|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0050|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0050|RETURN\l|return r1\l}"];
Node_41 [shape=record,label="{41\:\ 0x0051}"];
Node_42 [shape=record,label="{42\:\ 0x0056|throw new java.util.NoSuchElementException()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0012|r1 = false\l}"];
MethodNode[shape=record,label="{public static final byte kotlin.collections.ArraysKt___ArraysKt.maxByOrThrow((r9v0 '$this$maxBy' byte[] A[D('$this$maxBy' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'selector' kotlin.jvm.functions.Function1\<? super java.lang.Byte, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:38:0x004b \-\> B:35:0x0031, BACK_EDGE: B:39:0x004d \-\> B:35:0x0031, CROSS_EDGE: B:40:0x0050 \-\> B:25:?, CROSS_EDGE: B:42:0x0056 \-\> B:25:?, CROSS_EDGE: B:29:0x0012 \-\> B:30:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>]\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r2v1, types: [kotlin.collections.IntIterator]\}\lSIGNATURE: \<R::Ljava\/lang\/Comparable\<\-TR;\>;\>([BLkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Byte;+TR;\>;)B\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_41;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_25;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_43;
Node_37 -> Node_38;
Node_38 -> Node_44[style=dashed];
Node_38 -> Node_46;
Node_44 -> Node_39;
Node_39 -> Node_47;
Node_47 -> Node_45;
Node_45 -> Node_35;
Node_46 -> Node_45;
Node_43 -> Node_40;
Node_40 -> Node_25;
Node_41 -> Node_42;
Node_42 -> Node_25;
Node_29 -> Node_30;
}

