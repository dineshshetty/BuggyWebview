digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.filterIsInstance([Ljava\/lang\/Object;)Ljava\/util\/List;" {
subgraph cluster_Region_532918933 {
label = "R(3:1|(3:3|(1:5)(0)|7)|11)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"\<this\>\")\ljava.util.Collection java.util.Collection r1 = new java.util.ArrayList()\lint r5 = 0\l\l}"];
subgraph cluster_LoopRegion_719798341 {
label = "LOOP:0: (3:3|(1:5)(0)|7)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0011|LOOP_START\lLOOP:0: B:16:0x0011\-\>B:20:0x0022\lPHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:15:0x0000, B:20:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 \< r4) goto L3\l}"];
subgraph cluster_Region_788392876 {
label = "R(3:3|(1:5)(0)|7)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0013|r6 = r9[r5]\lkotlin.jvm.internal.Intrinsics.reifiedOperationMarker(3, \"R\")\l}"];
subgraph cluster_IfRegion_716669707 {
label = "IF [B:18:0x001d] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x001d|if ((r6 instanceof java.lang.Object) != false) goto L5\l}"];
subgraph cluster_Region_1305894917 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x001f|r1.add(r6)\l}"];
}
subgraph cluster_Region_1490383332 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_20 [shape=record,label="{20\:\ 0x0022|LOOP_END\lLOOP:0: B:16:0x0011\-\>B:20:0x0022\l|r5++\l}"];
}
}
Node_22 [shape=record,label="{22\:\ 0x0028|RETURN\l|return (java.util.List) r1\l}"];
}
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0022|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0022|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0025|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0025}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ java.util.List\<R\> kotlin.collections.ArraysKt___ArraysKt.filterIsInstance((r9v0 '$this$filterIsInstance' java.lang.Object[] A[D('$this$filterIsInstance' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lBACK_EDGE: B:20:0x0022 \-\> B:16:0x0011, CROSS_EDGE: B:18:0x001d \-\> B:20:0x0022\lINLINE_NOT_NEEDED\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>([Ljava\/lang\/Object;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_13;Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_23[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_25[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_16;
Node_22 -> Node_14;
Node_13 -> Node_15;
Node_24 -> Node_20;
Node_25 -> Node_20;
Node_23 -> Node_21;
Node_21 -> Node_22;
}

