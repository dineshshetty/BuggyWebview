digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.foldRight([Ljava\/lang\/Object;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2;)Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$foldRight' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"operation\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('operation' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:int) = (r4 I:java.lang.Object[] A[D('$this$foldRight' java.lang.Object[])]) type: STATIC call: kotlin.collections.ArraysKt.getLastIndex(java.lang.Object[]):int A[MD:\<T\>:(T[]):int (m)] (LINE:13224)\l0x000f: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('initial' java.lang.Object)])  (LINE:13225)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0010|LOOP_START\lLOOP:0: B:10:0x0010\-\>B:11:0x0012\l|0x0010: IF  (r1 I:??[int, byte, short, char] A[D('index' int)]) \< (0 ??[int, byte, short, char])  \-\> B:13:0x001c  (LINE:13226)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0012|LOOP_END\lLOOP:0: B:10:0x0010\-\>B:11:0x0012\l|0x0012: ARITH  (r3 I:int) = (r1 I:int A[D('index' int)]) + (\-1 int)  (LINE:13227)\l0x0014: AGET  (r1 I:??[OBJECT, ARRAY]) = \l  (r4 I:??[OBJECT, ARRAY][] A[D('$this$foldRight' java.lang.Object[])])\l  (r1 I:??[int, short, byte, char] A[D('index' int)])\l \l0x0016: INVOKE  (r2 I:java.lang.Object A[D('accumulator' java.lang.Object)]) = \l  (r6 I:kotlin.jvm.functions.Function2 A[D('operation' kotlin.jvm.functions.Function2)])\l  (r1 I:java.lang.Object)\l  (r2 I:java.lang.Object A[D('accumulator' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x001a: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|RETURN\l|0x001c: RETURN  (r2 I:R A[D('accumulator' java.lang.Object)])  (LINE:13229)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final R kotlin.collections.ArraysKt___ArraysKt.foldRight((r4 I:T[] A[D('$this$foldRight' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:R A[D('initial' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function2\<? super T, ? super R, ? extends R\> A[D('operation' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x0012 \-\> B:10:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x0014: r1 'index' I\l  0x0014\-0x001c: r3 'index' I\l  0x000b\-0x001c: r0 '$i$f$foldRight' I\l  0x001c\-0x001c: r1 'index' I\l  0x0010\-0x001c: r2 'accumulator' Ljava\/lang\/Object;\l  \-1 \-0x001c: r4 '$this$foldRight' [Ljava\/lang\/Object;\l  \-1 \-0x001c: r5 'initial' Ljava\/lang\/Object;\l  \-1 \-0x001c: r6 'operation' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>([TT;TR;Lkotlin\/jvm\/functions\/Function2\<\-TT;\-TR;+TR;\>;)TR;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_10;
Node_13 -> Node_12;
Node_12 -> Node_8;
}

