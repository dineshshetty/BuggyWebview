digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.minByOrThrow([ZLkotlin\/jvm\/functions\/Function1;)Z" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$minBy' boolean[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x0007: INVOKE  (r10 I:java.lang.Object A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: ARRAY_LENGTH  (r1 I:int) = (r9 I:??[] A[D('$this$minBy' boolean[])])  (LINE:16666)\l0x000c: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000d: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0012 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0010|0x0010: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0013|0x0013: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0051 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0015|0x0015: AGET  (r1 I:boolean A[IMMUTABLE_TYPE]) = (r9 I:boolean[] A[D('$this$minBy' boolean[]), IMMUTABLE_TYPE]), (r3 I:??[int, short, byte, char])  (LINE:16667)\l0x0017: INVOKE  (r3 I:int) = (r9 I:boolean[] A[D('$this$minBy' boolean[])]) type: STATIC call: kotlin.collections.ArraysKt.getLastIndex(boolean[]):int A[MD:(boolean[]):int (m)] (LINE:16668)\l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|0x001b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lastIndex' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x001e  (LINE:16669)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001d|RETURN\l|0x001d: RETURN  (r1 I:boolean A[D('minElem' boolean)]) \l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x001e|0x001e: INVOKE  (r4 I:java.lang.Boolean) = (r1 I:boolean A[D('minElem' boolean)]) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)] (LINE:16670)\l0x0022: INVOKE  (r4 I:java.lang.Object) = (r10 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r4 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0026: CHECK_CAST (r4 I:java.lang.Comparable) = (java.lang.Comparable) (r4 I:??[OBJECT, ARRAY]) \l0x0028: NEW_INSTANCE  (r5 I:kotlin.ranges.IntRange) =  kotlin.ranges.IntRange  (LINE:16671)\l0x002a: INVOKE  (r5 I:kotlin.ranges.IntRange), (r2 I:int), (r3 I:int A[D('lastIndex' int)]) type: DIRECT call: kotlin.ranges.IntRange.\<init\>(int, int):void A[MD:(int, int):void (m)]\l0x002d: INVOKE  (r2 I:kotlin.collections.IntIterator) = (r5 I:kotlin.ranges.IntRange) type: VIRTUAL call: kotlin.ranges.IntRange.iterator():kotlin.collections.IntIterator A[MD:():java.util.Iterator\<java.lang.Integer\> (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0031|LOOP_START\lLOOP:0: B:35:0x0031\-\>B:45:0x0031\l|0x0031: INVOKE  (r5 I:boolean) = (r2 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0035|0x0035: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0050 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0037|0x0037: INVOKE  (r5 I:int) = (r2 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.nextInt():int A[MD:():int (m)]\l0x003b: AGET  (r6 I:boolean A[IMMUTABLE_TYPE]) = (r9 I:boolean[] A[D('$this$minBy' boolean[]), IMMUTABLE_TYPE]), (r5 I:??[int, short, byte, char] A[D('i' int)])  (LINE:16672)\l0x003d: INVOKE  (r7 I:java.lang.Boolean) = (r6 I:boolean A[D('e' boolean)]) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)] (LINE:16673)\l0x0041: INVOKE  (r7 I:java.lang.Object) = (r10 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r7 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0045: CHECK_CAST (r7 I:java.lang.Comparable) = (java.lang.Comparable) (r7 I:??[OBJECT, ARRAY]) \l0x0047: INVOKE  (r8 I:int) = \l  (r4 I:java.lang.Comparable A[D('minValue' java.lang.Comparable)])\l  (r7 I:java.lang.Object A[D('v' java.lang.Comparable)])\l type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)] (LINE:16674)\l}"];
Node_38 [shape=record,label="{38\:\ 0x004b|0x004b: IF  (r8 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:46:0x0031 \l}"];
Node_44 [shape=record,label="{44\:\ 0x004d|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x004d|0x004d: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('minElem' boolean)]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('e' boolean)])  (LINE:16675)\l0x004e: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('minValue' java.lang.Comparable)]) = (r7 I:??[OBJECT, ARRAY] A[D('v' java.lang.Comparable)])  (LINE:16676)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0031|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0031|LOOP_END\lSYNTHETIC\lLOOP:0: B:35:0x0031\-\>B:45:0x0031\l}"];
Node_46 [shape=record,label="{46\:\ 0x0031|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0050|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0050|RETURN\l|0x0050: RETURN  (r1 I:boolean A[D('minElem' boolean)])  (LINE:16679)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0051|0x0051: NEW_INSTANCE  (r1 I:java.util.NoSuchElementException A[D('minElem' boolean)]) =  java.util.NoSuchElementException  (LINE:16666)\l0x0053: INVOKE  (r1 I:java.util.NoSuchElementException) type: DIRECT call: java.util.NoSuchElementException.\<init\>():void A[MD:():void (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0056|0x0056: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0012|0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.collections.ArraysKt___ArraysKt.minByOrThrow((r9 I:boolean[] A[D('$this$minBy' boolean[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function1\<? super java.lang.Boolean, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:38:0x004b \-\> B:35:0x0031, BACK_EDGE: B:39:0x004d \-\> B:35:0x0031, CROSS_EDGE: B:40:0x0050 \-\> B:25:?, CROSS_EDGE: B:42:0x0056 \-\> B:25:?, CROSS_EDGE: B:29:0x0012 \-\> B:30:0x0013\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003b\-0x004f: r5 'i' I\l  0x003d\-0x004f: r6 'e' Z\l  0x0047\-0x004f: r7 'v' Ljava\/lang\/Comparable;\l  0x0017\-0x0051: r1 'minElem' Z\l  0x001b\-0x0051: r3 'lastIndex' I\l  0x0028\-0x0051: r4 'minValue' Ljava\/lang\/Comparable;\l  0x000b\-0x0056: r0 '$i$f$minByOrThrow' I\l  \-1 \-0x0056: r9 '$this$minBy' [Z\l  \-1 \-0x0056: r10 'selector' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>]\lSIGNATURE: \<R::Ljava\/lang\/Comparable\<\-TR;\>;\>([ZLkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Boolean;+TR;\>;)Z\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_41;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_25;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_43;
Node_37 -> Node_38;
Node_38 -> Node_44[style=dashed];
Node_38 -> Node_46;
Node_44 -> Node_39;
Node_39 -> Node_47;
Node_47 -> Node_45;
Node_45 -> Node_35;
Node_46 -> Node_45;
Node_43 -> Node_40;
Node_40 -> Node_25;
Node_41 -> Node_42;
Node_42 -> Node_25;
Node_29 -> Node_30;
}

