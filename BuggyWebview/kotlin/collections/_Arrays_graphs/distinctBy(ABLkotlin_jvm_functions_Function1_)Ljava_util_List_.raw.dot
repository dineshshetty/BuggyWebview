digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.distinctBy([BLkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r8 I:java.lang.Object A[D('$this$distinctBy' byte[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x0007: INVOKE  (r9 I:java.lang.Object A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r1 I:java.util.HashSet) =  java.util.HashSet  (LINE:11956)\l0x000d: INVOKE  (r1 I:java.util.HashSet) type: DIRECT call: java.util.HashSet.\<init\>():void A[MD:():void (c)]\l0x0010: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:11957)\l0x0012: INVOKE  (r2 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0015: ARRAY_LENGTH  (r3 I:int) = (r8 I:??[] A[D('$this$distinctBy' byte[])])  (LINE:11958)\l0x0016: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0017|LOOP_START\lLOOP:0: B:16:0x0017\-\>B:20:0x0030\l|0x0017: IF  (r4 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:23:0x0033 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0019|0x0019: AGET  (r5 I:??[int, short, byte, char]) = (r8 I:byte[] A[D('$this$distinctBy' byte[]), IMMUTABLE_TYPE]), (r4 I:??[int, short, byte, char]) \l0x001b: INVOKE  (r6 I:java.lang.Byte) = (r5 I:byte A[D('e' byte)]) type: STATIC call: java.lang.Byte.valueOf(byte):java.lang.Byte A[MD:(byte):java.lang.Byte (c)] (LINE:11959)\l0x001f: INVOKE  (r6 I:java.lang.Object) = (r9 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r6 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0023: INVOKE  (r7 I:boolean) = (r1 I:java.util.HashSet A[D('set' java.util.HashSet)]), (r6 I:java.lang.Object A[D('key' java.lang.Object)]) type: VIRTUAL call: java.util.HashSet.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:11960)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0027|0x0027: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0030 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0029|0x0029: INVOKE  (r7 I:java.lang.Byte) = (r5 I:byte A[D('e' byte)]) type: STATIC call: java.lang.Byte.valueOf(byte):java.lang.Byte A[MD:(byte):java.lang.Byte (c)] (LINE:11961)\l0x002d: INVOKE  (r2 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r7 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0030|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0030|LOOP_END\lLOOP:0: B:16:0x0017\-\>B:20:0x0030\l|0x0030: ARITH  (r4 I:int) = (r4 I:int) + (1 int)  (LINE:11958)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0030|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0033|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0033|0x0033: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('list' java.util.ArrayList)])  (LINE:11963)\l0x0034: CHECK_CAST (r3 I:java.util.List) = (java.util.List) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0036|RETURN\l|0x0036: RETURN  (r3 I:java.util.List\<java.lang.Byte\>) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<java.lang.Byte\> kotlin.collections.ArraysKt___ArraysKt.distinctBy((r8 I:byte[] A[D('$this$distinctBy' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.jvm.functions.Function1\<? super java.lang.Byte, ? extends K\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x0030 \-\> B:16:0x0017, CROSS_EDGE: B:18:0x0027 \-\> B:20:0x0030\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0023\-0x0030: r6 'key' Ljava\/lang\/Object;\l  0x001b\-0x0033: r5 'e' B\l  0x000b\-0x0036: r0 '$i$f$distinctBy' I\l  0x0010\-0x0036: r1 'set' Ljava\/util\/HashSet;\l  0x0015\-0x0036: r2 'list' Ljava\/util\/ArrayList;\l  \-1 \-0x0036: r8 '$this$distinctBy' [B\l  \-1 \-0x0036: r9 'selector' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [K]\lSIGNATURE: \<K:Ljava\/lang\/Object;\>([BLkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Byte;+TK;\>;)Ljava\/util\/List\<Ljava\/lang\/Byte;\>;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_24;
Node_24 -> Node_20;
Node_20 -> Node_16;
Node_25 -> Node_20;
Node_23 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_14;
}

