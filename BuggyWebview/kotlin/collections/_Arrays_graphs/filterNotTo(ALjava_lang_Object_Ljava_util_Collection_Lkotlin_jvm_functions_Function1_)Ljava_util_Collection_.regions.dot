digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.filterNotTo([Ljava\/lang\/Object;Ljava\/util\/Collection;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Collection;" {
subgraph cluster_Region_839648701 {
label = "R(3:1|(3:3|(1:5)(0)|7)|10)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"destination\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"predicate\")\lint r2 = 0\l\l}"];
subgraph cluster_LoopRegion_56916097 {
label = "LOOP:0: (3:3|(1:5)(0)|7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0012|LOOP_START\lLOOP:0: B:15:0x0012\-\>B:19:0x0025\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:14:0x0000, B:19:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< r1) goto L3\l}"];
subgraph cluster_Region_345743641 {
label = "R(3:3|(1:5)(0)|7)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0014|r3 = r5[r2]\l}"];
subgraph cluster_IfRegion_1658623082 {
label = "IF [B:17:0x0020] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0020|if (r7.invoke(r3).booleanValue() == false) goto L5\l}"];
subgraph cluster_Region_569092415 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0022|r6.add(r3)\l}"];
}
subgraph cluster_Region_1514593334 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_19 [shape=record,label="{19\:\ 0x0025|LOOP_END\lLOOP:0: B:15:0x0012\-\>B:19:0x0025\l|r2++\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x0028|RETURN\l|return r6\l}"];
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0025|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0025|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0028|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final C extends java.util.Collection\<? super T\> kotlin.collections.ArraysKt___ArraysKt.filterNotTo((r5v0 T[] A[D('$this$filterNotTo' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'destination' C extends java.util.Collection\<? super T\> A[D('destination' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'predicate' kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0025 \-\> B:15:0x0012, CROSS_EDGE: B:17:0x0020 \-\> B:19:0x0025\lINLINE_NOT_NEEDED\lTYPE_VARS: [C extends java.util.Collection\<? super T\>, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;C::Ljava\/util\/Collection\<\-TT;\>;\>([TT;TC;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)TC;\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_21[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_23[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_15;
Node_20 -> Node_13;
Node_12 -> Node_14;
Node_22 -> Node_19;
Node_23 -> Node_19;
Node_21 -> Node_20;
}

