digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.toHashSet([Ljava\/lang\/Object;)Ljava\/util\/HashSet;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$toHashSet' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: NEW_INSTANCE  (r0 I:java.util.HashSet) =  java.util.HashSet  (LINE:9882)\l0x0007: ARRAY_LENGTH  (r1 I:int) = (r2 I:??[] A[D('$this$toHashSet' java.lang.Object[])]) \l0x0008: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: kotlin.collections.MapsKt.mapCapacity(int):int A[MD:(int):int (m)]\l0x000c: INVOKE  (r0 I:java.util.HashSet), (r1 I:int) type: DIRECT call: java.util.HashSet.\<init\>(int):void A[MD:(int):void (c)]\l0x000f: CHECK_CAST (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:??[OBJECT, ARRAY]) \l0x0011: INVOKE  (r0 I:java.util.Collection) = (r2 I:java.lang.Object[] A[D('$this$toHashSet' java.lang.Object[])]), (r0 I:java.util.Collection) type: STATIC call: kotlin.collections.ArraysKt.toCollection(java.lang.Object[], java.util.Collection):java.util.Collection A[MD:\<T, C extends java.util.Collection\<? super T\>\>:(T[], C extends java.util.Collection\<? super T\>):C extends java.util.Collection\<? super T\> (m)]\l0x0015: CHECK_CAST (r0 I:java.util.HashSet) = (java.util.HashSet) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:java.util.HashSet\<T\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.HashSet\<T\> kotlin.collections.ArraysKt___ArraysKt.toHashSet((r2 I:T[] A[D('$this$toHashSet' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0017: r2 '$this$toHashSet' [Ljava\/lang\/Object;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;)Ljava\/util\/HashSet\<TT;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

