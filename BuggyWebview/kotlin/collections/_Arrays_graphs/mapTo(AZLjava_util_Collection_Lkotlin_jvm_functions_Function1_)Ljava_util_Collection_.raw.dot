digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.mapTo([ZLjava\/util\/Collection;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Collection;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$mapTo' boolean[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('destination' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x000c: INVOKE  (r7 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: ARRAY_LENGTH  (r1 I:int) = (r5 I:??[] A[D('$this$mapTo' boolean[])])  (LINE:11740)\l0x0011: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|LOOP_START\lLOOP:0: B:10:0x0012\-\>B:11:0x0014\l|0x0012: IF  (r2 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:13:0x0024 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0014|LOOP_END\lLOOP:0: B:10:0x0012\-\>B:11:0x0014\l|0x0014: AGET  (r3 I:boolean A[IMMUTABLE_TYPE]) = (r5 I:boolean[] A[D('$this$mapTo' boolean[]), IMMUTABLE_TYPE]), (r2 I:??[int, short, byte, char]) \l0x0016: INVOKE  (r4 I:java.lang.Boolean) = (r3 I:boolean A[D('item' boolean)]) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)] (LINE:11741)\l0x001a: INVOKE  (r4 I:java.lang.Object) = (r7 I:kotlin.jvm.functions.Function1 A[D('transform' kotlin.jvm.functions.Function1)]), (r4 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x001e: INVOKE  (r6 I:java.util.Collection A[D('destination' java.util.Collection)]), (r4 I:java.lang.Object) type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0021: ARITH  (r2 I:int) = (r2 I:int) + (1 int)  (LINE:11740)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|RETURN\l|0x0024: RETURN  (r6 I:C extends java.util.Collection\<? super R\> A[D('destination' java.util.Collection)])  (LINE:11742)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final C extends java.util.Collection\<? super R\> kotlin.collections.ArraysKt___ArraysKt.mapTo((r5 I:boolean[] A[D('$this$mapTo' boolean[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:C extends java.util.Collection\<? super R\> A[D('destination' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function1\<? super java.lang.Boolean, ? extends R\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x0014 \-\> B:10:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0024: r3 'item' Z\l  0x0010\-0x0024: r0 '$i$f$mapTo' I\l  \-1 \-0x0024: r5 '$this$mapTo' [Z\l  \-1 \-0x0024: r6 'destination' Ljava\/util\/Collection;\l  \-1 \-0x0024: r7 'transform' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R, C extends java.util.Collection\<? super R\>]\lSIGNATURE: \<R:Ljava\/lang\/Object;C::Ljava\/util\/Collection\<\-TR;\>;\>([ZTC;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Boolean;+TR;\>;)TC;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_10;
Node_13 -> Node_12;
Node_12 -> Node_8;
}

