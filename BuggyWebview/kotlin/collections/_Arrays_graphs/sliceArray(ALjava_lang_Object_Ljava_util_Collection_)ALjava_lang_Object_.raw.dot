digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.sliceArray([Ljava\/lang\/Object;Ljava\/util\/Collection;)[Ljava\/lang\/Object;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$sliceArray' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"indices\" \l0x0007: INVOKE  (r7 I:java.lang.Object A[D('indices' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:int) = (r7 I:java.util.Collection A[D('indices' java.util.Collection)]) type: INTERFACE call: java.util.Collection.size():int A[MD:():int (c)] (LINE:4584)\l0x000e: INVOKE  (r0 I:java.lang.Object[]) = (r6 I:java.lang.Object[] A[D('$this$sliceArray' java.lang.Object[])]), (r0 I:int) type: STATIC call: kotlin.collections.ArraysKt.arrayOfNulls(java.lang.Object[], int):java.lang.Object[] A[MD:\<T\>:(T[], int):T[] (m)]\l0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:4585)\l0x0013: INVOKE  (r2 I:java.util.Iterator) = (r7 I:java.util.Collection A[D('indices' java.util.Collection)]) type: INTERFACE call: java.util.Collection.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:4586)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|LOOP_START\lLOOP:0: B:11:0x0017\-\>B:13:0x001d\l|0x0017: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|0x001b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002f \l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|LOOP_END\lLOOP:0: B:11:0x0017\-\>B:13:0x001d\l|0x001d: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0021: CHECK_CAST (r3 I:java.lang.Number) = (java.lang.Number) (r3 I:??[OBJECT, ARRAY]) \l0x0023: INVOKE  (r3 I:int) = (r3 I:java.lang.Number) type: VIRTUAL call: java.lang.Number.intValue():int A[MD:():int (c)]\l0x0027: ARITH  (r4 I:int) = (r1 I:int A[D('targetIndex' int)]) + (1 int)  (LINE:4587)\l0x0029: AGET  (r5 I:??[OBJECT, ARRAY]) = \l  (r6 I:??[OBJECT, ARRAY][] A[D('$this$sliceArray' java.lang.Object[])])\l  (r3 I:??[int, short, byte, char] A[D('sourceIndex' int)])\l \l0x002b: APUT  \l  (r0 I:??[OBJECT, ARRAY][] A[D('result' java.lang.Object[])])\l  (r1 I:??[int, short, byte, char])\l  (r5 I:??[OBJECT, ARRAY])\l \l0x002d: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('targetIndex' int)]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|RETURN\l|0x002f: RETURN  (r0 I:T[] A[D('result' java.lang.Object[])])  (LINE:4589)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final T[] kotlin.collections.ArraysKt___ArraysKt.sliceArray((r6 I:T[] A[D('$this$sliceArray' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.Collection\<java.lang.Integer\> A[D('indices' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x001d \-\> B:11:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0029: r1 'targetIndex' I\l  0x0027\-0x002e: r3 'sourceIndex' I\l  0x0029\-0x002f: r4 'targetIndex' I\l  0x0012\-0x002f: r0 'result' [Ljava\/lang\/Object;\l  0x002f\-0x002f: r1 'targetIndex' I\l  \-1 \-0x002f: r6 '$this$sliceArray' [Ljava\/lang\/Object;\l  \-1 \-0x002f: r7 'indices' Ljava\/util\/Collection;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;Ljava\/util\/Collection\<Ljava\/lang\/Integer;\>;)[TT;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_11;
Node_15 -> Node_14;
Node_14 -> Node_9;
}

