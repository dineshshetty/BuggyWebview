digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.flatMap([SLkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"transform\")\ljava.util.Collection r1 = new java.util.ArrayList()\lint r4 = r8.length\lr5 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|LOOP_START\lLOOP:0: B:11:0x0016\-\>B:12:0x0018\lPHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:10:0x0000, B:12:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 \>= r4) goto L4\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|LOOP_END\lLOOP:0: B:11:0x0016\-\>B:12:0x0018\l|short r6 = r8[r5]\ljava.lang.Iterable r7 = r9.invoke(java.lang.Short.valueOf(r6))\lkotlin.collections.CollectionsKt.addAll(r1, r7)\lint r5 = r5 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a}"];
Node_14 [shape=record,label="{14\:\ 0x002d|RETURN\l|return (java.util.List) r1\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.collections.ArraysKt___ArraysKt.flatMap((r8v0 '$this$flatMap' short[] A[D('$this$flatMap' short[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'transform' kotlin.jvm.functions.Function1\<? super java.lang.Short, ? extends java.lang.Iterable\<? extends R\>\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x0018 \-\> B:11:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: [R]\lSIGNATURE: \<R:Ljava\/lang\/Object;\>([SLkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Short;+Ljava\/lang\/Iterable\<+TR;\>;\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_11;
Node_15 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

