digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.indexOf([SS)I" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$indexOf' short[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1539)\l0x0006: ARRAY_LENGTH  (r1 I:int) = (r3 I:??[] A[D('$this$indexOf' short[])]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|LOOP_START\lLOOP:0: B:15:0x0007\-\>B:19:0x000e\l|0x0007: IF  (r0 I:??[int, byte, short, char] A[D('index' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:22:0x0011 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|0x0009: AGET  (r2 I:short A[IMMUTABLE_TYPE]) = (r3 I:short[] A[D('$this$indexOf' short[]), IMMUTABLE_TYPE]), (r0 I:??[int, short, byte, char] A[D('index' int)])  (LINE:1540)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|0x000b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('element' short)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x000e \l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|LOOP_END\lLOOP:0: B:15:0x0007\-\>B:19:0x000e\l|0x000e: ARITH  (r0 I:int) = (r0 I:int A[D('index' int)]) + (1 int)  (LINE:1539)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|RETURN\l|0x000d: RETURN  (r0 I:int A[D('index' int)])  (LINE:1541)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|RETURN\l|0x0011: CONST  (r0 I:??[int, float, short, byte, char] A[D('index' int)]) = (\-1 ??[int, float, short, byte, char])  (LINE:1544)\l0x0012: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.ArraysKt___ArraysKt.indexOf((r3 I:short[] A[D('$this$indexOf' short[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:short A[D('element' short), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x000e \-\> B:15:0x0007, CROSS_EDGE: B:21:0x0012 \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0011: r0 'index' I\l  \-1 \-0x0012: r3 '$this$indexOf' [S\l  \-1 \-0x0012: r4 'element' S\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_23[style=dashed];
Node_19 -> Node_15;
Node_23 -> Node_18;
Node_18 -> Node_13;
Node_22 -> Node_20;
Node_20 -> Node_13;
}

