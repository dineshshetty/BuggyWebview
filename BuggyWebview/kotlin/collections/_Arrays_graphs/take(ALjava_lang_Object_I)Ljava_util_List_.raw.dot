digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.take([Ljava\/lang\/Object;I)Ljava\/util\/List;" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$take' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:4768)\l0x0006: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0007|0x0007: IF  (r6 I:??[int, byte, short, char] A[D('n' int)]) \< (0 ??[int, byte, short, char])  \-\> B:34:0x000b \l}"];
Node_33 [shape=record,label="{33\:\ 0x0009|0x0009: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x000c|0x000c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0040 \l}"];
Node_36 [shape=record,label="{36\:\ 0x000e|0x000e: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('n' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0015  (LINE:4769)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0010|0x0010: INVOKE  (r0 I:java.util.List) =  type: STATIC call: kotlin.collections.CollectionsKt.emptyList():java.util.List A[MD:\<T\>:():java.util.List\<T\> (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0014|RETURN\l|0x0014: RETURN  (r0 I:java.util.List\<T\>) \l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0015|0x0015: ARRAY_LENGTH  (r2 I:int) = (r5 I:??[] A[D('$this$take' java.lang.Object[])])  (LINE:4770)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0016|0x0016: IF  (r6 I:??[int, byte, short, char] A[D('n' int)]) \< (r2 I:??[int, byte, short, char])  \-\> B:43:0x001d \l}"];
Node_41 [shape=record,label="{41\:\ 0x0018|0x0018: INVOKE  (r0 I:java.util.List) = (r5 I:java.lang.Object[] A[D('$this$take' java.lang.Object[])]) type: STATIC call: kotlin.collections.ArraysKt.toList(java.lang.Object[]):java.util.List A[MD:\<T\>:(T[]):java.util.List\<T\> (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x001c|RETURN\l|0x001c: RETURN  (r0 I:java.util.List\<T\>) \l}"];
Node_43 [shape=record,label="{43\:\ 0x001d|0x001d: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('n' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0026  (LINE:4771)\l}"];
Node_44 [shape=record,label="{44\:\ 0x001f|0x001f: AGET  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][] A[D('$this$take' java.lang.Object[])]), (r0 I:??[int, short, byte, char]) \l0x0021: INVOKE  (r0 I:java.util.List) = (r0 I:java.lang.Object) type: STATIC call: kotlin.collections.CollectionsKt.listOf(java.lang.Object):java.util.List A[MD:\<T\>:(T):java.util.List\<T\> (m)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0025|RETURN\l|0x0025: RETURN  (r0 I:java.util.List\<T\>) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0026|0x0026: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:4772)\l0x0027: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:4773)\l0x0029: INVOKE  (r2 I:java.util.ArrayList), (r6 I:int A[D('n' int)]) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x002c: ARRAY_LENGTH  (r3 I:int) = (r5 I:??[] A[D('$this$take' java.lang.Object[])])  (LINE:4774)\l}"];
Node_47 [shape=record,label="{47\:\ 0x002d|LOOP_START\lLOOP:0: B:47:0x002d\-\>B:51:0x0039\l|0x002d: IF  (r0 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:57:0x003c \l}"];
Node_48 [shape=record,label="{48\:\ 0x002f|0x002f: AGET  (r4 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][] A[D('$this$take' java.lang.Object[])]), (r0 I:??[int, short, byte, char]) \l0x0031: INVOKE  (r2 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r4 I:java.lang.Object A[D('item' java.lang.Object)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:4775)\l0x0034: ARITH  (r1 I:int) = (r1 I:int A[D('count' int)]) + (1 int)  (LINE:4776)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0036|0x0036: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('count' int)]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('n' int)])  \-\> B:51:0x0039 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0039|LOOP_END\lLOOP:0: B:47:0x002d\-\>B:51:0x0039\l|0x0039: ARITH  (r0 I:int) = (r0 I:int) + (1 int)  (LINE:4774)\l}"];
Node_56 [shape=record,label="{56\:\ 0x003c|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x003c|0x003c: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('list' java.util.ArrayList)])  (LINE:4779)\l0x003d: CHECK_CAST (r0 I:java.util.List) = (java.util.List) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x003f|RETURN\l|0x003f: RETURN  (r0 I:java.util.List\<T\>) \l}"];
Node_57 [shape=record,label="{57\:\ 0x003c|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x0040|0x0040: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:24725)\l0x0041: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:4768)\l0x0043: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0046: CONST_STR  (r2 I:java.lang.String) =  \"Requested element count \" \l0x0048: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004b: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:int A[D('n' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x004e: CONST_STR  (r2 I:java.lang.String) =  \" is less than zero.\" \l0x0050: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0053: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-ArraysKt___ArraysKt$take$1' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0057: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0059: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x005d: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x0060|0x0060: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_34 [shape=record,label="{34\:\ 0x000b|0x000b: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.ArraysKt___ArraysKt.take((r5 I:T[] A[D('$this$take' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('n' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:42:0x001c \-\> B:30:?, CROSS_EDGE: B:45:0x0025 \-\> B:30:?, BACK_EDGE: B:51:0x0039 \-\> B:47:0x002d, CROSS_EDGE: B:53:0x003f \-\> B:30:?, CROSS_EDGE: B:47:0x002d \-\> B:52:0x003c, CROSS_EDGE: B:55:0x0060 \-\> B:30:?, CROSS_EDGE: B:34:0x000b \-\> B:35:0x000c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0031\-0x003c: r4 'item' Ljava\/lang\/Object;\l  0x0027\-0x0040: r1 'count' I\l  0x002c\-0x0040: r2 'list' Ljava\/util\/ArrayList;\l  0x0041\-0x0057: r0 '$i$a$\-require\-ArraysKt___ArraysKt$take$1' I\l  \-1 \-0x0060: r5 '$this$take' [Ljava\/lang\/Object;\l  \-1 \-0x0060: r6 'n' I\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;I)Ljava\/util\/List\<TT;\>;\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_54;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_39;
Node_37 -> Node_38;
Node_38 -> Node_30;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_41 -> Node_42;
Node_42 -> Node_30;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_46;
Node_44 -> Node_45;
Node_45 -> Node_30;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_57;
Node_48 -> Node_49;
Node_49 -> Node_51;
Node_49 -> Node_56[style=dashed];
Node_51 -> Node_47;
Node_56 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_30;
Node_57 -> Node_52;
Node_54 -> Node_55;
Node_55 -> Node_30;
Node_34 -> Node_35;
}

