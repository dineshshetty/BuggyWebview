digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.flatMapSequence([Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r8 I:java.lang.Object A[D('$this$flatMap' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r9 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:10327)\l0x000d: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0010: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x0012: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$this$flatMap' java.lang.Object[])]) \l0x0013: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: ARRAY_LENGTH  (r4 I:int) = (r2 I:??[] A[D('$this$flatMapTo$iv' java.lang.Object[])])  (LINE:25011)\l0x0015: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|LOOP_START\lLOOP:0: B:11:0x0016\-\>B:12:0x0018\l|0x0016: IF  (r5 I:??[int, byte, short, char]) \>= (r4 I:??[int, byte, short, char])  \-\> B:15:0x0026 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|LOOP_END\lLOOP:0: B:11:0x0016\-\>B:12:0x0018\l|0x0018: AGET  (r6 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][] A[D('$this$flatMapTo$iv' java.lang.Object[])]), (r5 I:??[int, short, byte, char]) \l0x001a: INVOKE  (r7 I:java.lang.Object) = \l  (r9 I:kotlin.jvm.functions.Function1 A[D('transform' kotlin.jvm.functions.Function1)])\l  (r6 I:java.lang.Object A[D('element$iv' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:25012)\l0x001e: CHECK_CAST (r7 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r7 I:??[OBJECT, ARRAY]) \l0x0020: INVOKE  \l  (r1 I:java.util.Collection A[D('destination$iv' java.util.Collection)])\l  (r7 I:kotlin.sequences.Sequence A[D('list$iv' kotlin.sequences.Sequence)])\l type: STATIC call: kotlin.collections.CollectionsKt.addAll(java.util.Collection, kotlin.sequences.Sequence):boolean A[MD:\<T\>:(java.util.Collection\<? super T\>, kotlin.sequences.Sequence\<? extends T\>):boolean (m)] (LINE:25013)\l0x0023: ARITH  (r5 I:int) = (r5 I:int) + (1 int)  (LINE:25011)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0027: CHECK_CAST (r1 I:java.util.List) = (java.util.List) (r1 I:??[OBJECT, ARRAY] A[D('destination$iv' java.util.Collection)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|RETURN\l|0x0029: RETURN  (r1 I:java.util.List\<R\>)  (LINE:10327)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.collections.ArraysKt___ArraysKt.flatMapSequence((r8 I:T[] A[D('$this$flatMap' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.jvm.functions.Function1\<? super T, ? extends kotlin.sequences.Sequence\<? extends R\>\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x0018 \-\> B:11:0x0016\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0020\-0x0023: r7 'list$iv' Lkotlin\/sequences\/Sequence;\l  0x001a\-0x0026: r6 'element$iv' Ljava\/lang\/Object;\l  0x0012\-0x0027: r1 'destination$iv' Ljava\/util\/Collection;\l  0x0013\-0x0027: r2 '$this$flatMapTo$iv' [Ljava\/lang\/Object;\l  0x0014\-0x0027: r3 '$i$f$flatMapSequenceTo' I\l  0x000b\-0x0029: r0 '$i$f$flatMapSequence' I\l  \-1 \-0x0029: r8 '$this$flatMap' [Ljava\/lang\/Object;\l  \-1 \-0x0029: r9 'transform' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>([TT;Lkotlin\/jvm\/functions\/Function1\<\-TT;+Lkotlin\/sequences\/Sequence\<+TR;\>;\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_11;
Node_15 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

