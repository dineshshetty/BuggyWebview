digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.maxWithOrNull([JLjava\/util\/Comparator;)Ljava\/lang\/Long;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r8 I:java.lang.Object A[D('$this$maxWithOrNull' long[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"comparator\" \l0x0007: INVOKE  (r9 I:java.lang.Object A[D('comparator' java.util.Comparator)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: ARRAY_LENGTH  (r0 I:int) = (r8 I:??[] A[D('$this$maxWithOrNull' long[])])  (LINE:16213)\l0x000b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0011 \l}"];
Node_26 [shape=record,label="{26\:\ 0x000f|0x000f: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0016 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0014|RETURN\l|0x0014: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: RETURN  (r0 I:java.lang.Long) \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|0x0016: AGET  (r2 I:??[long, double]) = (r8 I:??[long, double][] A[D('$this$maxWithOrNull' long[])]), (r2 I:??[int, short, byte, char])  (LINE:16214)\l0x0018: NEW_INSTANCE  (r0 I:kotlin.ranges.IntRange) =  kotlin.ranges.IntRange  (LINE:16215)\l0x001a: INVOKE  (r4 I:int) = (r8 I:long[] A[D('$this$maxWithOrNull' long[])]) type: STATIC call: kotlin.collections.ArraysKt.getLastIndex(long[]):int A[MD:(long[]):int (m)]\l0x001e: INVOKE  (r0 I:kotlin.ranges.IntRange), (r1 I:int), (r4 I:int) type: DIRECT call: kotlin.ranges.IntRange.\<init\>(int, int):void A[MD:(int, int):void (m)]\l0x0021: INVOKE  (r0 I:kotlin.collections.IntIterator) = (r0 I:kotlin.ranges.IntRange) type: VIRTUAL call: kotlin.ranges.IntRange.iterator():kotlin.collections.IntIterator A[MD:():java.util.Iterator\<java.lang.Integer\> (m)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0025|LOOP_START\lLOOP:0: B:32:0x0025\-\>B:41:0x0025\l|0x0025: INVOKE  (r1 I:boolean) = (r0 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0029|0x0029: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0041 \l}"];
Node_34 [shape=record,label="{34\:\ 0x002b|0x002b: INVOKE  (r1 I:int) = (r0 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.nextInt():int A[MD:():int (m)]\l0x002f: AGET  (r4 I:??[long, double]) = (r8 I:??[long, double][] A[D('$this$maxWithOrNull' long[])]), (r1 I:??[int, short, byte, char] A[D('i' int)])  (LINE:16216)\l0x0031: INVOKE  (r6 I:java.lang.Long) = (r2 I:long A[D('max' long)]) type: STATIC call: java.lang.Long.valueOf(long):java.lang.Long A[MD:(long):java.lang.Long (c)] (LINE:16217)\l0x0035: INVOKE  (r7 I:java.lang.Long) = (r4 I:long A[D('e' long)]) type: STATIC call: java.lang.Long.valueOf(long):java.lang.Long A[MD:(long):java.lang.Long (c)]\l0x0039: INVOKE  (r6 I:int) = (r9 I:java.util.Comparator A[D('comparator' java.util.Comparator)]), (r6 I:java.lang.Object), (r7 I:java.lang.Object) type: INTERFACE call: java.util.Comparator.compare(java.lang.Object, java.lang.Object):int A[MD:(T, T):int (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x003d|0x003d: IF  (r6 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:42:0x0025 \l}"];
Node_40 [shape=record,label="{40\:\ 0x003f|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x003f|0x003f: MOVE  (r2 I:??[long, double] A[D('max' long)]) = (r4 I:??[long, double] A[D('e' long)]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0025|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0025|LOOP_END\lSYNTHETIC\lLOOP:0: B:32:0x0025\-\>B:41:0x0025\l}"];
Node_42 [shape=record,label="{42\:\ 0x0025|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0041|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0041|0x0041: INVOKE  (r0 I:java.lang.Long) = (r2 I:long A[D('max' long)]) type: STATIC call: java.lang.Long.valueOf(long):java.lang.Long A[MD:(long):java.lang.Long (c)] (LINE:16219)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0045|RETURN\l|0x0045: RETURN  (r0 I:java.lang.Long) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0011|0x0011: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Long kotlin.collections.ArraysKt___ArraysKt.maxWithOrNull((r8 I:long[] A[D('$this$maxWithOrNull' long[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.util.Comparator\<? super java.lang.Long\> A[D('comparator' java.util.Comparator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:35:0x003d \-\> B:32:0x0025, BACK_EDGE: B:36:0x003f \-\> B:32:0x0025, CROSS_EDGE: B:38:0x0045 \-\> B:23:?, CROSS_EDGE: B:27:0x0011 \-\> B:28:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002f\-0x0040: r1 'i' I\l  0x0031\-0x0040: r4 'e' J\l  0x0018\-0x0045: r2 'max' J\l  \-1 \-0x0045: r8 '$this$maxWithOrNull' [J\l  \-1 \-0x0045: r9 'comparator' Ljava\/util\/Comparator;\lSIGNATURE: ([JLjava\/util\/Comparator\<\-Ljava\/lang\/Long;\>;)Ljava\/lang\/Long;\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_23;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_39;
Node_34 -> Node_35;
Node_35 -> Node_40[style=dashed];
Node_35 -> Node_42;
Node_40 -> Node_36;
Node_36 -> Node_43;
Node_43 -> Node_41;
Node_41 -> Node_32;
Node_42 -> Node_41;
Node_39 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_23;
Node_27 -> Node_28;
}

