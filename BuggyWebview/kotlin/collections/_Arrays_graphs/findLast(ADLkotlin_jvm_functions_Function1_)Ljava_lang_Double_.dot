digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.findLast([DLkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Double;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"predicate\")\lint r2 = r7.length + (\-1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|if (r2 \< 0) goto L11\l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|LOOP_START\lLOOP:0: B:17:0x0011\-\>B:20:0x002b\lPHI: r2 \l  PHI: (r2v3 int) = (r2v1 int), (r2v4 int) binds: [B:16:0x000f, B:20:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|r3 = r2\lint r2 = r2 + (\-1)\lr4 = r7[r3]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0024|if (r8.invoke(java.lang.Double.valueOf(r4)).booleanValue() == false) goto L5\l}"];
Node_20 [shape=record,label="{20\:\ 0x002b|LOOP_END\lLOOP:0: B:17:0x0011\-\>B:20:0x002b\l|if (r2 \>= 0) goto L3\l}"];
Node_24 [shape=record,label="{24\:\ 0x002d|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0026}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Double.valueOf(r4)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x002d|RETURN\lORIG_RETURN\l|return null\l}"];
MethodNode[shape=record,label="{private static final java.lang.Double kotlin.collections.ArraysKt___ArraysKt.findLast((r7v0 '$this$findLast' double[] A[D('$this$findLast' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'predicate' kotlin.jvm.functions.Function1\<? super java.lang.Double, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x002b \-\> B:17:0x0011, CROSS_EDGE: B:21:0x002d \-\> B:22:0x002e, CROSS_EDGE: B:16:0x000f \-\> B:21:0x002d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ([DLkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Double;Ljava\/lang\/Boolean;\>;)Ljava\/lang\/Double;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_23[style=dashed];
Node_20 -> Node_17;
Node_20 -> Node_24[style=dashed];
Node_24 -> Node_21;
Node_23 -> Node_19;
Node_19 -> Node_25;
Node_25 -> Node_14;
Node_21 -> Node_14;
}

