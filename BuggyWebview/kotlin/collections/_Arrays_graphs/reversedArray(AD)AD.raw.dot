digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.reversedArray([D)[D" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('$this$reversedArray' double[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: ARRAY_LENGTH  (r0 I:int) = (r7 I:??[] A[D('$this$reversedArray' double[])])  (LINE:5898)\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x000b \l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x000f \l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|RETURN\l|0x000e: RETURN  (r7 I:double[] A[D('$this$reversedArray' double[])]) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x000f|0x000f: ARRAY_LENGTH  (r0 I:int) = (r7 I:??[] A[D('$this$reversedArray' double[])])  (LINE:5899)\l0x0010: NEW_ARRAY  (r0 I:double[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: double[] \l0x0012: INVOKE  (r2 I:int) = (r7 I:double[] A[D('$this$reversedArray' double[])]) type: STATIC call: kotlin.collections.ArraysKt.getLastIndex(double[]):int A[MD:(double[]):int (m)] (LINE:5900)\l0x0016: NEW_INSTANCE  (r3 I:kotlin.ranges.IntRange) =  kotlin.ranges.IntRange  (LINE:5901)\l0x0018: INVOKE  (r3 I:kotlin.ranges.IntRange), (r1 I:int), (r2 I:int A[D('lastIndex' int)]) type: DIRECT call: kotlin.ranges.IntRange.\<init\>(int, int):void A[MD:(int, int):void (m)]\l0x001b: INVOKE  (r1 I:kotlin.collections.IntIterator) = (r3 I:kotlin.ranges.IntRange) type: VIRTUAL call: kotlin.ranges.IntRange.iterator():kotlin.collections.IntIterator A[MD:():java.util.Iterator\<java.lang.Integer\> (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x001f|LOOP_START\lLOOP:0: B:23:0x001f\-\>B:25:0x0025\l|0x001f: INVOKE  (r3 I:boolean) = (r1 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0023|0x0023: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0030 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0025|LOOP_END\lLOOP:0: B:23:0x001f\-\>B:25:0x0025\l|0x0025: INVOKE  (r3 I:int) = (r1 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.nextInt():int A[MD:():int (m)]\l0x0029: ARITH  (r4 I:int) = (r2 I:int A[D('lastIndex' int)]) \- (r3 I:int A[D('i' int)])  (LINE:5902)\l0x002b: AGET  (r5 I:??[long, double]) = (r7 I:??[long, double][] A[D('$this$reversedArray' double[])]), (r3 I:??[int, short, byte, char] A[D('i' int)]) \l0x002d: APUT  (r0 I:??[long, double][] A[D('result' double[])]), (r4 I:??[int, short, byte, char]), (r5 I:??[long, double]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0030|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0030|RETURN\l|0x0030: RETURN  (r0 I:double[] A[D('result' double[])])  (LINE:5903)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|0x000b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final double[] kotlin.collections.ArraysKt___ArraysKt.reversedArray((r7 I:double[] A[D('$this$reversedArray' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x0025 \-\> B:23:0x001f, CROSS_EDGE: B:26:0x0030 \-\> B:15:?, CROSS_EDGE: B:19:0x000b \-\> B:20:0x000c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0029\-0x002f: r3 'i' I\l  0x0012\-0x0030: r0 'result' [D\l  0x0016\-0x0030: r2 'lastIndex' I\l  \-1 \-0x0030: r7 '$this$reversedArray' [D\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_15;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_23;
Node_27 -> Node_26;
Node_26 -> Node_15;
Node_19 -> Node_20;
}

