digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.partition([CLkotlin\/jvm\/functions\/Function1;)Lkotlin\/Pair;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('$this$partition' char[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r8 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:23159)\l0x000d: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0010: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:23160)\l0x0012: INVOKE  (r2 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0015: ARRAY_LENGTH  (r3 I:int) = (r7 I:??[] A[D('$this$partition' char[])])  (LINE:23161)\l0x0016: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|LOOP_START\lLOOP:0: B:17:0x0017\-\>B:22:0x003a\l|0x0017: IF  (r4 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:25:0x003d \l}"];
Node_18 [shape=record,label="{18\:\ 0x0019|0x0019: AGET  (r5 I:char A[IMMUTABLE_TYPE]) = (r7 I:char[] A[D('$this$partition' char[]), IMMUTABLE_TYPE]), (r4 I:??[int, short, byte, char]) \l0x001b: INVOKE  (r6 I:java.lang.Character) = (r5 I:char A[D('element' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:23162)\l0x001f: INVOKE  (r6 I:java.lang.Object) = (r8 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)]), (r6 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0023: CHECK_CAST (r6 I:java.lang.Boolean) = (java.lang.Boolean) (r6 I:??[OBJECT, ARRAY]) \l0x0025: INVOKE  (r6 I:boolean) = (r6 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0029|0x0029: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0033 \l}"];
Node_20 [shape=record,label="{20\:\ 0x002b|0x002b: INVOKE  (r6 I:java.lang.Character) = (r5 I:char A[D('element' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:23163)\l0x002f: INVOKE  (r1 I:java.util.ArrayList A[D('first' java.util.ArrayList)]), (r6 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x003a|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x003a|LOOP_END\lLOOP:0: B:17:0x0017\-\>B:22:0x003a\l|0x003a: ARITH  (r4 I:int) = (r4 I:int) + (1 int)  (LINE:23161)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0033|0x0033: INVOKE  (r6 I:java.lang.Character) = (r5 I:char A[D('element' char)]) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)] (LINE:23165)\l0x0037: INVOKE  (r2 I:java.util.ArrayList A[D('second' java.util.ArrayList)]), (r6 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x003a|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x003d|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x003d|0x003d: NEW_INSTANCE  (r3 I:kotlin.Pair) =  kotlin.Pair  (LINE:23168)\l0x003f: INVOKE  \l  (r3 I:kotlin.Pair)\l  (r1 I:java.lang.Object A[D('first' java.util.ArrayList)])\l  (r2 I:java.lang.Object A[D('second' java.util.ArrayList)])\l type: DIRECT call: kotlin.Pair.\<init\>(java.lang.Object, java.lang.Object):void A[MD:(A, B):void (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0042|RETURN\l|0x0042: RETURN  (r3 I:kotlin.Pair\<java.util.List\<java.lang.Character\>, java.util.List\<java.lang.Character\>\>) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.Pair\<java.util.List\<java.lang.Character\>, java.util.List\<java.lang.Character\>\> kotlin.collections.ArraysKt___ArraysKt.partition((r7 I:char[] A[D('$this$partition' char[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:22:0x003a \-\> B:17:0x0017, CROSS_EDGE: B:21:0x0033 \-\> B:22:0x003a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x003d: r5 'element' C\l  0x000b\-0x0042: r0 '$i$f$partition' I\l  0x0010\-0x0042: r1 'first' Ljava\/util\/ArrayList;\l  0x0015\-0x0042: r2 'second' Ljava\/util\/ArrayList;\l  \-1 \-0x0042: r7 '$this$partition' [C\l  \-1 \-0x0042: r8 'predicate' Lkotlin\/jvm\/functions\/Function1;\lSIGNATURE: ([CLkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Character;Ljava\/lang\/Boolean;\>;)Lkotlin\/Pair\<Ljava\/util\/List\<Ljava\/lang\/Character;\>;Ljava\/util\/List\<Ljava\/lang\/Character;\>;\>;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_27;
Node_27 -> Node_22;
Node_22 -> Node_17;
Node_21 -> Node_26;
Node_26 -> Node_22;
Node_25 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_15;
}

