digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.count([Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function1;)I" {
subgraph cluster_Region_2121727306 {
label = "R(3:1|(2:(1:5)(0)|7)|10)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"predicate\")\lint r1 = 0\lint r3 = 0\l\l}"];
subgraph cluster_LoopRegion_1441996559 {
label = "LOOP:0: (2:(1:5)(0)|7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x000e|LOOP_START\lLOOP:0: B:15:0x000e\-\>B:19:0x0020\lPHI: r1 r3 \l  PHI: (r1v1 'count' int) = (r1v0 'count' int), (r1v2 'count' int) binds: [B:14:0x0000, B:19:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:14:0x0000, B:19:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r2) goto L3\l}"];
subgraph cluster_Region_1510491519 {
label = "R(2:(1:5)(0)|7)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_73255983 {
label = "IF [B:17:0x001c] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x001c|if (r7.invoke(r4).booleanValue() != false) goto L5\l}"];
subgraph cluster_Region_135116653 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x001e|r1++\l}"];
}
subgraph cluster_Region_798552157 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_19 [shape=record,label="{19\:\ 0x0020|LOOP_END\lLOOP:0: B:15:0x000e\-\>B:19:0x0020\lPHI: r1 \l  PHI: (r1v2 'count' int) = (r1v1 'count' int), (r1v3 'count' int) binds: [B:23:0x0020, B:22:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|r3++\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x0023|RETURN\l|return r1\l}"];
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0010}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0020|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0020|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0023|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.ArraysKt___ArraysKt.count((r6v0 T[] A[D('$this$count' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'predicate' kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0020 \-\> B:15:0x000e, CROSS_EDGE: B:17:0x001c \-\> B:19:0x0020\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)I\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_21[style=dashed];
Node_17 -> Node_18;
Node_17 -> Node_23[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_15;
Node_20 -> Node_13;
Node_12 -> Node_14;
Node_16 -> Node_17;
Node_22 -> Node_19;
Node_23 -> Node_19;
Node_21 -> Node_20;
}

