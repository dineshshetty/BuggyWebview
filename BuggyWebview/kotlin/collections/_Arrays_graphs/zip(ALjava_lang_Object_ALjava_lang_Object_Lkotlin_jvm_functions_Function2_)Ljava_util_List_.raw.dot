digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.zip([Ljava\/lang\/Object;[Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$zip' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"other\" \l0x0007: INVOKE  (r7 I:java.lang.Object A[D('other' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x000c: INVOKE  (r8 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: ARRAY_LENGTH  (r1 I:int) = (r6 I:??[] A[D('$this$zip' java.lang.Object[])])  (LINE:23269)\l0x0011: ARRAY_LENGTH  (r2 I:int) = (r7 I:??[] A[D('other' java.lang.Object[])]) \l0x0012: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0016: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:23270)\l0x0018: INVOKE  (r2 I:java.util.ArrayList), (r1 I:int A[D('size' int)]) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x001b: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:23271)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|LOOP_START\lLOOP:0: B:11:0x001c\-\>B:12:0x001e\l|0x001c: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:15:0x002c \l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|LOOP_END\lLOOP:0: B:11:0x001c\-\>B:12:0x001e\l|0x001e: AGET  (r4 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY][] A[D('$this$zip' java.lang.Object[])]), (r3 I:??[int, short, byte, char] A[D('i' int)])  (LINE:23272)\l0x0020: AGET  (r5 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][] A[D('other' java.lang.Object[])]), (r3 I:??[int, short, byte, char] A[D('i' int)]) \l0x0022: INVOKE  (r4 I:java.lang.Object) = \l  (r8 I:kotlin.jvm.functions.Function2 A[D('transform' kotlin.jvm.functions.Function2)])\l  (r4 I:java.lang.Object)\l  (r5 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x0026: INVOKE  (r2 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r4 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0029: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:23271)\l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('i' int)]) = (r2 I:??[OBJECT, ARRAY] A[D('list' java.util.ArrayList)])  (LINE:23274)\l0x002d: CHECK_CAST (r3 I:java.util.List) = (java.util.List) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|RETURN\l|0x002f: RETURN  (r3 I:java.util.List\<V\>) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<V\> kotlin.collections.ArraysKt___ArraysKt.zip((r6 I:T[] A[D('$this$zip' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:R[] A[D('other' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function2\<? super T, ? super R, ? extends V\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x001e \-\> B:11:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x002c: r3 'i' I\l  0x0010\-0x002f: r0 '$i$f$zip' I\l  0x0016\-0x002f: r1 'size' I\l  0x001b\-0x002f: r2 'list' Ljava\/util\/ArrayList;\l  \-1 \-0x002f: r6 '$this$zip' [Ljava\/lang\/Object;\l  \-1 \-0x002f: r7 'other' [Ljava\/lang\/Object;\l  \-1 \-0x002f: r8 'transform' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [R, T, V]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>([TT;[TR;Lkotlin\/jvm\/functions\/Function2\<\-TT;\-TR;+TV;\>;)Ljava\/util\/List\<TV;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_11;
Node_15 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

