digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.zip([Ljava\/lang\/Object;Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('$this$zip' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"other\" \l0x0007: INVOKE  (r8 I:java.lang.Object A[D('other' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x000c: INVOKE  (r9 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: ARRAY_LENGTH  (r1 I:int) = (r7 I:??[] A[D('$this$zip' java.lang.Object[])])  (LINE:23503)\l0x0011: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:23504)\l0x0013: CONST  (r3 I:??[int, float, short, byte, char]) = (10 ??[int, float, short, byte, char]) \l0x0015: INVOKE  (r3 I:int) = (r8 I:java.lang.Iterable A[D('other' java.lang.Iterable)]), (r3 I:int) type: STATIC call: kotlin.collections.CollectionsKt.collectionSizeOrDefault(java.lang.Iterable, int):int A[MD:\<T\>:(java.lang.Iterable\<? extends T\>, int):int (m)]\l0x0019: INVOKE  (r3 I:int) = (r3 I:int), (r1 I:int A[D('arraySize' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x001d: INVOKE  (r2 I:java.util.ArrayList), (r3 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0020: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:23505)\l0x0021: INVOKE  (r4 I:java.util.Iterator) = (r8 I:java.lang.Iterable A[D('other' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:23506)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|LOOP_START\lLOOP:0: B:15:0x0025\-\>B:19:0x0031\l|0x0025: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0029|0x0029: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x003e \l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|0x002b: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x002f|0x002f: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('arraySize' int)])  \-\> B:23:0x003e  (LINE:23507)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0031|LOOP_END\lLOOP:0: B:15:0x0025\-\>B:19:0x0031\l|0x0031: ARITH  (r6 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:23508)\l0x0033: AGET  (r3 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][] A[D('$this$zip' java.lang.Object[])]), (r3 I:??[int, short, byte, char] A[D('i' int)]) \l0x0035: INVOKE  (r3 I:java.lang.Object) = \l  (r9 I:kotlin.jvm.functions.Function2 A[D('transform' kotlin.jvm.functions.Function2)])\l  (r3 I:java.lang.Object)\l  (r5 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x0039: INVOKE  (r2 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r3 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x003c: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x003e|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x003e|0x003e: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('list' java.util.ArrayList)])  (LINE:23510)\l0x003f: CHECK_CAST (r4 I:java.util.List) = (java.util.List) (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0041|RETURN\l|0x0041: RETURN  (r4 I:java.util.List\<V\>) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x003e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<V\> kotlin.collections.ArraysKt___ArraysKt.zip((r7 I:T[] A[D('$this$zip' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.Iterable\<? extends R\> A[D('other' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.jvm.functions.Function2\<? super T, ? super R, ? extends V\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0031 \-\> B:15:0x0025, CROSS_EDGE: B:16:0x0029 \-\> B:20:0x003e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x0033: r3 'i' I\l  0x002f\-0x003e: r5 'element' Ljava\/lang\/Object;\l  0x0033\-0x003e: r6 'i' I\l  0x0010\-0x0041: r0 '$i$f$zip' I\l  0x0011\-0x0041: r1 'arraySize' I\l  0x0020\-0x0041: r2 'list' Ljava\/util\/ArrayList;\l  0x003e\-0x0041: r3 'i' I\l  \-1 \-0x0041: r7 '$this$zip' [Ljava\/lang\/Object;\l  \-1 \-0x0041: r8 'other' Ljava\/lang\/Iterable;\l  \-1 \-0x0041: r9 'transform' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [R, T, V]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>([TT;Ljava\/lang\/Iterable\<+TR;\>;Lkotlin\/jvm\/functions\/Function2\<\-TT;\-TR;+TV;\>;)Ljava\/util\/List\<TV;\>;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_22;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_15;
Node_23 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_22 -> Node_20;
}

