digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.minWithOrNull([SLjava\/util\/Comparator;)Ljava\/lang\/Short;" {
subgraph cluster_Region_784882392 {
label = "R(2:1|(2:(1:5)|(3:7|(2:10|(1:13)(0))|19)))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"comparator\")\l}"];
subgraph cluster_Region_854614269 {
label = "R(2:(1:5)|(3:7|(2:10|(1:13)(0))|19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_176813787 {
label = "IF [B:28:0x0012] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0012|PHI: r0 \l  PHI: (r0v4 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r6.length == 0) == true) goto L5\l}"];
subgraph cluster_Region_631899668 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0014|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_174408260 {
label = "R(3:7|(2:10|(1:13)(0))|19)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0016|short short r0 = r6[0]\lkotlin.collections.IntIterator ?? r1 = new kotlin.ranges.IntRange(1, kotlin.collections.ArraysKt.getLastIndex(r6)).iterator()\l}"];
subgraph cluster_LoopRegion_642844608 {
label = "LOOP:0: (2:10|(1:13)(0))";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0029|if (r1.hasNext() != false) goto L10\l}"];
subgraph cluster_Region_109450796 {
label = "R(2:10|(1:13)(0))";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x002b|int int r2 = r1.nextInt()\lshort short r3 = r6[r2]\l}"];
subgraph cluster_IfRegion_1072702940 {
label = "IF [B:35:0x003d] THEN: R(1:13) ELSE: R(0)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x003d|if (r7.compare(java.lang.Short.valueOf(r0), java.lang.Short.valueOf(r3)) \> 0) goto L12\l}"];
subgraph cluster_Region_1490615325 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x003f|r0 = r3\l}"];
}
subgraph cluster_Region_1238927075 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_38 [shape=record,label="{38\:\ 0x0045|RETURN\l|return java.lang.Short.valueOf(r0)\l}"];
}
}
}
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x000d}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x000f}"];
Node_23 [shape=record,color=red,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0025|LOOP_START\lLOOP:0: B:32:0x0025\-\>B:41:0x0025\lPHI: r0 \l  PHI: (r0v6 'min' short) = (r0v5 'min' short), (r0v7 'min' short) binds: [B:31:0x0016, B:41:0x0025] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x003f|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0025|SYNTHETIC\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0025|LOOP_END\lSYNTHETIC\lLOOP:0: B:32:0x0025\-\>B:41:0x0025\lPHI: r0 \l  PHI: (r0v7 'min' short) = (r0v6 'min' short), (r0v8 'min' short) binds: [B:42:0x0025, B:43:0x0025] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0025|SYNTHETIC\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0041|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0041}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0011}"];
MethodNode[shape=record,label="{public static final java.lang.Short kotlin.collections.ArraysKt___ArraysKt.minWithOrNull((r6v0 '$this$minWithOrNull' short[] A[D('$this$minWithOrNull' short[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'comparator' java.util.Comparator\<? super java.lang.Short\> A[D('comparator' java.util.Comparator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:35:0x003d \-\> B:32:0x0025, BACK_EDGE: B:36:0x003f \-\> B:32:0x0025, CROSS_EDGE: B:38:0x0045 \-\> B:23:?, CROSS_EDGE: B:27:0x0011 \-\> B:28:0x0012\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r1v1, types: [kotlin.collections.IntIterator]\}\lSIGNATURE: ([SLjava\/util\/Comparator\<\-Ljava\/lang\/Short;\>;)Ljava\/lang\/Short;\l}"];
MethodNode -> Node_22;Node_24 -> Node_25;
Node_28 -> Node_29;
Node_28 -> Node_31[style=dashed];
Node_29 -> Node_23;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_33 -> Node_39[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_40;
Node_35 -> Node_42[style=dashed];
Node_36 -> Node_43;
Node_38 -> Node_23;
Node_22 -> Node_24;
Node_25 -> Node_26;
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_32 -> Node_33;
Node_40 -> Node_36;
Node_43 -> Node_41;
Node_41 -> Node_32;
Node_42 -> Node_41;
Node_39 -> Node_37;
Node_37 -> Node_38;
Node_27 -> Node_28;
}

