digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.associateBy([BLkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r10 I:java.lang.Object A[D('$this$associateBy' byte[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"keySelector\" \l0x0007: INVOKE  (r11 I:java.lang.Object A[D('keySelector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"valueTransform\" \l0x000c: INVOKE  (r12 I:java.lang.Object A[D('valueTransform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: ARRAY_LENGTH  (r1 I:int) = (r10 I:??[] A[D('$this$associateBy' byte[])])  (LINE:8959)\l0x0011: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: kotlin.collections.MapsKt.mapCapacity(int):int A[MD:(int):int (m)]\l0x0015: CONST  (r2 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l0x0017: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: kotlin.ranges.RangesKt.coerceAtLeast(int, int):int A[MD:(int, int):int (m)]\l0x001b: NEW_INSTANCE  (r2 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap  (LINE:8960)\l0x001d: INVOKE  (r2 I:java.util.LinkedHashMap), (r1 I:int A[D('capacity' int)]) type: DIRECT call: java.util.LinkedHashMap.\<init\>(int):void A[MD:(int):void (c)]\l0x0020: CHECK_CAST (r2 I:java.util.Map) = (java.util.Map) (r2 I:??[OBJECT, ARRAY]) \l0x0022: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('$this$associateBy' byte[])]) \l0x0023: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0024: ARRAY_LENGTH  (r5 I:int) = (r3 I:??[] A[D('$this$associateByTo$iv' byte[])])  (LINE:24930)\l0x0025: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|LOOP_START\lLOOP:0: B:11:0x0026\-\>B:12:0x0028\l|0x0026: IF  (r6 I:??[int, byte, short, char]) \>= (r5 I:??[int, byte, short, char])  \-\> B:15:0x0041 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|LOOP_END\lLOOP:0: B:11:0x0026\-\>B:12:0x0028\l|0x0028: AGET  (r7 I:??[int, short, byte, char]) = (r3 I:byte[] A[D('$this$associateByTo$iv' byte[]), IMMUTABLE_TYPE]), (r6 I:??[int, short, byte, char]) \l0x002a: INVOKE  (r8 I:java.lang.Byte) = (r7 I:byte A[D('element$iv' byte)]) type: STATIC call: java.lang.Byte.valueOf(byte):java.lang.Byte A[MD:(byte):java.lang.Byte (c)] (LINE:24931)\l0x002e: INVOKE  (r8 I:java.lang.Object) = (r11 I:kotlin.jvm.functions.Function1 A[D('keySelector' kotlin.jvm.functions.Function1)]), (r8 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0032: INVOKE  (r9 I:java.lang.Byte) = (r7 I:byte A[D('element$iv' byte)]) type: STATIC call: java.lang.Byte.valueOf(byte):java.lang.Byte A[MD:(byte):java.lang.Byte (c)]\l0x0036: INVOKE  (r9 I:java.lang.Object) = (r12 I:kotlin.jvm.functions.Function1 A[D('valueTransform' kotlin.jvm.functions.Function1)]), (r9 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x003a: INVOKE  (r2 I:java.util.Map A[D('destination$iv' java.util.Map)]), (r8 I:java.lang.Object), (r9 I:java.lang.Object) type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l0x003d: ARITH  (r6 I:int) = (r6 I:int) + (1 int)  (LINE:24930)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0041|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|RETURN\l|0x0041: RETURN  (r2 I:java.util.Map\<K, V\> A[D('destination$iv' java.util.Map)])  (LINE:8960)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.ArraysKt___ArraysKt.associateBy((r10 I:byte[] A[D('$this$associateBy' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlin.jvm.functions.Function1\<? super java.lang.Byte, ? extends K\> A[D('keySelector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlin.jvm.functions.Function1\<? super java.lang.Byte, ? extends V\> A[D('valueTransform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x0028 \-\> B:11:0x0026\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002a\-0x0040: r7 'element$iv' B\l  0x0022\-0x0041: r2 'destination$iv' Ljava\/util\/Map;\l  0x0023\-0x0041: r3 '$this$associateByTo$iv' [B\l  0x0024\-0x0041: r4 '$i$f$associateByTo' I\l  0x0010\-0x0041: r0 '$i$f$associateBy' I\l  0x001b\-0x0041: r1 'capacity' I\l  \-1 \-0x0041: r10 '$this$associateBy' [B\l  \-1 \-0x0041: r11 'keySelector' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x0041: r12 'valueTransform' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>([BLkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Byte;+TK;\>;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Byte;+TV;\>;)Ljava\/util\/Map\<TK;TV;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_11;
Node_15 -> Node_14;
Node_14 -> Node_9;
}

