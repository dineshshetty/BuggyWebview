digraph "CFG forkotlin.collections.AbstractList.IteratorImpl.next()Ljava\/lang\/Object;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r3 I:kotlin.collections.AbstractList$IteratorImpl) type: VIRTUAL call: kotlin.collections.AbstractList.IteratorImpl.hasNext():boolean A[MD:():boolean (m)] (LINE:78)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0013 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: IGET  (r0 I:kotlin.collections.AbstractList\<E\>) = (r3 I:kotlin.collections.AbstractList$IteratorImpl) kotlin.collections.AbstractList.IteratorImpl.this$0 kotlin.collections.AbstractList  (LINE:79)\l0x0008: IGET  (r1 I:int) = (r3 I:kotlin.collections.AbstractList$IteratorImpl) kotlin.collections.AbstractList.IteratorImpl.index int \l0x000a: ARITH  (r2 I:int) = (r1 I:int) + (1 int) \l0x000c: IPUT  (r2 I:int), (r3 I:kotlin.collections.AbstractList$IteratorImpl) kotlin.collections.AbstractList.IteratorImpl.index int \l0x000e: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlin.collections.AbstractList), (r1 I:int) type: VIRTUAL call: kotlin.collections.AbstractList.get(int):java.lang.Object A[MD:(int):E (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0012|RETURN\l|0x0012: RETURN  (r0 I:E) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0013|0x0013: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException  (LINE:78)\l0x0015: INVOKE  (r0 I:java.util.NoSuchElementException) type: DIRECT call: java.util.NoSuchElementException.\<init\>():void A[MD:():void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0018|0x0018: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public E kotlin.collections.AbstractList.IteratorImpl.next((r3 'this' I:kotlin.collections.AbstractList$IteratorImpl A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0018 \-\> B:9:?\lINLINE_NOT_NEEDED\lSIGNATURE: ()TE;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Iterator.next():E\}]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

