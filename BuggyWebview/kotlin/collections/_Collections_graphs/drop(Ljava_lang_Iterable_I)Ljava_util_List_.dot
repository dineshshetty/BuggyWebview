digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.drop(Ljava\/lang\/Iterable;I)Ljava\/util\/List;" {
Node_104 [shape=record,label="{104\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_106 [shape=record,label="{106\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"\<this\>\")\l}"];
Node_107 [shape=record,label="{107\:\ 0x0006|if (r6 \< 0) goto L51\l}"];
Node_108 [shape=record,label="{108\:\ 0x0008|r1 = true\l}"];
Node_110 [shape=record,label="{110\:\ 0x000b|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v20 boolean) binds: [B:109:0x000a, B:108:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L49\l}"];
Node_111 [shape=record,label="{111\:\ 0x000d|if (r6 != 0) goto L9\l}"];
Node_112 [shape=record,label="{112\:\ 0x000f}"];
Node_113 [shape=record,label="{113\:\ 0x0013|RETURN\l|return kotlin.collections.CollectionsKt.toList(r5)\l}"];
Node_105 [shape=record,label="{105\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_114 [shape=record,label="{114\:\ 0x0014}"];
Node_115 [shape=record,label="{115\:\ 0x0017|if ((r5 instanceof java.util.Collection) == false) goto L48\l}"];
Node_116 [shape=record,label="{116\:\ 0x0019|int r2 = ((java.util.Collection) r5).size() \- r6\l}"];
Node_117 [shape=record,label="{117\:\ 0x0021|if (r2 \> 0) goto L15\l}"];
Node_118 [shape=record,label="{118\:\ 0x0023}"];
Node_119 [shape=record,label="{119\:\ 0x0027|RETURN\l|return kotlin.collections.CollectionsKt.emptyList()\l}"];
Node_120 [shape=record,label="{120\:\ 0x0028|if (r2 != 1) goto L18\l}"];
Node_121 [shape=record,label="{121\:\ 0x002a}"];
Node_122 [shape=record,label="{122\:\ 0x0032|RETURN\l|return kotlin.collections.CollectionsKt.listOf(kotlin.collections.CollectionsKt.last(r5))\l}"];
Node_123 [shape=record,label="{123\:\ 0x0033|java.util.ArrayList r0 = new java.util.ArrayList(r2)\l}"];
Node_124 [shape=record,label="{124\:\ 0x003a|if ((r5 instanceof java.util.List) == false) goto L33\l}"];
Node_125 [shape=record,label="{125\:\ 0x003c}"];
Node_126 [shape=record,label="{126\:\ 0x003e|if ((r5 instanceof java.util.RandomAccess) == false) goto L28\l}"];
Node_127 [shape=record,label="{127\:\ 0x0040|r1 = r6\lint r3 = ((java.util.Collection) r5).size()\l}"];
Node_128 [shape=record,label="{128\:\ 0x0048|LOOP_START\lLOOP:0: B:128:0x0048\-\>B:129:0x004a\lPHI: r1 \l  PHI: (r1v18 'index' int) = (r1v17 'index' int), (r1v19 'index' int) binds: [B:127:0x0040, B:129:0x004a] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r3) goto L25\l}"];
Node_129 [shape=record,label="{129\:\ 0x004a|LOOP_END\lLOOP:0: B:128:0x0048\-\>B:129:0x004a\l|r0.add(((java.util.List) r5).get(r1))\lint r1 = r1 + 1\l}"];
Node_148 [shape=record,label="{148\:\ 0x006e|SYNTHETIC\l}"];
Node_134 [shape=record,label="{134\:\ 0x006e}"];
Node_135 [shape=record,label="{135\:\ 0x0071|RETURN\l|return r0\l}"];
Node_130 [shape=record,label="{130\:\ 0x0057|java.util.Iterator r1 = ((java.util.List) r5).listIterator(r6)\l}"];
Node_131 [shape=record,label="{131\:\ 0x0060|LOOP_START\lLOOP:1: B:131:0x0060\-\>B:133:0x0066\l}"];
Node_132 [shape=record,label="{132\:\ 0x0064|if (r1.hasNext() == false) goto L32\l}"];
Node_133 [shape=record,label="{133\:\ 0x0066|LOOP_END\lLOOP:1: B:131:0x0060\-\>B:133:0x0066\l|java.lang.Object r3 = r1.next()\lr0.add(r3)\l}"];
Node_149 [shape=record,label="{149\:\ 0x006e|SYNTHETIC\l}"];
Node_137 [shape=record,label="{137\:\ 0x0077|PHI: r0 \l  PHI: (r0v6 'list' java.util.ArrayList) = (r0v5 'list' java.util.ArrayList), (r0v7 'list' java.util.ArrayList) binds: [B:136:0x0072, B:124:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|r1 = 0\ljava.util.Iterator r2 = r5.iterator()\l}"];
Node_138 [shape=record,label="{138\:\ 0x007c|LOOP_START\lLOOP:2: B:138:0x007c\-\>B:153:0x007c\lPHI: r1 \l  PHI: (r1v6 'count' int) = (r1v5 'count' int), (r1v7 'count' int) binds: [B:137:0x0077, B:153:0x007c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_139 [shape=record,label="{139\:\ 0x0080|if (r2.hasNext() == false) goto L45\l}"];
Node_140 [shape=record,label="{140\:\ 0x0082|java.lang.Object r3 = r2.next()\l}"];
Node_141 [shape=record,label="{141\:\ 0x0086|if (r1 \< r6) goto L38\l}"];
Node_151 [shape=record,label="{151\:\ 0x008c|SYNTHETIC\l}"];
Node_143 [shape=record,label="{143\:\ 0x008c|int r1 = r1 + 1\l}"];
Node_154 [shape=record,label="{154\:\ 0x007c|SYNTHETIC\l}"];
Node_153 [shape=record,label="{153\:\ 0x007c|LOOP_END\lSYNTHETIC\lLOOP:2: B:138:0x007c\-\>B:153:0x007c\lPHI: r1 \l  PHI: (r1v7 'count' int) = (r1v6 'count' int), (r1v8 'count' int) binds: [B:155:0x007c, B:154:0x007c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_152 [shape=record,label="{152\:\ 0x0088|SYNTHETIC\l}"];
Node_142 [shape=record,label="{142\:\ 0x0088|r0.add(r3)\l}"];
Node_155 [shape=record,label="{155\:\ 0x007c|SYNTHETIC\l}"];
Node_150 [shape=record,label="{150\:\ 0x008f|SYNTHETIC\l}"];
Node_144 [shape=record,label="{144\:\ 0x008f}"];
Node_145 [shape=record,label="{145\:\ 0x0096|RETURN\l|return kotlin.collections.CollectionsKt.optimizeReadOnlyList(r0)\l}"];
Node_136 [shape=record,label="{136\:\ 0x0072|java.util.ArrayList r0 = new java.util.ArrayList()\l}"];
Node_146 [shape=record,label="{146\:\ 0x0097|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Requested element count \")\lr1.append(r6)\lr1.append(\" is less than zero.\")\l}"];
Node_147 [shape=record,label="{147\:\ 0x00b7|throw new java.lang.IllegalArgumentException(r1.toString().toString())\l}"];
Node_109 [shape=record,label="{109\:\ 0x000a|r1 = false\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.drop((r5v0 java.lang.Iterable\<? extends T\> A[D('$this$drop' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'n' int A[D('n' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:119:0x0027 \-\> B:105:?, CROSS_EDGE: B:122:0x0032 \-\> B:105:?, BACK_EDGE: B:129:0x004a \-\> B:128:0x0048, CROSS_EDGE: B:135:0x0071 \-\> B:105:?, BACK_EDGE: B:133:0x0066 \-\> B:131:0x0060, CROSS_EDGE: B:132:0x0064 \-\> B:134:0x006e, BACK_EDGE: B:142:0x0088 \-\> B:138:0x007c, BACK_EDGE: B:143:0x008c \-\> B:138:0x007c, CROSS_EDGE: B:145:0x0096 \-\> B:105:?, CROSS_EDGE: B:136:0x0072 \-\> B:137:0x0077, CROSS_EDGE: B:147:0x00b7 \-\> B:105:?, CROSS_EDGE: B:109:0x000a \-\> B:110:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;I)Ljava\/util\/List\<TT;\>;\l}"];
MethodNode -> Node_104;Node_104 -> Node_106;
Node_106 -> Node_107;
Node_107 -> Node_108[style=dashed];
Node_107 -> Node_109;
Node_108 -> Node_110;
Node_110 -> Node_111[style=dashed];
Node_110 -> Node_146;
Node_111 -> Node_112[style=dashed];
Node_111 -> Node_114;
Node_112 -> Node_113;
Node_113 -> Node_105;
Node_114 -> Node_115;
Node_115 -> Node_116[style=dashed];
Node_115 -> Node_136;
Node_116 -> Node_117;
Node_117 -> Node_118[style=dashed];
Node_117 -> Node_120;
Node_118 -> Node_119;
Node_119 -> Node_105;
Node_120 -> Node_121[style=dashed];
Node_120 -> Node_123;
Node_121 -> Node_122;
Node_122 -> Node_105;
Node_123 -> Node_124;
Node_124 -> Node_125[style=dashed];
Node_124 -> Node_137;
Node_125 -> Node_126;
Node_126 -> Node_127[style=dashed];
Node_126 -> Node_130;
Node_127 -> Node_128;
Node_128 -> Node_129[style=dashed];
Node_128 -> Node_148;
Node_129 -> Node_128;
Node_148 -> Node_134;
Node_134 -> Node_135;
Node_135 -> Node_105;
Node_130 -> Node_131;
Node_131 -> Node_132;
Node_132 -> Node_133[style=dashed];
Node_132 -> Node_149;
Node_133 -> Node_131;
Node_149 -> Node_134;
Node_137 -> Node_138;
Node_138 -> Node_139;
Node_139 -> Node_140[style=dashed];
Node_139 -> Node_150;
Node_140 -> Node_141;
Node_141 -> Node_151;
Node_141 -> Node_152[style=dashed];
Node_151 -> Node_143;
Node_143 -> Node_154;
Node_154 -> Node_153;
Node_153 -> Node_138;
Node_152 -> Node_142;
Node_142 -> Node_155;
Node_155 -> Node_153;
Node_150 -> Node_144;
Node_144 -> Node_145;
Node_145 -> Node_105;
Node_136 -> Node_137;
Node_146 -> Node_147;
Node_147 -> Node_105;
Node_109 -> Node_110;
}

