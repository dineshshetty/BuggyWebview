digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.minOrNull(Ljava\/lang\/Iterable;)Ljava\/lang\/Comparable;" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\ljava.util.Iterator r0 = r4.iterator()\l}"];
Node_39 [shape=record,label="{39\:\ 0x000d|if (r0.hasNext() != false) goto L5\l}"];
Node_40 [shape=record,label="{40\:\ 0x000f|RETURN\l|return null\l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0011|java.lang.Comparable r1 = r0.next()\l}"];
Node_43 [shape=record,label="{43\:\ 0x0017|LOOP_START\lLOOP:0: B:43:0x0017\-\>B:51:0x0017\lPHI: r1 \l  PHI: (r1v3 T extends java.lang.Comparable\<? super T\>) = (r1v2 T extends java.lang.Comparable\<? super T\>), (r1v4 T extends java.lang.Comparable\<? super T\>) binds: [B:42:0x0011, B:51:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_44 [shape=record,label="{44\:\ 0x001b|if (r0.hasNext() == false) goto L15\l}"];
Node_45 [shape=record,label="{45\:\ 0x001d|java.lang.Comparable r2 = r0.next()\l}"];
Node_46 [shape=record,label="{46\:\ 0x0027|if (r1.compareTo(r2) \<= 0) goto L14\l}"];
Node_49 [shape=record,label="{49\:\ 0x0029|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0029|r1 = r2\l}"];
Node_53 [shape=record,label="{53\:\ 0x0017|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0017|LOOP_END\lSYNTHETIC\lLOOP:0: B:43:0x0017\-\>B:51:0x0017\lPHI: r1 \l  PHI: (r1v4 T extends java.lang.Comparable\<? super T\>) = (r1v3 T extends java.lang.Comparable\<? super T\>), (r1v5 T extends java.lang.Comparable\<? super T\>) binds: [B:52:0x0017, B:53:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0017|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x002b|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x002b|RETURN\l|return r1\l}"];
MethodNode[shape=record,label="{public static final T extends java.lang.Comparable\<? super T\> kotlin.collections.CollectionsKt___CollectionsKt.minOrNull((r4v0 java.lang.Iterable\<? extends T extends java.lang.Comparable\<? super T\>\> A[D('$this$minOrNull' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:46:0x0027 \-\> B:43:0x0017, BACK_EDGE: B:47:0x0029 \-\> B:43:0x0017, CROSS_EDGE: B:48:0x002b \-\> B:37:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T extends java.lang.Comparable\<? super T\>]\lSIGNATURE: \<T::Ljava\/lang\/Comparable\<\-TT;\>;\>(Ljava\/lang\/Iterable\<+TT;\>;)TT;\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_37;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_50;
Node_45 -> Node_46;
Node_46 -> Node_49[style=dashed];
Node_46 -> Node_52;
Node_49 -> Node_47;
Node_47 -> Node_53;
Node_53 -> Node_51;
Node_51 -> Node_43;
Node_52 -> Node_51;
Node_50 -> Node_48;
Node_48 -> Node_37;
}

