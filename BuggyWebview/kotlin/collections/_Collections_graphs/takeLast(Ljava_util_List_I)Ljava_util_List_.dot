digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.takeLast(Ljava\/util\/List;I)Ljava\/util\/List;" {
Node_64 [shape=record,label="{64\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_66 [shape=record,label="{66\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\l}"];
Node_67 [shape=record,label="{67\:\ 0x0006|if (r5 \< 0) goto L31\l}"];
Node_68 [shape=record,label="{68\:\ 0x0008|r1 = true\l}"];
Node_70 [shape=record,label="{70\:\ 0x000b|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v5 boolean) binds: [B:69:0x000a, B:68:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L29\l}"];
Node_71 [shape=record,label="{71\:\ 0x000d|if (r5 != 0) goto L9\l}"];
Node_72 [shape=record,label="{72\:\ 0x000f}"];
Node_73 [shape=record,label="{73\:\ 0x0013|RETURN\l|return kotlin.collections.CollectionsKt.emptyList()\l}"];
Node_65 [shape=record,label="{65\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_74 [shape=record,label="{74\:\ 0x0014|int r1 = r4.size()\l}"];
Node_75 [shape=record,label="{75\:\ 0x0018|if (r5 \< r1) goto L13\l}"];
Node_76 [shape=record,label="{76\:\ 0x001a}"];
Node_77 [shape=record,label="{77\:\ 0x0021|RETURN\l|return kotlin.collections.CollectionsKt.toList(r4)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0022|if (r5 != 1) goto L16\l}"];
Node_79 [shape=record,label="{79\:\ 0x0024}"];
Node_80 [shape=record,label="{80\:\ 0x002c|RETURN\l|return kotlin.collections.CollectionsKt.listOf(kotlin.collections.CollectionsKt.last(r4))\l}"];
Node_81 [shape=record,label="{81\:\ 0x002d|java.util.ArrayList r0 = new java.util.ArrayList(r5)\l}"];
Node_82 [shape=record,label="{82\:\ 0x0034|if ((r4 instanceof java.util.RandomAccess) == false) goto L24\l}"];
Node_83 [shape=record,label="{83\:\ 0x0036|int r2 = r1 \- r5\l}"];
Node_84 [shape=record,label="{84\:\ 0x0038|LOOP_START\lLOOP:0: B:84:0x0038\-\>B:85:0x003a\lPHI: r2 \l  PHI: (r2v9 'index' int) = (r2v8 'index' int), (r2v10 'index' int) binds: [B:83:0x0036, B:85:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r1) goto L21\l}"];
Node_85 [shape=record,label="{85\:\ 0x003a|LOOP_END\lLOOP:0: B:84:0x0038\-\>B:85:0x003a\l|r0.add(r4.get(r2))\lint r2 = r2 + 1\l}"];
Node_94 [shape=record,label="{94\:\ 0x005a|SYNTHETIC\l}"];
Node_90 [shape=record,label="{90\:\ 0x005a}"];
Node_91 [shape=record,label="{91\:\ 0x005d|RETURN\l|return r0\l}"];
Node_86 [shape=record,label="{86\:\ 0x0044|int r2 = r1 \- r5\ljava.util.Iterator r2 = r4.listIterator(r2)\l}"];
Node_87 [shape=record,label="{87\:\ 0x004c|LOOP_START\lLOOP:1: B:87:0x004c\-\>B:89:0x0052\l}"];
Node_88 [shape=record,label="{88\:\ 0x0050|if (r2.hasNext() == false) goto L28\l}"];
Node_89 [shape=record,label="{89\:\ 0x0052|LOOP_END\lLOOP:1: B:87:0x004c\-\>B:89:0x0052\l|r0.add(r2.next())\l}"];
Node_95 [shape=record,label="{95\:\ 0x005a|SYNTHETIC\l}"];
Node_92 [shape=record,label="{92\:\ 0x005e|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Requested element count \")\lr1.append(r5)\lr1.append(\" is less than zero.\")\l}"];
Node_93 [shape=record,label="{93\:\ 0x007e|throw new java.lang.IllegalArgumentException(r1.toString().toString())\l}"];
Node_69 [shape=record,label="{69\:\ 0x000a|r1 = false\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.takeLast((r4v0 java.util.List\<? extends T\> A[D('$this$takeLast' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'n' int A[D('n' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:77:0x0021 \-\> B:65:?, CROSS_EDGE: B:80:0x002c \-\> B:65:?, BACK_EDGE: B:85:0x003a \-\> B:84:0x0038, CROSS_EDGE: B:91:0x005d \-\> B:65:?, BACK_EDGE: B:89:0x0052 \-\> B:87:0x004c, CROSS_EDGE: B:88:0x0050 \-\> B:90:0x005a, CROSS_EDGE: B:93:0x007e \-\> B:65:?, CROSS_EDGE: B:69:0x000a \-\> B:70:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/List\<+TT;\>;I)Ljava\/util\/List\<TT;\>;\l}"];
MethodNode -> Node_64;Node_64 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_69;
Node_68 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_92;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_74;
Node_72 -> Node_73;
Node_73 -> Node_65;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_78;
Node_76 -> Node_77;
Node_77 -> Node_65;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_81;
Node_79 -> Node_80;
Node_80 -> Node_65;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_86;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_94;
Node_85 -> Node_84;
Node_94 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_65;
Node_86 -> Node_87;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_95;
Node_89 -> Node_87;
Node_95 -> Node_90;
Node_92 -> Node_93;
Node_93 -> Node_65;
Node_69 -> Node_70;
}

