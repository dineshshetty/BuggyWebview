digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.reduceOrNull(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function2;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1009735991 {
label = "R(2:1|(2:(3:5|(1:8)|10)|(1:3)))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"operation\")\ljava.util.Iterator java.util.Iterator r1 = r4.iterator()\l}"];
subgraph cluster_Region_729965617 {
label = "R(2:(3:5|(1:8)|10)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_492040328 {
label = "IF [B:27:0x0013] THEN: R(3:5|(1:8)|10) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0013|if (r1.hasNext() == true) goto L5\l}"];
subgraph cluster_Region_2079448282 {
label = "R(3:5|(1:8)|10)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0017|java.lang.Object T r2 = r1.next()\l}"];
subgraph cluster_LoopRegion_1760608251 {
label = "LOOP:0: (1:8)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x001f|if (r1.hasNext() != false) goto L8\l}"];
subgraph cluster_Region_785425715 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0021|LOOP_END\lLOOP:0: B:31:0x001b\-\>B:33:0x0021\l|java.lang.Object r2 = (S) r5.invoke(r2, (T) r1.next())\l}"];
}
}
Node_34 [shape=record,label="{34\:\ 0x002a|RETURN\l|return (S) r2\l}"];
}
}
subgraph cluster_Region_44460753 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0015|RETURN\l|return null\l}"];
}
}
}
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x001b|LOOP_START\lLOOP:0: B:31:0x001b\-\>B:33:0x0021\lPHI: r2 \l  PHI: (r2v2 'accumulator' java.lang.Object) = (r2v1 'accumulator' T extends S), (r2v3 'accumulator' java.lang.Object) binds: [B:30:0x0017, B:33:0x0021] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x002a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final S kotlin.collections.CollectionsKt___CollectionsKt.reduceOrNull((r4v0 java.lang.Iterable\<? extends T extends S\> A[D('$this$reduceOrNull' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'operation' kotlin.jvm.functions.Function2\<? super S, ? super T extends S, ? extends S\> A[D('operation' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:33:0x0021 \-\> B:31:0x001b, CROSS_EDGE: B:34:0x002a \-\> B:25:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [S, T extends S]\lSIGNATURE: \<S:Ljava\/lang\/Object;T::TS;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function2\<\-TS;\-TT;+TS;\>;)TS;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r3v1. Raw type applied. Possible types: T extends S, ? super T extends S\}\l}"];
MethodNode -> Node_24;Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_32 -> Node_35[style=dashed];
Node_33 -> Node_31;
Node_34 -> Node_25;
Node_28 -> Node_25;
Node_24 -> Node_26;
Node_31 -> Node_32;
Node_35 -> Node_34;
}

