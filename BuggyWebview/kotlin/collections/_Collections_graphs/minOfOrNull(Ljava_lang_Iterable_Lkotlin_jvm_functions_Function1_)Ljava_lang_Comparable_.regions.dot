digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.minOfOrNull(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Comparable;" {
subgraph cluster_Region_741014767 {
label = "R(2:1|(2:(3:5|(2:8|(1:11)(0))|16)|(1:3)))";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"selector\")\ljava.util.Iterator java.util.Iterator r0 = r4.iterator()\l}"];
subgraph cluster_Region_905906326 {
label = "R(2:(3:5|(2:8|(1:11)(0))|16)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_161129158 {
label = "IF [B:39:0x0012] THEN: R(3:5|(2:8|(1:11)(0))|16) ELSE: null";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0012|if (r0.hasNext() == true) goto L5\l}"];
subgraph cluster_Region_500168399 {
label = "R(3:5|(2:8|(1:11)(0))|16)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0016|java.lang.Comparable R r1 = r5.invoke((T) r0.next())\l}"];
subgraph cluster_LoopRegion_486018284 {
label = "LOOP:0: (2:8|(1:11)(0))";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0024|if (r0.hasNext() != false) goto L8\l}"];
subgraph cluster_Region_1741575704 {
label = "R(2:8|(1:11)(0))";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0026|java.lang.Comparable R r2 = r5.invoke((T) r0.next())\l}"];
subgraph cluster_IfRegion_1493546135 {
label = "IF [B:46:0x0034] THEN: R(1:11) ELSE: R(0)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0034|if (r1.compareTo(r2) \> 0) goto L10\l}"];
subgraph cluster_Region_991839413 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x0036|r1 = r2\l}"];
}
subgraph cluster_Region_366925835 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_48 [shape=record,label="{48\:\ 0x0038|RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_797586832 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0014|RETURN\l|return null\l}"];
}
}
}
Node_36 [shape=record,color=red,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,color=red,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0020|LOOP_START\lLOOP:0: B:43:0x0020\-\>B:51:0x0020\lPHI: r1 \l  PHI: (r1v4 R extends java.lang.Comparable\<? super R\>) = (r1v3 R extends java.lang.Comparable\<? super R\>), (r1v5 R extends java.lang.Comparable\<? super R\>) binds: [B:42:0x0016, B:51:0x0020] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x0036|SYNTHETIC\l}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x0020|SYNTHETIC\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0020|LOOP_END\lSYNTHETIC\lLOOP:0: B:43:0x0020\-\>B:51:0x0020\lPHI: r1 \l  PHI: (r1v5 R extends java.lang.Comparable\<? super R\>) = (r1v4 R extends java.lang.Comparable\<? super R\>), (r1v6 R extends java.lang.Comparable\<? super R\>) binds: [B:52:0x0020, B:53:0x0020] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0020|SYNTHETIC\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0038|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static final R extends java.lang.Comparable\<? super R\> kotlin.collections.CollectionsKt___CollectionsKt.minOfOrNull((r4v0 java.lang.Iterable\<? extends T\> A[D('$this$minOfOrNull' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'selector' kotlin.jvm.functions.Function1\<? super T, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:46:0x0034 \-\> B:43:0x0020, BACK_EDGE: B:47:0x0036 \-\> B:43:0x0020, CROSS_EDGE: B:48:0x0038 \-\> B:37:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R::Ljava\/lang\/Comparable\<\-TR;\>;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)TR;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r1v1. Raw type applied. Possible types: T, ? super T\l \-\> Type inference failed for r2v1. Raw type applied. Possible types: T, ? super T\}\l}"];
MethodNode -> Node_36;Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_42 -> Node_43;
Node_44 -> Node_45;
Node_44 -> Node_50[style=dashed];
Node_45 -> Node_46;
Node_46 -> Node_49;
Node_46 -> Node_52[style=dashed];
Node_47 -> Node_53;
Node_48 -> Node_37;
Node_40 -> Node_37;
Node_36 -> Node_38;
Node_43 -> Node_44;
Node_49 -> Node_47;
Node_53 -> Node_51;
Node_51 -> Node_43;
Node_52 -> Node_51;
Node_50 -> Node_48;
}

