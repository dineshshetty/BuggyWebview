digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.last(Ljava\/lang\/Iterable;)Ljava\/lang\/Object;" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\l}"];
Node_35 [shape=record,label="{35\:\ 0x0008|if ((r3 instanceof java.util.List) == false) goto L6\l}"];
Node_36 [shape=record,label="{36\:\ 0x000a}"];
Node_37 [shape=record,label="{37\:\ 0x0011|RETURN\l|return (T) kotlin.collections.CollectionsKt.last((java.util.List) r3)\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0012|java.util.Iterator r0 = r3.iterator()\l}"];
Node_39 [shape=record,label="{39\:\ 0x001a|if (r0.hasNext() == false) goto L14\l}"];
Node_40 [shape=record,label="{40\:\ 0x001c|java.lang.Object r1 = r0.next()\l}"];
Node_41 [shape=record,label="{41\:\ 0x0020|LOOP_START\lLOOP:0: B:41:0x0020\-\>B:43:0x0026\lPHI: r1 \l  PHI: (r1v3 T) = (r1v2 T), (r1v4 T) binds: [B:40:0x001c, B:43:0x0026] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0024|if (r0.hasNext() == false) goto L12\l}"];
Node_43 [shape=record,label="{43\:\ 0x0026|LOOP_END\lLOOP:0: B:41:0x0020\-\>B:43:0x0026\l|java.lang.Object r1 = r0.next()\l}"];
Node_47 [shape=record,label="{47\:\ 0x002b|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x002b|RETURN\l|return r1\l}"];
Node_45 [shape=record,label="{45\:\ 0x002c}"];
Node_46 [shape=record,label="{46\:\ 0x0033|throw new java.util.NoSuchElementException(\"Collection is empty.\")\l}"];
MethodNode[shape=record,label="{public static final T kotlin.collections.CollectionsKt___CollectionsKt.last((r3v0 java.lang.Iterable\<? extends T\> A[D('$this$last' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:43:0x0026 \-\> B:41:0x0020, CROSS_EDGE: B:44:0x002b \-\> B:33:?, CROSS_EDGE: B:46:0x0033 \-\> B:33:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;)TT;\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_38;
Node_36 -> Node_37;
Node_37 -> Node_33;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_45;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_47;
Node_43 -> Node_41;
Node_47 -> Node_44;
Node_44 -> Node_33;
Node_45 -> Node_46;
Node_46 -> Node_33;
}

