digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.toCharArray(Ljava\/util\/Collection;)[C" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$toCharArray' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:int) = (r5 I:java.util.Collection A[D('$this$toCharArray' java.util.Collection)]) type: INTERFACE call: java.util.Collection.size():int A[MD:():int (c)] (LINE:1106)\l0x0009: NEW_ARRAY  (r0 I:char[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: char[] \l0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1107)\l0x000c: INVOKE  (r2 I:java.util.Iterator) = (r5 I:java.util.Collection A[D('$this$toCharArray' java.util.Collection)]) type: INTERFACE call: java.util.Collection.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:1108)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|LOOP_START\lLOOP:0: B:19:0x0010\-\>B:21:0x0016\l|0x0010: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|0x0014: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0026 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|LOOP_END\lLOOP:0: B:19:0x0010\-\>B:21:0x0016\l|0x0016: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001a: CHECK_CAST (r3 I:java.lang.Character) = (java.lang.Character) (r3 I:??[OBJECT, ARRAY]) \l0x001c: INVOKE  (r3 I:char) = (r3 I:java.lang.Character) type: VIRTUAL call: java.lang.Character.charValue():char A[MD:():char (c)]\l0x0020: ARITH  (r4 I:int) = (r1 I:int A[D('index' int)]) + (1 int)  (LINE:1109)\l0x0022: APUT  \l  (r0 I:char[] A[D('result' char[]), IMMUTABLE_TYPE])\l  (r1 I:??[int, short, byte, char] A[D('index' int)])\l  (r3 I:char A[D('element' char), IMMUTABLE_TYPE])\l \l0x0024: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0026|RETURN\l|0x0026: RETURN  (r0 I:char[] A[D('result' char[])])  (LINE:1110)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final char[] kotlin.collections.CollectionsKt___CollectionsKt.toCharArray((r5 I:java.util.Collection\<java.lang.Character\> A[D('$this$toCharArray' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0016 \-\> B:19:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x0022: r1 'index' I\l  0x0020\-0x0025: r3 'element' C\l  0x0022\-0x0026: r4 'index' I\l  0x000b\-0x0026: r0 'result' [C\l  0x0026\-0x0026: r1 'index' I\l  \-1 \-0x0026: r5 '$this$toCharArray' Ljava\/util\/Collection;\lSIGNATURE: (Ljava\/util\/Collection\<Ljava\/lang\/Character;\>;)[C\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_19;
Node_23 -> Node_22;
Node_22 -> Node_17;
}

