digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.minOf(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Comparable;" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"selector\")\ljava.util.Iterator r0 = r4.iterator()\l}"];
Node_39 [shape=record,label="{39\:\ 0x0012|if (r0.hasNext() == false) goto L16\l}"];
Node_40 [shape=record,label="{40\:\ 0x0014|java.lang.Comparable r1 = r5.invoke((T) r0.next())\l}"];
Node_41 [shape=record,label="{41\:\ 0x001e|LOOP_START\lLOOP:0: B:41:0x001e\-\>B:51:0x001e\lPHI: r1 \l  PHI: (r1v5 R extends java.lang.Comparable\<? super R\>) = (r1v4 R extends java.lang.Comparable\<? super R\>), (r1v6 R extends java.lang.Comparable\<? super R\>) binds: [B:40:0x0014, B:51:0x001e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0022|if (r0.hasNext() == false) goto L13\l}"];
Node_43 [shape=record,label="{43\:\ 0x0024|java.lang.Comparable r2 = r5.invoke((T) r0.next())\l}"];
Node_44 [shape=record,label="{44\:\ 0x0032|if (r1.compareTo(r2) \<= 0) goto L12\l}"];
Node_49 [shape=record,label="{49\:\ 0x0034|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0034|r1 = r2\l}"];
Node_53 [shape=record,label="{53\:\ 0x001e|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x001e|LOOP_END\lSYNTHETIC\lLOOP:0: B:41:0x001e\-\>B:51:0x001e\lPHI: r1 \l  PHI: (r1v6 R extends java.lang.Comparable\<? super R\>) = (r1v5 R extends java.lang.Comparable\<? super R\>), (r1v7 R extends java.lang.Comparable\<? super R\>) binds: [B:52:0x001e, B:53:0x001e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_52 [shape=record,label="{52\:\ 0x001e|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0036|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0036|RETURN\l|return r1\l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ 0x0037}"];
Node_48 [shape=record,label="{48\:\ 0x003c|throw new java.util.NoSuchElementException()\l}"];
MethodNode[shape=record,label="{private static final R extends java.lang.Comparable\<? super R\> kotlin.collections.CollectionsKt___CollectionsKt.minOf((r4v0 java.lang.Iterable\<? extends T\> A[D('$this$minOf' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'selector' kotlin.jvm.functions.Function1\<? super T, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:44:0x0032 \-\> B:41:0x001e, BACK_EDGE: B:45:0x0034 \-\> B:41:0x001e, CROSS_EDGE: B:48:0x003c \-\> B:37:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R::Ljava\/lang\/Comparable\<\-TR;\>;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)TR;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r1v2. Raw type applied. Possible types: T, ? super T\l \-\> Type inference failed for r2v1. Raw type applied. Possible types: T, ? super T\}\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_47;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_50;
Node_43 -> Node_44;
Node_44 -> Node_49[style=dashed];
Node_44 -> Node_52;
Node_49 -> Node_45;
Node_45 -> Node_53;
Node_53 -> Node_51;
Node_51 -> Node_41;
Node_52 -> Node_51;
Node_50 -> Node_46;
Node_46 -> Node_37;
Node_47 -> Node_48;
Node_48 -> Node_37;
}

