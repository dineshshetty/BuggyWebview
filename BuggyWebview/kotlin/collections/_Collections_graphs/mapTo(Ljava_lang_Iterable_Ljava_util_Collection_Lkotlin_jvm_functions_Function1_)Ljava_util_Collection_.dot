digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.mapTo(Ljava\/lang\/Iterable;Ljava\/util\/Collection;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Collection;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"destination\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"transform\")\ljava.util.Iterator r1 = r4.iterator()\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|LOOP_START\lLOOP:0: B:19:0x0014\-\>B:21:0x001a\l}"];
Node_20 [shape=record,label="{20\:\ 0x0018|if (r1.hasNext() == false) goto L5\l}"];
Node_21 [shape=record,label="{21\:\ 0x001a|LOOP_END\lLOOP:0: B:19:0x0014\-\>B:21:0x001a\l|java.lang.Object r2 = (T) r1.next()\lr5.add(r6.invoke(r2))\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0026|RETURN\l|return r5\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final C extends java.util.Collection\<? super R\> kotlin.collections.CollectionsKt___CollectionsKt.mapTo((r4v0 java.lang.Iterable\<? extends T\> A[D('$this$mapTo' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'destination' C extends java.util.Collection\<? super R\> A[D('destination' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'transform' kotlin.jvm.functions.Function1\<? super T, ? extends R\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x001a \-\> B:19:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, C extends java.util.Collection\<? super R\>, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;C::Ljava\/util\/Collection\<\-TR;\>;\>(Ljava\/lang\/Iterable\<+TT;\>;TC;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)TC;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r2v1. Raw type applied. Possible types: T, ? super T\}\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_19;
Node_23 -> Node_22;
Node_22 -> Node_17;
}

