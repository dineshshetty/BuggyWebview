digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.associate(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"transform\")\lint r1 = kotlin.ranges.RangesKt.coerceAtLeast(kotlin.collections.MapsKt.mapCapacity(kotlin.collections.CollectionsKt.collectionSizeOrDefault(r9, 10)), 16)\ljava.util.Map r2 = (java.util.Map\<K, V\>) new java.util.LinkedHashMap(r1)\ljava.util.Iterator r5 = r9.iterator()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0028|LOOP_START\lLOOP:0: B:21:0x0028\-\>B:23:0x002e\l}"];
Node_22 [shape=record,label="{22\:\ 0x002c|if (r5.hasNext() == false) goto L5\l}"];
Node_23 [shape=record,label="{23\:\ 0x002e|LOOP_END\lLOOP:0: B:21:0x0028\-\>B:23:0x002e\l|java.lang.Object r6 = (T) r5.next()\lkotlin.Pair r7 = r10.invoke(r6)\lr2.put(r7.getFirst(), r7.getSecond())\l}"];
Node_26 [shape=record,label="{26\:\ 0x0045|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0045|RETURN\l|return r2\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.CollectionsKt___CollectionsKt.associate((r9v0 java.lang.Iterable\<? extends T\> A[D('$this$associate' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'transform' kotlin.jvm.functions.Function1\<? super T, ? extends kotlin.Pair\<? extends K, ? extends V\>\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x002e \-\> B:21:0x0028\lINLINE_NOT_NEEDED\lTYPE_VARS: [T, V, K]\lSIGNATURE: \<T:Ljava\/lang\/Object;K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;+Lkotlin\/Pair\<+TK;+TV;\>;\>;)Ljava\/util\/Map\<TK;TV;\>;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r6v1. Raw type applied. Possible types: T, ? super T\}\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_21;
Node_26 -> Node_25;
Node_25 -> Node_19;
}

