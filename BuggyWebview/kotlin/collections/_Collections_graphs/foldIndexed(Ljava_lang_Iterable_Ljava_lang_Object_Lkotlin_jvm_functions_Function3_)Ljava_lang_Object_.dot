digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.foldIndexed(Ljava\/lang\/Iterable;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function3;)Ljava\/lang\/Object;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"operation\")\lr1 = 0\lr2 = (R) r7\ljava.util.Iterator r3 = r6.iterator()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0011|LOOP_START\lLOOP:0: B:29:0x0011\-\>B:34:0x0022\lPHI: r1 r2 \l  PHI: (r1v1 'index' int) = (r1v0 'index' int), (r1v3 'index' int) binds: [B:28:0x0000, B:34:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'accumulator' java.lang.Object) = (r2v0 'accumulator' java.lang.Object), (r2v2 'accumulator' java.lang.Object) binds: [B:28:0x0000, B:34:0x0022] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0015|if (r3.hasNext() == false) goto L10\l}"];
Node_31 [shape=record,label="{31\:\ 0x0017|java.lang.Object r4 = (T) r3.next()\lint r5 = r1 + 1\l}"];
Node_32 [shape=record,label="{32\:\ 0x001d|if (r1 \>= 0) goto L9\l}"];
Node_33 [shape=record,label="{33\:\ 0x001f|kotlin.collections.CollectionsKt.throwIndexOverflow()\l}"];
Node_37 [shape=record,label="{37\:\ 0x0022|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0022|LOOP_END\lLOOP:0: B:29:0x0011\-\>B:34:0x0022\l|java.lang.Object r2 = (R) r8.invoke(java.lang.Integer.valueOf(r1), r2, r4)\lr1 = r5\l}"];
Node_38 [shape=record,label="{38\:\ 0x0022|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x002c|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x002c|RETURN\l|return (R) r2\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final R kotlin.collections.CollectionsKt___CollectionsKt.foldIndexed((r6v0 java.lang.Iterable\<? extends T\> A[D('$this$foldIndexed' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 R A[D('initial' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'operation' kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super R, ? super T, ? extends R\> A[D('operation' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x0022 \-\> B:29:0x0011, CROSS_EDGE: B:32:0x001d \-\> B:34:0x0022\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;TR;Lkotlin\/jvm\/functions\/Function3\<\-Ljava\/lang\/Integer;\-TR;\-TT;+TR;\>;)TR;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r4v1. Raw type applied. Possible types: T, ? super T\l \-\> Type inference failed for r2v5. Raw type applied. Possible types: R, ? super R\}\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_36;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_38;
Node_33 -> Node_37;
Node_37 -> Node_34;
Node_34 -> Node_29;
Node_38 -> Node_34;
Node_36 -> Node_35;
Node_35 -> Node_27;
}

