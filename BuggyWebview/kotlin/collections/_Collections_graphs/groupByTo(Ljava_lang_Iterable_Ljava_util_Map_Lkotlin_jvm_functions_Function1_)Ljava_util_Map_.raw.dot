digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.groupByTo(Ljava\/lang\/Iterable;Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$groupByTo' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r10 I:java.lang.Object A[D('destination' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"keySelector\" \l0x000c: INVOKE  (r11 I:java.lang.Object A[D('keySelector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: INVOKE  (r1 I:java.util.Iterator) = (r9 I:java.lang.Iterable A[D('$this$groupByTo' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:1502)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0014|LOOP_START\lLOOP:0: B:31:0x0014\-\>B:37:0x0039\l|0x0014: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0018|0x0018: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0041 \l}"];
Node_33 [shape=record,label="{33\:\ 0x001a|0x001a: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001e: INVOKE  (r3 I:java.lang.Object) = \l  (r11 I:kotlin.jvm.functions.Function1 A[D('keySelector' kotlin.jvm.functions.Function1)])\l  (r2 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:1503)\l0x0022: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('destination' java.util.Map)])  (LINE:1504)\l0x0023: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0024: INVOKE  (r6 I:java.lang.Object) = (r4 I:java.util.Map A[D('$this$getOrPut$iv' java.util.Map)]), (r3 I:java.lang.Object A[D('key' java.lang.Object)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:3785)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0028|0x0028: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value$iv' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0038  (LINE:3786)\l}"];
Node_35 [shape=record,label="{35\:\ 0x002a|0x002a: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3787)\l0x002b: NEW_INSTANCE  (r8 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:1504)\l0x002d: INVOKE  (r8 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0030: MOVE  (r7 I:??[OBJECT, ARRAY] A[D('$i$a$\-getOrPut\-CollectionsKt___CollectionsKt$groupByTo$list$1' int)]) = (r8 I:??[OBJECT, ARRAY]) \l0x0031: CHECK_CAST (r7 I:java.util.List) = (java.util.List) (r7 I:??[OBJECT, ARRAY] A[D('$i$a$\-getOrPut\-CollectionsKt___CollectionsKt$groupByTo$list$1' int)]) \l0x0033: INVOKE  \l  (r4 I:java.util.Map A[D('$this$getOrPut$iv' java.util.Map)])\l  (r3 I:java.lang.Object A[D('key' java.lang.Object)])\l  (r7 I:java.lang.Object A[D('answer$iv' java.lang.Object)])\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)] (LINE:3788)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0039|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0039|LOOP_END\lLOOP:0: B:31:0x0014\-\>B:37:0x0039\l|0x003a: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('$this$getOrPut$iv' java.util.Map)]) = (r7 I:??[OBJECT, ARRAY])  (LINE:1504)\l0x003b: CHECK_CAST (r4 I:java.util.List) = (java.util.List) (r4 I:??[OBJECT, ARRAY]) \l0x003d: INVOKE  (r4 I:java.util.List A[D('list' java.util.List)]), (r2 I:java.lang.Object A[D('element' java.lang.Object)]) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:1505)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0038|0x0038: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('value$iv' java.lang.Object)])  (LINE:3791)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0039|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0041|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0041|RETURN\l|0x0041: RETURN  (r10 I:M extends java.util.Map\<? super K, java.util.List\<T\>\> A[D('destination' java.util.Map)])  (LINE:1507)\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final M extends java.util.Map\<? super K, java.util.List\<T\>\> kotlin.collections.CollectionsKt___CollectionsKt.groupByTo((r9 I:java.lang.Iterable\<? extends T\> A[D('$this$groupByTo' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:M extends java.util.Map\<? super K, java.util.List\<T\>\> A[D('destination' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlin.jvm.functions.Function1\<? super T, ? extends K\> A[D('keySelector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:37:0x0039 \-\> B:31:0x0014, CROSS_EDGE: B:36:0x0038 \-\> B:37:0x0039\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002b\-0x0033: r7 '$i$a$\-getOrPut\-CollectionsKt___CollectionsKt$groupByTo$list$1' I\l  0x0033\-0x0037: r7 'answer$iv' Ljava\/lang\/Object;\l  0x0023\-0x003a: r4 '$this$getOrPut$iv' Ljava\/util\/Map;\l  0x0024\-0x003a: r5 '$i$f$getOrPut' I\l  0x0028\-0x003a: r6 'value$iv' Ljava\/lang\/Object;\l  0x001e\-0x0041: r2 'element' Ljava\/lang\/Object;\l  0x0022\-0x0041: r3 'key' Ljava\/lang\/Object;\l  0x003d\-0x0041: r4 'list' Ljava\/util\/List;\l  0x0010\-0x0041: r0 '$i$f$groupByTo' I\l  \-1 \-0x0041: r9 '$this$groupByTo' Ljava\/lang\/Iterable;\l  \-1 \-0x0041: r10 'destination' Ljava\/util\/Map;\l  \-1 \-0x0041: r11 'keySelector' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [T, K, M extends java.util.Map\<? super K, java.util.List\<T\>\>]\lSIGNATURE: \<T:Ljava\/lang\/Object;K:Ljava\/lang\/Object;M::Ljava\/util\/Map\<\-TK;Ljava\/util\/List\<TT;\>;\>;\>(Ljava\/lang\/Iterable\<+TT;\>;TM;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TK;\>;)TM;\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_39;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_41;
Node_41 -> Node_37;
Node_37 -> Node_31;
Node_36 -> Node_40;
Node_40 -> Node_37;
Node_39 -> Node_38;
Node_38 -> Node_29;
}

