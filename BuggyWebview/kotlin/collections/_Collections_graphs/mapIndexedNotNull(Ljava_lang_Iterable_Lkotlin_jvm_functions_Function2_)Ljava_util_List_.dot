digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r14, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r15, \"transform\")\ljava.util.Collection r1 = new java.util.ArrayList()\lr6 = 0\ljava.util.Iterator r7 = r14.iterator()\l}"];
Node_37 [shape=record,label="{37\:\ 0x001b|LOOP_START\lLOOP:0: B:37:0x001b\-\>B:45:0x003d\lPHI: r6 \l  PHI: (r6v1 'index$iv' int) = (r6v0 'index$iv' int), (r6v2 'index$iv' int) binds: [B:36:0x0000, B:45:0x003d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_38 [shape=record,label="{38\:\ 0x001f|if (r7.hasNext() == false) goto L13\l}"];
Node_39 [shape=record,label="{39\:\ 0x0021|java.lang.Object r8 = (T) r7.next()\lint r9 = r6 + 1\l}"];
Node_40 [shape=record,label="{40\:\ 0x0027|if (r6 \>= 0) goto L7\l}"];
Node_41 [shape=record,label="{41\:\ 0x0029|kotlin.collections.CollectionsKt.throwIndexOverflow()\l}"];
Node_42 [shape=record,label="{42\:\ 0x002c|java.lang.Object r12 = r15.invoke(java.lang.Integer.valueOf(r6), r8)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0036|if (r12 == null) goto L12\l}"];
Node_44 [shape=record,label="{44\:\ 0x0038|r1.add(r12)\l}"];
Node_49 [shape=record,label="{49\:\ 0x003d|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x003d|LOOP_END\lLOOP:0: B:37:0x001b\-\>B:45:0x003d\l|r6 = r9\l}"];
Node_50 [shape=record,label="{50\:\ 0x003d|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x003f|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x003f}"];
Node_47 [shape=record,label="{47\:\ 0x0043|RETURN\l|return (java.util.List) r1\l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull((r14v0 java.lang.Iterable\<? extends T\> A[D('$this$mapIndexedNotNull' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'transform' kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super T, ? extends R\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:45:0x003d \-\> B:37:0x001b, CROSS_EDGE: B:43:0x0036 \-\> B:45:0x003d, CROSS_EDGE: B:40:0x0027 \-\> B:42:0x002c\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Integer;\-TT;+TR;\>;)Ljava\/util\/List\<TR;\>;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r8v1. Raw type applied. Possible types: T, ? super T\}\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_48;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_50;
Node_44 -> Node_49;
Node_49 -> Node_45;
Node_45 -> Node_37;
Node_50 -> Node_45;
Node_48 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_35;
}

