digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.takeWhile(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$takeWhile' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:959)\l0x000d: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0010: INVOKE  (r2 I:java.util.Iterator) = (r5 I:java.lang.Iterable A[D('$this$takeWhile' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:960)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0014|LOOP_START\lLOOP:0: B:29:0x0014\-\>B:34:0x002b\l|0x0014: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0018|0x0018: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x002f \l}"];
Node_31 [shape=record,label="{31\:\ 0x001a|0x001a: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001e: INVOKE  (r4 I:java.lang.Object) = \l  (r6 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)])\l  (r3 I:java.lang.Object A[D('item' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:961)\l0x0022: CHECK_CAST (r4 I:java.lang.Boolean) = (java.lang.Boolean) (r4 I:??[OBJECT, ARRAY]) \l0x0024: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0028|0x0028: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x002b \l}"];
Node_34 [shape=record,label="{34\:\ 0x002b|LOOP_END\lLOOP:0: B:29:0x0014\-\>B:34:0x002b\l|0x002b: INVOKE  (r1 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r3 I:java.lang.Object A[D('item' java.lang.Object)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:963)\l}"];
Node_37 [shape=record,label="{37\:\ 0x002f|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x002f|0x002f: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('list' java.util.ArrayList)])  (LINE:965)\l0x0030: CHECK_CAST (r2 I:java.util.List) = (java.util.List) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0032|RETURN\l|0x0032: RETURN  (r2 I:java.util.List\<T\>) \l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x002f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.takeWhile((r5 I:java.lang.Iterable\<? extends T\> A[D('$this$takeWhile' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x002b \-\> B:29:0x0014, CROSS_EDGE: B:30:0x0018 \-\> B:35:0x002f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x002f: r3 'item' Ljava\/lang\/Object;\l  0x000b\-0x0032: r0 '$i$f$takeWhile' I\l  0x0010\-0x0032: r1 'list' Ljava\/util\/ArrayList;\l  \-1 \-0x0032: r5 '$this$takeWhile' Ljava\/lang\/Iterable;\l  \-1 \-0x0032: r6 'predicate' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)Ljava\/util\/List\<TT;\>;\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_38;
Node_31 -> Node_32;
Node_32 -> Node_34;
Node_32 -> Node_37[style=dashed];
Node_34 -> Node_29;
Node_37 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_27;
Node_38 -> Node_35;
}

