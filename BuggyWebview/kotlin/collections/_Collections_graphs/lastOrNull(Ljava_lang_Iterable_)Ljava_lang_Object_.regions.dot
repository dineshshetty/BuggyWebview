digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.lastOrNull(Ljava\/lang\/Iterable;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1341543984 {
label = "R(2:1|(2:(1:(2:(1:8)|(1:6)))|(2:9|(2:(3:12|(1:15)|17)|(1:11)))))";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\l}"];
subgraph cluster_Region_1227280055 {
label = "R(2:(1:(2:(1:8)|(1:6)))|(2:9|(2:(3:12|(1:15)|17)|(1:11))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1347318619 {
label = "IF [B:41:0x0009] THEN: R(1:(2:(1:8)|(1:6))) ELSE: null";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0009|if ((r3 instanceof java.util.List) == true) goto L3\l}"];
subgraph cluster_Region_81990987 {
label = "R(1:(2:(1:8)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_2035909681 {
label = "R(2:(1:8)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_116768475 {
label = "IF [B:43:0x0012] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0012|if (((java.util.List) r3).isEmpty() == true) goto L8\l}"];
subgraph cluster_Region_620937717 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
subgraph cluster_Region_962052435 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0025|RETURN\lORIG_RETURN\l|return (T) ((java.util.List) r3).get(((java.util.List) r3).size() \- 1)\l}"];
}
}
}
}
subgraph cluster_Region_175244765 {
label = "R(2:9|(2:(3:12|(1:15)|17)|(1:11)))";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x0026|java.util.Iterator java.util.Iterator r0 = r3.iterator()\l}"];
subgraph cluster_Region_203076164 {
label = "R(2:(3:12|(1:15)|17)|(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_681837339 {
label = "IF [B:48:0x002e] THEN: R(3:12|(1:15)|17) ELSE: null";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x002e|if (r0.hasNext() == true) goto L12\l}"];
subgraph cluster_Region_343355840 {
label = "R(3:12|(1:15)|17)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0031|java.lang.Object T r1 = r0.next()\l}"];
subgraph cluster_LoopRegion_1013381501 {
label = "LOOP:0: (1:15)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x0039|if (r0.hasNext() != false) goto L15\l}"];
subgraph cluster_Region_648044481 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x003b|LOOP_END\lLOOP:0: B:51:0x0035\-\>B:53:0x003b\l|java.lang.Object r1 = r0.next()\l}"];
}
}
Node_54 [shape=record,label="{54\:\ 0x0040|RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_666031738 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0030|RETURN\l|return null\l}"];
}
}
}
}
}
Node_38 [shape=record,color=red,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x000b}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0015}"];
Node_39 [shape=record,color=red,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0035|LOOP_START\lLOOP:0: B:51:0x0035\-\>B:53:0x003b\lPHI: r1 \l  PHI: (r1v2 T) = (r1v1 T), (r1v3 T) binds: [B:50:0x0031, B:53:0x003b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x0040|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final T kotlin.collections.CollectionsKt___CollectionsKt.lastOrNull((r3v0 java.lang.Iterable\<? extends T\> A[D('$this$lastOrNull' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:43:0x0012 \-\> B:46:0x0025, CROSS_EDGE: B:49:0x0030 \-\> B:39:?, BACK_EDGE: B:53:0x003b \-\> B:51:0x0035, CROSS_EDGE: B:54:0x0040 \-\> B:39:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;)TT;\l}"];
MethodNode -> Node_38;Node_40 -> Node_41;
Node_41 -> Node_42;
Node_41 -> Node_47[style=dashed];
Node_43 -> Node_45[style=dashed];
Node_43 -> Node_56;
Node_56 -> Node_39;
Node_46 -> Node_39;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_50 -> Node_51;
Node_52 -> Node_53;
Node_52 -> Node_55[style=dashed];
Node_53 -> Node_51;
Node_54 -> Node_39;
Node_49 -> Node_39;
Node_38 -> Node_40;
Node_42 -> Node_43;
Node_45 -> Node_46;
Node_51 -> Node_52;
Node_55 -> Node_54;
}

