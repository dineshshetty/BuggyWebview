digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.onEach(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Iterable;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$onEach' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"action\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('action' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('$this$onEach' java.lang.Iterable)])  (LINE:2630)\l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3708)\l0x000d: INVOKE  (r3 I:java.util.Iterator) = (r1 I:java.lang.Iterable A[D('$this$onEach_u24lambda_u2d16' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:2630)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|LOOP_START\lLOOP:0: B:19:0x0011\-\>B:21:0x0017\l|0x0011: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0015|0x0015: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x001f \l}"];
Node_21 [shape=record,label="{21\:\ 0x0017|LOOP_END\lLOOP:0: B:19:0x0011\-\>B:21:0x0017\l|0x0017: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001b: INVOKE  \l  (r6 I:kotlin.jvm.functions.Function1 A[D('action' kotlin.jvm.functions.Function1)])\l  (r4 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x001f|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x001f|RETURN\l|0x001f: RETURN  (r5 I:C extends java.lang.Iterable\<? extends T\> A[D('$this$onEach' java.lang.Iterable)]) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final C extends java.lang.Iterable\<? extends T\> kotlin.collections.CollectionsKt___CollectionsKt.onEach((r5 I:C extends java.lang.Iterable\<? extends T\> A[D('$this$onEach' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function1\<? super T, kotlin.Unit\> A[D('action' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0017 \-\> B:19:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x001f: r1 '$this$onEach_u24lambda_u2d16' Ljava\/lang\/Iterable;\l  0x000d\-0x001f: r2 '$i$a$\-apply\-CollectionsKt___CollectionsKt$onEach$1' I\l  0x001b\-0x001f: r4 'element' Ljava\/lang\/Object;\l  0x000b\-0x001f: r0 '$i$f$onEach' I\l  \-1 \-0x001f: r5 '$this$onEach' Ljava\/lang\/Iterable;\l  \-1 \-0x001f: r6 'action' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [C extends java.lang.Iterable\<? extends T\>, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;C::Ljava\/lang\/Iterable\<+TT;\>;\>(TC;Lkotlin\/jvm\/functions\/Function1\<\-TT;Lkotlin\/Unit;\>;)TC;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_19;
Node_23 -> Node_22;
Node_22 -> Node_17;
}

