digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(Ljava\/lang\/Iterable;)Ljava\/lang\/Object;" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\l}"];
Node_31 [shape=record,label="{31\:\ 0x0009|if ((r3 instanceof java.util.List) == false) goto L9\l}"];
Node_32 [shape=record,label="{32\:\ 0x000b}"];
Node_33 [shape=record,label="{33\:\ 0x0012|if (((java.util.List) r3).isEmpty() == false) goto L7\l}"];
Node_34 [shape=record,label="{34\:\ 0x0014|RETURN\l|return null\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0015}"];
Node_36 [shape=record,label="{36\:\ 0x001d|RETURN\l|return (T) ((java.util.List) r3).get(0)\l}"];
Node_37 [shape=record,label="{37\:\ 0x001e|java.util.Iterator r0 = r3.iterator()\l}"];
Node_38 [shape=record,label="{38\:\ 0x0026|if (r0.hasNext() != false) goto L12\l}"];
Node_39 [shape=record,label="{39\:\ 0x0028|RETURN\l|return null\l}"];
Node_40 [shape=record,label="{40\:\ 0x0029}"];
Node_41 [shape=record,label="{41\:\ 0x002d|RETURN\l|return r0.next()\l}"];
MethodNode[shape=record,label="{public static final T kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull((r3v0 java.lang.Iterable\<? extends T\> A[D('$this$firstOrNull' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x001d \-\> B:29:?, CROSS_EDGE: B:39:0x0028 \-\> B:29:?, CROSS_EDGE: B:41:0x002d \-\> B:29:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;)TT;\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_37;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_29;
Node_35 -> Node_36;
Node_36 -> Node_29;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_29;
Node_40 -> Node_41;
Node_41 -> Node_29;
}

