digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.windowed(Ljava\/lang\/Iterable;IIZ)Ljava\/util\/List;" {
Node_70 [shape=record,label="{70\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_72 [shape=record,label="{72\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r16, \"\<this\>\")\lkotlin.collections.SlidingWindowKt.checkWindowSizeStep(r17, r18)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0013|if ((r16 instanceof java.util.RandomAccess) == false) goto L28\l}"];
Node_74 [shape=record,label="{74\:\ 0x0015}"];
Node_75 [shape=record,label="{75\:\ 0x0017|if ((r16 instanceof java.util.List) == false) goto L28\l}"];
Node_76 [shape=record,label="{76\:\ 0x0019|int r4 = ((java.util.List) r16).size()\lint r6 = r4 \/ r18\l}"];
Node_77 [shape=record,label="{77\:\ 0x0024|if ((r4 % r18) != 0) goto L27\l}"];
Node_78 [shape=record,label="{78\:\ 0x0026|r7 = 0\l}"];
Node_80 [shape=record,label="{80\:\ 0x0029|PHI: r7 \l  PHI: (r7v4 int) = (r7v3 int), (r7v6 int) binds: [B:79:0x0028, B:78:0x0026] A[DONT_GENERATE, DONT_INLINE]\l|int r6 = r6 + r7\ljava.util.ArrayList r7 = new java.util.ArrayList(r6)\lr9 = 0\l}"];
Node_81 [shape=record,label="{81\:\ 0x0030|LOOP_START\lLOOP:0: B:81:0x0030\-\>B:92:0x005c\lPHI: r9 \l  PHI: (r9v2 'index' int) = (r9v1 'index' int), (r9v3 'index' int) binds: [B:80:0x0029, B:92:0x005c] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 \< 0) goto L26\l}"];
Node_82 [shape=record,label="{82\:\ 0x0032|if (r9 \>= r4) goto L26\l}"];
Node_83 [shape=record,label="{83\:\ 0x0034|r10 = true\l}"];
Node_85 [shape=record,label="{85\:\ 0x0037|PHI: r10 \l  PHI: (r10v1 boolean) = (r10v0 boolean), (r10v4 boolean) binds: [B:84:0x0036, B:83:0x0034] A[DONT_GENERATE, DONT_INLINE]\l|if (r10 == false) goto L25\l}"];
Node_86 [shape=record,label="{86\:\ 0x0039|int r10 = kotlin.ranges.RangesKt.coerceAtMost(r17, r4 \- r9)\l}"];
Node_87 [shape=record,label="{87\:\ 0x003f|if (r10 \>= r17) goto L20\l}"];
Node_88 [shape=record,label="{88\:\ 0x0041|if (r19 == false) goto L16\l}"];
Node_101 [shape=record,label="{101\:\ 0x0063|SYNTHETIC\l}"];
Node_93 [shape=record,label="{93\:\ 0x0063}"];
Node_94 [shape=record,label="{94\:\ 0x0066|RETURN\l|return r7\l}"];
Node_71 [shape=record,label="{71\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_89 [shape=record,label="{89\:\ 0x0043|java.util.ArrayList r11 = new java.util.ArrayList(r10)\lr12 = 0\l}"];
Node_90 [shape=record,label="{90\:\ 0x0049|LOOP_START\lLOOP:1: B:90:0x0049\-\>B:91:0x004b\lPHI: r12 \l  PHI: (r12v1 int) = (r12v0 int), (r12v2 int) binds: [B:89:0x0043, B:91:0x004b] A[DONT_GENERATE, DONT_INLINE]\l|if (r12 \>= r10) goto L23\l}"];
Node_91 [shape=record,label="{91\:\ 0x004b|LOOP_END\lLOOP:1: B:90:0x0049\-\>B:91:0x004b\l|r13 = r12\lr11.add(((java.util.List) r16).get(r13 + r9))\lint r12 = r12 + 1\l}"];
Node_103 [shape=record,label="{103\:\ 0x005c|SYNTHETIC\l}"];
Node_92 [shape=record,label="{92\:\ 0x005c|LOOP_END\lLOOP:0: B:81:0x0030\-\>B:92:0x005c\l|r7.add(r11)\lint r9 = r9 + r18\l}"];
Node_102 [shape=record,label="{102\:\ 0x0063|SYNTHETIC\l}"];
Node_84 [shape=record,label="{84\:\ 0x0036|r10 = false\l}"];
Node_79 [shape=record,label="{79\:\ 0x0028|r7 = 1\l}"];
Node_95 [shape=record,label="{95\:\ 0x0067|java.util.ArrayList r4 = new java.util.ArrayList()\ljava.util.Iterator r5 = kotlin.collections.SlidingWindowKt.windowedIterator(r16.iterator(), r17, r18, r19, false)\l}"];
Node_96 [shape=record,label="{96\:\ 0x0076|LOOP_START\lLOOP:2: B:96:0x0076\-\>B:98:0x007c\l}"];
Node_97 [shape=record,label="{97\:\ 0x007a|if (r5.hasNext() == false) goto L32\l}"];
Node_98 [shape=record,label="{98\:\ 0x007c|LOOP_END\lLOOP:2: B:96:0x0076\-\>B:98:0x007c\l|java.lang.Object r7 = r5.next()\ljava.util.List r8 = (java.util.List) r7\lr4.add(r8)\l}"];
Node_104 [shape=record,label="{104\:\ 0x0089|SYNTHETIC\l}"];
Node_99 [shape=record,label="{99\:\ 0x0089}"];
Node_100 [shape=record,label="{100\:\ 0x008d|RETURN\l|return r4\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<java.util.List\<T\>\> kotlin.collections.CollectionsKt___CollectionsKt.windowed((r16v0 java.lang.Iterable\<? extends T\> A[D('$this$windowed' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 'size' int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'step' int A[D('step' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'partialWindows' boolean A[D('partialWindows' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:91:0x004b \-\> B:90:0x0049, BACK_EDGE: B:92:0x005c \-\> B:81:0x0030, CROSS_EDGE: B:87:0x003f \-\> B:89:0x0043, CROSS_EDGE: B:85:0x0037 \-\> B:93:0x0063, CROSS_EDGE: B:84:0x0036 \-\> B:85:0x0037, CROSS_EDGE: B:81:0x0030 \-\> B:84:0x0036, CROSS_EDGE: B:79:0x0028 \-\> B:80:0x0029, BACK_EDGE: B:98:0x007c \-\> B:96:0x0076, CROSS_EDGE: B:100:0x008d \-\> B:71:?, CROSS_EDGE: B:73:0x0013 \-\> B:95:0x0067\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;IIZ)Ljava\/util\/List\<Ljava\/util\/List\<TT;\>;\>;\l}"];
MethodNode -> Node_70;Node_70 -> Node_72;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_95;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_95;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_79;
Node_78 -> Node_80;
Node_80 -> Node_81;
Node_81 -> Node_82[style=dashed];
Node_81 -> Node_84;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_84;
Node_83 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_102;
Node_86 -> Node_87;
Node_87 -> Node_88[style=dashed];
Node_87 -> Node_89;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_101;
Node_101 -> Node_93;
Node_93 -> Node_94;
Node_94 -> Node_71;
Node_89 -> Node_90;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_103;
Node_91 -> Node_90;
Node_103 -> Node_92;
Node_92 -> Node_81;
Node_102 -> Node_93;
Node_84 -> Node_85;
Node_79 -> Node_80;
Node_95 -> Node_96;
Node_96 -> Node_97;
Node_97 -> Node_98[style=dashed];
Node_97 -> Node_104;
Node_98 -> Node_96;
Node_104 -> Node_99;
Node_99 -> Node_100;
Node_100 -> Node_71;
}

