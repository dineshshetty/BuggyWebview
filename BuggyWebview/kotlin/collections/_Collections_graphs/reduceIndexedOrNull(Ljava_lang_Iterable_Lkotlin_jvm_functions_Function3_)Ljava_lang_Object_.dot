digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.reduceIndexedOrNull(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function3;)Ljava\/lang\/Object;" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"operation\")\ljava.util.Iterator r1 = r6.iterator()\l}"];
Node_37 [shape=record,label="{37\:\ 0x0013|if (r1.hasNext() != false) goto L5\l}"];
Node_38 [shape=record,label="{38\:\ 0x0015|RETURN\l|return null\l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0017|r2 = 1\ljava.lang.Object r3 = r1.next()\l}"];
Node_41 [shape=record,label="{41\:\ 0x001c|LOOP_START\lLOOP:0: B:41:0x001c\-\>B:46:0x0029\lPHI: r2 r3 \l  PHI: (r2v2 'index' int) = (r2v1 'index' int), (r2v4 'index' int) binds: [B:40:0x0017, B:46:0x0029] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'accumulator' java.lang.Object) = (r3v0 'accumulator' T extends S), (r3v2 'accumulator' java.lang.Object) binds: [B:40:0x0017, B:46:0x0029] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0020|if (r1.hasNext() == false) goto L14\l}"];
Node_43 [shape=record,label="{43\:\ 0x0022|int r4 = r2 + 1\l}"];
Node_44 [shape=record,label="{44\:\ 0x0024|if (r2 \>= 0) goto L13\l}"];
Node_45 [shape=record,label="{45\:\ 0x0026|kotlin.collections.CollectionsKt.throwIndexOverflow()\l}"];
Node_49 [shape=record,label="{49\:\ 0x0029|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0029|LOOP_END\lLOOP:0: B:41:0x001c\-\>B:46:0x0029\l|java.lang.Object r3 = r3\ljava.lang.Object r3 = (S) r7.invoke(java.lang.Integer.valueOf(r2), r3, (T) r1.next())\lr2 = r4\l}"];
Node_50 [shape=record,label="{50\:\ 0x0029|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0037|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0037|RETURN\l|return (S) r3\l}"];
MethodNode[shape=record,label="{public static final S kotlin.collections.CollectionsKt___CollectionsKt.reduceIndexedOrNull((r6v0 java.lang.Iterable\<? extends T extends S\> A[D('$this$reduceIndexedOrNull' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'operation' kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super S, ? super T extends S, ? extends S\> A[D('operation' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:46:0x0029 \-\> B:41:0x001c, CROSS_EDGE: B:44:0x0024 \-\> B:46:0x0029, CROSS_EDGE: B:47:0x0037 \-\> B:35:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [S, T extends S]\lSIGNATURE: \<S:Ljava\/lang\/Object;T::TS;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function3\<\-Ljava\/lang\/Integer;\-TS;\-TT;+TS;\>;)TS;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r5v0. Raw type applied. Possible types: T extends S, ? super T extends S\}\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_40;
Node_38 -> Node_35;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_48;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_50;
Node_45 -> Node_49;
Node_49 -> Node_46;
Node_46 -> Node_41;
Node_50 -> Node_46;
Node_48 -> Node_47;
Node_47 -> Node_35;
}

