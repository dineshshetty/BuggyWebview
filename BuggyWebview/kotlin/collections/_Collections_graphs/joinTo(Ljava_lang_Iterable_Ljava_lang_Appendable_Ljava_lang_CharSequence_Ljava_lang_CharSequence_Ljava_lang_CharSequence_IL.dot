digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.joinTo(Ljava\/lang\/Iterable;Ljava\/lang\/Appendable;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;ILjava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Appendable;" {
Node_44 [shape=record,label="{44\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"buffer\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"separator\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"prefix\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"postfix\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"truncated\")\lr5.append(r7)\lr0 = 0\ljava.util.Iterator r1 = r4.iterator()\l}"];
Node_47 [shape=record,label="{47\:\ 0x0026|LOOP_START\lLOOP:0: B:47:0x0026\-\>B:56:0x003e\lPHI: r0 \l  PHI: (r0v7 'count' int) = (r0v6 'count' int), (r0v9 'count' int) binds: [B:46:0x0000, B:56:0x003e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_48 [shape=record,label="{48\:\ 0x002a|if (r1.hasNext() == false) goto L19\l}"];
Node_49 [shape=record,label="{49\:\ 0x002c|java.lang.Object r2 = r1.next()\lint r0 = r0 + 1\l}"];
Node_50 [shape=record,label="{50\:\ 0x0033|if (r0 \<= 1) goto L7\l}"];
Node_51 [shape=record,label="{51\:\ 0x0035|r5.append(r6)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0038|if (r9 \< 0) goto L18\l}"];
Node_53 [shape=record,label="{53\:\ 0x003a|if (r0 \> r9) goto L9\l}"];
Node_63 [shape=record,label="{63\:\ 0x0042|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0042|PHI: r0 \l  PHI: (r0v8 'count' int) = (r0v7 'count' int), (r0v9 'count' int) binds: [B:62:0x0042, B:63:0x0042] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 \< 0) goto L13\l}"];
Node_58 [shape=record,label="{58\:\ 0x0044|if (r0 \<= r9) goto L13\l}"];
Node_59 [shape=record,label="{59\:\ 0x0046|r5.append(r10)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0049|r5.append(r8)\l}"];
Node_61 [shape=record,label="{61\:\ 0x004c|RETURN\l|return r5\l}"];
Node_45 [shape=record,label="{45\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_65 [shape=record,label="{65\:\ 0x003e|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x003e|LOOP_END\lLOOP:0: B:47:0x0026\-\>B:56:0x003e\l|kotlin.text.StringsKt.appendElement(r5, r2, r11)\l}"];
Node_64 [shape=record,label="{64\:\ 0x003e|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0042|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final A extends java.lang.Appendable kotlin.collections.CollectionsKt___CollectionsKt.joinTo((r4v0 java.lang.Iterable\<? extends T\> A[D('$this$joinTo' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'buffer' A extends java.lang.Appendable A[D('buffer' java.lang.Appendable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'separator' java.lang.CharSequence A[D('separator' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'prefix' java.lang.CharSequence A[D('prefix' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'postfix' java.lang.CharSequence A[D('postfix' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'limit' int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'truncated' java.lang.CharSequence A[D('truncated' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 kotlin.jvm.functions.Function1\<? super T, ? extends java.lang.CharSequence\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:56:0x003e \-\> B:47:0x0026, CROSS_EDGE: B:58:0x0044 \-\> B:60:0x0049, CROSS_EDGE: B:57:0x0042 \-\> B:60:0x0049, CROSS_EDGE: B:52:0x0038 \-\> B:56:0x003e, CROSS_EDGE: B:50:0x0033 \-\> B:52:0x0038, CROSS_EDGE: B:48:0x002a \-\> B:57:0x0042\lINLINE_NOT_NEEDED\lTYPE_VARS: [A extends java.lang.Appendable, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;A::Ljava\/lang\/Appendable;\>(Ljava\/lang\/Iterable\<+TT;\>;TA;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;ILjava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1\<\-TT;+Ljava\/lang\/CharSequence;\>;)TA;\l}"];
MethodNode -> Node_44;Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_62;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_64;
Node_53 -> Node_63;
Node_53 -> Node_65[style=dashed];
Node_63 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_60;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_45;
Node_65 -> Node_56;
Node_56 -> Node_47;
Node_64 -> Node_56;
Node_62 -> Node_57;
}

