digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.takeLast(Ljava\/util\/List;I)Ljava\/util\/List;" {
Node_64 [shape=record,label="{64\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_66 [shape=record,label="{66\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$takeLast' java.util.List)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:914)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0006|0x0006: IF  (r5 I:??[int, byte, short, char] A[D('n' int)]) \< (0 ??[int, byte, short, char])  \-\> B:69:0x000a \l}"];
Node_68 [shape=record,label="{68\:\ 0x0008|0x0008: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_70 [shape=record,label="{70\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:92:0x005e \l}"];
Node_71 [shape=record,label="{71\:\ 0x000d|0x000d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('n' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x0014  (LINE:915)\l}"];
Node_72 [shape=record,label="{72\:\ 0x000f|0x000f: INVOKE  (r0 I:java.util.List) =  type: STATIC call: kotlin.collections.CollectionsKt.emptyList():java.util.List A[MD:\<T\>:():java.util.List\<T\> (m)]\l}"];
Node_73 [shape=record,label="{73\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:java.util.List\<T\>) \l}"];
Node_65 [shape=record,label="{65\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_74 [shape=record,label="{74\:\ 0x0014|0x0014: INVOKE  (r1 I:int) = (r4 I:java.util.List A[D('$this$takeLast' java.util.List)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:916)\l}"];
Node_75 [shape=record,label="{75\:\ 0x0018|0x0018: IF  (r5 I:??[int, byte, short, char] A[D('n' int)]) \< (r1 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:78:0x0022  (LINE:917)\l}"];
Node_76 [shape=record,label="{76\:\ 0x001a|0x001a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('$this$takeLast' java.util.List)]) \l0x001b: CHECK_CAST (r0 I:java.lang.Iterable) = (java.lang.Iterable) (r0 I:??[OBJECT, ARRAY]) \l0x001d: INVOKE  (r0 I:java.util.List) = (r0 I:java.lang.Iterable) type: STATIC call: kotlin.collections.CollectionsKt.toList(java.lang.Iterable):java.util.List A[MD:\<T\>:(java.lang.Iterable\<? extends T\>):java.util.List\<T\> (m)]\l}"];
Node_77 [shape=record,label="{77\:\ 0x0021|RETURN\l|0x0021: RETURN  (r0 I:java.util.List\<T\>) \l}"];
Node_78 [shape=record,label="{78\:\ 0x0022|0x0022: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('n' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x002d  (LINE:918)\l}"];
Node_79 [shape=record,label="{79\:\ 0x0024|0x0024: INVOKE  (r0 I:java.lang.Object) = (r4 I:java.util.List A[D('$this$takeLast' java.util.List)]) type: STATIC call: kotlin.collections.CollectionsKt.last(java.util.List):java.lang.Object A[MD:\<T\>:(java.util.List\<? extends T\>):T (m)]\l0x0028: INVOKE  (r0 I:java.util.List) = (r0 I:java.lang.Object) type: STATIC call: kotlin.collections.CollectionsKt.listOf(java.lang.Object):java.util.List A[MD:\<T\>:(T):java.util.List\<T\> (m)]\l}"];
Node_80 [shape=record,label="{80\:\ 0x002c|RETURN\l|0x002c: RETURN  (r0 I:java.util.List\<T\>) \l}"];
Node_81 [shape=record,label="{81\:\ 0x002d|0x002d: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:919)\l0x002f: INVOKE  (r0 I:java.util.ArrayList), (r5 I:int A[D('n' int)]) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0032: INSTANCE_OF  (r2 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('$this$takeLast' java.util.List)]) java.util.RandomAccess  (LINE:920)\l}"];
Node_82 [shape=record,label="{82\:\ 0x0034|0x0034: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:86:0x0044 \l}"];
Node_83 [shape=record,label="{83\:\ 0x0036|0x0036: ARITH  (r2 I:int) = (r1 I:int A[D('size' int)]) \- (r5 I:int A[D('n' int)])  (LINE:921)\l}"];
Node_84 [shape=record,label="{84\:\ 0x0038|LOOP_START\lLOOP:0: B:84:0x0038\-\>B:85:0x003a\l|0x0038: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \>= (r1 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:94:0x005a \l}"];
Node_85 [shape=record,label="{85\:\ 0x003a|LOOP_END\lLOOP:0: B:84:0x0038\-\>B:85:0x003a\l|0x003a: INVOKE  (r3 I:java.lang.Object) = (r4 I:java.util.List A[D('$this$takeLast' java.util.List)]), (r2 I:int A[D('index' int)]) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:922)\l0x003e: INVOKE  (r0 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r3 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0041: ARITH  (r2 I:int) = (r2 I:int A[D('index' int)]) + (1 int)  (LINE:921)\l}"];
Node_94 [shape=record,label="{94\:\ 0x005a|SYNTHETIC\l}"];
Node_90 [shape=record,label="{90\:\ 0x005a|0x005a: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('list' java.util.ArrayList)])  (LINE:927)\l0x005b: CHECK_CAST (r2 I:java.util.List) = (java.util.List) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_91 [shape=record,label="{91\:\ 0x005d|RETURN\l|0x005d: RETURN  (r2 I:java.util.List\<T\>) \l}"];
Node_86 [shape=record,label="{86\:\ 0x0044|0x0044: ARITH  (r2 I:int A[D('index' int)]) = (r1 I:int A[D('size' int)]) \- (r5 I:int A[D('n' int)])  (LINE:924)\l0x0046: INVOKE  (r2 I:java.util.ListIterator) = (r4 I:java.util.List A[D('$this$takeLast' java.util.List)]), (r2 I:int) type: INTERFACE call: java.util.List.listIterator(int):java.util.ListIterator A[MD:(int):java.util.ListIterator\<E\> (c)]\l0x004a: CHECK_CAST (r2 I:java.util.Iterator) = (java.util.Iterator) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_87 [shape=record,label="{87\:\ 0x004c|LOOP_START\lLOOP:1: B:87:0x004c\-\>B:89:0x0052\l|0x004c: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_88 [shape=record,label="{88\:\ 0x0050|0x0050: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:95:0x005a \l}"];
Node_89 [shape=record,label="{89\:\ 0x0052|LOOP_END\lLOOP:1: B:87:0x004c\-\>B:89:0x0052\l|0x0052: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0056: INVOKE  (r0 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r3 I:java.lang.Object A[D('item' java.lang.Object)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:925)\l}"];
Node_95 [shape=record,label="{95\:\ 0x005a|SYNTHETIC\l}"];
Node_92 [shape=record,label="{92\:\ 0x005e|0x005e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('list' java.util.ArrayList)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3708)\l0x005f: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:914)\l0x0061: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0064: CONST_STR  (r2 I:java.lang.String) =  \"Requested element count \" \l0x0066: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0069: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:int A[D('n' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x006c: CONST_STR  (r2 I:java.lang.String) =  \" is less than zero.\" \l0x006e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0071: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-CollectionsKt___CollectionsKt$takeLast$1' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0075: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0077: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x007b: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_93 [shape=record,label="{93\:\ 0x007e|0x007e: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_69 [shape=record,label="{69\:\ 0x000a|0x000a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.takeLast((r4 I:java.util.List\<? extends T\> A[D('$this$takeLast' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('n' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:77:0x0021 \-\> B:65:?, CROSS_EDGE: B:80:0x002c \-\> B:65:?, BACK_EDGE: B:85:0x003a \-\> B:84:0x0038, CROSS_EDGE: B:91:0x005d \-\> B:65:?, BACK_EDGE: B:89:0x0052 \-\> B:87:0x004c, CROSS_EDGE: B:88:0x0050 \-\> B:90:0x005a, CROSS_EDGE: B:93:0x007e \-\> B:65:?, CROSS_EDGE: B:69:0x000a \-\> B:70:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0038\-0x0044: r2 'index' I\l  0x0056\-0x005a: r3 'item' Ljava\/lang\/Object;\l  0x0032\-0x005e: r0 'list' Ljava\/util\/ArrayList;\l  0x0018\-0x005e: r1 'size' I\l  0x005f\-0x0075: r0 '$i$a$\-require\-CollectionsKt___CollectionsKt$takeLast$1' I\l  \-1 \-0x007e: r4 '$this$takeLast' Ljava\/util\/List;\l  \-1 \-0x007e: r5 'n' I\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/List\<+TT;\>;I)Ljava\/util\/List\<TT;\>;\l}"];
MethodNode -> Node_64;Node_64 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_69;
Node_68 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_92;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_74;
Node_72 -> Node_73;
Node_73 -> Node_65;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_78;
Node_76 -> Node_77;
Node_77 -> Node_65;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_81;
Node_79 -> Node_80;
Node_80 -> Node_65;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_86;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_94;
Node_85 -> Node_84;
Node_94 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_65;
Node_86 -> Node_87;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_95;
Node_89 -> Node_87;
Node_95 -> Node_90;
Node_92 -> Node_93;
Node_93 -> Node_65;
Node_69 -> Node_70;
}

