digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.flatMapIndexedSequence(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$flatMapIndexed' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:1403)\l0x000c: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x000f: CHECK_CAST (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:??[OBJECT, ARRAY]) \l0x0011: INVOKE  (r1 I:java.util.Iterator) = (r5 I:java.lang.Iterable A[D('$this$flatMapIndexed' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)]\l0x0015: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|LOOP_START\lLOOP:0: B:31:0x0016\-\>B:36:0x0027\l|0x0016: INVOKE  (r3 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x001a|0x001a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0036 \l}"];
Node_33 [shape=record,label="{33\:\ 0x001c|0x001c: INVOKE  (r3 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0020: ARITH  (r4 I:int) = (r2 I:int) + (1 int) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0022|0x0022: IF  (r2 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:41:0x0027 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0024|0x0024: INVOKE   type: STATIC call: kotlin.collections.CollectionsKt.throwIndexOverflow():void A[MD:():void (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0027|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0027|LOOP_END\lLOOP:0: B:31:0x0016\-\>B:36:0x0027\l|0x0027: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x002b: INVOKE  (r2 I:java.lang.Object) = \l  (r6 I:kotlin.jvm.functions.Function2 A[D('transform' kotlin.jvm.functions.Function2)])\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x002f: CHECK_CAST (r2 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r2 I:??[OBJECT, ARRAY]) \l0x0031: INVOKE  (r0 I:java.util.Collection), (r2 I:kotlin.sequences.Sequence) type: STATIC call: kotlin.collections.CollectionsKt.addAll(java.util.Collection, kotlin.sequences.Sequence):boolean A[MD:\<T\>:(java.util.Collection\<? super T\>, kotlin.sequences.Sequence\<? extends T\>):boolean (m)]\l0x0034: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0027|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0036|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0036|0x0036: CHECK_CAST (r0 I:java.util.List) = (java.util.List) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0038|RETURN\l|0x0038: RETURN  (r0 I:java.util.List\<R\>) \l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.util.List\<R\> kotlin.collections.CollectionsKt___CollectionsKt.flatMapIndexedSequence((r5 I:java.lang.Iterable\<? extends T\> A[D('$this$flatMapIndexed' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super T, ? extends kotlin.sequences.Sequence\<? extends R\>\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:36:0x0027 \-\> B:31:0x0016, CROSS_EDGE: B:34:0x0022 \-\> B:36:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Integer;\-TT;+Lkotlin\/sequences\/Sequence\<+TR;\>;\>;)Ljava\/util\/List\<TR;\>;\lDebug Info:\l  \-1 \-0x0038: r5 '$this$flatMapIndexed' Ljava\/lang\/Iterable;\l  \-1 \-0x0038: r6 'transform' Lkotlin\/jvm\/functions\/Function2;\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_39;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_41;
Node_35 -> Node_40;
Node_40 -> Node_36;
Node_36 -> Node_31;
Node_41 -> Node_36;
Node_39 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_29;
}

