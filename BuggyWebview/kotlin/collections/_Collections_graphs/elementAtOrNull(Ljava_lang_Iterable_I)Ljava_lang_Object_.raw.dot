digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.elementAtOrNull(Ljava\/lang\/Iterable;I)Ljava\/lang\/Object;" {
Node_38 [shape=record,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$elementAtOrNull' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INSTANCE_OF  (r0 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('$this$elementAtOrNull' java.lang.Iterable)]) java.util.List  (LINE:136)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0011 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0009|0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('$this$elementAtOrNull' java.lang.Iterable)])  (LINE:137)\l0x000a: CHECK_CAST (r0 I:java.util.List) = (java.util.List) (r0 I:??[OBJECT, ARRAY]) \l0x000c: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r6 I:int A[D('index' int)]) type: STATIC call: kotlin.collections.CollectionsKt.getOrNull(java.util.List, int):java.lang.Object A[MD:\<T\>:(java.util.List\<? extends T\>, int):T (m)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:T) \l}"];
Node_39 [shape=record,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0011|0x0011: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:138)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0012|0x0012: IF  (r6 I:??[int, byte, short, char] A[D('index' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:47:0x0015 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0014|RETURN\l|0x0014: RETURN  (r0 I:T)  (LINE:139)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0015|0x0015: INVOKE  (r1 I:java.util.Iterator) = (r5 I:java.lang.Iterable A[D('$this$elementAtOrNull' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:140)\l0x0019: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:141)\l}"];
Node_48 [shape=record,label="{48\:\ 0x001a|LOOP_START\lLOOP:0: B:48:0x001a\-\>B:53:0x0029\l|0x001a: INVOKE  (r3 I:boolean) = (r1 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:142)\l}"];
Node_49 [shape=record,label="{49\:\ 0x001e|0x001e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x002b \l}"];
Node_50 [shape=record,label="{50\:\ 0x0020|0x0020: INVOKE  (r3 I:java.lang.Object) = (r1 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:143)\l0x0024: ARITH  (r4 I:int) = (r2 I:int A[D('count' int)]) + (1 int)  (LINE:144)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0026|0x0026: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('count' int)])  \-\> B:53:0x0029 \l}"];
Node_53 [shape=record,label="{53\:\ 0x0029|LOOP_END\lLOOP:0: B:48:0x001a\-\>B:53:0x0029\l|0x0029: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('count' int)])  (LINE:144)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0028|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x0028|RETURN\l|0x0028: RETURN  (r3 I:T A[D('element' java.lang.Object)])  (LINE:145)\l}"];
Node_56 [shape=record,label="{56\:\ 0x002b|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x002b|RETURN\l|0x002b: RETURN  (r0 I:T)  (LINE:147)\l}"];
MethodNode[shape=record,label="{public static final T kotlin.collections.CollectionsKt___CollectionsKt.elementAtOrNull((r5 I:java.lang.Iterable\<? extends T\> A[D('$this$elementAtOrNull' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:46:0x0014 \-\> B:39:?, CROSS_EDGE: B:52:0x0028 \-\> B:39:?, BACK_EDGE: B:53:0x0029 \-\> B:48:0x001a, CROSS_EDGE: B:54:0x002b \-\> B:39:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x0026: r2 'count' I\l  0x0024\-0x002b: r3 'element' Ljava\/lang\/Object;\l  0x0026\-0x002b: r4 'count' I\l  0x0019\-0x002b: r1 'iterator' Ljava\/util\/Iterator;\l  0x002b\-0x002b: r2 'count' I\l  \-1 \-0x002b: r5 '$this$elementAtOrNull' Ljava\/lang\/Iterable;\l  \-1 \-0x002b: r6 'index' I\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;I)TT;\l}"];
MethodNode -> Node_38;Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_39;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_39;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_56;
Node_50 -> Node_51;
Node_51 -> Node_53;
Node_51 -> Node_55[style=dashed];
Node_53 -> Node_48;
Node_55 -> Node_52;
Node_52 -> Node_39;
Node_56 -> Node_54;
Node_54 -> Node_39;
}

