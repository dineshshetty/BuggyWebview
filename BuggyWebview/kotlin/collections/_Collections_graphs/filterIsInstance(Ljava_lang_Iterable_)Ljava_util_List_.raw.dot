digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.filterIsInstance(Ljava\/lang\/Iterable;)Ljava\/util\/List;" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r8 I:java.lang.Object A[D('$this$filterIsInstance' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:800)\l0x0008: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x000b: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x000d: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$this$filterIsInstance' java.lang.Iterable)]) \l0x000e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: INVOKE  (r4 I:java.util.Iterator) = (r2 I:java.lang.Iterable A[D('$this$filterIsInstanceTo$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:3721)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0013|LOOP_START\lLOOP:0: B:33:0x0013\-\>B:42:0x0013\l|0x0013: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0017|0x0017: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x002b \l}"];
Node_35 [shape=record,label="{35\:\ 0x0019|0x0019: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001d: CONST  (r6 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x001e: CONST_STR  (r7 I:java.lang.String) =  \"R\" \l0x0020: INVOKE  (r6 I:int), (r7 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.reifiedOperationMarker(int, java.lang.String):void A[MD:(int, java.lang.String):void (m)]\l0x0023: INSTANCE_OF  (r6 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) java.lang.Object \l}"];
Node_36 [shape=record,label="{36\:\ 0x0025|0x0025: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0013 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0027|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0027|0x0027: INVOKE  \l  (r1 I:java.util.Collection A[D('destination$iv' java.util.Collection)])\l  (r5 I:java.lang.Object A[D('element$iv' java.lang.Object)])\l type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0013|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0013|LOOP_END\lSYNTHETIC\lLOOP:0: B:33:0x0013\-\>B:42:0x0013\l}"];
Node_43 [shape=record,label="{43\:\ 0x0013|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x002b|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x002b|0x002c: CHECK_CAST (r1 I:java.util.List) = (java.util.List) (r1 I:??[OBJECT, ARRAY] A[D('destination$iv' java.util.Collection)]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x002e|RETURN\l|0x002e: RETURN  (r1 I:java.util.List\<R\>)  (LINE:800)\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ java.util.List\<R\> kotlin.collections.CollectionsKt___CollectionsKt.filterIsInstance((r8 I:java.lang.Iterable\<?\> A[D('$this$filterIsInstance' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lBACK_EDGE: B:36:0x0025 \-\> B:33:0x0013, BACK_EDGE: B:37:0x0027 \-\> B:33:0x0013\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001d\-0x002b: r5 'element$iv' Ljava\/lang\/Object;\l  0x000d\-0x002c: r1 'destination$iv' Ljava\/util\/Collection;\l  0x000e\-0x002c: r2 '$this$filterIsInstanceTo$iv' Ljava\/lang\/Iterable;\l  0x000f\-0x002c: r3 '$i$f$filterIsInstanceTo' I\l  0x0006\-0x002e: r0 '$i$f$filterIsInstance' I\l  \-1 \-0x002e: r8 '$this$filterIsInstance' Ljava\/lang\/Iterable;\lSIGNATURE: \<R:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<*\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_41;
Node_35 -> Node_36;
Node_36 -> Node_40[style=dashed];
Node_36 -> Node_43;
Node_40 -> Node_37;
Node_37 -> Node_44;
Node_44 -> Node_42;
Node_42 -> Node_33;
Node_43 -> Node_42;
Node_41 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_31;
}

