digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.minus(Ljava\/lang\/Iterable;Lkotlin\/sequences\/Sequence;)Ljava\/util\/List;" {
Node_38 [shape=record,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r10 I:java.lang.Object A[D('$this$minus' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0007: INVOKE  (r11 I:java.lang.Object A[D('elements' kotlin.sequences.Sequence)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:java.util.Collection) = (r11 I:kotlin.sequences.Sequence A[D('elements' kotlin.sequences.Sequence)]) type: STATIC call: kotlin.collections.BrittleContainsOptimizationKt.convertToSetForSetOperation(kotlin.sequences.Sequence):java.util.Collection A[MD:\<T\>:(kotlin.sequences.Sequence\<? extends T\>):java.util.Collection\<T\> (m)] (LINE:3177)\l0x000e: INVOKE  (r1 I:boolean) = (r0 I:java.util.Collection A[D('other' java.util.Collection)]) type: INTERFACE call: java.util.Collection.isEmpty():boolean A[MD:():boolean (c)] (LINE:3178)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0012|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0019 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0014|0x0014: INVOKE  (r1 I:java.util.List) = (r10 I:java.lang.Iterable A[D('$this$minus' java.lang.Iterable)]) type: STATIC call: kotlin.collections.CollectionsKt.toList(java.lang.Iterable):java.util.List A[MD:\<T\>:(java.lang.Iterable\<? extends T\>):java.util.List\<T\> (m)] (LINE:3179)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0018|RETURN\l|0x0018: RETURN  (r1 I:java.util.List\<T\>) \l}"];
Node_39 [shape=record,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0019|0x0019: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('$this$minus' java.lang.Iterable)])  (LINE:3180)\l0x001a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001b: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:3854)\l0x001d: INVOKE  (r3 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0020: CHECK_CAST (r3 I:java.util.Collection) = (java.util.Collection) (r3 I:??[OBJECT, ARRAY]) \l0x0022: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$filterNot$iv' java.lang.Iterable)]) \l0x0023: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0024: INVOKE  (r6 I:java.util.Iterator) = (r4 I:java.lang.Iterable A[D('$this$filterNotTo$iv$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:3855)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0028|LOOP_START\lLOOP:0: B:45:0x0028\-\>B:54:0x0028\l|0x0028: INVOKE  (r7 I:boolean) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x002c|0x002c: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x003e \l}"];
Node_47 [shape=record,label="{47\:\ 0x002e|0x002e: INVOKE  (r7 I:java.lang.Object) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0032: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('element$iv$iv' java.lang.Object)]) \l0x0033: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0034: INVOKE  (r8 I:boolean A[D('it' java.lang.Object)]) = (r0 I:java.util.Collection A[D('other' java.util.Collection)]), (r8 I:java.lang.Object A[D('it' java.lang.Object)]) type: INTERFACE call: java.util.Collection.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:3180)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0038|0x0038: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0028 \l}"];
Node_52 [shape=record,label="{52\:\ 0x003a|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x003a|0x003a: INVOKE  \l  (r3 I:java.util.Collection A[D('destination$iv$iv' java.util.Collection)])\l  (r7 I:java.lang.Object A[D('element$iv$iv' java.lang.Object)])\l type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_56 [shape=record,label="{56\:\ 0x0028|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x0028|LOOP_END\lSYNTHETIC\lLOOP:0: B:45:0x0028\-\>B:54:0x0028\l}"];
Node_55 [shape=record,label="{55\:\ 0x0028|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x003e|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x003e|0x003f: CHECK_CAST (r3 I:java.util.List) = (java.util.List) (r3 I:??[OBJECT, ARRAY] A[D('destination$iv$iv' java.util.Collection)]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0042|RETURN\l|0x0042: RETURN  (r3 I:java.util.List\<T\>)  (LINE:3180)\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.minus((r10 I:java.lang.Iterable\<? extends T\> A[D('$this$minus' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlin.sequences.Sequence\<? extends T\> A[D('elements' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:48:0x0038 \-\> B:45:0x0028, BACK_EDGE: B:49:0x003a \-\> B:45:0x0028, CROSS_EDGE: B:51:0x0042 \-\> B:39:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0033\-0x0038: r8 'it' Ljava\/lang\/Object;\l  0x0034\-0x0038: r9 '$i$a$\-filterNot\-CollectionsKt___CollectionsKt$minus$4' I\l  0x0032\-0x003e: r7 'element$iv$iv' Ljava\/lang\/Object;\l  0x0022\-0x003f: r3 'destination$iv$iv' Ljava\/util\/Collection;\l  0x0023\-0x003f: r4 '$this$filterNotTo$iv$iv' Ljava\/lang\/Iterable;\l  0x0024\-0x003f: r5 '$i$f$filterNotTo' I\l  0x001a\-0x0042: r1 '$this$filterNot$iv' Ljava\/lang\/Iterable;\l  0x001b\-0x0042: r2 '$i$f$filterNot' I\l  0x000e\-0x0042: r0 'other' Ljava\/util\/Collection;\l  \-1 \-0x0042: r10 '$this$minus' Ljava\/lang\/Iterable;\l  \-1 \-0x0042: r11 'elements' Lkotlin\/sequences\/Sequence;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/sequences\/Sequence\<+TT;\>;)Ljava\/util\/List\<TT;\>;\l}"];
MethodNode -> Node_38;Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_39;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_53;
Node_47 -> Node_48;
Node_48 -> Node_52[style=dashed];
Node_48 -> Node_55;
Node_52 -> Node_49;
Node_49 -> Node_56;
Node_56 -> Node_54;
Node_54 -> Node_45;
Node_55 -> Node_54;
Node_53 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_39;
}

