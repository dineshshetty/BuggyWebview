digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.plus(Ljava\/lang\/Iterable;Ljava\/lang\/Object;)Ljava\/util\/List;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$plus' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INSTANCE_OF  (r0 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('$this$plus' java.lang.Iterable)]) java.util.Collection  (LINE:3215)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0011 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$plus' java.lang.Iterable)]) \l0x000a: CHECK_CAST (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:??[OBJECT, ARRAY]) \l0x000c: INVOKE  (r0 I:java.util.List) = (r0 I:java.util.Collection), (r3 I:java.lang.Object A[D('element' java.lang.Object)]) type: STATIC call: kotlin.collections.CollectionsKt.plus(java.util.Collection, java.lang.Object):java.util.List A[MD:\<T\>:(java.util.Collection\<? extends T\>, T):java.util.List\<T\> (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:java.util.List\<T\>) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:3216)\l0x0013: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0016: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.util.ArrayList)])  (LINE:3217)\l0x0017: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x0019: INVOKE  (r1 I:java.util.Collection), (r2 I:java.lang.Iterable A[D('$this$plus' java.lang.Iterable)]) type: STATIC call: kotlin.collections.CollectionsKt.addAll(java.util.Collection, java.lang.Iterable):boolean A[MD:\<T\>:(java.util.Collection\<? super T\>, java.lang.Iterable\<? extends T\>):boolean (m)]\l0x001c: INVOKE  (r0 I:java.util.ArrayList A[D('result' java.util.ArrayList)]), (r3 I:java.lang.Object A[D('element' java.lang.Object)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:3218)\l0x001f: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.util.ArrayList)])  (LINE:3219)\l0x0020: CHECK_CAST (r1 I:java.util.List) = (java.util.List) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0022|RETURN\l|0x0022: RETURN  (r1 I:java.util.List\<T\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.plus((r2 I:java.lang.Iterable\<? extends T\> A[D('$this$plus' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:T A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0022 \-\> B:17:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0022: r0 'result' Ljava\/util\/ArrayList;\l  \-1 \-0x0022: r2 '$this$plus' Ljava\/lang\/Iterable;\l  \-1 \-0x0022: r3 'element' Ljava\/lang\/Object;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;TT;)Ljava\/util\/List\<TT;\>;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_22 -> Node_23;
Node_23 -> Node_17;
}

