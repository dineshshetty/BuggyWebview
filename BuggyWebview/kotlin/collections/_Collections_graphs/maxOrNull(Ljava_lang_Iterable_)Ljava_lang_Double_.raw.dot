digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.maxOrNull(Ljava\/lang\/Iterable;)Ljava\/lang\/Double;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$maxOrNull' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:java.util.Iterator) = (r5 I:java.lang.Iterable A[D('$this$maxOrNull' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:2158)\l0x0009: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:2159)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0011 \l}"];
Node_30 [shape=record,label="{30\:\ 0x000f|RETURN\l|0x000f: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: RETURN  (r1 I:java.lang.Double) \l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0011|0x0011: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:2160)\l0x0015: CHECK_CAST (r1 I:java.lang.Number) = (java.lang.Number) (r1 I:??[OBJECT, ARRAY]) \l0x0017: INVOKE  (r1 I:double) = (r1 I:java.lang.Number) type: VIRTUAL call: java.lang.Number.doubleValue():double A[MD:():double (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x001b|LOOP_START\lLOOP:0: B:33:0x001b\-\>B:35:0x0021\l|0x001b: INVOKE  (r3 I:boolean) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:2161)\l}"];
Node_34 [shape=record,label="{34\:\ 0x001f|0x001f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0030 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0021|LOOP_END\lLOOP:0: B:33:0x001b\-\>B:35:0x0021\l|0x0021: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:2162)\l0x0025: CHECK_CAST (r3 I:java.lang.Number) = (java.lang.Number) (r3 I:??[OBJECT, ARRAY]) \l0x0027: INVOKE  (r3 I:double) = (r3 I:java.lang.Number) type: VIRTUAL call: java.lang.Number.doubleValue():double A[MD:():double (c)]\l0x002b: INVOKE  (r1 I:double A[D('max' double)]) = (r1 I:double A[D('max' double)]), (r3 I:double A[D('e' double)]) type: STATIC call: java.lang.Math.max(double, double):double A[MD:(double, double):double (c)] (LINE:2163)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0030|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0030|0x0030: INVOKE  (r3 I:java.lang.Double) = (r1 I:double A[D('max' double)]) type: STATIC call: java.lang.Double.valueOf(double):java.lang.Double A[MD:(double):java.lang.Double (c)] (LINE:2165)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0034|RETURN\l|0x0034: RETURN  (r3 I:java.lang.Double) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Double kotlin.collections.CollectionsKt___CollectionsKt.maxOrNull((r5 I:java.lang.Iterable\<java.lang.Double\> A[D('$this$maxOrNull' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:35:0x0021 \-\> B:33:0x001b, CROSS_EDGE: B:37:0x0034 \-\> B:27:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002b\-0x002f: r3 'e' D\l  0x0009\-0x0034: r0 'iterator' Ljava\/util\/Iterator;\l  0x001b\-0x0034: r1 'max' D\l  \-1 \-0x0034: r5 '$this$maxOrNull' Ljava\/lang\/Iterable;\lSIGNATURE: (Ljava\/lang\/Iterable\<Ljava\/lang\/Double;\>;)Ljava\/lang\/Double;\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_27;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_38;
Node_35 -> Node_33;
Node_38 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_27;
}

