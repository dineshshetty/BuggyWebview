digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.minOfOrNull(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Float;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"selector\")\ljava.util.Iterator r0 = r3.iterator()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0012|if (r0.hasNext() != false) goto L5\l}"];
Node_30 [shape=record,label="{30\:\ 0x0014|RETURN\l|return null\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0016|float r1 = r4.invoke((T) r0.next()).floatValue()\l}"];
Node_33 [shape=record,label="{33\:\ 0x0024|LOOP_START\lLOOP:0: B:33:0x0024\-\>B:35:0x002a\lPHI: r1 \l  PHI: (r1v5 'minValue' float) = (r1v4 'minValue' float), (r1v6 'minValue' float) binds: [B:32:0x0016, B:35:0x002a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0028|if (r0.hasNext() == false) goto L9\l}"];
Node_35 [shape=record,label="{35\:\ 0x002a|LOOP_END\lLOOP:0: B:33:0x0024\-\>B:35:0x002a\l|float r2 = r4.invoke((T) r0.next()).floatValue()\lfloat r1 = java.lang.Math.min(r1, r2)\l}"];
Node_38 [shape=record,label="{38\:\ 0x003d|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x003d}"];
Node_37 [shape=record,label="{37\:\ 0x0041|RETURN\l|return java.lang.Float.valueOf(r1)\l}"];
MethodNode[shape=record,label="{private static final java.lang.Float kotlin.collections.CollectionsKt___CollectionsKt.minOfOrNull((r3v0 java.lang.Iterable\<? extends T\> A[D('$this$minOfOrNull' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'selector' kotlin.jvm.functions.Function1\<? super T, java.lang.Float\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:35:0x002a \-\> B:33:0x0024, CROSS_EDGE: B:37:0x0041 \-\> B:27:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Float;\>;)Ljava\/lang\/Float;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r1v1. Raw type applied. Possible types: T, ? super T\l \-\> Type inference failed for r2v2. Raw type applied. Possible types: T, ? super T\}\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_27;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_38;
Node_35 -> Node_33;
Node_38 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_27;
}

