digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.random(Ljava\/util\/Collection;Lkotlin\/random\/Random;)Ljava\/lang\/Object;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$random' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"random\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('random' kotlin.random.Random)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:boolean) = (r2 I:java.util.Collection A[D('$this$random' java.util.Collection)]) type: INTERFACE call: java.util.Collection.isEmpty():boolean A[MD:():boolean (c)] (LINE:559)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0020 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|0x0010: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$random' java.util.Collection)])  (LINE:561)\l0x0011: CHECK_CAST (r0 I:java.lang.Iterable) = (java.lang.Iterable) (r0 I:??[OBJECT, ARRAY]) \l0x0013: INVOKE  (r1 I:int) = (r2 I:java.util.Collection A[D('$this$random' java.util.Collection)]) type: INTERFACE call: java.util.Collection.size():int A[MD:():int (c)]\l0x0017: INVOKE  (r1 I:int) = (r3 I:kotlin.random.Random A[D('random' kotlin.random.Random)]), (r1 I:int) type: VIRTUAL call: kotlin.random.Random.nextInt(int):int A[MD:(int):int (m)]\l0x001b: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Iterable), (r1 I:int) type: STATIC call: kotlin.collections.CollectionsKt.elementAt(java.lang.Iterable, int):java.lang.Object A[MD:\<T\>:(java.lang.Iterable\<? extends T\>, int):T (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001f|RETURN\l|0x001f: RETURN  (r0 I:T) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0020|0x0020: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException  (LINE:560)\l0x0022: CONST_STR  (r1 I:java.lang.String) =  \"Collection is empty.\" \l0x0024: INVOKE  (r0 I:java.util.NoSuchElementException), (r1 I:java.lang.String) type: DIRECT call: java.util.NoSuchElementException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0027|0x0027: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final T kotlin.collections.CollectionsKt___CollectionsKt.random((r2 I:java.util.Collection\<? extends T\> A[D('$this$random' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.random.Random A[D('random' kotlin.random.Random), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0027 \-\> B:17:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0027: r2 '$this$random' Ljava\/util\/Collection;\l  \-1 \-0x0027: r3 'random' Lkotlin\/random\/Random;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/Collection\<+TT;\>;Lkotlin\/random\/Random;)TT;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_22 -> Node_23;
Node_23 -> Node_17;
}

