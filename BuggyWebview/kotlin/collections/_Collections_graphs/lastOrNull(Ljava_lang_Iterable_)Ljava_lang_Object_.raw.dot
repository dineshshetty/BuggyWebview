digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.lastOrNull(Ljava\/lang\/Iterable;)Ljava\/lang\/Object;" {
Node_38 [shape=record,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$lastOrNull' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0006: INSTANCE_OF  (r0 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('$this$lastOrNull' java.lang.Iterable)]) java.util.List  (LINE:490)\l0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0026 \l}"];
Node_42 [shape=record,label="{42\:\ 0x000b|0x000b: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('$this$lastOrNull' java.lang.Iterable)]) \l0x000c: CHECK_CAST (r0 I:java.util.List) = (java.util.List) (r0 I:??[OBJECT, ARRAY]) \l0x000e: INVOKE  (r0 I:boolean) = (r0 I:java.util.List) type: INTERFACE call: java.util.List.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0015 \l}"];
Node_45 [shape=record,label="{45\:\ 0x0015|0x0015: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('$this$lastOrNull' java.lang.Iterable)]) \l0x0016: CHECK_CAST (r0 I:java.util.List) = (java.util.List) (r0 I:??[OBJECT, ARRAY]) \l0x0018: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('$this$lastOrNull' java.lang.Iterable)]) \l0x0019: CHECK_CAST (r1 I:java.util.List) = (java.util.List) (r1 I:??[OBJECT, ARRAY]) \l0x001b: INVOKE  (r1 I:int) = (r1 I:java.util.List) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l0x001f: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x0021: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0025|RETURN\lORIG_RETURN\l|0x0025: RETURN  (r1 I:T) \l}"];
Node_39 [shape=record,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lRETURN\l|0x0025: RETURN  (r1 I:T) A[SYNTHETIC]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0026|0x0026: INVOKE  (r0 I:java.util.Iterator) = (r3 I:java.lang.Iterable A[D('$this$lastOrNull' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:492)\l0x002a: INVOKE  (r2 I:boolean) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:493)\l}"];
Node_48 [shape=record,label="{48\:\ 0x002e|0x002e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0031 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0030|RETURN\l|0x0030: RETURN  (r1 I:T)  (LINE:494)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0031|0x0031: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:495)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0035|LOOP_START\lLOOP:0: B:51:0x0035\-\>B:53:0x003b\l|0x0035: INVOKE  (r2 I:boolean) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:496)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0039|0x0039: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0040 \l}"];
Node_53 [shape=record,label="{53\:\ 0x003b|LOOP_END\lLOOP:0: B:51:0x0035\-\>B:53:0x003b\l|0x003b: INVOKE  (r1 I:java.lang.Object A[D('last' java.lang.Object)]) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:497)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0040|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x0040|RETURN\l|0x0040: RETURN  (r1 I:T A[D('last' java.lang.Object)])  (LINE:498)\l}"];
MethodNode[shape=record,label="{public static final T kotlin.collections.CollectionsKt___CollectionsKt.lastOrNull((r3 I:java.lang.Iterable\<? extends T\> A[D('$this$lastOrNull' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:43:0x0012 \-\> B:46:0x0025, CROSS_EDGE: B:49:0x0030 \-\> B:39:?, BACK_EDGE: B:53:0x003b \-\> B:51:0x0035, CROSS_EDGE: B:54:0x0040 \-\> B:39:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002a\-0x0040: r0 'iterator' Ljava\/util\/Iterator;\l  0x0035\-0x0040: r1 'last' Ljava\/lang\/Object;\l  \-1 \-0x0040: r3 '$this$lastOrNull' Ljava\/lang\/Iterable;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;)TT;\l}"];
MethodNode -> Node_38;Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_47;
Node_42 -> Node_43;
Node_43 -> Node_45;
Node_43 -> Node_56[style=dashed];
Node_45 -> Node_46;
Node_46 -> Node_39;
Node_56 -> Node_39;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_39;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_55;
Node_53 -> Node_51;
Node_55 -> Node_54;
Node_54 -> Node_39;
}

