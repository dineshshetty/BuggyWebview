digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.mapIndexed(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"transform\")\ljava.util.Collection r1 = new java.util.ArrayList(kotlin.collections.CollectionsKt.collectionSizeOrDefault(r8, 10))\lr4 = 0\ljava.util.Iterator r5 = r8.iterator()\l}"];
Node_31 [shape=record,label="{31\:\ 0x001f|LOOP_START\lLOOP:0: B:31:0x001f\-\>B:36:0x0030\lPHI: r4 \l  PHI: (r4v1 'index$iv' int) = (r4v0 'index$iv' int), (r4v4 'index$iv' int) binds: [B:30:0x0000, B:36:0x0030] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|if (r5.hasNext() == false) goto L10\l}"];
Node_33 [shape=record,label="{33\:\ 0x0025|java.lang.Object r6 = (T) r5.next()\lint r7 = r4 + 1\l}"];
Node_34 [shape=record,label="{34\:\ 0x002b|if (r4 \>= 0) goto L9\l}"];
Node_35 [shape=record,label="{35\:\ 0x002d|kotlin.collections.CollectionsKt.throwIndexOverflow()\l}"];
Node_40 [shape=record,label="{40\:\ 0x0030|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0030|LOOP_END\lLOOP:0: B:31:0x001f\-\>B:36:0x0030\l|r1.add(r9.invoke(java.lang.Integer.valueOf(r4), r6))\lr4 = r7\l}"];
Node_41 [shape=record,label="{41\:\ 0x0030|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x003d|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x003d}"];
Node_38 [shape=record,label="{38\:\ 0x0040|RETURN\l|return (java.util.List) r1\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.collections.CollectionsKt___CollectionsKt.mapIndexed((r8v0 java.lang.Iterable\<? extends T\> A[D('$this$mapIndexed' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'transform' kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super T, ? extends R\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:36:0x0030 \-\> B:31:0x001f, CROSS_EDGE: B:34:0x002b \-\> B:36:0x0030\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Integer;\-TT;+TR;\>;)Ljava\/util\/List\<TR;\>;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r6v1. Raw type applied. Possible types: T, ? super T\}\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_39;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_41;
Node_35 -> Node_40;
Node_40 -> Node_36;
Node_36 -> Node_31;
Node_41 -> Node_36;
Node_39 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_29;
}

