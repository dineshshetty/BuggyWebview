digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.zipWithNext(Ljava\/lang\/Iterable;)Ljava\/util\/List;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$zipWithNext' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$zipWithNext' java.lang.Iterable)])  (LINE:3460)\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: INVOKE  (r2 I:java.util.Iterator) = (r0 I:java.lang.Iterable A[D('$this$zipWithNext$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:3876)\l0x000b: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator A[D('iterator$iv' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:3877)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000f|0x000f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0016 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0011|0x0011: INVOKE  (r3 I:java.util.List) =  type: STATIC call: kotlin.collections.CollectionsKt.emptyList():java.util.List A[MD:\<T\>:():java.util.List\<T\> (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0038|RETURN\lORIG_RETURN\l|0x0038: RETURN  (r3 I:java.util.List\<kotlin.Pair\<T, T\>\> A[D('result$iv' java.util.List)])  (LINE:3460)\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|0x0016: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:3878)\l0x0018: INVOKE  (r3 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x001b: CHECK_CAST (r3 I:java.util.List) = (java.util.List) (r3 I:??[OBJECT, ARRAY]) \l0x001d: INVOKE  (r4 I:java.lang.Object) = (r2 I:java.util.Iterator A[D('iterator$iv' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:3879)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0021|LOOP_START\lLOOP:0: B:32:0x0021\-\>B:34:0x0027\l|0x0021: INVOKE  (r5 I:boolean) = (r2 I:java.util.Iterator A[D('iterator$iv' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:3880)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0025|0x0025: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0038 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0027|LOOP_END\lLOOP:0: B:32:0x0021\-\>B:34:0x0027\l|0x0027: INVOKE  (r5 I:java.lang.Object) = (r2 I:java.util.Iterator A[D('iterator$iv' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:3881)\l0x002b: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('current$iv' java.lang.Object)])  (LINE:3882)\l0x002c: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('next$iv' java.lang.Object)]) \l0x002d: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002e: INVOKE  (r6 I:kotlin.Pair A[D('a' java.lang.Object)]) = (r6 I:java.lang.Object A[D('a' java.lang.Object)]), (r7 I:java.lang.Object A[D('b' java.lang.Object)]) type: STATIC call: kotlin.TuplesKt.to(java.lang.Object, java.lang.Object):kotlin.Pair A[MD:\<A, B\>:(A, B):kotlin.Pair\<A, B\> (m)] (LINE:3460)\l0x0032: INVOKE  (r3 I:java.util.List A[D('result$iv' java.util.List)]), (r6 I:java.lang.Object A[D('a' java.lang.Object)]) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0035: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('current$iv' java.lang.Object)]) = (r5 I:??[OBJECT, ARRAY] A[D('next$iv' java.lang.Object)])  (LINE:3883)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0038|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|0x0038: RETURN  (r3 I:java.util.List\<kotlin.Pair\<T, T\>\> A[D('result$iv' java.util.List)]) A[SYNTHETIC] (LINE:3460)\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<kotlin.Pair\<T, T\>\> kotlin.collections.CollectionsKt___CollectionsKt.zipWithNext((r9 I:java.lang.Iterable\<? extends T\> A[D('$this$zipWithNext' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x0027 \-\> B:32:0x0021, CROSS_EDGE: B:33:0x0025 \-\> B:36:0x0038\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002c\-0x0032: r6 'a' Ljava\/lang\/Object;\l  0x002d\-0x0032: r7 'b' Ljava\/lang\/Object;\l  0x002e\-0x0032: r8 '$i$a$\-zipWithNext\-CollectionsKt___CollectionsKt$zipWithNext$1' I\l  0x002b\-0x0036: r5 'next$iv' Ljava\/lang\/Object;\l  0x0006\-0x0038: r0 '$this$zipWithNext$iv' Ljava\/lang\/Iterable;\l  0x0007\-0x0038: r1 '$i$f$zipWithNext' I\l  0x000b\-0x0038: r2 'iterator$iv' Ljava\/util\/Iterator;\l  0x001d\-0x0038: r3 'result$iv' Ljava\/util\/List;\l  0x0021\-0x0038: r4 'current$iv' Ljava\/lang\/Object;\l  \-1 \-0x0038: r9 '$this$zipWithNext' Ljava\/lang\/Iterable;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;)Ljava\/util\/List\<Lkotlin\/Pair\<TT;TT;\>;\>;\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_36;
Node_36 -> Node_27;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_32;
Node_37 -> Node_38;
Node_38 -> Node_27;
}

