digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.minOrThrow(Ljava\/lang\/Iterable;)Ljava\/lang\/Comparable;" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$min' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:java.util.Iterator) = (r4 I:java.lang.Iterable A[D('$this$min' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:2285)\l0x0009: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:2286)\l}"];
Node_39 [shape=record,label="{39\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x002a \l}"];
Node_40 [shape=record,label="{40\:\ 0x000f|0x000f: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:2287)\l0x0013: CHECK_CAST (r1 I:java.lang.Comparable) = (java.lang.Comparable) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0015|LOOP_START\lLOOP:0: B:41:0x0015\-\>B:51:0x0015\l|0x0015: INVOKE  (r2 I:boolean) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:2288)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0019|0x0019: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0029 \l}"];
Node_43 [shape=record,label="{43\:\ 0x001b|0x001b: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:2289)\l0x001f: CHECK_CAST (r2 I:java.lang.Comparable) = (java.lang.Comparable) (r2 I:??[OBJECT, ARRAY]) \l0x0021: INVOKE  (r3 I:int) = (r1 I:java.lang.Comparable A[D('min' java.lang.Comparable)]), (r2 I:java.lang.Object A[D('e' java.lang.Comparable)]) type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)] (LINE:2290)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0025|0x0025: IF  (r3 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:52:0x0015 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0027|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0027|0x0027: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('min' java.lang.Comparable)]) = (r2 I:??[OBJECT, ARRAY] A[D('e' java.lang.Comparable)]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x0015|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0015|LOOP_END\lSYNTHETIC\lLOOP:0: B:41:0x0015\-\>B:51:0x0015\l}"];
Node_52 [shape=record,label="{52\:\ 0x0015|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0029|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0029|RETURN\l|0x0029: RETURN  (r1 I:T extends java.lang.Comparable\<? super T\> A[D('min' java.lang.Comparable)])  (LINE:2292)\l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ 0x002a|0x002a: NEW_INSTANCE  (r1 I:java.util.NoSuchElementException A[D('min' java.lang.Comparable)]) =  java.util.NoSuchElementException  (LINE:2286)\l0x002c: INVOKE  (r1 I:java.util.NoSuchElementException) type: DIRECT call: java.util.NoSuchElementException.\<init\>():void A[MD:():void (c)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x002f|0x002f: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final T extends java.lang.Comparable\<? super T\> kotlin.collections.CollectionsKt___CollectionsKt.minOrThrow((r4 I:java.lang.Iterable\<? extends T extends java.lang.Comparable\<? super T\>\> A[D('$this$min' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:44:0x0025 \-\> B:41:0x0015, BACK_EDGE: B:45:0x0027 \-\> B:41:0x0015, CROSS_EDGE: B:48:0x002f \-\> B:37:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x0028: r2 'e' Ljava\/lang\/Comparable;\l  0x0015\-0x002a: r1 'min' Ljava\/lang\/Comparable;\l  0x0009\-0x002f: r0 'iterator' Ljava\/util\/Iterator;\l  \-1 \-0x002f: r4 '$this$min' Ljava\/lang\/Iterable;\lTYPE_VARS: [T extends java.lang.Comparable\<? super T\>]\lSIGNATURE: \<T::Ljava\/lang\/Comparable\<\-TT;\>;\>(Ljava\/lang\/Iterable\<+TT;\>;)TT;\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_47;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_50;
Node_43 -> Node_44;
Node_44 -> Node_49[style=dashed];
Node_44 -> Node_52;
Node_49 -> Node_45;
Node_45 -> Node_53;
Node_53 -> Node_51;
Node_51 -> Node_41;
Node_52 -> Node_51;
Node_50 -> Node_46;
Node_46 -> Node_37;
Node_47 -> Node_48;
Node_48 -> Node_37;
}

