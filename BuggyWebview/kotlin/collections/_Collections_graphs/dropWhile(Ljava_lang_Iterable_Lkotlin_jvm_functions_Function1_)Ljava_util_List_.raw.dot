digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.dropWhile(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_42 [shape=record,label="{42\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$dropWhile' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r7 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:748)\l0x000c: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:749)\l0x000e: INVOKE  (r2 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0011: INVOKE  (r3 I:java.util.Iterator) = (r6 I:java.lang.Iterable A[D('$this$dropWhile' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:750)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0015|LOOP_START\lLOOP:0: B:45:0x0015\-\>B:59:0x0015\l|0x0015: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0019|0x0019: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0036 \l}"];
Node_47 [shape=record,label="{47\:\ 0x001b|0x001b: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x001f|0x001f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('yielding' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0025  (LINE:751)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0025|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0025|0x0025: INVOKE  (r5 I:java.lang.Object) = \l  (r7 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)])\l  (r4 I:java.lang.Object A[D('item' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:753)\l0x0029: CHECK_CAST (r5 I:java.lang.Boolean) = (java.lang.Boolean) (r5 I:??[OBJECT, ARRAY]) \l0x002b: INVOKE  (r5 I:boolean) = (r5 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x002f|0x002f: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0015 \l}"];
Node_57 [shape=record,label="{57\:\ 0x0031|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x0031|0x0031: INVOKE  (r2 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r4 I:java.lang.Object A[D('item' java.lang.Object)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:754)\l0x0034: CONST  (r1 I:??[boolean, int, float, short, byte, char] A[D('yielding' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:755)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0015|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x0015|LOOP_END\lSYNTHETIC\lLOOP:0: B:45:0x0015\-\>B:59:0x0015\l}"];
Node_60 [shape=record,label="{60\:\ 0x0015|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x0021|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0021|0x0021: INVOKE  (r2 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r4 I:java.lang.Object A[D('item' java.lang.Object)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:752)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0015|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0036|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0036|0x0036: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('list' java.util.ArrayList)])  (LINE:757)\l0x0037: CHECK_CAST (r3 I:java.util.List) = (java.util.List) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0039|RETURN\l|0x0039: RETURN  (r3 I:java.util.List\<T\>) \l}"];
Node_43 [shape=record,label="{43\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.dropWhile((r6 I:java.lang.Iterable\<? extends T\> A[D('$this$dropWhile' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:49:0x0021 \-\> B:45:0x0015, BACK_EDGE: B:51:0x002f \-\> B:45:0x0015, BACK_EDGE: B:52:0x0031 \-\> B:45:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001f\-0x0035: r4 'item' Ljava\/lang\/Object;\l  0x000b\-0x0039: r0 '$i$f$dropWhile' I\l  0x000c\-0x0039: r1 'yielding' Z\l  0x0011\-0x0039: r2 'list' Ljava\/util\/ArrayList;\l  \-1 \-0x0039: r6 '$this$dropWhile' Ljava\/lang\/Iterable;\l  \-1 \-0x0039: r7 'predicate' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)Ljava\/util\/List\<TT;\>;\l}"];
MethodNode -> Node_42;Node_42 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_55;
Node_47 -> Node_48;
Node_48 -> Node_56;
Node_48 -> Node_58[style=dashed];
Node_56 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_57[style=dashed];
Node_51 -> Node_60;
Node_57 -> Node_52;
Node_52 -> Node_61;
Node_61 -> Node_59;
Node_59 -> Node_45;
Node_60 -> Node_59;
Node_58 -> Node_49;
Node_49 -> Node_62;
Node_62 -> Node_59;
Node_55 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_43;
}

