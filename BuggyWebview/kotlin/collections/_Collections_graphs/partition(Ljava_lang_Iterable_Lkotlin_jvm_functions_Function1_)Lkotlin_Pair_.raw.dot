digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.partition(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)Lkotlin\/Pair;" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$partition' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r7 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:3199)\l0x000d: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0010: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:3200)\l0x0012: INVOKE  (r2 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0015: INVOKE  (r3 I:java.util.Iterator) = (r6 I:java.lang.Iterable A[D('$this$partition' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:3201)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0019|LOOP_START\lLOOP:0: B:37:0x0019\-\>B:48:0x0019\l|0x0019: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x001d|0x001d: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0037 \l}"];
Node_39 [shape=record,label="{39\:\ 0x001f|0x001f: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0023: INVOKE  (r5 I:java.lang.Object) = \l  (r7 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)])\l  (r4 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:3202)\l0x0027: CHECK_CAST (r5 I:java.lang.Boolean) = (java.lang.Boolean) (r5 I:??[OBJECT, ARRAY]) \l0x0029: INVOKE  (r5 I:boolean) = (r5 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x002d|0x002d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0033 \l}"];
Node_45 [shape=record,label="{45\:\ 0x0033|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0033|0x0033: INVOKE  (r2 I:java.util.ArrayList A[D('second' java.util.ArrayList)]), (r4 I:java.lang.Object A[D('element' java.lang.Object)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:3205)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0019|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0019|LOOP_END\lSYNTHETIC\lLOOP:0: B:37:0x0019\-\>B:48:0x0019\l}"];
Node_47 [shape=record,label="{47\:\ 0x002f|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x002f|0x002f: INVOKE  (r1 I:java.util.ArrayList A[D('first' java.util.ArrayList)]), (r4 I:java.lang.Object A[D('element' java.lang.Object)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:3203)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0019|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0037|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0037|0x0037: NEW_INSTANCE  (r3 I:kotlin.Pair) =  kotlin.Pair  (LINE:3208)\l0x0039: INVOKE  \l  (r3 I:kotlin.Pair)\l  (r1 I:java.lang.Object A[D('first' java.util.ArrayList)])\l  (r2 I:java.lang.Object A[D('second' java.util.ArrayList)])\l type: DIRECT call: kotlin.Pair.\<init\>(java.lang.Object, java.lang.Object):void A[MD:(A, B):void (m)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x003c|RETURN\l|0x003c: RETURN  (r3 I:kotlin.Pair\<java.util.List\<T\>, java.util.List\<T\>\>) \l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.Pair\<java.util.List\<T\>, java.util.List\<T\>\> kotlin.collections.CollectionsKt___CollectionsKt.partition((r6 I:java.lang.Iterable\<? extends T\> A[D('$this$partition' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:41:0x002f \-\> B:37:0x0019, BACK_EDGE: B:42:0x0033 \-\> B:37:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0023\-0x0037: r4 'element' Ljava\/lang\/Object;\l  0x000b\-0x003c: r0 '$i$f$partition' I\l  0x0010\-0x003c: r1 'first' Ljava\/util\/ArrayList;\l  0x0015\-0x003c: r2 'second' Ljava\/util\/ArrayList;\l  \-1 \-0x003c: r6 '$this$partition' Ljava\/lang\/Iterable;\l  \-1 \-0x003c: r7 'predicate' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)Lkotlin\/Pair\<Ljava\/util\/List\<TT;\>;Ljava\/util\/List\<TT;\>;\>;\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_46;
Node_39 -> Node_40;
Node_40 -> Node_45;
Node_40 -> Node_47[style=dashed];
Node_45 -> Node_42;
Node_42 -> Node_49;
Node_49 -> Node_48;
Node_48 -> Node_37;
Node_47 -> Node_41;
Node_41 -> Node_50;
Node_50 -> Node_48;
Node_46 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_35;
}

