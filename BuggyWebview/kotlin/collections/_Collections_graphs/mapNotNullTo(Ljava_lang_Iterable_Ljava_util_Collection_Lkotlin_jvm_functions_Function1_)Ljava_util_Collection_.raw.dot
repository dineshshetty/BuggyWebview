digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.mapNotNullTo(Ljava\/lang\/Iterable;Ljava\/util\/Collection;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Collection;" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$mapNotNullTo' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r10 I:java.lang.Object A[D('destination' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x000c: INVOKE  (r11 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$mapNotNullTo' java.lang.Iterable)])  (LINE:1611)\l0x0011: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: INVOKE  (r3 I:java.util.Iterator) = (r1 I:java.lang.Iterable A[D('$this$forEach$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:3820)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0016|LOOP_START\lLOOP:0: B:35:0x0016\-\>B:45:0x0016\l|0x0016: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x001a|0x001a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x002f \l}"];
Node_37 [shape=record,label="{37\:\ 0x001c|0x001c: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0020: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) \l0x0021: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0022: INVOKE  (r7 I:java.lang.Object) = \l  (r11 I:kotlin.jvm.functions.Function1 A[D('transform' kotlin.jvm.functions.Function1)])\l  (r5 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:1611)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0026|0x0026: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0016 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0028|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0028|0x0028: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3708)\l0x0029: INVOKE  \l  (r10 I:java.util.Collection A[D('destination' java.util.Collection)])\l  (r7 I:java.lang.Object A[D('it' java.lang.Object)])\l type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:1611)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0016|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0016|LOOP_END\lSYNTHETIC\lLOOP:0: B:35:0x0016\-\>B:45:0x0016\l}"];
Node_46 [shape=record,label="{46\:\ 0x0016|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x002f|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x002f|RETURN\l|0x002f: RETURN  (r10 I:C extends java.util.Collection\<? super R\> A[D('destination' java.util.Collection)])  (LINE:1612)\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final C extends java.util.Collection\<? super R\> kotlin.collections.CollectionsKt___CollectionsKt.mapNotNullTo((r9 I:java.lang.Iterable\<? extends T\> A[D('$this$mapNotNullTo' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:C extends java.util.Collection\<? super R\> A[D('destination' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlin.jvm.functions.Function1\<? super T, ? extends R\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:39:0x0028 \-\> B:35:0x0016, BACK_EDGE: B:38:0x0026 \-\> B:35:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, C extends java.util.Collection\<? super R\>, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;C::Ljava\/util\/Collection\<\-TR;\>;\>(Ljava\/lang\/Iterable\<+TT;\>;TC;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)TC;\lDebug Info:\l  0x0028\-0x002c: r7 'it' Ljava\/lang\/Object;\l  0x0029\-0x002c: r8 '$i$a$\-let\-CollectionsKt___CollectionsKt$mapNotNullTo$1$1' I\l  0x0020\-0x002d: r4 'element$iv' Ljava\/lang\/Object;\l  0x0021\-0x002d: r5 'element' Ljava\/lang\/Object;\l  0x0022\-0x002d: r6 '$i$a$\-forEach\-CollectionsKt___CollectionsKt$mapNotNullTo$1' I\l  0x0011\-0x002f: r1 '$this$forEach$iv' Ljava\/lang\/Iterable;\l  0x0012\-0x002f: r2 '$i$f$forEach' I\l  0x0010\-0x002f: r0 '$i$f$mapNotNullTo' I\l  \-1 \-0x002f: r9 '$this$mapNotNullTo' Ljava\/lang\/Iterable;\l  \-1 \-0x002f: r10 'destination' Ljava\/util\/Collection;\l  \-1 \-0x002f: r11 'transform' Lkotlin\/jvm\/functions\/Function1;\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_44;
Node_37 -> Node_38;
Node_38 -> Node_43[style=dashed];
Node_38 -> Node_46;
Node_43 -> Node_39;
Node_39 -> Node_47;
Node_47 -> Node_45;
Node_45 -> Node_35;
Node_46 -> Node_45;
Node_44 -> Node_42;
Node_42 -> Node_33;
}

