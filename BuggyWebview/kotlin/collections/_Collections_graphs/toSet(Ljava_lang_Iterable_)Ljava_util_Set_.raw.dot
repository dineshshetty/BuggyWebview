digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.toSet(Ljava\/lang\/Iterable;)Ljava\/util\/Set;" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$toSet' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INSTANCE_OF  (r0 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('$this$toSet' java.lang.Iterable)]) java.util.Collection  (LINE:1344)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x004b \l}"];
Node_40 [shape=record,label="{40\:\ 0x0009|0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$toSet' java.lang.Iterable)])  (LINE:1345)\l0x000a: CHECK_CAST (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:??[OBJECT, ARRAY]) \l0x000c: INVOKE  (r0 I:int) = (r0 I:java.util.Collection) type: INTERFACE call: java.util.Collection.size():int A[MD:():int (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0010|0x0010: SWITCH  (r0 I:??)\l case 0: goto B:48:0x0046\l case 1: goto B:43:0x002c\l default: goto B:42:0x0013 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0013|0x0013: NEW_INSTANCE  (r0 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet  (LINE:1348)\l0x0015: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$toSet' java.lang.Iterable)]) \l0x0016: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x0018: INVOKE  (r1 I:int) = (r1 I:java.util.Collection) type: INTERFACE call: java.util.Collection.size():int A[MD:():int (c)]\l0x001c: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: kotlin.collections.MapsKt.mapCapacity(int):int A[MD:(int):int (m)]\l0x0020: INVOKE  (r0 I:java.util.LinkedHashSet), (r1 I:int) type: DIRECT call: java.util.LinkedHashSet.\<init\>(int):void A[MD:(int):void (c)]\l0x0023: CHECK_CAST (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:??[OBJECT, ARRAY]) \l0x0025: INVOKE  (r0 I:java.util.Collection) = (r2 I:java.lang.Iterable A[D('$this$toSet' java.lang.Iterable)]), (r0 I:java.util.Collection) type: STATIC call: kotlin.collections.CollectionsKt.toCollection(java.lang.Iterable, java.util.Collection):java.util.Collection A[MD:\<T, C extends java.util.Collection\<? super T\>\>:(java.lang.Iterable\<? extends T\>, C extends java.util.Collection\<? super T\>):C extends java.util.Collection\<? super T\> (m)]\l0x0029: CHECK_CAST (r0 I:java.util.Set) = (java.util.Set) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_52 [shape=record,label="{52\:\ ?|SYNTHETIC\lRETURN\l|0x004a: RETURN  (r0 I:java.util.Set\<T\>) A[SYNTHETIC] (LINE:1345)\l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x002c|0x002c: INSTANCE_OF  (r0 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('$this$toSet' java.lang.Iterable)]) java.util.List  (LINE:1347)\l}"];
Node_44 [shape=record,label="{44\:\ 0x002e|0x002e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0039 \l}"];
Node_45 [shape=record,label="{45\:\ 0x0030|0x0030: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$toSet' java.lang.Iterable)]) \l0x0031: CHECK_CAST (r0 I:java.util.List) = (java.util.List) (r0 I:??[OBJECT, ARRAY]) \l0x0033: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0034: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0041|0x0041: INVOKE  (r0 I:java.util.Set) = (r0 I:java.lang.Object) type: STATIC call: kotlin.collections.SetsKt.setOf(java.lang.Object):java.util.Set A[MD:\<T\>:(T):java.util.Set\<T\> (m)]\l}"];
Node_53 [shape=record,label="{53\:\ ?|SYNTHETIC\lRETURN\l|0x004a: RETURN  (r0 I:java.util.Set\<T\>) A[SYNTHETIC] (LINE:1345)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0039|0x0039: INVOKE  (r0 I:java.util.Iterator) = (r2 I:java.lang.Iterable A[D('$this$toSet' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)]\l0x003d: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0046|0x0046: INVOKE  (r0 I:java.util.Set) =  type: STATIC call: kotlin.collections.SetsKt.emptySet():java.util.Set A[MD:\<T\>:():java.util.Set\<T\> (m)] (LINE:1346)\l}"];
Node_49 [shape=record,label="{49\:\ 0x004a|RETURN\lORIG_RETURN\l|0x004a: RETURN  (r0 I:java.util.Set\<T\>)  (LINE:1345)\l}"];
Node_50 [shape=record,label="{50\:\ 0x004b|0x004b: NEW_INSTANCE  (r0 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet  (LINE:1351)\l0x004d: INVOKE  (r0 I:java.util.LinkedHashSet) type: DIRECT call: java.util.LinkedHashSet.\<init\>():void A[MD:():void (c)]\l0x0050: CHECK_CAST (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:??[OBJECT, ARRAY]) \l0x0052: INVOKE  (r0 I:java.util.Collection) = (r2 I:java.lang.Iterable A[D('$this$toSet' java.lang.Iterable)]), (r0 I:java.util.Collection) type: STATIC call: kotlin.collections.CollectionsKt.toCollection(java.lang.Iterable, java.util.Collection):java.util.Collection A[MD:\<T, C extends java.util.Collection\<? super T\>\>:(java.lang.Iterable\<? extends T\>, C extends java.util.Collection\<? super T\>):C extends java.util.Collection\<? super T\> (m)]\l0x0056: CHECK_CAST (r0 I:java.util.Set) = (java.util.Set) (r0 I:??[OBJECT, ARRAY]) \l0x0058: INVOKE  (r0 I:java.util.Set) = (r0 I:java.util.Set) type: STATIC call: kotlin.collections.SetsKt.optimizeReadOnlySet(java.util.Set):java.util.Set A[MD:\<T\>:(java.util.Set\<? extends T\>):java.util.Set\<T\> (m)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x005c|RETURN\l|0x005c: RETURN  (r0 I:java.util.Set\<T\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.Set\<T\> kotlin.collections.CollectionsKt___CollectionsKt.toSet((r2 I:java.lang.Iterable\<? extends T\> A[D('$this$toSet' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:47:0x0041 \-\> B:49:0x004a, CROSS_EDGE: B:46:0x0039 \-\> B:47:0x0041, CROSS_EDGE: B:48:0x0046 \-\> B:49:0x004a, CROSS_EDGE: B:51:0x005c \-\> B:37:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0065: r2 '$this$toSet' Ljava\/lang\/Iterable;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;)Ljava\/util\/Set\<TT;\>;\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_50;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_41 -> Node_43;
Node_41 -> Node_48;
Node_42 -> Node_52;
Node_52 -> Node_37;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_47;
Node_47 -> Node_53;
Node_53 -> Node_37;
Node_46 -> Node_47;
Node_48 -> Node_49;
Node_49 -> Node_37;
Node_50 -> Node_51;
Node_51 -> Node_37;
}

