digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.minus(Ljava\/lang\/Iterable;[Ljava\/lang\/Object;)Ljava\/util\/List;" {
Node_44 [shape=record,label="{44\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r10 I:java.lang.Object A[D('$this$minus' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0007: INVOKE  (r11 I:java.lang.Object A[D('elements' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: ARRAY_LENGTH  (r0 I:int) = (r11 I:??[] A[D('elements' java.lang.Object[])])  (LINE:3150)\l}"];
Node_47 [shape=record,label="{47\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x000f \l}"];
Node_48 [shape=record,label="{48\:\ 0x000d|0x000d: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0017 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0012|0x0012: INVOKE  (r0 I:java.util.List) = (r10 I:java.lang.Iterable A[D('$this$minus' java.lang.Iterable)]) type: STATIC call: kotlin.collections.CollectionsKt.toList(java.lang.Iterable):java.util.List A[MD:\<T\>:(java.lang.Iterable\<? extends T\>):java.util.List\<T\> (m)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:java.util.List\<T\>) \l}"];
Node_45 [shape=record,label="{45\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_53 [shape=record,label="{53\:\ 0x0017|0x0017: INVOKE  (r0 I:java.util.Collection) = (r11 I:java.lang.Object[] A[D('elements' java.lang.Object[])]) type: STATIC call: kotlin.collections.BrittleContainsOptimizationKt.convertToSetForSetOperation(java.lang.Object[]):java.util.Collection A[MD:\<T\>:(T[]):java.util.Collection\<T\> (m)] (LINE:3151)\l0x001b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('$this$minus' java.lang.Iterable)])  (LINE:3152)\l0x001c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001d: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:3848)\l0x001f: INVOKE  (r3 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0022: CHECK_CAST (r3 I:java.util.Collection) = (java.util.Collection) (r3 I:??[OBJECT, ARRAY]) \l0x0024: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$filterNot$iv' java.lang.Iterable)]) \l0x0025: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0026: INVOKE  (r6 I:java.util.Iterator) = (r4 I:java.lang.Iterable A[D('$this$filterNotTo$iv$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:3849)\l}"];
Node_54 [shape=record,label="{54\:\ 0x002a|LOOP_START\lLOOP:0: B:54:0x002a\-\>B:63:0x002a\l|0x002a: INVOKE  (r7 I:boolean) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x002e|0x002e: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x0040 \l}"];
Node_56 [shape=record,label="{56\:\ 0x0030|0x0030: INVOKE  (r7 I:java.lang.Object) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0034: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('element$iv$iv' java.lang.Object)]) \l0x0035: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0036: INVOKE  (r8 I:boolean A[D('it' java.lang.Object)]) = (r0 I:java.util.Collection A[D('other' java.util.Collection)]), (r8 I:java.lang.Object A[D('it' java.lang.Object)]) type: INTERFACE call: java.util.Collection.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:3152)\l}"];
Node_57 [shape=record,label="{57\:\ 0x003a|0x003a: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x002a \l}"];
Node_61 [shape=record,label="{61\:\ 0x003c|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x003c|0x003c: INVOKE  \l  (r3 I:java.util.Collection A[D('destination$iv$iv' java.util.Collection)])\l  (r7 I:java.lang.Object A[D('element$iv$iv' java.lang.Object)])\l type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_65 [shape=record,label="{65\:\ 0x002a|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x002a|LOOP_END\lSYNTHETIC\lLOOP:0: B:54:0x002a\-\>B:63:0x002a\l}"];
Node_64 [shape=record,label="{64\:\ 0x002a|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0040|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x0040|0x0041: CHECK_CAST (r3 I:java.util.List) = (java.util.List) (r3 I:??[OBJECT, ARRAY] A[D('destination$iv$iv' java.util.Collection)]) \l}"];
Node_60 [shape=record,label="{60\:\ 0x0044|RETURN\l|0x0044: RETURN  (r3 I:java.util.List\<T\>)  (LINE:3152)\l}"];
Node_49 [shape=record,label="{49\:\ 0x000f|0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.minus((r10 I:java.lang.Iterable\<? extends T\> A[D('$this$minus' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:T[] A[D('elements' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:57:0x003a \-\> B:54:0x002a, BACK_EDGE: B:58:0x003c \-\> B:54:0x002a, CROSS_EDGE: B:60:0x0044 \-\> B:45:?, CROSS_EDGE: B:49:0x000f \-\> B:50:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0035\-0x003a: r8 'it' Ljava\/lang\/Object;\l  0x0036\-0x003a: r9 '$i$a$\-filterNot\-CollectionsKt___CollectionsKt$minus$2' I\l  0x0034\-0x0040: r7 'element$iv$iv' Ljava\/lang\/Object;\l  0x0024\-0x0041: r3 'destination$iv$iv' Ljava\/util\/Collection;\l  0x0025\-0x0041: r4 '$this$filterNotTo$iv$iv' Ljava\/lang\/Iterable;\l  0x0026\-0x0041: r5 '$i$f$filterNotTo' I\l  0x001c\-0x0044: r1 '$this$filterNot$iv' Ljava\/lang\/Iterable;\l  0x001d\-0x0044: r2 '$i$f$filterNot' I\l  0x001b\-0x0044: r0 'other' Ljava\/util\/Collection;\l  \-1 \-0x0044: r10 '$this$minus' Ljava\/lang\/Iterable;\l  \-1 \-0x0044: r11 'elements' [Ljava\/lang\/Object;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;[TT;)Ljava\/util\/List\<TT;\>;\l}"];
MethodNode -> Node_44;Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_53;
Node_51 -> Node_52;
Node_52 -> Node_45;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_62;
Node_56 -> Node_57;
Node_57 -> Node_61[style=dashed];
Node_57 -> Node_64;
Node_61 -> Node_58;
Node_58 -> Node_65;
Node_65 -> Node_63;
Node_63 -> Node_54;
Node_64 -> Node_63;
Node_62 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_45;
Node_49 -> Node_50;
}

