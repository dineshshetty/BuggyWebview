digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.maxByOrNull(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"selector\")\ljava.util.Iterator r1 = r7.iterator()\l}"];
Node_37 [shape=record,label="{37\:\ 0x0013|if (r1.hasNext() != false) goto L5\l}"];
Node_38 [shape=record,label="{38\:\ 0x0015|RETURN\l|return null\l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0017|java.lang.Object r2 = r1.next()\l}"];
Node_41 [shape=record,label="{41\:\ 0x001f|if (r1.hasNext() != false) goto L8\l}"];
Node_42 [shape=record,label="{42\:\ 0x0021|RETURN\l|return r2\l}"];
Node_43 [shape=record,label="{43\:\ 0x0022|java.lang.Comparable r3 = r8.invoke(r2)\lr2 = r2\l}"];
Node_44 [shape=record,label="{44\:\ 0x0028|LOOP_START\lLOOP:0: B:44:0x0028\-\>B:48:0x003e\lPHI: r2 r3 \l  PHI: (r2v2 'maxElem' java.lang.Object) = (r2v8 'maxElem' java.lang.Object), (r2v9 'maxElem' java.lang.Object) binds: [B:43:0x0022, B:48:0x003e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v3 'maxValue' java.lang.Comparable) = (r3v2 'maxValue' java.lang.Comparable), (r3v4 'maxValue' java.lang.Comparable) binds: [B:43:0x0022, B:48:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Object r4 = r1.next()\ljava.lang.Comparable r5 = r8.invoke(r4)\lr2 = r2\l}"];
Node_45 [shape=record,label="{45\:\ 0x0036|if (r3.compareTo(r5) \>= 0) goto L12\l}"];
Node_46 [shape=record,label="{46\:\ 0x0038|r2 = r4\lr3 = r5\lr2 = (T) r2\l}"];
Node_47 [shape=record,label="{47\:\ 0x003a|PHI: r2 r3 \l  PHI: (r2v3 'maxElem' java.lang.Object) = (r2v10 'maxElem' java.lang.Object), (r2v11 'maxElem' java.lang.Object) binds: [B:45:0x0036, B:46:0x0038] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v4 'maxValue' java.lang.Comparable) = (r3v3 'maxValue' java.lang.Comparable), (r3v5 'maxValue' java.lang.Comparable) binds: [B:45:0x0036, B:46:0x0038] A[DONT_GENERATE, DONT_INLINE]\l|r2 = r2\l}"];
Node_48 [shape=record,label="{48\:\ 0x003e|LOOP_END\lLOOP:0: B:44:0x0028\-\>B:48:0x003e\l|if (r1.hasNext() != false) goto L9\l}"];
Node_50 [shape=record,label="{50\:\ 0x0040|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0040|RETURN\l|return (T) r2\l}"];
MethodNode[shape=record,label="{public static final T kotlin.collections.CollectionsKt___CollectionsKt.maxByOrNull((r7v0 java.lang.Iterable\<? extends T\> A[D('$this$maxByOrNull' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'selector' kotlin.jvm.functions.Function1\<? super T, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:42:0x0021 \-\> B:35:?, BACK_EDGE: B:48:0x003e \-\> B:44:0x0028, CROSS_EDGE: B:49:0x0040 \-\> B:35:?, CROSS_EDGE: B:45:0x0036 \-\> B:47:0x003a\lINLINE_NOT_NEEDED\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R::Ljava\/lang\/Comparable\<\-TR;\>;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)TT;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l \-\> Type inference failed for: r2v1, types: [T, java.lang.Object]\l DEBUG: \l \-\> Multi\-variable search result rejected for r4v0, resolved type: java.lang.Object\}\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_40;
Node_38 -> Node_35;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_35;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_44;
Node_48 -> Node_50[style=dashed];
Node_50 -> Node_49;
Node_49 -> Node_35;
}

