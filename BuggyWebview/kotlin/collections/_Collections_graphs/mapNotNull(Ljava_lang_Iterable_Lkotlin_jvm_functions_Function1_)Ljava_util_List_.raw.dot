digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.mapNotNull(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r12 I:java.lang.Object A[D('$this$mapNotNull' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r13 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:1603)\l0x000d: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0010: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x0012: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('$this$mapNotNull' java.lang.Iterable)]) \l0x0013: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$mapNotNullTo$iv' java.lang.Iterable)])  (LINE:3815)\l0x0015: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0016: INVOKE  (r6 I:java.util.Iterator) = (r4 I:java.lang.Iterable A[D('$this$forEach$iv$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:3816)\l}"];
Node_35 [shape=record,label="{35\:\ 0x001a|LOOP_START\lLOOP:0: B:35:0x001a\-\>B:45:0x001a\l|0x001a: INVOKE  (r7 I:boolean) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x001e|0x001e: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0032 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0020|0x0020: INVOKE  (r7 I:java.lang.Object) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0024: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('element$iv$iv' java.lang.Object)]) \l0x0025: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0026: INVOKE  (r10 I:java.lang.Object) = \l  (r13 I:kotlin.jvm.functions.Function1 A[D('transform' kotlin.jvm.functions.Function1)])\l  (r8 I:java.lang.Object A[D('element$iv' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:3815)\l}"];
Node_38 [shape=record,label="{38\:\ 0x002a|0x002a: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x001a \l}"];
Node_43 [shape=record,label="{43\:\ 0x002c|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x002c|0x002c: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3817)\l0x002d: INVOKE  \l  (r1 I:java.util.Collection A[D('destination$iv' java.util.Collection)])\l  (r10 I:java.lang.Object A[D('it$iv' java.lang.Object)])\l type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:3815)\l}"];
Node_47 [shape=record,label="{47\:\ 0x001a|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x001a|LOOP_END\lSYNTHETIC\lLOOP:0: B:35:0x001a\-\>B:45:0x001a\l}"];
Node_46 [shape=record,label="{46\:\ 0x001a|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0032|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0032|0x0034: CHECK_CAST (r1 I:java.util.List) = (java.util.List) (r1 I:??[OBJECT, ARRAY] A[D('destination$iv' java.util.Collection)]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0036|RETURN\l|0x0036: RETURN  (r1 I:java.util.List\<R\>)  (LINE:1603)\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.collections.CollectionsKt___CollectionsKt.mapNotNull((r12 I:java.lang.Iterable\<? extends T\> A[D('$this$mapNotNull' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:kotlin.jvm.functions.Function1\<? super T, ? extends R\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:39:0x002c \-\> B:35:0x001a, BACK_EDGE: B:38:0x002a \-\> B:35:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;+TR;\>;)Ljava\/util\/List\<TR;\>;\lDebug Info:\l  0x002c\-0x0030: r10 'it$iv' Ljava\/lang\/Object;\l  0x002d\-0x0030: r11 '$i$a$\-let\-CollectionsKt___CollectionsKt$mapNotNullTo$1$1$iv' I\l  0x0024\-0x0031: r7 'element$iv$iv' Ljava\/lang\/Object;\l  0x0025\-0x0031: r8 'element$iv' Ljava\/lang\/Object;\l  0x0026\-0x0031: r9 '$i$a$\-forEach\-CollectionsKt___CollectionsKt$mapNotNullTo$1$iv' I\l  0x0015\-0x0033: r4 '$this$forEach$iv$iv' Ljava\/lang\/Iterable;\l  0x0016\-0x0033: r5 '$i$f$forEach' I\l  0x0012\-0x0034: r1 'destination$iv' Ljava\/util\/Collection;\l  0x0013\-0x0034: r2 '$this$mapNotNullTo$iv' Ljava\/lang\/Iterable;\l  0x0014\-0x0034: r3 '$i$f$mapNotNullTo' I\l  0x000b\-0x0036: r0 '$i$f$mapNotNull' I\l  \-1 \-0x0036: r12 '$this$mapNotNull' Ljava\/lang\/Iterable;\l  \-1 \-0x0036: r13 'transform' Lkotlin\/jvm\/functions\/Function1;\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_44;
Node_37 -> Node_38;
Node_38 -> Node_43[style=dashed];
Node_38 -> Node_46;
Node_43 -> Node_39;
Node_39 -> Node_47;
Node_47 -> Node_45;
Node_45 -> Node_35;
Node_46 -> Node_45;
Node_44 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_33;
}

