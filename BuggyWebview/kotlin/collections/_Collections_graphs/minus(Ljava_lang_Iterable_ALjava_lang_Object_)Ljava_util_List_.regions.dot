digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.minus(Ljava\/lang\/Iterable;[Ljava\/lang\/Object;)Ljava\/util\/List;" {
subgraph cluster_Region_557172148 {
label = "R(2:1|(2:(1:6)|(3:8|(2:11|(1:14)(0))|20)))";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r11, \"elements\")\l}"];
subgraph cluster_Region_813151908 {
label = "R(2:(1:6)|(3:8|(2:11|(1:14)(0))|20))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1407419612 {
label = "IF [B:50:0x0010] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0010|PHI: r0 \l  PHI: (r0v4 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r11.length == 0) == true) goto L5\l}"];
subgraph cluster_Region_1647795386 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x0016|RETURN\l|return kotlin.collections.CollectionsKt.toList(r10)\l}"];
}
}
subgraph cluster_Region_833185521 {
label = "R(3:8|(2:11|(1:14)(0))|20)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0017|java.util.Collection java.util.Collection r0 = kotlin.collections.BrittleContainsOptimization.convertToSetForSetOperation(r11)\ljava.util.Collection java.util.Collection r3 = new java.util.ArrayList()\ljava.util.Iterator r6 = r10.iterator()\l\l}"];
subgraph cluster_LoopRegion_1839213869 {
label = "LOOP:0: (2:11|(1:14)(0))";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x002e|java.lang.Object \lif (r6.hasNext() != false) goto L11\l}"];
subgraph cluster_Region_1617913003 {
label = "R(2:11|(1:14)(0))";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x0030|java.lang.Object r7 = r6.next()\l}"];
subgraph cluster_IfRegion_1270081473 {
label = "IF [B:57:0x003a] THEN: R(1:14) ELSE: R(0)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x003a|if (r0.contains(r7) == false) goto L13\l}"];
subgraph cluster_Region_1118080631 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x003c|r3.add(r7)\l}"];
}
subgraph cluster_Region_795203870 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_60 [shape=record,label="{60\:\ 0x0044|RETURN\l|return (java.util.List) r3\l}"];
}
}
}
Node_44 [shape=record,color=red,label="{44\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x000b}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x000d}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0012}"];
Node_45 [shape=record,color=red,label="{45\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x002a|LOOP_START\lLOOP:0: B:54:0x002a\-\>B:63:0x002a\l}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x003c|SYNTHETIC\l}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x002a|SYNTHETIC\l}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x002a|LOOP_END\lSYNTHETIC\lLOOP:0: B:54:0x002a\-\>B:63:0x002a\l}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x002a|SYNTHETIC\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x0040|SYNTHETIC\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x0040}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x000f}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.minus((r10v0 java.lang.Iterable\<? extends T\> A[D('$this$minus' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'elements' T[] A[D('elements' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:57:0x003a \-\> B:54:0x002a, BACK_EDGE: B:58:0x003c \-\> B:54:0x002a, CROSS_EDGE: B:60:0x0044 \-\> B:45:?, CROSS_EDGE: B:49:0x000f \-\> B:50:0x0010\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;[TT;)Ljava\/util\/List\<TT;\>;\l}"];
MethodNode -> Node_44;Node_46 -> Node_47;
Node_50 -> Node_51;
Node_50 -> Node_53[style=dashed];
Node_52 -> Node_45;
Node_53 -> Node_54;
Node_55 -> Node_56;
Node_55 -> Node_62[style=dashed];
Node_56 -> Node_57;
Node_57 -> Node_61;
Node_57 -> Node_64[style=dashed];
Node_58 -> Node_65;
Node_60 -> Node_45;
Node_44 -> Node_46;
Node_47 -> Node_48;
Node_47 -> Node_49;
Node_48 -> Node_50;
Node_51 -> Node_52;
Node_54 -> Node_55;
Node_61 -> Node_58;
Node_65 -> Node_63;
Node_63 -> Node_54;
Node_64 -> Node_63;
Node_62 -> Node_59;
Node_59 -> Node_60;
Node_49 -> Node_50;
}

