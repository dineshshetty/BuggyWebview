digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.single(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1742584719 {
label = "R(3:1|(2:4|(1:(2:(1:13)|(1:8)))(0))|(2:(1:20)|(1:18)))";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"predicate\")\lT r1 = null\lboolean r2 = false\ljava.util.Iterator r3 = r6.iterator()\l\l}"];
subgraph cluster_LoopRegion_538373552 {
label = "LOOP:0: (2:4|(1:(2:(1:13)|(1:8)))(0))";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0015|java.lang.Object \lif (r3.hasNext() != false) goto L4\l}"];
subgraph cluster_Region_941938331 {
label = "R(2:4|(1:(2:(1:13)|(1:8)))(0))";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x0017|java.lang.Object r4 = r3.next()\l}"];
subgraph cluster_IfRegion_631738086 {
label = "IF [B:48:0x0025] THEN: R(1:(2:(1:13)|(1:8))) ELSE: R(0)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x0025|if (r7.invoke(r4).booleanValue() != false) goto L6\l}"];
subgraph cluster_Region_1500762440 {
label = "R(1:(2:(1:13)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1319095483 {
label = "R(2:(1:13)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1841223589 {
label = "IF [B:49:0x0027] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0027|if (r2 != false) goto L11\l}"];
subgraph cluster_Region_1351699453 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x0033|throw new java.lang.IllegalArgumentException(\"Collection contains more than one matching element.\")\l}"];
}
}
subgraph cluster_Region_382610433 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0029|r1 = r4\lr2 = true\l}"];
}
}
}
subgraph cluster_Region_1230516151 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
subgraph cluster_Region_241585733 {
label = "R(2:(1:20)|(1:18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1739921502 {
label = "IF [B:53:0x0034] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0034|if (r2 == false) goto L19\l}"];
subgraph cluster_Region_1051504934 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x003e|throw new java.util.NoSuchElementException(\"Collection contains no element matching the predicate.\")\l}"];
}
}
subgraph cluster_Region_1631516525 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0036|RETURN\l|return r1\l}"];
}
}
}
Node_42 [shape=record,color=red,label="{42\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0011|LOOP_START\lLOOP:0: B:45:0x0011\-\>B:60:0x0011\lPHI: r1 r2 \l  PHI: (r1v1 T) = (r1v0 T), (r1v2 T) binds: [B:44:0x0000, B:60:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'found' boolean) = (r2v0 'found' boolean), (r2v2 'found' boolean) binds: [B:44:0x0000, B:60:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x0027|SYNTHETIC\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x0011|SYNTHETIC\l}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x0011|LOOP_END\lSYNTHETIC\lLOOP:0: B:45:0x0011\-\>B:60:0x0011\lPHI: r1 r2 \l  PHI: (r1v2 T) = (r1v1 T), (r1v3 T) binds: [B:61:0x0011, B:62:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 'found' boolean) = (r2v1 'found' boolean), (r2v3 'found' boolean) binds: [B:61:0x0011, B:62:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x002c|SYNTHETIC\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x002c}"];
Node_43 [shape=record,color=red,label="{43\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x0011|SYNTHETIC\l}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x0034|SYNTHETIC\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x0037}"];
MethodNode[shape=record,label="{public static final T kotlin.collections.CollectionsKt___CollectionsKt.single((r6v0 java.lang.Iterable\<? extends T\> A[D('$this$single' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'predicate' kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:48:0x0025 \-\> B:45:0x0011, BACK_EDGE: B:50:0x0029 \-\> B:45:0x0011, CROSS_EDGE: B:54:0x0036 \-\> B:43:?, CROSS_EDGE: B:56:0x003e \-\> B:43:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;)TT;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r4v2, resolved type: java.lang.Object\}\l}"];
MethodNode -> Node_42;Node_44 -> Node_45;
Node_46 -> Node_47;
Node_46 -> Node_58[style=dashed];
Node_47 -> Node_48;
Node_48 -> Node_57;
Node_48 -> Node_61[style=dashed];
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_59;
Node_52 -> Node_43;
Node_50 -> Node_62;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_56 -> Node_43;
Node_54 -> Node_43;
Node_42 -> Node_44;
Node_45 -> Node_46;
Node_57 -> Node_49;
Node_62 -> Node_60;
Node_60 -> Node_45;
Node_59 -> Node_51;
Node_51 -> Node_52;
Node_61 -> Node_60;
Node_58 -> Node_53;
Node_55 -> Node_56;
}

