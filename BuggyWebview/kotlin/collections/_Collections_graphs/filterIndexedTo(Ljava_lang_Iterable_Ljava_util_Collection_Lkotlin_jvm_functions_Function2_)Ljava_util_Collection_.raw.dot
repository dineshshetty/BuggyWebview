digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.filterIndexedTo(Ljava\/lang\/Iterable;Ljava\/util\/Collection;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/Collection;" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r10 I:java.lang.Object A[D('$this$filterIndexedTo' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r11 I:java.lang.Object A[D('destination' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x000c: INVOKE  (r12 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function2)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('$this$filterIndexedTo' java.lang.Iterable)])  (LINE:788)\l0x0011: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3718)\l0x0013: INVOKE  (r4 I:java.util.Iterator) = (r1 I:java.lang.Iterable A[D('$this$forEachIndexed$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:3719)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0017|LOOP_START\lLOOP:0: B:37:0x0017\-\>B:45:0x003d\l|0x0017: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x001b|0x001b: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0040 \l}"];
Node_39 [shape=record,label="{39\:\ 0x001d|0x001d: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0021: ARITH  (r6 I:int) = (r3 I:int A[D('index$iv' int)]) + (1 int) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0023|0x0023: IF  (r3 I:??[int, byte, short, char] A[D('index$iv' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:42:0x0028 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0025|0x0025: INVOKE   type: STATIC call: kotlin.collections.CollectionsKt.throwIndexOverflow():void A[MD:():void (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0028|0x0028: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('item$iv' java.lang.Object)]) \l0x0029: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002a: INVOKE  (r9 I:java.lang.Integer) = (r3 I:int A[D('index' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:789)\l0x002e: INVOKE  (r9 I:java.lang.Object) = \l  (r12 I:kotlin.jvm.functions.Function2 A[D('predicate' kotlin.jvm.functions.Function2)])\l  (r9 I:java.lang.Object)\l  (r7 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2):R (m)]\l0x0032: CHECK_CAST (r9 I:java.lang.Boolean) = (java.lang.Boolean) (r9 I:??[OBJECT, ARRAY]) \l0x0034: INVOKE  (r9 I:boolean) = (r9 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0038|0x0038: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x003d \l}"];
Node_44 [shape=record,label="{44\:\ 0x003a|0x003a: INVOKE  \l  (r11 I:java.util.Collection A[D('destination' java.util.Collection)])\l  (r7 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x003d|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x003d|LOOP_END\lLOOP:0: B:37:0x0017\-\>B:45:0x003d\l|0x003d: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index$iv' int)])  (LINE:790)\l}"];
Node_50 [shape=record,label="{50\:\ 0x003d|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0040|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0040|RETURN\l|0x0040: RETURN  (r11 I:C extends java.util.Collection\<? super T\> A[D('destination' java.util.Collection)])  (LINE:791)\l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final C extends java.util.Collection\<? super T\> kotlin.collections.CollectionsKt___CollectionsKt.filterIndexedTo((r10 I:java.lang.Iterable\<? extends T\> A[D('$this$filterIndexedTo' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:C extends java.util.Collection\<? super T\> A[D('destination' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:45:0x003d \-\> B:37:0x0017, CROSS_EDGE: B:43:0x0038 \-\> B:45:0x003d, CROSS_EDGE: B:40:0x0023 \-\> B:42:0x0028\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0023: r3 'index$iv' I\l  0x0028\-0x003e: r3 'index' I\l  0x0021\-0x003e: r5 'item$iv' Ljava\/lang\/Object;\l  0x0029\-0x003e: r7 'element' Ljava\/lang\/Object;\l  0x002a\-0x003e: r8 '$i$a$\-forEachIndexed\-CollectionsKt___CollectionsKt$filterIndexedTo$1' I\l  0x0023\-0x003f: r6 'index$iv' I\l  0x0011\-0x0040: r1 '$this$forEachIndexed$iv' Ljava\/lang\/Iterable;\l  0x0012\-0x0040: r2 '$i$f$forEachIndexed' I\l  0x003f\-0x0040: r3 'index$iv' I\l  0x0010\-0x0040: r0 '$i$f$filterIndexedTo' I\l  \-1 \-0x0040: r10 '$this$filterIndexedTo' Ljava\/lang\/Iterable;\l  \-1 \-0x0040: r11 'destination' Ljava\/util\/Collection;\l  \-1 \-0x0040: r12 'predicate' Lkotlin\/jvm\/functions\/Function2;\lTYPE_VARS: [C extends java.util.Collection\<? super T\>, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;C::Ljava\/util\/Collection\<\-TT;\>;\>(Ljava\/lang\/Iterable\<+TT;\>;TC;Lkotlin\/jvm\/functions\/Function2\<\-Ljava\/lang\/Integer;\-TT;Ljava\/lang\/Boolean;\>;)TC;\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_48;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_50;
Node_44 -> Node_49;
Node_49 -> Node_45;
Node_45 -> Node_37;
Node_50 -> Node_45;
Node_48 -> Node_47;
Node_47 -> Node_35;
}

