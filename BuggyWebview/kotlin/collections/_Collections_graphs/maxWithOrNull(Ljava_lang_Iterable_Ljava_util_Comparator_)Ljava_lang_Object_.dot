digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.maxWithOrNull(Ljava\/lang\/Iterable;Ljava\/util\/Comparator;)Ljava\/lang\/Object;" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"comparator\")\ljava.util.Iterator r0 = r4.iterator()\l}"];
Node_39 [shape=record,label="{39\:\ 0x0012|if (r0.hasNext() != false) goto L5\l}"];
Node_40 [shape=record,label="{40\:\ 0x0014|RETURN\l|return null\l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0016|java.lang.Object r1 = (T) r0.next()\l}"];
Node_43 [shape=record,label="{43\:\ 0x001a|LOOP_START\lLOOP:0: B:43:0x001a\-\>B:51:0x001a\lPHI: r1 \l  PHI: (r1v2 'max' java.lang.Object) = (r1v1 'max' java.lang.Object), (r1v3 'max' java.lang.Object) binds: [B:42:0x0016, B:51:0x001a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_44 [shape=record,label="{44\:\ 0x001e|if (r0.hasNext() == false) goto L15\l}"];
Node_45 [shape=record,label="{45\:\ 0x0020|java.lang.Object r2 = r0.next()\l}"];
Node_46 [shape=record,label="{46\:\ 0x0028|if (r5.compare(r1, r2) \>= 0) goto L14\l}"];
Node_49 [shape=record,label="{49\:\ 0x002a|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x002a|r1 = r2\lr1 = (T) r1\l}"];
Node_53 [shape=record,label="{53\:\ 0x001a|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x001a|LOOP_END\lSYNTHETIC\lLOOP:0: B:43:0x001a\-\>B:51:0x001a\lPHI: r1 \l  PHI: (r1v3 'max' java.lang.Object) = (r1v2 'max' java.lang.Object), (r1v4 'max' java.lang.Object) binds: [B:52:0x001a, B:53:0x001a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_52 [shape=record,label="{52\:\ 0x001a|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x002c|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x002c|RETURN\l|return (T) r1\l}"];
MethodNode[shape=record,label="{public static final T kotlin.collections.CollectionsKt___CollectionsKt.maxWithOrNull((r4v0 java.lang.Iterable\<? extends T\> A[D('$this$maxWithOrNull' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'comparator' java.util.Comparator\<? super T\> A[D('comparator' java.util.Comparator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:46:0x0028 \-\> B:43:0x001a, BACK_EDGE: B:47:0x002a \-\> B:43:0x001a, CROSS_EDGE: B:48:0x002c \-\> B:37:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;Ljava\/util\/Comparator\<\-TT;\>;)TT;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Multi\-variable search result rejected for r2v1, resolved type: java.lang.Object\l \-\> Type inference failed for r1v7. Raw type applied. Possible types: T, ? super T\}\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_37;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_50;
Node_45 -> Node_46;
Node_46 -> Node_49[style=dashed];
Node_46 -> Node_52;
Node_49 -> Node_47;
Node_47 -> Node_53;
Node_53 -> Node_51;
Node_51 -> Node_43;
Node_52 -> Node_51;
Node_50 -> Node_48;
Node_48 -> Node_37;
}

