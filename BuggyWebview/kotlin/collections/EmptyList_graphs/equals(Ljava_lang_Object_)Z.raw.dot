digraph "CFG forkotlin.collections.EmptyList.equals(Ljava\/lang\/Object;)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)]) java.util.List  (LINE:27)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000f \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)]) \l0x0005: CHECK_CAST (r0 I:java.util.List) = (java.util.List) (r0 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r0 I:boolean) = (r0 I:java.util.List) type: INTERFACE call: java.util.List.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000f \l}"];
Node_16 [shape=record,label="{16\:\ 0x000d|SYNTHETIC\lRETURN\l|0x000d: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0010: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|RETURN\lORIG_RETURN\l|0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlin.collections.EmptyList.equals((r1 'this' I:kotlin.collections.EmptyList A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Object A[D('other' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:17:0x000f \-\> B:18:0x0010, CROSS_EDGE: B:13:0x0002 \-\> B:17:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0010: r2 'other' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Collection.equals(java.lang.Object):boolean\}]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

