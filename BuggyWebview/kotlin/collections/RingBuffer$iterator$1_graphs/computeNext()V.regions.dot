digraph "CFG forkotlin.collections.RingBuffer$iterator$1.computeNext()V" {
subgraph cluster_Region_1580730275 {
label = "R(1:(2:(2:3|4)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1552289025 {
label = "R(2:(2:3|4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1223417977 {
label = "IF [B:3:0x0002] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r6.count == 0) goto L3\l}"];
subgraph cluster_Region_1235616586 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0004|done()\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_566667255 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0008|setNext(kotlin.collections.RingBuffer.access$getBuffer$p(r6.this$0)[r6.index])\lkotlin.collections.RingBuffer\<T\> kotlin.collections.RingBuffer r0 = r6.this$0\lint int r1 = r6.index\lr6.index = (r1 + 1) % kotlin.collections.RingBuffer.access$getCapacity$p(r0)\lr6.count\-\-\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x002a|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{protected void kotlin.collections.RingBuffer$iterator$1.computeNext((r6v0 'this' kotlin.collections.RingBuffer$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0008 \-\> B:6:0x002a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlin.collections.AbstractIterator.computeNext():void]\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_6 -> Node_1;
}

