digraph "CFG forkotlin.collections.RingBuffer$iterator$1.computeNext()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r6.count != 0) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|done()\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|setNext(kotlin.collections.RingBuffer.access$getBuffer$p(r6.this$0)[r6.index])\lkotlin.collections.RingBuffer\<T\> r0 = r6.this$0\lint r1 = r6.index\lr6.index = (r1 + 1) % kotlin.collections.RingBuffer.access$getCapacity$p(r0)\lr6.count = r6.count + (\-1)\l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void kotlin.collections.RingBuffer$iterator$1.computeNext((r6v0 'this' kotlin.collections.RingBuffer$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0008 \-\> B:6:0x002a\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlin.collections.AbstractIterator.computeNext():void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

