digraph "CFG forkotlin.collections.MutableMapWithDefaultImpl.getOrImplicitDefault(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r0 I:java.util.Map) = (r5 I:kotlin.collections.MutableMapWithDefaultImpl) type: VIRTUAL call: kotlin.collections.MutableMapWithDefaultImpl.getMap():java.util.Map A[MD:():java.util.Map\<K, V\> (m)] (LINE:101)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: INVOKE  (r2 I:java.lang.Object) = \l  (r0 I:java.util.Map A[D('$this$getOrElseNullable$iv' java.util.Map)])\l  (r6 I:java.lang.Object A[D('key' java.lang.Object)])\l type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:105)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|0x0009: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value$iv' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:?  (LINE:106)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000b|0x000b: INVOKE  (r3 I:boolean) = \l  (r0 I:java.util.Map A[D('$this$getOrElseNullable$iv' java.util.Map)])\l  (r6 I:java.lang.Object A[D('key' java.lang.Object)])\l type: INTERFACE call: java.util.Map.containsKey(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|0x000f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|0x0011: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:107)\l0x0012: IGET  (r4 I:kotlin.jvm.functions.Function1\<K, V\>) = (r5 I:kotlin.collections.MutableMapWithDefaultImpl) kotlin.collections.MutableMapWithDefaultImpl.default kotlin.jvm.functions.Function1  (LINE:101)\l0x0014: INVOKE  (r3 I:java.lang.Object A[D('$i$a$\-getOrElseNullable\-MutableMapWithDefaultImpl$getOrImplicitDefault$1' int)]) = (r4 I:kotlin.jvm.functions.Function1), (r6 I:java.lang.Object A[D('key' java.lang.Object)]) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0018: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('value$iv' java.lang.Object)]) = (r3 I:??[OBJECT, ARRAY] A[D('$i$a$\-getOrElseNullable\-MutableMapWithDefaultImpl$getOrImplicitDefault$1' int)]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x001b|RETURN\lORIG_RETURN\l|0x001b: RETURN  (r2 I:V A[D('value$iv' java.lang.Object)])  (LINE:101)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x001b: RETURN  (r2 I:V A[D('value$iv' java.lang.Object)]) A[SYNTHETIC] (LINE:101)\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|0x001b: RETURN  (r2 I:V A[D('value$iv' java.lang.Object)]) A[SYNTHETIC] (LINE:101)\l}"];
MethodNode[shape=record,label="{public V kotlin.collections.MutableMapWithDefaultImpl.getOrImplicitDefault((r5 'this' I:kotlin.collections.MutableMapWithDefaultImpl\<K, V\> A[IMMUTABLE_TYPE, THIS]), (r6 I:K A[D('key' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x000f \-\> B:19:0x001b, CROSS_EDGE: B:14:0x0009 \-\> B:19:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: (TK;)TV;\lDebug Info:\l  0x0012\-0x0019: r3 '$i$a$\-getOrElseNullable\-MutableMapWithDefaultImpl$getOrImplicitDefault$1' I\l  0x0004\-0x001b: r0 '$this$getOrElseNullable$iv' Ljava\/util\/Map;\l  0x0005\-0x001b: r1 '$i$f$getOrElseNullable' I\l  0x0009\-0x001b: r2 'value$iv' Ljava\/lang\/Object;\l  \-1 \-0x001b: r6 'key' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlin.collections.MapWithDefault.getOrImplicitDefault(K):V]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_19;
Node_19 -> Node_12;
Node_21 -> Node_12;
Node_20 -> Node_12;
}

