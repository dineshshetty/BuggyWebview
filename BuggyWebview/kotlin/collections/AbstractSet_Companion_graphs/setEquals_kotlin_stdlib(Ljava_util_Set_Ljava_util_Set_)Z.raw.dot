digraph "CFG forkotlin.collections.AbstractSet.Companion.setEquals$kotlin_stdlib(Ljava\/util\/Set;Ljava\/util\/Set;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"c\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('c' java.util.Set)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"other\" \l0x0007: INVOKE  (r4 I:java.lang.Object A[D('other' java.util.Set)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:int) = (r3 I:java.util.Set A[D('c' java.util.Set)]) type: INTERFACE call: java.util.Set.size():int A[MD:():int (c)] (LINE:43)\l0x000e: INVOKE  (r1 I:int) = (r4 I:java.util.Set A[D('other' java.util.Set)]) type: INTERFACE call: java.util.Set.size():int A[MD:():int (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|RETURN\l|0x0014: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('c' java.util.Set)])  (LINE:44)\l0x0017: CHECK_CAST (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:??[OBJECT, ARRAY]) \l0x0019: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('other' java.util.Set)]) \l0x001a: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x001c: INVOKE  (r0 I:boolean) = (r0 I:java.util.Collection), (r1 I:java.util.Collection) type: INTERFACE call: java.util.Collection.containsAll(java.util.Collection):boolean A[MD:(java.util.Collection\<?\>):boolean (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|RETURN\l|0x0020: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public final boolean kotlin.collections.AbstractSet.Companion.setEquals$kotlin_stdlib((r2 'this' I:kotlin.collections.AbstractSet$Companion A[IMMUTABLE_TYPE, THIS]), (r3 I:java.util.Set\<?\> A[D('c' java.util.Set), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.util.Set\<?\> A[D('other' java.util.Set), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0020 \-\> B:1:?\lDebug Info:\l  \-1 \-0x0020: r3 'c' Ljava\/util\/Set;\l  \-1 \-0x0020: r4 'other' Ljava\/util\/Set;\lSIGNATURE: (Ljava\/util\/Set\<*\>;Ljava\/util\/Set\<*\>;)Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

