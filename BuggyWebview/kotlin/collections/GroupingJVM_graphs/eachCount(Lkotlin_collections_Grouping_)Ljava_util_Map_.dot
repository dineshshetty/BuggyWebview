digraph "CFG forkotlin.collections.GroupingKt__GroupingJVMKt.eachCount(Lkotlin\/collections\/Grouping;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r20, \"\<this\>\")\ljava.util.Map r0 = new java.util.LinkedHashMap()\lr2 = r20\ljava.util.Iterator r6 = r2.sourceIterator()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|LOOP_START\lLOOP:0: B:3:0x0017\-\>B:15:0x0044\lPHI: r2 \l  PHI: (r2v1 '$this$foldTo$iv' kotlin.collections.Grouping) = (r2v0 '$this$foldTo$iv' kotlin.collections.Grouping), (r2v9 '$this$foldTo$iv' kotlin.collections.Grouping) binds: [B:2:0x0000, B:15:0x0044] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|if (r6.hasNext() == false) goto L17\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|java.lang.Object r8 = r2.keyOf(r6.next())\ljava.lang.Object r9 = r0.get(r8)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|if (r9 != null) goto L16\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b}"];
Node_8 [shape=record,label="{8\:\ 0x002f|if (r0.containsKey(r8) != false) goto L16\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|r11 = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|PHI: r11 \l  PHI: (r11v1 'first$iv' boolean) = (r11v0 'first$iv' boolean), (r11v3 'first$iv' boolean) binds: [B:10:0x0033, B:9:0x0031] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|if (r11 == false) goto L14\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|kotlin.jvm.internal.Ref$IntRef r17 = new kotlin.jvm.internal.Ref.IntRef()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0044|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|LOOP_END\lLOOP:0: B:3:0x0017\-\>B:15:0x0044\lPHI: r17 \l  PHI: (r17v1 java.lang.Object) = (r17v0 java.lang.Object), (r17v3 java.lang.Object) binds: [B:23:0x0044, B:24:0x0044] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Ref$IntRef r10 = (kotlin.jvm.internal.Ref.IntRef) r17\lr18 = r2\lr10.element = r10.element + 1\lr0.put(r8, r10)\lr2 = r18\l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|r17 = r9\l}"];
Node_23 [shape=record,label="{23\:\ 0x0044|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|r11 = false\l}"];
Node_22 [shape=record,label="{22\:\ 0x0062|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0062|java.util.Iterator r1 = r0.entrySet().iterator()\l}"];
Node_17 [shape=record,label="{17\:\ 0x006f|LOOP_START\lLOOP:1: B:17:0x006f\-\>B:19:0x0075\l}"];
Node_18 [shape=record,label="{18\:\ 0x0073|if (r1.hasNext() == false) goto L22\l}"];
Node_19 [shape=record,label="{19\:\ 0x0075|LOOP_END\lLOOP:1: B:17:0x006f\-\>B:19:0x0075\l|java.util.Map$Entry r2 = (java.util.Map.Entry) r1.next()\lkotlin.jvm.internal.Intrinsics.checkNotNull(r2, \"null cannot be cast to non\-null type kotlin.collections.MutableMap.MutableEntry\<K of kotlin.collections.GroupingKt__GroupingJVMKt.mapValuesInPlace$lambda\-4, R of kotlin.collections.GroupingKt__GroupingJVMKt.mapValuesInPlace$lambda\-4\>\")\lkotlin.jvm.internal.TypeIntrinsics.asMutableMapEntry(r2).setValue(java.lang.Integer.valueOf(((kotlin.jvm.internal.Ref.IntRef) r2.getValue()).element))\l}"];
Node_25 [shape=record,label="{25\:\ 0x0096|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0096}"];
Node_21 [shape=record,label="{21\:\ 0x009a|RETURN\l|return kotlin.jvm.internal.TypeIntrinsics.asMutableMap(r0)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, java.lang.Integer\> kotlin.collections.GroupingKt__GroupingJVMKt.eachCount((r20v0 kotlin.collections.Grouping\<T, ? extends K\> A[D('$this$eachCount' kotlin.collections.Grouping), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:15:0x0044 \-\> B:3:0x0017, CROSS_EDGE: B:14:0x0042 \-\> B:15:0x0044, CROSS_EDGE: B:10:0x0033 \-\> B:11:0x0034, CROSS_EDGE: B:6:0x0029 \-\> B:10:0x0033, BACK_EDGE: B:19:0x0075 \-\> B:17:0x006f\lTYPE_VARS: [T, K]\lSIGNATURE: \<T:Ljava\/lang\/Object;K:Ljava\/lang\/Object;\>(Lkotlin\/collections\/Grouping\<TT;+TK;\>;)Ljava\/util\/Map\<TK;Ljava\/lang\/Integer;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_22;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_24;
Node_24 -> Node_15;
Node_15 -> Node_3;
Node_14 -> Node_23;
Node_23 -> Node_15;
Node_10 -> Node_11;
Node_22 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_17;
Node_25 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_1;
}

