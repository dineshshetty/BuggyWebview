digraph "CFG forkotlin.collections.AbstractSet.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('other' java.lang.Object)]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0004  (LINE:23)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|RETURN\l|0x0002: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0003: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0004|0x0004: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)]) java.util.Set  (LINE:24)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x000a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: RETURN  (r0 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x000a|0x000a: SGET  (r0 I:kotlin.collections.AbstractSet$Companion) =  kotlin.collections.AbstractSet.Companion kotlin.collections.AbstractSet$Companion  (LINE:25)\l0x000c: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x000d: CHECK_CAST (r1 I:java.util.Set) = (java.util.Set) (r1 I:??[OBJECT, ARRAY]) \l0x000f: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)]) \l0x0010: CHECK_CAST (r2 I:java.util.Set) = (java.util.Set) (r2 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r0 I:boolean) = (r0 I:kotlin.collections.AbstractSet$Companion), (r1 I:java.util.Set), (r2 I:java.util.Set) type: VIRTUAL call: kotlin.collections.AbstractSet.Companion.setEquals$kotlin_stdlib(java.util.Set, java.util.Set):boolean A[MD:(java.util.Set\<?\>, java.util.Set\<?\>):boolean (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlin.collections.AbstractSet.equals((r3 'this' I:kotlin.collections.AbstractSet\<E\> A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.Object A[D('other' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:8:0x0009 \-\> B:1:?, CROSS_EDGE: B:10:0x0016 \-\> B:1:?\lDebug Info:\l  \-1 \-0x0016: r4 'other' Ljava\/lang\/Object;\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [ClspMth\{java.util.Collection.equals(java.lang.Object):boolean\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

