digraph "CFG forkotlin.collections.builders.SerializedMap.readExternal(Ljava\/io\/ObjectInput;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"input\" \l0x0002: INVOKE  (r11 I:java.lang.Object A[D('input' java.io.ObjectInput)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:byte) = (r11 I:java.io.ObjectInput A[D('input' java.io.ObjectInput)]) type: INTERFACE call: java.io.ObjectInput.readByte():byte A[MD:():byte throws java.io.IOException (c)] (LINE:656)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('flags' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x004f  (LINE:657)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: INVOKE  (r1 I:int) = (r11 I:java.io.ObjectInput A[D('input' java.io.ObjectInput)]) type: INTERFACE call: java.io.ObjectInput.readInt():int A[MD:():int throws java.io.IOException (c)] (LINE:660)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r1 I:??[int, byte, short, char] A[D('size' int)]) \< (0 ??[int, byte, short, char])  \-\> B:11:0x0033  (LINE:661)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: INVOKE  (r2 I:java.util.Map) = (r1 I:int A[D('size' int)]) type: STATIC call: kotlin.collections.MapsKt.createMapBuilder(int):java.util.Map A[MD:\<K, V\>:(int):java.util.Map\<K, V\> (m)] (LINE:662)\l0x0015: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x0016: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:663)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|LOOP_START\lLOOP:0: B:7:0x0018\-\>B:8:0x001a\l|0x0018: IF  (r5 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:15:0x002b \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|LOOP_END\lLOOP:0: B:7:0x0018\-\>B:8:0x001a\l|0x001a: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001b: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001c: INVOKE  (r8 I:java.lang.Object) = (r11 I:java.io.ObjectInput A[D('input' java.io.ObjectInput)]) type: INTERFACE call: java.io.ObjectInput.readObject():java.lang.Object A[MD:():java.lang.Object throws java.lang.ClassNotFoundException, java.io.IOException (c)] (LINE:664)\l0x0020: INVOKE  (r9 I:java.lang.Object) = (r11 I:java.io.ObjectInput A[D('input' java.io.ObjectInput)]) type: INTERFACE call: java.io.ObjectInput.readObject():java.lang.Object A[MD:():java.lang.Object throws java.lang.ClassNotFoundException, java.io.IOException (c)] (LINE:665)\l0x0024: INVOKE  \l  (r3 I:java.util.Map A[D('$this$readExternal_u24lambda_u2d1' java.util.Map)])\l  (r8 I:java.lang.Object A[D('key' java.lang.Object)])\l  (r9 I:java.lang.Object A[D('value' java.lang.Object)])\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)] (LINE:666)\l0x0028: ARITH  (r5 I:int) = (r5 I:int) + (1 int)  (LINE:663)\l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002c: INVOKE  (r2 I:java.util.Map) = (r2 I:java.util.Map) type: STATIC call: kotlin.collections.MapsKt.build(java.util.Map):java.util.Map A[MD:\<K, V\>:(java.util.Map\<K, V\>):java.util.Map\<K, V\> (m)] (LINE:662)\l0x0030: IPUT  (r2 I:java.util.Map\<?, ?\>), (r10 I:kotlin.collections.builders.SerializedMap) kotlin.collections.builders.SerializedMap.map java.util.Map \l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|RETURN\l|0x0032: RETURN    (LINE:669)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: NEW_INSTANCE  (r2 I:java.io.InvalidObjectException) =  java.io.InvalidObjectException  (LINE:661)\l0x0035: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0037: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x003a: CONST_STR  (r4 I:java.lang.String) =  \"Illegal size value: \" \l0x003c: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003f: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:int A[D('size' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0042: CONST  (r4 I:??[int, float, short, byte, char]) = (46 ??[int, float, short, byte, char]) \l0x0044: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0047: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004b: INVOKE  (r2 I:java.io.InvalidObjectException), (r3 I:java.lang.String) type: DIRECT call: java.io.InvalidObjectException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x004e|0x004e: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x004f|0x004f: NEW_INSTANCE  (r1 I:java.io.InvalidObjectException A[D('size' int)]) =  java.io.InvalidObjectException  (LINE:658)\l0x0051: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0053: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0056: CONST_STR  (r3 I:java.lang.String) =  \"Unsupported flags value: \" \l0x0058: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x005b: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:int A[D('flags' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x005e: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0062: INVOKE  (r1 I:java.io.InvalidObjectException), (r2 I:java.lang.String) type: DIRECT call: java.io.InvalidObjectException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0065|0x0065: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void kotlin.collections.builders.SerializedMap.readExternal((r10 'this' I:kotlin.collections.builders.SerializedMap A[IMMUTABLE_TYPE, THIS]), (r11 I:java.io.ObjectInput A[D('input' java.io.ObjectInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:8:0x001a \-\> B:7:0x0018, CROSS_EDGE: B:12:0x004e \-\> B:1:?, CROSS_EDGE: B:14:0x0065 \-\> B:1:?\lDebug Info:\l  0x001b\-0x0028: r6 'it' I\l  0x001c\-0x0028: r7 '$i$a$\-repeat\-SerializedMap$readExternal$1$1' I\l  0x0020\-0x0028: r8 'key' Ljava\/lang\/Object;\l  0x0024\-0x0028: r9 'value' Ljava\/lang\/Object;\l  0x0016\-0x002c: r3 '$this$readExternal_u24lambda_u2d1' Ljava\/util\/Map;\l  0x0017\-0x002c: r4 '$i$a$\-buildMap\-SerializedMap$readExternal$1' I\l  0x000f\-0x004f: r1 'size' I\l  0x0009\-0x0065: r0 'flags' I\l  \-1 \-0x0065: r11 'input' Ljava\/io\/ObjectInput;\lMETHOD_OVERRIDE: [ClspMth\{java.io.Externalizable.readExternal(java.io.ObjectInput):void throws java.lang.ClassNotFoundException, java.io.IOException\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_7;
Node_15 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_13 -> Node_14;
Node_14 -> Node_1;
}

