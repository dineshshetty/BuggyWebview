digraph "CFG forkotlin.collections.builders.SerializedMap.writeExternal(Ljava\/io\/ObjectOutput;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"output\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('output' java.io.ObjectOutput)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:647)\l0x0006: INVOKE  (r4 I:java.io.ObjectOutput A[D('output' java.io.ObjectOutput)]), (r0 I:int) type: INTERFACE call: java.io.ObjectOutput.writeByte(int):void A[MD:(int):void throws java.io.IOException (c)]\l0x0009: IGET  (r0 I:java.util.Map\<?, ?\>) = (r3 I:kotlin.collections.builders.SerializedMap) kotlin.collections.builders.SerializedMap.map java.util.Map  (LINE:648)\l0x000b: INVOKE  (r0 I:int) = (r0 I:java.util.Map) type: INTERFACE call: java.util.Map.size():int A[MD:():int (c)]\l0x000f: INVOKE  (r4 I:java.io.ObjectOutput A[D('output' java.io.ObjectOutput)]), (r0 I:int) type: INTERFACE call: java.io.ObjectOutput.writeInt(int):void A[MD:(int):void throws java.io.IOException (c)]\l0x0012: IGET  (r0 I:java.util.Map\<?, ?\>) = (r3 I:kotlin.collections.builders.SerializedMap) kotlin.collections.builders.SerializedMap.map java.util.Map  (LINE:649)\l0x0014: INVOKE  (r0 I:java.util.Set) = (r0 I:java.util.Map) type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)]\l0x0018: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|LOOP_START\lLOOP:0: B:3:0x001c\-\>B:5:0x0022\l|0x001c: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0037 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|LOOP_END\lLOOP:0: B:3:0x001c\-\>B:5:0x0022\l|0x0022: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0026: CHECK_CAST (r1 I:java.util.Map$Entry) = (java.util.Map$Entry) (r1 I:??[OBJECT, ARRAY]) \l0x0028: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry)]) type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)] (LINE:650)\l0x002c: INVOKE  (r4 I:java.io.ObjectOutput A[D('output' java.io.ObjectOutput)]), (r2 I:java.lang.Object) type: INTERFACE call: java.io.ObjectOutput.writeObject(java.lang.Object):void A[MD:(java.lang.Object):void throws java.io.IOException (c)]\l0x002f: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry)]) type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)] (LINE:651)\l0x0033: INVOKE  (r4 I:java.io.ObjectOutput A[D('output' java.io.ObjectOutput)]), (r2 I:java.lang.Object) type: INTERFACE call: java.io.ObjectOutput.writeObject(java.lang.Object):void A[MD:(java.lang.Object):void throws java.io.IOException (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x0037|RETURN\l|0x0037: RETURN    (LINE:653)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.collections.builders.SerializedMap.writeExternal((r3 'this' I:kotlin.collections.builders.SerializedMap A[IMMUTABLE_TYPE, THIS]), (r4 I:java.io.ObjectOutput A[D('output' java.io.ObjectOutput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:5:0x0022 \-\> B:3:0x001c\lDebug Info:\l  0x0028\-0x0036: r1 'entry' Ljava\/util\/Map$Entry;\l  \-1 \-0x0037: r4 'output' Ljava\/io\/ObjectOutput;\lMETHOD_OVERRIDE: [ClspMth\{java.io.Externalizable.writeExternal(java.io.ObjectOutput):void throws java.io.IOException\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_3;
Node_7 -> Node_6;
Node_6 -> Node_1;
}

