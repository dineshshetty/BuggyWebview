digraph "CFG forkotlin.collections.builders.MapBuilder.put(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r4 I:kotlin.collections.builders.MapBuilder) type: VIRTUAL call: kotlin.collections.builders.MapBuilder.checkIsMutable$kotlin_stdlib():void A[MD:():void (m)] (LINE:67)\l0x0003: INVOKE  (r0 I:int) = (r4 I:kotlin.collections.builders.MapBuilder), (r5 I:java.lang.Object A[D('key' java.lang.Object)]) type: VIRTUAL call: kotlin.collections.builders.MapBuilder.addKey$kotlin_stdlib(java.lang.Object):int A[MD:(K):int (m)] (LINE:68)\l0x0007: INVOKE  (r1 I:java.lang.Object[]) = (r4 I:kotlin.collections.builders.MapBuilder) type: DIRECT call: kotlin.collections.builders.MapBuilder.allocateValuesArray():java.lang.Object[] A[MD:():V[] (m)] (LINE:69)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000b|0x000b: IF  (r0 I:??[int, byte, short, char] A[D('index' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:14:0x0018  (LINE:70)\l}"];
Node_12 [shape=record,label="{12\:\ 0x000d|0x000d: NEG  (r2 I:int) = (r0 I:int A[D('index' int)])  (LINE:71)\l0x000e: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l0x0010: AGET  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('valuesArray' java.lang.Object[])]), (r2 I:??[int, short, byte, char]) \l0x0012: NEG  (r3 I:int) = (r0 I:int A[D('index' int)])  (LINE:72)\l0x0013: ARITH  (r3 I:int) = (r3 I:int) + (\-1 int) \l0x0015: APUT  \l  (r1 I:??[OBJECT, ARRAY][] A[D('valuesArray' java.lang.Object[])])\l  (r3 I:??[int, short, byte, char])\l  (r6 I:??[OBJECT, ARRAY] A[D('value' java.lang.Object)])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|RETURN\l|0x0017: RETURN  (r2 I:V A[D('oldValue' java.lang.Object)])  (LINE:73)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|0x0018: APUT  \l  (r1 I:??[OBJECT, ARRAY][] A[D('valuesArray' java.lang.Object[])])\l  (r0 I:??[int, short, byte, char] A[D('index' int)])\l  (r6 I:??[OBJECT, ARRAY] A[D('value' java.lang.Object)])\l  (LINE:75)\l0x001a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:76)\l}"];
Node_15 [shape=record,label="{15\:\ 0x001b|RETURN\l|0x001b: RETURN  (r2 I:V) \l}"];
MethodNode[shape=record,label="{public V kotlin.collections.builders.MapBuilder.put((r4 'this' I:kotlin.collections.builders.MapBuilder\<K, V\> A[IMMUTABLE_TYPE, THIS]), (r5 I:K A[D('key' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:V A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x001b \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: (TK;TV;)TV;\lDebug Info:\l  0x0012\-0x0018: r2 'oldValue' Ljava\/lang\/Object;\l  0x0007\-0x001b: r0 'index' I\l  0x000b\-0x001b: r1 'valuesArray' [Ljava\/lang\/Object;\l  \-1 \-0x001b: r5 'key' Ljava\/lang\/Object;\l  \-1 \-0x001b: r6 'value' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Map.put(K, V):V\}]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

