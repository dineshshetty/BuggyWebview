digraph "CFG forkotlin.collections.builders.MapBuilder.ensureCapacity(I)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|if (r4 \< 0) goto L22\l}"];
Node_27 [shape=record,label="{27\:\ 0x0002}"];
Node_28 [shape=record,label="{28\:\ 0x0006|if (r4 \<= getCapacity()) goto L17\l}"];
Node_29 [shape=record,label="{29\:\ 0x0008|int r0 = (getCapacity() * 3) \/ 2\l}"];
Node_30 [shape=record,label="{30\:\ 0x0010|if (r4 \<= r0) goto L7\l}"];
Node_31 [shape=record,label="{31\:\ 0x0012|r0 = r4\l}"];
Node_32 [shape=record,label="{32\:\ 0x0013|PHI: r0 \l  PHI: (r0v9 'newSize' int) = (r0v8 'newSize' int), (r0v10 'newSize' int) binds: [B:30:0x0010, B:31:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|r3.keysArray = (K[]) kotlin.collections.builders.ListBuilderKt.copyOfUninitializedElements(r3.keysArray, r0)\lV[] r1 = r3.valuesArray\l}"];
Node_33 [shape=record,label="{33\:\ 0x001d|if (r1 == null) goto L16\l}"];
Node_34 [shape=record,label="{34\:\ 0x001f|java.lang.Object[] r1 = (V[]) kotlin.collections.builders.ListBuilderKt.copyOfUninitializedElements(r1, r0)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0025|PHI: r1 \l  PHI: (r1v6 V[]) = (r1v5 V[]), (r1v11 V[]) binds: [B:35:0x0024, B:34:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|r3.valuesArray = r1\lint[] r1 = java.util.Arrays.copyOf(r3.presenceArray, r0)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, \"copyOf(this, newSize)\")\lr3.presenceArray = r1\lint r1 = kotlin.collections.builders.MapBuilder.Companion.computeHashSize(r0)\l}"];
Node_37 [shape=record,label="{37\:\ 0x003e|if (r1 \<= getHashSize()) goto L15\l}"];
Node_38 [shape=record,label="{38\:\ 0x0040|rehash(r1)\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_35 [shape=record,label="{35\:\ 0x0024|r1 = null\l}"];
Node_39 [shape=record,label="{39\:\ 0x0044}"];
Node_40 [shape=record,label="{40\:\ 0x0050|if (((r3.length + r4) \- size()) \<= getCapacity()) goto L21\l}"];
Node_41 [shape=record,label="{41\:\ 0x0052|rehash(getHashSize())\l}"];
Node_42 [shape=record,label="{42\:\ 0x0059|RETURN\lORIG_RETURN\l|return\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_43 [shape=record,label="{43\:\ 0x005a}"];
Node_44 [shape=record,label="{44\:\ 0x005f|throw new java.lang.OutOfMemoryError()\l}"];
MethodNode[shape=record,label="{private final void kotlin.collections.builders.MapBuilder.ensureCapacity((r3v0 'this' kotlin.collections.builders.MapBuilder\<K, V\> A[IMMUTABLE_TYPE, THIS]), (r4v0 'capacity' int A[D('capacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x003e \-\> B:42:0x0059, CROSS_EDGE: B:35:0x0024 \-\> B:36:0x0025, CROSS_EDGE: B:30:0x0010 \-\> B:32:0x0013, CROSS_EDGE: B:41:0x0052 \-\> B:42:0x0059, CROSS_EDGE: B:40:0x0050 \-\> B:42:0x0059, CROSS_EDGE: B:44:0x005f \-\> B:25:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_43;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_39;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_45;
Node_38 -> Node_46;
Node_46 -> Node_25;
Node_45 -> Node_25;
Node_35 -> Node_36;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_47;
Node_41 -> Node_42;
Node_42 -> Node_25;
Node_47 -> Node_25;
Node_43 -> Node_44;
Node_44 -> Node_25;
}

