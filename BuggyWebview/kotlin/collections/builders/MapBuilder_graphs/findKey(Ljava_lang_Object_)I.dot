digraph "CFG forkotlin.collections.builders.MapBuilder.findKey(Ljava\/lang\/Object;)I" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|int r0 = hash(r7)\lint r1 = r6.maxProbeDistance\l}"];
Node_29 [shape=record,label="{29\:\ 0x0006|LOOP_START\lLOOP:0: B:29:0x0006\-\>B:49:0x0006\lPHI: r0 r1 \l  PHI: (r0v1 'hash' int) = (r0v0 'hash' int), (r0v4 'hash' int) binds: [B:28:0x0000, B:49:0x0006] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'probesLeft' int) = (r1v0 'probesLeft' int), (r1v2 'probesLeft' int) binds: [B:28:0x0000, B:49:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|r2 = r6.hashArray[r0]\l}"];
Node_30 [shape=record,label="{30\:\ 0x000c|if (r2 != 0) goto L4\l}"];
Node_32 [shape=record,label="{32\:\ 0x000f|if (r2 \<= 0) goto L11\l}"];
Node_33 [shape=record,label="{33\:\ 0x0011}"];
Node_34 [shape=record,label="{34\:\ 0x001b|if (kotlin.jvm.internal.Intrinsics.areEqual(r6.keysArray[r2 + (\-1)], r7) == false) goto L11\l}"];
Node_46 [shape=record,label="{46\:\ 0x001d|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x001d}"];
Node_36 [shape=record,label="{36\:\ 0x001f|RETURN\l|return r2 + (\-1)\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0020|int r1 = r1 + (\-1)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0022|if (r1 \>= 0) goto L13\l}"];
Node_40 [shape=record,label="{40\:\ 0x0025|int r3 = r0 + (\-1)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0027|if (r0 != 0) goto L15\l}"];
Node_45 [shape=record,label="{45\:\ 0x0030|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0030|r0 = r3\l}"];
Node_50 [shape=record,label="{50\:\ 0x0006|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:29:0x0006\-\>B:49:0x0006\lPHI: r0 \l  PHI: (r0v4 'hash' int) = (r0v3 'hash' int), (r0v5 'hash' int) binds: [B:51:0x0006, B:50:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0029|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0029|int r0 = getHashSize() + (\-1)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0006|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0024|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0024|RETURN\l|return \-1\l}"];
Node_47 [shape=record,label="{47\:\ 0x000e|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x000e|RETURN\l|return \-1\l}"];
MethodNode[shape=record,label="{private final int kotlin.collections.builders.MapBuilder.findKey((r6v0 'this' kotlin.collections.builders.MapBuilder\<K, V\> A[IMMUTABLE_TYPE, THIS]), (r7v0 K A[D('key' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x001f \-\> B:27:?, CROSS_EDGE: B:39:0x0024 \-\> B:27:?, BACK_EDGE: B:42:0x0029 \-\> B:29:0x0006, BACK_EDGE: B:43:0x0030 \-\> B:29:0x0006, CROSS_EDGE: B:32:0x000f \-\> B:37:0x0020\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: (TK;)I\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_32;
Node_30 -> Node_47[style=dashed];
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_34;
Node_34 -> Node_37;
Node_34 -> Node_46[style=dashed];
Node_46 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_27;
Node_37 -> Node_38;
Node_38 -> Node_40;
Node_38 -> Node_44[style=dashed];
Node_40 -> Node_41;
Node_41 -> Node_45;
Node_41 -> Node_48[style=dashed];
Node_45 -> Node_43;
Node_43 -> Node_50;
Node_50 -> Node_49;
Node_49 -> Node_29;
Node_48 -> Node_42;
Node_42 -> Node_51;
Node_51 -> Node_49;
Node_44 -> Node_39;
Node_39 -> Node_27;
Node_47 -> Node_31;
Node_31 -> Node_27;
}

