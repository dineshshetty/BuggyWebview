digraph "CFG forkotlin.collections.builders.MapBuilder.toString()Ljava\/lang\/String;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:153)\l0x0002: INVOKE  (r1 I:int) = (r5 I:kotlin.collections.builders.MapBuilder) type: VIRTUAL call: kotlin.collections.builders.MapBuilder.size():int A[MD:():int (m)]\l0x0006: ARITH  (r1 I:int) = (r1 I:int) * (3 int) \l0x0008: ARITH  (r1 I:int) = (r1 I:int) + (2 int) \l0x000a: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) type: DIRECT call: java.lang.StringBuilder.\<init\>(int):void A[MD:(int):void (c)]\l0x000d: CONST_STR  (r1 I:java.lang.String) =  \"\{\"  (LINE:154)\l0x000f: INVOKE  (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:155)\l0x0013: INVOKE  (r2 I:kotlin.collections.builders.MapBuilder$EntriesItr) = (r5 I:kotlin.collections.builders.MapBuilder) type: VIRTUAL call: kotlin.collections.builders.MapBuilder.entriesIterator$kotlin_stdlib():kotlin.collections.builders.MapBuilder$EntriesItr A[MD:():kotlin.collections.builders.MapBuilder$EntriesItr\<K, V\> (m)] (LINE:156)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0017|LOOP_START\lLOOP:0: B:16:0x0017\-\>B:20:0x0024\l|0x0017: INVOKE  (r3 I:boolean) = (r2 I:kotlin.collections.builders.MapBuilder$EntriesItr A[D('it' kotlin.collections.builders.MapBuilder$EntriesItr)]) type: VIRTUAL call: kotlin.collections.builders.MapBuilder.EntriesItr.hasNext():boolean A[MD:():boolean (m)] (LINE:157)\l}"];
Node_17 [shape=record,label="{17\:\ 0x001b|0x001b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x002a \l}"];
Node_18 [shape=record,label="{18\:\ 0x001d|0x001d: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:25:0x0024  (LINE:158)\l}"];
Node_19 [shape=record,label="{19\:\ 0x001f|0x001f: CONST_STR  (r3 I:java.lang.String) =  \", \" \l0x0021: INVOKE  (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0024|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0024|LOOP_END\lLOOP:0: B:16:0x0017\-\>B:20:0x0024\l|0x0024: INVOKE  \l  (r2 I:kotlin.collections.builders.MapBuilder$EntriesItr A[D('it' kotlin.collections.builders.MapBuilder$EntriesItr)])\l  (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)])\l type: VIRTUAL call: kotlin.collections.builders.MapBuilder.EntriesItr.nextAppendString(java.lang.StringBuilder):void A[MD:(java.lang.StringBuilder):void (m)] (LINE:159)\l0x0027: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:160)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0024|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x002a|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x002a|0x002a: CONST_STR  (r3 I:java.lang.String) =  \"\}\"  (LINE:162)\l0x002c: INVOKE  (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002f: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)] (LINE:163)\l0x0033: CONST_STR  (r4 I:java.lang.String) =  \"sb.toString()\" \l0x0035: INVOKE  (r3 I:java.lang.Object), (r4 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0038|RETURN\l|0x0038: RETURN  (r3 I:java.lang.String) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.String kotlin.collections.builders.MapBuilder.toString((r5 'this' I:kotlin.collections.builders.MapBuilder\<K, V\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x0024 \-\> B:16:0x0017, CROSS_EDGE: B:18:0x001d \-\> B:20:0x0024\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x0038: r0 'sb' Ljava\/lang\/StringBuilder;\l  0x0013\-0x0038: r1 'i' I\l  0x0017\-0x0038: r2 'it' Lkotlin\/collections\/builders\/MapBuilder$EntriesItr;\lTYPE_VARS: [V, K]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_24;
Node_24 -> Node_20;
Node_20 -> Node_16;
Node_25 -> Node_20;
Node_23 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_14;
}

