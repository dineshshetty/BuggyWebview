digraph "CFG forkotlin.collections.builders.MapBuilder.putAllEntries(Ljava\/util\/Collection;)Z" {
subgraph cluster_Region_816371993 {
label = "R(1:(2:(1:3)|(3:5|(1:(1:11)(0))|16)))";
node [shape=record,color=blue];
subgraph cluster_Region_1686720656 {
label = "R(2:(1:3)|(3:5|(1:(1:11)(0))|16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_354799843 {
label = "IF [B:21:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0004|if (r4.isEmpty() == true) goto L3\l}"];
subgraph cluster_Region_1929832095 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0006|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_313200238 {
label = "R(3:5|(1:(1:11)(0))|16)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0008|ensureExtraCapacity(r4.size())\ljava.util.Iterator r0 = r4.iterator()\lboolean r1 = false\l\l}"];
subgraph cluster_LoopRegion_93358583 {
label = "LOOP:0: (1:(1:11)(0))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0018|java.lang.Object \lif (r0.hasNext() != false) goto L8\l}"];
subgraph cluster_Region_724784133 {
label = "R(1:(1:11)(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_279587656 {
label = "IF [B:28:0x0024] THEN: R(1:11) ELSE: R(0)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0024|if (putEntry(r2) != false) goto L10\l}"];
subgraph cluster_Region_218836010 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0026|r1 = true\l}"];
}
subgraph cluster_Region_1415321052 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_30 [shape=record,label="{30\:\ 0x0028|RETURN\l|return r1\l}"];
}
}
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0000}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0014|LOOP_START\lLOOP:0: B:25:0x0014\-\>B:33:0x0014\lPHI: r1 \l  PHI: (r1v1 'updated' boolean) = (r1v0 'updated' boolean), (r1v2 'updated' boolean) binds: [B:24:0x0008, B:33:0x0014] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x001a}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0026|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0014|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0014|LOOP_END\lSYNTHETIC\lLOOP:0: B:25:0x0014\-\>B:33:0x0014\lPHI: r1 \l  PHI: (r1v2 'updated' boolean) = (r1v1 'updated' boolean), (r1v3 'updated' boolean) binds: [B:34:0x0014, B:35:0x0014] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0014|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0028|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final boolean kotlin.collections.builders.MapBuilder.putAllEntries((r3v0 'this' kotlin.collections.builders.MapBuilder\<K, V\> A[IMMUTABLE_TYPE, THIS]), (r4v0 java.util.Collection\<? extends java.util.Map$Entry\<? extends K, ? extends V\>\> A[D('from' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0024 \-\> B:25:0x0014, BACK_EDGE: B:29:0x0026 \-\> B:25:0x0014, CROSS_EDGE: B:30:0x0028 \-\> B:19:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: (Ljava\/util\/Collection\<+Ljava\/util\/Map$Entry\<+TK;+TV;\>;\>;)Z\l}"];
MethodNode -> Node_18;Node_21 -> Node_22;
Node_21 -> Node_24[style=dashed];
Node_22 -> Node_19;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_26 -> Node_32[style=dashed];
Node_28 -> Node_31;
Node_28 -> Node_34[style=dashed];
Node_29 -> Node_35;
Node_30 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_31 -> Node_29;
Node_35 -> Node_33;
Node_33 -> Node_25;
Node_34 -> Node_33;
Node_32 -> Node_30;
}

