digraph "CFG forkotlin.collections.builders.MapBuilder.clear()V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: INVOKE  (r6 I:kotlin.collections.builders.MapBuilder) type: VIRTUAL call: kotlin.collections.builders.MapBuilder.checkIsMutable$kotlin_stdlib():void A[MD:():void (m)] (LINE:95)\l0x0003: NEW_INSTANCE  (r0 I:kotlin.ranges.IntRange) =  kotlin.ranges.IntRange  (LINE:97)\l0x0005: IGET  (r1 I:int) = (r6 I:kotlin.collections.builders.MapBuilder) kotlin.collections.builders.MapBuilder.length int \l0x0007: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x0009: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: INVOKE  (r0 I:kotlin.ranges.IntRange), (r2 I:int), (r1 I:int) type: DIRECT call: kotlin.ranges.IntRange.\<init\>(int, int):void A[MD:(int, int):void (m)]\l0x000d: INVOKE  (r0 I:kotlin.collections.IntIterator) = (r0 I:kotlin.ranges.IntRange) type: VIRTUAL call: kotlin.ranges.IntRange.iterator():kotlin.collections.IntIterator A[MD:():java.util.Iterator\<java.lang.Integer\> (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|LOOP_START\lLOOP:0: B:21:0x0011\-\>B:33:0x0011\l|0x0011: INVOKE  (r1 I:boolean) = (r0 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|0x0015: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0029 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|0x0017: INVOKE  (r1 I:int) = (r0 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.nextInt():int A[MD:():int (m)]\l0x001b: IGET  (r3 I:int[]) = (r6 I:kotlin.collections.builders.MapBuilder) kotlin.collections.builders.MapBuilder.presenceArray int[]  (LINE:98)\l0x001d: AGET  (r4 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][]), (r1 I:??[int, short, byte, char] A[D('i' int)]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|0x001f: IF  (r4 I:??[int, byte, short, char] A[D('hash' int)]) \< (0 ??[int, byte, short, char])  \-\> B:34:0x0011  (LINE:99)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0021|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|0x0021: IGET  (r5 I:int[]) = (r6 I:kotlin.collections.builders.MapBuilder) kotlin.collections.builders.MapBuilder.hashArray int[]  (LINE:100)\l0x0023: APUT  (r5 I:??[int, float][]), (r4 I:??[int, short, byte, char] A[D('hash' int)]), (r2 I:??[int, float, short, byte, char]) \l0x0025: CONST  (r5 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:101)\l0x0026: APUT  (r3 I:??[int, float][]), (r1 I:??[int, short, byte, char] A[D('i' int)]), (r5 I:??[int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0011|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0011|LOOP_END\lSYNTHETIC\lLOOP:0: B:21:0x0011\-\>B:33:0x0011\l}"];
Node_34 [shape=record,label="{34\:\ 0x0011|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0029|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0029|0x0029: IGET  (r0 I:K[]) = (r6 I:kotlin.collections.builders.MapBuilder) kotlin.collections.builders.MapBuilder.keysArray java.lang.Object[]  (LINE:104)\l0x002b: IGET  (r1 I:int) = (r6 I:kotlin.collections.builders.MapBuilder) kotlin.collections.builders.MapBuilder.length int \l0x002d: INVOKE  (r0 I:java.lang.Object[]), (r2 I:int), (r1 I:int) type: STATIC call: kotlin.collections.builders.ListBuilderKt.resetRange(java.lang.Object[], int, int):void A[MD:\<E\>:(E[], int, int):void (m)]\l0x0030: IGET  (r0 I:V[]) = (r6 I:kotlin.collections.builders.MapBuilder) kotlin.collections.builders.MapBuilder.valuesArray java.lang.Object[]  (LINE:105)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0032|0x0032: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0039 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0034|0x0034: IGET  (r1 I:int) = (r6 I:kotlin.collections.builders.MapBuilder) kotlin.collections.builders.MapBuilder.length int \l0x0036: INVOKE  (r0 I:java.lang.Object[]), (r2 I:int), (r1 I:int) type: STATIC call: kotlin.collections.builders.ListBuilderKt.resetRange(java.lang.Object[], int, int):void A[MD:\<E\>:(E[], int, int):void (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0039|0x0039: IPUT  (r2 I:int), (r6 I:kotlin.collections.builders.MapBuilder) kotlin.collections.builders.MapBuilder.size int  (LINE:106)\l0x003b: IPUT  (r2 I:int), (r6 I:kotlin.collections.builders.MapBuilder) kotlin.collections.builders.MapBuilder.length int  (LINE:107)\l}"];
Node_30 [shape=record,label="{30\:\ 0x003d|RETURN\l|0x003d: RETURN    (LINE:108)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.collections.builders.MapBuilder.clear((r6 'this' I:kotlin.collections.builders.MapBuilder\<K, V\> A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:24:0x001f \-\> B:21:0x0011, BACK_EDGE: B:25:0x0021 \-\> B:21:0x0011, CROSS_EDGE: B:27:0x0032 \-\> B:29:0x0039\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x0028: r1 'i' I\l  0x001f\-0x0028: r4 'hash' I\lTYPE_VARS: [V, K]\lMETHOD_OVERRIDE: [ClspMth\{java.util.Map.clear():void\}]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_31;
Node_23 -> Node_24;
Node_24 -> Node_32[style=dashed];
Node_24 -> Node_34;
Node_32 -> Node_25;
Node_25 -> Node_35;
Node_35 -> Node_33;
Node_33 -> Node_21;
Node_34 -> Node_33;
Node_31 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_19;
}

