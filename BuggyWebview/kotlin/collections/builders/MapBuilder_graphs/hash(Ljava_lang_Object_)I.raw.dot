digraph "CFG forkotlin.collections.builders.MapBuilder.hash(Ljava\/lang\/Object;)I" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('key' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0007  (LINE:202)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: INVOKE  (r0 I:int) = (r3 I:java.lang.Object A[D('key' java.lang.Object)]) type: VIRTUAL call: java.lang.Object.hashCode():int A[MD:():int (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|0x0008: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1640531527(0xffffffff9e3779b9, float:\-9.713111E\-21) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x000d: IGET  (r1 I:int) = (r2 I:kotlin.collections.builders.MapBuilder) kotlin.collections.builders.MapBuilder.hashShift int \l0x000f: ARITH  (r0 I:int) = (r0 I:int) \>\>\> (r1 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0007|0x0007: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private final int kotlin.collections.builders.MapBuilder.hash((r2 'this' I:kotlin.collections.builders.MapBuilder\<K, V\> A[IMMUTABLE_TYPE, THIS]), (r3 I:K A[D('key' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0007 \-\> B:12:0x0008\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0010: r3 'key' Ljava\/lang\/Object;\lTYPE_VARS: [V, K]\lSIGNATURE: (TK;)I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
Node_11 -> Node_12;
}

