digraph "CFG forkotlin.collections.builders.MapBuilder.EntriesItr.nextHashCode$kotlin_stdlib()I" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x000c|if (getIndex$kotlin_stdlib() \>= ((kotlin.collections.builders.MapBuilder) getMap$kotlin_stdlib()).length) goto L13\l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|int r0 = getIndex$kotlin_stdlib()\lsetIndex$kotlin_stdlib(r0 + 1)\lsetLastIndex$kotlin_stdlib(r0)\lr0 = ((kotlin.collections.builders.MapBuilder) getMap$kotlin_stdlib()).keysArray[getLastIndex$kotlin_stdlib()]\lr1 = 0\l}"];
Node_20 [shape=record,label="{20\:\ 0x0029|if (r0 == null) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x002b|int r0 = r0.hashCode()\l}"];
Node_23 [shape=record,label="{23\:\ 0x0031|PHI: r0 \l  PHI: (r0v7 int) = (r0v6 int), (r0v9 int) binds: [B:22:0x0030, B:21:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Object[] r2 = ((kotlin.collections.builders.MapBuilder) getMap$kotlin_stdlib()).valuesArray\lkotlin.jvm.internal.Intrinsics.checkNotNull(r2)\lr2 = r2[getLastIndex$kotlin_stdlib()]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0042|if (r2 == null) goto L9\l}"];
Node_25 [shape=record,label="{25\:\ 0x0044|int r1 = r2.hashCode()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0048|PHI: r1 \l  PHI: (r1v5 int) = (r1v4 int), (r1v6 int) binds: [B:24:0x0042, B:25:0x0044] A[DONT_GENERATE, DONT_INLINE]\l|r0 = r0 ^ r1\linitNext$kotlin_stdlib()\l}"];
Node_27 [shape=record,label="{27\:\ 0x004c|RETURN\l|return r0\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0030|r0 = 0\l}"];
Node_28 [shape=record,label="{28\:\ 0x004d}"];
Node_29 [shape=record,label="{29\:\ 0x0052|throw new java.util.NoSuchElementException()\l}"];
MethodNode[shape=record,label="{public final int kotlin.collections.builders.MapBuilder.EntriesItr.nextHashCode$kotlin_stdlib((r4v0 'this' kotlin.collections.builders.MapBuilder$EntriesItr\<K, V\> A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0042 \-\> B:26:0x0048, CROSS_EDGE: B:22:0x0030 \-\> B:23:0x0031, CROSS_EDGE: B:29:0x0052 \-\> B:16:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_28;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_22 -> Node_23;
Node_28 -> Node_29;
Node_29 -> Node_16;
}

