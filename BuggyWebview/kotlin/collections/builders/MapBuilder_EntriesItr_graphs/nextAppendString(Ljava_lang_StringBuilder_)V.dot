digraph "CFG forkotlin.collections.builders.MapBuilder.EntriesItr.nextAppendString(Ljava\/lang\/StringBuilder;)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"sb\")\l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|if (getIndex$kotlin_stdlib() \>= ((kotlin.collections.builders.MapBuilder) getMap$kotlin_stdlib()).length) goto L14\l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|int r0 = getIndex$kotlin_stdlib()\lsetIndex$kotlin_stdlib(r0 + 1)\lsetLastIndex$kotlin_stdlib(r0)\lr0 = ((kotlin.collections.builders.MapBuilder) getMap$kotlin_stdlib()).keysArray[getLastIndex$kotlin_stdlib()]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0037|if (kotlin.jvm.internal.Intrinsics.areEqual(r0, getMap$kotlin_stdlib()) == false) goto L13\l}"];
Node_22 [shape=record,label="{22\:\ 0x0039|r5.append(\"(this Map)\")\l}"];
Node_24 [shape=record,label="{24\:\ 0x0040|r5.append('=')\ljava.lang.Object[] r1 = ((kotlin.collections.builders.MapBuilder) getMap$kotlin_stdlib()).valuesArray\lkotlin.jvm.internal.Intrinsics.checkNotNull(r1)\lr1 = r1[getLastIndex$kotlin_stdlib()]\l}"];
Node_25 [shape=record,label="{25\:\ 0x005e|if (kotlin.jvm.internal.Intrinsics.areEqual(r1, getMap$kotlin_stdlib()) == false) goto L12\l}"];
Node_26 [shape=record,label="{26\:\ 0x0060|r5.append(\"(this Map)\")\l}"];
Node_28 [shape=record,label="{28\:\ 0x0067|initNext$kotlin_stdlib()\l}"];
Node_29 [shape=record,label="{29\:\ 0x006a|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0064|r5.append(r1)\l}"];
Node_23 [shape=record,label="{23\:\ 0x003d|r5.append(r0)\l}"];
Node_30 [shape=record,label="{30\:\ 0x006b}"];
Node_31 [shape=record,label="{31\:\ 0x0070|throw new java.util.NoSuchElementException()\l}"];
MethodNode[shape=record,label="{public final void kotlin.collections.builders.MapBuilder.EntriesItr.nextAppendString((r4v0 'this' kotlin.collections.builders.MapBuilder$EntriesItr\<K, V\> A[IMMUTABLE_TYPE, THIS]), (r5v0 'sb' java.lang.StringBuilder A[D('sb' java.lang.StringBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0064 \-\> B:28:0x0067, CROSS_EDGE: B:23:0x003d \-\> B:24:0x0040, CROSS_EDGE: B:31:0x0070 \-\> B:17:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_30;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_17;
Node_27 -> Node_28;
Node_23 -> Node_24;
Node_30 -> Node_31;
Node_31 -> Node_17;
}

