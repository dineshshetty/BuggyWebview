digraph "CFG forkotlin.collections.builders.SerializedCollection.readExternal(Ljava\/io\/ObjectInput;)V" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"input\" \l0x0002: INVOKE  (r12 I:java.lang.Object A[D('input' java.io.ObjectInput)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:byte) = (r12 I:java.io.ObjectInput A[D('input' java.io.ObjectInput)]) type: INTERFACE call: java.io.ObjectInput.readByte():byte A[MD:():byte throws java.io.IOException (c)] (LINE:402)\l0x0009: ARITH  (r1 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('flags' int)]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:403)\l0x000b: ARITH  (r2 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('flags' int)]) & (\-2 ??[int, float, short, byte, char])  (LINE:404)\l0x000d: CONST  (r3 I:??[int, float, short, byte, char]) = (46 ??[int, float, short, byte, char])  (LINE:405)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000f|0x000f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('other' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x008b \l}"];
Node_30 [shape=record,label="{30\:\ 0x0011|0x0011: INVOKE  (r4 I:int) = (r12 I:java.io.ObjectInput A[D('input' java.io.ObjectInput)]) type: INTERFACE call: java.io.ObjectInput.readInt():int A[MD:():int throws java.io.IOException (c)] (LINE:408)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0015|0x0015: IF  (r4 I:??[int, byte, short, char] A[D('size' int)]) \< (0 ??[int, byte, short, char])  \-\> B:46:0x0071  (LINE:409)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0017|0x0017: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:410)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0018|0x0018: SWITCH  (r1 I:?? A[D('tag' int)])\l case 0: goto B:40:0x0052\l case 1: goto B:36:0x0035\l default: goto B:34:0x001b \l}"];
Node_34 [shape=record,label="{34\:\ 0x001b|0x001b: NEW_INSTANCE  (r5 I:java.io.InvalidObjectException) =  java.io.InvalidObjectException  (LINE:418)\l0x001d: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001f: INVOKE  (r6 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0022: CONST_STR  (r7 I:java.lang.String) =  \"Unsupported collection type tag: \" \l0x0024: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0027: INVOKE  (r6 I:java.lang.StringBuilder), (r1 I:int A[D('tag' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x002a: INVOKE  (r6 I:java.lang.StringBuilder), (r3 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x002d: INVOKE  (r3 I:java.lang.String) = (r6 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0031: INVOKE  (r5 I:java.io.InvalidObjectException), (r3 I:java.lang.String) type: DIRECT call: java.io.InvalidObjectException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0034|0x0034: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0035|0x0035: INVOKE  (r3 I:java.util.Set) = (r4 I:int A[D('size' int)]) type: STATIC call: kotlin.collections.SetsKt.createSetBuilder(int):java.util.Set A[MD:\<E\>:(int):java.util.Set\<E\> (m)] (LINE:414)\l0x0039: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x003a: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x003c|LOOP_START\lLOOP:0: B:37:0x003c\-\>B:38:0x003e\l|0x003c: IF  (r5 I:??[int, byte, short, char]) \>= (r4 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:50:0x004a \l}"];
Node_38 [shape=record,label="{38\:\ 0x003e|LOOP_END\lLOOP:0: B:37:0x003c\-\>B:38:0x003e\l|0x003e: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x003f: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:430)\l0x0040: INVOKE  (r10 I:java.lang.Object) = (r12 I:java.io.ObjectInput A[D('input' java.io.ObjectInput)]) type: INTERFACE call: java.io.ObjectInput.readObject():java.lang.Object A[MD:():java.lang.Object throws java.lang.ClassNotFoundException, java.io.IOException (c)] (LINE:415)\l0x0044: INVOKE  (r6 I:java.util.Set A[D('$this$readExternal_u24lambda_u2d3' java.util.Set)]), (r10 I:java.lang.Object) type: INTERFACE call: java.util.Set.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0047: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l}"];
Node_50 [shape=record,label="{50\:\ 0x004a|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x004a|0x004b: INVOKE  (r3 I:java.util.Set) = (r3 I:java.util.Set) type: STATIC call: kotlin.collections.SetsKt.build(java.util.Set):java.util.Set A[MD:\<E\>:(java.util.Set\<E\>):java.util.Set\<E\> (m)] (LINE:414)\l0x004f: CHECK_CAST (r3 I:java.util.Collection) = (java.util.Collection) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x006e|0x006e: IPUT  (r3 I:java.util.Collection\<?\>), (r11 I:kotlin.collections.builders.SerializedCollection) kotlin.collections.builders.SerializedCollection.collection java.util.Collection  (LINE:410)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0070|RETURN\l|0x0070: RETURN    (LINE:420)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0052|0x0052: INVOKE  (r3 I:java.util.List) = (r4 I:int A[D('size' int)]) type: STATIC call: kotlin.collections.CollectionsKt.createListBuilder(int):java.util.List A[MD:\<E\>:(int):java.util.List\<E\> (m)] (LINE:411)\l0x0056: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x0057: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0059|LOOP_START\lLOOP:1: B:41:0x0059\-\>B:42:0x005b\l|0x0059: IF  (r5 I:??[int, byte, short, char]) \>= (r4 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:51:0x0067 \l}"];
Node_42 [shape=record,label="{42\:\ 0x005b|LOOP_END\lLOOP:1: B:41:0x0059\-\>B:42:0x005b\l|0x005b: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x005c: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:430)\l0x005d: INVOKE  (r10 I:java.lang.Object) = (r12 I:java.io.ObjectInput A[D('input' java.io.ObjectInput)]) type: INTERFACE call: java.io.ObjectInput.readObject():java.lang.Object A[MD:():java.lang.Object throws java.lang.ClassNotFoundException, java.io.IOException (c)] (LINE:412)\l0x0061: INVOKE  (r6 I:java.util.List A[D('$this$readExternal_u24lambda_u2d1' java.util.List)]), (r10 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0064: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0067|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0067|0x0068: INVOKE  (r3 I:java.util.List) = (r3 I:java.util.List) type: STATIC call: kotlin.collections.CollectionsKt.build(java.util.List):java.util.List A[MD:\<E\>:(java.util.List\<E\>):java.util.List\<E\> (m)] (LINE:411)\l0x006c: CHECK_CAST (r3 I:java.util.Collection) = (java.util.Collection) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0071|0x0071: NEW_INSTANCE  (r5 I:java.io.InvalidObjectException) =  java.io.InvalidObjectException  (LINE:409)\l0x0073: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0075: INVOKE  (r6 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0078: CONST_STR  (r7 I:java.lang.String) =  \"Illegal size value: \" \l0x007a: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x007d: INVOKE  (r6 I:java.lang.StringBuilder), (r4 I:int A[D('size' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0080: INVOKE  (r6 I:java.lang.StringBuilder), (r3 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0083: INVOKE  (r3 I:java.lang.String) = (r6 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0087: INVOKE  (r5 I:java.io.InvalidObjectException), (r3 I:java.lang.String) type: DIRECT call: java.io.InvalidObjectException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x008a|0x008a: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_48 [shape=record,label="{48\:\ 0x008b|0x008b: NEW_INSTANCE  (r4 I:java.io.InvalidObjectException A[D('size' int)]) =  java.io.InvalidObjectException  (LINE:406)\l0x008d: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x008f: INVOKE  (r5 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0092: CONST_STR  (r6 I:java.lang.String) =  \"Unsupported flags value: \" \l0x0094: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0097: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:int A[D('flags' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x009a: INVOKE  (r5 I:java.lang.StringBuilder), (r3 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x009d: INVOKE  (r3 I:java.lang.String) = (r5 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x00a1: INVOKE  (r4 I:java.io.InvalidObjectException), (r3 I:java.lang.String) type: DIRECT call: java.io.InvalidObjectException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x00a4|0x00a4: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void kotlin.collections.builders.SerializedCollection.readExternal((r11 'this' I:kotlin.collections.builders.SerializedCollection A[IMMUTABLE_TYPE, THIS]), (r12 I:java.io.ObjectInput A[D('input' java.io.ObjectInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:38:0x003e \-\> B:37:0x003c, CROSS_EDGE: B:45:0x0070 \-\> B:27:?, BACK_EDGE: B:42:0x005b \-\> B:41:0x0059, CROSS_EDGE: B:43:0x0067 \-\> B:44:0x006e, CROSS_EDGE: B:47:0x008a \-\> B:27:?, CROSS_EDGE: B:49:0x00a4 \-\> B:27:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003f\-0x0047: r8 'it' I\l  0x0040\-0x0047: r9 '$i$a$\-repeat\-SerializedCollection$readExternal$2$1' I\l  0x003a\-0x004b: r6 '$this$readExternal_u24lambda_u2d3' Ljava\/util\/Set;\l  0x003b\-0x004b: r7 '$i$a$\-buildSet\-SerializedCollection$readExternal$2' I\l  0x005c\-0x0064: r8 'it' I\l  0x005d\-0x0064: r9 '$i$a$\-repeat\-SerializedCollection$readExternal$1$1' I\l  0x0057\-0x0068: r6 '$this$readExternal_u24lambda_u2d1' Ljava\/util\/List;\l  0x0058\-0x0068: r7 '$i$a$\-buildList\-SerializedCollection$readExternal$1' I\l  0x0015\-0x008b: r4 'size' I\l  0x0009\-0x00ad: r0 'flags' I\l  0x000b\-0x00ad: r1 'tag' I\l  0x000d\-0x00ad: r2 'other' I\l  \-1 \-0x00ad: r12 'input' Ljava\/io\/ObjectInput;\lMETHOD_OVERRIDE: [ClspMth\{java.io.Externalizable.readExternal(java.io.ObjectInput):void throws java.lang.ClassNotFoundException, java.io.IOException\}]\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_48;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_46;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_36;
Node_33 -> Node_40;
Node_34 -> Node_35;
Node_35 -> Node_27;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_50;
Node_38 -> Node_37;
Node_50 -> Node_39;
Node_39 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_27;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_51;
Node_42 -> Node_41;
Node_51 -> Node_43;
Node_43 -> Node_44;
Node_46 -> Node_47;
Node_47 -> Node_27;
Node_48 -> Node_49;
Node_49 -> Node_27;
}

