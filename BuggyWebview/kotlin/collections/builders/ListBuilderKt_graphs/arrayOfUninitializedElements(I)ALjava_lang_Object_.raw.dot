digraph "CFG forkotlin.collections.builders.ListBuilderKt.arrayOfUninitializedElements(I)[Ljava\/lang\/Object;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IF  (r2 I:??[int, byte, short, char] A[D('size' int)]) \< (0 ??[int, byte, short, char])  \-\> B:14:0x0004  (LINE:333)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000a \l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|0x0007: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r2 I:int A[D('size' int), IMMUTABLE_TYPE]) type: java.lang.Object[]  (LINE:335)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0009|RETURN\l|0x0009: RETURN  (r0 I:E[]) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:430)\l0x000c: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException A[D('$i$a$\-require\-ListBuilderKt$arrayOfUninitializedElements$1' int)]) =  java.lang.IllegalArgumentException \l0x000e: CONST_STR  (r1 I:java.lang.String) =  \"capacity must be non\-negative.\" \l0x0010: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0014: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0017|0x0017: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final E[] kotlin.collections.builders.ListBuilderKt.arrayOfUninitializedElements((r2 I:int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0017 \-\> B:11:?, CROSS_EDGE: B:14:0x0004 \-\> B:15:0x0005\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x000c: r0 '$i$a$\-require\-ListBuilderKt$arrayOfUninitializedElements$1' I\l  \-1 \-0x0017: r2 'size' I\lSIGNATURE: \<E:Ljava\/lang\/Object;\>(I)[TE;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
Node_14 -> Node_15;
}

