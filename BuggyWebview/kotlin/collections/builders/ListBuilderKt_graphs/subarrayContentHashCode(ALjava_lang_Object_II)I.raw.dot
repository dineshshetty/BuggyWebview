digraph "CFG forkotlin.collections.builders.ListBuilderKt.subarrayContentHashCode([Ljava\/lang\/Object;II)I" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:352)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:353)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|LOOP_START\lLOOP:0: B:16:0x0002\-\>B:21:0x0012\l|0x0002: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r7 I:??[int, byte, short, char] A[D('length' int)])  \-\> B:23:0x0018  (LINE:354)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: ARITH  (r2 I:int) = (r6 I:int A[D('offset' int)]) + (r1 I:int A[D('i' int)])  (LINE:355)\l0x0006: AGET  (r2 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][] A[D('$this$subarrayContentHashCode' java.lang.Object[])]), (r2 I:??[int, short, byte, char]) \l0x0008: ARITH  (r3 I:int) = (r0 I:int A[D('result' int)]) * (31 int)  (LINE:356)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|0x000a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('nextElement' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0011 \l}"];
Node_19 [shape=record,label="{19\:\ 0x000c|0x000c: INVOKE  (r4 I:int) = (r2 I:java.lang.Object A[D('nextElement' java.lang.Object)]) type: VIRTUAL call: java.lang.Object.hashCode():int A[MD:():int (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0012|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0012|LOOP_END\lLOOP:0: B:16:0x0002\-\>B:21:0x0012\l|0x0012: ARITH  (r0 I:int A[D('result' int)]) = (r3 I:int) + (r4 I:int) \l0x0015: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|0x0011: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0018|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:int A[D('result' int)])  (LINE:359)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.builders.ListBuilderKt.subarrayContentHashCode((r5 I:T[] A[D('$this$subarrayContentHashCode' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0012 \-\> B:16:0x0002, CROSS_EDGE: B:20:0x0011 \-\> B:21:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x0015: r2 'nextElement' Ljava\/lang\/Object;\l  0x0001\-0x0018: r0 'result' I\l  0x0002\-0x0018: r1 'i' I\l  \-1 \-0x0018: r5 '$this$subarrayContentHashCode' [Ljava\/lang\/Object;\l  \-1 \-0x0018: r6 'offset' I\l  \-1 \-0x0018: r7 'length' I\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;II)I\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_25;
Node_25 -> Node_21;
Node_21 -> Node_16;
Node_20 -> Node_24;
Node_24 -> Node_21;
Node_23 -> Node_22;
Node_22 -> Node_14;
}

