digraph "CFG forkotlin.collections.builders.ListBuilderKt.subarrayContentToString([Ljava\/lang\/Object;II)Ljava\/lang\/String;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:339)\l0x0002: ARITH  (r1 I:int) = (r6 I:int A[D('length' int)]) * (3 int) \l0x0004: ARITH  (r1 I:int) = (r1 I:int) + (2 int) \l0x0006: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) type: DIRECT call: java.lang.StringBuilder.\<init\>(int):void A[MD:(int):void (c)]\l0x0009: CONST_STR  (r1 I:java.lang.String) =  \"[\"  (LINE:340)\l0x000b: INVOKE  (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x000e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:341)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000f|LOOP_START\lLOOP:0: B:15:0x000f\-\>B:18:0x0018\l|0x000f: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r6 I:??[int, byte, short, char] A[D('length' int)])  \-\> B:21:0x0022  (LINE:342)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0011|0x0011: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:23:0x0018  (LINE:343)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0013|0x0013: CONST_STR  (r2 I:java.lang.String) =  \", \" \l0x0015: INVOKE  (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0018|LOOP_END\lLOOP:0: B:15:0x000f\-\>B:18:0x0018\l|0x0018: ARITH  (r2 I:int) = (r5 I:int A[D('offset' int)]) + (r1 I:int A[D('i' int)])  (LINE:344)\l0x001a: AGET  (r2 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][] A[D('$this$subarrayContentToString' java.lang.Object[])]), (r2 I:??[int, short, byte, char]) \l0x001c: INVOKE  (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x001f: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:345)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0018|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0022|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0022|0x0022: CONST_STR  (r2 I:java.lang.String) =  \"]\"  (LINE:347)\l0x0024: INVOKE  (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0027: INVOKE  (r2 I:java.lang.String) = (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)] (LINE:348)\l0x002b: CONST_STR  (r3 I:java.lang.String) =  \"sb.toString()\" \l0x002d: INVOKE  (r2 I:java.lang.Object), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0030|RETURN\l|0x0030: RETURN  (r2 I:java.lang.String) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.collections.builders.ListBuilderKt.subarrayContentToString((r4 I:T[] A[D('$this$subarrayContentToString' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:18:0x0018 \-\> B:15:0x000f, CROSS_EDGE: B:16:0x0011 \-\> B:18:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0030: r0 'sb' Ljava\/lang\/StringBuilder;\l  0x000f\-0x0030: r1 'i' I\l  \-1 \-0x0030: r4 '$this$subarrayContentToString' [Ljava\/lang\/Object;\l  \-1 \-0x0030: r5 'offset' I\l  \-1 \-0x0030: r6 'length' I\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;II)Ljava\/lang\/String;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_22;
Node_22 -> Node_18;
Node_18 -> Node_15;
Node_23 -> Node_18;
Node_21 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_13;
}

