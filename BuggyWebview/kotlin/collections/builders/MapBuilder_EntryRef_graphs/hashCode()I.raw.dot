digraph "CFG forkotlin.collections.builders.MapBuilder.EntryRef.hashCode()I" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) = (r3 I:kotlin.collections.builders.MapBuilder$EntryRef) type: VIRTUAL call: kotlin.collections.builders.MapBuilder.EntryRef.getKey():java.lang.Object A[MD:():K (m)] (LINE:555)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x000c \l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|0x0007: INVOKE  (r0 I:int) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.hashCode():int A[MD:():int (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000d|0x000d: INVOKE  (r2 I:java.lang.Object) = (r3 I:kotlin.collections.builders.MapBuilder$EntryRef) type: VIRTUAL call: kotlin.collections.builders.MapBuilder.EntryRef.getValue():java.lang.Object A[MD:():V (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|0x0011: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0017 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|0x0013: INVOKE  (r1 I:int) = (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.hashCode():int A[MD:():int (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0017|0x0017: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) ^ (r1 I:??[int, boolean, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|0x000c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public int kotlin.collections.builders.MapBuilder.EntryRef.hashCode((r3 'this' I:kotlin.collections.builders.MapBuilder$EntryRef\<K, V\> A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:18:0x0011 \-\> B:20:0x0017, CROSS_EDGE: B:16:0x000c \-\> B:17:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lMETHOD_OVERRIDE: [ClspMth\{java.util.Map.Entry.hashCode():int\}]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

