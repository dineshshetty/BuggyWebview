digraph "CFG forkotlin.collections.builders.ListBuilder.addAll(ILjava\/util\/Collection;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('elements' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r2 I:kotlin.collections.builders.ListBuilder) type: DIRECT call: kotlin.collections.builders.ListBuilder.checkIsMutable():void A[MD:():void (m)] (LINE:103)\l0x0008: SGET  (r0 I:kotlin.collections.AbstractList$Companion) =  kotlin.collections.AbstractList.Companion kotlin.collections.AbstractList$Companion  (LINE:104)\l0x000a: IGET  (r1 I:int) = (r2 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.length int \l0x000c: INVOKE  (r0 I:kotlin.collections.AbstractList$Companion), (r3 I:int A[D('index' int)]), (r1 I:int) type: VIRTUAL call: kotlin.collections.AbstractList.Companion.checkPositionIndex$kotlin_stdlib(int, int):void A[MD:(int, int):void (m)]\l0x000f: INVOKE  (r0 I:int) = (r4 I:java.util.Collection A[D('elements' java.util.Collection)]) type: INTERFACE call: java.util.Collection.size():int A[MD:():int (c)] (LINE:105)\l0x0013: IGET  (r1 I:int) = (r2 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.offset int  (LINE:106)\l0x0015: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int A[D('index' int)]) \l0x0016: INVOKE  \l  (r2 I:kotlin.collections.builders.ListBuilder)\l  (r1 I:int)\l  (r4 I:java.util.Collection A[D('elements' java.util.Collection)])\l  (r0 I:int A[D('n' int)])\l type: DIRECT call: kotlin.collections.builders.ListBuilder.addAllInternal(int, java.util.Collection, int):void A[MD:(int, java.util.Collection\<? extends E\>, int):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: IF  (r0 I:??[int, byte, short, char] A[D('n' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:5:0x001d  (LINE:107)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|SYNTHETIC\lRETURN\l|0x001b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001e: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|RETURN\lORIG_RETURN\l|0x001d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001e: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlin.collections.builders.ListBuilder.addAll((r2 'this' I:kotlin.collections.builders.ListBuilder\<E\> A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.util.Collection\<? extends E\> A[D('elements' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:5:0x001d \-\> B:6:0x001e\lDebug Info:\l  0x0013\-0x001e: r0 'n' I\l  \-1 \-0x001e: r3 'index' I\l  \-1 \-0x001e: r4 'elements' Ljava\/util\/Collection;\lTYPE_VARS: [E]\lSIGNATURE: (ILjava\/util\/Collection\<+TE;\>;)Z\lMETHOD_OVERRIDE: [ClspMth\{java.util.List.addAll(int, java.util.Collection\<? extends E\>):boolean\}, ClspMth\{java.util.AbstractList.addAll(int, java.util.Collection\<? extends E\>):boolean\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_1;
}

