digraph "CFG forkotlin.collections.builders.ListBuilder.removeAtInternal(I)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:kotlin.collections.builders.ListBuilder\<E\>) = (r5 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.backing kotlin.collections.builders.ListBuilder  (LINE:237)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlin.collections.builders.ListBuilder), (r6 I:int A[D('i' int)]) type: DIRECT call: kotlin.collections.builders.ListBuilder.removeAtInternal(int):java.lang.Object A[MD:(int):E (m)] (LINE:238)\l0x0008: IGET  (r1 I:int) = (r5 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.length int  (LINE:239)\l0x000a: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x000c: IPUT  (r1 I:int), (r5 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.length int \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:E A[D('old' java.lang.Object)])  (LINE:240)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IGET  (r0 I:E[] A[D('old' java.lang.Object)]) = (r5 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.array java.lang.Object[]  (LINE:242)\l0x0011: AGET  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('i' int)]) \l0x0013: ARITH  (r2 I:int) = (r6 I:int A[D('i' int)]) + (1 int)  (LINE:243)\l0x0015: IGET  (r3 I:int) = (r5 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.offset int \l0x0017: IGET  (r4 I:int) = (r5 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.length int \l0x0019: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x001a: INVOKE  (r0 I:java.lang.Object[]), (r0 I:java.lang.Object[]), (r6 I:int A[D('i' int)]), (r2 I:int), (r3 I:int) type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l0x001d: IGET  (r0 I:E[]) = (r5 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.array java.lang.Object[]  (LINE:244)\l0x001f: IGET  (r2 I:int) = (r5 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.offset int \l0x0021: IGET  (r3 I:int) = (r5 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.length int \l0x0023: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0024: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l0x0026: INVOKE  (r0 I:java.lang.Object[]), (r2 I:int) type: STATIC call: kotlin.collections.builders.ListBuilderKt.resetAt(java.lang.Object[], int):void A[MD:\<E\>:(E[], int):void (m)]\l0x0029: IGET  (r0 I:int) = (r5 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.length int  (LINE:245)\l0x002b: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l0x002d: IPUT  (r0 I:int), (r5 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.length int \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|RETURN\l|0x002f: RETURN  (r1 I:E A[D('old' java.lang.Object)])  (LINE:246)\l}"];
MethodNode[shape=record,label="{private final E kotlin.collections.builders.ListBuilder.removeAtInternal((r5 'this' I:kotlin.collections.builders.ListBuilder\<E\> A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('i' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x002f \-\> B:1:?\lDebug Info:\l  0x0008\-0x000f: r0 'old' Ljava\/lang\/Object;\l  0x0013\-0x002f: r1 'old' Ljava\/lang\/Object;\l  \-1 \-0x002f: r6 'i' I\lTYPE_VARS: [E]\lSIGNATURE: (I)TE;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

