digraph "CFG forkotlin.collections.builders.ListBuilder.subList(II)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:kotlin.collections.AbstractList$Companion) =  kotlin.collections.AbstractList.Companion kotlin.collections.AbstractList$Companion  (LINE:139)\l0x0002: IGET  (r1 I:int) = (r9 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.length int \l0x0004: INVOKE  \l  (r0 I:kotlin.collections.AbstractList$Companion)\l  (r10 I:int A[D('fromIndex' int)])\l  (r11 I:int A[D('toIndex' int)])\l  (r1 I:int)\l type: VIRTUAL call: kotlin.collections.AbstractList.Companion.checkRangeIndexes$kotlin_stdlib(int, int, int):void A[MD:(int, int, int):void (m)]\l0x0007: NEW_INSTANCE  (r0 I:kotlin.collections.builders.ListBuilder) =  kotlin.collections.builders.ListBuilder  (LINE:140)\l0x0009: IGET  (r3 I:E[]) = (r9 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.array java.lang.Object[] \l0x000b: IGET  (r1 I:int) = (r9 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.offset int \l0x000d: ARITH  (r4 I:int) = (r1 I:int) + (r10 I:int A[D('fromIndex' int)]) \l0x000f: ARITH  (r5 I:int) = (r11 I:int A[D('toIndex' int)]) \- (r10 I:int A[D('fromIndex' int)]) \l0x0011: IGET  (r6 I:boolean) = (r9 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.isReadOnly boolean \l0x0013: IGET  (r1 I:kotlin.collections.builders.ListBuilder\<E\>) = (r9 I:kotlin.collections.builders.ListBuilder) kotlin.collections.builders.ListBuilder.root kotlin.collections.builders.ListBuilder \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x001b: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY]) \l0x001c: INVOKE  \l  (r2 I:kotlin.collections.builders.ListBuilder)\l  (r3 I:java.lang.Object[])\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:boolean)\l  (r7 I:kotlin.collections.builders.ListBuilder)\l  (r8 I:kotlin.collections.builders.ListBuilder)\l type: DIRECT call: kotlin.collections.builders.ListBuilder.\<init\>(java.lang.Object[], int, int, boolean, kotlin.collections.builders.ListBuilder, kotlin.collections.builders.ListBuilder):void A[MD:(E[], int, int, boolean, kotlin.collections.builders.ListBuilder\<E\>, kotlin.collections.builders.ListBuilder\<E\>):void (m)]\l0x001f: CHECK_CAST (r0 I:java.util.List) = (java.util.List) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|RETURN\l|0x0021: RETURN  (r0 I:java.util.List\<E\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public java.util.List\<E\> kotlin.collections.builders.ListBuilder.subList((r9 'this' I:kotlin.collections.builders.ListBuilder\<E\> A[IMMUTABLE_TYPE, THIS]), (r10 I:int A[D('fromIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('toIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:5:0x0019 \-\> B:6:0x001a\lDebug Info:\l  \-1 \-0x0021: r10 'fromIndex' I\l  \-1 \-0x0021: r11 'toIndex' I\lTYPE_VARS: [E]\lSIGNATURE: (II)Ljava\/util\/List\<TE;\>;\lMETHOD_OVERRIDE: [ClspMth\{java.util.AbstractList.subList(int, int):java.util.List\<E\>\}, ClspMth\{java.util.List.subList(int, int):java.util.List\<E\>\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
}

