digraph "CFG forkotlin.collections.builders.ListBuilder.remove(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r2 I:kotlin.collections.builders.ListBuilder) type: DIRECT call: kotlin.collections.builders.ListBuilder.checkIsMutable():void A[MD:():void (m)] (LINE:122)\l0x0003: INVOKE  (r0 I:int) = (r2 I:kotlin.collections.builders.ListBuilder), (r3 I:java.lang.Object A[D('element' java.lang.Object)]) type: VIRTUAL call: kotlin.collections.builders.ListBuilder.indexOf(java.lang.Object):int A[MD:(java.lang.Object):int (m)] (LINE:123)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:5:0x000c  (LINE:124)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: INVOKE  (r2 I:kotlin.collections.builders.ListBuilder), (r0 I:int A[D('i' int)]) type: VIRTUAL call: kotlin.collections.builders.ListBuilder.remove(int):java.lang.Object A[MD:(int):E (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:7:0x0010  (LINE:125)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|SYNTHETIC\lRETURN\l|0x000e: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0011: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|RETURN\lORIG_RETURN\l|0x0010: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0011: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlin.collections.builders.ListBuilder.remove((r2 'this' I:kotlin.collections.builders.ListBuilder\<E\> A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:7:0x0010 \-\> B:8:0x0011, CROSS_EDGE: B:3:0x0007 \-\> B:5:0x000c\lDebug Info:\l  0x0007\-0x0011: r0 'i' I\l  \-1 \-0x0011: r3 'element' Ljava\/lang\/Object;\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [ClspMth\{java.util.Collection.remove(java.lang.Object):boolean\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_1;
Node_7 -> Node_1;
}

