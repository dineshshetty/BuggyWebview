digraph "CFG forkotlin.collections.builders.ListBuilder.ensureCapacity(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r2.backing != null) goto L12\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|if (r3 \< 0) goto L10\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006}"];
Node_6 [shape=record,label="{6\:\ 0x0009|if (r3 \<= r2.array.length) goto L9\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|int r0 = kotlin.collections.ArrayDeque.Companion.newCapacity$kotlin_stdlib(r2.array.length, r3)\lr2.array = (E[]) kotlin.collections.builders.ListBuilderKt.copyOfUninitializedElements(r2.array, r0)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d}"];
Node_10 [shape=record,label="{10\:\ 0x0022|throw new java.lang.OutOfMemoryError()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023}"];
Node_12 [shape=record,label="{12\:\ 0x0028|throw new java.lang.IllegalStateException()\l}"];
MethodNode[shape=record,label="{private final void kotlin.collections.builders.ListBuilder.ensureCapacity((r2v0 'this' kotlin.collections.builders.ListBuilder\<E\> A[IMMUTABLE_TYPE, THIS]), (r3v0 'minCapacity' int A[D('minCapacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0009 \-\> B:8:0x001c, CROSS_EDGE: B:10:0x0022 \-\> B:1:?, CROSS_EDGE: B:12:0x0028 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_13 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_1;
}

