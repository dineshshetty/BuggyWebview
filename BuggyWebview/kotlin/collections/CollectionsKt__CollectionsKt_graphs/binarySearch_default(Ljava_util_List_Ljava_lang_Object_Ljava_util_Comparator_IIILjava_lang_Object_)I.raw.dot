digraph "CFG forkotlin.collections.CollectionsKt__CollectionsKt.binarySearch$default(Ljava\/util\/List;Ljava\/lang\/Object;Ljava\/util\/Comparator;IIILjava\/lang\/Object;)I" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: ARITH  (r6 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char])  (LINE:349)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0005 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|0x0005: ARITH  (r5 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (8 ??[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|0x0007: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000d \l}"];
Node_17 [shape=record,label="{17\:\ 0x0009|0x0009: INVOKE  (r4 I:int) = (r0 I:java.util.List) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|0x000d: INVOKE  (r0 I:int) = (r0 I:java.util.List), (r1 I:java.lang.Object), (r2 I:java.util.Comparator), (r3 I:int), (r4 I:int) type: STATIC call: kotlin.collections.CollectionsKt.binarySearch(java.util.List, java.lang.Object, java.util.Comparator, int, int):int A[MD:\<T\>:(java.util.List\<? extends T\>, T, java.util.Comparator\<? super T\>, int, int):int (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ int kotlin.collections.CollectionsKt__CollectionsKt.binarySearch$default((r0 I:java.util.List A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.util.Comparator A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:16:0x0007 \-\> B:18:0x000d, CROSS_EDGE: B:13:0x0002 \-\> B:15:0x0005\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

