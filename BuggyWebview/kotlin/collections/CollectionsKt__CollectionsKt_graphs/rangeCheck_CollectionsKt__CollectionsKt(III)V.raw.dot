digraph "CFG forkotlin.collections.CollectionsKt__CollectionsKt.rangeCheck$CollectionsKt__CollectionsKt(III)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0001|0x0001: CONST_STR  (r0 I:java.lang.String) =  \").\"  (LINE:445)\l0x0003: CONST_STR  (r1 I:java.lang.String) =  \"fromIndex (\" \l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|0x0005: IF  (r5 I:??[int, byte, short, char] A[D('fromIndex' int)]) \> (r6 I:??[int, byte, short, char] A[D('toIndex' int)])  \-\> B:24:0x0048 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: IF  (r5 I:??[int, byte, short, char] A[D('fromIndex' int)]) \< (0 ??[int, byte, short, char])  \-\> B:22:0x002e  (LINE:446)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: IF  (r6 I:??[int, byte, short, char] A[D('toIndex' int)]) \> (r4 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:20:0x000c  (LINE:447)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|RETURN\l|0x000b: RETURN    (LINE:449)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|0x000c: NEW_INSTANCE  (r1 I:java.lang.IndexOutOfBoundsException) =  java.lang.IndexOutOfBoundsException  (LINE:447)\l0x000e: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0010: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0013: CONST_STR  (r3 I:java.lang.String) =  \"toIndex (\" \l0x0015: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0018: INVOKE  (r2 I:java.lang.StringBuilder), (r6 I:int A[D('toIndex' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x001b: CONST_STR  (r3 I:java.lang.String) =  \") is greater than size (\" \l0x001d: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0020: INVOKE  (r2 I:java.lang.StringBuilder), (r4 I:int A[D('size' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0023: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0026: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x002a: INVOKE  (r1 I:java.lang.IndexOutOfBoundsException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IndexOutOfBoundsException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x002d|0x002d: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x002e|0x002e: NEW_INSTANCE  (r0 I:java.lang.IndexOutOfBoundsException) =  java.lang.IndexOutOfBoundsException  (LINE:446)\l0x0030: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0032: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0035: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0038: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:int A[D('fromIndex' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x003b: CONST_STR  (r1 I:java.lang.String) =  \") is less than zero.\" \l0x003d: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0040: INVOKE  (r1 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0044: INVOKE  (r0 I:java.lang.IndexOutOfBoundsException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IndexOutOfBoundsException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0047|0x0047: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0048|0x0048: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:445)\l0x004a: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004c: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x004f: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0052: INVOKE  (r3 I:java.lang.StringBuilder), (r5 I:int A[D('fromIndex' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0055: CONST_STR  (r1 I:java.lang.String) =  \") is greater than toIndex (\" \l0x0057: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x005a: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:int A[D('toIndex' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x005d: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0060: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0064: INVOKE  (r2 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0067|0x0067: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static final void kotlin.collections.CollectionsKt__CollectionsKt.rangeCheck$CollectionsKt__CollectionsKt((r4 I:int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('fromIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('toIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:21:0x002d \-\> B:14:?, CROSS_EDGE: B:23:0x0047 \-\> B:14:?, CROSS_EDGE: B:25:0x0067 \-\> B:14:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0067: r4 'size' I\l  \-1 \-0x0067: r5 'fromIndex' I\l  \-1 \-0x0067: r6 'toIndex' I\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_14;
Node_20 -> Node_21;
Node_21 -> Node_14;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

