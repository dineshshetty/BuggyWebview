digraph "CFG forkotlin.collections.CollectionsKt__CollectionsKt.binarySearch(Ljava\/util\/List;IILkotlin\/jvm\/functions\/Function1;)I" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"comparison\")\lrangeCheck$CollectionsKt__CollectionsKt(r5.size(), r6, r7)\lr0 = r6\lint r1 = r7 + (\-1)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|LOOP_START\lLOOP:0: B:22:0x0014\-\>B:35:0x0014\lPHI: r0 r1 \l  PHI: (r0v4 'low' int) = (r0v3 'low' int), (r0v6 'low' int) binds: [B:21:0x0000, B:35:0x0014] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'high' int) = (r1v0 'high' int), (r1v2 'high' int) binds: [B:21:0x0000, B:35:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \> r1) goto L16\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|int r2 = (r0 + r1) \>\>\> 1\ljava.lang.Object r3 = (T) r5.get(r2)\lint r4 = r8.invoke(r3).intValue()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0028|if (r4 \>= 0) goto L5\l}"];
Node_32 [shape=record,label="{32\:\ 0x002d|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x002d|if (r4 \<= 0) goto L10\l}"];
Node_27 [shape=record,label="{27\:\ 0x002f|int r1 = r2 + (\-1)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0014|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0014|LOOP_END\lSYNTHETIC\lLOOP:0: B:22:0x0014\-\>B:35:0x0014\lPHI: r0 r1 \l  PHI: (r0v6 'low' int) = (r0v5 'low' int), (r0v4 'low' int) binds: [B:37:0x0014, B:36:0x0014] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 'high' int) = (r1v1 'high' int), (r1v3 'high' int) binds: [B:37:0x0014, B:36:0x0014] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0032|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0032|RETURN\l|return r2\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x002a|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x002a|int r0 = r2 + 1\l}"];
Node_37 [shape=record,label="{37\:\ 0x0014|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0033|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0033}"];
Node_30 [shape=record,label="{30\:\ 0x0036|RETURN\l|return \-(r0 + 1)\l}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.CollectionsKt__CollectionsKt.binarySearch((r5v0 java.util.List\<? extends T\> A[D('$this$binarySearch' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'fromIndex' int A[D('fromIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'toIndex' int A[D('toIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'comparison' kotlin.jvm.functions.Function1\<? super T, java.lang.Integer\> A[D('comparison' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x002a \-\> B:22:0x0014, BACK_EDGE: B:27:0x002f \-\> B:22:0x0014, CROSS_EDGE: B:30:0x0036 \-\> B:20:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/List\<+TT;\>;IILkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Integer;\>;)I\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r3v0. Raw type applied. Possible types: T, ? super T\}\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_31;
Node_23 -> Node_24;
Node_24 -> Node_32;
Node_24 -> Node_33[style=dashed];
Node_32 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_34;
Node_27 -> Node_36;
Node_36 -> Node_35;
Node_35 -> Node_22;
Node_34 -> Node_28;
Node_28 -> Node_20;
Node_33 -> Node_25;
Node_25 -> Node_37;
Node_37 -> Node_35;
Node_31 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_20;
}

