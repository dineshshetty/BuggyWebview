digraph "CFG forkotlin.collections.CollectionsKt__CollectionsKt.binarySearch(Ljava\/util\/List;Ljava\/lang\/Object;Ljava\/util\/Comparator;II)I" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$binarySearch' java.util.List)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"comparator\" \l0x0007: INVOKE  (r7 I:java.lang.Object A[D('comparator' java.util.Comparator)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:int) = (r5 I:java.util.List A[D('$this$binarySearch' java.util.List)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:350)\l0x000e: INVOKE  (r0 I:int), (r8 I:int A[D('fromIndex' int)]), (r9 I:int A[D('toIndex' int)]) type: STATIC call: kotlin.collections.CollectionsKt__CollectionsKt.rangeCheck$CollectionsKt__CollectionsKt(int, int, int):void A[MD:(int, int, int):void (m)]\l0x0011: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fromIndex' int)])  (LINE:352)\l0x0012: ARITH  (r1 I:int) = (r9 I:int A[D('toIndex' int)]) + (\-1 int)  (LINE:353)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|LOOP_START\lLOOP:0: B:22:0x0014\-\>B:35:0x0014\l|0x0014: IF  (r0 I:??[int, byte, short, char] A[D('low' int)]) \> (r1 I:??[int, byte, short, char] A[D('high' int)])  \-\> B:32:0x002d  (LINE:355)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|0x0016: ARITH  (r2 I:int) = (r0 I:int A[D('low' int)]) + (r1 I:int A[D('high' int)])  (LINE:356)\l0x0018: ARITH  (r2 I:int) = (r2 I:int) \>\>\> (1 int) \l0x001a: INVOKE  (r3 I:java.lang.Object) = (r5 I:java.util.List A[D('$this$binarySearch' java.util.List)]), (r2 I:int A[D('mid' int)]) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:357)\l0x001e: INVOKE  (r4 I:int) = \l  (r7 I:java.util.Comparator A[D('comparator' java.util.Comparator)])\l  (r3 I:java.lang.Object A[D('midVal' java.lang.Object)])\l  (r6 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: java.util.Comparator.compare(java.lang.Object, java.lang.Object):int A[MD:(T, T):int (c)] (LINE:358)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0022|0x0022: IF  (r4 I:??[int, byte, short, char] A[D('cmp' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:31:0x0027  (LINE:360)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0027|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|0x0027: IF  (r4 I:??[int, byte, short, char] A[D('cmp' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:34:0x002c  (LINE:362)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0029|0x0029: ARITH  (r1 I:int A[D('high' int)]) = (r2 I:int A[D('mid' int)]) + (\-1 int)  (LINE:363)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0014|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0014|LOOP_END\lSYNTHETIC\lLOOP:0: B:22:0x0014\-\>B:35:0x0014\l}"];
Node_34 [shape=record,label="{34\:\ 0x002c|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x002c|RETURN\l|0x002c: RETURN  (r2 I:int A[D('mid' int)])  (LINE:365)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0024|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0024|0x0024: ARITH  (r0 I:int A[D('low' int)]) = (r2 I:int A[D('mid' int)]) + (1 int)  (LINE:361)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0014|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x002d|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x002d|0x002d: ARITH  (r2 I:int A[D('mid' int)]) = (r0 I:int A[D('low' int)]) + (1 int)  (LINE:367)\l0x002f: NEG  (r2 I:int) = (r2 I:int) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0030|RETURN\l|0x0030: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.CollectionsKt__CollectionsKt.binarySearch((r5 I:java.util.List\<? extends T\> A[D('$this$binarySearch' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:T A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.Comparator\<? super T\> A[D('comparator' java.util.Comparator), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('fromIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('toIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x0024 \-\> B:22:0x0014, BACK_EDGE: B:27:0x0029 \-\> B:22:0x0014, CROSS_EDGE: B:30:0x0030 \-\> B:20:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x002d: r2 'mid' I\l  0x001e\-0x002d: r3 'midVal' Ljava\/lang\/Object;\l  0x0022\-0x002d: r4 'cmp' I\l  0x0012\-0x0030: r0 'low' I\l  0x0014\-0x0030: r1 'high' I\l  \-1 \-0x0030: r5 '$this$binarySearch' Ljava\/util\/List;\l  \-1 \-0x0030: r6 'element' Ljava\/lang\/Object;\l  \-1 \-0x0030: r7 'comparator' Ljava\/util\/Comparator;\l  \-1 \-0x0030: r8 'fromIndex' I\l  \-1 \-0x0030: r9 'toIndex' I\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/List\<+TT;\>;TT;Ljava\/util\/Comparator\<\-TT;\>;II)I\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_32;
Node_23 -> Node_24;
Node_24 -> Node_31;
Node_24 -> Node_33[style=dashed];
Node_31 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_34;
Node_27 -> Node_36;
Node_36 -> Node_35;
Node_35 -> Node_22;
Node_34 -> Node_28;
Node_28 -> Node_20;
Node_33 -> Node_25;
Node_25 -> Node_37;
Node_37 -> Node_35;
Node_32 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_20;
}

