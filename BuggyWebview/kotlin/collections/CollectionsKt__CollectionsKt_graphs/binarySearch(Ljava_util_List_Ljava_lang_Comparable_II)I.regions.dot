digraph "CFG forkotlin.collections.CollectionsKt__CollectionsKt.binarySearch(Ljava\/util\/List;Ljava\/lang\/Comparable;II)I" {
subgraph cluster_Region_416476750 {
label = "R(3:1|(2:3|(1:14)(1:(1:7)(1:11)))|18)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"\<this\>\")\lrangeCheck$CollectionsKt__CollectionsKt(r5.size(), r7, r8)\lint r0 = r7\lint int r1 = r8 \- 1\l}"];
subgraph cluster_LoopRegion_1875433933 {
label = "LOOP:0: (2:3|(1:14)(1:(1:7)(1:11)))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000f|LOOP_START\lLOOP:0: B:22:0x000f\-\>B:35:0x000f\lPHI: r0 r1 \l  PHI: (r0v3 'low' int) = (r0v2 'low' int), (r0v5 'low' int) binds: [B:21:0x0000, B:35:0x000f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'high' int) = (r1v0 'high' int), (r1v2 'high' int) binds: [B:21:0x0000, B:35:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \<= r1) goto L3\l}"];
subgraph cluster_Region_51793951 {
label = "R(2:3|(1:14)(1:(1:7)(1:11)))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0011|int int r2 = (r0 + r1) \>\>\> 1\ljava.lang.Comparable java.lang.Comparable r3 = r5.get(r2)\lint int r4 = kotlin.comparisons.ComparisonsKt.compareValues(r3, r6)\l}"];
subgraph cluster_IfRegion_1200041998 {
label = "IF [B:24:0x001f] THEN: R(1:14) ELSE: R(1:(1:7)(1:11))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x001f|if (r4 \< 0) goto L13\l}"];
subgraph cluster_Region_1552404123 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0021|int r0 = r2 + 1\l}"];
}
subgraph cluster_Region_137972783 {
label = "R(1:(1:7)(1:11)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1990202953 {
label = "IF [B:26:0x0024] THEN: R(1:7) ELSE: R(1:11) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0024|if (r4 \> 0) goto L7\l}"];
subgraph cluster_Region_205090477 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0026|int r1 = r2 \- 1\l}"];
}
subgraph cluster_Region_1856543399 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0029|RETURN\l|return r2\l}"];
}
}
}
}
}
}
Node_30 [shape=record,label="{30\:\ 0x002d|RETURN\l|return \-(r0 + 1)\l}"];
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0024|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x000f|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x000f|LOOP_END\lSYNTHETIC\lLOOP:0: B:22:0x000f\-\>B:35:0x000f\lPHI: r0 r1 \l  PHI: (r0v5 'low' int) = (r0v4 'low' int), (r0v3 'low' int) binds: [B:37:0x000f, B:36:0x000f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 'high' int) = (r1v1 'high' int), (r1v3 'high' int) binds: [B:37:0x000f, B:36:0x000f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0029|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0021|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x000f|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x002a|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x002a}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.CollectionsKt__CollectionsKt.binarySearch((r5v0 java.util.List\<? extends T extends java.lang.Comparable\<? super T\>\> A[D('$this$binarySearch' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 T extends java.lang.Comparable\<? super T\> A[D('element' java.lang.Comparable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'fromIndex' int A[D('fromIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'toIndex' int A[D('toIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x0021 \-\> B:22:0x000f, BACK_EDGE: B:27:0x0026 \-\> B:22:0x000f, CROSS_EDGE: B:30:0x002d \-\> B:20:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T extends java.lang.Comparable\<? super T\>]\lSIGNATURE: \<T::Ljava\/lang\/Comparable\<\-TT;\>;\>(Ljava\/util\/List\<+TT;\>;TT;II)I\l}"];
MethodNode -> Node_19;Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_31[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_32[style=dashed];
Node_24 -> Node_34;
Node_25 -> Node_37;
Node_26 -> Node_27;
Node_26 -> Node_33[style=dashed];
Node_27 -> Node_36;
Node_28 -> Node_20;
Node_30 -> Node_20;
Node_19 -> Node_21;
Node_32 -> Node_26;
Node_36 -> Node_35;
Node_35 -> Node_22;
Node_33 -> Node_28;
Node_34 -> Node_25;
Node_37 -> Node_35;
Node_31 -> Node_29;
Node_29 -> Node_30;
}

