digraph "CFG forkotlin.collections.AbstractList.lastIndexOf(Ljava\/lang\/Object;)I" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY])  (LINE:29)\l0x0001: CHECK_CAST (r0 I:java.util.List) = (java.util.List) (r0 I:??[OBJECT, ARRAY]) \l0x0003: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: INVOKE  (r2 I:int) = (r0 I:java.util.List A[D('$this$indexOfLast$iv' java.util.List)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:165)\l0x0008: INVOKE  (r2 I:java.util.ListIterator) = (r0 I:java.util.List A[D('$this$indexOfLast$iv' java.util.List)]), (r2 I:int) type: INTERFACE call: java.util.List.listIterator(int):java.util.ListIterator A[MD:(int):java.util.ListIterator\<E\> (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|LOOP_START\lLOOP:0: B:16:0x000c\-\>B:19:0x001b\l|0x000c: INVOKE  (r3 I:boolean) = (r2 I:java.util.ListIterator A[D('iterator$iv' java.util.ListIterator)]) type: INTERFACE call: java.util.ListIterator.hasPrevious():boolean A[MD:():boolean (c)] (LINE:166)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0010|0x0010: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0022 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|0x0012: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.ListIterator A[D('iterator$iv' java.util.ListIterator)]) type: INTERFACE call: java.util.ListIterator.previous():java.lang.Object A[MD:():E (c)] (LINE:167)\l0x0016: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: INVOKE  (r3 I:boolean A[D('it' java.lang.Object)]) = (r3 I:java.lang.Object A[D('it' java.lang.Object)]), (r6 I:java.lang.Object A[D('element' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)] (LINE:29)\l}"];
Node_19 [shape=record,label="{19\:\ 0x001b|LOOP_END\lLOOP:0: B:16:0x000c\-\>B:19:0x001b\l|0x001b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x000c \l}"];
Node_24 [shape=record,label="{24\:\ 0x001d|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x001d|0x001d: INVOKE  (r3 I:int) = (r2 I:java.util.ListIterator A[D('iterator$iv' java.util.ListIterator)]) type: INTERFACE call: java.util.ListIterator.nextIndex():int A[MD:():int (c)] (LINE:168)\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0023: RETURN  (r3 I:int) A[SYNTHETIC] (LINE:29)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0022|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: CONST  (r3 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:171)\l0x0023: RETURN  (r3 I:int)  (LINE:29)\l}"];
MethodNode[shape=record,label="{public int kotlin.collections.AbstractList.lastIndexOf((r5 'this' I:kotlin.collections.AbstractList\<E\> A[IMMUTABLE_TYPE, THIS]), (r6 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:19:0x001b \-\> B:16:0x000c, CROSS_EDGE: B:21:0x0022 \-\> B:22:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (TE;)I\lDebug Info:\l  0x0016\-0x001b: r3 'it' Ljava\/lang\/Object;\l  0x0017\-0x001b: r4 '$i$a$\-indexOfLast\-AbstractList$lastIndexOf$1' I\l  0x0003\-0x0023: r0 '$this$indexOfLast$iv' Ljava\/util\/List;\l  0x0004\-0x0023: r1 '$i$f$indexOfLast' I\l  0x000c\-0x0023: r2 'iterator$iv' Ljava\/util\/ListIterator;\l  \-1 \-0x0023: r6 'element' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [ClspMth\{java.util.List.lastIndexOf(java.lang.Object):int\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_16;
Node_19 -> Node_24[style=dashed];
Node_24 -> Node_20;
Node_20 -> Node_25;
Node_25 -> Node_14;
Node_23 -> Node_21;
Node_21 -> Node_14;
}

