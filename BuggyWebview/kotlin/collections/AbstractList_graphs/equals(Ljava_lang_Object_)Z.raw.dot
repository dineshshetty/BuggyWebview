digraph "CFG forkotlin.collections.AbstractList.equals(Ljava\/lang\/Object;)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('other' java.lang.Object)]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0004  (LINE:60)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|RETURN\l|0x0002: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0003: RETURN  (r0 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|0x0004: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)]) java.util.List  (LINE:61)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x000a \l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|RETURN\l|0x0008: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: RETURN  (r0 I:boolean) \l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|0x000a: SGET  (r0 I:kotlin.collections.AbstractList$Companion) =  kotlin.collections.AbstractList.Companion kotlin.collections.AbstractList$Companion  (LINE:63)\l0x000c: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x000d: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x000f: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)]) \l0x0010: CHECK_CAST (r2 I:java.util.Collection) = (java.util.Collection) (r2 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r0 I:boolean) = (r0 I:kotlin.collections.AbstractList$Companion), (r1 I:java.util.Collection), (r2 I:java.util.Collection) type: VIRTUAL call: kotlin.collections.AbstractList.Companion.orderedEquals$kotlin_stdlib(java.util.Collection, java.util.Collection):boolean A[MD:(java.util.Collection\<?\>, java.util.Collection\<?\>):boolean (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlin.collections.AbstractList.equals((r3 'this' I:kotlin.collections.AbstractList\<E\> A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.Object A[D('other' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:19:0x0009 \-\> B:12:?, CROSS_EDGE: B:21:0x0016 \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0016: r4 'other' Ljava\/lang\/Object;\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [ClspMth\{java.util.Collection.equals(java.lang.Object):boolean\}]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

