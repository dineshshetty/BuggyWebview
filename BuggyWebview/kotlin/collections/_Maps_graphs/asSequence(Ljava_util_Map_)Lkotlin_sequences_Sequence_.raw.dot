digraph "CFG forkotlin.collections.MapsKt___MapsKt.asSequence(Ljava\/util\/Map;)Lkotlin\/sequences\/Sequence;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$asSequence' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:java.util.Set) = (r1 I:java.util.Map A[D('$this$asSequence' java.util.Map)]) type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:585)\l0x0009: CHECK_CAST (r0 I:java.lang.Iterable) = (java.lang.Iterable) (r0 I:??[OBJECT, ARRAY]) \l0x000b: INVOKE  (r0 I:kotlin.sequences.Sequence) = (r0 I:java.lang.Iterable) type: STATIC call: kotlin.collections.CollectionsKt.asSequence(java.lang.Iterable):kotlin.sequences.Sequence A[MD:\<T\>:(java.lang.Iterable\<? extends T\>):kotlin.sequences.Sequence\<T\> (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:kotlin.sequences.Sequence\<java.util.Map$Entry\<K, V\>\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<java.util.Map$Entry\<K, V\>\> kotlin.collections.MapsKt___MapsKt.asSequence((r1 I:java.util.Map\<? extends K, ? extends V\> A[D('$this$asSequence' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000f: r1 '$this$asSequence' Ljava\/util\/Map;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/util\/Map\<+TK;+TV;\>;)Lkotlin\/sequences\/Sequence\<Ljava\/util\/Map$Entry\<TK;TV;\>;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

