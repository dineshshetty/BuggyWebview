digraph "CFG forkotlin.collections.MapsKt___MapsKt.toList(Ljava\/util\/Map;)Ljava\/util\/List;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|if (r6.size() != 0) goto L6\l}"];
Node_25 [shape=record,label="{25\:\ 0x000b}"];
Node_26 [shape=record,label="{26\:\ 0x000f|RETURN\l|return kotlin.collections.CollectionsKt.emptyList()\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|java.util.Iterator r0 = r6.entrySet().iterator()\l}"];
Node_28 [shape=record,label="{28\:\ 0x001c|if (r0.hasNext() != false) goto L10\l}"];
Node_29 [shape=record,label="{29\:\ 0x001e}"];
Node_30 [shape=record,label="{30\:\ 0x0022|RETURN\l|return kotlin.collections.CollectionsKt.emptyList()\l}"];
Node_31 [shape=record,label="{31\:\ 0x0023|java.util.Map$Entry r1 = r0.next()\l}"];
Node_32 [shape=record,label="{32\:\ 0x002d|if (r0.hasNext() != false) goto L14\l}"];
Node_33 [shape=record,label="{33\:\ 0x002f}"];
Node_34 [shape=record,label="{34\:\ 0x0040|RETURN\l|return kotlin.collections.CollectionsKt.listOf(new kotlin.Tuples(r1.getKey(), r1.getValue()))\l}"];
Node_35 [shape=record,label="{35\:\ 0x0041|java.util.ArrayList r2 = new java.util.ArrayList(r6.size())\lr2.add(new kotlin.Tuples(r1.getKey(), r1.getValue()))\l}"];
Node_36 [shape=record,label="{36\:\ 0x005a|LOOP_START\lLOOP:0: B:36:0x005a\-\>B:37:0x0074\l|java.util.Map$Entry r3 = r0.next()\lr2.add(new kotlin.Tuples(r3.getKey(), r3.getValue()))\l}"];
Node_37 [shape=record,label="{37\:\ 0x0074|LOOP_END\lLOOP:0: B:36:0x005a\-\>B:37:0x0074\l|if (r0.hasNext() != false) goto L15\l}"];
Node_41 [shape=record,label="{41\:\ 0x0076|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0076}"];
Node_39 [shape=record,label="{39\:\ 0x0079|RETURN\l|return r2\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<kotlin.Pair\<K, V\>\> kotlin.collections.MapsKt___MapsKt.toList((r6v0 java.util.Map\<? extends K, ? extends V\> A[D('$this$toList' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0022 \-\> B:22:?, CROSS_EDGE: B:34:0x0040 \-\> B:22:?, CROSS_EDGE: B:39:0x0079 \-\> B:22:?, BACK_EDGE: B:37:0x0074 \-\> B:36:0x005a\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/util\/Map\<+TK;+TV;\>;)Ljava\/util\/List\<Lkotlin\/Pair\<TK;TV;\>;\>;\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_22;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_22;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_34 -> Node_22;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_36;
Node_37 -> Node_41[style=dashed];
Node_41 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_22;
}

