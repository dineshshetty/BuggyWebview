digraph "CFG forkotlin.collections.MapsKt___MapsKt.toList(Ljava\/util\/Map;)Ljava\/util\/List;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$toList' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:int) = (r6 I:java.util.Map A[D('$this$toList' java.util.Map)]) type: INTERFACE call: java.util.Map.size():int A[MD:():int (c)] (LINE:54)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0010 \l}"];
Node_25 [shape=record,label="{25\:\ 0x000b|0x000b: INVOKE  (r0 I:java.util.List) =  type: STATIC call: kotlin.collections.CollectionsKt.emptyList():java.util.List A[MD:\<T\>:():java.util.List\<T\> (m)] (LINE:55)\l}"];
Node_26 [shape=record,label="{26\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:java.util.List\<kotlin.Pair\<K, V\>\>) \l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|0x0010: INVOKE  (r0 I:java.util.Set) = (r6 I:java.util.Map A[D('$this$toList' java.util.Map)]) type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:56)\l0x0014: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l0x0018: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:57)\l}"];
Node_28 [shape=record,label="{28\:\ 0x001c|0x001c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0023 \l}"];
Node_29 [shape=record,label="{29\:\ 0x001e|0x001e: INVOKE  (r1 I:java.util.List) =  type: STATIC call: kotlin.collections.CollectionsKt.emptyList():java.util.List A[MD:\<T\>:():java.util.List\<T\> (m)] (LINE:58)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0022|RETURN\l|0x0022: RETURN  (r1 I:java.util.List\<kotlin.Pair\<K, V\>\>) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0023|0x0023: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:59)\l0x0027: CHECK_CAST (r1 I:java.util.Map$Entry) = (java.util.Map$Entry) (r1 I:??[OBJECT, ARRAY]) \l0x0029: INVOKE  (r2 I:boolean) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:60)\l}"];
Node_32 [shape=record,label="{32\:\ 0x002d|0x002d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0041 \l}"];
Node_33 [shape=record,label="{33\:\ 0x002f|0x002f: NEW_INSTANCE  (r2 I:kotlin.Pair) =  kotlin.Pair  (LINE:61)\l0x0031: INVOKE  (r3 I:java.lang.Object) = (r1 I:java.util.Map$Entry A[D('first' java.util.Map$Entry)]) type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)]\l0x0035: INVOKE  (r4 I:java.lang.Object) = (r1 I:java.util.Map$Entry A[D('first' java.util.Map$Entry)]) type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)]\l0x0039: INVOKE  (r2 I:kotlin.Pair), (r3 I:java.lang.Object), (r4 I:java.lang.Object) type: DIRECT call: kotlin.Pair.\<init\>(java.lang.Object, java.lang.Object):void A[MD:(A, B):void (m)]\l0x003c: INVOKE  (r2 I:java.util.List) = (r2 I:java.lang.Object) type: STATIC call: kotlin.collections.CollectionsKt.listOf(java.lang.Object):java.util.List A[MD:\<T\>:(T):java.util.List\<T\> (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0040|RETURN\l|0x0040: RETURN  (r2 I:java.util.List\<kotlin.Pair\<K, V\>\>) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0041|0x0041: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:62)\l0x0043: INVOKE  (r3 I:int) = (r6 I:java.util.Map A[D('$this$toList' java.util.Map)]) type: INTERFACE call: java.util.Map.size():int A[MD:():int (c)]\l0x0047: INVOKE  (r2 I:java.util.ArrayList), (r3 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x004a: NEW_INSTANCE  (r3 I:kotlin.Pair) =  kotlin.Pair  (LINE:63)\l0x004c: INVOKE  (r4 I:java.lang.Object) = (r1 I:java.util.Map$Entry A[D('first' java.util.Map$Entry)]) type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)]\l0x0050: INVOKE  (r5 I:java.lang.Object) = (r1 I:java.util.Map$Entry A[D('first' java.util.Map$Entry)]) type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)]\l0x0054: INVOKE  (r3 I:kotlin.Pair), (r4 I:java.lang.Object), (r5 I:java.lang.Object) type: DIRECT call: kotlin.Pair.\<init\>(java.lang.Object, java.lang.Object):void A[MD:(A, B):void (m)]\l0x0057: INVOKE  (r2 I:java.util.ArrayList A[D('result' java.util.ArrayList)]), (r3 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x005a|LOOP_START\lLOOP:0: B:36:0x005a\-\>B:37:0x0074\l|0x005a: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:65)\l0x005e: CHECK_CAST (r3 I:java.util.Map$Entry) = (java.util.Map$Entry) (r3 I:??[OBJECT, ARRAY]) \l0x0060: NEW_INSTANCE  (r4 I:kotlin.Pair) =  kotlin.Pair \l0x0062: INVOKE  (r5 I:java.lang.Object) = (r3 I:java.util.Map$Entry) type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)]\l0x0066: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.Map$Entry) type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)]\l0x006a: INVOKE  (r4 I:kotlin.Pair), (r5 I:java.lang.Object), (r3 I:java.lang.Object) type: DIRECT call: kotlin.Pair.\<init\>(java.lang.Object, java.lang.Object):void A[MD:(A, B):void (m)]\l0x006d: INVOKE  (r2 I:java.util.ArrayList A[D('result' java.util.ArrayList)]), (r4 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0070: INVOKE  (r3 I:boolean) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:66)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0074|LOOP_END\lLOOP:0: B:36:0x005a\-\>B:37:0x0074\l|0x0074: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x005a \l}"];
Node_41 [shape=record,label="{41\:\ 0x0076|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0076|0x0076: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('result' java.util.ArrayList)])  (LINE:67)\l0x0077: CHECK_CAST (r3 I:java.util.List) = (java.util.List) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0079|RETURN\l|0x0079: RETURN  (r3 I:java.util.List\<kotlin.Pair\<K, V\>\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<kotlin.Pair\<K, V\>\> kotlin.collections.MapsKt___MapsKt.toList((r6 I:java.util.Map\<? extends K, ? extends V\> A[D('$this$toList' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0022 \-\> B:22:?, CROSS_EDGE: B:34:0x0040 \-\> B:22:?, CROSS_EDGE: B:39:0x0079 \-\> B:22:?, BACK_EDGE: B:37:0x0074 \-\> B:36:0x005a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0018\-0x007a: r0 'iterator' Ljava\/util\/Iterator;\l  0x0029\-0x007a: r1 'first' Ljava\/util\/Map$Entry;\l  0x004a\-0x007a: r2 'result' Ljava\/util\/ArrayList;\l  \-1 \-0x007a: r6 '$this$toList' Ljava\/util\/Map;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/util\/Map\<+TK;+TV;\>;)Ljava\/util\/List\<Lkotlin\/Pair\<TK;TV;\>;\>;\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_22;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_22;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_34 -> Node_22;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_36;
Node_37 -> Node_41[style=dashed];
Node_41 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_22;
}

