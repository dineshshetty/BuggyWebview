digraph "CFG forkotlin.collections.MapsKt___MapsKt.flatMap(Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('$this$flatMap' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r8 I:java.lang.Object A[D('transform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:76)\l0x000d: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0010: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x0012: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$flatMap' java.util.Map)]) \l0x0013: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: INVOKE  (r4 I:java.util.Set) = (r2 I:java.util.Map A[D('$this$flatMapTo$iv' java.util.Map)]) type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:589)\l0x0018: INVOKE  (r4 I:java.util.Iterator) = (r4 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|LOOP_START\lLOOP:0: B:12:0x001c\-\>B:14:0x0022\l|0x001c: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|0x0020: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0032 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0022|LOOP_END\lLOOP:0: B:12:0x001c\-\>B:14:0x0022\l|0x0022: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0026: CHECK_CAST (r5 I:java.util.Map$Entry) = (java.util.Map$Entry) (r5 I:??[OBJECT, ARRAY]) \l0x0028: INVOKE  (r6 I:java.lang.Object) = \l  (r8 I:kotlin.jvm.functions.Function1 A[D('transform' kotlin.jvm.functions.Function1)])\l  (r5 I:java.lang.Object A[D('element$iv' java.util.Map$Entry)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:590)\l0x002c: CHECK_CAST (r6 I:java.lang.Iterable) = (java.lang.Iterable) (r6 I:??[OBJECT, ARRAY]) \l0x002e: INVOKE  \l  (r1 I:java.util.Collection A[D('destination$iv' java.util.Collection)])\l  (r6 I:java.lang.Iterable A[D('list$iv' java.lang.Iterable)])\l type: STATIC call: kotlin.collections.CollectionsKt.addAll(java.util.Collection, java.lang.Iterable):boolean A[MD:\<T\>:(java.util.Collection\<? super T\>, java.lang.Iterable\<? extends T\>):boolean (m)] (LINE:591)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0032|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0032|0x0033: CHECK_CAST (r1 I:java.util.List) = (java.util.List) (r1 I:??[OBJECT, ARRAY] A[D('destination$iv' java.util.Collection)]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|RETURN\l|0x0035: RETURN  (r1 I:java.util.List\<R\>)  (LINE:76)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.collections.MapsKt___MapsKt.flatMap((r7 I:java.util.Map\<? extends K, ? extends V\> A[D('$this$flatMap' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function1\<? super java.util.Map$Entry\<? extends K, ? extends V\>, ? extends java.lang.Iterable\<? extends R\>\> A[D('transform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x0022 \-\> B:12:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0028\-0x0032: r5 'element$iv' Ljava\/util\/Map$Entry;\l  0x002e\-0x0032: r6 'list$iv' Ljava\/lang\/Iterable;\l  0x0012\-0x0033: r1 'destination$iv' Ljava\/util\/Collection;\l  0x0013\-0x0033: r2 '$this$flatMapTo$iv' Ljava\/util\/Map;\l  0x0014\-0x0033: r3 '$i$f$flatMapTo' I\l  0x000b\-0x0035: r0 '$i$f$flatMap' I\l  \-1 \-0x0035: r7 '$this$flatMap' Ljava\/util\/Map;\l  \-1 \-0x0035: r8 'transform' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R, V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Ljava\/util\/Map\<+TK;+TV;\>;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/util\/Map$Entry\<+TK;+TV;\>;+Ljava\/lang\/Iterable\<+TR;\>;\>;)Ljava\/util\/List\<TR;\>;\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_12;
Node_17 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_10;
}

