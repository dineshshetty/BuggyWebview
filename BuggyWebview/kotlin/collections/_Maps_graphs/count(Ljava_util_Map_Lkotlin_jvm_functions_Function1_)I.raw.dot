digraph "CFG forkotlin.collections.MapsKt___MapsKt.count(Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function1;)I" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$count' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:boolean) = (r5 I:java.util.Map A[D('$this$count' java.util.Map)]) type: INTERFACE call: java.util.Map.isEmpty():boolean A[MD:():boolean (c)] (LINE:200)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0013 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|RETURN\l|0x0011: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: RETURN  (r1 I:int) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|0x0013: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:201)\l0x0014: INVOKE  (r2 I:java.util.Set) = (r5 I:java.util.Map A[D('$this$count' java.util.Map)]) type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:202)\l0x0018: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x001c|LOOP_START\lLOOP:0: B:25:0x001c\-\>B:33:0x001c\l|0x001c: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|0x0020: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0037 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0022|0x0022: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0026: CHECK_CAST (r3 I:java.util.Map$Entry) = (java.util.Map$Entry) (r3 I:??[OBJECT, ARRAY]) \l0x0028: INVOKE  (r4 I:java.lang.Object) = \l  (r6 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)])\l  (r3 I:java.lang.Object A[D('element' java.util.Map$Entry)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x002c: CHECK_CAST (r4 I:java.lang.Boolean) = (java.lang.Boolean) (r4 I:??[OBJECT, ARRAY]) \l0x002e: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0032|0x0032: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x001c \l}"];
Node_32 [shape=record,label="{32\:\ 0x0034|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0034|0x0034: ARITH  (r1 I:int) = (r1 I:int A[D('count' int)]) + (1 int) \l}"];
Node_35 [shape=record,label="{35\:\ 0x001c|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x001c|LOOP_END\lSYNTHETIC\lLOOP:0: B:25:0x001c\-\>B:33:0x001c\l}"];
Node_34 [shape=record,label="{34\:\ 0x001c|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0037|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0037|RETURN\l|0x0037: RETURN  (r1 I:int A[D('count' int)])  (LINE:203)\l}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.MapsKt___MapsKt.count((r5 I:java.util.Map\<? extends K, ? extends V\> A[D('$this$count' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function1\<? super java.util.Map$Entry\<? extends K, ? extends V\>, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0032 \-\> B:25:0x001c, BACK_EDGE: B:29:0x0034 \-\> B:25:0x001c, CROSS_EDGE: B:30:0x0037 \-\> B:19:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0028\-0x0034: r3 'element' Ljava\/util\/Map$Entry;\l  0x000b\-0x0037: r0 '$i$f$count' I\l  0x0014\-0x0037: r1 'count' I\l  \-1 \-0x0037: r5 '$this$count' Ljava\/util\/Map;\l  \-1 \-0x0037: r6 'predicate' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/util\/Map\<+TK;+TV;\>;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/util\/Map$Entry\<+TK;+TV;\>;Ljava\/lang\/Boolean;\>;)I\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_31;
Node_27 -> Node_28;
Node_28 -> Node_32[style=dashed];
Node_28 -> Node_34;
Node_32 -> Node_29;
Node_29 -> Node_35;
Node_35 -> Node_33;
Node_33 -> Node_25;
Node_34 -> Node_33;
Node_31 -> Node_30;
Node_30 -> Node_19;
}

