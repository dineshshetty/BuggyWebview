digraph "CFG forkotlin.collections.MapsKt___MapsKt.none(Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function1;)Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$none' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:boolean) = (r5 I:java.util.Map A[D('$this$none' java.util.Map)]) type: INTERFACE call: java.util.Map.isEmpty():boolean A[MD:():boolean (c)] (LINE:549)\l0x000f: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0013 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|RETURN\l|0x0012: RETURN  (r2 I:boolean) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|0x0013: INVOKE  (r1 I:java.util.Set) = (r5 I:java.util.Map A[D('$this$none' java.util.Map)]) type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:550)\l0x0017: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001b|LOOP_START\lLOOP:0: B:21:0x001b\-\>B:24:0x0031\l|0x001b: INVOKE  (r3 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x001f|0x001f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0035 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0021|0x0021: INVOKE  (r3 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0025: CHECK_CAST (r3 I:java.util.Map$Entry) = (java.util.Map$Entry) (r3 I:??[OBJECT, ARRAY]) \l0x0027: INVOKE  (r4 I:java.lang.Object) = \l  (r6 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)])\l  (r3 I:java.lang.Object A[D('element' java.util.Map$Entry)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x002b: CHECK_CAST (r4 I:java.lang.Boolean) = (java.lang.Boolean) (r4 I:??[OBJECT, ARRAY]) \l0x002d: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0031|LOOP_END\lLOOP:0: B:21:0x001b\-\>B:24:0x0031\l|0x0031: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x001b \l}"];
Node_28 [shape=record,label="{28\:\ 0x0033|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0033|RETURN\l|0x0033: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0034: RETURN  (r1 I:boolean) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0035|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0035|RETURN\l|0x0035: RETURN  (r2 I:boolean)  (LINE:551)\l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.collections.MapsKt___MapsKt.none((r5 I:java.util.Map\<? extends K, ? extends V\> A[D('$this$none' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function1\<? super java.util.Map$Entry\<? extends K, ? extends V\>, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x0031 \-\> B:21:0x001b, CROSS_EDGE: B:26:0x0034 \-\> B:16:?, CROSS_EDGE: B:27:0x0035 \-\> B:16:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0027\-0x0035: r3 'element' Ljava\/util\/Map$Entry;\l  0x000b\-0x0035: r0 '$i$f$none' I\l  \-1 \-0x0035: r5 '$this$none' Ljava\/util\/Map;\l  \-1 \-0x0035: r6 'predicate' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/util\/Map\<+TK;+TV;\>;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/util\/Map$Entry\<+TK;+TV;\>;Ljava\/lang\/Boolean;\>;)Z\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_29;
Node_23 -> Node_24;
Node_24 -> Node_21;
Node_24 -> Node_28[style=dashed];
Node_28 -> Node_25;
Node_25 -> Node_16;
Node_29 -> Node_27;
Node_27 -> Node_16;
}

