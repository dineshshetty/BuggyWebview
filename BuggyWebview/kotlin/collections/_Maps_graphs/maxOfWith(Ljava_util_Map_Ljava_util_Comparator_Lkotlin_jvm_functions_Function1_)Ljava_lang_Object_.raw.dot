digraph "CFG forkotlin.collections.MapsKt___MapsKt.maxOfWith(Ljava\/util\/Map;Ljava\/util\/Comparator;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$maxOfWith' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"comparator\" \l0x0007: INVOKE  (r5 I:java.lang.Object A[D('comparator' java.util.Comparator)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x000c: INVOKE  (r6 I:java.lang.Object A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: INVOKE  (r0 I:java.util.Set) = (r4 I:java.util.Map A[D('$this$maxOfWith' java.util.Map)]) type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:337)\l0x0013: CHECK_CAST (r0 I:java.lang.Iterable) = (java.lang.Iterable) (r0 I:??[OBJECT, ARRAY]) \l0x0015: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.lang.Iterable) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)]\l0x0019: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001d|0x001d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x003e \l}"];
Node_22 [shape=record,label="{22\:\ 0x001f|0x001f: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0023: INVOKE  (r1 I:java.lang.Object) = (r6 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r1 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0027|LOOP_START\lLOOP:0: B:23:0x0027\-\>B:33:0x0027\l|0x0027: INVOKE  (r2 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x002b|0x002b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x003d \l}"];
Node_25 [shape=record,label="{25\:\ 0x002d|0x002d: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0031: INVOKE  (r2 I:java.lang.Object) = (r6 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r2 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0035: INVOKE  (r3 I:int) = (r5 I:java.util.Comparator A[D('comparator' java.util.Comparator)]), (r1 I:java.lang.Object), (r2 I:java.lang.Object) type: INTERFACE call: java.util.Comparator.compare(java.lang.Object, java.lang.Object):int A[MD:(T, T):int (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0039|0x0039: IF  (r3 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:34:0x0027 \l}"];
Node_31 [shape=record,label="{31\:\ 0x003b|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x003b|0x003b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0027|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0027|LOOP_END\lSYNTHETIC\lLOOP:0: B:23:0x0027\-\>B:33:0x0027\l}"];
Node_34 [shape=record,label="{34\:\ 0x0027|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x003d|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x003d|RETURN\l|0x003d: RETURN  (r1 I:R) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x003e|0x003e: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException \l0x0040: INVOKE  (r0 I:java.util.NoSuchElementException) type: DIRECT call: java.util.NoSuchElementException.\<init\>():void A[MD:():void (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0043|0x0043: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static final R kotlin.collections.MapsKt___MapsKt.maxOfWith((r4 I:java.util.Map\<? extends K, ? extends V\> A[D('$this$maxOfWith' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.util.Comparator\<? super R\> A[D('comparator' java.util.Comparator), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function1\<? super java.util.Map$Entry\<? extends K, ? extends V\>, ? extends R\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x0039 \-\> B:23:0x0027, BACK_EDGE: B:27:0x003b \-\> B:23:0x0027, CROSS_EDGE: B:30:0x0043 \-\> B:19:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0043: r4 '$this$maxOfWith' Ljava\/util\/Map;\l  \-1 \-0x0043: r5 'comparator' Ljava\/util\/Comparator;\l  \-1 \-0x0043: r6 'selector' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [R, V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Ljava\/util\/Map\<+TK;+TV;\>;Ljava\/util\/Comparator\<\-TR;\>;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/util\/Map$Entry\<+TK;+TV;\>;+TR;\>;)TR;\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_32;
Node_25 -> Node_26;
Node_26 -> Node_31[style=dashed];
Node_26 -> Node_34;
Node_31 -> Node_27;
Node_27 -> Node_35;
Node_35 -> Node_33;
Node_33 -> Node_23;
Node_34 -> Node_33;
Node_32 -> Node_28;
Node_28 -> Node_19;
Node_29 -> Node_30;
Node_30 -> Node_19;
}

