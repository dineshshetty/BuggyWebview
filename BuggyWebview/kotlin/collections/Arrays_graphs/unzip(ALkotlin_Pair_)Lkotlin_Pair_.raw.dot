digraph "CFG forkotlin.collections.ArraysKt__ArraysKt.unzip([Lkotlin\/Pair;)Lkotlin\/Pair;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$unzip' kotlin.Pair[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:34)\l0x0007: ARRAY_LENGTH  (r1 I:int) = (r6 I:??[] A[D('$this$unzip' kotlin.Pair[])]) \l0x0008: INVOKE  (r0 I:java.util.ArrayList), (r1 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:35)\l0x000d: ARRAY_LENGTH  (r2 I:int) = (r6 I:??[] A[D('$this$unzip' kotlin.Pair[])]) \l0x000e: INVOKE  (r1 I:java.util.ArrayList), (r2 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0011: ARRAY_LENGTH  (r2 I:int) = (r6 I:??[] A[D('$this$unzip' kotlin.Pair[])])  (LINE:36)\l0x0012: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|LOOP_START\lLOOP:0: B:3:0x0013\-\>B:4:0x0015\l|0x0013: IF  (r3 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:7:0x0028 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|LOOP_END\lLOOP:0: B:3:0x0013\-\>B:4:0x0015\l|0x0015: AGET  (r4 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY][] A[D('$this$unzip' kotlin.Pair[])]), (r3 I:??[int, short, byte, char]) \l0x0017: INVOKE  (r5 I:java.lang.Object) = (r4 I:kotlin.Pair A[D('pair' kotlin.Pair)]) type: VIRTUAL call: kotlin.Pair.getFirst():java.lang.Object A[MD:():A (m)] (LINE:37)\l0x001b: INVOKE  (r0 I:java.util.ArrayList A[D('listT' java.util.ArrayList)]), (r5 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x001e: INVOKE  (r5 I:java.lang.Object) = (r4 I:kotlin.Pair A[D('pair' kotlin.Pair)]) type: VIRTUAL call: kotlin.Pair.getSecond():java.lang.Object A[MD:():B (m)] (LINE:38)\l0x0022: INVOKE  (r1 I:java.util.ArrayList A[D('listR' java.util.ArrayList)]), (r5 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0025: ARITH  (r3 I:int) = (r3 I:int) + (1 int)  (LINE:36)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|SYNTHETIC\l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|0x0028: INVOKE  (r2 I:kotlin.Pair) = (r0 I:java.lang.Object A[D('listT' java.util.ArrayList)]), (r1 I:java.lang.Object A[D('listR' java.util.ArrayList)]) type: STATIC call: kotlin.TuplesKt.to(java.lang.Object, java.lang.Object):kotlin.Pair A[MD:\<A, B\>:(A, B):kotlin.Pair\<A, B\> (m)] (LINE:40)\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|RETURN\l|0x002c: RETURN  (r2 I:kotlin.Pair\<java.util.List\<T\>, java.util.List\<R\>\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.Pair\<java.util.List\<T\>, java.util.List\<R\>\> kotlin.collections.ArraysKt__ArraysKt.unzip((r6 I:kotlin.Pair\<? extends T, ? extends R\>[] A[D('$this$unzip' kotlin.Pair[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:4:0x0015 \-\> B:3:0x0013\lDebug Info:\l  0x0017\-0x0028: r4 'pair' Lkotlin\/Pair;\l  0x000b\-0x002c: r0 'listT' Ljava\/util\/ArrayList;\l  0x0011\-0x002c: r1 'listR' Ljava\/util\/ArrayList;\l  \-1 \-0x002c: r6 '$this$unzip' [Lkotlin\/Pair;\lTYPE_VARS: [R, T]\lSIGNATURE: \<T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>([Lkotlin\/Pair\<+TT;+TR;\>;)Lkotlin\/Pair\<Ljava\/util\/List\<TT;\>;Ljava\/util\/List\<TR;\>;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_3;
Node_7 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

