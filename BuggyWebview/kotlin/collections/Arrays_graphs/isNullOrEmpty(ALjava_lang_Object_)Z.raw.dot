digraph "CFG forkotlin.collections.ArraysKt__ArraysKt.isNullOrEmpty([Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0001|0x0001: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:54)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$isNullOrEmpty' java.lang.Object[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x000d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: ARRAY_LENGTH  (r2 I:int) = (r3 I:??[] A[D('$this$isNullOrEmpty' java.lang.Object[])]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:? \l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|0x000e: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x000d|RETURN\lORIG_RETURN\l|0x000d: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000e: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private static final boolean kotlin.collections.ArraysKt__ArraysKt.isNullOrEmpty((r3 I:java.lang.Object[] A[D('$this$isNullOrEmpty' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x000b \-\> B:10:0x000e, CROSS_EDGE: B:7:0x000a \-\> B:8:0x000b, CROSS_EDGE: B:3:0x0003 \-\> B:9:0x000d\lDebug Info:\l  \-1 \-0x000e: r3 '$this$isNullOrEmpty' [Ljava\/lang\/Object;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_11 -> Node_1;
Node_7 -> Node_8;
Node_9 -> Node_1;
}

