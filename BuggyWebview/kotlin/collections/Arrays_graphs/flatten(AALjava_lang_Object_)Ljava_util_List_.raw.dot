digraph "CFG forkotlin.collections.ArraysKt__ArraysKt.flatten([[Ljava\/lang\/Object;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('$this$flatten' java.lang.Object[][])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$flatten' java.lang.Object[][])])  (LINE:20)\l0x0006: CHECK_CAST (r0 I:java.lang.Object[]) = (java.lang.Object[]) (r0 I:??[OBJECT, ARRAY]) \l0x0008: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[]) \l0x0009: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|LOOP_START\lLOOP:0: B:3:0x000c\-\>B:4:0x000e\l|0x000c: IF  (r3 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:10:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|LOOP_END\lLOOP:0: B:3:0x000c\-\>B:4:0x000e\l|0x000e: AGET  (r5 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x0010: CHECK_CAST (r5 I:java.lang.Object[]) = (java.lang.Object[]) (r5 I:??[OBJECT, ARRAY]) \l0x0013: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: ARRAY_LENGTH  (r5 I:int) = (r5 I:??[] A[D('it' java.lang.Object[])])  (LINE:20)\l0x0015: ARITH  (r4 I:int) = (r4 I:int) + (r5 I:int A[D('it' java.lang.Object[])]) \l0x0016: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|SYNTHETIC\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x001b: INVOKE  (r0 I:java.util.ArrayList), (r4 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x001e: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$flatten' java.lang.Object[][])])  (LINE:21)\l0x001f: CHECK_CAST (r1 I:java.lang.Object[]) = (java.lang.Object[]) (r1 I:??[OBJECT, ARRAY]) \l0x0021: ARRAY_LENGTH  (r1 I:int) = (r1 I:??[]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|LOOP_START\lLOOP:1: B:6:0x0022\-\>B:7:0x0024\l|0x0022: IF  (r2 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:11:0x002f \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|LOOP_END\lLOOP:1: B:6:0x0022\-\>B:7:0x0024\l|0x0024: AGET  (r3 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][] A[D('$this$flatten' java.lang.Object[][])]), (r2 I:??[int, short, byte, char]) \l0x0026: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.util.ArrayList)])  (LINE:22)\l0x0027: CHECK_CAST (r4 I:java.util.Collection) = (java.util.Collection) (r4 I:??[OBJECT, ARRAY]) \l0x0029: INVOKE  (r4 I:java.util.Collection), (r3 I:java.lang.Object[] A[D('element' java.lang.Object[])]) type: STATIC call: kotlin.collections.CollectionsKt.addAll(java.util.Collection, java.lang.Object[]):boolean A[MD:\<T\>:(java.util.Collection\<? super T\>, T[]):boolean (m)]\l0x002c: ARITH  (r2 I:int) = (r2 I:int) + (1 int)  (LINE:21)\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.util.ArrayList)])  (LINE:24)\l0x0030: CHECK_CAST (r1 I:java.util.List) = (java.util.List) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|RETURN\l|0x0032: RETURN  (r1 I:java.util.List\<T\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.ArraysKt__ArraysKt.flatten((r7 I:T[][] A[D('$this$flatten' java.lang.Object[][]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:4:0x000e \-\> B:3:0x000c, BACK_EDGE: B:7:0x0024 \-\> B:6:0x0022\lDebug Info:\l  0x0013\-0x0015: r5 'it' [Ljava\/lang\/Object;\l  0x0014\-0x0015: r6 '$i$a$\-sumOfInt\-ArraysKt__ArraysKt$flatten$result$1' I\l  0x0026\-0x002f: r3 'element' [Ljava\/lang\/Object;\l  0x001e\-0x0032: r0 'result' Ljava\/util\/ArrayList;\l  \-1 \-0x0032: r7 '$this$flatten' [[Ljava\/lang\/Object;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([[TT;)Ljava\/util\/List\<TT;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_3;
Node_10 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_6;
Node_11 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

