digraph "CFG forkotlin.collections.AbstractIterator.hasNext()Z" {
subgraph cluster_Region_516334646 {
label = "R(1:(2:(1:13)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_676040248 {
label = "R(2:(1:13)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1256051785 {
label = "IF [B:23:0x000b] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000b|PHI: r0 \l  PHI: (r0v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r4.state != kotlin.collections.State.Failed) == false) goto L12\l}"];
subgraph cluster_Region_724842894 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x002d|throw new java.lang.IllegalArgumentException(\"Failed requirement.\".toString())\l}"];
}
}
subgraph cluster_Region_7921610 {
label = "R(1:6)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_1958128563 {
label = "Switch: 3
 case 1 -> R(1:10)
 case 2 -> R(1:11)
 case default -> R(1:8)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0017|switch(kotlin.collections.AbstractIterator.WhenMappings.$EnumSwitchMapping$0[r4.state.ordinal()]) \{\l    case 1: goto L10;\l    case 2: goto L11;\l    default: goto L7;\l\}\l}"];
subgraph cluster_Region_1357731568 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0020|RETURN\lORIG_RETURN\l|return false\l}"];
}
subgraph cluster_Region_1512045866 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
subgraph cluster_Region_476049196 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return tryToComputeNext()\l}"];
}
}
}
}
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0000}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0006}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0008}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x000d}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x001a}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0022}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x000a}"];
MethodNode[shape=record,label="{public boolean kotlin.collections.AbstractIterator.hasNext((r4v0 'this' kotlin.collections.AbstractIterator\<T\> A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:28:0x0020 \-\> B:29:0x0021, CROSS_EDGE: B:25:0x0017 \-\> B:29:0x0021, CROSS_EDGE: B:31:0x002d \-\> B:18:?, CROSS_EDGE: B:22:0x000a \-\> B:23:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lMETHOD_OVERRIDE: [ClspMth\{java.util.Iterator.hasNext():boolean\}]\l}"];
MethodNode -> Node_17;Node_23 -> Node_24[style=dashed];
Node_23 -> Node_30;
Node_31 -> Node_18;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_25 -> Node_33;
Node_28 -> Node_18;
Node_33 -> Node_18;
Node_32 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_24 -> Node_25;
Node_26 -> Node_32;
Node_30 -> Node_31;
Node_22 -> Node_23;
}

