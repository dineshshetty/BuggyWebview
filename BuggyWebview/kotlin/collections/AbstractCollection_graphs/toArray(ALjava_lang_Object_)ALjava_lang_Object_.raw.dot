digraph "CFG forkotlin.collections.AbstractCollection.toArray([Ljava\/lang\/Object;)[Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"array\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('array' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY])  (LINE:40)\l0x0006: CHECK_CAST (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  (r0 I:java.lang.Object[]) = (r0 I:java.util.Collection), (r3 I:java.lang.Object[] A[D('array' java.lang.Object[])]) type: STATIC call: kotlin.jvm.internal.CollectionToArray.toArray(java.util.Collection, java.lang.Object[]):java.lang.Object[] A[MD:(java.util.Collection\<?\>, java.lang.Object[]):java.lang.Object[] (m)]\l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlin.Array\<T of kotlin.collections.CollectionsKt__CollectionsJVMKt.copyToArrayImpl\>\" \l0x000e: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:T[]) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public T[] kotlin.collections.AbstractCollection.toArray((r2 'this' I:kotlin.collections.AbstractCollection\<E\> A[IMMUTABLE_TYPE, THIS]), (r3 I:T[] A[D('array' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0011: r3 'array' [Ljava\/lang\/Object;\lTYPE_VARS: [T, E]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;)[TT;\lMETHOD_OVERRIDE: [ClspMth\{\<T\> java.util.Collection.toArray(T[]):T[]\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

