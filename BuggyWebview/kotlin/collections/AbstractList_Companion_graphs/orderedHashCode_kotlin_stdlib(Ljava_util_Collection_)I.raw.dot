digraph "CFG forkotlin.collections.AbstractList.Companion.orderedHashCode$kotlin_stdlib(Ljava\/util\/Collection;)I" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"c\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('c' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:137)\l0x0006: INVOKE  (r1 I:java.util.Iterator) = (r6 I:java.util.Collection A[D('c' java.util.Collection)]) type: INTERFACE call: java.util.Collection.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:138)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|LOOP_START\lLOOP:0: B:17:0x000a\-\>B:23:0x001e\l|0x000a: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0021 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0014: ARITH  (r3 I:int) = (r0 I:int A[D('hashCode' int)]) * (31 int)  (LINE:139)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|0x0016: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('e' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x001d \l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|0x0018: INVOKE  (r4 I:int) = (r2 I:java.lang.Object A[D('e' java.lang.Object)]) type: VIRTUAL call: java.lang.Object.hashCode():int A[MD:():int (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x001e|LOOP_END\lLOOP:0: B:17:0x000a\-\>B:23:0x001e\l|0x001e: ARITH  (r0 I:int A[D('hashCode' int)]) = (r3 I:int) + (r4 I:int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x001d|0x001d: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x001e|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0021|RETURN\l|0x0021: RETURN  (r0 I:int A[D('hashCode' int)])  (LINE:141)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final int kotlin.collections.AbstractList.Companion.orderedHashCode$kotlin_stdlib((r5 'this' I:kotlin.collections.AbstractList$Companion A[IMMUTABLE_TYPE, THIS]), (r6 I:java.util.Collection\<?\> A[D('c' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x001e \-\> B:17:0x000a, CROSS_EDGE: B:22:0x001d \-\> B:23:0x001e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x0020: r2 'e' Ljava\/lang\/Object;\l  0x0006\-0x0021: r0 'hashCode' I\l  \-1 \-0x0021: r6 'c' Ljava\/util\/Collection;\lSIGNATURE: (Ljava\/util\/Collection\<*\>;)I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_27;
Node_27 -> Node_23;
Node_23 -> Node_17;
Node_22 -> Node_26;
Node_26 -> Node_23;
Node_25 -> Node_24;
Node_24 -> Node_15;
}

