digraph "CFG forkotlin.collections.MapsKt__MapsKt.mapOf([Lkotlin\/Pair;)Ljava\/util\/Map;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"pairs\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('pairs' kotlin.Pair[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: ARRAY_LENGTH  (r0 I:int) = (r2 I:??[] A[D('pairs' kotlin.Pair[])])  (LINE:55)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|0x0006: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:13:0x0019 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|0x0008: NEW_INSTANCE  (r0 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x000a: ARRAY_LENGTH  (r1 I:int) = (r2 I:??[] A[D('pairs' kotlin.Pair[])]) \l0x000b: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: kotlin.collections.MapsKt.mapCapacity(int):int A[MD:(int):int (m)]\l0x000f: INVOKE  (r0 I:java.util.LinkedHashMap), (r1 I:int) type: DIRECT call: java.util.LinkedHashMap.\<init\>(int):void A[MD:(int):void (c)]\l0x0012: CHECK_CAST (r0 I:java.util.Map) = (java.util.Map) (r0 I:??[OBJECT, ARRAY]) \l0x0014: INVOKE  (r0 I:java.util.Map) = (r2 I:kotlin.Pair[] A[D('pairs' kotlin.Pair[])]), (r0 I:java.util.Map) type: STATIC call: kotlin.collections.MapsKt.toMap(kotlin.Pair[], java.util.Map):java.util.Map A[MD:\<K, V, M extends java.util.Map\<? super K, ? super V\>\>:(kotlin.Pair\<? extends K, ? extends V\>[], M extends java.util.Map\<? super K, ? super V\>):M extends java.util.Map\<? super K, ? super V\> (m)]\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x001d: RETURN  (r0 I:java.util.Map\<K, V\>) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0019|0x0019: INVOKE  (r0 I:java.util.Map) =  type: STATIC call: kotlin.collections.MapsKt.emptyMap():java.util.Map A[MD:\<K, V\>:():java.util.Map\<K, V\> (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x001d|RETURN\lORIG_RETURN\l|0x001d: RETURN  (r0 I:java.util.Map\<K, V\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.MapsKt__MapsKt.mapOf((r2 I:kotlin.Pair\<? extends K, ? extends V\>[] A[D('pairs' kotlin.Pair[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0019 \-\> B:14:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001d: r2 'pairs' [Lkotlin\/Pair;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>([Lkotlin\/Pair\<+TK;+TV;\>;)Ljava\/util\/Map\<TK;TV;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

