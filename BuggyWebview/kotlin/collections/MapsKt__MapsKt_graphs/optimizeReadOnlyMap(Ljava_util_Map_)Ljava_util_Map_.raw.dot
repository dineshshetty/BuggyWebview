digraph "CFG forkotlin.collections.MapsKt__MapsKt.optimizeReadOnlyMap(Ljava\/util\/Map;)Ljava\/util\/Map;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$optimizeReadOnlyMap' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:int) = (r1 I:java.util.Map A[D('$this$optimizeReadOnlyMap' java.util.Map)]) type: INTERFACE call: java.util.Map.size():int A[MD:():int (c)] (LINE:784)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0009|0x0009: SWITCH  (r0 I:??)\l case 0: goto B:16:0x0013\l case 1: goto B:15:0x000e\l default: goto B:14:0x000c \l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|0x000c: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$optimizeReadOnlyMap' java.util.Map)])  (LINE:787)\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|0x0017: RETURN  (r0 I:java.util.Map\<K, V\>) A[SYNTHETIC] (LINE:788)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x000e|0x000e: INVOKE  (r0 I:java.util.Map) = (r1 I:java.util.Map A[D('$this$optimizeReadOnlyMap' java.util.Map)]) type: STATIC call: kotlin.collections.MapsKt.toSingletonMap(java.util.Map):java.util.Map A[MD:\<K, V\>:(java.util.Map\<? extends K, ? extends V\>):java.util.Map\<K, V\> (m)] (LINE:786)\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0017: RETURN  (r0 I:java.util.Map\<K, V\>) A[SYNTHETIC] (LINE:788)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|0x0013: INVOKE  (r0 I:java.util.Map) =  type: STATIC call: kotlin.collections.MapsKt.emptyMap():java.util.Map A[MD:\<K, V\>:():java.util.Map\<K, V\> (m)] (LINE:785)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|RETURN\lORIG_RETURN\l|0x0017: RETURN  (r0 I:java.util.Map\<K, V\>)  (LINE:788)\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.MapsKt__MapsKt.optimizeReadOnlyMap((r1 I:java.util.Map\<K, ? extends V\> A[D('$this$optimizeReadOnlyMap' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000e \-\> B:17:0x0017, CROSS_EDGE: B:16:0x0013 \-\> B:17:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001f: r1 '$this$optimizeReadOnlyMap' Ljava\/util\/Map;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/util\/Map\<TK;+TV;\>;)Ljava\/util\/Map\<TK;TV;\>;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_13 -> Node_16;
Node_14 -> Node_18;
Node_18 -> Node_11;
Node_15 -> Node_19;
Node_19 -> Node_11;
Node_16 -> Node_17;
Node_17 -> Node_11;
}

