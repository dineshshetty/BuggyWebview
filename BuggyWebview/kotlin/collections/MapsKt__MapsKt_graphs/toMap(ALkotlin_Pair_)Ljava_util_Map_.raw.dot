digraph "CFG forkotlin.collections.MapsKt__MapsKt.toMap([Lkotlin\/Pair;)Ljava\/util\/Map;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$toMap' kotlin.Pair[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: ARRAY_LENGTH  (r0 I:int) = (r2 I:??[] A[D('$this$toMap' kotlin.Pair[])])  (LINE:568)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|0x0006: SWITCH  (r0 I:??)\l case 0: goto B:16:0x0022\l case 1: goto B:15:0x001a\l default: goto B:14:0x0009 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|0x0009: NEW_INSTANCE  (r0 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap  (LINE:571)\l0x000b: ARRAY_LENGTH  (r1 I:int) = (r2 I:??[] A[D('$this$toMap' kotlin.Pair[])]) \l0x000c: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: kotlin.collections.MapsKt.mapCapacity(int):int A[MD:(int):int (m)]\l0x0010: INVOKE  (r0 I:java.util.LinkedHashMap), (r1 I:int) type: DIRECT call: java.util.LinkedHashMap.\<init\>(int):void A[MD:(int):void (c)]\l0x0013: CHECK_CAST (r0 I:java.util.Map) = (java.util.Map) (r0 I:??[OBJECT, ARRAY]) \l0x0015: INVOKE  (r0 I:java.util.Map) = (r2 I:kotlin.Pair[] A[D('$this$toMap' kotlin.Pair[])]), (r0 I:java.util.Map) type: STATIC call: kotlin.collections.MapsKt.toMap(kotlin.Pair[], java.util.Map):java.util.Map A[MD:\<K, V, M extends java.util.Map\<? super K, ? super V\>\>:(kotlin.Pair\<? extends K, ? extends V\>[], M extends java.util.Map\<? super K, ? super V\>):M extends java.util.Map\<? super K, ? super V\> (m)]\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|0x0026: RETURN  (r0 I:java.util.Map\<K, V\>) A[SYNTHETIC] (LINE:572)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x001a|0x001a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:570)\l0x001b: AGET  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][] A[D('$this$toMap' kotlin.Pair[])]), (r0 I:??[int, short, byte, char]) \l0x001d: INVOKE  (r0 I:java.util.Map) = (r0 I:kotlin.Pair) type: STATIC call: kotlin.collections.MapsKt.mapOf(kotlin.Pair):java.util.Map A[MD:\<K, V\>:(kotlin.Pair\<? extends K, ? extends V\>):java.util.Map\<K, V\> (m)]\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0026: RETURN  (r0 I:java.util.Map\<K, V\>) A[SYNTHETIC] (LINE:572)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0022|0x0022: INVOKE  (r0 I:java.util.Map) =  type: STATIC call: kotlin.collections.MapsKt.emptyMap():java.util.Map A[MD:\<K, V\>:():java.util.Map\<K, V\> (m)] (LINE:569)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|RETURN\lORIG_RETURN\l|0x0026: RETURN  (r0 I:java.util.Map\<K, V\>)  (LINE:572)\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.MapsKt__MapsKt.toMap((r2 I:kotlin.Pair\<? extends K, ? extends V\>[] A[D('$this$toMap' kotlin.Pair[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x001a \-\> B:17:0x0026, CROSS_EDGE: B:16:0x0022 \-\> B:17:0x0026\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002f: r2 '$this$toMap' [Lkotlin\/Pair;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>([Lkotlin\/Pair\<+TK;+TV;\>;)Ljava\/util\/Map\<TK;TV;\>;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_13 -> Node_16;
Node_14 -> Node_18;
Node_18 -> Node_11;
Node_15 -> Node_19;
Node_19 -> Node_11;
Node_16 -> Node_17;
Node_17 -> Node_11;
}

