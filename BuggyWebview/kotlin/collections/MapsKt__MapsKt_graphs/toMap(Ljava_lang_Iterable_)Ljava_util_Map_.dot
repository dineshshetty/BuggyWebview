digraph "CFG forkotlin.collections.MapsKt__MapsKt.toMap(Ljava\/lang\/Iterable;)Ljava\/util\/Map;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r2, \"\<this\>\")\l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|if ((r2 instanceof java.util.Collection) == false) goto L16\l}"];
Node_22 [shape=record,label="{22\:\ 0x0009}"];
Node_23 [shape=record,label="{23\:\ 0x0010|switch(((java.util.Collection) r2).size()) \{\l    case 0: goto L14;\l    case 1: goto L8;\l    default: goto L5;\l\}\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.collections.MapsKt.toMap(r2, new java.util.LinkedHashMap(kotlin.collections.MapsKt.mapCapacity(((java.util.Collection) r2).size())))\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x002a}"];
Node_26 [shape=record,label="{26\:\ 0x002c|if ((r2 instanceof java.util.List) == false) goto L13\l}"];
Node_27 [shape=record,label="{27\:\ 0x002e|java.lang.Object r0 = (kotlin.Tuples\<? extends K, ? extends V\>) ((java.util.List) r2).get(0)\l}"];
Node_29 [shape=record,label="{29\:\ 0x003f|PHI: r0 \l  PHI: (r0v13 kotlin.Pair\<? extends K, ? extends V\>) = (r0v12 kotlin.Pair\<? extends K, ? extends V\>), (r0v18 kotlin.Pair\<? extends K, ? extends V\>) binds: [B:28:0x0037, B:27:0x002e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.collections.MapsKt.mapOf(r0)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0037|java.lang.Object r0 = r2.iterator().next()\l}"];
Node_30 [shape=record,label="{30\:\ 0x0046}"];
Node_31 [shape=record,label="{31\:\ 0x004a|RETURN\lORIG_RETURN\l|return kotlin.collections.MapsKt.emptyMap()\l}"];
Node_32 [shape=record,label="{32\:\ 0x004b}"];
Node_33 [shape=record,label="{33\:\ 0x005a|RETURN\l|return kotlin.collections.MapsKt.optimizeReadOnlyMap(kotlin.collections.MapsKt.toMap(r2, new java.util.LinkedHashMap()))\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.MapsKt__MapsKt.toMap((r2v0 java.lang.Iterable\<? extends kotlin.Pair\<? extends K, ? extends V\>\> A[D('$this$toMap' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x003f \-\> B:31:0x004a, CROSS_EDGE: B:28:0x0037 \-\> B:29:0x003f, CROSS_EDGE: B:30:0x0046 \-\> B:31:0x004a, CROSS_EDGE: B:33:0x005a \-\> B:19:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+Lkotlin\/Pair\<+TK;+TV;\>;\>;)Ljava\/util\/Map\<TK;TV;\>;\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_32;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_23 -> Node_30;
Node_24 -> Node_34;
Node_34 -> Node_19;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_29 -> Node_35;
Node_35 -> Node_19;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_31 -> Node_19;
Node_32 -> Node_33;
Node_33 -> Node_19;
}

