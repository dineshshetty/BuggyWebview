digraph "CFG forkotlin.collections.MapsKt__MapsKt.toMap(Ljava\/lang\/Iterable;)Ljava\/util\/Map;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$toMap' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INSTANCE_OF  (r0 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('$this$toMap' java.lang.Iterable)]) java.util.Collection  (LINE:546)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x004b \l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$toMap' java.lang.Iterable)])  (LINE:547)\l0x000a: CHECK_CAST (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:??[OBJECT, ARRAY]) \l0x000c: INVOKE  (r0 I:int) = (r0 I:java.util.Collection) type: INTERFACE call: java.util.Collection.size():int A[MD:():int (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|0x0010: SWITCH  (r0 I:??)\l case 0: goto B:30:0x0046\l case 1: goto B:25:0x002a\l default: goto B:24:0x0013 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|0x0013: NEW_INSTANCE  (r0 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap  (LINE:550)\l0x0015: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$toMap' java.lang.Iterable)]) \l0x0016: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x0018: INVOKE  (r1 I:int) = (r1 I:java.util.Collection) type: INTERFACE call: java.util.Collection.size():int A[MD:():int (c)]\l0x001c: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: kotlin.collections.MapsKt.mapCapacity(int):int A[MD:(int):int (m)]\l0x0020: INVOKE  (r0 I:java.util.LinkedHashMap), (r1 I:int) type: DIRECT call: java.util.LinkedHashMap.\<init\>(int):void A[MD:(int):void (c)]\l0x0023: CHECK_CAST (r0 I:java.util.Map) = (java.util.Map) (r0 I:??[OBJECT, ARRAY]) \l0x0025: INVOKE  (r0 I:java.util.Map) = (r2 I:java.lang.Iterable A[D('$this$toMap' java.lang.Iterable)]), (r0 I:java.util.Map) type: STATIC call: kotlin.collections.MapsKt.toMap(java.lang.Iterable, java.util.Map):java.util.Map A[MD:\<K, V, M extends java.util.Map\<? super K, ? super V\>\>:(java.lang.Iterable\<? extends kotlin.Pair\<? extends K, ? extends V\>\>, M extends java.util.Map\<? super K, ? super V\>):M extends java.util.Map\<? super K, ? super V\> (m)]\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|0x004a: RETURN  (r0 I:java.util.Map\<K, V\>) A[SYNTHETIC] (LINE:547)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x002a|0x002a: INSTANCE_OF  (r0 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('$this$toMap' java.lang.Iterable)]) java.util.List  (LINE:549)\l}"];
Node_26 [shape=record,label="{26\:\ 0x002c|0x002c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0037 \l}"];
Node_27 [shape=record,label="{27\:\ 0x002e|0x002e: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$toMap' java.lang.Iterable)]) \l0x002f: CHECK_CAST (r0 I:java.util.List) = (java.util.List) (r0 I:??[OBJECT, ARRAY]) \l0x0031: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0032: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x003f|0x003f: CHECK_CAST (r0 I:kotlin.Pair) = (kotlin.Pair) (r0 I:??[OBJECT, ARRAY]) \l0x0041: INVOKE  (r0 I:java.util.Map) = (r0 I:kotlin.Pair) type: STATIC call: kotlin.collections.MapsKt.mapOf(kotlin.Pair):java.util.Map A[MD:\<K, V\>:(kotlin.Pair\<? extends K, ? extends V\>):java.util.Map\<K, V\> (m)]\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x004a: RETURN  (r0 I:java.util.Map\<K, V\>) A[SYNTHETIC] (LINE:547)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0037|0x0037: INVOKE  (r0 I:java.util.Iterator) = (r2 I:java.lang.Iterable A[D('$this$toMap' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)]\l0x003b: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0046|0x0046: INVOKE  (r0 I:java.util.Map) =  type: STATIC call: kotlin.collections.MapsKt.emptyMap():java.util.Map A[MD:\<K, V\>:():java.util.Map\<K, V\> (m)] (LINE:548)\l}"];
Node_31 [shape=record,label="{31\:\ 0x004a|RETURN\lORIG_RETURN\l|0x004a: RETURN  (r0 I:java.util.Map\<K, V\>)  (LINE:547)\l}"];
Node_32 [shape=record,label="{32\:\ 0x004b|0x004b: NEW_INSTANCE  (r0 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap  (LINE:553)\l0x004d: INVOKE  (r0 I:java.util.LinkedHashMap) type: DIRECT call: java.util.LinkedHashMap.\<init\>():void A[MD:():void (c)]\l0x0050: CHECK_CAST (r0 I:java.util.Map) = (java.util.Map) (r0 I:??[OBJECT, ARRAY]) \l0x0052: INVOKE  (r0 I:java.util.Map) = (r2 I:java.lang.Iterable A[D('$this$toMap' java.lang.Iterable)]), (r0 I:java.util.Map) type: STATIC call: kotlin.collections.MapsKt.toMap(java.lang.Iterable, java.util.Map):java.util.Map A[MD:\<K, V, M extends java.util.Map\<? super K, ? super V\>\>:(java.lang.Iterable\<? extends kotlin.Pair\<? extends K, ? extends V\>\>, M extends java.util.Map\<? super K, ? super V\>):M extends java.util.Map\<? super K, ? super V\> (m)]\l0x0056: INVOKE  (r0 I:java.util.Map) = (r0 I:java.util.Map) type: STATIC call: kotlin.collections.MapsKt.optimizeReadOnlyMap(java.util.Map):java.util.Map A[MD:\<K, V\>:(java.util.Map\<K, ? extends V\>):java.util.Map\<K, V\> (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x005a|RETURN\l|0x005a: RETURN  (r0 I:java.util.Map\<K, V\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.MapsKt__MapsKt.toMap((r2 I:java.lang.Iterable\<? extends kotlin.Pair\<? extends K, ? extends V\>\> A[D('$this$toMap' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x003f \-\> B:31:0x004a, CROSS_EDGE: B:28:0x0037 \-\> B:29:0x003f, CROSS_EDGE: B:30:0x0046 \-\> B:31:0x004a, CROSS_EDGE: B:33:0x005a \-\> B:19:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0063: r2 '$this$toMap' Ljava\/lang\/Iterable;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+Lkotlin\/Pair\<+TK;+TV;\>;\>;)Ljava\/util\/Map\<TK;TV;\>;\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_32;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_23 -> Node_30;
Node_24 -> Node_34;
Node_34 -> Node_19;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_29 -> Node_35;
Node_35 -> Node_19;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_31 -> Node_19;
Node_32 -> Node_33;
Node_33 -> Node_19;
}

