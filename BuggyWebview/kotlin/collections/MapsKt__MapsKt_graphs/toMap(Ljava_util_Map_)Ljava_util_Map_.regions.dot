digraph "CFG forkotlin.collections.MapsKt__MapsKt.toMap(Ljava\/util\/Map;)Ljava\/util\/Map;" {
subgraph cluster_Region_1127581686 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"\<this\>\")\l}"];
subgraph cluster_SwitchRegion_1228545487 {
label = "Switch: 3
 case 0 -> R(1:9)
 case 1 -> R(1:7)
 case default -> R(1:4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0009|switch(r1.size()) \{\l    case 0: goto L8;\l    case 1: goto L6;\l    default: goto L3;\l\}\l}"];
subgraph cluster_Region_187884690 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x001a|RETURN\lORIG_RETURN\l|return kotlin.collections.MapsKt.emptyMap()\l}"];
}
subgraph cluster_Region_1617312283 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.collections.MapsKt.toSingletonMap(r1)\l}"];
}
subgraph cluster_Region_260250582 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.collections.MapsKt.toMutableMap(r1)\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000c}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0011}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0016}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.MapsKt__MapsKt.toMap((r1v0 java.util.Map\<? extends K, ? extends V\> A[D('$this$toMap' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0011 \-\> B:17:0x001a, CROSS_EDGE: B:16:0x0016 \-\> B:17:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/util\/Map\<+TK;+TV;\>;)Ljava\/util\/Map\<TK;TV;\>;\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_13 -> Node_16;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
Node_10 -> Node_12;
Node_14 -> Node_18;
Node_15 -> Node_19;
Node_16 -> Node_17;
}

