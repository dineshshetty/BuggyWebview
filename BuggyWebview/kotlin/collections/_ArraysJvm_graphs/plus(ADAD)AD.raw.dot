digraph "CFG forkotlin.collections.ArraysKt___ArraysJvmKt.plus([D[D)[D" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$plus' double[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0007: INVOKE  (r5 I:java.lang.Object A[D('elements' double[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: ARRAY_LENGTH  (r0 I:int) = (r4 I:??[] A[D('$this$plus' double[])])  (LINE:2279)\l0x000b: ARRAY_LENGTH  (r1 I:int) = (r5 I:??[] A[D('elements' double[])])  (LINE:2280)\l0x000c: ARITH  (r2 I:int) = (r0 I:int A[D('thisSize' int)]) + (r1 I:int A[D('arraySize' int)])  (LINE:2281)\l0x000e: INVOKE  (r2 I:double[]) = (r4 I:double[] A[D('$this$plus' double[])]), (r2 I:int) type: STATIC call: java.util.Arrays.copyOf(double[], int):double[] A[MD:(double[], int):double[] (c)]\l0x0012: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2282)\l0x0013: INVOKE  \l  (r5 I:java.lang.Object A[D('elements' double[])])\l  (r3 I:int)\l  (r2 I:java.lang.Object A[D('result' double[])])\l  (r0 I:int A[D('thisSize' int)])\l  (r1 I:int A[D('arraySize' int)])\l type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l0x0016: CONST_STR  (r3 I:java.lang.String) =  \"result\"  (LINE:2283)\l0x0018: INVOKE  (r2 I:java.lang.Object A[D('result' double[])]), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|RETURN\l|0x001b: RETURN  (r2 I:double[] A[D('result' double[])]) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final double[] kotlin.collections.ArraysKt___ArraysJvmKt.plus((r4 I:double[] A[D('$this$plus' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:double[] A[D('elements' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x001b: r0 'thisSize' I\l  0x000c\-0x001b: r1 'arraySize' I\l  0x0012\-0x001b: r2 'result' [D\l  \-1 \-0x001b: r4 '$this$plus' [D\l  \-1 \-0x001b: r5 'elements' [D\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

