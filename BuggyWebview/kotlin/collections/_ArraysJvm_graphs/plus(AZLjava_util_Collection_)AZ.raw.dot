digraph "CFG forkotlin.collections.ArraysKt___ArraysJvmKt.plus([ZLjava\/util\/Collection;)[Z" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('$this$plus' boolean[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('elements' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: ARRAY_LENGTH  (r0 I:int) = (r5 I:??[] A[D('$this$plus' boolean[])])  (LINE:2193)\l0x000b: INVOKE  (r1 I:int) = (r6 I:java.util.Collection A[D('elements' java.util.Collection)]) type: INTERFACE call: java.util.Collection.size():int A[MD:():int (c)] (LINE:2194)\l0x000f: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int A[D('index' int)]) \l0x0010: INVOKE  (r1 I:boolean[]) = (r5 I:boolean[] A[D('$this$plus' boolean[])]), (r1 I:int) type: STATIC call: java.util.Arrays.copyOf(boolean[], int):boolean[] A[MD:(boolean[], int):boolean[] (c)]\l0x0014: INVOKE  (r2 I:java.util.Iterator) = (r6 I:java.util.Collection A[D('elements' java.util.Collection)]) type: INTERFACE call: java.util.Collection.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:2195)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|LOOP_START\lLOOP:0: B:12:0x0018\-\>B:14:0x001e\l|0x0018: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|0x001c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x002e \l}"];
Node_14 [shape=record,label="{14\:\ 0x001e|LOOP_END\lLOOP:0: B:12:0x0018\-\>B:14:0x001e\l|0x001e: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0022: CHECK_CAST (r3 I:java.lang.Boolean) = (java.lang.Boolean) (r3 I:??[OBJECT, ARRAY]) \l0x0024: INVOKE  (r3 I:boolean) = (r3 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l0x0028: ARITH  (r4 I:int) = (r0 I:int A[D('index' int)]) + (1 int) \l0x002a: APUT  \l  (r1 I:boolean[] A[D('result' boolean[]), IMMUTABLE_TYPE])\l  (r0 I:??[int, short, byte, char] A[D('index' int)])\l  (r3 I:boolean A[D('element' boolean), IMMUTABLE_TYPE])\l \l0x002c: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x002e|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|0x002e: CONST_STR  (r2 I:java.lang.String) =  \"result\"  (LINE:2196)\l0x0030: INVOKE  (r1 I:java.lang.Object A[D('result' boolean[])]), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0033|RETURN\l|0x0033: RETURN  (r1 I:boolean[] A[D('result' boolean[])]) \l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final boolean[] kotlin.collections.ArraysKt___ArraysJvmKt.plus((r5 I:boolean[] A[D('$this$plus' boolean[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.Collection\<java.lang.Boolean\> A[D('elements' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x001e \-\> B:12:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x002a: r0 'index' I\l  0x0028\-0x002d: r3 'element' Z\l  0x002a\-0x002e: r4 'index' I\l  0x002e\-0x0033: r0 'index' I\l  0x0014\-0x0033: r1 'result' [Z\l  \-1 \-0x0033: r5 '$this$plus' [Z\l  \-1 \-0x0033: r6 'elements' Ljava\/util\/Collection;\lSIGNATURE: ([ZLjava\/util\/Collection\<Ljava\/lang\/Boolean;\>;)[Z\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_12;
Node_17 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_10;
}

