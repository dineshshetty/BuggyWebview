digraph "CFG forkotlin.collections.ArraysKt___ArraysJvmKt.maxBy([ILkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Integer;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r11 I:java.lang.Object A[D('$this$maxBy' int[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x0007: INVOKE  (r12 I:java.lang.Object A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('$this$maxBy' int[])])  (LINE:2833)\l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: ARRAY_LENGTH  (r3 I:int) = (r1 I:??[] A[D('$this$maxByOrNull$iv' int[])])  (LINE:3463)\l0x000e: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000f: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0010|0x0010: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0014 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0012|0x0012: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0015|0x0015: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0019 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0017|SYNTHETIC\lRETURN\l|0x0017: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x005e: RETURN  (r3 I:java.lang.Integer A[D('maxElem$iv' int)]) A[SYNTHETIC] (LINE:2833)\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0019|0x0019: AGET  (r3 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][] A[D('$this$maxByOrNull$iv' int[])]), (r5 I:??[int, short, byte, char])  (LINE:3464)\l0x001b: INVOKE  (r5 I:int) = (r1 I:int[] A[D('$this$maxByOrNull$iv' int[])]) type: STATIC call: kotlin.collections.ArraysKt.getLastIndex(int[]):int A[MD:(int[]):int (m)] (LINE:3465)\l}"];
Node_35 [shape=record,label="{35\:\ 0x001f|0x001f: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lastIndex$iv' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0027  (LINE:3466)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0021|0x0021: INVOKE  (r4 I:java.lang.Integer) = (r3 I:int A[D('maxElem$iv' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0025: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('maxElem$iv' int)]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lRETURN\l|0x005e: RETURN  (r3 I:java.lang.Integer A[D('maxElem$iv' int)]) A[SYNTHETIC] (LINE:2833)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0027|0x0027: INVOKE  (r6 I:java.lang.Integer) = (r3 I:int A[D('maxElem$iv' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:3467)\l0x002b: INVOKE  (r6 I:java.lang.Object) = (r12 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r6 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x002f: CHECK_CAST (r6 I:java.lang.Comparable) = (java.lang.Comparable) (r6 I:??[OBJECT, ARRAY]) \l0x0031: NEW_INSTANCE  (r7 I:kotlin.ranges.IntRange) =  kotlin.ranges.IntRange  (LINE:3468)\l0x0033: INVOKE  (r7 I:kotlin.ranges.IntRange), (r4 I:int), (r5 I:int A[D('lastIndex$iv' int)]) type: DIRECT call: kotlin.ranges.IntRange.\<init\>(int, int):void A[MD:(int, int):void (m)]\l0x0036: INVOKE  (r4 I:kotlin.collections.IntIterator) = (r7 I:kotlin.ranges.IntRange) type: VIRTUAL call: kotlin.ranges.IntRange.iterator():kotlin.collections.IntIterator A[MD:():java.util.Iterator\<java.lang.Integer\> (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x003a|LOOP_START\lLOOP:0: B:38:0x003a\-\>B:47:0x003a\l|0x003a: INVOKE  (r7 I:boolean) = (r4 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x003e|0x003e: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0059 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0040|0x0040: INVOKE  (r7 I:int) = (r4 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.nextInt():int A[MD:():int (m)]\l0x0044: AGET  (r8 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][] A[D('$this$maxByOrNull$iv' int[])]), (r7 I:??[int, short, byte, char] A[D('i$iv' int)])  (LINE:3469)\l0x0046: INVOKE  (r9 I:java.lang.Integer) = (r8 I:int A[D('e$iv' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:3470)\l0x004a: INVOKE  (r9 I:java.lang.Object) = (r12 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r9 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x004e: CHECK_CAST (r9 I:java.lang.Comparable) = (java.lang.Comparable) (r9 I:??[OBJECT, ARRAY]) \l0x0050: INVOKE  (r10 I:int) = \l  (r6 I:java.lang.Comparable A[D('maxValue$iv' java.lang.Comparable)])\l  (r9 I:java.lang.Object A[D('v$iv' java.lang.Comparable)])\l type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)] (LINE:3471)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0054|0x0054: IF  (r10 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:48:0x003a \l}"];
Node_45 [shape=record,label="{45\:\ 0x0056|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0056|0x0056: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxElem$iv' int)]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('e$iv' int)])  (LINE:3472)\l0x0057: MOVE  (r6 I:??[OBJECT, ARRAY] A[D('maxValue$iv' java.lang.Comparable)]) = (r9 I:??[OBJECT, ARRAY] A[D('v$iv' java.lang.Comparable)])  (LINE:3473)\l}"];
Node_49 [shape=record,label="{49\:\ 0x003a|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x003a|LOOP_END\lSYNTHETIC\lLOOP:0: B:38:0x003a\-\>B:47:0x003a\l}"];
Node_48 [shape=record,label="{48\:\ 0x003a|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0059|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0059|0x0059: INVOKE  (r4 I:java.lang.Integer) = (r3 I:int A[D('maxElem$iv' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:3476)\l0x005d: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('maxElem$iv' int)]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x005e|RETURN\lORIG_RETURN\l|0x005e: RETURN  (r3 I:java.lang.Integer A[D('maxElem$iv' int)])  (LINE:2833)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0014|0x0014: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ java.lang.Integer kotlin.collections.ArraysKt___ArraysJvmKt.maxBy((r11 I:int[] A[D('$this$maxBy' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlin.jvm.functions.Function1\<? super java.lang.Integer, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use maxByOrNull instead., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=this.maxByOrNull(selector), imports=[[]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{errorSince=1.5, hiddenSince=1.6, warningSince=1.4\}\}\}\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:36:0x0021 \-\> B:44:0x005e, BACK_EDGE: B:41:0x0054 \-\> B:38:0x003a, BACK_EDGE: B:42:0x0056 \-\> B:38:0x003a, CROSS_EDGE: B:43:0x0059 \-\> B:44:0x005e, CROSS_EDGE: B:31:0x0014 \-\> B:32:0x0015\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>]\lSIGNATURE: \<R::Ljava\/lang\/Comparable\<\-TR;\>;\>([ILkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Integer;+TR;\>;)Ljava\/lang\/Integer;\lDebug Info:\l  0x0044\-0x0058: r7 'i$iv' I\l  0x0046\-0x0058: r8 'e$iv' I\l  0x0050\-0x0058: r9 'v$iv' Ljava\/lang\/Comparable;\l  0x000c\-0x005e: r1 '$this$maxByOrNull$iv' [I\l  0x000d\-0x005e: r2 '$i$f$maxByOrNull' I\l  0x001b\-0x005e: r3 'maxElem$iv' I\l  0x001f\-0x005e: r5 'lastIndex$iv' I\l  0x0031\-0x005e: r6 'maxValue$iv' Ljava\/lang\/Comparable;\l  0x000b\-0x005e: r0 '$i$f$maxBy' I\l  \-1 \-0x005e: r11 '$this$maxBy' [I\l  \-1 \-0x005e: r12 'selector' Lkotlin\/jvm\/functions\/Function1;\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_27;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_51;
Node_51 -> Node_27;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_46;
Node_40 -> Node_41;
Node_41 -> Node_45[style=dashed];
Node_41 -> Node_48;
Node_45 -> Node_42;
Node_42 -> Node_49;
Node_49 -> Node_47;
Node_47 -> Node_38;
Node_48 -> Node_47;
Node_46 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_27;
Node_31 -> Node_32;
}

