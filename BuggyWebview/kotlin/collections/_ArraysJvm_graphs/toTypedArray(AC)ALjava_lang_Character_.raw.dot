digraph "CFG forkotlin.collections.ArraysKt___ArraysJvmKt.toTypedArray([C)[Ljava\/lang\/Character;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$toTypedArray' char[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: ARRAY_LENGTH  (r0 I:int) = (r4 I:??[] A[D('$this$toTypedArray' char[])])  (LINE:2657)\l0x0006: NEW_ARRAY  (r0 I:java.lang.Character[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.Character[] \l0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2658)\l0x0009: ARRAY_LENGTH  (r2 I:int) = (r4 I:??[] A[D('$this$toTypedArray' char[])]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x000a|LOOP_START\lLOOP:0: B:10:0x000a\-\>B:11:0x000c\l|0x000a: IF  (r1 I:??[int, byte, short, char] A[D('index' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:13:0x0017 \l}"];
Node_11 [shape=record,label="{11\:\ 0x000c|LOOP_END\lLOOP:0: B:10:0x000a\-\>B:11:0x000c\l|0x000c: AGET  (r3 I:char A[IMMUTABLE_TYPE]) = (r4 I:char[] A[D('$this$toTypedArray' char[]), IMMUTABLE_TYPE]), (r1 I:??[int, short, byte, char] A[D('index' int)])  (LINE:2659)\l0x000e: INVOKE  (r3 I:java.lang.Character) = (r3 I:char) type: STATIC call: java.lang.Character.valueOf(char):java.lang.Character A[MD:(char):java.lang.Character (c)]\l0x0012: APUT  \l  (r0 I:??[OBJECT, ARRAY][] A[D('result' java.lang.Character[])])\l  (r1 I:??[int, short, byte, char] A[D('index' int)])\l  (r3 I:??[OBJECT, ARRAY])\l \l0x0014: ARITH  (r1 I:int) = (r1 I:int A[D('index' int)]) + (1 int)  (LINE:2658)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:java.lang.Character[] A[D('result' java.lang.Character[])])  (LINE:2661)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.lang.Character[] kotlin.collections.ArraysKt___ArraysJvmKt.toTypedArray((r4 I:char[] A[D('$this$toTypedArray' char[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x000c \-\> B:10:0x000a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0017: r1 'index' I\l  0x0008\-0x0017: r0 'result' [Ljava\/lang\/Character;\l  \-1 \-0x0017: r4 '$this$toTypedArray' [C\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_10;
Node_13 -> Node_12;
Node_12 -> Node_8;
}

