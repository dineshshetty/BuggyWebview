digraph "CFG forkotlin.collections.ArraysKt___ArraysJvmKt.copyInto([F[FIII)[F" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$copyInto' float[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r2 I:java.lang.Object A[D('destination' float[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: ARITH  (r0 I:int) = (r5 I:int A[D('endIndex' int)]) \- (r4 I:int A[D('startIndex' int)])  (LINE:1362)\l0x000c: INVOKE  \l  (r1 I:java.lang.Object A[D('$this$copyInto' float[])])\l  (r4 I:int A[D('startIndex' int)])\l  (r2 I:java.lang.Object A[D('destination' float[])])\l  (r3 I:int A[D('destinationOffset' int)])\l  (r0 I:int)\l type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|RETURN\l|0x000f: RETURN  (r2 I:float[] A[D('destination' float[])])  (LINE:1363)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final float[] kotlin.collections.ArraysKt___ArraysJvmKt.copyInto((r1 I:float[] A[D('$this$copyInto' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:float[] A[D('destination' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('destinationOffset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('startIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('endIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000f: r1 '$this$copyInto' [F\l  \-1 \-0x000f: r2 'destination' [F\l  \-1 \-0x000f: r3 'destinationOffset' I\l  \-1 \-0x000f: r4 'startIndex' I\l  \-1 \-0x000f: r5 'endIndex' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

