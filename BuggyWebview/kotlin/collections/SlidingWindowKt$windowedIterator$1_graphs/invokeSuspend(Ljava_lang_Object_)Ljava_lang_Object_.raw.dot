digraph "CFG forkotlin.collections.SlidingWindowKt$windowedIterator$1.invokeSuspend(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_92 [shape=record,label="{92\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_94 [shape=record,label="{94\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)]\l0x0004: IGET  (r1 I:int) = (r13 I:kotlin.collections.SlidingWindowKt$windowedIterator$1) kotlin.collections.SlidingWindowKt$windowedIterator$1.label int  (LINE:24)\l0x0006: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0007: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_95 [shape=record,label="{95\:\ 0x0008|0x0008: SWITCH  (r1 I:??)\l case 0: goto B:103:0x0059\l case 1: goto B:102:0x0042\l case 2: goto B:101:0x003c\l case 3: goto B:100:0x002a\l case 4: goto B:99:0x0019\l case 5: goto B:98:0x0013\l default: goto B:96:0x000b \l}"];
Node_96 [shape=record,label="{96\:\ 0x000b|0x000b: NEW_INSTANCE  (r14 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:61)\l0x000d: CONST_STR  (r0 I:java.lang.String) =  \"call to 'resume' before 'invoke' with coroutine\" \l0x000f: INVOKE  (r14 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_97 [shape=record,label="{97\:\ 0x0012|0x0012: THROW  (r14 I:java.lang.Throwable) \l}"];
Node_93 [shape=record,label="{93\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_98 [shape=record,label="{98\:\ 0x0013|0x0013: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY])  (LINE:24)\l0x0014: INVOKE  (r14 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_167 [shape=record,label="{167\:\ 0x019c|0x019c: SGET  (r1 I:kotlin.Unit A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) =  kotlin.Unit.INSTANCE kotlin.Unit  (LINE:61)\l}"];
Node_168 [shape=record,label="{168\:\ 0x019e|RETURN\l|0x019e: RETURN  (r1 I:java.lang.Object) \l}"];
Node_99 [shape=record,label="{99\:\ 0x0019|0x0019: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r4 I:java.lang.Object) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$1 java.lang.Object \l0x001c: CHECK_CAST (r4 I:kotlin.collections.RingBuffer) = (kotlin.collections.RingBuffer) (r4 I:??[OBJECT, ARRAY]) \l0x001e: IGET  (r5 I:java.lang.Object) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$0 java.lang.Object \l0x0020: CHECK_CAST (r5 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r5 I:??[OBJECT, ARRAY]) \l0x0022: INVOKE  (r14 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0025: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) \l0x0026: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) = (r0 I:??[OBJECT, ARRAY]) \l0x0027: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY]) \l}"];
Node_159 [shape=record,label="{159\:\ 0x0177|0x0177: IGET  (r6 I:int) = \l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$step int  (LINE:56)\l0x0179: INVOKE  (r4 I:kotlin.collections.RingBuffer A[D('buffer' kotlin.collections.RingBuffer)]), (r6 I:int) type: VIRTUAL call: kotlin.collections.RingBuffer.removeFirst(int):void A[MD:(int):void (m)]\l}"];
Node_150 [shape=record,label="{150\:\ 0x014a|0x014a: INVOKE  (r6 I:int) = (r4 I:kotlin.collections.RingBuffer A[D('buffer' kotlin.collections.RingBuffer)]) type: VIRTUAL call: kotlin.collections.RingBuffer.size():int A[MD:():int (m)] (LINE:54)\l0x014e: IGET  (r7 I:int) = \l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$step int \l}"];
Node_151 [shape=record,label="{151\:\ 0x0150|0x0150: IF  (r6 I:??[int, byte, short, char]) \<= (r7 I:??[int, byte, short, char])  \-\> B:160:0x017d \l}"];
Node_152 [shape=record,label="{152\:\ 0x0152|0x0152: IGET  (r6 I:boolean) = \l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$reuseBuffer boolean  (LINE:55)\l}"];
Node_153 [shape=record,label="{153\:\ 0x0154|0x0154: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:155:0x015a \l}"];
Node_154 [shape=record,label="{154\:\ 0x0156|0x0156: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('buffer' kotlin.collections.RingBuffer)]) \l0x0157: CHECK_CAST (r6 I:java.util.List) = (java.util.List) (r6 I:??[OBJECT, ARRAY]) \l}"];
Node_156 [shape=record,label="{156\:\ 0x0164|0x0164: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) \l0x0165: CHECK_CAST (r7 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r7 I:??[OBJECT, ARRAY]) \l0x0167: IPUT  \l  (r5 I:java.lang.Object A[D('$this$iterator' kotlin.sequences.SequenceScope)])\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$0 java.lang.Object \l0x0169: IPUT  \l  (r4 I:java.lang.Object A[D('buffer' kotlin.collections.RingBuffer)])\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$1 java.lang.Object \l0x016b: IPUT  \l  (r3 I:java.lang.Object)\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$2 java.lang.Object \l0x016d: CONST  (r8 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x016e: IPUT  \l  (r8 I:int)\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.label int \l0x0170: INVOKE  (r6 I:java.lang.Object) = \l  (r5 I:kotlin.sequences.SequenceScope A[D('$this$iterator' kotlin.sequences.SequenceScope)])\l  (r6 I:java.lang.Object)\l  (r7 I:kotlin.coroutines.Continuation)\l type: VIRTUAL call: kotlin.sequences.SequenceScope.yield(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_157 [shape=record,label="{157\:\ 0x0174|0x0174: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:159:0x0177 \l}"];
Node_158 [shape=record,label="{158\:\ 0x0176|RETURN\l|0x0176: RETURN  (r1 I:java.lang.Object)  (LINE:24)\l}"];
Node_155 [shape=record,label="{155\:\ 0x015a|0x015a: NEW_INSTANCE  (r6 I:java.util.ArrayList) =  java.util.ArrayList \l0x015c: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('buffer' kotlin.collections.RingBuffer)]) \l0x015d: CHECK_CAST (r7 I:java.util.Collection) = (java.util.Collection) (r7 I:??[OBJECT, ARRAY]) \l0x015f: INVOKE  (r6 I:java.util.ArrayList), (r7 I:java.util.Collection) type: DIRECT call: java.util.ArrayList.\<init\>(java.util.Collection):void A[MD:(java.util.Collection\<? extends E\>):void (c)]\l0x0162: CHECK_CAST (r6 I:java.util.List) = (java.util.List) (r6 I:??[OBJECT, ARRAY]) \l}"];
Node_160 [shape=record,label="{160\:\ 0x017d|0x017d: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('buffer' kotlin.collections.RingBuffer)])  (LINE:58)\l0x017e: CHECK_CAST (r6 I:java.util.Collection) = (java.util.Collection) (r6 I:??[OBJECT, ARRAY]) \l0x0180: INVOKE  (r6 I:boolean) = (r6 I:java.util.Collection) type: INTERFACE call: java.util.Collection.isEmpty():boolean A[MD:():boolean (c)]\l0x0184: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) ^ (r6 I:??[int, boolean, short, byte, char]) \l}"];
Node_161 [shape=record,label="{161\:\ 0x0185|0x0185: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:167:0x019c \l}"];
Node_162 [shape=record,label="{162\:\ 0x0187|0x0187: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) \l0x0188: CHECK_CAST (r2 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r2 I:??[OBJECT, ARRAY]) \l0x018a: IPUT  \l  (r3 I:java.lang.Object)\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$0 java.lang.Object \l0x018c: IPUT  \l  (r3 I:java.lang.Object)\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$1 java.lang.Object \l0x018e: IPUT  \l  (r3 I:java.lang.Object)\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$2 java.lang.Object \l0x0190: CONST  (r3 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l0x0191: IPUT  \l  (r3 I:int)\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.label int \l0x0193: INVOKE  (r2 I:java.lang.Object) = \l  (r5 I:kotlin.sequences.SequenceScope A[D('$this$iterator' kotlin.sequences.SequenceScope)])\l  (r4 I:java.lang.Object A[D('buffer' kotlin.collections.RingBuffer)])\l  (r2 I:kotlin.coroutines.Continuation)\l type: VIRTUAL call: kotlin.sequences.SequenceScope.yield(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_163 [shape=record,label="{163\:\ 0x0197|0x0197: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:167:0x019c \l}"];
Node_164 [shape=record,label="{164\:\ 0x0199|RETURN\l|0x0199: RETURN  (r1 I:java.lang.Object)  (LINE:24)\l}"];
Node_100 [shape=record,label="{100\:\ 0x002a|0x002a: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) = (r13 I:??[OBJECT, ARRAY]) \l0x002b: IGET  (r4 I:java.lang.Object) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$2 java.lang.Object \l0x002d: CHECK_CAST (r4 I:java.util.Iterator) = (java.util.Iterator) (r4 I:??[OBJECT, ARRAY]) \l0x002f: IGET  (r5 I:java.lang.Object) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$1 java.lang.Object \l0x0031: CHECK_CAST (r5 I:kotlin.collections.RingBuffer) = (kotlin.collections.RingBuffer) (r5 I:??[OBJECT, ARRAY]) \l0x0033: IGET  (r6 I:java.lang.Object) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$0 java.lang.Object \l0x0035: CHECK_CAST (r6 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r6 I:??[OBJECT, ARRAY]) \l0x0037: INVOKE  (r14 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_146 [shape=record,label="{146\:\ 0x013b|0x013b: IGET  (r7 I:int) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$step int  (LINE:50)\l0x013d: INVOKE  (r5 I:kotlin.collections.RingBuffer A[D('buffer' kotlin.collections.RingBuffer)]), (r7 I:int) type: VIRTUAL call: kotlin.collections.RingBuffer.removeFirst(int):void A[MD:(int):void (m)]\l}"];
Node_175 [shape=record,label="{175\:\ 0x00f6|SYNTHETIC\l}"];
Node_132 [shape=record,label="{132\:\ 0x00f6|LOOP_START\lLOOP:0: B:132:0x00f6\-\>B:172:0x00f6\l|0x00f6: INVOKE  (r7 I:boolean) = (r4 I:java.util.Iterator A[D('$this$iterator' kotlin.sequences.SequenceScope)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_133 [shape=record,label="{133\:\ 0x00fa|0x00fa: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:170:0x0141 \l}"];
Node_134 [shape=record,label="{134\:\ 0x00fc|0x00fc: INVOKE  (r7 I:java.lang.Object) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0100: INVOKE  \l  (r5 I:kotlin.collections.RingBuffer A[D('buffer' kotlin.collections.RingBuffer)])\l  (r7 I:java.lang.Object A[D('e' java.lang.Object)])\l type: VIRTUAL call: kotlin.collections.RingBuffer.add(java.lang.Object):void A[MD:(T):void (m)] (LINE:45)\l0x0103: INVOKE  (r7 I:boolean) = (r5 I:kotlin.collections.RingBuffer A[D('buffer' kotlin.collections.RingBuffer)]) type: VIRTUAL call: kotlin.collections.RingBuffer.isFull():boolean A[MD:():boolean (m)] (LINE:46)\l}"];
Node_135 [shape=record,label="{135\:\ 0x0107|0x0107: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:173:0x00f6 \l}"];
Node_169 [shape=record,label="{169\:\ 0x0109|SYNTHETIC\l}"];
Node_136 [shape=record,label="{136\:\ 0x0109|0x0109: INVOKE  (r7 I:int) = (r5 I:kotlin.collections.RingBuffer A[D('buffer' kotlin.collections.RingBuffer)]) type: VIRTUAL call: kotlin.collections.RingBuffer.size():int A[MD:():int (m)] (LINE:47)\l0x010d: IGET  (r8 I:int) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$size int \l}"];
Node_137 [shape=record,label="{137\:\ 0x010f|0x010f: IF  (r7 I:??[int, byte, short, char]) \>= (r8 I:??[int, byte, short, char])  \-\> B:171:0x0116 \l}"];
Node_138 [shape=record,label="{138\:\ 0x0111|0x0111: INVOKE  (r5 I:kotlin.collections.RingBuffer A[D('buffer' kotlin.collections.RingBuffer)]) = (r5 I:kotlin.collections.RingBuffer A[D('buffer' kotlin.collections.RingBuffer)]), (r8 I:int) type: VIRTUAL call: kotlin.collections.RingBuffer.expanded(int):kotlin.collections.RingBuffer A[MD:(int):kotlin.collections.RingBuffer\<T\> (m)]\l}"];
Node_174 [shape=record,label="{174\:\ 0x00f6|SYNTHETIC\l}"];
Node_172 [shape=record,label="{172\:\ 0x00f6|LOOP_END\lSYNTHETIC\lLOOP:0: B:132:0x00f6\-\>B:172:0x00f6\l}"];
Node_171 [shape=record,label="{171\:\ 0x0116|SYNTHETIC\l}"];
Node_139 [shape=record,label="{139\:\ 0x0116|0x0116: IGET  (r7 I:boolean) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$reuseBuffer boolean  (LINE:49)\l}"];
Node_140 [shape=record,label="{140\:\ 0x0118|0x0118: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:142:0x011e \l}"];
Node_141 [shape=record,label="{141\:\ 0x011a|0x011a: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('buffer' kotlin.collections.RingBuffer)]) \l0x011b: CHECK_CAST (r7 I:java.util.List) = (java.util.List) (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_143 [shape=record,label="{143\:\ 0x0128|0x0128: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) \l0x0129: CHECK_CAST (r8 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r8 I:??[OBJECT, ARRAY]) \l0x012b: IPUT  \l  (r6 I:java.lang.Object A[D('$this$iterator' kotlin.sequences.SequenceScope)])\l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$0 java.lang.Object \l0x012d: IPUT  \l  (r5 I:java.lang.Object A[D('buffer' kotlin.collections.RingBuffer)])\l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$1 java.lang.Object \l0x012f: IPUT  \l  (r4 I:java.lang.Object)\l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$2 java.lang.Object \l0x0131: CONST  (r9 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0132: IPUT  \l  (r9 I:int)\l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.label int \l0x0134: INVOKE  (r7 I:java.lang.Object) = \l  (r6 I:kotlin.sequences.SequenceScope A[D('$this$iterator' kotlin.sequences.SequenceScope)])\l  (r7 I:java.lang.Object)\l  (r8 I:kotlin.coroutines.Continuation)\l type: VIRTUAL call: kotlin.sequences.SequenceScope.yield(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_144 [shape=record,label="{144\:\ 0x0138|0x0138: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:146:0x013b \l}"];
Node_145 [shape=record,label="{145\:\ 0x013a|RETURN\l|0x013a: RETURN  (r0 I:java.lang.Object)  (LINE:24)\l}"];
Node_142 [shape=record,label="{142\:\ 0x011e|0x011e: NEW_INSTANCE  (r7 I:java.util.ArrayList) =  java.util.ArrayList \l0x0120: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('buffer' kotlin.collections.RingBuffer)]) \l0x0121: CHECK_CAST (r8 I:java.util.Collection) = (java.util.Collection) (r8 I:??[OBJECT, ARRAY]) \l0x0123: INVOKE  (r7 I:java.util.ArrayList), (r8 I:java.util.Collection) type: DIRECT call: java.util.ArrayList.\<init\>(java.util.Collection):void A[MD:(java.util.Collection\<? extends E\>):void (c)]\l0x0126: CHECK_CAST (r7 I:java.util.List) = (java.util.List) (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_173 [shape=record,label="{173\:\ 0x00f6|SYNTHETIC\l}"];
Node_170 [shape=record,label="{170\:\ 0x0141|SYNTHETIC\l}"];
Node_147 [shape=record,label="{147\:\ 0x0141|0x0141: IGET  (r4 I:boolean) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$partialWindows boolean  (LINE:53)\l}"];
Node_148 [shape=record,label="{148\:\ 0x0143|0x0143: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:166:0x019b \l}"];
Node_149 [shape=record,label="{149\:\ 0x0145|0x0145: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('buffer' kotlin.collections.RingBuffer)]) \l0x0146: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('buffer' kotlin.collections.RingBuffer)]) = (r6 I:??[OBJECT, ARRAY] A[D('$this$iterator' kotlin.sequences.SequenceScope)]) \l0x0147: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) \l0x0148: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) = (r0 I:??[OBJECT, ARRAY]) \l0x0149: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY]) \l}"];
Node_166 [shape=record,label="{166\:\ 0x019b|0x019b: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])  (LINE:53)\l}"];
Node_101 [shape=record,label="{101\:\ 0x003c|0x003c: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY]) \l0x003d: INVOKE  (r14 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_102 [shape=record,label="{102\:\ 0x0042|0x0042: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY]) \l0x0043: IGET  (r4 I:int) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.I$0 int \l0x0045: IGET  (r5 I:java.lang.Object) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$2 java.lang.Object \l0x0047: CHECK_CAST (r5 I:java.util.Iterator) = (java.util.Iterator) (r5 I:??[OBJECT, ARRAY]) \l0x0049: IGET  (r6 I:java.lang.Object) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$1 java.lang.Object \l0x004b: CHECK_CAST (r6 I:java.util.ArrayList) = (java.util.ArrayList) (r6 I:??[OBJECT, ARRAY]) \l0x004d: IGET  (r7 I:java.lang.Object) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$0 java.lang.Object \l0x004f: CHECK_CAST (r7 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r7 I:??[OBJECT, ARRAY]) \l0x0051: INVOKE  (r14 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x0054: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$iterator' kotlin.sequences.SequenceScope)]) \l0x0055: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) \l0x0056: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) = (r0 I:??[OBJECT, ARRAY]) \l0x0057: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY]) \l}"];
Node_116 [shape=record,label="{116\:\ 0x00af|0x00af: IGET  (r7 I:boolean) = \l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$reuseBuffer boolean  (LINE:35)\l}"];
Node_117 [shape=record,label="{117\:\ 0x00b1|0x00b1: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:119:0x00b7 \l}"];
Node_118 [shape=record,label="{118\:\ 0x00b3|0x00b3: INVOKE  (r6 I:java.util.ArrayList A[D('buffer' java.util.ArrayList)]) type: VIRTUAL call: java.util.ArrayList.clear():void A[MD:():void (c)]\l}"];
Node_120 [shape=record,label="{120\:\ 0x00be|0x00be: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('gap' int)])  (LINE:36)\l}"];
Node_183 [shape=record,label="{183\:\ 0x0081|SYNTHETIC\l}"];
Node_106 [shape=record,label="{106\:\ 0x0081|LOOP_START\lLOOP:1: B:106:0x0081\-\>B:180:0x0081\l|0x0081: INVOKE  (r9 I:boolean) = (r5 I:java.util.Iterator A[D('buffer' java.util.ArrayList)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_107 [shape=record,label="{107\:\ 0x0085|0x0085: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:176:0x00c0 \l}"];
Node_108 [shape=record,label="{108\:\ 0x0087|0x0087: INVOKE  (r9 I:java.lang.Object) = (r5 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l}"];
Node_109 [shape=record,label="{109\:\ 0x008b|0x008b: IF  (r7 I:??[int, byte, short, char] A[D('skip' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:177:0x0090  (LINE:31)\l}"];
Node_177 [shape=record,label="{177\:\ 0x0090|SYNTHETIC\l}"];
Node_111 [shape=record,label="{111\:\ 0x0090|0x0090: INVOKE  (r6 I:java.util.ArrayList A[D('buffer' java.util.ArrayList)]), (r9 I:java.lang.Object A[D('e' java.lang.Object)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:32)\l0x0093: INVOKE  (r9 I:int) = (r6 I:java.util.ArrayList A[D('buffer' java.util.ArrayList)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)] (LINE:33)\l0x0097: IGET  (r10 I:int) = \l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$size int \l}"];
Node_112 [shape=record,label="{112\:\ 0x0099|0x0099: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:181:0x0081 \l}"];
Node_178 [shape=record,label="{178\:\ 0x009b|SYNTHETIC\l}"];
Node_113 [shape=record,label="{113\:\ 0x009b|0x009b: MOVE  (r7 I:??[OBJECT, ARRAY] A[D('skip' int)]) = (r0 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])  (LINE:34)\l0x009c: CHECK_CAST (r7 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r7 I:??[OBJECT, ARRAY]) \l0x009e: IPUT  \l  (r8 I:java.lang.Object A[D('$this$iterator' kotlin.sequences.SequenceScope)])\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$0 java.lang.Object \l0x00a0: IPUT  \l  (r6 I:java.lang.Object A[D('buffer' java.util.ArrayList)])\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$1 java.lang.Object \l0x00a2: IPUT  \l  (r5 I:java.lang.Object)\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$2 java.lang.Object \l0x00a4: IPUT  \l  (r4 I:int A[D('gap' int)])\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.I$0 int \l0x00a6: IPUT  \l  (r2 I:int)\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.label int \l0x00a8: INVOKE  (r7 I:java.lang.Object) = \l  (r8 I:kotlin.sequences.SequenceScope A[D('$this$iterator' kotlin.sequences.SequenceScope)])\l  (r6 I:java.lang.Object A[D('buffer' java.util.ArrayList)])\l  (r7 I:kotlin.coroutines.Continuation)\l type: VIRTUAL call: kotlin.sequences.SequenceScope.yield(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_114 [shape=record,label="{114\:\ 0x00ac|0x00ac: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:116:0x00af \l}"];
Node_115 [shape=record,label="{115\:\ 0x00ae|RETURN\l|0x00ae: RETURN  (r1 I:java.lang.Object)  (LINE:24)\l}"];
Node_181 [shape=record,label="{181\:\ 0x0081|SYNTHETIC\l}"];
Node_180 [shape=record,label="{180\:\ 0x0081|LOOP_END\lSYNTHETIC\lLOOP:1: B:106:0x0081\-\>B:180:0x0081\l}"];
Node_179 [shape=record,label="{179\:\ 0x008d|SYNTHETIC\l}"];
Node_110 [shape=record,label="{110\:\ 0x008d|0x008d: ARITH  (r7 I:int) = (r7 I:int A[D('skip' int)]) + (\-1 int) \l}"];
Node_182 [shape=record,label="{182\:\ 0x0081|SYNTHETIC\l}"];
Node_176 [shape=record,label="{176\:\ 0x00c0|SYNTHETIC\l}"];
Node_121 [shape=record,label="{121\:\ 0x00c0|0x00c0: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('gap' int)]) = (r6 I:??[OBJECT, ARRAY] A[D('buffer' java.util.ArrayList)])  (LINE:39)\l0x00c1: CHECK_CAST (r4 I:java.util.Collection) = (java.util.Collection) (r4 I:??[OBJECT, ARRAY]) \l0x00c3: INVOKE  (r4 I:boolean) = (r4 I:java.util.Collection) type: INTERFACE call: java.util.Collection.isEmpty():boolean A[MD:():boolean (c)]\l0x00c7: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) ^ (r4 I:??[int, boolean, short, byte, char]) \l}"];
Node_122 [shape=record,label="{122\:\ 0x00c8|0x00c8: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:167:0x019c \l}"];
Node_123 [shape=record,label="{123\:\ 0x00ca|0x00ca: IGET  (r2 I:boolean) = \l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$partialWindows boolean  (LINE:40)\l}"];
Node_124 [shape=record,label="{124\:\ 0x00cc|0x00cc: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:127:0x00d6 \l}"];
Node_125 [shape=record,label="{125\:\ 0x00ce|0x00ce: INVOKE  (r2 I:int) = (r6 I:java.util.ArrayList A[D('buffer' java.util.ArrayList)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x00d2: IGET  (r4 I:int) = \l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$size int \l}"];
Node_126 [shape=record,label="{126\:\ 0x00d4|0x00d4: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:167:0x019c \l}"];
Node_127 [shape=record,label="{127\:\ 0x00d6|0x00d6: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) \l0x00d7: CHECK_CAST (r2 I:kotlin.coroutines.Continuation) = (kotlin.coroutines.Continuation) (r2 I:??[OBJECT, ARRAY]) \l0x00d9: IPUT  \l  (r3 I:java.lang.Object)\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$0 java.lang.Object \l0x00db: IPUT  \l  (r3 I:java.lang.Object)\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$1 java.lang.Object \l0x00dd: IPUT  \l  (r3 I:java.lang.Object)\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$2 java.lang.Object \l0x00df: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x00e0: IPUT  \l  (r3 I:int)\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.label int \l0x00e2: INVOKE  (r2 I:java.lang.Object) = \l  (r8 I:kotlin.sequences.SequenceScope A[D('$this$iterator' kotlin.sequences.SequenceScope)])\l  (r6 I:java.lang.Object A[D('buffer' java.util.ArrayList)])\l  (r2 I:kotlin.coroutines.Continuation)\l type: VIRTUAL call: kotlin.sequences.SequenceScope.yield(java.lang.Object, kotlin.coroutines.Continuation):java.lang.Object A[MD:(T, kotlin.coroutines.Continuation\<? super kotlin.Unit\>):java.lang.Object (m)]\l}"];
Node_128 [shape=record,label="{128\:\ 0x00e6|0x00e6: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:167:0x019c \l}"];
Node_129 [shape=record,label="{129\:\ 0x00e8|RETURN\l|0x00e8: RETURN  (r1 I:java.lang.Object)  (LINE:24)\l}"];
Node_119 [shape=record,label="{119\:\ 0x00b7|0x00b7: NEW_INSTANCE  (r6 I:java.util.ArrayList A[D('buffer' java.util.ArrayList)]) =  java.util.ArrayList \l0x00b9: IGET  (r7 I:int) = \l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$size int \l0x00bb: INVOKE  (r6 I:java.util.ArrayList), (r7 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l}"];
Node_103 [shape=record,label="{103\:\ 0x0059|0x0059: INVOKE  (r14 I:java.lang.Object A[D('$result' java.lang.Object)]) type: STATIC call: kotlin.ResultKt.throwOnFailure(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l0x005c: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY]) \l0x005d: IGET  (r4 I:java.lang.Object) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.L$0 java.lang.Object \l0x005f: CHECK_CAST (r4 I:kotlin.sequences.SequenceScope) = (kotlin.sequences.SequenceScope) (r4 I:??[OBJECT, ARRAY]) \l0x0061: IGET  (r5 I:int) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$size int  (LINE:25)\l0x0063: CONST  (r6 I:??[int, float, short, byte, char]) = (1024(0x400, float:1.435E\-42) ??[int, float, short, byte, char]) \l0x0065: INVOKE  (r5 I:int) = (r5 I:int), (r6 I:int) type: STATIC call: kotlin.ranges.RangesKt.coerceAtMost(int, int):int A[MD:(int, int):int (m)]\l0x0069: IGET  (r6 I:int) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$step int  (LINE:26)\l0x006b: IGET  (r7 I:int) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$size int \l0x006d: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l}"];
Node_104 [shape=record,label="{104\:\ 0x006e|0x006e: IF  (r6 I:??[int, byte, short, char] A[D('gap' int)]) \< (0 ??[int, byte, short, char])  \-\> B:131:0x00eb  (LINE:27)\l}"];
Node_105 [shape=record,label="{105\:\ 0x0070|0x0070: NEW_INSTANCE  (r7 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:28)\l0x0072: INVOKE  (r7 I:java.util.ArrayList), (r5 I:int A[D('bufferInitialCapacity' int)]) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0075: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('bufferInitialCapacity' int)]) = (r7 I:??[OBJECT, ARRAY]) \l0x0076: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:29)\l0x0077: IGET  (r8 I:java.util.Iterator\<T\>) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$iterator java.util.Iterator  (LINE:30)\l0x0079: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) \l0x007a: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)]) = (r0 I:??[OBJECT, ARRAY]) \l0x007b: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY]) \l0x007c: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x007d: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('$this$iterator' kotlin.sequences.SequenceScope)]) \l0x007e: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$this$iterator' kotlin.sequences.SequenceScope)]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('gap' int)]) \l0x007f: MOVE  (r6 I:??[OBJECT, ARRAY] A[D('gap' int)]) = (r5 I:??[OBJECT, ARRAY] A[D('buffer' java.util.ArrayList)]) \l0x0080: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('buffer' java.util.ArrayList)]) = (r12 I:??[OBJECT, ARRAY]) \l}"];
Node_131 [shape=record,label="{131\:\ 0x00eb|0x00eb: NEW_INSTANCE  (r6 I:kotlin.collections.RingBuffer) =  kotlin.collections.RingBuffer  (LINE:43)\l0x00ed: INVOKE  (r6 I:kotlin.collections.RingBuffer), (r5 I:int A[D('bufferInitialCapacity' int)]) type: DIRECT call: kotlin.collections.RingBuffer.\<init\>(int):void A[MD:(int):void (m)]\l0x00f0: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('bufferInitialCapacity' int)]) = (r6 I:??[OBJECT, ARRAY]) \l0x00f1: IGET  (r6 I:java.util.Iterator\<T\>) = \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[D('this' kotlin.collections.SlidingWindowKt$windowedIterator$1)])\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$iterator java.util.Iterator  (LINE:44)\l0x00f3: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x00f4: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('$this$iterator' kotlin.sequences.SequenceScope)]) \l0x00f5: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('$this$iterator' kotlin.sequences.SequenceScope)]) = (r11 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlin.collections.SlidingWindowKt$windowedIterator$1.invokeSuspend((r13 'this' I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[IMMUTABLE_TYPE, THIS]), (r14 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCROSS_EDGE: B:168:0x019e \-\> B:93:?, CROSS_EDGE: B:158:0x0176 \-\> B:93:?, BACK_EDGE: B:157:0x0174 \-\> B:159:0x0177, CROSS_EDGE: B:155:0x015a \-\> B:156:0x0164, CROSS_EDGE: B:164:0x0199 \-\> B:93:?, CROSS_EDGE: B:163:0x0197 \-\> B:167:0x019c, CROSS_EDGE: B:161:0x0185 \-\> B:167:0x019c, BACK_EDGE: B:135:0x0107 \-\> B:132:0x00f6, BACK_EDGE: B:138:0x0111 \-\> B:132:0x00f6, CROSS_EDGE: B:145:0x013a \-\> B:93:?, BACK_EDGE: B:144:0x0138 \-\> B:146:0x013b, CROSS_EDGE: B:142:0x011e \-\> B:143:0x0128, CROSS_EDGE: B:149:0x0145 \-\> B:150:0x014a, CROSS_EDGE: B:166:0x019b \-\> B:167:0x019c, CROSS_EDGE: B:101:0x003c \-\> B:167:0x019c, BACK_EDGE: B:110:0x008d \-\> B:106:0x0081, BACK_EDGE: B:112:0x0099 \-\> B:106:0x0081, CROSS_EDGE: B:115:0x00ae \-\> B:93:?, BACK_EDGE: B:114:0x00ac \-\> B:116:0x00af, CROSS_EDGE: B:129:0x00e8 \-\> B:93:?, CROSS_EDGE: B:128:0x00e6 \-\> B:167:0x019c, CROSS_EDGE: B:126:0x00d4 \-\> B:167:0x019c, CROSS_EDGE: B:124:0x00cc \-\> B:127:0x00d6, CROSS_EDGE: B:122:0x00c8 \-\> B:167:0x019c, CROSS_EDGE: B:119:0x00b7 \-\> B:120:0x00be, CROSS_EDGE: B:105:0x0070 \-\> B:106:0x0081, CROSS_EDGE: B:131:0x00eb \-\> B:132:0x00f6\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x0019: r0 'this' Lkotlin\/collections\/SlidingWindowKt$windowedIterator$1;\l  0x0014\-0x0019: r14 '$result' Ljava\/lang\/Object;\l  0x001a\-0x002a: r1 'this' Lkotlin\/collections\/SlidingWindowKt$windowedIterator$1;\l  0x001e\-0x002a: r4 'buffer' Lkotlin\/collections\/RingBuffer;\l  0x0022\-0x002a: r5 '$this$iterator' Lkotlin\/sequences\/SequenceScope;\l  0x001a\-0x002a: r14 '$result' Ljava\/lang\/Object;\l  0x002b\-0x003c: r1 'this' Lkotlin\/collections\/SlidingWindowKt$windowedIterator$1;\l  0x0033\-0x003c: r5 'buffer' Lkotlin\/collections\/RingBuffer;\l  0x0037\-0x003c: r6 '$this$iterator' Lkotlin\/sequences\/SequenceScope;\l  0x002b\-0x003c: r14 '$result' Ljava\/lang\/Object;\l  0x003d\-0x0042: r0 'this' Lkotlin\/collections\/SlidingWindowKt$windowedIterator$1;\l  0x003d\-0x0042: r14 '$result' Ljava\/lang\/Object;\l  0x0043\-0x0059: r1 'this' Lkotlin\/collections\/SlidingWindowKt$windowedIterator$1;\l  0x0045\-0x0059: r4 'gap' I\l  0x004d\-0x0059: r6 'buffer' Ljava\/util\/ArrayList;\l  0x0051\-0x0059: r7 '$this$iterator' Lkotlin\/sequences\/SequenceScope;\l  0x0043\-0x0059: r14 '$result' Ljava\/lang\/Object;\l  0x0069\-0x0076: r5 'bufferInitialCapacity' I\l  0x005d\-0x0081: r1 'this' Lkotlin\/collections\/SlidingWindowKt$windowedIterator$1;\l  0x0076\-0x0081: r5 'buffer' Ljava\/util\/ArrayList;\l  0x0061\-0x0081: r4 '$this$iterator' Lkotlin\/sequences\/SequenceScope;\l  0x006e\-0x0081: r6 'gap' I\l  0x008b\-0x0093: r9 'e' Ljava\/lang\/Object;\l  0x0077\-0x009b: r7 'skip' I\l  0x0081\-0x00b7: r6 'buffer' Ljava\/util\/ArrayList;\l  0x0081\-0x00c0: r4 'gap' I\l  0x00bf\-0x00c0: r7 'skip' I\l  0x00be\-0x00e6: r6 'buffer' Ljava\/util\/ArrayList;\l  0x0081\-0x00e6: r8 '$this$iterator' Lkotlin\/sequences\/SequenceScope;\l  0x0081\-0x00eb: r0 'this' Lkotlin\/collections\/SlidingWindowKt$windowedIterator$1;\l  0x00eb\-0x00f1: r5 'bufferInitialCapacity' I\l  0x00eb\-0x00f6: r4 '$this$iterator' Lkotlin\/sequences\/SequenceScope;\l  0x0100\-0x0103: r7 'e' Ljava\/lang\/Object;\l  0x00eb\-0x014a: r1 'this' Lkotlin\/collections\/SlidingWindowKt$windowedIterator$1;\l  0x00f6\-0x014a: r6 '$this$iterator' Lkotlin\/sequences\/SequenceScope;\l  0x00f1\-0x014a: r5 'buffer' Lkotlin\/collections\/RingBuffer;\l  0x014a\-0x0197: r4 'buffer' Lkotlin\/collections\/RingBuffer;\l  0x014a\-0x0197: r5 '$this$iterator' Lkotlin\/sequences\/SequenceScope;\l  0x014a\-0x019b: r0 'this' Lkotlin\/collections\/SlidingWindowKt$windowedIterator$1;\l  0x019b\-0x019c: r1 'this' Lkotlin\/collections\/SlidingWindowKt$windowedIterator$1;\l  0x019b\-0x019c: r5 'buffer' Lkotlin\/collections\/RingBuffer;\l  0x019b\-0x019c: r6 '$this$iterator' Lkotlin\/sequences\/SequenceScope;\l  0x019c\-0x01af: r0 'this' Lkotlin\/collections\/SlidingWindowKt$windowedIterator$1;\l  0x005d\-0x01af: r14 '$result' Ljava\/lang\/Object;\lJadxCommentsAttr\{\l WARN: \l \-\> Unsupported multi\-entry loop pattern (BACK_EDGE: B:157:0x0174 \-\> B:159:0x0177). Please submit an issue!!!\l \-\> Unsupported multi\-entry loop pattern (BACK_EDGE: B:144:0x0138 \-\> B:146:0x013b). Please submit an issue!!!\l \-\> Unsupported multi\-entry loop pattern (BACK_EDGE: B:114:0x00ac \-\> B:116:0x00af). Please submit an issue!!!\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [24=7]\}\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.BaseContinuationImpl.invokeSuspend(java.lang.Object):java.lang.Object]\l}"];
MethodNode -> Node_92;Node_92 -> Node_94;
Node_94 -> Node_95;
Node_95 -> Node_96;
Node_95 -> Node_98;
Node_95 -> Node_99;
Node_95 -> Node_100;
Node_95 -> Node_101;
Node_95 -> Node_102;
Node_95 -> Node_103;
Node_96 -> Node_97;
Node_97 -> Node_93;
Node_98 -> Node_167;
Node_167 -> Node_168;
Node_168 -> Node_93;
Node_99 -> Node_159;
Node_159 -> Node_150;
Node_150 -> Node_151;
Node_151 -> Node_152[style=dashed];
Node_151 -> Node_160;
Node_152 -> Node_153;
Node_153 -> Node_154[style=dashed];
Node_153 -> Node_155;
Node_154 -> Node_156;
Node_156 -> Node_157;
Node_157 -> Node_158[style=dashed];
Node_157 -> Node_159;
Node_158 -> Node_93;
Node_155 -> Node_156;
Node_160 -> Node_161;
Node_161 -> Node_162[style=dashed];
Node_161 -> Node_167;
Node_162 -> Node_163;
Node_163 -> Node_164[style=dashed];
Node_163 -> Node_167;
Node_164 -> Node_93;
Node_100 -> Node_146;
Node_146 -> Node_175;
Node_175 -> Node_132;
Node_132 -> Node_133;
Node_133 -> Node_134[style=dashed];
Node_133 -> Node_170;
Node_134 -> Node_135;
Node_135 -> Node_169[style=dashed];
Node_135 -> Node_173;
Node_169 -> Node_136;
Node_136 -> Node_137;
Node_137 -> Node_138[style=dashed];
Node_137 -> Node_171;
Node_138 -> Node_174;
Node_174 -> Node_172;
Node_172 -> Node_132;
Node_171 -> Node_139;
Node_139 -> Node_140;
Node_140 -> Node_141[style=dashed];
Node_140 -> Node_142;
Node_141 -> Node_143;
Node_143 -> Node_144;
Node_144 -> Node_145[style=dashed];
Node_144 -> Node_146;
Node_145 -> Node_93;
Node_142 -> Node_143;
Node_173 -> Node_172;
Node_170 -> Node_147;
Node_147 -> Node_148;
Node_148 -> Node_149[style=dashed];
Node_148 -> Node_166;
Node_149 -> Node_150;
Node_166 -> Node_167;
Node_101 -> Node_167;
Node_102 -> Node_116;
Node_116 -> Node_117;
Node_117 -> Node_118[style=dashed];
Node_117 -> Node_119;
Node_118 -> Node_120;
Node_120 -> Node_183;
Node_183 -> Node_106;
Node_106 -> Node_107;
Node_107 -> Node_108[style=dashed];
Node_107 -> Node_176;
Node_108 -> Node_109;
Node_109 -> Node_177;
Node_109 -> Node_179[style=dashed];
Node_177 -> Node_111;
Node_111 -> Node_112;
Node_112 -> Node_178[style=dashed];
Node_112 -> Node_181;
Node_178 -> Node_113;
Node_113 -> Node_114;
Node_114 -> Node_115[style=dashed];
Node_114 -> Node_116;
Node_115 -> Node_93;
Node_181 -> Node_180;
Node_180 -> Node_106;
Node_179 -> Node_110;
Node_110 -> Node_182;
Node_182 -> Node_180;
Node_176 -> Node_121;
Node_121 -> Node_122;
Node_122 -> Node_123[style=dashed];
Node_122 -> Node_167;
Node_123 -> Node_124;
Node_124 -> Node_125[style=dashed];
Node_124 -> Node_127;
Node_125 -> Node_126;
Node_126 -> Node_127[style=dashed];
Node_126 -> Node_167;
Node_127 -> Node_128;
Node_128 -> Node_129[style=dashed];
Node_128 -> Node_167;
Node_129 -> Node_93;
Node_119 -> Node_120;
Node_103 -> Node_104;
Node_104 -> Node_105[style=dashed];
Node_104 -> Node_131;
Node_105 -> Node_183;
Node_131 -> Node_175;
}

