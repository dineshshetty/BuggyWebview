digraph "CFG forkotlin.collections.CollectionsKt__CollectionsJVMKt.checkCountOverflow(I)I" {
subgraph cluster_Region_220718767 {
label = "R(2:(1:(1:4)(1:6))|8)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1245662234 {
label = "IF [B:11:0x0000] THEN: R(1:(1:4)(1:6)) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|if (r3 \< 0) goto L2\l}"];
subgraph cluster_Region_330533328 {
label = "R(1:(1:4)(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_547407714 {
label = "IF [B:13:0x0009] THEN: R(1:4) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0009|if (kotlin.internal.PlatformImplementationsKt.apiVersionIsAtLeast(1, 3, 0) != false) goto L4\l}"];
subgraph cluster_Region_310402887 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x000b|kotlin.collections.CollectionsKt.throwCountOverflow()\l}"];
}
subgraph cluster_Region_577736337 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0016|throw new java.lang.ArithmeticException(\"Count overflow has happened.\")\l}"];
}
}
}
}
Node_17 [shape=record,label="{17\:\ 0x0017|RETURN\l|return r3\l}"];
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0002}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000f}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final int kotlin.collections.CollectionsKt__CollectionsJVMKt.checkCountOverflow((r3v0 'count' int A[D('count' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0016 \-\> B:10:?, CROSS_EDGE: B:11:0x0000 \-\> B:17:0x0017\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_11 -> Node_17[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_16 -> Node_10;
Node_17 -> Node_10;
Node_9 -> Node_11;
Node_12 -> Node_13;
Node_15 -> Node_16;
}

