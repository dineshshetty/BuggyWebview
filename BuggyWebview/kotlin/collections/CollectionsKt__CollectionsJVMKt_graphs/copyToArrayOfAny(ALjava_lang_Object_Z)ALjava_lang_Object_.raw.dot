digraph "CFG forkotlin.collections.CollectionsKt__CollectionsJVMKt.copyToArrayOfAny([Ljava\/lang\/Object;Z)[Ljava\/lang\/Object;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$copyToArrayOfAny' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0005|0x0005: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isVarargs' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0015  (LINE:88)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0007|0x0007: INVOKE  (r0 I:java.lang.Class) = (r2 I:java.lang.Object A[D('$this$copyToArrayOfAny' java.lang.Object[])]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)]\l0x000b: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Object[]\>) =  java.lang.Object[].class \l0x000d: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r1 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0015 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|0x0013: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$copyToArrayOfAny' java.lang.Object[])])  (LINE:90)\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0021: RETURN  (r0 I:java.lang.Object[]) A[SYNTHETIC]\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|0x0015: ARRAY_LENGTH  (r0 I:int) = (r2 I:??[] A[D('$this$copyToArrayOfAny' java.lang.Object[])])  (LINE:92)\l0x0016: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Object[]\>) =  java.lang.Object[].class \l0x0018: INVOKE  (r0 I:java.lang.Object[]) = (r2 I:java.lang.Object[] A[D('$this$copyToArrayOfAny' java.lang.Object[])]), (r0 I:int), (r1 I:java.lang.Class) type: STATIC call: java.util.Arrays.copyOf(java.lang.Object[], int, java.lang.Class):java.lang.Object[] A[MD:\<T, U\>:(U[], int, java.lang.Class\<? extends T[]\>):T[] (c)]\l0x001c: CONST_STR  (r1 I:java.lang.String) =  \"copyOf(this, this.size, Array\<Any?\>::class.java)\" \l0x001e: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0021|RETURN\lORIG_RETURN\l|0x0021: RETURN  (r0 I:java.lang.Object[]) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Object[] kotlin.collections.CollectionsKt__CollectionsJVMKt.copyToArrayOfAny((r2 I:T[] A[D('$this$copyToArrayOfAny' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[D('isVarargs' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0015 \-\> B:18:0x0021, CROSS_EDGE: B:13:0x0005 \-\> B:17:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0021: r2 '$this$copyToArrayOfAny' [Ljava\/lang\/Object;\l  \-1 \-0x0021: r3 'isVarargs' Z\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;Z)[Ljava\/lang\/Object;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_19;
Node_19 -> Node_11;
Node_17 -> Node_18;
Node_18 -> Node_11;
}

