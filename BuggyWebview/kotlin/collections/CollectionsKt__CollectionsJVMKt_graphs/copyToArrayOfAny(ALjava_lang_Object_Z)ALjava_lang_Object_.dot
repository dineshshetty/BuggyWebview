digraph "CFG forkotlin.collections.CollectionsKt__CollectionsJVMKt.copyToArrayOfAny([Ljava\/lang\/Object;Z)[Ljava\/lang\/Object;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r2, \"\<this\>\")\l}"];
Node_13 [shape=record,label="{13\:\ 0x0005|if (r3 == false) goto L8\l}"];
Node_14 [shape=record,label="{14\:\ 0x0007}"];
Node_15 [shape=record,label="{15\:\ 0x0011|if (kotlin.jvm.internal.Intrinsics.areEqual(r2.getClass(), java.lang.Object[].class) == false) goto L8\l}"];
Node_16 [shape=record,label="{16\:\ 0x0013}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|java.lang.Object[] r0 = java.util.Arrays.copyOf(r2, r2.length, java.lang.Object[].class)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"copyOf(this, this.size, Array\<Any?\>::class.java)\")\l}"];
Node_18 [shape=record,label="{18\:\ 0x0021|RETURN\lORIG_RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object[] kotlin.collections.CollectionsKt__CollectionsJVMKt.copyToArrayOfAny((r2v0 T[] A[D('$this$copyToArrayOfAny' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'isVarargs' boolean A[D('isVarargs' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0015 \-\> B:18:0x0021, CROSS_EDGE: B:13:0x0005 \-\> B:17:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;Z)[Ljava\/lang\/Object;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_19;
Node_19 -> Node_11;
Node_17 -> Node_18;
Node_18 -> Node_11;
}

