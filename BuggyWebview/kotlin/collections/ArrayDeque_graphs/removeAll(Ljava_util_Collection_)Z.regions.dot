digraph "CFG forkotlin.collections.ArrayDeque.removeAll(Ljava\/util\/Collection;)Z" {
subgraph cluster_Region_1306381260 {
label = "R(3:1|(1:(3:7|(3:9|(3:11|(1:13)(1:16)|15)|19)(5:22|(3:24|(1:26)(1:29)|28)|32|(3:34|(1:36)(1:39)|38)|42)|(1:21)))|44) | DECL_VAR: int newTail$iv\l";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r14, \"elements\")\lboolean r3 = false\l}"];
subgraph cluster_IfRegion_1210035197 {
label = "IF [B:52:0x000c] THEN: R(1:(3:7|(3:9|(3:11|(1:13)(1:16)|15)|19)(5:22|(3:24|(1:26)(1:29)|28)|32|(3:34|(1:36)(1:39)|38)|42)|(1:21))) ELSE: null";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x000c|if (isEmpty() == false) goto L3\l}"];
subgraph cluster_Region_1848426809 {
label = "R(1:(3:7|(3:9|(3:11|(1:13)(1:16)|15)|19)(5:22|(3:24|(1:26)(1:29)|28)|32|(3:34|(1:36)(1:39)|38)|42)|(1:21)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1921269541 {
label = "IF [B:57:0x0017] THEN: R(3:7|(3:9|(3:11|(1:13)(1:16)|15)|19)(5:22|(3:24|(1:26)(1:29)|28)|32|(3:34|(1:36)(1:39)|38)|42)|(1:21)) ELSE: null";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0017|PHI: r2 \l  PHI: (r2v4 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r13.elementData.length == 0) == false) goto L7\l}"];
subgraph cluster_Region_5195639 {
label = "R(3:7|(3:9|(3:11|(1:13)(1:16)|15)|19)(5:22|(3:24|(1:26)(1:29)|28)|32|(3:34|(1:36)(1:39)|38)|42)|(1:21))";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x001b|int int r2 = positiveMod(r13.head + size())\lint int r3 = r13.head\lboolean r5 = false\l}"];
subgraph cluster_IfRegion_287484139 {
label = "IF [B:60:0x002c] THEN: R(3:9|(3:11|(1:13)(1:16)|15)|19) ELSE: R(5:22|(3:24|(1:26)(1:29)|28)|32|(3:34|(1:36)(1:39)|38)|42)";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x002c|if (r13.head \< r2) goto L9\l}"];
subgraph cluster_Region_1241341984 {
label = "R(3:9|(3:11|(1:13)(1:16)|15)|19)";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x002e|int int r6 = r13.head\l}"];
subgraph cluster_LoopRegion_872162959 {
label = "LOOP:0: (3:11|(1:13)(1:16)|15)";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x0030|LOOP_START\lLOOP:0: B:62:0x0030\-\>B:67:0x0049\lPHI: r3 r5 r6 \l  PHI: (r3v13 'newTail$iv' int) = (r3v3 'newTail$iv' int), (r3v15 'newTail$iv' int) binds: [B:61:0x002e, B:67:0x0049] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v10 'modified$iv' boolean) = (r5v0 'modified$iv' boolean), (r5v12 'modified$iv' boolean) binds: [B:61:0x002e, B:67:0x0049] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v8 'index$iv' int) = (r6v7 'index$iv' int), (r6v9 'index$iv' int) binds: [B:61:0x002e, B:67:0x0049] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 \< r2) goto L11\l}"];
subgraph cluster_Region_158891425 {
label = "R(3:11|(1:13)(1:16)|15)";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x0032|java.lang.Object r8 = r13.elementData[r6]\l}"];
subgraph cluster_IfRegion_423155864 {
label = "IF [B:64:0x003e] THEN: R(1:13) ELSE: R(1:16)";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x003e|if ((!r14.contains(r8)) == true) goto L13\l}"];
subgraph cluster_Region_360650316 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x0040|r13.elementData[r3] = r8\lr3++\l}"];
}
subgraph cluster_Region_1238560870 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_66 [shape=record,label="{66\:\ 0x0048|r5 = true\l}"];
}
}
Node_67 [shape=record,label="{67\:\ 0x0049|LOOP_END\lLOOP:0: B:62:0x0030\-\>B:67:0x0049\lPHI: r3 r5 \l  PHI: (r3v15 'newTail$iv' int) = (r3v13 'newTail$iv' int), (r3v16 'newTail$iv' int) binds: [B:90:0x0049, B:91:0x0049] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v12 'modified$iv' boolean) = (r5v11 'modified$iv' boolean), (r5v10 'modified$iv' boolean) binds: [B:90:0x0049, B:91:0x0049] A[DONT_GENERATE, DONT_INLINE]\l|r6++\l}"];
}
}
Node_68 [shape=record,label="{68\:\ 0x004c|kotlin.collections.ArraysKt.fill(r13.elementData, (java.lang.Object) null, r3, r2)\lr4 = r3\lr3 = r5\l}"];
}
subgraph cluster_Region_820261654 {
label = "R(5:22|(3:24|(1:26)(1:29)|28)|32|(3:34|(1:36)(1:39)|38)|42)";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x0054|int int r6 = r13.head\lint int r8 = r13.elementData.length\l}"];
subgraph cluster_LoopRegion_619860582 {
label = "LOOP:1: (3:24|(1:26)(1:29)|28)";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x0059|LOOP_START\lLOOP:1: B:70:0x0059\-\>B:75:0x0074\lPHI: r3 r5 r6 \l  PHI: (r3v4 'newTail$iv' int) = (r3v3 'newTail$iv' int), (r3v10 'newTail$iv' int) binds: [B:69:0x0054, B:75:0x0074] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'modified$iv' boolean) = (r5v0 'modified$iv' boolean), (r5v6 'modified$iv' boolean) binds: [B:69:0x0054, B:75:0x0074] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v2 'index$iv' int) = (r6v1 'index$iv' int), (r6v6 'index$iv' int) binds: [B:69:0x0054, B:75:0x0074] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 \< r8) goto L24\l}"];
subgraph cluster_Region_1332588760 {
label = "R(3:24|(1:26)(1:29)|28)";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x005b|java.lang.Object[] java.lang.Object[] r9 = r13.elementData\ljava.lang.Object r10 = r9[r6]\lr9[r6] = null\l}"];
subgraph cluster_IfRegion_996764308 {
label = "IF [B:72:0x0069] THEN: R(1:26) ELSE: R(1:29)";
node [shape=record,color=blue];
Node_72 [shape=record,label="{72\:\ 0x0069|if ((!r14.contains(r10)) == true) goto L26\l}"];
subgraph cluster_Region_295604580 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x006b|r13.elementData[r3] = r10\lr3++\l}"];
}
subgraph cluster_Region_748831015 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x0073|r5 = true\l}"];
}
}
Node_75 [shape=record,label="{75\:\ 0x0074|LOOP_END\lLOOP:1: B:70:0x0059\-\>B:75:0x0074\lPHI: r3 r5 \l  PHI: (r3v10 'newTail$iv' int) = (r3v4 'newTail$iv' int), (r3v11 'newTail$iv' int) binds: [B:93:0x0074, B:94:0x0074] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v6 'modified$iv' boolean) = (r5v5 'modified$iv' boolean), (r5v1 'modified$iv' boolean) binds: [B:93:0x0074, B:94:0x0074] A[DONT_GENERATE, DONT_INLINE]\l|r6++\l}"];
}
}
Node_76 [shape=record,label="{76\:\ 0x0077|int int r3 = positiveMod(r3)\lint r6 = 0\l}"];
subgraph cluster_LoopRegion_1796216718 {
label = "LOOP:2: (3:34|(1:36)(1:39)|38)";
node [shape=record,color=blue];
Node_77 [shape=record,label="{77\:\ 0x007c|LOOP_START\lLOOP:2: B:77:0x007c\-\>B:82:0x0098\lPHI: r3 r5 r6 \l  PHI: (r3v6 'newTail$iv' int) = (r3v5 'newTail$iv' int), (r3v8 'newTail$iv' int) binds: [B:76:0x0077, B:82:0x0098] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 'modified$iv' boolean) = (r5v1 'modified$iv' boolean), (r5v4 'modified$iv' boolean) binds: [B:76:0x0077, B:82:0x0098] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v4 'index$iv' int) = (r6v3 'index$iv' int), (r6v5 'index$iv' int) binds: [B:76:0x0077, B:82:0x0098] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 \< r2) goto L34\l}"];
subgraph cluster_Region_796386530 {
label = "R(3:34|(1:36)(1:39)|38)";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x007e|java.lang.Object[] java.lang.Object[] r8 = r13.elementData\ljava.lang.Object r9 = r8[r6]\lr8[r6] = null\l}"];
subgraph cluster_IfRegion_429978120 {
label = "IF [B:79:0x008c] THEN: R(1:36) ELSE: R(1:39)";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x008c|if ((!r14.contains(r9)) == true) goto L36\l}"];
subgraph cluster_Region_1903717227 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_80 [shape=record,label="{80\:\ 0x008e|r13.elementData[r3] = r9\lint r3 = incremented(r3)\l}"];
}
subgraph cluster_Region_1206223410 {
label = "R(1:39)";
node [shape=record,color=blue];
Node_81 [shape=record,label="{81\:\ 0x0097|r5 = true\l}"];
}
}
Node_82 [shape=record,label="{82\:\ 0x0098|LOOP_END\lLOOP:2: B:77:0x007c\-\>B:82:0x0098\lPHI: r3 r5 \l  PHI: (r3v8 'newTail$iv' int) = (r3v6 'newTail$iv' int), (r3v9 'newTail$iv' int) binds: [B:96:0x0098, B:97:0x0098] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v4 'modified$iv' boolean) = (r5v3 'modified$iv' boolean), (r5v2 'modified$iv' boolean) binds: [B:96:0x0098, B:97:0x0098] A[DONT_GENERATE, DONT_INLINE]\l|r6++\l}"];
}
}
Node_83 [shape=record,label="{83\:\ 0x009b|r4 = r3\lr3 = r5\l}"];
}
}
subgraph cluster_IfRegion_602897261 {
label = "IF [B:84:0x009d] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_84 [shape=record,label="{84\:\ 0x009d|PHI: r3 r4 \l  PHI: (r3v12 'modified$iv' boolean) = (r3v7 'modified$iv' boolean), (r3v14 'modified$iv' boolean) binds: [B:83:0x009b, B:68:0x004c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 'newTail$iv' int) = (r4v1 'newTail$iv' int), (r4v4 'newTail$iv' int) binds: [B:83:0x009b, B:68:0x004c] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 != false) goto L21\l}"];
subgraph cluster_Region_1591539219 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_85 [shape=record,label="{85\:\ 0x009f|r13.size = negativeMod(r4 \- r13.head)\l}"];
}
}
}
}
}
}
Node_88 [shape=record,label="{88\:\ 0x00ab|RETURN\lPHI: r3 \l  PHI: (r3v1 'modified$iv' boolean) = (r3v0 'modified$iv' boolean), (r3v0 'modified$iv' boolean), (r3v12 'modified$iv' boolean), (r3v12 'modified$iv' boolean) binds: [B:52:0x000c, B:57:0x0017, B:84:0x009d, B:85:0x009f] A[DONT_GENERATE, DONT_INLINE]\l|return r3\l}"];
}
Node_49 [shape=record,color=red,label="{49\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x000e}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x0012}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x0014}"];
Node_91 [shape=record,color=red,label="{91\:\ 0x0049|SYNTHETIC\l}"];
Node_90 [shape=record,color=red,label="{90\:\ 0x0049|SYNTHETIC\l}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x004c|SYNTHETIC\l}"];
Node_94 [shape=record,color=red,label="{94\:\ 0x0074|SYNTHETIC\l}"];
Node_93 [shape=record,color=red,label="{93\:\ 0x0074|SYNTHETIC\l}"];
Node_92 [shape=record,color=red,label="{92\:\ 0x0077|SYNTHETIC\l}"];
Node_97 [shape=record,color=red,label="{97\:\ 0x0098|SYNTHETIC\l}"];
Node_96 [shape=record,color=red,label="{96\:\ 0x0098|SYNTHETIC\l}"];
Node_95 [shape=record,color=red,label="{95\:\ 0x009b|SYNTHETIC\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x0016}"];
Node_50 [shape=record,color=red,label="{50\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean kotlin.collections.ArrayDeque.removeAll((r13v0 'this' kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r14v0 'elements' java.util.Collection\<? extends java.lang.Object\> A[D('elements' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lBACK_EDGE: B:67:0x0049 \-\> B:62:0x0030, CROSS_EDGE: B:66:0x0048 \-\> B:67:0x0049, CROSS_EDGE: B:84:0x009d \-\> B:88:0x00ab, BACK_EDGE: B:75:0x0074 \-\> B:70:0x0059, CROSS_EDGE: B:74:0x0073 \-\> B:75:0x0074, BACK_EDGE: B:82:0x0098 \-\> B:77:0x007c, CROSS_EDGE: B:81:0x0097 \-\> B:82:0x0098, CROSS_EDGE: B:83:0x009b \-\> B:84:0x009d, CROSS_EDGE: B:57:0x0017 \-\> B:88:0x00ab, CROSS_EDGE: B:56:0x0016 \-\> B:57:0x0017, CROSS_EDGE: B:52:0x000c \-\> B:88:0x00ab\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (Ljava\/util\/Collection\<+Ljava\/lang\/Object;\>;)Z\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [462=5]\}\lMETHOD_OVERRIDE: [ClspMth\{java.util.Collection.removeAll(java.util.Collection\<?\>):boolean\}]\l}"];
MethodNode -> Node_49;Node_51 -> Node_52;
Node_52 -> Node_53;
Node_52 -> Node_88[style=dashed];
Node_57 -> Node_59;
Node_57 -> Node_88[style=dashed];
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_60 -> Node_69[style=dashed];
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_62 -> Node_89[style=dashed];
Node_63 -> Node_64;
Node_64 -> Node_65;
Node_64 -> Node_66[style=dashed];
Node_65 -> Node_91;
Node_66 -> Node_90;
Node_67 -> Node_62;
Node_68 -> Node_84;
Node_69 -> Node_70;
Node_70 -> Node_71;
Node_70 -> Node_92[style=dashed];
Node_71 -> Node_72;
Node_72 -> Node_73;
Node_72 -> Node_74[style=dashed];
Node_73 -> Node_94;
Node_74 -> Node_93;
Node_75 -> Node_70;
Node_76 -> Node_77;
Node_77 -> Node_78;
Node_77 -> Node_95[style=dashed];
Node_78 -> Node_79;
Node_79 -> Node_80;
Node_79 -> Node_81[style=dashed];
Node_80 -> Node_97;
Node_81 -> Node_96;
Node_82 -> Node_77;
Node_83 -> Node_84;
Node_84 -> Node_85;
Node_84 -> Node_88[style=dashed];
Node_85 -> Node_88;
Node_88 -> Node_50;
Node_49 -> Node_51;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_54 -> Node_56;
Node_55 -> Node_57;
Node_91 -> Node_67;
Node_90 -> Node_67;
Node_89 -> Node_68;
Node_94 -> Node_75;
Node_93 -> Node_75;
Node_92 -> Node_76;
Node_97 -> Node_82;
Node_96 -> Node_82;
Node_95 -> Node_83;
Node_56 -> Node_57;
}

