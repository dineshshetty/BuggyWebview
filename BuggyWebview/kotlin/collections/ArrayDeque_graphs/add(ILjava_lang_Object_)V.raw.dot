digraph "CFG forkotlin.collections.ArrayDeque.add(ILjava\/lang\/Object;)V" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: SGET  (r0 I:kotlin.collections.AbstractList$Companion) =  kotlin.collections.AbstractList.Companion kotlin.collections.AbstractList$Companion  (LINE:184)\l0x0002: INVOKE  (r1 I:int) = (r9 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)]\l0x0006: INVOKE  (r0 I:kotlin.collections.AbstractList$Companion), (r10 I:int A[D('index' int)]), (r1 I:int) type: VIRTUAL call: kotlin.collections.AbstractList.Companion.checkPositionIndex$kotlin_stdlib(int, int):void A[MD:(int, int):void (m)]\l0x0009: INVOKE  (r0 I:int) = (r9 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)] (LINE:186)\l}"];
Node_26 [shape=record,label="{26\:\ 0x000d|0x000d: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0013 \l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|0x000f: INVOKE  (r9 I:kotlin.collections.ArrayDeque), (r11 I:java.lang.Object A[D('element' java.lang.Object)]) type: VIRTUAL call: kotlin.collections.ArrayDeque.addLast(java.lang.Object):void A[MD:(E):void (m)] (LINE:187)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0012|RETURN\l|0x0012: RETURN    (LINE:188)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0013|0x0013: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0019  (LINE:189)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0015|0x0015: INVOKE  (r9 I:kotlin.collections.ArrayDeque), (r11 I:java.lang.Object A[D('element' java.lang.Object)]) type: VIRTUAL call: kotlin.collections.ArrayDeque.addFirst(java.lang.Object):void A[MD:(E):void (m)] (LINE:190)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0018|RETURN\l|0x0018: RETURN    (LINE:191)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|0x0019: INVOKE  (r0 I:int) = (r9 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)] (LINE:194)\l0x001d: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001e: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x001f: INVOKE  (r9 I:kotlin.collections.ArrayDeque), (r0 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.ensureCapacity(int):void A[MD:(int):void (m)]\l0x0022: IGET  (r0 I:int) = (r9 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:221)\l0x0024: ARITH  (r0 I:int) = (r0 I:int) + (r10 I:int A[D('index' int)]) \l0x0025: INVOKE  (r0 I:int) = (r9 I:kotlin.collections.ArrayDeque), (r0 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.positiveMod(int):int A[MD:(int):int (m)]\l0x0029: INVOKE  (r2 I:int) = (r9 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)] (LINE:223)\l0x002d: ARITH  (r2 I:int) = (r2 I:int) + (r1 I:int) \l0x002e: ARITH  (r2 I:int) = (r2 I:int) \>\> (r1 I:int) \l0x002f: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0030|0x0030: IF  (r10 I:??[int, byte, short, char] A[D('index' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:39:0x006a \l}"];
Node_34 [shape=record,label="{34\:\ 0x0032|0x0032: INVOKE  (r2 I:int) = (r9 I:kotlin.collections.ArrayDeque), (r0 I:int A[D('internalIndex' int)]) type: DIRECT call: kotlin.collections.ArrayDeque.decremented(int):int A[MD:(int):int (m)] (LINE:225)\l0x0036: IGET  (r4 I:int) = (r9 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:226)\l0x0038: INVOKE  (r4 I:int) = (r9 I:kotlin.collections.ArrayDeque), (r4 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.decremented(int):int A[MD:(int):int (m)]\l0x003c: IGET  (r5 I:int) = (r9 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:228)\l}"];
Node_35 [shape=record,label="{35\:\ 0x003e|0x003e: IF  (r2 I:??[int, byte, short, char] A[D('decrementedInternalIndex' int)]) \< (r5 I:??[int, byte, short, char])  \-\> B:37:0x004e \l}"];
Node_36 [shape=record,label="{36\:\ 0x0040|0x0040: IGET  (r3 I:java.lang.Object[]) = (r9 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:229)\l0x0042: AGET  (r6 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]) \l0x0044: APUT  (r3 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('decrementedHead' int)]), (r6 I:??[OBJECT, ARRAY]) \l0x0046: ARITH  (r6 I:int) = (r5 I:int) + (1 int)  (LINE:230)\l0x0048: ARITH  (r7 I:int) = (r2 I:int A[D('decrementedInternalIndex' int)]) + (1 int) \l0x004a: INVOKE  (r3 I:java.lang.Object[]), (r3 I:java.lang.Object[]), (r5 I:int), (r6 I:int), (r7 I:int) type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0063|0x0063: IGET  (r3 I:java.lang.Object[]) = (r9 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:237)\l0x0065: APUT  \l  (r3 I:??[OBJECT, ARRAY][])\l  (r2 I:??[int, short, byte, char] A[D('decrementedInternalIndex' int)])\l  (r11 I:??[OBJECT, ARRAY] A[D('element' java.lang.Object)])\l \l0x0067: IPUT  (r4 I:int A[D('decrementedHead' int)]), (r9 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:238)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0097|0x0097: INVOKE  (r2 I:int) = (r9 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)] (LINE:253)\l0x009b: ARITH  (r2 I:int) = (r2 I:int) + (r1 I:int) \l0x009c: IPUT  (r2 I:int), (r9 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.size int \l}"];
Node_45 [shape=record,label="{45\:\ 0x009e|RETURN\l|0x009e: RETURN    (LINE:254)\l}"];
Node_37 [shape=record,label="{37\:\ 0x004e|0x004e: IGET  (r6 I:java.lang.Object[]) = (r9 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:232)\l0x0050: ARITH  (r7 I:int) = (r5 I:int) + (\-1 int) \l0x0052: ARRAY_LENGTH  (r8 I:int) = (r6 I:??[]) \l0x0053: INVOKE  (r6 I:java.lang.Object[]), (r6 I:java.lang.Object[]), (r7 I:int), (r5 I:int), (r8 I:int) type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l0x0056: IGET  (r5 I:java.lang.Object[]) = (r9 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:233)\l0x0058: ARRAY_LENGTH  (r6 I:int) = (r5 I:??[]) \l0x0059: ARITH  (r6 I:int) = (r6 I:int) \- (r1 I:int) \l0x005a: AGET  (r7 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x005c: APUT  (r5 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) \l0x005e: ARITH  (r6 I:int) = (r2 I:int A[D('decrementedInternalIndex' int)]) + (1 int)  (LINE:234)\l0x0060: INVOKE  (r5 I:java.lang.Object[]), (r5 I:java.lang.Object[]), (r3 I:int), (r1 I:int), (r6 I:int) type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x006a|0x006a: IGET  (r2 I:int) = (r9 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:241)\l0x006c: INVOKE  (r4 I:int) = (r9 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)]\l0x0070: ARITH  (r2 I:int) = (r2 I:int) + (r4 I:int) \l0x0071: INVOKE  (r2 I:int) = (r9 I:kotlin.collections.ArrayDeque), (r2 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.positiveMod(int):int A[MD:(int):int (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0075|0x0075: IF  (r0 I:??[int, byte, short, char] A[D('internalIndex' int)]) \>= (r2 I:??[int, byte, short, char] A[D('tail' int)])  \-\> B:42:0x007f  (LINE:243)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0077|0x0077: IGET  (r3 I:java.lang.Object[]) = (r9 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:244)\l0x0079: ARITH  (r4 I:int) = (r0 I:int A[D('internalIndex' int)]) + (1 int) \l0x007b: INVOKE  \l  (r3 I:java.lang.Object[])\l  (r3 I:java.lang.Object[])\l  (r4 I:int)\l  (r0 I:int A[D('internalIndex' int)])\l  (r2 I:int A[D('tail' int)])\l type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0093|0x0093: IGET  (r3 I:java.lang.Object[]) = (r9 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:251)\l0x0095: APUT  \l  (r3 I:??[OBJECT, ARRAY][])\l  (r0 I:??[int, short, byte, char] A[D('internalIndex' int)])\l  (r11 I:??[OBJECT, ARRAY] A[D('element' java.lang.Object)])\l \l}"];
Node_42 [shape=record,label="{42\:\ 0x007f|0x007f: IGET  (r4 I:java.lang.Object[]) = (r9 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:246)\l0x0081: INVOKE  (r4 I:java.lang.Object[]), (r4 I:java.lang.Object[]), (r1 I:int), (r3 I:int), (r2 I:int A[D('tail' int)]) type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l0x0084: IGET  (r4 I:java.lang.Object[]) = (r9 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:247)\l0x0086: ARRAY_LENGTH  (r5 I:int) = (r4 I:??[]) \l0x0087: ARITH  (r5 I:int) = (r5 I:int) \- (r1 I:int) \l0x0088: AGET  (r5 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]) \l0x008a: APUT  (r4 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY]) \l0x008c: ARITH  (r3 I:int) = (r0 I:int A[D('internalIndex' int)]) + (1 int)  (LINE:248)\l0x008e: ARRAY_LENGTH  (r5 I:int) = (r4 I:??[]) \l0x008f: ARITH  (r5 I:int) = (r5 I:int) \- (r1 I:int) \l0x0090: INVOKE  (r4 I:java.lang.Object[]), (r4 I:java.lang.Object[]), (r3 I:int), (r0 I:int A[D('internalIndex' int)]), (r5 I:int) type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l}"];
MethodNode[shape=record,label="{public void kotlin.collections.ArrayDeque.add((r9 'this' I:kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r10 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:31:0x0018 \-\> B:24:?, CROSS_EDGE: B:45:0x009e \-\> B:24:?, CROSS_EDGE: B:37:0x004e \-\> B:38:0x0063, CROSS_EDGE: B:43:0x0093 \-\> B:44:0x0097, CROSS_EDGE: B:42:0x007f \-\> B:43:0x0093\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (ITE;)V\lDebug Info:\l  0x0036\-0x0069: r2 'decrementedInternalIndex' I\l  0x003c\-0x0069: r4 'decrementedHead' I\l  0x0075\-0x0097: r2 'tail' I\l  0x0029\-0x009e: r0 'internalIndex' I\l  \-1 \-0x009e: r10 'index' I\l  \-1 \-0x009e: r11 'element' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [ClspMth\{java.util.AbstractList.add(int, E):void\}, ClspMth\{java.util.List.add(int, E):void\}]\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_24;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_24;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_39;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_38;
Node_38 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_24;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_43;
Node_43 -> Node_44;
Node_42 -> Node_43;
}

