digraph "CFG forkotlin.collections.ArrayDeque.indexOf(Ljava\/lang\/Object;)I" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000|int r0 = positiveMod(r4.head + size())\lint r1 = r4.head\l}"];
Node_39 [shape=record,label="{39\:\ 0x000d|if (r1 \>= r0) goto L14\l}"];
Node_40 [shape=record,label="{40\:\ 0x000f|int r1 = r4.head\l}"];
Node_41 [shape=record,label="{41\:\ 0x0011|LOOP_START\lLOOP:0: B:41:0x0011\-\>B:46:0x0022\lPHI: r1 \l  PHI: (r1v11 'index' int) = (r1v10 'index' int), (r1v13 'index' int) binds: [B:40:0x000f, B:46:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r0) goto L12\l}"];
Node_42 [shape=record,label="{42\:\ 0x0013}"];
Node_43 [shape=record,label="{43\:\ 0x001b|if (kotlin.jvm.internal.Intrinsics.areEqual(r5, r4.elementData[r1]) == false) goto L7\l}"];
Node_46 [shape=record,label="{46\:\ 0x0022|LOOP_END\lLOOP:0: B:41:0x0011\-\>B:46:0x0022\l|int r1 = r1 + 1\l}"];
Node_65 [shape=record,label="{65\:\ 0x001d|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x001d}"];
Node_45 [shape=record,label="{45\:\ 0x0021|RETURN\l|return r1 \- r4.head\l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_64 [shape=record,label="{64\:\ 0x0058|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
Node_47 [shape=record,label="{47\:\ 0x0025|if (r1 \< r0) goto L34\l}"];
Node_48 [shape=record,label="{48\:\ 0x0027|int r1 = r4.head\lint r2 = r4.elementData.length\l}"];
Node_49 [shape=record,label="{49\:\ 0x002c|LOOP_START\lLOOP:1: B:49:0x002c\-\>B:54:0x003d\lPHI: r1 \l  PHI: (r1v4 'index' int) = (r1v3 'index' int), (r1v9 'index' int) binds: [B:48:0x0027, B:54:0x003d] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r2) goto L23\l}"];
Node_50 [shape=record,label="{50\:\ 0x002e}"];
Node_51 [shape=record,label="{51\:\ 0x0036|if (kotlin.jvm.internal.Intrinsics.areEqual(r5, r4.elementData[r1]) == false) goto L19\l}"];
Node_54 [shape=record,label="{54\:\ 0x003d|LOOP_END\lLOOP:1: B:49:0x002c\-\>B:54:0x003d\l|int r1 = r1 + 1\l}"];
Node_66 [shape=record,label="{66\:\ 0x0038|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x0038}"];
Node_53 [shape=record,label="{53\:\ 0x003c|RETURN\l|return r1 \- r4.head\l}"];
Node_67 [shape=record,label="{67\:\ 0x0040|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0040|r1 = 0\l}"];
Node_56 [shape=record,label="{56\:\ 0x0041|LOOP_START\lLOOP:2: B:56:0x0041\-\>B:61:0x0055\lPHI: r1 \l  PHI: (r1v6 'index' int) = (r1v5 'index' int), (r1v8 'index' int) binds: [B:55:0x0040, B:61:0x0055] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r0) goto L32\l}"];
Node_57 [shape=record,label="{57\:\ 0x0043}"];
Node_58 [shape=record,label="{58\:\ 0x004b|if (kotlin.jvm.internal.Intrinsics.areEqual(r5, r4.elementData[r1]) == false) goto L28\l}"];
Node_61 [shape=record,label="{61\:\ 0x0055|LOOP_END\lLOOP:2: B:56:0x0041\-\>B:61:0x0055\l|int r1 = r1 + 1\l}"];
Node_69 [shape=record,label="{69\:\ 0x004d|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x004d}"];
Node_60 [shape=record,label="{60\:\ 0x0054|RETURN\l|return (r4.elementData.length + r1) \- r4.head\l}"];
Node_68 [shape=record,label="{68\:\ 0x0058|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
Node_62 [shape=record,label="{62\:\ 0x0058|RETURN\lORIG_RETURN\l|return \-1\l}"];
MethodNode[shape=record,label="{public int kotlin.collections.ArrayDeque.indexOf((r4v0 'this' kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r5v0 'element' java.lang.Object A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:46:0x0022 \-\> B:41:0x0011, CROSS_EDGE: B:63:0x0059 \-\> B:37:?, CROSS_EDGE: B:53:0x003c \-\> B:37:?, BACK_EDGE: B:54:0x003d \-\> B:49:0x002c, CROSS_EDGE: B:60:0x0054 \-\> B:37:?, BACK_EDGE: B:61:0x0055 \-\> B:56:0x0041, CROSS_EDGE: B:56:0x0041 \-\> B:62:0x0058, CROSS_EDGE: B:47:0x0025 \-\> B:62:0x0058\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [ClspMth\{java.util.AbstractList.indexOf(java.lang.Object):int\}, ClspMth\{java.util.List.indexOf(java.lang.Object):int\}]\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_47;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_64;
Node_42 -> Node_43;
Node_43 -> Node_46;
Node_43 -> Node_65[style=dashed];
Node_46 -> Node_41;
Node_65 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_37;
Node_64 -> Node_70;
Node_70 -> Node_37;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_62;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_67;
Node_50 -> Node_51;
Node_51 -> Node_54;
Node_51 -> Node_66[style=dashed];
Node_54 -> Node_49;
Node_66 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_37;
Node_67 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_68;
Node_57 -> Node_58;
Node_58 -> Node_61;
Node_58 -> Node_69[style=dashed];
Node_61 -> Node_56;
Node_69 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_37;
Node_68 -> Node_71;
Node_71 -> Node_37;
Node_62 -> Node_37;
}

