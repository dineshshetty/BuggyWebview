digraph "CFG forkotlin.collections.ArrayDeque.positiveMod(I)I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object[]) = (r2 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:87)\l0x0002: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0003|0x0003: IF  (r3 I:??[int, byte, short, char] A[D('index' int)]) \< (r1 I:??[int, byte, short, char])  \-\> B:13:0x0009 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|0x0005: ARRAY_LENGTH  (r0 I:int) = (r0 I:??[]) \l0x0006: ARITH  (r0 I:int) = (r3 I:int A[D('index' int)]) \- (r0 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x000a: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0009|0x0009: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|RETURN\lORIG_RETURN\l|0x000a: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private final int kotlin.collections.ArrayDeque.positiveMod((r2 'this' I:kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0009 \-\> B:14:0x000a\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000a: r3 'index' I\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

