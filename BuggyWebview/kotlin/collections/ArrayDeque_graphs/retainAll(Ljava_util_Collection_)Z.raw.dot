digraph "CFG forkotlin.collections.ArrayDeque.retainAll(Ljava\/util\/Collection;)Z" {
Node_49 [shape=record,label="{49\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0002: INVOKE  (r13 I:java.lang.Object A[D('elements' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY])  (LINE:464)\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: INVOKE  (r2 I:boolean) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) type: VIRTUAL call: kotlin.collections.ArrayDeque.isEmpty():boolean A[MD:():boolean (m)] (LINE:639)\l0x000b: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x000c|0x000c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:88:0x00a6 \l}"];
Node_53 [shape=record,label="{53\:\ 0x000e|0x000e: IGET  (r2 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[] \l0x0010: ARRAY_LENGTH  (r2 I:int) = (r2 I:??[]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0011|0x0011: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0015 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0013|0x0013: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x0016|0x0016: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x001a \l}"];
Node_59 [shape=record,label="{59\:\ 0x001a|0x001a: IGET  (r2 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.head int  (LINE:642)\l0x001c: INVOKE  (r3 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)]\l0x0020: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0021: INVOKE  (r2 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]), (r2 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.positiveMod(int):int A[MD:(int):int (m)]\l0x0025: IGET  (r3 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.head int  (LINE:643)\l0x0027: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:644)\l0x0028: IGET  (r5 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.head int  (LINE:646)\l0x002a: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_60 [shape=record,label="{60\:\ 0x002b|0x002b: IF  (r5 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char] A[D('tail$iv' int)])  \-\> B:69:0x0052 \l}"];
Node_61 [shape=record,label="{61\:\ 0x002d|0x002d: IGET  (r5 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.head int  (LINE:647)\l}"];
Node_62 [shape=record,label="{62\:\ 0x002f|LOOP_START\lLOOP:0: B:62:0x002f\-\>B:67:0x0046\l|0x002f: IF  (r5 I:??[int, byte, short, char] A[D('index$iv' int)]) \>= (r2 I:??[int, byte, short, char] A[D('tail$iv' int)])  \-\> B:89:0x0049 \l}"];
Node_63 [shape=record,label="{63\:\ 0x0031|0x0031: IGET  (r7 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:648)\l0x0033: AGET  (r7 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char] A[D('index$iv' int)]) \l0x0035: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)])  (LINE:651)\l0x0036: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0037: INVOKE  (r8 I:boolean A[D('it' java.lang.Object)]) = (r13 I:java.util.Collection A[D('elements' java.util.Collection)]), (r8 I:java.lang.Object A[D('it' java.lang.Object)]) type: INTERFACE call: java.util.Collection.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:464)\l}"];
Node_64 [shape=record,label="{64\:\ 0x003b|0x003b: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x0045 \l}"];
Node_65 [shape=record,label="{65\:\ 0x003d|0x003d: IGET  (r8 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:652)\l0x003f: ARITH  (r9 I:int) = (r3 I:int A[D('newTail$iv' int)]) + (1 int) \l0x0041: APUT  \l  (r8 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char] A[D('newTail$iv' int)])\l  (r7 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)])\l \l0x0043: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newTail$iv' int)]) \l}"];
Node_91 [shape=record,label="{91\:\ 0x0046|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x0046|LOOP_END\lLOOP:0: B:62:0x002f\-\>B:67:0x0046\l|0x0046: ARITH  (r5 I:int) = (r5 I:int A[D('index$iv' int)]) + (1 int)  (LINE:647)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0045|0x0045: CONST  (r4 I:??[boolean, int, float, short, byte, char] A[D('modified$iv' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:654)\l}"];
Node_90 [shape=record,label="{90\:\ 0x0046|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x0049|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x0049|0x0049: IGET  (r5 I:java.lang.Object[] A[D('index$iv' int)]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:657)\l0x004b: INVOKE  (r5 I:java.lang.Object[]), (r6 I:java.lang.Object), (r3 I:int A[D('newTail$iv' int)]), (r2 I:int A[D('tail$iv' int)]) type: STATIC call: kotlin.collections.ArraysKt.fill(java.lang.Object[], java.lang.Object, int, int):void A[MD:\<T\>:(T[], T, int, int):void (m)]\l0x004e: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('modified$iv' boolean)]) \l0x004f: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('modified$iv' boolean)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newTail$iv' int)]) \l0x0050: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newTail$iv' int)]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_84 [shape=record,label="{84\:\ 0x0098|0x0098: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('modified$iv' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:88:0x00a6  (LINE:686)\l}"];
Node_85 [shape=record,label="{85\:\ 0x009a|0x009a: IGET  (r5 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.head int  (LINE:687)\l0x009c: ARITH  (r5 I:int) = (r4 I:int A[D('newTail$iv' int)]) \- (r5 I:int) \l0x009e: INVOKE  (r5 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]), (r5 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.negativeMod(int):int A[MD:(int):int (m)]\l0x00a2: IPUT  (r5 I:int), (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.size int \l}"];
Node_69 [shape=record,label="{69\:\ 0x0052|0x0052: IGET  (r5 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.head int  (LINE:660)\l0x0054: IGET  (r7 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[] \l0x0056: ARRAY_LENGTH  (r7 I:int) = (r7 I:??[]) \l}"];
Node_70 [shape=record,label="{70\:\ 0x0057|LOOP_START\lLOOP:1: B:70:0x0057\-\>B:75:0x0070\l|0x0057: IF  (r5 I:??[int, byte, short, char] A[D('index$iv' int)]) \>= (r7 I:??[int, byte, short, char])  \-\> B:92:0x0073 \l}"];
Node_71 [shape=record,label="{71\:\ 0x0059|0x0059: IGET  (r8 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:661)\l0x005b: AGET  (r9 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char] A[D('index$iv' int)]) \l0x005d: APUT  (r8 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char] A[D('index$iv' int)]), (r6 I:??[OBJECT, ARRAY])  (LINE:662)\l0x005f: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)])  (LINE:665)\l0x0060: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0061: INVOKE  (r8 I:boolean A[D('it' java.lang.Object)]) = (r13 I:java.util.Collection A[D('elements' java.util.Collection)]), (r8 I:java.lang.Object A[D('it' java.lang.Object)]) type: INTERFACE call: java.util.Collection.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:464)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0065|0x0065: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x006f \l}"];
Node_73 [shape=record,label="{73\:\ 0x0067|0x0067: IGET  (r8 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:666)\l0x0069: ARITH  (r10 I:int) = (r3 I:int A[D('newTail$iv' int)]) + (1 int) \l0x006b: APUT  \l  (r8 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char] A[D('newTail$iv' int)])\l  (r9 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)])\l \l0x006d: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newTail$iv' int)]) \l}"];
Node_94 [shape=record,label="{94\:\ 0x0070|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x0070|LOOP_END\lLOOP:1: B:70:0x0057\-\>B:75:0x0070\l|0x0070: ARITH  (r5 I:int) = (r5 I:int A[D('index$iv' int)]) + (1 int)  (LINE:660)\l}"];
Node_74 [shape=record,label="{74\:\ 0x006f|0x006f: CONST  (r4 I:??[boolean, int, float, short, byte, char] A[D('modified$iv' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:668)\l}"];
Node_93 [shape=record,label="{93\:\ 0x0070|SYNTHETIC\l}"];
Node_92 [shape=record,label="{92\:\ 0x0073|SYNTHETIC\l}"];
Node_76 [shape=record,label="{76\:\ 0x0073|0x0073: INVOKE  (r3 I:int A[D('newTail$iv' int)]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]), (r3 I:int A[D('newTail$iv' int)]) type: DIRECT call: kotlin.collections.ArrayDeque.positiveMod(int):int A[MD:(int):int (m)] (LINE:671)\l0x0077: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:673)\l}"];
Node_77 [shape=record,label="{77\:\ 0x0078|LOOP_START\lLOOP:2: B:77:0x0078\-\>B:82:0x0092\l|0x0078: IF  (r5 I:??[int, byte, short, char] A[D('index$iv' int)]) \>= (r2 I:??[int, byte, short, char] A[D('tail$iv' int)])  \-\> B:95:0x0095 \l}"];
Node_78 [shape=record,label="{78\:\ 0x007a|0x007a: IGET  (r7 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:674)\l0x007c: AGET  (r8 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char] A[D('index$iv' int)]) \l0x007e: APUT  (r7 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char] A[D('index$iv' int)]), (r6 I:??[OBJECT, ARRAY])  (LINE:675)\l0x0080: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)])  (LINE:678)\l0x0081: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0082: INVOKE  (r7 I:boolean A[D('it' java.lang.Object)]) = (r13 I:java.util.Collection A[D('elements' java.util.Collection)]), (r7 I:java.lang.Object A[D('it' java.lang.Object)]) type: INTERFACE call: java.util.Collection.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:464)\l}"];
Node_79 [shape=record,label="{79\:\ 0x0086|0x0086: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x0091 \l}"];
Node_80 [shape=record,label="{80\:\ 0x0088|0x0088: IGET  (r7 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:679)\l0x008a: APUT  \l  (r7 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char] A[D('newTail$iv' int)])\l  (r8 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)])\l \l0x008c: INVOKE  (r3 I:int A[D('newTail$iv' int)]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]), (r3 I:int A[D('newTail$iv' int)]) type: DIRECT call: kotlin.collections.ArrayDeque.incremented(int):int A[MD:(int):int (m)] (LINE:680)\l}"];
Node_97 [shape=record,label="{97\:\ 0x0092|SYNTHETIC\l}"];
Node_82 [shape=record,label="{82\:\ 0x0092|LOOP_END\lLOOP:2: B:77:0x0078\-\>B:82:0x0092\l|0x0092: ARITH  (r5 I:int) = (r5 I:int A[D('index$iv' int)]) + (1 int)  (LINE:673)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0091|0x0091: CONST  (r4 I:??[boolean, int, float, short, byte, char] A[D('modified$iv' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:682)\l}"];
Node_96 [shape=record,label="{96\:\ 0x0092|SYNTHETIC\l}"];
Node_95 [shape=record,label="{95\:\ 0x0095|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x0095|0x0095: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('modified$iv' boolean)]) \l0x0096: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('modified$iv' boolean)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newTail$iv' int)]) \l0x0097: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newTail$iv' int)]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0015|0x0015: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_88 [shape=record,label="{88\:\ 0x00a6|RETURN\l|0x00a6: RETURN  (r3 I:boolean)  (LINE:464)\l}"];
Node_50 [shape=record,label="{50\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean kotlin.collections.ArrayDeque.retainAll((r12 'this' I:kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r13 I:java.util.Collection\<? extends java.lang.Object\> A[D('elements' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lBACK_EDGE: B:67:0x0046 \-\> B:62:0x002f, CROSS_EDGE: B:66:0x0045 \-\> B:67:0x0046, CROSS_EDGE: B:84:0x0098 \-\> B:88:0x00a6, BACK_EDGE: B:75:0x0070 \-\> B:70:0x0057, CROSS_EDGE: B:74:0x006f \-\> B:75:0x0070, BACK_EDGE: B:82:0x0092 \-\> B:77:0x0078, CROSS_EDGE: B:81:0x0091 \-\> B:82:0x0092, CROSS_EDGE: B:83:0x0095 \-\> B:84:0x0098, CROSS_EDGE: B:57:0x0016 \-\> B:88:0x00a6, CROSS_EDGE: B:56:0x0015 \-\> B:57:0x0016, CROSS_EDGE: B:52:0x000c \-\> B:88:0x00a6\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (Ljava\/util\/Collection\<+Ljava\/lang\/Object;\>;)Z\lDebug Info:\l  0x0036\-0x003b: r8 'it' Ljava\/lang\/Object;\l  0x0037\-0x003b: r9 '$i$a$\-filterInPlace\-ArrayDeque$retainAll$1' I\l  0x0027\-0x0041: r3 'newTail$iv' I\l  0x0041\-0x0045: r9 'newTail$iv' I\l  0x0035\-0x0046: r7 'element$iv' Ljava\/lang\/Object;\l  0x002f\-0x0049: r5 'index$iv' I\l  0x0060\-0x0065: r8 'it' Ljava\/lang\/Object;\l  0x0061\-0x0065: r10 '$i$a$\-filterInPlace\-ArrayDeque$retainAll$1' I\l  0x0045\-0x006b: r3 'newTail$iv' I\l  0x006b\-0x006f: r10 'newTail$iv' I\l  0x005d\-0x0070: r9 'element$iv' Ljava\/lang\/Object;\l  0x0054\-0x0073: r5 'index$iv' I\l  0x0081\-0x0086: r7 'it' Ljava\/lang\/Object;\l  0x0082\-0x0086: r9 '$i$a$\-filterInPlace\-ArrayDeque$retainAll$1' I\l  0x007e\-0x0092: r8 'element$iv' Ljava\/lang\/Object;\l  0x0078\-0x0098: r5 'index$iv' I\l  0x006f\-0x0098: r3 'newTail$iv' I\l  0x0028\-0x0098: r4 'modified$iv' Z\l  0x0025\-0x00a5: r2 'tail$iv' I\l  0x0098\-0x00a5: r3 'modified$iv' Z\l  0x0098\-0x00a5: r4 'newTail$iv' I\l  0x0006\-0x00a6: r0 'this_$iv' Lkotlin\/collections\/ArrayDeque;\l  0x0007\-0x00a6: r1 '$i$f$filterInPlace' I\l  \-1 \-0x00a6: r13 'elements' Ljava\/util\/Collection;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [464=5]\}\lMETHOD_OVERRIDE: [ClspMth\{java.util.Collection.retainAll(java.util.Collection\<?\>):boolean\}]\l}"];
MethodNode -> Node_49;Node_49 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_88;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_57;
Node_57 -> Node_59;
Node_57 -> Node_88[style=dashed];
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_69;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_89;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_91;
Node_91 -> Node_67;
Node_67 -> Node_62;
Node_66 -> Node_90;
Node_90 -> Node_67;
Node_89 -> Node_68;
Node_68 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_88;
Node_85 -> Node_88;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_92;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_74;
Node_73 -> Node_94;
Node_94 -> Node_75;
Node_75 -> Node_70;
Node_74 -> Node_93;
Node_93 -> Node_75;
Node_92 -> Node_76;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_95;
Node_78 -> Node_79;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_81;
Node_80 -> Node_97;
Node_97 -> Node_82;
Node_82 -> Node_77;
Node_81 -> Node_96;
Node_96 -> Node_82;
Node_95 -> Node_83;
Node_83 -> Node_84;
Node_56 -> Node_57;
Node_88 -> Node_50;
}

