digraph "CFG forkotlin.collections.ArrayDeque.lastIndexOf(Ljava\/lang\/Object;)I" {
Node_35 [shape=record,label="{35\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r5 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:394)\l0x0002: INVOKE  (r1 I:int) = (r5 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)]\l0x0006: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0007: INVOKE  (r0 I:int) = (r5 I:kotlin.collections.ArrayDeque), (r0 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.positiveMod(int):int A[MD:(int):int (m)]\l0x000b: IGET  (r1 I:int) = (r5 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:396)\l0x000d: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x000e|0x000e: IF  (r1 I:??[int, byte, short, char]) \>= (r0 I:??[int, byte, short, char] A[D('tail' int)])  \-\> B:47:0x0028 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0010|0x0010: ARITH  (r3 I:int) = (r0 I:int A[D('tail' int)]) + (\-1 int)  (LINE:397)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0012|0x0012: IF  (r1 I:??[int, byte, short, char]) \> (r3 I:??[int, byte, short, char] A[D('index' int)])  \-\> B:63:0x0061 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0014|LOOP_START\lLOOP:0: B:41:0x0014\-\>B:46:0x0025\l|0x0014: IGET  (r4 I:java.lang.Object[]) = (r5 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:398)\l0x0016: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char] A[D('index' int)]) \l0x0018: INVOKE  (r4 I:boolean) = (r6 I:java.lang.Object A[D('element' java.lang.Object)]), (r4 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x001c|0x001c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0023 \l}"];
Node_45 [shape=record,label="{45\:\ 0x0023|0x0023: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0061  (LINE:397)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0025|LOOP_END\lLOOP:0: B:41:0x0014\-\>B:46:0x0025\l|0x0025: ARITH  (r3 I:int) = (r3 I:int A[D('index' int)]) + (\-1 int) \l}"];
Node_64 [shape=record,label="{64\:\ 0x0061|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x001e|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x001e|0x001e: IGET  (r1 I:int) = (r5 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int \l0x0020: ARITH  (r1 I:int) = (r3 I:int A[D('index' int)]) \- (r1 I:int) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0022|RETURN\l|0x0022: RETURN  (r1 I:int) \l}"];
Node_36 [shape=record,label="{36\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_63 [shape=record,label="{63\:\ 0x0061|RETURN\l|0x0061: RETURN  (r2 I:int)  (LINE:409)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0028|0x0028: IF  (r1 I:??[int, byte, short, char]) \<= (r0 I:??[int, byte, short, char] A[D('tail' int)])  \-\> B:63:0x0061  (LINE:400)\l}"];
Node_48 [shape=record,label="{48\:\ 0x002a|0x002a: ARITH  (r1 I:int) = (r0 I:int A[D('tail' int)]) + (\-1 int)  (LINE:401)\l}"];
Node_49 [shape=record,label="{49\:\ 0x002c|LOOP_START\lLOOP:1: B:49:0x002c\-\>B:54:0x0040\l|0x002c: IF  (r2 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char] A[D('index' int)])  \-\> B:67:0x0043 \l}"];
Node_50 [shape=record,label="{50\:\ 0x002e|0x002e: IGET  (r3 I:java.lang.Object[]) = (r5 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:402)\l0x0030: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char] A[D('index' int)]) \l0x0032: INVOKE  (r3 I:boolean) = (r6 I:java.lang.Object A[D('element' java.lang.Object)]), (r3 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x0036|0x0036: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0040 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0040|LOOP_END\lLOOP:1: B:49:0x002c\-\>B:54:0x0040\l|0x0040: ARITH  (r1 I:int) = (r1 I:int A[D('index' int)]) + (\-1 int)  (LINE:401)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0038|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x0038|0x0038: IGET  (r2 I:java.lang.Object[]) = (r5 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[] \l0x003a: ARRAY_LENGTH  (r2 I:int) = (r2 I:??[]) \l0x003b: ARITH  (r2 I:int) = (r2 I:int) + (r1 I:int A[D('index' int)]) \l0x003c: IGET  (r3 I:int) = (r5 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int \l0x003e: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l}"];
Node_53 [shape=record,label="{53\:\ 0x003f|RETURN\l|0x003f: RETURN  (r2 I:int) \l}"];
Node_67 [shape=record,label="{67\:\ 0x0043|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0043|0x0043: IGET  (r1 I:java.lang.Object[] A[D('index' int)]) = (r5 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:404)\l0x0045: INVOKE  (r1 I:int) = (r1 I:java.lang.Object[]) type: STATIC call: kotlin.collections.ArraysKt.getLastIndex(java.lang.Object[]):int A[MD:\<T\>:(T[]):int (m)]\l0x0049: IGET  (r3 I:int) = (r5 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int \l}"];
Node_56 [shape=record,label="{56\:\ 0x004b|0x004b: IF  (r3 I:??[int, byte, short, char]) \> (r1 I:??[int, byte, short, char] A[D('index' int)])  \-\> B:63:0x0061 \l}"];
Node_57 [shape=record,label="{57\:\ 0x004d|LOOP_START\lLOOP:2: B:57:0x004d\-\>B:62:0x005e\l|0x004d: IGET  (r4 I:java.lang.Object[]) = (r5 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:405)\l0x004f: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char] A[D('index' int)]) \l0x0051: INVOKE  (r4 I:boolean) = (r6 I:java.lang.Object A[D('element' java.lang.Object)]), (r4 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0055|0x0055: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x005c \l}"];
Node_61 [shape=record,label="{61\:\ 0x005c|0x005c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0061  (LINE:404)\l}"];
Node_62 [shape=record,label="{62\:\ 0x005e|LOOP_END\lLOOP:2: B:57:0x004d\-\>B:62:0x005e\l|0x005e: ARITH  (r1 I:int) = (r1 I:int A[D('index' int)]) + (\-1 int) \l}"];
Node_69 [shape=record,label="{69\:\ 0x0061|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x0057|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x0057|0x0057: IGET  (r2 I:int) = (r5 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int \l0x0059: ARITH  (r2 I:int) = (r1 I:int A[D('index' int)]) \- (r2 I:int) \l}"];
Node_60 [shape=record,label="{60\:\ 0x005b|RETURN\l|0x005b: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{public int kotlin.collections.ArrayDeque.lastIndexOf((r5 'this' I:kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Object A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:46:0x0025 \-\> B:41:0x0014, CROSS_EDGE: B:63:0x0061 \-\> B:36:?, CROSS_EDGE: B:40:0x0012 \-\> B:63:0x0061, CROSS_EDGE: B:53:0x003f \-\> B:36:?, BACK_EDGE: B:54:0x0040 \-\> B:49:0x002c, CROSS_EDGE: B:60:0x005b \-\> B:36:?, BACK_EDGE: B:62:0x005e \-\> B:57:0x004d, CROSS_EDGE: B:61:0x005c \-\> B:63:0x0061, CROSS_EDGE: B:56:0x004b \-\> B:63:0x0061, CROSS_EDGE: B:47:0x0028 \-\> B:63:0x0061\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0028: r3 'index' I\l  0x002c\-0x0043: r1 'index' I\l  0x0049\-0x0061: r1 'index' I\l  0x000b\-0x0061: r0 'tail' I\l  \-1 \-0x0061: r6 'element' Ljava\/lang\/Object;\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [ClspMth\{java.util.AbstractList.lastIndexOf(java.lang.Object):int\}, ClspMth\{java.util.List.lastIndexOf(java.lang.Object):int\}]\l}"];
MethodNode -> Node_35;Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_47;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_63;
Node_41 -> Node_42;
Node_42 -> Node_45;
Node_42 -> Node_65[style=dashed];
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_64;
Node_46 -> Node_41;
Node_64 -> Node_63;
Node_65 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_36;
Node_63 -> Node_36;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_63;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_67;
Node_50 -> Node_51;
Node_51 -> Node_54;
Node_51 -> Node_66[style=dashed];
Node_54 -> Node_49;
Node_66 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_36;
Node_67 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_63;
Node_57 -> Node_58;
Node_58 -> Node_61;
Node_58 -> Node_68[style=dashed];
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_69;
Node_62 -> Node_57;
Node_69 -> Node_63;
Node_68 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_36;
}

