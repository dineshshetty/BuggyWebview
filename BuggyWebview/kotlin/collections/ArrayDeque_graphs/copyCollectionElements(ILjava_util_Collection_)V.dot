digraph "CFG forkotlin.collections.ArrayDeque.copyCollectionElements(ILjava\/util\/Collection;)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|java.util.Iterator r0 = r7.iterator()\lr1 = r6\lint r2 = r5.elementData.length\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008|LOOP_START\lLOOP:0: B:21:0x0008\-\>B:24:0x0010\lPHI: r1 \l  PHI: (r1v1 'index' int) = (r1v0 'index' int), (r1v7 'index' int) binds: [B:20:0x0000, B:24:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r2) goto L17\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a}"];
Node_23 [shape=record,label="{23\:\ 0x000e|if (r0.hasNext() == false) goto L6\l}"];
Node_24 [shape=record,label="{24\:\ 0x0010|LOOP_END\lLOOP:0: B:21:0x0008\-\>B:24:0x0010\l|r5.elementData[r1] = r0.next()\lint r1 = r1 + 1\l}"];
Node_33 [shape=record,label="{33\:\ 0x001b|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x001b|r1 = 0\lint r2 = r5.head\l}"];
Node_26 [shape=record,label="{26\:\ 0x001e|LOOP_START\lLOOP:1: B:26:0x001e\-\>B:29:0x0026\lPHI: r1 \l  PHI: (r1v3 'index' int) = (r1v2 'index' int), (r1v6 'index' int) binds: [B:25:0x001b, B:29:0x0026] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r2) goto L16\l}"];
Node_27 [shape=record,label="{27\:\ 0x0020}"];
Node_28 [shape=record,label="{28\:\ 0x0024|if (r0.hasNext() == false) goto L12\l}"];
Node_29 [shape=record,label="{29\:\ 0x0026|LOOP_END\lLOOP:1: B:26:0x001e\-\>B:29:0x0026\l|r5.elementData[r1] = r0.next()\lint r1 = r1 + 1\l}"];
Node_34 [shape=record,label="{34\:\ 0x0031|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0031|int r1 = size()\lr5.size = r1 + r7.size()\l}"];
Node_31 [shape=record,label="{31\:\ 0x003c|RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0031|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final void kotlin.collections.ArrayDeque.copyCollectionElements((r5v0 'this' kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r6v0 'internalIndex' int A[D('internalIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.util.Collection\<? extends E\> A[D('elements' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x0010 \-\> B:21:0x0008, BACK_EDGE: B:29:0x0026 \-\> B:26:0x001e, CROSS_EDGE: B:26:0x001e \-\> B:30:0x0031, CROSS_EDGE: B:21:0x0008 \-\> B:25:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (ILjava\/util\/Collection\<+TE;\>;)V\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_32;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_33;
Node_24 -> Node_21;
Node_33 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_35;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_34;
Node_29 -> Node_26;
Node_34 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_19;
Node_35 -> Node_30;
Node_32 -> Node_25;
}

