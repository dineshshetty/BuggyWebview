digraph "CFG forkotlin.collections.ArrayDeque.removeAll(Ljava\/util\/Collection;)Z" {
Node_49 [shape=record,label="{49\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0002: INVOKE  (r14 I:java.lang.Object A[D('elements' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY])  (LINE:462)\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: INVOKE  (r2 I:boolean) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) type: VIRTUAL call: kotlin.collections.ArrayDeque.isEmpty():boolean A[MD:():boolean (m)] (LINE:588)\l0x000b: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x000c|0x000c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:88:0x00ab \l}"];
Node_53 [shape=record,label="{53\:\ 0x000e|0x000e: IGET  (r2 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[] \l0x0010: ARRAY_LENGTH  (r2 I:int) = (r2 I:??[]) \l0x0011: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0012|0x0012: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0016 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0014|0x0014: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x0017|0x0017: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x001b \l}"];
Node_59 [shape=record,label="{59\:\ 0x001b|0x001b: IGET  (r2 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.head int  (LINE:591)\l0x001d: INVOKE  (r3 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)]\l0x0021: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0022: INVOKE  (r2 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]), (r2 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.positiveMod(int):int A[MD:(int):int (m)]\l0x0026: IGET  (r3 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.head int  (LINE:592)\l0x0028: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:593)\l0x0029: IGET  (r6 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.head int  (LINE:595)\l0x002b: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_60 [shape=record,label="{60\:\ 0x002c|0x002c: IF  (r6 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char] A[D('tail$iv' int)])  \-\> B:69:0x0054 \l}"];
Node_61 [shape=record,label="{61\:\ 0x002e|0x002e: IGET  (r6 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.head int  (LINE:596)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0030|LOOP_START\lLOOP:0: B:62:0x0030\-\>B:67:0x0049\l|0x0030: IF  (r6 I:??[int, byte, short, char] A[D('index$iv' int)]) \>= (r2 I:??[int, byte, short, char] A[D('tail$iv' int)])  \-\> B:89:0x004c \l}"];
Node_63 [shape=record,label="{63\:\ 0x0032|0x0032: IGET  (r8 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:597)\l0x0034: AGET  (r8 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index$iv' int)]) \l0x0036: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)])  (LINE:600)\l0x0037: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0038: INVOKE  (r11 I:boolean) = (r14 I:java.util.Collection A[D('elements' java.util.Collection)]), (r9 I:java.lang.Object A[D('it' java.lang.Object)]) type: INTERFACE call: java.util.Collection.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:462)\l0x003c: ARITH  (r9 I:??[int, boolean] A[D('it' java.lang.Object)]) = (r11 I:??[int, boolean, short, byte, char]) ^ (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_64 [shape=record,label="{64\:\ 0x003e|0x003e: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x0048 \l}"];
Node_65 [shape=record,label="{65\:\ 0x0040|0x0040: IGET  (r9 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:601)\l0x0042: ARITH  (r10 I:int) = (r3 I:int A[D('newTail$iv' int)]) + (1 int) \l0x0044: APUT  \l  (r9 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char] A[D('newTail$iv' int)])\l  (r8 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)])\l \l0x0046: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newTail$iv' int)]) \l}"];
Node_91 [shape=record,label="{91\:\ 0x0049|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x0049|LOOP_END\lLOOP:0: B:62:0x0030\-\>B:67:0x0049\l|0x0049: ARITH  (r6 I:int) = (r6 I:int A[D('index$iv' int)]) + (1 int)  (LINE:596)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0048|0x0048: CONST  (r5 I:??[boolean, int, float, short, byte, char] A[D('modified$iv' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:603)\l}"];
Node_90 [shape=record,label="{90\:\ 0x0049|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x004c|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x004c|0x004c: IGET  (r4 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:606)\l0x004e: INVOKE  (r4 I:java.lang.Object[]), (r7 I:java.lang.Object), (r3 I:int A[D('newTail$iv' int)]), (r2 I:int A[D('tail$iv' int)]) type: STATIC call: kotlin.collections.ArraysKt.fill(java.lang.Object[], java.lang.Object, int, int):void A[MD:\<T\>:(T[], T, int, int):void (m)]\l0x0051: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newTail$iv' int)]) \l0x0052: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newTail$iv' int)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('modified$iv' boolean)]) \l}"];
Node_84 [shape=record,label="{84\:\ 0x009d|0x009d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('modified$iv' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:88:0x00ab  (LINE:635)\l}"];
Node_85 [shape=record,label="{85\:\ 0x009f|0x009f: IGET  (r5 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.head int  (LINE:636)\l0x00a1: ARITH  (r5 I:int) = (r4 I:int A[D('newTail$iv' int)]) \- (r5 I:int) \l0x00a3: INVOKE  (r5 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]), (r5 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.negativeMod(int):int A[MD:(int):int (m)]\l0x00a7: IPUT  (r5 I:int), (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.size int \l}"];
Node_69 [shape=record,label="{69\:\ 0x0054|0x0054: IGET  (r6 I:int) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.head int  (LINE:609)\l0x0056: IGET  (r8 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[] \l0x0058: ARRAY_LENGTH  (r8 I:int) = (r8 I:??[]) \l}"];
Node_70 [shape=record,label="{70\:\ 0x0059|LOOP_START\lLOOP:1: B:70:0x0059\-\>B:75:0x0074\l|0x0059: IF  (r6 I:??[int, byte, short, char] A[D('index$iv' int)]) \>= (r8 I:??[int, byte, short, char])  \-\> B:92:0x0077 \l}"];
Node_71 [shape=record,label="{71\:\ 0x005b|0x005b: IGET  (r9 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:610)\l0x005d: AGET  (r10 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index$iv' int)]) \l0x005f: APUT  (r9 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index$iv' int)]), (r7 I:??[OBJECT, ARRAY])  (LINE:611)\l0x0061: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)])  (LINE:614)\l0x0062: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0063: INVOKE  (r12 I:boolean) = (r14 I:java.util.Collection A[D('elements' java.util.Collection)]), (r9 I:java.lang.Object A[D('it' java.lang.Object)]) type: INTERFACE call: java.util.Collection.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:462)\l0x0067: ARITH  (r9 I:??[int, boolean] A[D('it' java.lang.Object)]) = (r12 I:??[int, boolean, short, byte, char]) ^ (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_72 [shape=record,label="{72\:\ 0x0069|0x0069: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x0073 \l}"];
Node_73 [shape=record,label="{73\:\ 0x006b|0x006b: IGET  (r9 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:615)\l0x006d: ARITH  (r11 I:int) = (r3 I:int A[D('newTail$iv' int)]) + (1 int) \l0x006f: APUT  \l  (r9 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char] A[D('newTail$iv' int)])\l  (r10 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)])\l \l0x0071: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newTail$iv' int)]) \l}"];
Node_94 [shape=record,label="{94\:\ 0x0074|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x0074|LOOP_END\lLOOP:1: B:70:0x0059\-\>B:75:0x0074\l|0x0074: ARITH  (r6 I:int) = (r6 I:int A[D('index$iv' int)]) + (1 int)  (LINE:609)\l}"];
Node_74 [shape=record,label="{74\:\ 0x0073|0x0073: CONST  (r5 I:??[boolean, int, float, short, byte, char] A[D('modified$iv' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:617)\l}"];
Node_93 [shape=record,label="{93\:\ 0x0074|SYNTHETIC\l}"];
Node_92 [shape=record,label="{92\:\ 0x0077|SYNTHETIC\l}"];
Node_76 [shape=record,label="{76\:\ 0x0077|0x0077: INVOKE  (r3 I:int A[D('newTail$iv' int)]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]), (r3 I:int A[D('newTail$iv' int)]) type: DIRECT call: kotlin.collections.ArrayDeque.positiveMod(int):int A[MD:(int):int (m)] (LINE:620)\l0x007b: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:622)\l}"];
Node_77 [shape=record,label="{77\:\ 0x007c|LOOP_START\lLOOP:2: B:77:0x007c\-\>B:82:0x0098\l|0x007c: IF  (r6 I:??[int, byte, short, char] A[D('index$iv' int)]) \>= (r2 I:??[int, byte, short, char] A[D('tail$iv' int)])  \-\> B:95:0x009b \l}"];
Node_78 [shape=record,label="{78\:\ 0x007e|0x007e: IGET  (r8 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:623)\l0x0080: AGET  (r9 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index$iv' int)]) \l0x0082: APUT  (r8 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index$iv' int)]), (r7 I:??[OBJECT, ARRAY])  (LINE:624)\l0x0084: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)])  (LINE:627)\l0x0085: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0086: INVOKE  (r11 I:boolean) = (r14 I:java.util.Collection A[D('elements' java.util.Collection)]), (r8 I:java.lang.Object A[D('it' java.lang.Object)]) type: INTERFACE call: java.util.Collection.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:462)\l0x008a: ARITH  (r8 I:??[int, boolean] A[D('it' java.lang.Object)]) = (r11 I:??[int, boolean, short, byte, char]) ^ (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_79 [shape=record,label="{79\:\ 0x008c|0x008c: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x0097 \l}"];
Node_80 [shape=record,label="{80\:\ 0x008e|0x008e: IGET  (r8 I:java.lang.Object[]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:628)\l0x0090: APUT  \l  (r8 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char] A[D('newTail$iv' int)])\l  (r9 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)])\l \l0x0092: INVOKE  (r3 I:int A[D('newTail$iv' int)]) = (r0 I:kotlin.collections.ArrayDeque A[D('this_$iv' kotlin.collections.ArrayDeque)]), (r3 I:int A[D('newTail$iv' int)]) type: DIRECT call: kotlin.collections.ArrayDeque.incremented(int):int A[MD:(int):int (m)] (LINE:629)\l}"];
Node_97 [shape=record,label="{97\:\ 0x0098|SYNTHETIC\l}"];
Node_82 [shape=record,label="{82\:\ 0x0098|LOOP_END\lLOOP:2: B:77:0x007c\-\>B:82:0x0098\l|0x0098: ARITH  (r6 I:int) = (r6 I:int A[D('index$iv' int)]) + (1 int)  (LINE:622)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0097|0x0097: CONST  (r5 I:??[boolean, int, float, short, byte, char] A[D('modified$iv' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:631)\l}"];
Node_96 [shape=record,label="{96\:\ 0x0098|SYNTHETIC\l}"];
Node_95 [shape=record,label="{95\:\ 0x009b|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x009b|0x009b: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newTail$iv' int)]) \l0x009c: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newTail$iv' int)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('modified$iv' boolean)]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0016|0x0016: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_88 [shape=record,label="{88\:\ 0x00ab|RETURN\l|0x00ab: RETURN  (r3 I:boolean)  (LINE:462)\l}"];
Node_50 [shape=record,label="{50\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean kotlin.collections.ArrayDeque.removeAll((r13 'this' I:kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r14 I:java.util.Collection\<? extends java.lang.Object\> A[D('elements' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lBACK_EDGE: B:67:0x0049 \-\> B:62:0x0030, CROSS_EDGE: B:66:0x0048 \-\> B:67:0x0049, CROSS_EDGE: B:84:0x009d \-\> B:88:0x00ab, BACK_EDGE: B:75:0x0074 \-\> B:70:0x0059, CROSS_EDGE: B:74:0x0073 \-\> B:75:0x0074, BACK_EDGE: B:82:0x0098 \-\> B:77:0x007c, CROSS_EDGE: B:81:0x0097 \-\> B:82:0x0098, CROSS_EDGE: B:83:0x009b \-\> B:84:0x009d, CROSS_EDGE: B:57:0x0017 \-\> B:88:0x00ab, CROSS_EDGE: B:56:0x0016 \-\> B:57:0x0017, CROSS_EDGE: B:52:0x000c \-\> B:88:0x00ab\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (Ljava\/util\/Collection\<+Ljava\/lang\/Object;\>;)Z\lDebug Info:\l  0x0037\-0x003c: r9 'it' Ljava\/lang\/Object;\l  0x0038\-0x003c: r10 '$i$a$\-filterInPlace\-ArrayDeque$removeAll$1' I\l  0x0028\-0x0044: r3 'newTail$iv' I\l  0x0044\-0x0048: r10 'newTail$iv' I\l  0x0036\-0x0049: r8 'element$iv' Ljava\/lang\/Object;\l  0x0030\-0x004c: r6 'index$iv' I\l  0x0062\-0x0067: r9 'it' Ljava\/lang\/Object;\l  0x0063\-0x0067: r11 '$i$a$\-filterInPlace\-ArrayDeque$removeAll$1' I\l  0x0048\-0x006f: r3 'newTail$iv' I\l  0x006f\-0x0073: r11 'newTail$iv' I\l  0x005f\-0x0074: r10 'element$iv' Ljava\/lang\/Object;\l  0x0056\-0x0077: r6 'index$iv' I\l  0x0085\-0x008a: r8 'it' Ljava\/lang\/Object;\l  0x0086\-0x008a: r10 '$i$a$\-filterInPlace\-ArrayDeque$removeAll$1' I\l  0x0082\-0x0098: r9 'element$iv' Ljava\/lang\/Object;\l  0x0029\-0x009d: r5 'modified$iv' Z\l  0x007c\-0x009d: r6 'index$iv' I\l  0x0073\-0x009d: r3 'newTail$iv' I\l  0x0026\-0x00aa: r2 'tail$iv' I\l  0x009d\-0x00aa: r3 'modified$iv' Z\l  0x009d\-0x00aa: r4 'newTail$iv' I\l  0x0006\-0x00ab: r0 'this_$iv' Lkotlin\/collections\/ArrayDeque;\l  0x0007\-0x00ab: r1 '$i$f$filterInPlace' I\l  \-1 \-0x00ab: r14 'elements' Ljava\/util\/Collection;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [462=5]\}\lMETHOD_OVERRIDE: [ClspMth\{java.util.Collection.removeAll(java.util.Collection\<?\>):boolean\}]\l}"];
MethodNode -> Node_49;Node_49 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_88;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_57;
Node_57 -> Node_59;
Node_57 -> Node_88[style=dashed];
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_69;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_89;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_91;
Node_91 -> Node_67;
Node_67 -> Node_62;
Node_66 -> Node_90;
Node_90 -> Node_67;
Node_89 -> Node_68;
Node_68 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_88;
Node_85 -> Node_88;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_92;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_74;
Node_73 -> Node_94;
Node_94 -> Node_75;
Node_75 -> Node_70;
Node_74 -> Node_93;
Node_93 -> Node_75;
Node_92 -> Node_76;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_95;
Node_78 -> Node_79;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_81;
Node_80 -> Node_97;
Node_97 -> Node_82;
Node_82 -> Node_77;
Node_81 -> Node_96;
Node_96 -> Node_82;
Node_95 -> Node_83;
Node_83 -> Node_84;
Node_56 -> Node_57;
Node_88 -> Node_50;
}

