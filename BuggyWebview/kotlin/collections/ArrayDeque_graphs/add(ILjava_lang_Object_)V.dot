digraph "CFG forkotlin.collections.ArrayDeque.add(ILjava\/lang\/Object;)V" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|kotlin.collections.AbstractList.Companion.checkPositionIndex$kotlin_stdlib(r10, size())\l}"];
Node_26 [shape=record,label="{26\:\ 0x000d|if (r10 != size()) goto L6\l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|addLast(r11)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0012|RETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0013|if (r10 != 0) goto L9\l}"];
Node_30 [shape=record,label="{30\:\ 0x0015|addFirst(r11)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0018|RETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|ensureCapacity(size() + 1)\lint r0 = positiveMod(r9.head + r10)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0030|if (r10 \>= ((size() + 1) \>\> 1)) goto L18\l}"];
Node_34 [shape=record,label="{34\:\ 0x0032|int r2 = decremented(r0)\lint r4 = decremented(r9.head)\lint r5 = r9.head\l}"];
Node_35 [shape=record,label="{35\:\ 0x003e|if (r2 \< r5) goto L17\l}"];
Node_36 [shape=record,label="{36\:\ 0x0040|java.lang.Object[] r3 = r9.elementData\lr3[r4] = r3[r5]\lkotlin.collections.ArraysKt.copyInto(r3, r3, r5, r5 + 1, r2 + 1)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0063|r9.elementData[r2] = r11\lr9.head = r4\l}"];
Node_44 [shape=record,label="{44\:\ 0x0097|r9.size = size() + 1\l}"];
Node_45 [shape=record,label="{45\:\ 0x009e|RETURN\l|return\l}"];
Node_37 [shape=record,label="{37\:\ 0x004e|java.lang.Object[] r6 = r9.elementData\lkotlin.collections.ArraysKt.copyInto(r6, r6, r5 + (\-1), r5, r6.length)\ljava.lang.Object[] r5 = r9.elementData\lr5[r5.length \- 1] = r5[0]\lkotlin.collections.ArraysKt.copyInto(r5, r5, 0, 1, r2 + 1)\l}"];
Node_39 [shape=record,label="{39\:\ 0x006a|int r2 = positiveMod(r9.head + size())\l}"];
Node_40 [shape=record,label="{40\:\ 0x0075|if (r0 \>= r2) goto L22\l}"];
Node_41 [shape=record,label="{41\:\ 0x0077|java.lang.Object[] r3 = r9.elementData\lkotlin.collections.ArraysKt.copyInto(r3, r3, r0 + 1, r0, r2)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0093|r9.elementData[r0] = r11\l}"];
Node_42 [shape=record,label="{42\:\ 0x007f|java.lang.Object[] r4 = r9.elementData\lkotlin.collections.ArraysKt.copyInto(r4, r4, 1, 0, r2)\ljava.lang.Object[] r4 = r9.elementData\lr4[0] = r4[r4.length \- 1]\lkotlin.collections.ArraysKt.copyInto(r4, r4, r0 + 1, r0, r4.length \- 1)\l}"];
MethodNode[shape=record,label="{public void kotlin.collections.ArrayDeque.add((r9v0 'this' kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r10v0 'index' int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 E A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:31:0x0018 \-\> B:24:?, CROSS_EDGE: B:45:0x009e \-\> B:24:?, CROSS_EDGE: B:37:0x004e \-\> B:38:0x0063, CROSS_EDGE: B:43:0x0093 \-\> B:44:0x0097, CROSS_EDGE: B:42:0x007f \-\> B:43:0x0093\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (ITE;)V\lMETHOD_OVERRIDE: [ClspMth\{java.util.AbstractList.add(int, E):void\}, ClspMth\{java.util.List.add(int, E):void\}]\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_24;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_24;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_39;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_38;
Node_38 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_24;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_43;
Node_43 -> Node_44;
Node_42 -> Node_43;
}

