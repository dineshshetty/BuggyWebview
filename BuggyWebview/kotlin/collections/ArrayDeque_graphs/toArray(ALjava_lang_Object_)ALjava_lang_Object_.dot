digraph "CFG forkotlin.collections.ArrayDeque.toArray([Ljava\/lang\/Object;)[Ljava\/lang\/Object;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"array\")\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|if (r10.length \< size()) goto L15\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|r0 = (T[]) r10\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|PHI: r0 \l  PHI: (r0v4 'dest' java.lang.Object[]) = (r0v3 'dest' java.lang.Object[]), (r0v5 'dest' java.lang.Object[]) binds: [B:21:0x000e, B:20:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Intrinsics.checkNotNull(r0, \"null cannot be cast to non\-null type kotlin.Array\<kotlin.Any?\>\")\lint r1 = positiveMod(r9.head + size())\lint r5 = r9.head\l}"];
Node_23 [shape=record,label="{23\:\ 0x0029|if (r5 \>= r1) goto L12\l}"];
Node_24 [shape=record,label="{24\:\ 0x002b|kotlin.collections.ArraysKt.copyInto$default(r9.elementData, r0, 0, r5, r1, 2, null)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0053}"];
Node_29 [shape=record,label="{29\:\ 0x0058|if (r0.length \<= size()) goto L10\l}"];
Node_30 [shape=record,label="{30\:\ 0x005a|r0 = r0\lr0[size()] = null\l}"];
Node_31 [shape=record,label="{31\:\ 0x0061|RETURN\l|return (T[]) r0\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0036}"];
Node_26 [shape=record,label="{26\:\ 0x003f|if ((isEmpty() ^ true) == false) goto L7\l}"];
Node_27 [shape=record,label="{27\:\ 0x0041|java.lang.Object[] r2 = r9.elementData\ljava.lang.Object[] r0 = r0\lkotlin.collections.ArraysKt.copyInto(r2, r0, 0, r9.head, r2.length)\ljava.lang.Object[] r2 = r9.elementData\ljava.lang.Object[] r0 = r0\lkotlin.collections.ArraysKt.copyInto(r2, r0, r2.length \- r9.head, 0, r1)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|java.lang.Object[] r0 = (T[]) kotlin.collections.ArraysKt.arrayOfNulls(r10, size())\l}"];
MethodNode[shape=record,label="{public T[] kotlin.collections.ArrayDeque.toArray((r9v0 'this' kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r10v0 'array' T[] A[D('array' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:29:0x0058 \-\> B:31:0x0061, CROSS_EDGE: B:27:0x0041 \-\> B:28:0x0053, CROSS_EDGE: B:26:0x003f \-\> B:28:0x0053, CROSS_EDGE: B:21:0x000e \-\> B:22:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: [T, E]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;)[TT;\lMETHOD_OVERRIDE: [ClspMth\{\<T\> java.util.Collection.toArray(T[]):T[]\}]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_17;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_21 -> Node_22;
}

