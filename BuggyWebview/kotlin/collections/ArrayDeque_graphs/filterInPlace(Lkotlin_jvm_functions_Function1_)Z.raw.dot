digraph "CFG forkotlin.collections.ArrayDeque.filterInPlace(Lkotlin\/jvm\/functions\/Function1;)Z" {
Node_47 [shape=record,label="{47\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: INVOKE  (r1 I:boolean) = (r10 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.isEmpty():boolean A[MD:():boolean (m)] (LINE:467)\l0x0005: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0006|0x0006: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:0x00a5 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0008|0x0008: IGET  (r1 I:java.lang.Object[]) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[] \l0x000a: ARRAY_LENGTH  (r1 I:int) = (r1 I:??[]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x000f \l}"];
Node_53 [shape=record,label="{53\:\ 0x000d|0x000d: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0014 \l}"];
Node_57 [shape=record,label="{57\:\ 0x0014|0x0014: IGET  (r1 I:int) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:470)\l0x0016: INVOKE  (r2 I:int) = (r10 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)]\l0x001a: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x001b: INVOKE  (r1 I:int) = (r10 I:kotlin.collections.ArrayDeque), (r1 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.positiveMod(int):int A[MD:(int):int (m)]\l0x001f: IGET  (r2 I:int) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:471)\l0x0021: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:472)\l0x0022: IGET  (r4 I:int) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:474)\l0x0024: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_58 [shape=record,label="{58\:\ 0x0025|0x0025: IF  (r4 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char] A[D('tail' int)])  \-\> B:67:0x004d \l}"];
Node_59 [shape=record,label="{59\:\ 0x0027|0x0027: IGET  (r4 I:int) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:475)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0029|LOOP_START\lLOOP:0: B:60:0x0029\-\>B:65:0x0044\l|0x0029: IF  (r4 I:??[int, byte, short, char] A[D('index' int)]) \>= (r1 I:??[int, byte, short, char] A[D('tail' int)])  \-\> B:85:0x0047 \l}"];
Node_61 [shape=record,label="{61\:\ 0x002b|0x002b: IGET  (r6 I:java.lang.Object[]) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:476)\l0x002d: AGET  (r6 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('index' int)]) \l0x002f: INVOKE  (r7 I:java.lang.Object) = \l  (r11 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)])\l  (r6 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:479)\l0x0033: CHECK_CAST (r7 I:java.lang.Boolean) = (java.lang.Boolean) (r7 I:??[OBJECT, ARRAY]) \l0x0035: INVOKE  (r7 I:boolean) = (r7 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x0039|0x0039: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0043 \l}"];
Node_63 [shape=record,label="{63\:\ 0x003b|0x003b: IGET  (r7 I:java.lang.Object[]) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:480)\l0x003d: ARITH  (r8 I:int) = (r2 I:int A[D('newTail' int)]) + (1 int) \l0x003f: APUT  \l  (r7 I:??[OBJECT, ARRAY][])\l  (r2 I:??[int, short, byte, char] A[D('newTail' int)])\l  (r6 I:??[OBJECT, ARRAY] A[D('element' java.lang.Object)])\l \l0x0041: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newTail' int)]) \l}"];
Node_87 [shape=record,label="{87\:\ 0x0044|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x0044|LOOP_END\lLOOP:0: B:60:0x0029\-\>B:65:0x0044\l|0x0044: ARITH  (r4 I:int) = (r4 I:int A[D('index' int)]) + (1 int)  (LINE:475)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0043|0x0043: CONST  (r3 I:??[boolean, int, float, short, byte, char] A[D('modified' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:482)\l}"];
Node_86 [shape=record,label="{86\:\ 0x0044|SYNTHETIC\l}"];
Node_85 [shape=record,label="{85\:\ 0x0047|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0047|0x0047: IGET  (r4 I:java.lang.Object[] A[D('index' int)]) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:485)\l0x0049: INVOKE  (r4 I:java.lang.Object[]), (r5 I:java.lang.Object), (r2 I:int A[D('newTail' int)]), (r1 I:int A[D('tail' int)]) type: STATIC call: kotlin.collections.ArraysKt.fill(java.lang.Object[], java.lang.Object, int, int):void A[MD:\<T\>:(T[], T, int, int):void (m)]\l}"];
Node_81 [shape=record,label="{81\:\ 0x0098|0x0098: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('modified' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:83:0x00a4  (LINE:514)\l}"];
Node_82 [shape=record,label="{82\:\ 0x009a|0x009a: IGET  (r4 I:int) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:515)\l0x009c: ARITH  (r4 I:int) = (r2 I:int A[D('newTail' int)]) \- (r4 I:int) \l0x009e: INVOKE  (r4 I:int) = (r10 I:kotlin.collections.ArrayDeque), (r4 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.negativeMod(int):int A[MD:(int):int (m)]\l0x00a2: IPUT  (r4 I:int), (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.size int \l}"];
Node_83 [shape=record,label="{83\:\ 0x00a4|RETURN\l|0x00a4: RETURN  (r3 I:boolean A[D('modified' boolean)])  (LINE:517)\l}"];
Node_48 [shape=record,label="{48\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_67 [shape=record,label="{67\:\ 0x004d|0x004d: IGET  (r4 I:int) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:488)\l0x004f: IGET  (r6 I:java.lang.Object[]) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[] \l0x0051: ARRAY_LENGTH  (r6 I:int) = (r6 I:??[]) \l}"];
Node_68 [shape=record,label="{68\:\ 0x0052|LOOP_START\lLOOP:1: B:68:0x0052\-\>B:73:0x006f\l|0x0052: IF  (r4 I:??[int, byte, short, char] A[D('index' int)]) \>= (r6 I:??[int, byte, short, char])  \-\> B:88:0x0072 \l}"];
Node_69 [shape=record,label="{69\:\ 0x0054|0x0054: IGET  (r7 I:java.lang.Object[]) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:489)\l0x0056: AGET  (r8 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('index' int)]) \l0x0058: APUT  (r7 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('index' int)]), (r5 I:??[OBJECT, ARRAY])  (LINE:490)\l0x005a: INVOKE  (r7 I:java.lang.Object) = \l  (r11 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)])\l  (r8 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:493)\l0x005e: CHECK_CAST (r7 I:java.lang.Boolean) = (java.lang.Boolean) (r7 I:??[OBJECT, ARRAY]) \l0x0060: INVOKE  (r7 I:boolean) = (r7 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_70 [shape=record,label="{70\:\ 0x0064|0x0064: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x006e \l}"];
Node_71 [shape=record,label="{71\:\ 0x0066|0x0066: IGET  (r7 I:java.lang.Object[]) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:494)\l0x0068: ARITH  (r9 I:int) = (r2 I:int A[D('newTail' int)]) + (1 int) \l0x006a: APUT  \l  (r7 I:??[OBJECT, ARRAY][])\l  (r2 I:??[int, short, byte, char] A[D('newTail' int)])\l  (r8 I:??[OBJECT, ARRAY] A[D('element' java.lang.Object)])\l \l0x006c: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newTail' int)]) \l}"];
Node_90 [shape=record,label="{90\:\ 0x006f|SYNTHETIC\l}"];
Node_73 [shape=record,label="{73\:\ 0x006f|LOOP_END\lLOOP:1: B:68:0x0052\-\>B:73:0x006f\l|0x006f: ARITH  (r4 I:int) = (r4 I:int A[D('index' int)]) + (1 int)  (LINE:488)\l}"];
Node_72 [shape=record,label="{72\:\ 0x006e|0x006e: CONST  (r3 I:??[boolean, int, float, short, byte, char] A[D('modified' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:496)\l}"];
Node_89 [shape=record,label="{89\:\ 0x006f|SYNTHETIC\l}"];
Node_88 [shape=record,label="{88\:\ 0x0072|SYNTHETIC\l}"];
Node_74 [shape=record,label="{74\:\ 0x0072|0x0072: INVOKE  (r2 I:int A[D('newTail' int)]) = (r10 I:kotlin.collections.ArrayDeque), (r2 I:int A[D('newTail' int)]) type: DIRECT call: kotlin.collections.ArrayDeque.positiveMod(int):int A[MD:(int):int (m)] (LINE:499)\l0x0076: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:501)\l}"];
Node_75 [shape=record,label="{75\:\ 0x0077|LOOP_START\lLOOP:2: B:75:0x0077\-\>B:80:0x0095\l|0x0077: IF  (r4 I:??[int, byte, short, char] A[D('index' int)]) \>= (r1 I:??[int, byte, short, char] A[D('tail' int)])  \-\> B:91:0x0098 \l}"];
Node_76 [shape=record,label="{76\:\ 0x0079|0x0079: IGET  (r6 I:java.lang.Object[]) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:502)\l0x007b: AGET  (r7 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('index' int)]) \l0x007d: APUT  (r6 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('index' int)]), (r5 I:??[OBJECT, ARRAY])  (LINE:503)\l0x007f: INVOKE  (r6 I:java.lang.Object) = \l  (r11 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)])\l  (r7 I:java.lang.Object A[D('element' java.lang.Object)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:506)\l0x0083: CHECK_CAST (r6 I:java.lang.Boolean) = (java.lang.Boolean) (r6 I:??[OBJECT, ARRAY]) \l0x0085: INVOKE  (r6 I:boolean) = (r6 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_77 [shape=record,label="{77\:\ 0x0089|0x0089: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:0x0094 \l}"];
Node_78 [shape=record,label="{78\:\ 0x008b|0x008b: IGET  (r6 I:java.lang.Object[]) = (r10 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:507)\l0x008d: APUT  \l  (r6 I:??[OBJECT, ARRAY][])\l  (r2 I:??[int, short, byte, char] A[D('newTail' int)])\l  (r7 I:??[OBJECT, ARRAY] A[D('element' java.lang.Object)])\l \l0x008f: INVOKE  (r2 I:int A[D('newTail' int)]) = (r10 I:kotlin.collections.ArrayDeque), (r2 I:int A[D('newTail' int)]) type: DIRECT call: kotlin.collections.ArrayDeque.incremented(int):int A[MD:(int):int (m)] (LINE:508)\l}"];
Node_93 [shape=record,label="{93\:\ 0x0095|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ 0x0095|LOOP_END\lLOOP:2: B:75:0x0077\-\>B:80:0x0095\l|0x0095: ARITH  (r4 I:int) = (r4 I:int A[D('index' int)]) + (1 int)  (LINE:501)\l}"];
Node_79 [shape=record,label="{79\:\ 0x0094|0x0094: CONST  (r3 I:??[boolean, int, float, short, byte, char] A[D('modified' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:510)\l}"];
Node_92 [shape=record,label="{92\:\ 0x0095|SYNTHETIC\l}"];
Node_91 [shape=record,label="{91\:\ 0x0098|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x000f|0x000f: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_84 [shape=record,label="{84\:\ 0x00a5|RETURN\l|0x00a5: RETURN  (r2 I:boolean A[D('newTail' int)])  (LINE:468)\l}"];
MethodNode[shape=record,label="{private final boolean kotlin.collections.ArrayDeque.filterInPlace((r10 'this' I:kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r11 I:kotlin.jvm.functions.Function1\<? super E, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:65:0x0044 \-\> B:60:0x0029, CROSS_EDGE: B:64:0x0043 \-\> B:65:0x0044, CROSS_EDGE: B:81:0x0098 \-\> B:83:0x00a4, BACK_EDGE: B:73:0x006f \-\> B:68:0x0052, CROSS_EDGE: B:72:0x006e \-\> B:73:0x006f, BACK_EDGE: B:80:0x0095 \-\> B:75:0x0077, CROSS_EDGE: B:79:0x0094 \-\> B:80:0x0095, CROSS_EDGE: B:75:0x0077 \-\> B:81:0x0098, CROSS_EDGE: B:84:0x00a5 \-\> B:48:?, CROSS_EDGE: B:54:0x000f \-\> B:55:0x0010, CROSS_EDGE: B:50:0x0006 \-\> B:84:0x00a5\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x003f: r2 'newTail' I\l  0x003f\-0x0043: r8 'newTail' I\l  0x002f\-0x0044: r6 'element' Ljava\/lang\/Object;\l  0x0029\-0x0047: r4 'index' I\l  0x0043\-0x006a: r2 'newTail' I\l  0x006a\-0x006e: r9 'newTail' I\l  0x0058\-0x006f: r8 'element' Ljava\/lang\/Object;\l  0x004f\-0x0072: r4 'index' I\l  0x007d\-0x0095: r7 'element' Ljava\/lang\/Object;\l  0x0077\-0x0098: r4 'index' I\l  0x001f\-0x00a5: r1 'tail' I\l  0x006e\-0x00a5: r2 'newTail' I\l  0x0022\-0x00a5: r3 'modified' Z\l  0x0001\-0x00a5: r0 '$i$f$filterInPlace' I\l  \-1 \-0x00a5: r11 'predicate' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [E]\lSIGNATURE: (Lkotlin\/jvm\/functions\/Function1\<\-TE;Ljava\/lang\/Boolean;\>;)Z\l}"];
MethodNode -> Node_47;Node_47 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_84;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_55;
Node_55 -> Node_57;
Node_55 -> Node_84[style=dashed];
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_67;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_85;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_87;
Node_87 -> Node_65;
Node_65 -> Node_60;
Node_64 -> Node_86;
Node_86 -> Node_65;
Node_85 -> Node_66;
Node_66 -> Node_81;
Node_81 -> Node_82[style=dashed];
Node_81 -> Node_83;
Node_82 -> Node_83;
Node_83 -> Node_48;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_88;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_72;
Node_71 -> Node_90;
Node_90 -> Node_73;
Node_73 -> Node_68;
Node_72 -> Node_89;
Node_89 -> Node_73;
Node_88 -> Node_74;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_91;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_79;
Node_78 -> Node_93;
Node_93 -> Node_80;
Node_80 -> Node_75;
Node_79 -> Node_92;
Node_92 -> Node_80;
Node_91 -> Node_81;
Node_54 -> Node_55;
Node_84 -> Node_48;
}

