digraph "CFG forkotlin.collections.ArrayDeque.addAll(ILjava\/util\/Collection;)Z" {
Node_39 [shape=record,label="{39\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0002: INVOKE  (r13 I:java.lang.Object A[D('elements' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: SGET  (r0 I:kotlin.collections.AbstractList$Companion) =  kotlin.collections.AbstractList.Companion kotlin.collections.AbstractList$Companion  (LINE:279)\l0x0007: INVOKE  (r1 I:int) = (r11 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)]\l0x000b: INVOKE  (r0 I:kotlin.collections.AbstractList$Companion), (r12 I:int A[D('index' int)]), (r1 I:int) type: VIRTUAL call: kotlin.collections.AbstractList.Companion.checkPositionIndex$kotlin_stdlib(int, int):void A[MD:(int, int):void (m)]\l0x000e: INVOKE  (r0 I:boolean) = (r13 I:java.util.Collection A[D('elements' java.util.Collection)]) type: INTERFACE call: java.util.Collection.isEmpty():boolean A[MD:():boolean (c)] (LINE:281)\l0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0016 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0015|RETURN\l|0x0015: RETURN  (r1 I:boolean)  (LINE:282)\l}"];
Node_40 [shape=record,label="{40\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0016|0x0016: INVOKE  (r0 I:int) = (r11 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)] (LINE:283)\l}"];
Node_45 [shape=record,label="{45\:\ 0x001a|0x001a: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0021 \l}"];
Node_46 [shape=record,label="{46\:\ 0x001c|0x001c: INVOKE  (r0 I:boolean) = (r11 I:kotlin.collections.ArrayDeque), (r13 I:java.util.Collection A[D('elements' java.util.Collection)]) type: VIRTUAL call: kotlin.collections.ArrayDeque.addAll(java.util.Collection):boolean A[MD:(java.util.Collection\<? extends E\>):boolean (m)] (LINE:284)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0020|RETURN\l|0x0020: RETURN  (r0 I:boolean) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0021|0x0021: INVOKE  (r0 I:int) = (r11 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)] (LINE:287)\l0x0025: INVOKE  (r2 I:int) = (r13 I:java.util.Collection A[D('elements' java.util.Collection)]) type: INTERFACE call: java.util.Collection.size():int A[MD:():int (c)]\l0x0029: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l0x002a: INVOKE  (r11 I:kotlin.collections.ArrayDeque), (r0 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.ensureCapacity(int):void A[MD:(int):void (m)]\l0x002d: IGET  (r0 I:int) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:289)\l0x002f: INVOKE  (r2 I:int) = (r11 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)]\l0x0033: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l0x0034: INVOKE  (r0 I:int) = (r11 I:kotlin.collections.ArrayDeque), (r0 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.positiveMod(int):int A[MD:(int):int (m)]\l0x0038: IGET  (r2 I:int) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:290)\l0x003a: ARITH  (r2 I:int) = (r2 I:int) + (r12 I:int A[D('index' int)]) \l0x003b: INVOKE  (r2 I:int) = (r11 I:kotlin.collections.ArrayDeque), (r2 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.positiveMod(int):int A[MD:(int):int (m)]\l0x003f: INVOKE  (r3 I:int) = (r13 I:java.util.Collection A[D('elements' java.util.Collection)]) type: INTERFACE call: java.util.Collection.size():int A[MD:():int (c)] (LINE:291)\l0x0043: INVOKE  (r4 I:int) = (r11 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)] (LINE:293)\l0x0047: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0048: ARITH  (r4 I:int) = (r4 I:int) + (r5 I:int) \l0x0049: ARITH  (r4 I:int) = (r4 I:int) \>\> (r5 I:int) \l}"];
Node_49 [shape=record,label="{49\:\ 0x004a|0x004a: IF  (r12 I:??[int, byte, short, char] A[D('index' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:63:0x009e \l}"];
Node_50 [shape=record,label="{50\:\ 0x004c|0x004c: IGET  (r4 I:int) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:296)\l0x004e: ARITH  (r6 I:int) = (r4 I:int) \- (r3 I:int A[D('elementsSize' int)]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0050|0x0050: IF  (r2 I:??[int, byte, short, char] A[D('internalIndex' int)]) \< (r4 I:??[int, byte, short, char])  \-\> B:58:0x0076  (LINE:298)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0052|0x0052: IF  (r6 I:??[int, byte, short, char] A[D('shiftedHead' int)]) \< (0 ??[int, byte, short, char])  \-\> B:54:0x005a  (LINE:299)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0054|0x0054: IGET  (r1 I:java.lang.Object[]) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:300)\l0x0056: INVOKE  \l  (r1 I:java.lang.Object[])\l  (r1 I:java.lang.Object[])\l  (r6 I:int A[D('shiftedHead' int)])\l  (r4 I:int)\l  (r2 I:int A[D('internalIndex' int)])\l type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x0092|0x0092: IPUT  (r6 I:int A[D('shiftedHead' int)]), (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:322)\l0x0094: ARITH  (r1 I:int) = (r2 I:int A[D('internalIndex' int)]) \- (r3 I:int A[D('elementsSize' int)])  (LINE:323)\l0x0096: INVOKE  (r1 I:int) = (r11 I:kotlin.collections.ArrayDeque), (r1 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.negativeMod(int):int A[MD:(int):int (m)]\l0x009a: INVOKE  (r11 I:kotlin.collections.ArrayDeque), (r1 I:int), (r13 I:java.util.Collection A[D('elements' java.util.Collection)]) type: DIRECT call: kotlin.collections.ArrayDeque.copyCollectionElements(int, java.util.Collection):void A[MD:(int, java.util.Collection\<? extends E\>):void (m)]\l}"];
Node_77 [shape=record,label="{77\:\ 0x00ea|RETURN\l|0x00ea: RETURN  (r5 I:boolean)  (LINE:353)\l}"];
Node_54 [shape=record,label="{54\:\ 0x005a|0x005a: IGET  (r7 I:java.lang.Object[]) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:302)\l0x005c: ARRAY_LENGTH  (r8 I:int) = (r7 I:??[]) \l0x005d: ARITH  (r6 I:int) = (r6 I:int A[D('shiftedHead' int)]) + (r8 I:int) \l0x005e: ARITH  (r8 I:int) = (r2 I:int A[D('internalIndex' int)]) \- (r4 I:int)  (LINE:303)\l0x0060: ARRAY_LENGTH  (r9 I:int) = (r7 I:??[])  (LINE:304)\l0x0061: ARITH  (r9 I:int) = (r9 I:int) \- (r6 I:int A[D('shiftedHead' int)]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x0062|0x0062: IF  (r9 I:??[int, byte, short, char] A[D('shiftToBack' int)]) \< (r8 I:??[int, byte, short, char] A[D('elementsToShift' int)])  \-\> B:57:0x0068  (LINE:306)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0064|0x0064: INVOKE  \l  (r7 I:java.lang.Object[])\l  (r7 I:java.lang.Object[])\l  (r6 I:int A[D('shiftedHead' int)])\l  (r4 I:int)\l  (r2 I:int A[D('internalIndex' int)])\l type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)] (LINE:307)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0068|0x0068: ARITH  (r10 I:int) = (r4 I:int) + (r9 I:int A[D('shiftToBack' int)])  (LINE:309)\l0x006a: INVOKE  (r7 I:java.lang.Object[]), (r7 I:java.lang.Object[]), (r6 I:int A[D('shiftedHead' int)]), (r4 I:int), (r10 I:int) type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l0x006d: IGET  (r4 I:java.lang.Object[]) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:310)\l0x006f: IGET  (r7 I:int) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int \l0x0071: ARITH  (r7 I:int) = (r7 I:int) + (r9 I:int A[D('shiftToBack' int)]) \l0x0072: INVOKE  (r4 I:java.lang.Object[]), (r4 I:java.lang.Object[]), (r1 I:int), (r7 I:int), (r2 I:int A[D('internalIndex' int)]) type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0076|0x0076: IGET  (r7 I:java.lang.Object[]) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:314)\l0x0078: ARRAY_LENGTH  (r8 I:int) = (r7 I:??[]) \l0x0079: INVOKE  (r7 I:java.lang.Object[]), (r7 I:java.lang.Object[]), (r6 I:int A[D('shiftedHead' int)]), (r4 I:int), (r8 I:int) type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x007c|0x007c: IF  (r3 I:??[int, byte, short, char] A[D('elementsSize' int)]) \< (r2 I:??[int, byte, short, char] A[D('internalIndex' int)])  \-\> B:61:0x0086  (LINE:315)\l}"];
Node_60 [shape=record,label="{60\:\ 0x007e|0x007e: IGET  (r4 I:java.lang.Object[]) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:316)\l0x0080: ARRAY_LENGTH  (r7 I:int) = (r4 I:??[]) \l0x0081: ARITH  (r7 I:int) = (r7 I:int) \- (r3 I:int A[D('elementsSize' int)]) \l0x0082: INVOKE  (r4 I:java.lang.Object[]), (r4 I:java.lang.Object[]), (r7 I:int), (r1 I:int), (r2 I:int A[D('internalIndex' int)]) type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l}"];
Node_61 [shape=record,label="{61\:\ 0x0086|0x0086: IGET  (r4 I:java.lang.Object[]) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:318)\l0x0088: ARRAY_LENGTH  (r7 I:int) = (r4 I:??[]) \l0x0089: ARITH  (r7 I:int) = (r7 I:int) \- (r3 I:int A[D('elementsSize' int)]) \l0x008a: INVOKE  (r4 I:java.lang.Object[]), (r4 I:java.lang.Object[]), (r7 I:int), (r1 I:int), (r3 I:int A[D('elementsSize' int)]) type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l0x008d: IGET  (r4 I:java.lang.Object[]) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:319)\l0x008f: INVOKE  \l  (r4 I:java.lang.Object[])\l  (r4 I:java.lang.Object[])\l  (r1 I:int)\l  (r3 I:int A[D('elementsSize' int)])\l  (r2 I:int A[D('internalIndex' int)])\l type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l}"];
Node_63 [shape=record,label="{63\:\ 0x009e|0x009e: ARITH  (r4 I:int) = (r2 I:int A[D('internalIndex' int)]) + (r3 I:int A[D('elementsSize' int)])  (LINE:327)\l}"];
Node_64 [shape=record,label="{64\:\ 0x00a0|0x00a0: IF  (r2 I:??[int, byte, short, char] A[D('internalIndex' int)]) \>= (r0 I:??[int, byte, short, char] A[D('tail' int)])  \-\> B:72:0x00c8  (LINE:329)\l}"];
Node_65 [shape=record,label="{65\:\ 0x00a2|0x00a2: ARITH  (r6 I:int) = (r0 I:int A[D('tail' int)]) + (r3 I:int A[D('elementsSize' int)])  (LINE:330)\l0x00a4: IGET  (r7 I:java.lang.Object[]) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[] \l0x00a6: ARRAY_LENGTH  (r8 I:int) = (r7 I:??[]) \l}"];
Node_66 [shape=record,label="{66\:\ 0x00a7|0x00a7: IF  (r6 I:??[int, byte, short, char]) \> (r8 I:??[int, byte, short, char])  \-\> B:68:0x00ad \l}"];
Node_67 [shape=record,label="{67\:\ 0x00a9|0x00a9: INVOKE  \l  (r7 I:java.lang.Object[])\l  (r7 I:java.lang.Object[])\l  (r4 I:int A[D('shiftedInternalIndex' int)])\l  (r2 I:int A[D('internalIndex' int)])\l  (r0 I:int A[D('tail' int)])\l type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)] (LINE:331)\l}"];
Node_76 [shape=record,label="{76\:\ 0x00e7|0x00e7: INVOKE  \l  (r11 I:kotlin.collections.ArrayDeque)\l  (r2 I:int A[D('internalIndex' int)])\l  (r13 I:java.util.Collection A[D('elements' java.util.Collection)])\l type: DIRECT call: kotlin.collections.ArrayDeque.copyCollectionElements(int, java.util.Collection):void A[MD:(int, java.util.Collection\<? extends E\>):void (m)] (LINE:350)\l}"];
Node_68 [shape=record,label="{68\:\ 0x00ad|0x00ad: ARRAY_LENGTH  (r6 I:int) = (r7 I:??[])  (LINE:333)\l}"];
Node_69 [shape=record,label="{69\:\ 0x00ae|0x00ae: IF  (r4 I:??[int, byte, short, char] A[D('shiftedInternalIndex' int)]) \< (r6 I:??[int, byte, short, char])  \-\> B:71:0x00b7 \l}"];
Node_70 [shape=record,label="{70\:\ 0x00b0|0x00b0: ARRAY_LENGTH  (r1 I:int) = (r7 I:??[])  (LINE:334)\l0x00b1: ARITH  (r1 I:int) = (r4 I:int A[D('shiftedInternalIndex' int)]) \- (r1 I:int) \l0x00b3: INVOKE  \l  (r7 I:java.lang.Object[])\l  (r7 I:java.lang.Object[])\l  (r1 I:int)\l  (r2 I:int A[D('internalIndex' int)])\l  (r0 I:int A[D('tail' int)])\l type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l}"];
Node_71 [shape=record,label="{71\:\ 0x00b7|0x00b7: ARITH  (r6 I:int) = (r0 I:int A[D('tail' int)]) + (r3 I:int A[D('elementsSize' int)])  (LINE:336)\l0x00b9: ARRAY_LENGTH  (r8 I:int) = (r7 I:??[]) \l0x00ba: ARITH  (r6 I:int) = (r6 I:int) \- (r8 I:int) \l0x00bb: ARITH  (r8 I:int) = (r0 I:int A[D('tail' int)]) \- (r6 I:int A[D('shiftToFront' int)])  (LINE:337)\l0x00bd: INVOKE  (r7 I:java.lang.Object[]), (r7 I:java.lang.Object[]), (r1 I:int), (r8 I:int), (r0 I:int A[D('tail' int)]) type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l0x00c0: IGET  (r1 I:java.lang.Object[]) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:338)\l0x00c2: ARITH  (r7 I:int) = (r0 I:int A[D('tail' int)]) \- (r6 I:int A[D('shiftToFront' int)]) \l0x00c4: INVOKE  \l  (r1 I:java.lang.Object[])\l  (r1 I:java.lang.Object[])\l  (r4 I:int A[D('shiftedInternalIndex' int)])\l  (r2 I:int A[D('internalIndex' int)])\l  (r7 I:int)\l type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l}"];
Node_72 [shape=record,label="{72\:\ 0x00c8|0x00c8: IGET  (r6 I:java.lang.Object[] A[D('shiftToFront' int)]) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:342)\l0x00ca: INVOKE  \l  (r6 I:java.lang.Object[])\l  (r6 I:java.lang.Object[])\l  (r3 I:int A[D('elementsSize' int)])\l  (r1 I:int)\l  (r0 I:int A[D('tail' int)])\l type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l0x00cd: IGET  (r6 I:java.lang.Object[]) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:343)\l0x00cf: ARRAY_LENGTH  (r7 I:int) = (r6 I:??[]) \l}"];
Node_73 [shape=record,label="{73\:\ 0x00d0|0x00d0: IF  (r4 I:??[int, byte, short, char] A[D('shiftedInternalIndex' int)]) \< (r7 I:??[int, byte, short, char])  \-\> B:75:0x00da \l}"];
Node_74 [shape=record,label="{74\:\ 0x00d2|0x00d2: ARRAY_LENGTH  (r1 I:int) = (r6 I:??[])  (LINE:344)\l0x00d3: ARITH  (r1 I:int) = (r4 I:int A[D('shiftedInternalIndex' int)]) \- (r1 I:int) \l0x00d5: ARRAY_LENGTH  (r7 I:int) = (r6 I:??[]) \l0x00d6: INVOKE  (r6 I:java.lang.Object[]), (r6 I:java.lang.Object[]), (r1 I:int), (r2 I:int A[D('internalIndex' int)]), (r7 I:int) type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l}"];
Node_75 [shape=record,label="{75\:\ 0x00da|0x00da: ARRAY_LENGTH  (r7 I:int) = (r6 I:??[])  (LINE:346)\l0x00db: ARITH  (r7 I:int) = (r7 I:int) \- (r3 I:int A[D('elementsSize' int)]) \l0x00dc: ARRAY_LENGTH  (r8 I:int) = (r6 I:??[]) \l0x00dd: INVOKE  (r6 I:java.lang.Object[]), (r6 I:java.lang.Object[]), (r1 I:int), (r7 I:int), (r8 I:int) type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l0x00e0: IGET  (r1 I:java.lang.Object[]) = (r11 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:347)\l0x00e2: ARRAY_LENGTH  (r6 I:int) = (r1 I:??[]) \l0x00e3: ARITH  (r6 I:int) = (r6 I:int) \- (r3 I:int A[D('elementsSize' int)]) \l0x00e4: INVOKE  \l  (r1 I:java.lang.Object[])\l  (r1 I:java.lang.Object[])\l  (r4 I:int A[D('shiftedInternalIndex' int)])\l  (r2 I:int A[D('internalIndex' int)])\l  (r6 I:int)\l type: STATIC call: kotlin.collections.ArraysKt.copyInto(java.lang.Object[], java.lang.Object[], int, int, int):java.lang.Object[] A[MD:\<T\>:(T[], T[], int, int, int):T[] (m)]\l}"];
MethodNode[shape=record,label="{public boolean kotlin.collections.ArrayDeque.addAll((r11 'this' I:kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r12 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.util.Collection\<? extends E\> A[D('elements' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:47:0x0020 \-\> B:40:?, CROSS_EDGE: B:77:0x00ea \-\> B:40:?, CROSS_EDGE: B:56:0x0064 \-\> B:62:0x0092, CROSS_EDGE: B:57:0x0068 \-\> B:62:0x0092, CROSS_EDGE: B:60:0x007e \-\> B:62:0x0092, CROSS_EDGE: B:61:0x0086 \-\> B:62:0x0092, CROSS_EDGE: B:76:0x00e7 \-\> B:77:0x00ea, CROSS_EDGE: B:70:0x00b0 \-\> B:76:0x00e7, CROSS_EDGE: B:71:0x00b7 \-\> B:76:0x00e7, CROSS_EDGE: B:74:0x00d2 \-\> B:76:0x00e7, CROSS_EDGE: B:75:0x00da \-\> B:76:0x00e7\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (ILjava\/util\/Collection\<+TE;\>;)Z\lDebug Info:\l  0x0060\-0x0076: r8 'elementsToShift' I\l  0x0062\-0x0076: r9 'shiftToBack' I\l  0x0050\-0x009d: r6 'shiftedHead' I\l  0x00bb\-0x00c8: r6 'shiftToFront' I\l  0x00a0\-0x00ea: r4 'shiftedInternalIndex' I\l  0x0038\-0x00ea: r0 'tail' I\l  0x003f\-0x00ea: r2 'internalIndex' I\l  0x0043\-0x00ea: r3 'elementsSize' I\l  \-1 \-0x00ea: r12 'index' I\l  \-1 \-0x00ea: r13 'elements' Ljava\/util\/Collection;\lMETHOD_OVERRIDE: [ClspMth\{java.util.List.addAll(int, java.util.Collection\<? extends E\>):boolean\}, ClspMth\{java.util.AbstractList.addAll(int, java.util.Collection\<? extends E\>):boolean\}]\l}"];
MethodNode -> Node_39;Node_39 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_40;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_48;
Node_46 -> Node_47;
Node_47 -> Node_40;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_63;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_58;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_62;
Node_62 -> Node_77;
Node_77 -> Node_40;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_62;
Node_57 -> Node_62;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_72;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_68;
Node_67 -> Node_76;
Node_76 -> Node_77;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_71;
Node_70 -> Node_76;
Node_71 -> Node_76;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_75;
Node_74 -> Node_76;
Node_75 -> Node_76;
}

