digraph "CFG forkotlin.collections.ArrayDeque.get(I)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:kotlin.collections.AbstractList$Companion) =  kotlin.collections.AbstractList.Companion kotlin.collections.AbstractList$Companion  (LINE:357)\l0x0002: INVOKE  (r1 I:int) = (r2 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)]\l0x0006: INVOKE  (r0 I:kotlin.collections.AbstractList$Companion), (r3 I:int A[D('index' int)]), (r1 I:int) type: VIRTUAL call: kotlin.collections.AbstractList.Companion.checkElementIndex$kotlin_stdlib(int, int):void A[MD:(int, int):void (m)]\l0x0009: IGET  (r0 I:java.lang.Object[]) = (r2 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:359)\l0x000b: IGET  (r1 I:int) = (r2 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int \l0x000d: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int A[D('index' int)]) \l0x000e: INVOKE  (r1 I:int) = (r2 I:kotlin.collections.ArrayDeque), (r1 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.positiveMod(int):int A[MD:(int):int (m)]\l0x0012: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|RETURN\l|0x0014: RETURN  (r0 I:E) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public E kotlin.collections.ArrayDeque.get((r2 'this' I:kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0014: r3 'index' I\lTYPE_VARS: [E]\lSIGNATURE: (I)TE;\lMETHOD_OVERRIDE: [ClspMth\{java.util.List.get(int):E\}, ClspMth\{java.util.AbstractList.get(int):E\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

