digraph "CFG forkotlin.collections.ArrayDeque.incremented(I)I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object[]) = (r1 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:94)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.lang.Object[]) type: STATIC call: kotlin.collections.ArraysKt.getLastIndex(java.lang.Object[]):int A[MD:\<T\>:(T[]):int (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|0x0006: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x000a \l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|SYNTHETIC\lRETURN\l|0x0008: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|0x000a: ARITH  (r0 I:int) = (r2 I:int A[D('index' int)]) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|RETURN\lORIG_RETURN\l|0x000c: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private final int kotlin.collections.ArrayDeque.incremented((r1 'this' I:kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000a \-\> B:14:0x000c\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000c: r2 'index' I\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

