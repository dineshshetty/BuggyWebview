digraph "CFG forkotlin.collections.ArrayDeque.\<init\>(I)V" {
subgraph cluster_Region_1303139714 {
label = "R(2:(1:3)(1:(2:9|10)(1:8))|4) | DECL_VAR: java.lang.Object[] null\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1150812522 {
label = "IF [B:14:0x0004] THEN: R(1:3) ELSE: R(1:(2:9|10)(1:8))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0004|if (r4 == 0) goto L3\l}"];
subgraph cluster_Region_200846571 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0006|java.lang.Object[] r0 = kotlin.collections.ArrayDeque.emptyElementData\l}"];
}
subgraph cluster_Region_734801742 {
label = "R(1:(2:9|10)(1:8)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1972065970 {
label = "IF [B:16:0x0009] THEN: R(2:9|10) ELSE: R(1:8) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0009|if (r4 \<= 0) goto L9\l}"];
subgraph cluster_Region_1520700868 {
label = "R(2:9|10)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0010}"];
Node_21 [shape=record,label="{21\:\ 0x0026|throw new java.lang.IllegalArgumentException(\"Illegal Capacity: \" + r4)\l}"];
}
subgraph cluster_Region_1022346128 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000b|java.lang.Object[] r0 = new java.lang.Object[r4]\l}"];
}
}
}
}
Node_18 [shape=record,label="{18\:\ 0x000d|PHI: r0 \l  PHI: (r0v2 java.lang.Object[]) = (r0v1 java.lang.Object[]), (r0v3 java.lang.Object[]) binds: [B:17:0x000b, B:15:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|r3.elementData = r0\l}"];
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0000}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000f}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.collections.ArrayDeque.\<init\>((r3v0 'this' kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r4v0 'initialCapacity' int A[D('initialCapacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000b \-\> B:18:0x000d, CROSS_EDGE: B:21:0x0026 \-\> B:12:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_11;Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_19 -> Node_12;
}

