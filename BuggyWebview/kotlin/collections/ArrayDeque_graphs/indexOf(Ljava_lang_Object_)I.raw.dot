digraph "CFG forkotlin.collections.ArrayDeque.indexOf(Ljava\/lang\/Object;)I" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r4 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:375)\l0x0002: INVOKE  (r1 I:int) = (r4 I:kotlin.collections.ArrayDeque) type: VIRTUAL call: kotlin.collections.ArrayDeque.size():int A[MD:():int (m)]\l0x0006: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0007: INVOKE  (r0 I:int) = (r4 I:kotlin.collections.ArrayDeque), (r0 I:int) type: DIRECT call: kotlin.collections.ArrayDeque.positiveMod(int):int A[MD:(int):int (m)]\l0x000b: IGET  (r1 I:int) = (r4 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:377)\l}"];
Node_39 [shape=record,label="{39\:\ 0x000d|0x000d: IF  (r1 I:??[int, byte, short, char]) \>= (r0 I:??[int, byte, short, char] A[D('tail' int)])  \-\> B:47:0x0025 \l}"];
Node_40 [shape=record,label="{40\:\ 0x000f|0x000f: IGET  (r1 I:int) = (r4 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:378)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0011|LOOP_START\lLOOP:0: B:41:0x0011\-\>B:46:0x0022\l|0x0011: IF  (r1 I:??[int, byte, short, char] A[D('index' int)]) \>= (r0 I:??[int, byte, short, char] A[D('tail' int)])  \-\> B:64:0x0058 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0013|0x0013: IGET  (r2 I:java.lang.Object[]) = (r4 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:379)\l0x0015: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char] A[D('index' int)]) \l0x0017: INVOKE  (r2 I:boolean) = (r5 I:java.lang.Object A[D('element' java.lang.Object)]), (r2 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x001b|0x001b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0022 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0022|LOOP_END\lLOOP:0: B:41:0x0011\-\>B:46:0x0022\l|0x0022: ARITH  (r1 I:int) = (r1 I:int A[D('index' int)]) + (1 int)  (LINE:378)\l}"];
Node_65 [shape=record,label="{65\:\ 0x001d|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x001d|0x001d: IGET  (r2 I:int) = (r4 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int \l0x001f: ARITH  (r2 I:int) = (r1 I:int A[D('index' int)]) \- (r2 I:int) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0021|RETURN\l|0x0021: RETURN  (r2 I:int) \l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_64 [shape=record,label="{64\:\ 0x0058|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ ?|SYNTHETIC\lRETURN\l|0x0058: CONST  (r1 I:??[int, float, short, byte, char] A[D('index' int)]) = (\-1 ??[int, float, short, byte, char]) A[SYNTHETIC] (LINE:390)\l0x0059: RETURN  (r1 I:int) A[SYNTHETIC]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0025|0x0025: IF  (r1 I:??[int, byte, short, char] A[D('index' int)]) \< (r0 I:??[int, byte, short, char] A[D('tail' int)])  \-\> B:62:0x0058  (LINE:381)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0027|0x0027: IGET  (r1 I:int) = (r4 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int  (LINE:382)\l0x0029: IGET  (r2 I:java.lang.Object[]) = (r4 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[] \l0x002b: ARRAY_LENGTH  (r2 I:int) = (r2 I:??[]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x002c|LOOP_START\lLOOP:1: B:49:0x002c\-\>B:54:0x003d\l|0x002c: IF  (r1 I:??[int, byte, short, char] A[D('index' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:67:0x0040 \l}"];
Node_50 [shape=record,label="{50\:\ 0x002e|0x002e: IGET  (r3 I:java.lang.Object[]) = (r4 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:383)\l0x0030: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char] A[D('index' int)]) \l0x0032: INVOKE  (r3 I:boolean) = (r5 I:java.lang.Object A[D('element' java.lang.Object)]), (r3 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x0036|0x0036: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x003d \l}"];
Node_54 [shape=record,label="{54\:\ 0x003d|LOOP_END\lLOOP:1: B:49:0x002c\-\>B:54:0x003d\l|0x003d: ARITH  (r1 I:int) = (r1 I:int A[D('index' int)]) + (1 int)  (LINE:382)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0038|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x0038|0x0038: IGET  (r2 I:int) = (r4 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int \l0x003a: ARITH  (r2 I:int) = (r1 I:int A[D('index' int)]) \- (r2 I:int) \l}"];
Node_53 [shape=record,label="{53\:\ 0x003c|RETURN\l|0x003c: RETURN  (r2 I:int) \l}"];
Node_67 [shape=record,label="{67\:\ 0x0040|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0040|0x0040: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:385)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0041|LOOP_START\lLOOP:2: B:56:0x0041\-\>B:61:0x0055\l|0x0041: IF  (r1 I:??[int, byte, short, char] A[D('index' int)]) \>= (r0 I:??[int, byte, short, char] A[D('tail' int)])  \-\> B:68:0x0058 \l}"];
Node_57 [shape=record,label="{57\:\ 0x0043|0x0043: IGET  (r2 I:java.lang.Object[]) = (r4 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[]  (LINE:386)\l0x0045: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char] A[D('index' int)]) \l0x0047: INVOKE  (r2 I:boolean) = (r5 I:java.lang.Object A[D('element' java.lang.Object)]), (r2 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x004b|0x004b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x0055 \l}"];
Node_61 [shape=record,label="{61\:\ 0x0055|LOOP_END\lLOOP:2: B:56:0x0041\-\>B:61:0x0055\l|0x0055: ARITH  (r1 I:int) = (r1 I:int A[D('index' int)]) + (1 int)  (LINE:385)\l}"];
Node_69 [shape=record,label="{69\:\ 0x004d|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x004d|0x004d: IGET  (r2 I:java.lang.Object[]) = (r4 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.elementData java.lang.Object[] \l0x004f: ARRAY_LENGTH  (r2 I:int) = (r2 I:??[]) \l0x0050: ARITH  (r2 I:int) = (r2 I:int) + (r1 I:int A[D('index' int)]) \l0x0051: IGET  (r3 I:int) = (r4 I:kotlin.collections.ArrayDeque) kotlin.collections.ArrayDeque.head int \l0x0053: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l}"];
Node_60 [shape=record,label="{60\:\ 0x0054|RETURN\l|0x0054: RETURN  (r2 I:int) \l}"];
Node_68 [shape=record,label="{68\:\ 0x0058|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ ?|SYNTHETIC\lRETURN\l|0x0058: CONST  (r1 I:??[int, float, short, byte, char] A[D('index' int)]) = (\-1 ??[int, float, short, byte, char]) A[SYNTHETIC] (LINE:390)\l0x0059: RETURN  (r1 I:int) A[SYNTHETIC]\l}"];
Node_62 [shape=record,label="{62\:\ 0x0058|RETURN\lORIG_RETURN\l|0x0058: CONST  (r1 I:??[int, float, short, byte, char] A[D('index' int)]) = (\-1 ??[int, float, short, byte, char])  (LINE:390)\l0x0059: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{public int kotlin.collections.ArrayDeque.indexOf((r4 'this' I:kotlin.collections.ArrayDeque\<E\> A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Object A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:46:0x0022 \-\> B:41:0x0011, CROSS_EDGE: B:63:0x0059 \-\> B:37:?, CROSS_EDGE: B:53:0x003c \-\> B:37:?, BACK_EDGE: B:54:0x003d \-\> B:49:0x002c, CROSS_EDGE: B:60:0x0054 \-\> B:37:?, BACK_EDGE: B:61:0x0055 \-\> B:56:0x0041, CROSS_EDGE: B:56:0x0041 \-\> B:62:0x0058, CROSS_EDGE: B:47:0x0025 \-\> B:62:0x0058\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0025: r1 'index' I\l  0x0029\-0x0040: r1 'index' I\l  0x0041\-0x0058: r1 'index' I\l  0x000b\-0x0059: r0 'tail' I\l  \-1 \-0x0059: r5 'element' Ljava\/lang\/Object;\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [ClspMth\{java.util.AbstractList.indexOf(java.lang.Object):int\}, ClspMth\{java.util.List.indexOf(java.lang.Object):int\}]\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_47;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_64;
Node_42 -> Node_43;
Node_43 -> Node_46;
Node_43 -> Node_65[style=dashed];
Node_46 -> Node_41;
Node_65 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_37;
Node_64 -> Node_70;
Node_70 -> Node_37;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_62;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_67;
Node_50 -> Node_51;
Node_51 -> Node_54;
Node_51 -> Node_66[style=dashed];
Node_54 -> Node_49;
Node_66 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_37;
Node_67 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_68;
Node_57 -> Node_58;
Node_58 -> Node_61;
Node_58 -> Node_69[style=dashed];
Node_61 -> Node_56;
Node_69 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_37;
Node_68 -> Node_71;
Node_71 -> Node_37;
Node_62 -> Node_37;
}

