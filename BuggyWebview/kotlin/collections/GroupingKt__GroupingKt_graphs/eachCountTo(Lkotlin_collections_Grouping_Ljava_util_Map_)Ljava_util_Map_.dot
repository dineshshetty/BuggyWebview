digraph "CFG forkotlin.collections.GroupingKt__GroupingKt.eachCountTo(Lkotlin\/collections\/Grouping;Ljava\/util\/Map;)Ljava\/util\/Map;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r19, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r20, \"destination\")\ljava.util.Iterator r8 = r19.sourceIterator()\l}"];
Node_24 [shape=record,label="{24\:\ 0x001c|LOOP_START\lLOOP:0: B:24:0x001c\-\>B:36:0x0045\l}"];
Node_25 [shape=record,label="{25\:\ 0x0020|if (r8.hasNext() == false) goto L17\l}"];
Node_26 [shape=record,label="{26\:\ 0x0022|java.lang.Object r10 = r19.keyOf(r8.next())\ljava.lang.Object r11 = r20.get(r10)\l}"];
Node_27 [shape=record,label="{27\:\ 0x002f|if (r11 != null) goto L16\l}"];
Node_28 [shape=record,label="{28\:\ 0x0031}"];
Node_29 [shape=record,label="{29\:\ 0x0035|if (r20.containsKey(r10) != false) goto L16\l}"];
Node_30 [shape=record,label="{30\:\ 0x0037|r13 = true\l}"];
Node_32 [shape=record,label="{32\:\ 0x003a|PHI: r13 \l  PHI: (r13v1 'first$iv' boolean) = (r13v0 'first$iv' boolean), (r13v3 'first$iv' boolean) binds: [B:31:0x0039, B:30:0x0037] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_33 [shape=record,label="{33\:\ 0x003e|if (r13 == false) goto L14\l}"];
Node_34 [shape=record,label="{34\:\ 0x0040|r17 = 0\l}"];
Node_41 [shape=record,label="{41\:\ 0x0045|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0045|LOOP_END\lLOOP:0: B:24:0x001c\-\>B:36:0x0045\lPHI: r17 \l  PHI: (r17v1 java.lang.Object) = (r17v0 java.lang.Object), (r17v5 java.lang.Object) binds: [B:40:0x0045, B:41:0x0045] A[DONT_GENERATE, DONT_INLINE]\l|int r17 = ((java.lang.Number) r17).intValue()\lr20.put(r10, java.lang.Integer.valueOf(r17 + 1))\l}"];
Node_35 [shape=record,label="{35\:\ 0x0043|r17 = r11\l}"];
Node_40 [shape=record,label="{40\:\ 0x0045|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0039|r13 = false\l}"];
Node_39 [shape=record,label="{39\:\ 0x0059|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0059|RETURN\l|return r20\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final M extends java.util.Map\<? super K, java.lang.Integer\> kotlin.collections.GroupingKt__GroupingKt.eachCountTo((r19v0 kotlin.collections.Grouping\<T, ? extends K\> A[D('$this$eachCountTo' kotlin.collections.Grouping), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'destination' M extends java.util.Map\<? super K, java.lang.Integer\> A[D('destination' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:36:0x0045 \-\> B:24:0x001c, CROSS_EDGE: B:35:0x0043 \-\> B:36:0x0045, CROSS_EDGE: B:31:0x0039 \-\> B:32:0x003a, CROSS_EDGE: B:27:0x002f \-\> B:31:0x0039\lINLINE_NOT_NEEDED\lTYPE_VARS: [T, K, M extends java.util.Map\<? super K, java.lang.Integer\>]\lSIGNATURE: \<T:Ljava\/lang\/Object;K:Ljava\/lang\/Object;M::Ljava\/util\/Map\<\-TK;Ljava\/lang\/Integer;\>;\>(Lkotlin\/collections\/Grouping\<TT;+TK;\>;TM;)TM;\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_39;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_41;
Node_41 -> Node_36;
Node_36 -> Node_24;
Node_35 -> Node_40;
Node_40 -> Node_36;
Node_31 -> Node_32;
Node_39 -> Node_38;
Node_38 -> Node_22;
}

