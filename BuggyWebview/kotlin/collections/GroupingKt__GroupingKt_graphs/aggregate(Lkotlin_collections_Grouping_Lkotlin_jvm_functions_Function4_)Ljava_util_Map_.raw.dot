digraph "CFG forkotlin.collections.GroupingKt__GroupingKt.aggregate(Lkotlin\/collections\/Grouping;Lkotlin\/jvm\/functions\/Function4;)Ljava\/util\/Map;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$aggregate' kotlin.collections.Grouping)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"operation\" \l0x0007: INVOKE  (r10 I:java.lang.Object A[D('operation' kotlin.jvm.functions.Function4)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: NEW_INSTANCE  (r1 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap  (LINE:53)\l0x000d: INVOKE  (r1 I:java.util.LinkedHashMap) type: DIRECT call: java.util.LinkedHashMap.\<init\>():void A[MD:():void (c)]\l0x0010: CHECK_CAST (r1 I:java.util.Map) = (java.util.Map) (r1 I:??[OBJECT, ARRAY]) \l0x0012: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$aggregate' kotlin.collections.Grouping)]) \l0x0013: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: INVOKE  (r4 I:java.util.Iterator) = (r2 I:kotlin.collections.Grouping A[D('$this$aggregateTo$iv' kotlin.collections.Grouping)]) type: INTERFACE call: kotlin.collections.Grouping.sourceIterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:292)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0018|LOOP_START\lLOOP:0: B:20:0x0018\-\>B:28:0x0035\l|0x0018: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001c|0x001c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0042 \l}"];
Node_22 [shape=record,label="{22\:\ 0x001e|0x001e: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0022: INVOKE  (r6 I:java.lang.Object) = \l  (r2 I:kotlin.collections.Grouping A[D('$this$aggregateTo$iv' kotlin.collections.Grouping)])\l  (r5 I:java.lang.Object A[D('e$iv' java.lang.Object)])\l type: INTERFACE call: kotlin.collections.Grouping.keyOf(java.lang.Object):java.lang.Object A[MD:(T):K (m)] (LINE:293)\l0x0026: INVOKE  (r7 I:java.lang.Object) = (r1 I:java.util.Map A[D('destination$iv' java.util.Map)]), (r6 I:java.lang.Object A[D('key$iv' java.lang.Object)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:294)\l}"];
Node_23 [shape=record,label="{23\:\ 0x002a|0x002a: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('accumulator$iv' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0034  (LINE:295)\l}"];
Node_24 [shape=record,label="{24\:\ 0x002c|0x002c: INVOKE  (r8 I:boolean) = (r1 I:java.util.Map A[D('destination$iv' java.util.Map)]), (r6 I:java.lang.Object A[D('key$iv' java.lang.Object)]) type: INTERFACE call: java.util.Map.containsKey(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0030|0x0030: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0034 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0032|0x0032: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0035|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0035|LOOP_END\lLOOP:0: B:20:0x0018\-\>B:28:0x0035\l|0x0035: INVOKE  (r8 I:java.lang.Boolean) = (r8 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)]\l0x0039: INVOKE  (r8 I:java.lang.Object) = \l  (r10 I:kotlin.jvm.functions.Function4 A[D('operation' kotlin.jvm.functions.Function4)])\l  (r6 I:java.lang.Object A[D('key$iv' java.lang.Object)])\l  (r7 I:java.lang.Object A[D('accumulator$iv' java.lang.Object)])\l  (r5 I:java.lang.Object A[D('e$iv' java.lang.Object)])\l  (r8 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function4.invoke(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2, P3, P4):R (m)]\l0x003d: INVOKE  \l  (r1 I:java.util.Map A[D('destination$iv' java.util.Map)])\l  (r6 I:java.lang.Object A[D('key$iv' java.lang.Object)])\l  (r8 I:java.lang.Object)\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0034|0x0034: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0035|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0042|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0042|RETURN\l|0x0042: RETURN  (r1 I:java.util.Map\<K, R\> A[D('destination$iv' java.util.Map)])  (LINE:53)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, R\> kotlin.collections.GroupingKt__GroupingKt.aggregate((r9 I:kotlin.collections.Grouping\<T, ? extends K\> A[D('$this$aggregate' kotlin.collections.Grouping), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function4\<? super K, ? super R, ? super T, ? super java.lang.Boolean, ? extends R\> A[D('operation' kotlin.jvm.functions.Function4), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0035 \-\> B:20:0x0018, CROSS_EDGE: B:27:0x0034 \-\> B:28:0x0035, CROSS_EDGE: B:23:0x002a \-\> B:27:0x0034\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0022\-0x0041: r5 'e$iv' Ljava\/lang\/Object;\l  0x0026\-0x0041: r6 'key$iv' Ljava\/lang\/Object;\l  0x002a\-0x0041: r7 'accumulator$iv' Ljava\/lang\/Object;\l  0x0012\-0x0042: r1 'destination$iv' Ljava\/util\/Map;\l  0x0013\-0x0042: r2 '$this$aggregateTo$iv' Lkotlin\/collections\/Grouping;\l  0x0014\-0x0042: r3 '$i$f$aggregateTo' I\l  0x000b\-0x0042: r0 '$i$f$aggregate' I\l  \-1 \-0x0042: r9 '$this$aggregate' Lkotlin\/collections\/Grouping;\l  \-1 \-0x0042: r10 'operation' Lkotlin\/jvm\/functions\/Function4;\lTYPE_VARS: [R, T, K]\lSIGNATURE: \<T:Ljava\/lang\/Object;K:Ljava\/lang\/Object;R:Ljava\/lang\/Object;\>(Lkotlin\/collections\/Grouping\<TT;+TK;\>;Lkotlin\/jvm\/functions\/Function4\<\-TK;\-TR;\-TT;\-Ljava\/lang\/Boolean;+TR;\>;)Ljava\/util\/Map\<TK;TR;\>;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_31;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_33;
Node_33 -> Node_28;
Node_28 -> Node_20;
Node_27 -> Node_32;
Node_32 -> Node_28;
Node_31 -> Node_30;
Node_30 -> Node_18;
}

