digraph "CFG forkotlin.collections.GroupingKt__GroupingKt.aggregateTo(Lkotlin\/collections\/Grouping;Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function4;)Ljava\/util\/Map;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$aggregateTo' kotlin.collections.Grouping)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r7 I:java.lang.Object A[D('destination' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"operation\" \l0x000c: INVOKE  (r8 I:java.lang.Object A[D('operation' kotlin.jvm.functions.Function4)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: INVOKE  (r1 I:java.util.Iterator) = (r6 I:kotlin.collections.Grouping A[D('$this$aggregateTo' kotlin.collections.Grouping)]) type: INTERFACE call: kotlin.collections.Grouping.sourceIterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:80)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|LOOP_START\lLOOP:0: B:19:0x0014\-\>B:27:0x0031\l|0x0014: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0018|0x0018: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x003d \l}"];
Node_21 [shape=record,label="{21\:\ 0x001a|0x001a: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001e: INVOKE  (r3 I:java.lang.Object) = \l  (r6 I:kotlin.collections.Grouping A[D('$this$aggregateTo' kotlin.collections.Grouping)])\l  (r2 I:java.lang.Object A[D('e' java.lang.Object)])\l type: INTERFACE call: kotlin.collections.Grouping.keyOf(java.lang.Object):java.lang.Object A[MD:(T):K (m)] (LINE:81)\l0x0022: INVOKE  (r4 I:java.lang.Object) = (r7 I:java.util.Map A[D('destination' java.util.Map)]), (r3 I:java.lang.Object A[D('key' java.lang.Object)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:82)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0026|0x0026: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('accumulator' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0030  (LINE:83)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0028|0x0028: INVOKE  (r5 I:boolean) = (r7 I:java.util.Map A[D('destination' java.util.Map)]), (r3 I:java.lang.Object A[D('key' java.lang.Object)]) type: INTERFACE call: java.util.Map.containsKey(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x002c|0x002c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0030 \l}"];
Node_25 [shape=record,label="{25\:\ 0x002e|0x002e: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0031|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0031|LOOP_END\lLOOP:0: B:19:0x0014\-\>B:27:0x0031\l|0x0031: INVOKE  (r5 I:java.lang.Boolean) = (r5 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)]\l0x0035: INVOKE  (r5 I:java.lang.Object) = \l  (r8 I:kotlin.jvm.functions.Function4 A[D('operation' kotlin.jvm.functions.Function4)])\l  (r3 I:java.lang.Object A[D('key' java.lang.Object)])\l  (r4 I:java.lang.Object A[D('accumulator' java.lang.Object)])\l  (r2 I:java.lang.Object A[D('e' java.lang.Object)])\l  (r5 I:java.lang.Object)\l type: INTERFACE call: kotlin.jvm.functions.Function4.invoke(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object):java.lang.Object A[MD:(P1, P2, P3, P4):R (m)]\l0x0039: INVOKE  \l  (r7 I:java.util.Map A[D('destination' java.util.Map)])\l  (r3 I:java.lang.Object A[D('key' java.lang.Object)])\l  (r5 I:java.lang.Object)\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0030|0x0030: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0031|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x003d|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x003d|RETURN\l|0x003d: RETURN  (r7 I:M extends java.util.Map\<? super K, R\> A[D('destination' java.util.Map)])  (LINE:85)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final M extends java.util.Map\<? super K, R\> kotlin.collections.GroupingKt__GroupingKt.aggregateTo((r6 I:kotlin.collections.Grouping\<T, ? extends K\> A[D('$this$aggregateTo' kotlin.collections.Grouping), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:M extends java.util.Map\<? super K, R\> A[D('destination' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function4\<? super K, ? super R, ? super T, ? super java.lang.Boolean, ? extends R\> A[D('operation' kotlin.jvm.functions.Function4), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x0031 \-\> B:19:0x0014, CROSS_EDGE: B:26:0x0030 \-\> B:27:0x0031, CROSS_EDGE: B:22:0x0026 \-\> B:26:0x0030\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x003d: r2 'e' Ljava\/lang\/Object;\l  0x0022\-0x003d: r3 'key' Ljava\/lang\/Object;\l  0x0026\-0x003d: r4 'accumulator' Ljava\/lang\/Object;\l  0x0010\-0x003d: r0 '$i$f$aggregateTo' I\l  \-1 \-0x003d: r6 '$this$aggregateTo' Lkotlin\/collections\/Grouping;\l  \-1 \-0x003d: r7 'destination' Ljava\/util\/Map;\l  \-1 \-0x003d: r8 'operation' Lkotlin\/jvm\/functions\/Function4;\lTYPE_VARS: [R, T, K, M extends java.util.Map\<? super K, R\>]\lSIGNATURE: \<T:Ljava\/lang\/Object;K:Ljava\/lang\/Object;R:Ljava\/lang\/Object;M::Ljava\/util\/Map\<\-TK;TR;\>;\>(Lkotlin\/collections\/Grouping\<TT;+TK;\>;TM;Lkotlin\/jvm\/functions\/Function4\<\-TK;\-TR;\-TT;\-Ljava\/lang\/Boolean;+TR;\>;)TM;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_29;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_31;
Node_31 -> Node_27;
Node_27 -> Node_19;
Node_26 -> Node_30;
Node_30 -> Node_27;
Node_29 -> Node_28;
Node_28 -> Node_17;
}

