digraph "CFG forkotlin.collections.GroupingKt__GroupingKt.foldTo(Lkotlin\/collections\/Grouping;Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function2;Lkotlin\/jvm\/functions\/Function3;)Ljava\/util\/Map;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|r1 = r19\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r17, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r18, \"destination\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"initialValueSelector\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r20, \"operation\")\ljava.util.Iterator r7 = r17.sourceIterator()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0024|LOOP_START\lLOOP:0: B:24:0x0024\-\>B:36:0x004f\lPHI: r1 \l  PHI: (r1v1 'initialValueSelector' kotlin.jvm.functions.Function2\<? super K, ? super T, ? extends R\>) = (r1v0 'initialValueSelector' kotlin.jvm.functions.Function2\<? super K, ? super T, ? extends R\>), (r1v5 'initialValueSelector' kotlin.jvm.functions.Function2\<? super K, ? super T, ? extends R\>) binds: [B:23:0x0000, B:36:0x004f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0028|if (r7.hasNext() == false) goto L17\l}"];
Node_26 [shape=record,label="{26\:\ 0x002a|java.lang.Object r8 = r7.next()\ljava.lang.Object r9 = r17.keyOf(r8)\ljava.lang.Object r10 = r18.get(r9)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0036|if (r10 != null) goto L16\l}"];
Node_28 [shape=record,label="{28\:\ 0x0038}"];
Node_29 [shape=record,label="{29\:\ 0x003c|if (r18.containsKey(r9) != false) goto L16\l}"];
Node_30 [shape=record,label="{30\:\ 0x003e|r11 = true\l}"];
Node_32 [shape=record,label="{32\:\ 0x0041|PHI: r11 \l  PHI: (r11v1 'first' boolean) = (r11v0 'first' boolean), (r11v3 'first' boolean) binds: [B:31:0x0040, B:30:0x003e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0045|if (r11 == false) goto L14\l}"];
Node_34 [shape=record,label="{34\:\ 0x0047|r1 = r1.invoke(r9, r8)\l}"];
Node_41 [shape=record,label="{41\:\ 0x004f|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x004f|LOOP_END\lLOOP:0: B:24:0x0024\-\>B:36:0x004f\lPHI: r1 \l  PHI: (r1v3 java.lang.Object) = (r1v2 java.lang.Object), (r1v6 java.lang.Object) binds: [B:40:0x004f, B:41:0x004f] A[DONT_GENERATE, DONT_INLINE]\l|r18.put(r9, r20.invoke(r9, r1, r8))\lr1 = r19\l}"];
Node_35 [shape=record,label="{35\:\ 0x004e|r1 = r10\l}"];
Node_40 [shape=record,label="{40\:\ 0x004f|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0040|r11 = false\l}"];
Node_39 [shape=record,label="{39\:\ 0x005a|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x005a|RETURN\l|return r18\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final M extends java.util.Map\<? super K, R\> kotlin.collections.GroupingKt__GroupingKt.foldTo((r17v0 kotlin.collections.Grouping\<T, ? extends K\> A[D('$this$foldTo' kotlin.collections.Grouping), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'destination' M extends java.util.Map\<? super K, R\> A[D('destination' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 kotlin.jvm.functions.Function2\<? super K, ? super T, ? extends R\> A[D('initialValueSelector' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'operation' kotlin.jvm.functions.Function3\<? super K, ? super R, ? super T, ? extends R\> A[D('operation' kotlin.jvm.functions.Function3), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:36:0x004f \-\> B:24:0x0024, CROSS_EDGE: B:35:0x004e \-\> B:36:0x004f, CROSS_EDGE: B:31:0x0040 \-\> B:32:0x0041, CROSS_EDGE: B:27:0x0036 \-\> B:31:0x0040\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, T, K, M extends java.util.Map\<? super K, R\>]\lSIGNATURE: \<T:Ljava\/lang\/Object;K:Ljava\/lang\/Object;R:Ljava\/lang\/Object;M::Ljava\/util\/Map\<\-TK;TR;\>;\>(Lkotlin\/collections\/Grouping\<TT;+TK;\>;TM;Lkotlin\/jvm\/functions\/Function2\<\-TK;\-TT;+TR;\>;Lkotlin\/jvm\/functions\/Function3\<\-TK;\-TR;\-TT;+TR;\>;)TM;\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_39;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_41;
Node_41 -> Node_36;
Node_36 -> Node_24;
Node_35 -> Node_40;
Node_40 -> Node_36;
Node_31 -> Node_32;
Node_39 -> Node_38;
Node_38 -> Node_22;
}

