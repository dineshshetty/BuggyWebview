digraph "CFG forkotlin.collections.GroupingKt__GroupingKt.eachCountTo(Lkotlin\/collections\/Grouping;Ljava\/util\/Map;)Ljava\/util\/Map;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('destination' java.util.Map)]) \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"\<this\>\" \l0x0004: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY] A[D('$this$eachCountTo' kotlin.collections.Grouping)]) \l0x0006: INVOKE  (r2 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0009: CONST_STR  (r1 I:java.lang.String) =  \"destination\" \l0x000b: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:257)\l0x000f: INVOKE  (r3 I:java.lang.Integer) = (r1 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0013: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY] A[D('$this$eachCountTo' kotlin.collections.Grouping)]) \l0x0015: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0016: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('$this$foldTo$iv' kotlin.collections.Grouping)])  (LINE:337)\l0x0017: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: INVOKE  (r8 I:java.util.Iterator) = (r6 I:kotlin.collections.Grouping A[D('$this$aggregateTo$iv$iv' kotlin.collections.Grouping)]) type: INTERFACE call: kotlin.collections.Grouping.sourceIterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)] (LINE:338)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001c|LOOP_START\lLOOP:0: B:24:0x001c\-\>B:36:0x0045\l|0x001c: INVOKE  (r9 I:boolean) = (r8 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0020|0x0020: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0059 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0022|0x0022: INVOKE  (r9 I:java.lang.Object) = (r8 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0026: INVOKE  (r10 I:java.lang.Object) = \l  (r6 I:kotlin.collections.Grouping A[D('$this$aggregateTo$iv$iv' kotlin.collections.Grouping)])\l  (r9 I:java.lang.Object A[D('e$iv$iv' java.lang.Object)])\l type: INTERFACE call: kotlin.collections.Grouping.keyOf(java.lang.Object):java.lang.Object A[MD:(T):K (m)] (LINE:339)\l0x002a: INVOKE  (r11 I:java.lang.Object) = (r0 I:java.util.Map), (r10 I:java.lang.Object A[D('key$iv$iv' java.lang.Object)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:340)\l0x002e: CONST  (r12 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:341)\l}"];
Node_27 [shape=record,label="{27\:\ 0x002f|0x002f: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('accumulator$iv$iv' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0039 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0031|0x0031: INVOKE  (r13 I:boolean) = (r0 I:java.util.Map), (r10 I:java.lang.Object A[D('key$iv$iv' java.lang.Object)]) type: INTERFACE call: java.util.Map.containsKey(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0035|0x0035: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0039 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0037|0x0037: CONST  (r13 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x003a|0x003a: MOVE  (r14 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('e$iv$iv' java.lang.Object)]) \l0x003b: MOVE  (r15 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('accumulator$iv$iv' java.lang.Object)]) \l0x003c: CONST  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x003e|0x003e: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('first$iv' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0043  (LINE:337)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0040|0x0040: MOVE  (r17 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('initialValue$iv' java.lang.Object)]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0045|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0045|LOOP_END\lLOOP:0: B:24:0x001c\-\>B:36:0x0045\l|0x0045: CHECK_CAST (r17 I:java.lang.Number) = (java.lang.Number) (r17 I:??[OBJECT, ARRAY]) \l0x0047: INVOKE  (r17 I:int) = (r17 I:java.lang.Number) type: VIRTUAL call: java.lang.Number.intValue():int A[MD:():int (c)]\l0x004b: CONST  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x004d: ARITH  (r17 I:int) = (r17 I:int A[D('acc' int)]) + (1 int)  (LINE:257)\l0x004f: INVOKE  (r12 I:java.lang.Integer) = (r17 I:int A[D('acc' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0053: INVOKE  (r0 I:java.util.Map), (r10 I:java.lang.Object A[D('key$iv$iv' java.lang.Object)]), (r12 I:java.lang.Object) type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0043|0x0043: MOVE  (r17 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY] A[D('acc$iv' java.lang.Object)]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0045|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0039|0x0039: CONST  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0059|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0059|RETURN\l|0x0059: RETURN  (r0 I:M extends java.util.Map\<? super K, java.lang.Integer\>)  (LINE:257)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final M extends java.util.Map\<? super K, java.lang.Integer\> kotlin.collections.GroupingKt__GroupingKt.eachCountTo((r19 I:kotlin.collections.Grouping\<T, ? extends K\> A[D('$this$eachCountTo' kotlin.collections.Grouping), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:M extends java.util.Map\<? super K, java.lang.Integer\> A[D('destination' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:36:0x0045 \-\> B:24:0x001c, CROSS_EDGE: B:35:0x0043 \-\> B:36:0x0045, CROSS_EDGE: B:31:0x0039 \-\> B:32:0x003a, CROSS_EDGE: B:27:0x002f \-\> B:31:0x0039\lINLINE_NOT_NEEDED\lDebug Info:\l  0x004b\-0x004f: r17 'acc' I\l  0x004d\-0x004f: r18 '$i$a$\-foldTo\-GroupingKt__GroupingKt$eachCountTo$1' I\l  0x003c\-0x0053: r13 'first$iv' Z\l  0x003b\-0x0053: r14 'e$iv' Ljava\/lang\/Object;\l  0x003c\-0x0053: r15 'acc$iv' Ljava\/lang\/Object;\l  0x003e\-0x0053: r16 '$i$a$\-aggregateTo\-GroupingKt__GroupingKt$foldTo$2$iv' I\l  0x0026\-0x0057: r9 'e$iv$iv' Ljava\/lang\/Object;\l  0x002a\-0x0057: r10 'key$iv$iv' Ljava\/lang\/Object;\l  0x002e\-0x0057: r11 'accumulator$iv$iv' Ljava\/lang\/Object;\l  0x0017\-0x0058: r6 '$this$aggregateTo$iv$iv' Lkotlin\/collections\/Grouping;\l  0x0018\-0x0058: r7 '$i$f$aggregateTo' I\l  0x0013\-0x0059: r3 'initialValue$iv' Ljava\/lang\/Object;\l  0x0015\-0x0059: r4 '$this$foldTo$iv' Lkotlin\/collections\/Grouping;\l  0x0016\-0x0059: r5 '$i$f$foldTo' I\l  \-1 \-0x0059: r19 '$this$eachCountTo' Lkotlin\/collections\/Grouping;\l  \-1 \-0x0059: r20 'destination' Ljava\/util\/Map;\lTYPE_VARS: [T, K, M extends java.util.Map\<? super K, java.lang.Integer\>]\lSIGNATURE: \<T:Ljava\/lang\/Object;K:Ljava\/lang\/Object;M::Ljava\/util\/Map\<\-TK;Ljava\/lang\/Integer;\>;\>(Lkotlin\/collections\/Grouping\<TT;+TK;\>;TM;)TM;\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_39;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_41;
Node_41 -> Node_36;
Node_36 -> Node_24;
Node_35 -> Node_40;
Node_40 -> Node_36;
Node_31 -> Node_32;
Node_39 -> Node_38;
Node_38 -> Node_22;
}

