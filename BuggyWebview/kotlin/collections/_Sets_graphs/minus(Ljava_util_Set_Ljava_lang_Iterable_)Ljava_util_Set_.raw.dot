digraph "CFG forkotlin.collections.SetsKt___SetsKt.minus(Ljava\/util\/Set;Ljava\/lang\/Iterable;)Ljava\/util\/Set;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r8 I:java.lang.Object A[D('$this$minus' java.util.Set)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0007: INVOKE  (r9 I:java.lang.Object A[D('elements' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$this$minus' java.util.Set)])  (LINE:56)\l0x000b: CHECK_CAST (r0 I:java.lang.Iterable) = (java.lang.Iterable) (r0 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  (r0 I:java.util.Collection) = (r9 I:java.lang.Iterable A[D('elements' java.lang.Iterable)]), (r0 I:java.lang.Iterable) type: STATIC call: kotlin.collections.BrittleContainsOptimizationKt.convertToSetForSetOperationWith(java.lang.Iterable, java.lang.Iterable):java.util.Collection A[MD:\<T\>:(java.lang.Iterable\<? extends T\>, java.lang.Iterable\<? extends T\>):java.util.Collection\<T\> (m)]\l0x0011: INVOKE  (r1 I:boolean) = (r0 I:java.util.Collection A[D('other' java.util.Collection)]) type: INTERFACE call: java.util.Collection.isEmpty():boolean A[MD:():boolean (c)] (LINE:57)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0015|0x0015: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x001f \l}"];
Node_27 [shape=record,label="{27\:\ 0x0017|0x0017: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$this$minus' java.util.Set)])  (LINE:58)\l0x0018: CHECK_CAST (r1 I:java.lang.Iterable) = (java.lang.Iterable) (r1 I:??[OBJECT, ARRAY]) \l0x001a: INVOKE  (r1 I:java.util.Set) = (r1 I:java.lang.Iterable) type: STATIC call: kotlin.collections.CollectionsKt.toSet(java.lang.Iterable):java.util.Set A[MD:\<T\>:(java.lang.Iterable\<? extends T\>):java.util.Set\<T\> (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x001e|RETURN\l|0x001e: RETURN  (r1 I:java.util.Set\<T\>) \l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x001f|0x001f: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('other' java.util.Collection)]) java.util.Set  (LINE:59)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0021|0x0021: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x004d \l}"];
Node_31 [shape=record,label="{31\:\ 0x0023|0x0023: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$this$minus' java.util.Set)])  (LINE:60)\l0x0024: CHECK_CAST (r1 I:java.lang.Iterable) = (java.lang.Iterable) (r1 I:??[OBJECT, ARRAY]) \l0x0026: NEW_INSTANCE  (r2 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet \l0x0028: INVOKE  (r2 I:java.util.LinkedHashSet) type: DIRECT call: java.util.LinkedHashSet.\<init\>():void A[MD:():void (c)]\l0x002b: CHECK_CAST (r2 I:java.util.Collection) = (java.util.Collection) (r2 I:??[OBJECT, ARRAY]) \l0x002d: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002e: INVOKE  (r4 I:java.util.Iterator) = (r1 I:java.lang.Iterable A[D('$this$filterNotTo$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:154)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0032|LOOP_START\lLOOP:0: B:32:0x0032\-\>B:43:0x0032\l|0x0032: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0036|0x0036: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0048 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0038|0x0038: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x003c: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) \l0x003d: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x003e: INVOKE  (r6 I:boolean A[D('it' java.lang.Object)]) = (r0 I:java.util.Collection A[D('other' java.util.Collection)]), (r6 I:java.lang.Object A[D('it' java.lang.Object)]) type: INTERFACE call: java.util.Collection.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:60)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0042|0x0042: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0032 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0044|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0044|0x0044: INVOKE  \l  (r2 I:java.util.Collection A[D('destination$iv' java.util.Collection)])\l  (r5 I:java.lang.Object A[D('element$iv' java.lang.Object)])\l type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0032|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0032|LOOP_END\lSYNTHETIC\lLOOP:0: B:32:0x0032\-\>B:43:0x0032\l}"];
Node_44 [shape=record,label="{44\:\ 0x0032|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0048|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0048|0x0049: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('$this$filterNotTo$iv' java.lang.Iterable)]) = (r2 I:??[OBJECT, ARRAY] A[D('destination$iv' java.util.Collection)]) \l0x004a: CHECK_CAST (r1 I:java.util.Set) = (java.util.Set) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x004c|RETURN\l|0x004c: RETURN  (r1 I:java.util.Set\<T\>)  (LINE:60)\l}"];
Node_39 [shape=record,label="{39\:\ 0x004d|0x004d: NEW_INSTANCE  (r1 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet  (LINE:61)\l0x004f: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$this$minus' java.util.Set)]) \l0x0050: CHECK_CAST (r2 I:java.util.Collection) = (java.util.Collection) (r2 I:??[OBJECT, ARRAY]) \l0x0052: INVOKE  (r1 I:java.util.LinkedHashSet), (r2 I:java.util.Collection) type: DIRECT call: java.util.LinkedHashSet.\<init\>(java.util.Collection):void A[MD:(java.util.Collection\<? extends E\>):void (c)]\l0x0055: INVOKE  \l  (r1 I:java.util.LinkedHashSet A[D('result' java.util.LinkedHashSet)])\l  (r0 I:java.util.Collection A[D('other' java.util.Collection)])\l type: VIRTUAL call: java.util.LinkedHashSet.removeAll(java.util.Collection):boolean A[MD:(java.util.Collection\<?\>):boolean (c)] (LINE:62)\l0x0058: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('result' java.util.LinkedHashSet)])  (LINE:63)\l0x0059: CHECK_CAST (r2 I:java.util.Set) = (java.util.Set) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x005b|RETURN\l|0x005b: RETURN  (r2 I:java.util.Set\<T\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.Set\<T\> kotlin.collections.SetsKt___SetsKt.minus((r8 I:java.util.Set\<? extends T\> A[D('$this$minus' java.util.Set), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.Iterable\<? extends T\> A[D('elements' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:35:0x0042 \-\> B:32:0x0032, BACK_EDGE: B:36:0x0044 \-\> B:32:0x0032, CROSS_EDGE: B:38:0x004c \-\> B:24:?, CROSS_EDGE: B:40:0x005b \-\> B:24:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003d\-0x0042: r6 'it' Ljava\/lang\/Object;\l  0x003e\-0x0042: r7 '$i$a$\-filterNotTo\-SetsKt___SetsKt$minus$2' I\l  0x003c\-0x0048: r5 'element$iv' Ljava\/lang\/Object;\l  0x0026\-0x0049: r1 '$this$filterNotTo$iv' Ljava\/lang\/Iterable;\l  0x002d\-0x0049: r2 'destination$iv' Ljava\/util\/Collection;\l  0x002e\-0x0049: r3 '$i$f$filterNotTo' I\l  0x0011\-0x005b: r0 'other' Ljava\/util\/Collection;\l  0x0055\-0x005b: r1 'result' Ljava\/util\/LinkedHashSet;\l  \-1 \-0x005b: r8 '$this$minus' Ljava\/util\/Set;\l  \-1 \-0x005b: r9 'elements' Ljava\/lang\/Iterable;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/Set\<+TT;\>;Ljava\/lang\/Iterable\<+TT;\>;)Ljava\/util\/Set\<TT;\>;\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_24;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_39;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_42;
Node_34 -> Node_35;
Node_35 -> Node_41[style=dashed];
Node_35 -> Node_44;
Node_41 -> Node_36;
Node_36 -> Node_45;
Node_45 -> Node_43;
Node_43 -> Node_32;
Node_44 -> Node_43;
Node_42 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_24;
Node_39 -> Node_40;
Node_40 -> Node_24;
}

