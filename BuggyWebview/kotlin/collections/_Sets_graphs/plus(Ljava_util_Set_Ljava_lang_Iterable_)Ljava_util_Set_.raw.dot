digraph "CFG forkotlin.collections.SetsKt___SetsKt.plus(Ljava\/util\/Set;Ljava\/lang\/Iterable;)Ljava\/util\/Set;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$plus' java.util.Set)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0007: INVOKE  (r4 I:java.lang.Object A[D('elements' java.lang.Iterable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:java.lang.Integer) = (r4 I:java.lang.Iterable A[D('elements' java.lang.Iterable)]) type: STATIC call: kotlin.collections.CollectionsKt.collectionSizeOrNull(java.lang.Iterable):java.lang.Integer A[MD:\<T\>:(java.lang.Iterable\<? extends T\>):java.lang.Integer (m)] (LINE:122)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001d \l}"];
Node_12 [shape=record,label="{12\:\ 0x0010|0x0010: CHECK_CAST (r0 I:java.lang.Number) = (java.lang.Number) (r0 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r0 I:int) = (r0 I:java.lang.Number) type: VIRTUAL call: java.lang.Number.intValue():int A[MD:():int (c)]\l0x0016: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:156)\l0x0017: INVOKE  (r2 I:int) = (r3 I:java.util.Set A[D('$this$plus' java.util.Set)]) type: INTERFACE call: java.util.Set.size():int A[MD:():int (c)] (LINE:122)\l0x001b: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int A[D('it' int)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|0x0023: INVOKE  (r0 I:int) = (r2 I:int) type: STATIC call: kotlin.collections.MapsKt.mapCapacity(int):int A[MD:(int):int (m)]\l0x0027: NEW_INSTANCE  (r1 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet \l0x0029: INVOKE  (r1 I:java.util.LinkedHashSet), (r0 I:int) type: DIRECT call: java.util.LinkedHashSet.\<init\>(int):void A[MD:(int):void (c)]\l0x002c: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x002d: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('$this$plus' java.util.Set)])  (LINE:123)\l0x002e: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x0030: INVOKE  (r0 I:java.util.LinkedHashSet A[D('result' java.util.LinkedHashSet)]), (r1 I:java.util.Collection) type: VIRTUAL call: java.util.LinkedHashSet.addAll(java.util.Collection):boolean A[MD:(java.util.Collection\<? extends E\>):boolean (c)]\l0x0033: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.util.LinkedHashSet)])  (LINE:124)\l0x0034: CHECK_CAST (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:??[OBJECT, ARRAY]) \l0x0036: INVOKE  (r1 I:java.util.Collection), (r4 I:java.lang.Iterable A[D('elements' java.lang.Iterable)]) type: STATIC call: kotlin.collections.CollectionsKt.addAll(java.util.Collection, java.lang.Iterable):boolean A[MD:\<T\>:(java.util.Collection\<? super T\>, java.lang.Iterable\<? extends T\>):boolean (m)]\l0x0039: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.util.LinkedHashSet)])  (LINE:125)\l0x003a: CHECK_CAST (r1 I:java.util.Set) = (java.util.Set) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|RETURN\l|0x003c: RETURN  (r1 I:java.util.Set\<T\>) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|0x001d: INVOKE  (r0 I:int) = (r3 I:java.util.Set A[D('$this$plus' java.util.Set)]) type: INTERFACE call: java.util.Set.size():int A[MD:():int (c)]\l0x0021: ARITH  (r2 I:int) = (r0 I:int) * (2 int) \l}"];
MethodNode[shape=record,label="{public static final java.util.Set\<T\> kotlin.collections.SetsKt___SetsKt.plus((r3 I:java.util.Set\<? extends T\> A[D('$this$plus' java.util.Set), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Iterable\<? extends T\> A[D('elements' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001d \-\> B:14:0x0023\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x001c: r0 'it' I\l  0x0017\-0x001c: r1 '$i$a$\-let\-SetsKt___SetsKt$plus$result$1' I\l  0x002d\-0x003c: r0 'result' Ljava\/util\/LinkedHashSet;\l  \-1 \-0x003c: r3 '$this$plus' Ljava\/util\/Set;\l  \-1 \-0x003c: r4 'elements' Ljava\/lang\/Iterable;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/Set\<+TT;\>;Ljava\/lang\/Iterable\<+TT;\>;)Ljava\/util\/Set\<TT;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

