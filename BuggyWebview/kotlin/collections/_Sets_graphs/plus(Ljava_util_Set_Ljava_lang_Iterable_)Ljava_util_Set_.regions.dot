digraph "CFG forkotlin.collections.SetsKt___SetsKt.plus(Ljava\/util\/Set;Ljava\/lang\/Iterable;)Ljava\/util\/Set;" {
subgraph cluster_Region_1809372025 {
label = "R(4:1|(1:3)(1:7)|4|5) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"elements\")\ljava.lang.Integer java.lang.Integer r0 = kotlin.collections.CollectionsKt.collectionSizeOrNull(r4)\l}"];
subgraph cluster_IfRegion_742061002 {
label = "IF [B:11:0x000e] THEN: R(1:3) ELSE: R(1:7)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000e|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_329763028 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0010|int int r0 = r0.intValue()\lint r2 = r3.size() + r0\l}"];
}
subgraph cluster_Region_63482109 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x001d|int r2 = r3.size() * 2\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0023|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:13:0x001d, B:12:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|java.util.LinkedHashSet java.util.LinkedHashSet r1 = new java.util.LinkedHashSet(kotlin.collections.MapsKt.mapCapacity(r2))\lr1.addAll(r3)\lkotlin.collections.CollectionsKt.addAll(r1, r4)\l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|RETURN\l|return r1\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.Set\<T\> kotlin.collections.SetsKt___SetsKt.plus((r3v0 java.util.Set\<? extends T\> A[D('$this$plus' java.util.Set), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'elements' java.lang.Iterable\<? extends T\> A[D('elements' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001d \-\> B:14:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/Set\<+TT;\>;Ljava\/lang\/Iterable\<+TT;\>;)Ljava\/util\/Set\<TT;\>;\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_8 -> Node_10;
}

