digraph "CFG forkotlin.collections.SetsKt___SetsKt.minus(Ljava\/util\/Set;Ljava\/lang\/Object;)Ljava\/util\/Set;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$minus' java.util.Set)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: NEW_INSTANCE  (r0 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet  (LINE:26)\l0x0007: INVOKE  (r1 I:int) = (r9 I:java.util.Set A[D('$this$minus' java.util.Set)]) type: INTERFACE call: java.util.Set.size():int A[MD:():int (c)]\l0x000b: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: kotlin.collections.MapsKt.mapCapacity(int):int A[MD:(int):int (m)]\l0x000f: INVOKE  (r0 I:java.util.LinkedHashSet), (r1 I:int) type: DIRECT call: java.util.LinkedHashSet.\<init\>(int):void A[MD:(int):void (c)]\l0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:27)\l0x0013: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('$this$minus' java.util.Set)])  (LINE:28)\l0x0014: CHECK_CAST (r2 I:java.lang.Iterable) = (java.lang.Iterable) (r2 I:??[OBJECT, ARRAY]) \l0x0016: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: INVOKE  (r4 I:java.util.Iterator) = (r2 I:java.lang.Iterable A[D('$this$filterTo$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:152)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001b|LOOP_START\lLOOP:0: B:23:0x001b\-\>B:37:0x001b\l|0x001b: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|0x001f: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x003c \l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|0x0021: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0025: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) \l0x0026: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|0x0027: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('removed' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0032  (LINE:28)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0029|0x0029: INVOKE  (r8 I:boolean) = (r6 I:java.lang.Object A[D('it' java.lang.Object)]), (r10 I:java.lang.Object A[D('element' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x002d|0x002d: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0032 \l}"];
Node_29 [shape=record,label="{29\:\ 0x002f|0x002f: CONST  (r1 I:??[boolean, int, float, short, byte, char] A[D('removed' boolean)]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0030: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0033|0x0033: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x001b \l}"];
Node_35 [shape=record,label="{35\:\ 0x0035|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0035|0x0035: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.util.LinkedHashSet)]) \l0x0036: CHECK_CAST (r6 I:java.util.Collection) = (java.util.Collection) (r6 I:??[OBJECT, ARRAY]) \l0x0038: INVOKE  (r6 I:java.util.Collection), (r5 I:java.lang.Object A[D('element$iv' java.lang.Object)]) type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x001b|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x001b|LOOP_END\lSYNTHETIC\lLOOP:0: B:23:0x001b\-\>B:37:0x001b\l}"];
Node_38 [shape=record,label="{38\:\ 0x001b|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0032|0x0032: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x003c|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x003c|0x003c: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('$this$filterTo$iv' java.lang.Iterable)]) = (r0 I:??[OBJECT, ARRAY] A[D('result' java.util.LinkedHashSet)])  (LINE:153)\l0x003d: CHECK_CAST (r2 I:java.util.Collection) = (java.util.Collection) (r2 I:??[OBJECT, ARRAY] A[D('$this$filterTo$iv' java.lang.Iterable)]) \l0x003f: CHECK_CAST (r2 I:java.util.Set) = (java.util.Set) (r2 I:??[OBJECT, ARRAY] A[D('$this$filterTo$iv' java.lang.Iterable)]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0041|RETURN\l|0x0041: RETURN  (r2 I:java.util.Set\<T\>)  (LINE:28)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.util.Set\<T\> kotlin.collections.SetsKt___SetsKt.minus((r9 I:java.util.Set\<? extends T\> A[D('$this$minus' java.util.Set), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:T A[D('element' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:31:0x0033 \-\> B:23:0x001b, BACK_EDGE: B:32:0x0035 \-\> B:23:0x001b, CROSS_EDGE: B:30:0x0032 \-\> B:31:0x0033, CROSS_EDGE: B:26:0x0027 \-\> B:30:0x0032\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0026\-0x0033: r6 'it' Ljava\/lang\/Object;\l  0x0027\-0x0033: r7 '$i$a$\-filterTo\-SetsKt___SetsKt$minus$1' I\l  0x0025\-0x003c: r5 'element$iv' Ljava\/lang\/Object;\l  0x0016\-0x003f: r2 '$this$filterTo$iv' Ljava\/lang\/Iterable;\l  0x0017\-0x003f: r3 '$i$f$filterTo' I\l  0x0012\-0x0041: r0 'result' Ljava\/util\/LinkedHashSet;\l  0x0013\-0x0041: r1 'removed' Z\l  \-1 \-0x0041: r9 '$this$minus' Ljava\/util\/Set;\l  \-1 \-0x0041: r10 'element' Ljava\/lang\/Object;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/Set\<+TT;\>;TT;)Ljava\/util\/Set\<TT;\>;\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_36;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_30;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_35[style=dashed];
Node_31 -> Node_38;
Node_35 -> Node_32;
Node_32 -> Node_39;
Node_39 -> Node_37;
Node_37 -> Node_23;
Node_38 -> Node_37;
Node_30 -> Node_31;
Node_36 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_21;
}

