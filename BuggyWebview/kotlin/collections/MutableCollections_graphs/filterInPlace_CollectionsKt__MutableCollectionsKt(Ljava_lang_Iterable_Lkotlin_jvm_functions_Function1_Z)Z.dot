digraph "CFG forkotlin.collections.CollectionsKt__MutableCollectionsKt.filterInPlace$CollectionsKt__MutableCollectionsKt(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;Z)Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|r0 = false\ljava.util.Iterator r1 = r4.iterator()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|LOOP_START\lLOOP:0: B:18:0x0006\-\>B:27:0x0006\lPHI: r0 \l  PHI: (r0v1 'result' boolean) = (r0v0 'result' boolean), (r0v2 'result' boolean) binds: [B:17:0x0000, B:27:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|if (r1.hasNext() == false) goto L11\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c}"];
Node_21 [shape=record,label="{21\:\ 0x001a|if (r5.invoke((T) r1.next()).booleanValue() != r6) goto L10\l}"];
Node_25 [shape=record,label="{25\:\ 0x001c|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x001c|r1.remove()\lr0 = true\l}"];
Node_29 [shape=record,label="{29\:\ 0x0006|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:18:0x0006\-\>B:27:0x0006\lPHI: r0 \l  PHI: (r0v2 'result' boolean) = (r0v1 'result' boolean), (r0v3 'result' boolean) binds: [B:28:0x0006, B:29:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0023|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0023|RETURN\l|return r0\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final boolean kotlin.collections.CollectionsKt__MutableCollectionsKt.filterInPlace$CollectionsKt__MutableCollectionsKt((r4v0 java.lang.Iterable\<? extends T\> A[D('$this$filterInPlace' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'predicateResultToRemove' boolean A[D('predicateResultToRemove' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lBACK_EDGE: B:21:0x001a \-\> B:18:0x0006, BACK_EDGE: B:22:0x001c \-\> B:18:0x0006\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-TT;Ljava\/lang\/Boolean;\>;Z)Z\lJadxCommentsAttr\{\l DEBUG: \l \-\> Type inference failed for r3v1. Raw type applied. Possible types: T, ? super T\}\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_26;
Node_20 -> Node_21;
Node_21 -> Node_25[style=dashed];
Node_21 -> Node_28;
Node_25 -> Node_22;
Node_22 -> Node_29;
Node_29 -> Node_27;
Node_27 -> Node_18;
Node_28 -> Node_27;
Node_26 -> Node_24;
Node_24 -> Node_16;
}

