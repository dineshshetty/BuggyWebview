digraph "CFG forkotlin.collections.MapsKt___MapsJvmKt.maxBy(Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map$Entry;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"selector\")\ljava.util.Iterator r0 = r6.entrySet().iterator()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|if (r0.hasNext() != false) goto L7\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|r0 = null\l}"];
Node_15 [shape=record,label="{15\:\ 0x0047|PHI: r0 \l  PHI: (r0v6 java.lang.Object) = (r0v5 java.lang.Object), (r0v8 java.lang.Object) binds: [B:7:0x0026, B:4:0x001a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|RETURN\l|return (java.util.Map.Entry) r0\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|java.lang.Object r1 = (java.lang.Object) r0.next()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|if (r0.hasNext() != false) goto L10\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|PHI: r1 \l  PHI: (r1v5 java.lang.Object) = (r1v1 java.lang.Object), (r1v3 java.lang.Object) binds: [B:6:0x0024, B:18:0x0026] A[DONT_GENERATE, DONT_INLINE]\l|r0 = r1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|java.lang.Comparable r2 = r7.invoke(r1)\lr1 = r1\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|LOOP_START\lLOOP:0: B:9:0x002e\-\>B:13:0x0044\lPHI: r1 r2 \l  PHI: (r1v2 java.lang.Object) = (r1v8 java.lang.Object), (r1v9 java.lang.Object) binds: [B:8:0x0028, B:13:0x0044] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 R extends java.lang.Comparable\<? super R\>) = (r2v2 R extends java.lang.Comparable\<? super R\>), (r2v4 R extends java.lang.Comparable\<? super R\>) binds: [B:8:0x0028, B:13:0x0044] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Object r3 = (java.lang.Object) r0.next()\ljava.lang.Comparable r4 = r7.invoke(r3)\lr1 = r1\l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|if (r2.compareTo(r4) \>= 0) goto L14\l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|r2 = r4\lr1 = (java.lang.Object) r3\l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|PHI: r1 r2 \l  PHI: (r1v3 java.lang.Object) = (r1v10 java.lang.Object), (r1v11 java.lang.Object) binds: [B:10:0x003c, B:11:0x003e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v4 R extends java.lang.Comparable\<? super R\>) = (r2v3 R extends java.lang.Comparable\<? super R\>), (r2v5 R extends java.lang.Comparable\<? super R\>) binds: [B:10:0x003c, B:11:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|LOOP_END\lLOOP:0: B:9:0x002e\-\>B:13:0x0044\l|if (r0.hasNext() != false) goto L11\l}"];
Node_18 [shape=record,label="{18\:\ 0x0026|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static final \/* synthetic *\/ java.util.Map$Entry\<K, V\> kotlin.collections.MapsKt___MapsJvmKt.maxBy((r6v0 java.util.Map\<? extends K, ? extends V\> A[D('$this$maxBy' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'selector' kotlin.jvm.functions.Function1\<? super java.util.Map$Entry\<? extends K, ? extends V\>, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use maxByOrNull instead., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=this.maxByOrNull(selector), imports=[[]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{errorSince=1.5, hiddenSince=1.6, warningSince=1.4\}\}\}\lCROSS_EDGE: B:7:0x0026 \-\> B:15:0x0047, CROSS_EDGE: B:13:0x0044 \-\> B:7:0x0026, BACK_EDGE: B:13:0x0044 \-\> B:9:0x002e, CROSS_EDGE: B:10:0x003c \-\> B:12:0x0040\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>, V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;R::Ljava\/lang\/Comparable\<\-TR;\>;\>(Ljava\/util\/Map\<+TK;+TV;\>;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/util\/Map$Entry\<+TK;+TV;\>;+TR;\>;)Ljava\/util\/Map$Entry\<TK;TV;\>;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Failed to insert an additional move for type inference into block B:18:0x0026\l \-\> Type inference failed for r0v4. Raw type applied. Possible types: java.util.Iterator\<T\>, java.util.Iterator\l \-\> Type inference failed for r1v1. Raw type applied. Possible types: ? super java.util.Map$Entry\<? extends K, ? extends V\>\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_13 -> Node_18[style=dashed];
Node_18 -> Node_7;
}

