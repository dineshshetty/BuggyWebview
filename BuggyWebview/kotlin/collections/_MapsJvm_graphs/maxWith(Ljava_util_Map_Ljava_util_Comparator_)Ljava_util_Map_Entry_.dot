digraph "CFG forkotlin.collections.MapsKt___MapsJvmKt.maxWith(Ljava\/util\/Map;Ljava\/util\/Comparator;)Ljava\/util\/Map$Entry;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r2, \"comparator\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|RETURN\l|return (java.util.Map.Entry) kotlin.collections.CollectionsKt.maxWithOrNull(r1.entrySet(), r2)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final \/* synthetic *\/ java.util.Map$Entry\<K, V\> kotlin.collections.MapsKt___MapsJvmKt.maxWith((r1v0 java.util.Map\<? extends K, ? extends V\> A[D('$this$maxWith' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'comparator' java.util.Comparator\<? super java.util.Map$Entry\<? extends K, ? extends V\>\> A[D('comparator' java.util.Comparator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use maxWithOrNull instead., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=this.maxWithOrNull(comparator), imports=[[]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{errorSince=1.5, hiddenSince=1.6, warningSince=1.4\}\}\}\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/util\/Map\<+TK;+TV;\>;Ljava\/util\/Comparator\<\-Ljava\/util\/Map$Entry\<+TK;+TV;\>;\>;)Ljava\/util\/Map$Entry\<TK;TV;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

