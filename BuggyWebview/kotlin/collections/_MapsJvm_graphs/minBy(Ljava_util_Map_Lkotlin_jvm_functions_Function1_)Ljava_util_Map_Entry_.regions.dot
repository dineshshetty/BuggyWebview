digraph "CFG forkotlin.collections.MapsKt___MapsJvmKt.minBy(Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map$Entry;" {
subgraph cluster_Region_140688255 {
label = "R(3:1|(2:7|(3:10|(3:11|(1:13)|14)|9)(1:9))(1:3)|5) | DECL_VAR: java.lang.Object null\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"selector\")\ljava.util.Iterator java.util.Iterator r1 = r7.entrySet().iterator()\l}"];
subgraph cluster_IfRegion_1741988940 {
label = "IF [B:3:0x0019] THEN: R(2:7|(3:10|(3:11|(1:13)|14)|9)(1:9)) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0019|if (r1.hasNext() == true) goto L7\l}"];
subgraph cluster_Region_1834649785 {
label = "R(2:7|(3:10|(3:11|(1:13)|14)|9)(1:9))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001d|java.lang.Object java.lang.Object r2 = (java.lang.Object) r1.next()\l}"];
subgraph cluster_IfRegion_1539418010 {
label = "IF [B:6:0x0025] THEN: R(3:10|(3:11|(1:13)|14)|9) ELSE: R(1:9)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0025|if (r1.hasNext() == true) goto L10\l}"];
subgraph cluster_Region_1801240234 {
label = "R(3:10|(3:11|(1:13)|14)|9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0029|java.lang.Comparable R r3 = r8.invoke(r2)\ljava.lang.Object r2 = r2\l}"];
subgraph cluster_LoopRegion_1189431006 {
label = "LOOP:0: (3:11|(1:13)|14)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0045|LOOP_END\lLOOP:0: B:9:0x002f\-\>B:13:0x0045\l|if (r1.hasNext() != false) goto L11\l}"];
subgraph cluster_Region_80837770 {
label = "R(3:11|(1:13)|14)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002f|LOOP_START\lLOOP:0: B:9:0x002f\-\>B:13:0x0045\lPHI: r2 r3 \l  PHI: (r2v2 java.lang.Object) = (r2v8 java.lang.Object), (r2v9 java.lang.Object) binds: [B:8:0x0029, B:13:0x0045] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v3 R extends java.lang.Comparable\<? super R\>) = (r3v2 R extends java.lang.Comparable\<? super R\>), (r3v4 R extends java.lang.Comparable\<? super R\>) binds: [B:8:0x0029, B:13:0x0045] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Object java.lang.Object r4 = (java.lang.Object) r1.next()\ljava.lang.Comparable R r5 = r8.invoke(r4)\lr2 = r2\l}"];
subgraph cluster_IfRegion_148492275 {
label = "IF [B:10:0x003d] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x003d|if (r3.compareTo(r5) \> 0) goto L13\l}"];
subgraph cluster_Region_1031222249 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003f|r3 = r5\lr2 = (java.lang.Object) r4\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0041|PHI: r2 r3 \l  PHI: (r2v3 java.lang.Object) = (r2v10 java.lang.Object), (r2v11 java.lang.Object) binds: [B:10:0x003d, B:11:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v4 R extends java.lang.Comparable\<? super R\>) = (r3v3 R extends java.lang.Comparable\<? super R\>), (r3v5 R extends java.lang.Comparable\<? super R\>) binds: [B:10:0x003d, B:11:0x003f] A[DONT_GENERATE, DONT_INLINE]\l|r2 = r2\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0027|PHI: r2 \l  PHI: (r2v5 java.lang.Object) = (r2v1 java.lang.Object), (r2v3 java.lang.Object) binds: [B:6:0x0025, B:18:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r2\l}"];
}
subgraph cluster_Region_132368041 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0027|PHI: r2 \l  PHI: (r2v5 java.lang.Object) = (r2v1 java.lang.Object), (r2v3 java.lang.Object) binds: [B:6:0x0025, B:18:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r2\l}"];
}
}
}
subgraph cluster_Region_213208442 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001b|r1 = null\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x004a|RETURN\l|return (java.util.Map.Entry) r1\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0048|PHI: r1 \l  PHI: (r1v4 java.lang.Object) = (r1v3 java.lang.Object), (r1v6 java.lang.Object) binds: [B:7:0x0027, B:4:0x001b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0027|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ java.util.Map$Entry\<K, V\> kotlin.collections.MapsKt___MapsJvmKt.minBy((r7v0 java.util.Map\<? extends K, ? extends V\> A[D('$this$minBy' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'selector' kotlin.jvm.functions.Function1\<? super java.util.Map$Entry\<? extends K, ? extends V\>, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use minByOrNull instead., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=this.minByOrNull(selector), imports=[[]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{errorSince=1.5, hiddenSince=1.6, warningSince=1.4\}\}\}\lCROSS_EDGE: B:7:0x0027 \-\> B:15:0x0048, CROSS_EDGE: B:13:0x0045 \-\> B:7:0x0027, BACK_EDGE: B:13:0x0045 \-\> B:9:0x002f, CROSS_EDGE: B:10:0x003d \-\> B:12:0x0041\lINLINE_NOT_NEEDED\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>, V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;R::Ljava\/lang\/Comparable\<\-TR;\>;\>(Ljava\/util\/Map\<+TK;+TV;\>;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/util\/Map$Entry\<+TK;+TV;\>;+TR;\>;)Ljava\/util\/Map$Entry\<TK;TV;\>;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l DEBUG: \l \-\> Failed to insert an additional move for type inference into block B:18:0x0027\l \-\> Type inference failed for r1v2. Raw type applied. Possible types: java.util.Iterator\<T\>, java.util.Iterator\l \-\> Type inference failed for r2v1. Raw type applied. Possible types: ? super java.util.Map$Entry\<? extends K, ? extends V\>\}\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_13 -> Node_9;
Node_13 -> Node_18[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_7 -> Node_15;
Node_7 -> Node_15;
Node_4 -> Node_15;
Node_16 -> Node_1;
Node_0 -> Node_2;
Node_15 -> Node_16;
Node_18 -> Node_7;
}

