digraph "CFG forkotlin.collections.MapsKt___MapsJvmKt.minWith(Ljava\/util\/Map;Ljava\/util\/Comparator;)Ljava\/util\/Map$Entry;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$minWith' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"comparator\" \l0x0007: INVOKE  (r2 I:java.lang.Object A[D('comparator' java.util.Comparator)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:java.util.Set) = (r1 I:java.util.Map A[D('$this$minWith' java.util.Map)]) type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:46)\l0x000e: CHECK_CAST (r0 I:java.lang.Iterable) = (java.lang.Iterable) (r0 I:??[OBJECT, ARRAY]) \l0x0010: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Iterable), (r2 I:java.util.Comparator A[D('comparator' java.util.Comparator)]) type: STATIC call: kotlin.collections.CollectionsKt.minWithOrNull(java.lang.Iterable, java.util.Comparator):java.lang.Object A[MD:\<T\>:(java.lang.Iterable\<? extends T\>, java.util.Comparator\<? super T\>):T (m)]\l0x0014: CHECK_CAST (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:java.util.Map$Entry) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ java.util.Map$Entry kotlin.collections.MapsKt___MapsJvmKt.minWith((r1 I:java.util.Map A[D('$this$minWith' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.util.Comparator A[D('comparator' java.util.Comparator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use minWithOrNull instead., replaceWith=\{ENCODED_ANNOTATION: Annotation\{null, type=Lkotlin\/ReplaceWith;, values=\{expression=this.minWithOrNull(comparator), imports=[[]]\}\}\}\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{errorSince=1.5, hiddenSince=1.6, warningSince=1.4\}\}\}\lDebug Info:\l  \-1 \-0x0016: r1 '$this$minWith' Ljava\/util\/Map;\l  \-1 \-0x0016: r2 'comparator' Ljava\/util\/Comparator;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

