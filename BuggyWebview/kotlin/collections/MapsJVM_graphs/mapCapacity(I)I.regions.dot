digraph "CFG forkotlin.collections.MapsKt__MapsJVMKt.mapCapacity(I)I" {
subgraph cluster_Region_1319356610 {
label = "R(1:(2:(1:3)|(1:(2:(1:8)|(1:(2:(1:12)|(1:13)))))))";
node [shape=record,color=blue];
subgraph cluster_Region_357292325 {
label = "R(2:(1:3)|(1:(2:(1:8)|(1:(2:(1:12)|(1:13))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1904792518 {
label = "IF [B:17:0x0001] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0001|if (r2 \< 0) goto L2\l}"];
subgraph cluster_Region_1559801076 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_206412401 {
label = "R(1:(2:(1:8)|(1:(2:(1:12)|(1:13)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1191503916 {
label = "R(2:(1:8)|(1:(2:(1:12)|(1:13))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1881474537 {
label = "IF [B:20:0x0006] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0006|if (r2 \< 3) goto L7\l}"];
subgraph cluster_Region_1763936277 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return r2 + 1\l}"];
}
}
subgraph cluster_Region_165480786 {
label = "R(1:(2:(1:12)|(1:13)))";
node [shape=record,color=blue];
subgraph cluster_Region_1769522637 {
label = "R(2:(1:12)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_833265478 {
label = "IF [B:23:0x000d] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000d|if (r2 \< 1073741824) goto L11\l}"];
subgraph cluster_Region_1153227334 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return (int) ((r2 \/ 0.75f) + 1.0f)\l}"];
}
}
subgraph cluster_Region_634051610 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0018|RETURN\lORIG_RETURN\l|return Integer.MAX_VALUE\l}"];
}
}
}
}
}
}
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0003}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0005}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0008}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x000b}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x000f}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.MapsKt__MapsJVMKt.mapCapacity((r2v0 'expectedSize' int A[D('expectedSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0008 \-\> B:26:0x001b, CROSS_EDGE: B:24:0x000f \-\> B:26:0x001b, CROSS_EDGE: B:25:0x0018 \-\> B:26:0x001b\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_15;Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_27 -> Node_16;
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_28 -> Node_16;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_29 -> Node_16;
Node_25 -> Node_16;
Node_15 -> Node_17;
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_21 -> Node_28;
Node_22 -> Node_23;
Node_24 -> Node_29;
}

