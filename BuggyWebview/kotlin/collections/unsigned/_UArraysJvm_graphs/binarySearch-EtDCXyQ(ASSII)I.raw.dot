digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysJvmKt.binarySearch\-EtDCXyQ([SSII)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$this$binarySearch\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$binarySearch_u2dEtDCXyQ' short[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: SGET  (r0 I:kotlin.collections.AbstractList$Companion) =  kotlin.collections.AbstractList.Companion kotlin.collections.AbstractList$Companion  (LINE:270)\l0x0007: INVOKE  (r1 I:int) = (r6 I:short[] A[D('$this$binarySearch_u2dEtDCXyQ' short[])]) type: STATIC call: kotlin.UShortArray.getSize\-impl(short[]):int A[MD:(short[]):int (m)]\l0x000b: INVOKE  \l  (r0 I:kotlin.collections.AbstractList$Companion)\l  (r8 I:int A[D('fromIndex' int)])\l  (r9 I:int A[D('toIndex' int)])\l  (r1 I:int)\l type: VIRTUAL call: kotlin.collections.AbstractList.Companion.checkRangeIndexes$kotlin_stdlib(int, int, int):void A[MD:(int, int, int):void (m)]\l0x000e: CONST  (r0 I:??[int, float, short, byte, char]) = (65535(0xffff, float:9.1834E\-41) ??[int, float, short, byte, char])  (LINE:271)\l0x0011: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (r7 I:??[int, boolean, short, byte, char] A[D('element' short)]) \l0x0012: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fromIndex' int)])  (LINE:272)\l0x0013: ARITH  (r2 I:int) = (r9 I:int A[D('toIndex' int)]) + (\-1 int)  (LINE:273)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|LOOP_START\lLOOP:0: B:3:0x0015\-\>B:16:0x0015\l|0x0015: IF  (r1 I:??[int, byte, short, char] A[D('low' int)]) \> (r2 I:??[int, byte, short, char] A[D('high' int)])  \-\> B:13:0x002c  (LINE:274)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: ARITH  (r3 I:int) = (r1 I:int A[D('low' int)]) + (r2 I:int A[D('high' int)])  (LINE:275)\l0x0019: ARITH  (r3 I:int) = (r3 I:int) \>\>\> (1 int) \l0x001b: AGET  (r4 I:short A[IMMUTABLE_TYPE]) = \l  (r6 I:short[] A[D('$this$binarySearch_u2dEtDCXyQ' short[]), IMMUTABLE_TYPE])\l  (r3 I:??[int, short, byte, char] A[D('mid' int)])\l  (LINE:276)\l0x001d: INVOKE  (r5 I:int) = (r4 I:int A[D('midVal' short)]), (r0 I:int A[D('signedElement' int)]) type: STATIC call: kotlin.UnsignedKt.uintCompare(int, int):int A[MD:(int, int):int (m)] (LINE:277)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: IF  (r5 I:??[int, byte, short, char] A[D('cmp' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:12:0x0026  (LINE:278)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: IF  (r5 I:??[int, byte, short, char] A[D('cmp' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:15:0x002b  (LINE:280)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: ARITH  (r2 I:int A[D('high' int)]) = (r3 I:int A[D('mid' int)]) + (\-1 int)  (LINE:281)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0015|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x0015\-\>B:16:0x0015\l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|RETURN\l|0x002b: RETURN  (r3 I:int A[D('mid' int)])  (LINE:283)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: ARITH  (r1 I:int A[D('low' int)]) = (r3 I:int A[D('mid' int)]) + (1 int)  (LINE:279)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0015|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: ARITH  (r3 I:int A[D('mid' int)]) = (r1 I:int A[D('low' int)]) + (1 int)  (LINE:285)\l0x002e: NEG  (r3 I:int) = (r3 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|RETURN\l|0x002f: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.unsigned.UArraysKt___UArraysJvmKt.binarySearch\-EtDCXyQ((r6 I:short[] A[D('$this$binarySearch_u2dEtDCXyQ' short[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:short A[D('element' short), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('fromIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('toIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:6:0x0023 \-\> B:3:0x0015, BACK_EDGE: B:8:0x0028 \-\> B:3:0x0015, CROSS_EDGE: B:11:0x002f \-\> B:1:?\lDebug Info:\l  0x001b\-0x002c: r3 'mid' I\l  0x001d\-0x002c: r4 'midVal' S\l  0x0021\-0x002c: r5 'cmp' I\l  0x0012\-0x002f: r0 'signedElement' I\l  0x0013\-0x002f: r1 'low' I\l  0x0015\-0x002f: r2 'high' I\l  \-1 \-0x002f: r6 '$this$binarySearch_u2dEtDCXyQ' [S\l  \-1 \-0x002f: r7 'element' S\l  \-1 \-0x002f: r8 'fromIndex' I\l  \-1 \-0x002f: r9 'toIndex' I\lRENAME_REASON:not valid java name\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_12;
Node_5 -> Node_14[style=dashed];
Node_12 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_17;
Node_17 -> Node_16;
Node_16 -> Node_3;
Node_15 -> Node_9;
Node_9 -> Node_1;
Node_14 -> Node_6;
Node_6 -> Node_18;
Node_18 -> Node_16;
Node_13 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
}

