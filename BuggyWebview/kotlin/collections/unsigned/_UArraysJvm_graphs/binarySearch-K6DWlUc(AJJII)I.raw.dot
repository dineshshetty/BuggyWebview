digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysJvmKt.binarySearch\-K6DWlUc([JJII)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$this$binarySearch\" \l0x0002: INVOKE  (r8 I:java.lang.Object A[D('$this$binarySearch_u2dK6DWlUc' long[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: SGET  (r0 I:kotlin.collections.AbstractList$Companion) =  kotlin.collections.AbstractList.Companion kotlin.collections.AbstractList$Companion  (LINE:192)\l0x0007: INVOKE  (r1 I:int) = (r8 I:long[] A[D('$this$binarySearch_u2dK6DWlUc' long[])]) type: STATIC call: kotlin.ULongArray.getSize\-impl(long[]):int A[MD:(long[]):int (m)]\l0x000b: INVOKE  \l  (r0 I:kotlin.collections.AbstractList$Companion)\l  (r11 I:int A[D('fromIndex' int)])\l  (r12 I:int A[D('toIndex' int)])\l  (r1 I:int)\l type: VIRTUAL call: kotlin.collections.AbstractList.Companion.checkRangeIndexes$kotlin_stdlib(int, int, int):void A[MD:(int, int, int):void (m)]\l0x000e: MOVE  (r0 I:??[long, double]) = (r9 I:??[long, double] A[D('element' long)])  (LINE:193)\l0x000f: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fromIndex' int)])  (LINE:194)\l0x0010: ARITH  (r3 I:int) = (r12 I:int A[D('toIndex' int)]) + (\-1 int)  (LINE:195)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|LOOP_START\lLOOP:0: B:3:0x0012\-\>B:16:0x0012\l|0x0012: IF  (r2 I:??[int, byte, short, char] A[D('low' int)]) \> (r3 I:??[int, byte, short, char] A[D('high' int)])  \-\> B:12:0x0029  (LINE:196)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: ARITH  (r4 I:int) = (r2 I:int A[D('low' int)]) + (r3 I:int A[D('high' int)])  (LINE:197)\l0x0016: ARITH  (r4 I:int) = (r4 I:int) \>\>\> (1 int) \l0x0018: AGET  (r5 I:??[long, double]) = \l  (r8 I:??[long, double][] A[D('$this$binarySearch_u2dK6DWlUc' long[])])\l  (r4 I:??[int, short, byte, char] A[D('mid' int)])\l  (LINE:198)\l0x001a: INVOKE  (r7 I:int) = (r5 I:long A[D('midVal' long)]), (r0 I:long A[D('signedElement' long)]) type: STATIC call: kotlin.UnsignedKt.ulongCompare(long, long):int A[MD:(long, long):int (m)] (LINE:199)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: IF  (r7 I:??[int, byte, short, char] A[D('cmp' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:13:0x0023  (LINE:200)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: IF  (r7 I:??[int, byte, short, char] A[D('cmp' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:14:0x0028  (LINE:202)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: ARITH  (r3 I:int A[D('high' int)]) = (r4 I:int A[D('mid' int)]) + (\-1 int)  (LINE:203)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x0012\-\>B:16:0x0012\l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|RETURN\l|0x0028: RETURN  (r4 I:int A[D('mid' int)])  (LINE:205)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0020|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: ARITH  (r2 I:int A[D('low' int)]) = (r4 I:int A[D('mid' int)]) + (1 int)  (LINE:201)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: ARITH  (r4 I:int A[D('mid' int)]) = (r2 I:int A[D('low' int)]) + (1 int)  (LINE:207)\l0x002b: NEG  (r4 I:int) = (r4 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|RETURN\l|0x002c: RETURN  (r4 I:int) \l}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.unsigned.UArraysKt___UArraysJvmKt.binarySearch\-K6DWlUc((r8 I:long[] A[D('$this$binarySearch_u2dK6DWlUc' long[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[D('element' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('fromIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('toIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:6:0x0020 \-\> B:3:0x0012, BACK_EDGE: B:8:0x0025 \-\> B:3:0x0012, CROSS_EDGE: B:11:0x002c \-\> B:1:?\lDebug Info:\l  0x0018\-0x0029: r4 'mid' I\l  0x001a\-0x0029: r5 'midVal' J\l  0x001e\-0x0029: r7 'cmp' I\l  0x000f\-0x002c: r0 'signedElement' J\l  0x0010\-0x002c: r2 'low' I\l  0x0012\-0x002c: r3 'high' I\l  \-1 \-0x002c: r8 '$this$binarySearch_u2dK6DWlUc' [J\l  \-1 \-0x002c: r9 'element' J\l  \-1 \-0x002c: r11 'fromIndex' I\l  \-1 \-0x002c: r12 'toIndex' I\lRENAME_REASON:not valid java name\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_13;
Node_5 -> Node_15[style=dashed];
Node_13 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_17;
Node_17 -> Node_16;
Node_16 -> Node_3;
Node_14 -> Node_9;
Node_9 -> Node_1;
Node_15 -> Node_6;
Node_6 -> Node_18;
Node_18 -> Node_16;
Node_12 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
}

