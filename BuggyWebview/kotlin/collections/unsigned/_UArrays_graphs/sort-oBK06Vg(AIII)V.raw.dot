digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.sort\-oBK06Vg([III)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$this$sort\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$sort_u2doBK06Vg' int[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: SGET  (r0 I:kotlin.collections.AbstractList$Companion) =  kotlin.collections.AbstractList.Companion kotlin.collections.AbstractList$Companion  (LINE:4131)\l0x0007: INVOKE  (r1 I:int) = (r2 I:int[] A[D('$this$sort_u2doBK06Vg' int[])]) type: STATIC call: kotlin.UIntArray.getSize\-impl(int[]):int A[MD:(int[]):int (m)]\l0x000b: INVOKE  \l  (r0 I:kotlin.collections.AbstractList$Companion)\l  (r3 I:int A[D('fromIndex' int)])\l  (r4 I:int A[D('toIndex' int)])\l  (r1 I:int)\l type: VIRTUAL call: kotlin.collections.AbstractList.Companion.checkRangeIndexes$kotlin_stdlib(int, int, int):void A[MD:(int, int, int):void (m)]\l0x000e: INVOKE  (r2 I:int[] A[D('$this$sort_u2doBK06Vg' int[])]), (r3 I:int A[D('fromIndex' int)]), (r4 I:int A[D('toIndex' int)]) type: STATIC call: kotlin.collections.UArraySortingKt.sortArray\-oBK06Vg(int[], int, int):void A[MD:(int[], int, int):void (m)] (LINE:4132)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|0x0011: RETURN    (LINE:4133)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void kotlin.collections.unsigned.UArraysKt___UArraysKt.sort\-oBK06Vg((r2 I:int[] A[D('$this$sort_u2doBK06Vg' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('fromIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('toIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0011: r2 '$this$sort_u2doBK06Vg' [I\l  \-1 \-0x0011: r3 'fromIndex' I\l  \-1 \-0x0011: r4 'toIndex' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

