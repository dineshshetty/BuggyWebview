digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.dropWhile\-jgv0xPQ([ILkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
subgraph cluster_Region_401435263 {
label = "R(3:1|(3:3|(1:5)(1:(1:10)(0))|7)|15)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"$this$dropWhile\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"predicate\")\lboolean r0 = false\ljava.util.ArrayList java.util.ArrayList r1 = new java.util.ArrayList()\lint int r2 = kotlin.UIntArray.m298getSizeimpl(r6)\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_1340301063 {
label = "LOOP:0: (3:3|(1:5)(1:(1:10)(0))|7)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0015|LOOP_START\lLOOP:0: B:20:0x0015\-\>B:27:0x003d\lPHI: r0 r3 \l  PHI: (r0v3 'yielding' boolean) = (r0v2 'yielding' boolean), (r0v5 'yielding' boolean) binds: [B:19:0x0000, B:27:0x003d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:19:0x0000, B:27:0x003d] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r2) goto L3\l}"];
subgraph cluster_Region_1368177780 {
label = "R(3:3|(1:5)(1:(1:10)(0))|7)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0017|int int r4 = kotlin.UIntArray.m297getpVg5ArA(r6, r3)\l}"];
subgraph cluster_IfRegion_1588556108 {
label = "IF [B:22:0x001b] THEN: R(1:5) ELSE: R(1:(1:10)(0))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x001b|if (r0 != false) goto L5\l}"];
subgraph cluster_Region_857830798 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x001d|r1.add(kotlin.UInt.m232boximpl(r4))\l}"];
}
subgraph cluster_Region_1149282613 {
label = "R(1:(1:10)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1955365400 {
label = "IF [B:25:0x0033] THEN: R(1:10) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0033|if (r7.invoke(kotlin.UInt.m232boximpl(r4)).booleanValue() == false) goto L10\l}"];
subgraph cluster_Region_1470708500 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0035|r1.add(kotlin.UInt.m232boximpl(r4))\lr0 = true\l}"];
}
subgraph cluster_Region_436948826 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_27 [shape=record,label="{27\:\ 0x003d|LOOP_END\lLOOP:0: B:20:0x0015\-\>B:27:0x003d\lPHI: r0 \l  PHI: (r0v5 'yielding' boolean) = (r0v3 'yielding' boolean), (r0v4 'yielding' boolean), (r0v3 'yielding' boolean) binds: [B:33:0x003d, B:31:0x003d, B:32:0x003d] A[DONT_GENERATE, DONT_INLINE]\l|r3++\l}"];
}
}
Node_29 [shape=record,label="{29\:\ 0x0043|RETURN\l|return r1\l}"];
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x003d|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0025}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x003d|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x003d|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0040|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0040}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.util.List\<kotlin.UInt\> kotlin.collections.unsigned.UArraysKt___UArraysKt.dropWhile\-jgv0xPQ((r6v0 'dropWhile' int[] A[D('$this$dropWhile_u2djgv0xPQ' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'predicate' kotlin.jvm.functions.Function1\<? super kotlin.UInt, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x003d \-\> B:20:0x0015, CROSS_EDGE: B:26:0x0035 \-\> B:27:0x003d, CROSS_EDGE: B:25:0x0033 \-\> B:27:0x003d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ([ILkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/UInt;Ljava\/lang\/Boolean;\>;)Ljava\/util\/List\<Lkotlin\/UInt;\>;\l}"];
MethodNode -> Node_17;Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_30[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_25 -> Node_26;
Node_25 -> Node_33[style=dashed];
Node_26 -> Node_31;
Node_27 -> Node_20;
Node_29 -> Node_18;
Node_17 -> Node_19;
Node_32 -> Node_27;
Node_24 -> Node_25;
Node_31 -> Node_27;
Node_33 -> Node_27;
Node_30 -> Node_28;
Node_28 -> Node_29;
}

