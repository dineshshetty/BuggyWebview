digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.minByOrNull\-MShoTSo([JLkotlin\/jvm\/functions\/Function1;)Lkotlin\/ULong;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"$this$minByOrNull\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r11, \"selector\")\l}"];
Node_26 [shape=record,label="{26\:\ 0x000e|if (kotlin.ULongArray.m378isEmptyimpl(r10) == false) goto L5\l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|RETURN\l|return null\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0012|long r0 = kotlin.ULongArray.m375getsVKNKU(r10, 0)\lint r2 = kotlin.collections.ArraysKt.getLastIndex(r10)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001e|if (r2 != 0) goto L9\l}"];
Node_31 [shape=record,label="{31\:\ 0x0020}"];
Node_32 [shape=record,label="{32\:\ 0x0024|RETURN\l|return kotlin.ULong.m310boximpl(r0)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0025|java.lang.Comparable r3 = r11.invoke(kotlin.ULong.m310boximpl(r0))\lkotlin.collections.IntIterator r4 = new kotlin.ranges.IntRange(1, r2).iterator()\l}"];
Node_34 [shape=record,label="{34\:\ 0x0039|LOOP_START\lLOOP:0: B:34:0x0039\-\>B:43:0x0039\lPHI: r0 r3 \l  PHI: (r0v5 'minElem' long) = (r0v4 'minElem' long), (r0v6 'minElem' long) binds: [B:33:0x0025, B:43:0x0039] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v4 'minValue' java.lang.Comparable) = (r3v3 'minValue' java.lang.Comparable), (r3v5 'minValue' java.lang.Comparable) binds: [B:33:0x0025, B:43:0x0039] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x003d|if (r4.hasNext() == false) goto L19\l}"];
Node_36 [shape=record,label="{36\:\ 0x003f|int r5 = r4.nextInt()\llong r6 = kotlin.ULongArray.m375getsVKNKU(r10, r5)\ljava.lang.Comparable r8 = r11.invoke(kotlin.ULong.m310boximpl(r6))\l}"];
Node_37 [shape=record,label="{37\:\ 0x0055|if (r3.compareTo(r8) \<= 0) goto L18\l}"];
Node_41 [shape=record,label="{41\:\ 0x0057|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0057|r0 = r6\lr3 = r8\l}"];
Node_45 [shape=record,label="{45\:\ 0x0039|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0039|LOOP_END\lSYNTHETIC\lLOOP:0: B:34:0x0039\-\>B:43:0x0039\lPHI: r0 r3 \l  PHI: (r0v6 'minElem' long) = (r0v5 'minElem' long), (r0v7 'minElem' long) binds: [B:44:0x0039, B:45:0x0039] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v5 'minValue' java.lang.Comparable) = (r3v4 'minValue' java.lang.Comparable), (r3v6 'minValue' java.lang.Comparable) binds: [B:44:0x0039, B:45:0x0039] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0039|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x005a|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x005a}"];
Node_40 [shape=record,label="{40\:\ 0x005e|RETURN\l|return kotlin.ULong.m310boximpl(r0)\l}"];
MethodNode[shape=record,label="{private static final kotlin.ULong kotlin.collections.unsigned.UArraysKt___UArraysKt.minByOrNull\-MShoTSo((r10v0 'minByOrNull' long[] A[D('$this$minByOrNull_u2dMShoTSo' long[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'selector' kotlin.jvm.functions.Function1\<? super kotlin.ULong, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x0024 \-\> B:24:?, BACK_EDGE: B:37:0x0055 \-\> B:34:0x0039, BACK_EDGE: B:38:0x0057 \-\> B:34:0x0039, CROSS_EDGE: B:40:0x005e \-\> B:24:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>]\lSIGNATURE: \<R::Ljava\/lang\/Comparable\<\-TR;\>;\>([JLkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/ULong;+TR;\>;)Lkotlin\/ULong;\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r4v1, types: [kotlin.collections.IntIterator]\}\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_24;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_24;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_42;
Node_36 -> Node_37;
Node_37 -> Node_41[style=dashed];
Node_37 -> Node_44;
Node_41 -> Node_38;
Node_38 -> Node_45;
Node_45 -> Node_43;
Node_43 -> Node_34;
Node_44 -> Node_43;
Node_42 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_24;
}

