digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.contentEquals\-kdPth3s([B[B)Z" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$this$contentEquals\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$contentEquals_u2dkdPth3s' byte[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"other\" \l0x0007: INVOKE  (r2 I:java.lang.Object A[D('other' byte[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:boolean) = (r1 I:byte[] A[D('$this$contentEquals_u2dkdPth3s' byte[])]), (r2 I:byte[] A[D('other' byte[])]) type: STATIC call: kotlin.collections.unsigned.UArraysKt.contentEquals\-kV0jMPg(byte[], byte[]):boolean A[MD:(byte[], byte[]):boolean (m)] (LINE:3326)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ boolean kotlin.collections.unsigned.UArraysKt___UArraysKt.contentEquals\-kdPth3s((r1 I:byte[] A[D('$this$contentEquals_u2dkdPth3s' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:byte[] A[D('other' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\l\{Lkotlin\/Deprecated;=Annotation\{RUNTIME, type=Lkotlin\/Deprecated;, values=\{message=Use Kotlin compiler 1.4 to avoid deprecation warning.\}\}, Lkotlin\/DeprecatedSinceKotlin;=Annotation\{RUNTIME, type=Lkotlin\/DeprecatedSinceKotlin;, values=\{hiddenSince=1.4\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000e: r1 '$this$contentEquals_u2dkdPth3s' [B\l  \-1 \-0x000e: r2 'other' [B\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

