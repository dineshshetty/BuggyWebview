digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.groupByTo\-qOZmbk8([BLjava\/util\/Map;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$this$groupByTo\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('$this$groupByTo_u2dqOZmbk8' byte[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r10 I:java.lang.Object A[D('destination' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"keySelector\" \l0x000c: INVOKE  (r11 I:java.lang.Object A[D('keySelector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST_STR  (r0 I:java.lang.String) =  \"valueTransform\" \l0x0011: INVOKE  (r12 I:java.lang.Object A[D('valueTransform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0014: INVOKE  (r0 I:int) = (r9 I:byte[] A[D('$this$groupByTo_u2dqOZmbk8' byte[])]) type: STATIC call: kotlin.UByteArray.getSize\-impl(byte[]):int A[MD:(byte[]):int (m)] (LINE:5056)\l0x0018: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0019|LOOP_START\lLOOP:0: B:16:0x0019\-\>B:21:0x003e\l|0x0019: IF  (r1 I:??[int, byte, short, char]) \>= (r0 I:??[int, byte, short, char])  \-\> B:23:0x0050 \l}"];
Node_17 [shape=record,label="{17\:\ 0x001b|0x001b: INVOKE  (r2 I:byte) = (r9 I:byte[] A[D('$this$groupByTo_u2dqOZmbk8' byte[])]), (r1 I:int) type: STATIC call: kotlin.UByteArray.get\-w2LRezQ(byte[], int):byte A[MD:(byte[], int):byte (m)]\l0x001f: INVOKE  (r3 I:kotlin.UByte) = (r2 I:byte A[D('element' byte)]) type: STATIC call: kotlin.UByte.box\-impl(byte):kotlin.UByte A[MD:(byte):kotlin.UByte (m)] (LINE:5057)\l0x0023: INVOKE  (r3 I:java.lang.Object) = (r11 I:kotlin.jvm.functions.Function1 A[D('keySelector' kotlin.jvm.functions.Function1)]), (r3 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0027: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('destination' java.util.Map)])  (LINE:5058)\l0x0028: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0029: INVOKE  (r6 I:java.lang.Object) = (r4 I:java.util.Map A[D('$this$getOrPut$iv' java.util.Map)]), (r3 I:java.lang.Object A[D('key' java.lang.Object)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:10977)\l}"];
Node_18 [shape=record,label="{18\:\ 0x002d|0x002d: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value$iv' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x003d  (LINE:10978)\l}"];
Node_19 [shape=record,label="{19\:\ 0x002f|0x002f: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:10979)\l0x0030: NEW_INSTANCE  (r8 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:5058)\l0x0032: INVOKE  (r8 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0035: MOVE  (r7 I:??[OBJECT, ARRAY] A[D('$i$a$\-getOrPut\-UArraysKt___UArraysKt$groupByTo$list$7' int)]) = (r8 I:??[OBJECT, ARRAY]) \l0x0036: CHECK_CAST (r7 I:java.util.List) = (java.util.List) (r7 I:??[OBJECT, ARRAY] A[D('$i$a$\-getOrPut\-UArraysKt___UArraysKt$groupByTo$list$7' int)]) \l0x0038: INVOKE  \l  (r4 I:java.util.Map A[D('$this$getOrPut$iv' java.util.Map)])\l  (r3 I:java.lang.Object A[D('key' java.lang.Object)])\l  (r7 I:java.lang.Object A[D('answer$iv' java.lang.Object)])\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)] (LINE:10980)\l}"];
Node_25 [shape=record,label="{25\:\ 0x003e|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x003e|LOOP_END\lLOOP:0: B:16:0x0019\-\>B:21:0x003e\l|0x003f: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('$this$getOrPut$iv' java.util.Map)]) = (r7 I:??[OBJECT, ARRAY])  (LINE:5058)\l0x0040: CHECK_CAST (r4 I:java.util.List) = (java.util.List) (r4 I:??[OBJECT, ARRAY]) \l0x0042: INVOKE  (r5 I:kotlin.UByte) = (r2 I:byte A[D('element' byte)]) type: STATIC call: kotlin.UByte.box\-impl(byte):kotlin.UByte A[MD:(byte):kotlin.UByte (m)] (LINE:5059)\l0x0046: INVOKE  (r5 I:java.lang.Object) = (r12 I:kotlin.jvm.functions.Function1 A[D('valueTransform' kotlin.jvm.functions.Function1)]), (r5 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x004a: INVOKE  (r4 I:java.util.List A[D('list' java.util.List)]), (r5 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x004d: ARITH  (r1 I:int) = (r1 I:int) + (1 int)  (LINE:5056)\l}"];
Node_20 [shape=record,label="{20\:\ 0x003d|0x003d: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('value$iv' java.lang.Object)])  (LINE:10983)\l}"];
Node_24 [shape=record,label="{24\:\ 0x003e|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0050|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0050|RETURN\l|0x0050: RETURN  (r10 I:M extends java.util.Map\<? super K, java.util.List\<V\>\> A[D('destination' java.util.Map)])  (LINE:5061)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final M extends java.util.Map\<? super K, java.util.List\<V\>\> kotlin.collections.unsigned.UArraysKt___UArraysKt.groupByTo\-qOZmbk8((r9 I:byte[] A[D('$this$groupByTo_u2dqOZmbk8' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:M extends java.util.Map\<? super K, java.util.List\<V\>\> A[D('destination' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlin.jvm.functions.Function1\<? super kotlin.UByte, ? extends K\> A[D('keySelector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlin.jvm.functions.Function1\<? super kotlin.UByte, ? extends V\> A[D('valueTransform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x003e \-\> B:16:0x0019, CROSS_EDGE: B:20:0x003d \-\> B:21:0x003e\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K, M extends java.util.Map\<? super K, java.util.List\<V\>\>]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;M::Ljava\/util\/Map\<\-TK;Ljava\/util\/List\<TV;\>;\>;\>([BTM;Lkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/UByte;+TK;\>;Lkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/UByte;+TV;\>;)TM;\lDebug Info:\l  0x0030\-0x0038: r7 '$i$a$\-getOrPut\-UArraysKt___UArraysKt$groupByTo$list$7' I\l  0x0038\-0x003c: r7 'answer$iv' Ljava\/lang\/Object;\l  0x0028\-0x003f: r4 '$this$getOrPut$iv' Ljava\/util\/Map;\l  0x0029\-0x003f: r5 '$i$f$getOrPut' I\l  0x002d\-0x003f: r6 'value$iv' Ljava\/lang\/Object;\l  0x0027\-0x004d: r3 'key' Ljava\/lang\/Object;\l  0x0042\-0x004d: r4 'list' Ljava\/util\/List;\l  0x001f\-0x0050: r2 'element' B\l  \-1 \-0x0050: r9 '$this$groupByTo_u2dqOZmbk8' [B\l  \-1 \-0x0050: r10 'destination' Ljava\/util\/Map;\l  \-1 \-0x0050: r11 'keySelector' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x0050: r12 'valueTransform' Lkotlin\/jvm\/functions\/Function1;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_25;
Node_25 -> Node_21;
Node_21 -> Node_16;
Node_20 -> Node_24;
Node_24 -> Node_21;
Node_23 -> Node_22;
Node_22 -> Node_14;
}

