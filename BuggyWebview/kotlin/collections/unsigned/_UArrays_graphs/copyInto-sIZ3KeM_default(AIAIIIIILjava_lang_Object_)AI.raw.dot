digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.copyInto\-sIZ3KeM$default([I[IIIIILjava\/lang\/Object;)[I" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: ARITH  (r6 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char])  (LINE:3576)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|0x0002: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0005 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('destinationOffset' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|0x0005: ARITH  (r6 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x000a \l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|0x000a: ARITH  (r5 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (8 ??[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0012 \l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|0x000e: INVOKE  (r4 I:int A[D('endIndex' int)]) = (r0 I:int[] A[D('$this$copyInto_u2dsIZ3KeM_u24default' int[])]) type: STATIC call: kotlin.UIntArray.getSize\-impl(int[]):int A[MD:(int[]):int (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|0x0012: CONST_STR  (r5 I:java.lang.String) =  \"$this$copyInto\" \l0x0014: INVOKE  (r0 I:java.lang.Object A[D('$this$copyInto_u2dsIZ3KeM_u24default' int[])]), (r5 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0017: CONST_STR  (r5 I:java.lang.String) =  \"destination\" \l0x0019: INVOKE  (r1 I:java.lang.Object A[D('destination' int[])]), (r5 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x001c: INVOKE  \l  (r0 I:int[] A[D('$this$copyInto_u2dsIZ3KeM_u24default' int[])])\l  (r1 I:int[] A[D('destination' int[])])\l  (r2 I:int A[D('destinationOffset' int)])\l  (r3 I:int A[D('startIndex' int)])\l  (r4 I:int A[D('endIndex' int)])\l type: STATIC call: kotlin.collections.ArraysKt.copyInto(int[], int[], int, int, int):int[] A[MD:(int[], int[], int, int, int):int[] (m)] (LINE:3577)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001f|RETURN\l|0x001f: RETURN  (r1 I:int[] A[D('destination' int[])])  (LINE:3578)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ int[] kotlin.collections.unsigned.UArraysKt___UArraysKt.copyInto\-sIZ3KeM$default((r0 I:int[] A[D('$this$copyInto_u2dsIZ3KeM_u24default' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:int[] A[D('destination' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('destinationOffset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('startIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('endIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:22:0x000c \-\> B:24:0x0012, CROSS_EDGE: B:19:0x0007 \-\> B:21:0x000a, CROSS_EDGE: B:16:0x0002 \-\> B:18:0x0005\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001f: r0 '$this$copyInto_u2dsIZ3KeM_u24default' [I\l  \-1 \-0x001f: r1 'destination' [I\l  \-1 \-0x001f: r2 'destinationOffset' I\l  \-1 \-0x001f: r3 'startIndex' I\l  \-1 \-0x001f: r4 'endIndex' I\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

