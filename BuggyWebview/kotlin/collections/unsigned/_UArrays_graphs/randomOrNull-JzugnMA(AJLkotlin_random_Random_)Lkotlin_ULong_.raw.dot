digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.randomOrNull\-JzugnMA([JLkotlin\/random\/Random;)Lkotlin\/ULong;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$this$randomOrNull\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$randomOrNull_u2dJzugnMA' long[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"random\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('random' kotlin.random.Random)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:boolean) = (r2 I:long[] A[D('$this$randomOrNull_u2dJzugnMA' long[])]) type: STATIC call: kotlin.ULongArray.isEmpty\-impl(long[]):boolean A[MD:(long[]):boolean (m)] (LINE:1328)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0012 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0010|RETURN\l|0x0010: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1329)\l0x0011: RETURN  (r0 I:kotlin.ULong) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0012|0x0012: INVOKE  (r0 I:int) = (r2 I:long[] A[D('$this$randomOrNull_u2dJzugnMA' long[])]) type: STATIC call: kotlin.ULongArray.getSize\-impl(long[]):int A[MD:(long[]):int (m)] (LINE:1330)\l0x0016: INVOKE  (r0 I:int) = (r3 I:kotlin.random.Random A[D('random' kotlin.random.Random)]), (r0 I:int) type: VIRTUAL call: kotlin.random.Random.nextInt(int):int A[MD:(int):int (m)]\l0x001a: INVOKE  (r0 I:long) = (r2 I:long[] A[D('$this$randomOrNull_u2dJzugnMA' long[])]), (r0 I:int) type: STATIC call: kotlin.ULongArray.get\-s\-VKNKU(long[], int):long A[MD:(long[], int):long (m)]\l0x001e: INVOKE  (r0 I:kotlin.ULong) = (r0 I:long) type: STATIC call: kotlin.ULong.box\-impl(long):kotlin.ULong A[MD:(long):kotlin.ULong (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|RETURN\l|0x0022: RETURN  (r0 I:kotlin.ULong) \l}"];
MethodNode[shape=record,label="{public static final kotlin.ULong kotlin.collections.unsigned.UArraysKt___UArraysKt.randomOrNull\-JzugnMA((r2 I:long[] A[D('$this$randomOrNull_u2dJzugnMA' long[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.random.Random A[D('random' kotlin.random.Random), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0022 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0022: r2 '$this$randomOrNull_u2dJzugnMA' [J\l  \-1 \-0x0022: r3 'random' Lkotlin\/random\/Random;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

