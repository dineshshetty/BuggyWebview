digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.minWithOrNull\-zrEWJaI([JLjava\/util\/Comparator;)Lkotlin\/ULong;" {
subgraph cluster_Region_2085738657 {
label = "R(2:1|(2:(1:3)|(3:5|(2:8|(1:11)(0))|17)))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"$this$minWithOrNull\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"comparator\")\l}"];
subgraph cluster_Region_362646932 {
label = "R(2:(1:3)|(3:5|(2:8|(1:11)(0))|17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1390197822 {
label = "IF [B:22:0x000e] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000e|if (kotlin.ULongArray.m378isEmptyimpl(r8) == true) goto L3\l}"];
subgraph cluster_Region_470277870 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0010|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_701332604 {
label = "R(3:5|(2:8|(1:11)(0))|17)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0012|long long r0 = kotlin.ULongArray.m375getsVKNKU(r8, 0)\lkotlin.collections.IntIterator ?? r2 = new kotlin.ranges.IntRange(1, kotlin.collections.ArraysKt.getLastIndex(r8)).iterator()\l}"];
subgraph cluster_LoopRegion_291607899 {
label = "LOOP:0: (2:8|(1:11)(0))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x002b|if (r2.hasNext() != false) goto L8\l}"];
subgraph cluster_Region_1393374615 {
label = "R(2:8|(1:11)(0))";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x002d|int int r3 = r2.nextInt()\llong long r4 = kotlin.ULongArray.m375getsVKNKU(r8, r3)\l}"];
subgraph cluster_IfRegion_1912039813 {
label = "IF [B:29:0x0041] THEN: R(1:11) ELSE: R(0)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0041|if (r9.compare(kotlin.ULong.m310boximpl(r0), kotlin.ULong.m310boximpl(r4)) \> 0) goto L10\l}"];
subgraph cluster_Region_161679665 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0043|r0 = r4\l}"];
}
subgraph cluster_Region_1860274463 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_32 [shape=record,label="{32\:\ 0x0049|RETURN\l|return kotlin.ULong.m310boximpl(r0)\l}"];
}
}
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0027|LOOP_START\lLOOP:0: B:26:0x0027\-\>B:35:0x0027\lPHI: r0 \l  PHI: (r0v5 'min' long) = (r0v4 'min' long), (r0v6 'min' long) binds: [B:25:0x0012, B:35:0x0027] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0043|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0027|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0027|LOOP_END\lSYNTHETIC\lLOOP:0: B:26:0x0027\-\>B:35:0x0027\lPHI: r0 \l  PHI: (r0v6 'min' long) = (r0v5 'min' long), (r0v7 'min' long) binds: [B:36:0x0027, B:37:0x0027] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0027|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0045|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0045}"];
MethodNode[shape=record,label="{public static final kotlin.ULong kotlin.collections.unsigned.UArraysKt___UArraysKt.minWithOrNull\-zrEWJaI((r8v0 'minWithOrNull' long[] A[D('$this$minWithOrNull_u2dzrEWJaI' long[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'comparator' java.util.Comparator\<? super kotlin.ULong\> A[D('comparator' java.util.Comparator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x0041 \-\> B:26:0x0027, BACK_EDGE: B:30:0x0043 \-\> B:26:0x0027, CROSS_EDGE: B:32:0x0049 \-\> B:20:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ([JLjava\/util\/Comparator\<\-Lkotlin\/ULong;\>;)Lkotlin\/ULong;\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r2v1, types: [kotlin.collections.IntIterator]\}\l}"];
MethodNode -> Node_19;Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_25[style=dashed];
Node_23 -> Node_20;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_27 -> Node_34[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_33;
Node_29 -> Node_36[style=dashed];
Node_30 -> Node_37;
Node_32 -> Node_20;
Node_19 -> Node_21;
Node_26 -> Node_27;
Node_33 -> Node_30;
Node_37 -> Node_35;
Node_35 -> Node_26;
Node_36 -> Node_35;
Node_34 -> Node_31;
Node_31 -> Node_32;
}

