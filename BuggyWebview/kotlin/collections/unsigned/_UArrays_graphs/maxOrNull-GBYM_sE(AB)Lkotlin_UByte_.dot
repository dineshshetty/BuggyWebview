digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.maxOrNull\-GBYM_sE([B)Lkotlin\/UByte;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"$this$maxOrNull\")\l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|if (kotlin.UByteArray.m222isEmptyimpl(r6) == false) goto L5\l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|RETURN\l|return null\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x000d|byte r0 = kotlin.UByteArray.m219getw2LRezQ(r6, 0)\lkotlin.collections.IntIterator r1 = new kotlin.ranges.IntRange(1, kotlin.collections.ArraysKt.getLastIndex(r6)).iterator()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0022|LOOP_START\lLOOP:0: B:26:0x0022\-\>B:35:0x0022\lPHI: r0 \l  PHI: (r0v4 'max' byte) = (r0v3 'max' byte), (r0v5 'max' byte) binds: [B:25:0x000d, B:35:0x0022] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0026|if (r1.hasNext() == false) goto L15\l}"];
Node_28 [shape=record,label="{28\:\ 0x0028|int r2 = r1.nextInt()\lbyte r3 = kotlin.UByteArray.m219getw2LRezQ(r6, r2)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0038|if (kotlin.jvm.internal.Intrinsics.compare(r0 & kotlin.UByte.MAX_VALUE, r3 & kotlin.UByte.MAX_VALUE) \>= 0) goto L14\l}"];
Node_34 [shape=record,label="{34\:\ 0x003a|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x003a|r0 = r3\l}"];
Node_37 [shape=record,label="{37\:\ 0x0022|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0022|LOOP_END\lSYNTHETIC\lLOOP:0: B:26:0x0022\-\>B:35:0x0022\lPHI: r0 \l  PHI: (r0v5 'max' byte) = (r0v4 'max' byte), (r0v6 'max' byte) binds: [B:36:0x0022, B:37:0x0022] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0022|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x003c|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x003c}"];
Node_32 [shape=record,label="{32\:\ 0x0040|RETURN\l|return kotlin.UByte.m156boximpl(r0)\l}"];
MethodNode[shape=record,label="{public static final kotlin.UByte kotlin.collections.unsigned.UArraysKt___UArraysKt.maxOrNull\-GBYM_sE((r6v0 'maxOrNull' byte[] A[D('$this$maxOrNull_u2dGBYM_sE' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x0038 \-\> B:26:0x0022, BACK_EDGE: B:30:0x003a \-\> B:26:0x0022, CROSS_EDGE: B:32:0x0040 \-\> B:20:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r1v1, types: [kotlin.collections.IntIterator]\}\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_20;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_33;
Node_28 -> Node_29;
Node_29 -> Node_34[style=dashed];
Node_29 -> Node_36;
Node_34 -> Node_30;
Node_30 -> Node_37;
Node_37 -> Node_35;
Node_35 -> Node_26;
Node_36 -> Node_35;
Node_33 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_20;
}

