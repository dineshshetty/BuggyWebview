digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.groupBy\-3bBvP4M([SLkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$this$groupBy\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$groupBy_u2d3bBvP4M' short[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"keySelector\" \l0x0007: INVOKE  (r7 I:java.lang.Object A[D('keySelector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"valueTransform\" \l0x000c: INVOKE  (r8 I:java.lang.Object A[D('valueTransform' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: NEW_INSTANCE  (r0 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap  (LINE:4918)\l0x0011: INVOKE  (r0 I:java.util.LinkedHashMap) type: DIRECT call: java.util.LinkedHashMap.\<init\>():void A[MD:():void (c)]\l0x0014: CHECK_CAST (r0 I:java.util.Map) = (java.util.Map) (r0 I:??[OBJECT, ARRAY]) \l0x0016: INVOKE  (r1 I:int) = (r6 I:short[] A[D('$this$groupBy_u2d3bBvP4M' short[])]) type: STATIC call: kotlin.UShortArray.getSize\-impl(short[]):int A[MD:(short[]):int (m)]\l0x001a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x001b|LOOP_START\lLOOP:0: B:15:0x001b\-\>B:19:0x0039\l|0x001b: IF  (r2 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:21:0x0049 \l}"];
Node_16 [shape=record,label="{16\:\ 0x001d|0x001d: INVOKE  (r3 I:short) = (r6 I:short[] A[D('$this$groupBy_u2d3bBvP4M' short[])]), (r2 I:int) type: STATIC call: kotlin.UShortArray.get\-Mh2AYeg(short[], int):short A[MD:(short[], int):short (m)]\l0x0021: INVOKE  (r4 I:kotlin.UShort) = (r3 I:short) type: STATIC call: kotlin.UShort.box\-impl(short):kotlin.UShort A[MD:(short):kotlin.UShort (m)]\l0x0025: INVOKE  (r4 I:java.lang.Object) = (r7 I:kotlin.jvm.functions.Function1 A[D('keySelector' kotlin.jvm.functions.Function1)]), (r4 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0029: INVOKE  (r5 I:java.lang.Object) = (r0 I:java.util.Map), (r4 I:java.lang.Object) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x002d|0x002d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0039 \l}"];
Node_18 [shape=record,label="{18\:\ 0x002f|0x002f: NEW_INSTANCE  (r5 I:java.util.ArrayList) =  java.util.ArrayList \l0x0031: INVOKE  (r5 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0034: CHECK_CAST (r5 I:java.util.List) = (java.util.List) (r5 I:??[OBJECT, ARRAY]) \l0x0036: INVOKE  (r0 I:java.util.Map), (r4 I:java.lang.Object), (r5 I:java.lang.Object) type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0039|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0039|LOOP_END\lLOOP:0: B:15:0x001b\-\>B:19:0x0039\l|0x0039: CHECK_CAST (r5 I:java.util.List) = (java.util.List) (r5 I:??[OBJECT, ARRAY]) \l0x003b: INVOKE  (r3 I:kotlin.UShort) = (r3 I:short) type: STATIC call: kotlin.UShort.box\-impl(short):kotlin.UShort A[MD:(short):kotlin.UShort (m)]\l0x003f: INVOKE  (r3 I:java.lang.Object) = (r8 I:kotlin.jvm.functions.Function1 A[D('valueTransform' kotlin.jvm.functions.Function1)]), (r3 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0043: INVOKE  (r5 I:java.util.List), (r3 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0046: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0039|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0049|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0049|RETURN\l|0x0049: RETURN  (r0 I:java.util.Map\<K, java.util.List\<V\>\>) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.util.Map\<K, java.util.List\<V\>\> kotlin.collections.unsigned.UArraysKt___UArraysKt.groupBy\-3bBvP4M((r6 I:short[] A[D('$this$groupBy_u2d3bBvP4M' short[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function1\<? super kotlin.UShort, ? extends K\> A[D('keySelector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function1\<? super kotlin.UShort, ? extends V\> A[D('valueTransform' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0039 \-\> B:15:0x001b, CROSS_EDGE: B:17:0x002d \-\> B:19:0x0039\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0049: r6 '$this$groupBy_u2d3bBvP4M' [S\l  \-1 \-0x0049: r7 'keySelector' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x0049: r8 'valueTransform' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>([SLkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/UShort;+TK;\>;Lkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/UShort;+TV;\>;)Ljava\/util\/Map\<TK;Ljava\/util\/List\<TV;\>;\>;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_22;
Node_22 -> Node_19;
Node_19 -> Node_15;
Node_23 -> Node_19;
Node_21 -> Node_20;
Node_20 -> Node_13;
}

