digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.zip\-ZjwqOic([I[Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"$this$zip\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, \"other\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"transform\")\lint r0 = java.lang.Math.min(kotlin.UIntArray.m298getSizeimpl(r5), r6.length)\ljava.util.ArrayList r1 = new java.util.ArrayList(r0)\lr2 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|LOOP_START\lLOOP:0: B:11:0x001e\-\>B:12:0x0020\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v4 'i' int) binds: [B:10:0x0000, B:12:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r0) goto L4\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|LOOP_END\lLOOP:0: B:11:0x001e\-\>B:12:0x0020\l|r1.add(r7.invoke(kotlin.UInt.m232boximpl(kotlin.UIntArray.m297getpVg5ArA(r5, r2)), r6[r2]))\lint r2 = r2 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034}"];
Node_14 [shape=record,label="{14\:\ 0x0037|RETURN\l|return r1\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.util.List\<V\> kotlin.collections.unsigned.UArraysKt___UArraysKt.zip\-ZjwqOic((r5v0 'zip' int[] A[D('$this$zip_u2dZjwqOic' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'other' R[] A[D('other' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'transform' kotlin.jvm.functions.Function2\<? super kotlin.UInt, ? super R, ? extends V\> A[D('transform' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x0020 \-\> B:11:0x001e\lINLINE_NOT_NEEDED\lTYPE_VARS: [R, V]\lSIGNATURE: \<R:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>([I[TR;Lkotlin\/jvm\/functions\/Function2\<\-Lkotlin\/UInt;\-TR;+TV;\>;)Ljava\/util\/List\<TV;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_11;
Node_15 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

