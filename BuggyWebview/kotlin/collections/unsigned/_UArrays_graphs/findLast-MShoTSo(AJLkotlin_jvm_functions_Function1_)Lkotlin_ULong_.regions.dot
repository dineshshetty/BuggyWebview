digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.findLast\-MShoTSo([JLkotlin\/jvm\/functions\/Function1;)Lkotlin\/ULong;" {
subgraph cluster_Region_251972947 {
label = "R(3:1|(1:(2:3|(2:(1:10)|(1:(2:(1:7)|(1:6))))))(0)|12)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"$this$findLast\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"predicate\")\lint int r0 = kotlin.ULongArray.m376getSizeimpl(r4) \- 1\l}"];
subgraph cluster_IfRegion_861018286 {
label = "IF [B:18:0x0010] THEN: R(1:(2:3|(2:(1:10)|(1:(2:(1:7)|(1:6)))))) ELSE: R(0)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0010|if (r0 \>= 0) goto L3\l}"];
subgraph cluster_Region_1689168659 {
label = "R(1:(2:3|(2:(1:10)|(1:(2:(1:7)|(1:6))))))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1735011249 {
label = "LOOP:0: (2:3|(2:(1:10)|(1:(2:(1:7)|(1:6)))))";
node [shape=record,color=blue];
subgraph cluster_Region_837840829 {
label = "R(2:3|(2:(1:10)|(1:(2:(1:7)|(1:6)))))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0012|LOOP_START\lLOOP:0: B:19:0x0012\-\>B:24:0x0030\lPHI: r0 \l  PHI: (r0v5 int) = (r0v3 int), (r0v11 int) binds: [B:18:0x0010, B:24:0x0030] A[DONT_GENERATE, DONT_INLINE]\l|int int r1 = r0 \- 1\llong long r2 = kotlin.ULongArray.m375getsVKNKU(r4, r0)\l}"];
subgraph cluster_Region_2024153065 {
label = "R(2:(1:10)|(1:(2:(1:7)|(1:6))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1755590294 {
label = "IF [B:20:0x0026] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0026|if (r5.invoke(kotlin.ULong.m310boximpl(r2)).booleanValue() == true) goto L8\l}"];
subgraph cluster_Region_1267780676 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.ULong.m310boximpl(r2)\l}"];
}
}
subgraph cluster_Region_1355960095 {
label = "R(1:(2:(1:7)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1102417957 {
label = "R(2:(1:7)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_414667397 {
label = "IF [B:22:0x002d] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x002d|if (r1 \< 0) goto L7\l}"];
subgraph cluster_Region_2008288257 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0032|SYNTHETIC\lEDGE_INSN: B:28:0x0032\-\>B:25:0x0032 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1246188697 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0030|LOOP_END\lLOOP:0: B:19:0x0012\-\>B:24:0x0030\l|r0 = r1\l}"];
}
}
}
}
}
}
}
subgraph cluster_Region_1067781193 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_25 [shape=record,label="{25\:\ 0x0032|RETURN\lORIG_RETURN\lEDGE_INSN: B:28:0x0032\-\>B:25:0x0032 ?: BREAK  \l|return null\l}"];
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0028|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0028}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final kotlin.ULong kotlin.collections.unsigned.UArraysKt___UArraysKt.findLast\-MShoTSo((r4v0 'findLast' long[] A[D('$this$findLast_u2dMShoTSo' long[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'predicate' kotlin.jvm.functions.Function1\<? super kotlin.ULong, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x0030 \-\> B:19:0x0012, CROSS_EDGE: B:25:0x0032 \-\> B:26:0x0033, CROSS_EDGE: B:18:0x0010 \-\> B:25:0x0032\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ([JLkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/ULong;Ljava\/lang\/Boolean;\>;)Lkotlin\/ULong;\l}"];
MethodNode -> Node_15;Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_25[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_22[style=dashed];
Node_20 -> Node_27;
Node_29 -> Node_16;
Node_22 -> Node_24[style=dashed];
Node_22 -> Node_28;
Node_28 -> Node_25;
Node_24 -> Node_19;
Node_25 -> Node_16;
Node_15 -> Node_17;
Node_27 -> Node_21;
Node_21 -> Node_29;
}

