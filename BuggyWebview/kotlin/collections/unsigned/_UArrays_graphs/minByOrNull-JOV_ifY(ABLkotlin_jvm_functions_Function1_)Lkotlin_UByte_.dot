digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.minByOrNull\-JOV_ifY([BLkotlin\/jvm\/functions\/Function1;)Lkotlin\/UByte;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"$this$minByOrNull\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, \"selector\")\l}"];
Node_26 [shape=record,label="{26\:\ 0x000e|if (kotlin.UByteArray.m222isEmptyimpl(r8) == false) goto L5\l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|RETURN\l|return null\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0012|byte r0 = kotlin.UByteArray.m219getw2LRezQ(r8, 0)\lint r1 = kotlin.collections.ArraysKt.getLastIndex(r8)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001e|if (r1 != 0) goto L9\l}"];
Node_31 [shape=record,label="{31\:\ 0x0020}"];
Node_32 [shape=record,label="{32\:\ 0x0024|RETURN\l|return kotlin.UByte.m156boximpl(r0)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0025|java.lang.Comparable r2 = r9.invoke(kotlin.UByte.m156boximpl(r0))\lkotlin.collections.IntIterator r3 = new kotlin.ranges.IntRange(1, r1).iterator()\l}"];
Node_34 [shape=record,label="{34\:\ 0x0039|LOOP_START\lLOOP:0: B:34:0x0039\-\>B:43:0x0039\lPHI: r0 r2 \l  PHI: (r0v5 'minElem' byte) = (r0v4 'minElem' byte), (r0v6 'minElem' byte) binds: [B:33:0x0025, B:43:0x0039] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v4 'minValue' java.lang.Comparable) = (r2v3 'minValue' java.lang.Comparable), (r2v5 'minValue' java.lang.Comparable) binds: [B:33:0x0025, B:43:0x0039] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x003d|if (r3.hasNext() == false) goto L19\l}"];
Node_36 [shape=record,label="{36\:\ 0x003f|int r4 = r3.nextInt()\lbyte r5 = kotlin.UByteArray.m219getw2LRezQ(r8, r4)\ljava.lang.Comparable r6 = r9.invoke(kotlin.UByte.m156boximpl(r5))\l}"];
Node_37 [shape=record,label="{37\:\ 0x0055|if (r2.compareTo(r6) \<= 0) goto L18\l}"];
Node_41 [shape=record,label="{41\:\ 0x0057|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0057|r0 = r5\lr2 = r6\l}"];
Node_45 [shape=record,label="{45\:\ 0x0039|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0039|LOOP_END\lSYNTHETIC\lLOOP:0: B:34:0x0039\-\>B:43:0x0039\lPHI: r0 r2 \l  PHI: (r0v6 'minElem' byte) = (r0v5 'minElem' byte), (r0v7 'minElem' byte) binds: [B:44:0x0039, B:45:0x0039] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v5 'minValue' java.lang.Comparable) = (r2v4 'minValue' java.lang.Comparable), (r2v6 'minValue' java.lang.Comparable) binds: [B:44:0x0039, B:45:0x0039] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0039|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x005a|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x005a}"];
Node_40 [shape=record,label="{40\:\ 0x005e|RETURN\l|return kotlin.UByte.m156boximpl(r0)\l}"];
MethodNode[shape=record,label="{private static final kotlin.UByte kotlin.collections.unsigned.UArraysKt___UArraysKt.minByOrNull\-JOV_ifY((r8v0 'minByOrNull' byte[] A[D('$this$minByOrNull_u2dJOV_ifY' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'selector' kotlin.jvm.functions.Function1\<? super kotlin.UByte, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x0024 \-\> B:24:?, BACK_EDGE: B:37:0x0055 \-\> B:34:0x0039, BACK_EDGE: B:38:0x0057 \-\> B:34:0x0039, CROSS_EDGE: B:40:0x005e \-\> B:24:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>]\lSIGNATURE: \<R::Ljava\/lang\/Comparable\<\-TR;\>;\>([BLkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/UByte;+TR;\>;)Lkotlin\/UByte;\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r3v1, types: [kotlin.collections.IntIterator]\}\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_24;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_24;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_42;
Node_36 -> Node_37;
Node_37 -> Node_41[style=dashed];
Node_37 -> Node_44;
Node_41 -> Node_38;
Node_38 -> Node_45;
Node_45 -> Node_43;
Node_43 -> Node_34;
Node_44 -> Node_43;
Node_42 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_24;
}

