digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.dropWhile\-JOV_ifY([BLkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$this$dropWhile\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$dropWhile_u2dJOV_ifY' byte[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r7 I:java.lang.Object A[D('predicate' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1828)\l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:1829)\l0x000d: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0010: INVOKE  (r2 I:int) = (r6 I:byte[] A[D('$this$dropWhile_u2dJOV_ifY' byte[])]) type: STATIC call: kotlin.UByteArray.getSize\-impl(byte[]):int A[MD:(byte[]):int (m)] (LINE:1830)\l0x0014: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0015|LOOP_START\lLOOP:0: B:20:0x0015\-\>B:27:0x003d\l|0x0015: IF  (r3 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:30:0x0040 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0017|0x0017: INVOKE  (r4 I:byte) = (r6 I:byte[] A[D('$this$dropWhile_u2dJOV_ifY' byte[])]), (r3 I:int) type: STATIC call: kotlin.UByteArray.get\-w2LRezQ(byte[], int):byte A[MD:(byte[], int):byte (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('yielding' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0025  (LINE:1831)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001d|0x001d: INVOKE  (r5 I:kotlin.UByte) = (r4 I:byte A[D('item' byte)]) type: STATIC call: kotlin.UByte.box\-impl(byte):kotlin.UByte A[MD:(byte):kotlin.UByte (m)] (LINE:1832)\l0x0021: INVOKE  (r1 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r5 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x003d|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x003d|LOOP_END\lLOOP:0: B:20:0x0015\-\>B:27:0x003d\l|0x003d: ARITH  (r3 I:int) = (r3 I:int) + (1 int)  (LINE:1830)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0025|0x0025: INVOKE  (r5 I:kotlin.UByte) = (r4 I:byte A[D('item' byte)]) type: STATIC call: kotlin.UByte.box\-impl(byte):kotlin.UByte A[MD:(byte):kotlin.UByte (m)] (LINE:1833)\l0x0029: INVOKE  (r5 I:java.lang.Object) = (r7 I:kotlin.jvm.functions.Function1 A[D('predicate' kotlin.jvm.functions.Function1)]), (r5 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x002d: CHECK_CAST (r5 I:java.lang.Boolean) = (java.lang.Boolean) (r5 I:??[OBJECT, ARRAY]) \l0x002f: INVOKE  (r5 I:boolean) = (r5 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0033|0x0033: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x003d \l}"];
Node_26 [shape=record,label="{26\:\ 0x0035|0x0035: INVOKE  (r5 I:kotlin.UByte) = (r4 I:byte A[D('item' byte)]) type: STATIC call: kotlin.UByte.box\-impl(byte):kotlin.UByte A[MD:(byte):kotlin.UByte (m)] (LINE:1834)\l0x0039: INVOKE  (r1 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r5 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x003c: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('yielding' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1835)\l}"];
Node_31 [shape=record,label="{31\:\ 0x003d|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x003d|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0040|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0040|0x0040: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('list' java.util.ArrayList)])  (LINE:1837)\l0x0041: CHECK_CAST (r2 I:java.util.List) = (java.util.List) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0043|RETURN\l|0x0043: RETURN  (r2 I:java.util.List\<kotlin.UByte\>) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.util.List\<kotlin.UByte\> kotlin.collections.unsigned.UArraysKt___UArraysKt.dropWhile\-JOV_ifY((r6 I:byte[] A[D('$this$dropWhile_u2dJOV_ifY' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function1\<? super kotlin.UByte, java.lang.Boolean\> A[D('predicate' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x003d \-\> B:20:0x0015, CROSS_EDGE: B:26:0x0035 \-\> B:27:0x003d, CROSS_EDGE: B:25:0x0033 \-\> B:27:0x003d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x0040: r4 'item' B\l  0x000b\-0x0043: r0 'yielding' Z\l  0x0010\-0x0043: r1 'list' Ljava\/util\/ArrayList;\l  \-1 \-0x0043: r6 '$this$dropWhile_u2dJOV_ifY' [B\l  \-1 \-0x0043: r7 'predicate' Lkotlin\/jvm\/functions\/Function1;\lSIGNATURE: ([BLkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/UByte;Ljava\/lang\/Boolean;\>;)Ljava\/util\/List\<Lkotlin\/UByte;\>;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_30;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_32;
Node_32 -> Node_27;
Node_27 -> Node_20;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_33;
Node_26 -> Node_31;
Node_31 -> Node_27;
Node_33 -> Node_27;
Node_30 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_18;
}

