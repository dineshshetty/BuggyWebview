digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.contentEquals\-KJPZfPQ([I[I)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3348)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0001|0x0001: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$contentEquals_u2dKJPZfPQ' int[])]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0005 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0003|0x0003: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|0x0006: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('other' int[])]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0009 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('other' int[])]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|0x000a: INVOKE  (r0 I:boolean) = (r1 I:int[]), (r0 I:int[]) type: STATIC call: java.util.Arrays.equals(int[], int[]):boolean A[MD:(int[], int[]):boolean (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|0x0005: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$contentEquals_u2dKJPZfPQ' int[])]) \l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.collections.unsigned.UArraysKt___UArraysKt.contentEquals\-KJPZfPQ((r2 I:int[] A[D('$this$contentEquals_u2dKJPZfPQ' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int[] A[D('other' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0006 \-\> B:20:0x000a, CROSS_EDGE: B:16:0x0005 \-\> B:17:0x0006\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000e: r2 '$this$contentEquals_u2dKJPZfPQ' [I\l  \-1 \-0x000e: r3 'other' [I\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_20[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

