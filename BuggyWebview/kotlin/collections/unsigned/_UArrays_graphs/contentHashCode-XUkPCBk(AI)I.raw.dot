digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.contentHashCode\-XUkPCBk([I)I" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$contentHashCode_u2dXUkPCBk' int[])]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0004  (LINE:3431)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|0x0005: INVOKE  (r0 I:int) = (r0 I:int[]) type: STATIC call: java.util.Arrays.hashCode(int[]):int A[MD:(int[]):int (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0009|RETURN\l|0x0009: RETURN  (r0 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$contentHashCode_u2dXUkPCBk' int[])]) \l}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.unsigned.UArraysKt___UArraysKt.contentHashCode\-XUkPCBk((r1 I:int[] A[D('$this$contentHashCode_u2dXUkPCBk' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0004 \-\> B:12:0x0005\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0009: r1 '$this$contentHashCode_u2dXUkPCBk' [I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
Node_11 -> Node_12;
}

