digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.maxByOrThrow\-U([JLkotlin\/jvm\/functions\/Function1;)J" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"$this$maxBy\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r11, \"selector\")\l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|if (kotlin.ULongArray.m378isEmptyimpl(r10) != false) goto L19\l}"];
Node_25 [shape=record,label="{25\:\ 0x0010|long r0 = kotlin.ULongArray.m375getsVKNKU(r10, 0)\lint r2 = kotlin.collections.ArraysKt.getLastIndex(r10)\l}"];
Node_26 [shape=record,label="{26\:\ 0x001c|if (r2 != 0) goto L7\l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|RETURN\l|return r0\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x001f|java.lang.Comparable r3 = r11.invoke(kotlin.ULong.m310boximpl(r0))\lkotlin.collections.IntIterator r4 = new kotlin.ranges.IntRange(1, r2).iterator()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0033|LOOP_START\lLOOP:0: B:29:0x0033\-\>B:39:0x0033\lPHI: r0 r3 \l  PHI: (r0v6 'maxElem' long) = (r0v5 'maxElem' long), (r0v7 'maxElem' long) binds: [B:28:0x001f, B:39:0x0033] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v4 'maxValue' java.lang.Comparable) = (r3v3 'maxValue' java.lang.Comparable), (r3v5 'maxValue' java.lang.Comparable) binds: [B:28:0x001f, B:39:0x0033] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0037|if (r4.hasNext() == false) goto L17\l}"];
Node_31 [shape=record,label="{31\:\ 0x0039|int r5 = r4.nextInt()\llong r6 = kotlin.ULongArray.m375getsVKNKU(r10, r5)\ljava.lang.Comparable r8 = r11.invoke(kotlin.ULong.m310boximpl(r6))\l}"];
Node_32 [shape=record,label="{32\:\ 0x004f|if (r3.compareTo(r8) \>= 0) goto L16\l}"];
Node_38 [shape=record,label="{38\:\ 0x0051|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0051|r0 = r6\lr3 = r8\l}"];
Node_41 [shape=record,label="{41\:\ 0x0033|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0033|LOOP_END\lSYNTHETIC\lLOOP:0: B:29:0x0033\-\>B:39:0x0033\lPHI: r0 r3 \l  PHI: (r0v7 'maxElem' long) = (r0v6 'maxElem' long), (r0v8 'maxElem' long) binds: [B:40:0x0033, B:41:0x0033] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v5 'maxValue' java.lang.Comparable) = (r3v4 'maxValue' java.lang.Comparable), (r3v6 'maxValue' java.lang.Comparable) binds: [B:40:0x0033, B:41:0x0033] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0033|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0054|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0054|RETURN\l|return r0\l}"];
Node_35 [shape=record,label="{35\:\ 0x0055}"];
Node_36 [shape=record,label="{36\:\ 0x005a|throw new java.util.NoSuchElementException()\l}"];
MethodNode[shape=record,label="{private static final long kotlin.collections.unsigned.UArraysKt___UArraysKt.maxByOrThrow\-U((r10v0 'maxBy' long[] A[D('$this$maxBy_u2dMShoTSo' long[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'selector' kotlin.jvm.functions.Function1\<? super kotlin.ULong, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:32:0x004f \-\> B:29:0x0033, BACK_EDGE: B:33:0x0051 \-\> B:29:0x0033, CROSS_EDGE: B:34:0x0054 \-\> B:22:?, CROSS_EDGE: B:36:0x005a \-\> B:22:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>]\lSIGNATURE: \<R::Ljava\/lang\/Comparable\<\-TR;\>;\>([JLkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/ULong;+TR;\>;)J\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r4v1, types: [kotlin.collections.IntIterator]\}\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_35;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_22;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_37;
Node_31 -> Node_32;
Node_32 -> Node_38[style=dashed];
Node_32 -> Node_40;
Node_38 -> Node_33;
Node_33 -> Node_41;
Node_41 -> Node_39;
Node_39 -> Node_29;
Node_40 -> Node_39;
Node_37 -> Node_34;
Node_34 -> Node_22;
Node_35 -> Node_36;
Node_36 -> Node_22;
}

