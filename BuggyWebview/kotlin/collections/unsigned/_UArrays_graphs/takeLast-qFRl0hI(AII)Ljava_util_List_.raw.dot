digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.takeLast\-qFRl0hI([II)Ljava\/util\/List;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$this$takeLast\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$takeLast_u2dqFRl0hI' int[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:2463)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|0x0006: IF  (r5 I:??[int, byte, short, char] A[D('n' int)]) \< (0 ??[int, byte, short, char])  \-\> B:30:0x000a \l}"];
Node_29 [shape=record,label="{29\:\ 0x0008|0x0008: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x004f \l}"];
Node_32 [shape=record,label="{32\:\ 0x000d|0x000d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('n' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0014  (LINE:2464)\l}"];
Node_33 [shape=record,label="{33\:\ 0x000f|0x000f: INVOKE  (r0 I:java.util.List) =  type: STATIC call: kotlin.collections.CollectionsKt.emptyList():java.util.List A[MD:\<T\>:():java.util.List\<T\> (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:java.util.List\<kotlin.UInt\>) \l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0014|0x0014: INVOKE  (r1 I:int) = (r4 I:int[] A[D('$this$takeLast_u2dqFRl0hI' int[])]) type: STATIC call: kotlin.UIntArray.getSize\-impl(int[]):int A[MD:(int[]):int (m)] (LINE:2465)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0018|0x0018: IF  (r5 I:??[int, byte, short, char] A[D('n' int)]) \< (r1 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:39:0x0023  (LINE:2466)\l}"];
Node_37 [shape=record,label="{37\:\ 0x001a|0x001a: INVOKE  (r0 I:kotlin.UIntArray) = (r4 I:int[] A[D('$this$takeLast_u2dqFRl0hI' int[])]) type: STATIC call: kotlin.UIntArray.box\-impl(int[]):kotlin.UIntArray A[MD:(int[]):kotlin.UIntArray (m)]\l0x001e: INVOKE  (r0 I:java.util.List) = (r0 I:java.lang.Iterable) type: STATIC call: kotlin.collections.CollectionsKt.toList(java.lang.Iterable):java.util.List A[MD:\<T\>:(java.lang.Iterable\<? extends T\>):java.util.List\<T\> (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0022|RETURN\l|0x0022: RETURN  (r0 I:java.util.List\<kotlin.UInt\>) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0023|0x0023: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('n' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0034  (LINE:2467)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0025|0x0025: ARITH  (r0 I:int) = (r1 I:int A[D('size' int)]) + (\-1 int) \l0x0027: INVOKE  (r0 I:int) = (r4 I:int[] A[D('$this$takeLast_u2dqFRl0hI' int[])]), (r0 I:int) type: STATIC call: kotlin.UIntArray.get\-pVg5ArA(int[], int):int A[MD:(int[], int):int (m)]\l0x002b: INVOKE  (r0 I:kotlin.UInt) = (r0 I:int) type: STATIC call: kotlin.UInt.box\-impl(int):kotlin.UInt A[MD:(int):kotlin.UInt (m)]\l0x002f: INVOKE  (r0 I:java.util.List) = (r0 I:java.lang.Object) type: STATIC call: kotlin.collections.CollectionsKt.listOf(java.lang.Object):java.util.List A[MD:\<T\>:(T):java.util.List\<T\> (m)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0033|RETURN\l|0x0033: RETURN  (r0 I:java.util.List\<kotlin.UInt\>) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0034|0x0034: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:2468)\l0x0036: INVOKE  (r0 I:java.util.ArrayList), (r5 I:int A[D('n' int)]) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0039: ARITH  (r2 I:int) = (r1 I:int A[D('size' int)]) \- (r5 I:int A[D('n' int)])  (LINE:2469)\l}"];
Node_43 [shape=record,label="{43\:\ 0x003b|LOOP_START\lLOOP:0: B:43:0x003b\-\>B:44:0x003d\l|0x003b: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \>= (r1 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:49:0x004b \l}"];
Node_44 [shape=record,label="{44\:\ 0x003d|LOOP_END\lLOOP:0: B:43:0x003b\-\>B:44:0x003d\l|0x003d: INVOKE  (r3 I:int) = (r4 I:int[] A[D('$this$takeLast_u2dqFRl0hI' int[])]), (r2 I:int A[D('index' int)]) type: STATIC call: kotlin.UIntArray.get\-pVg5ArA(int[], int):int A[MD:(int[], int):int (m)] (LINE:2470)\l0x0041: INVOKE  (r3 I:kotlin.UInt) = (r3 I:int) type: STATIC call: kotlin.UInt.box\-impl(int):kotlin.UInt A[MD:(int):kotlin.UInt (m)]\l0x0045: INVOKE  (r0 I:java.util.ArrayList A[D('list' java.util.ArrayList)]), (r3 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0048: ARITH  (r2 I:int) = (r2 I:int A[D('index' int)]) + (1 int)  (LINE:2469)\l}"];
Node_49 [shape=record,label="{49\:\ 0x004b|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x004b|0x004b: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('index' int)]) = (r0 I:??[OBJECT, ARRAY] A[D('list' java.util.ArrayList)])  (LINE:2471)\l0x004c: CHECK_CAST (r2 I:java.util.List) = (java.util.List) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x004e|RETURN\l|0x004e: RETURN  (r2 I:java.util.List\<kotlin.UInt\>) \l}"];
Node_47 [shape=record,label="{47\:\ 0x004f|0x004f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('list' java.util.ArrayList)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:10922)\l0x0050: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:2463)\l0x0052: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0055: CONST_STR  (r2 I:java.lang.String) =  \"Requested element count \" \l0x0057: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x005a: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:int A[D('n' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x005d: CONST_STR  (r2 I:java.lang.String) =  \" is less than zero.\" \l0x005f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0062: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-UArraysKt___UArraysKt$takeLast$1' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0066: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0068: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x006c: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x006f|0x006f: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_30 [shape=record,label="{30\:\ 0x000a|0x000a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<kotlin.UInt\> kotlin.collections.unsigned.UArraysKt___UArraysKt.takeLast\-qFRl0hI((r4 I:int[] A[D('$this$takeLast_u2dqFRl0hI' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('n' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0022 \-\> B:26:?, CROSS_EDGE: B:41:0x0033 \-\> B:26:?, BACK_EDGE: B:44:0x003d \-\> B:43:0x003b, CROSS_EDGE: B:46:0x004e \-\> B:26:?, CROSS_EDGE: B:48:0x006f \-\> B:26:?, CROSS_EDGE: B:30:0x000a \-\> B:31:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003b\-0x004b: r2 'index' I\l  0x0039\-0x004f: r0 'list' Ljava\/util\/ArrayList;\l  0x0018\-0x004f: r1 'size' I\l  0x0050\-0x0066: r0 '$i$a$\-require\-UArraysKt___UArraysKt$takeLast$1' I\l  \-1 \-0x006f: r4 '$this$takeLast_u2dqFRl0hI' [I\l  \-1 \-0x006f: r5 'n' I\lSIGNATURE: ([II)Ljava\/util\/List\<Lkotlin\/UInt;\>;\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_47;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_34 -> Node_26;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_39;
Node_37 -> Node_38;
Node_38 -> Node_26;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_41;
Node_41 -> Node_26;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_49;
Node_44 -> Node_43;
Node_49 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_26;
Node_47 -> Node_48;
Node_48 -> Node_26;
Node_30 -> Node_31;
}

