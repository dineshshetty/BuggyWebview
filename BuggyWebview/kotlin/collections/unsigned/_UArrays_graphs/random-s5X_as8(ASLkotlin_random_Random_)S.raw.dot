digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.random\-s5X_as8([SLkotlin\/random\/Random;)S" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$this$random\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$random_u2ds5X_as8' short[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"random\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('random' kotlin.random.Random)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:boolean) = (r2 I:short[] A[D('$this$random_u2ds5X_as8' short[])]) type: STATIC call: kotlin.UShortArray.isEmpty\-impl(short[]):boolean A[MD:(short[]):boolean (m)] (LINE:1260)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x001d \l}"];
Node_12 [shape=record,label="{12\:\ 0x0010|0x0010: INVOKE  (r0 I:int) = (r2 I:short[] A[D('$this$random_u2ds5X_as8' short[])]) type: STATIC call: kotlin.UShortArray.getSize\-impl(short[]):int A[MD:(short[]):int (m)] (LINE:1262)\l0x0014: INVOKE  (r0 I:int) = (r3 I:kotlin.random.Random A[D('random' kotlin.random.Random)]), (r0 I:int) type: VIRTUAL call: kotlin.random.Random.nextInt(int):int A[MD:(int):int (m)]\l0x0018: INVOKE  (r0 I:short) = (r2 I:short[] A[D('$this$random_u2ds5X_as8' short[])]), (r0 I:int) type: STATIC call: kotlin.UShortArray.get\-Mh2AYeg(short[], int):short A[MD:(short[], int):short (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|RETURN\l|0x001c: RETURN  (r0 I:short) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x001d|0x001d: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException  (LINE:1261)\l0x001f: CONST_STR  (r1 I:java.lang.String) =  \"Array is empty.\" \l0x0021: INVOKE  (r0 I:java.util.NoSuchElementException), (r1 I:java.lang.String) type: DIRECT call: java.util.NoSuchElementException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0024|0x0024: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final short kotlin.collections.unsigned.UArraysKt___UArraysKt.random\-s5X_as8((r2 I:short[] A[D('$this$random_u2ds5X_as8' short[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.random.Random A[D('random' kotlin.random.Random), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0024 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0024: r2 '$this$random_u2ds5X_as8' [S\l  \-1 \-0x0024: r3 'random' Lkotlin\/random\/Random;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

