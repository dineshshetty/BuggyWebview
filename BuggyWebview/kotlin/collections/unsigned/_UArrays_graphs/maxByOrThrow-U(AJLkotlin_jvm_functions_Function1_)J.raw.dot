digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.maxByOrThrow\-U([JLkotlin\/jvm\/functions\/Function1;)J" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$this$maxBy\" \l0x0002: INVOKE  (r10 I:java.lang.Object A[D('$this$maxBy_u2dMShoTSo' long[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x0007: INVOKE  (r11 I:java.lang.Object A[D('selector' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:boolean) = (r10 I:long[] A[D('$this$maxBy_u2dMShoTSo' long[])]) type: STATIC call: kotlin.ULongArray.isEmpty\-impl(long[]):boolean A[MD:(long[]):boolean (m)] (LINE:6067)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0055 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0010|0x0010: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:6068)\l0x0011: INVOKE  (r0 I:long) = (r10 I:long[] A[D('$this$maxBy_u2dMShoTSo' long[])]), (r0 I:int) type: STATIC call: kotlin.ULongArray.get\-s\-VKNKU(long[], int):long A[MD:(long[], int):long (m)]\l0x0015: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('$this$maxBy_u2dMShoTSo' long[])])  (LINE:6069)\l0x0016: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: INVOKE  (r2 I:int A[D('$this$lastIndex$iv' long[])]) = (r2 I:long[] A[D('$this$lastIndex$iv' long[])]) type: STATIC call: kotlin.collections.ArraysKt.getLastIndex(long[]):int A[MD:(long[]):int (m)] (LINE:11004)\l}"];
Node_26 [shape=record,label="{26\:\ 0x001c|0x001c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lastIndex' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x001f  (LINE:6070)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|RETURN\l|0x001e: RETURN  (r0 I:long A[D('maxElem' long)]) \l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x001f|0x001f: INVOKE  (r3 I:kotlin.ULong) = (r0 I:long A[D('maxElem' long)]) type: STATIC call: kotlin.ULong.box\-impl(long):kotlin.ULong A[MD:(long):kotlin.ULong (m)] (LINE:6071)\l0x0023: INVOKE  (r3 I:java.lang.Object) = (r11 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r3 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0027: CHECK_CAST (r3 I:java.lang.Comparable) = (java.lang.Comparable) (r3 I:??[OBJECT, ARRAY]) \l0x0029: NEW_INSTANCE  (r4 I:kotlin.ranges.IntRange) =  kotlin.ranges.IntRange  (LINE:6072)\l0x002b: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x002c: INVOKE  (r4 I:kotlin.ranges.IntRange), (r5 I:int), (r2 I:int A[D('lastIndex' int)]) type: DIRECT call: kotlin.ranges.IntRange.\<init\>(int, int):void A[MD:(int, int):void (m)]\l0x002f: INVOKE  (r4 I:kotlin.collections.IntIterator) = (r4 I:kotlin.ranges.IntRange) type: VIRTUAL call: kotlin.ranges.IntRange.iterator():kotlin.collections.IntIterator A[MD:():java.util.Iterator\<java.lang.Integer\> (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0033|LOOP_START\lLOOP:0: B:29:0x0033\-\>B:39:0x0033\l|0x0033: INVOKE  (r5 I:boolean) = (r4 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0037|0x0037: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0054 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0039|0x0039: INVOKE  (r5 I:int) = (r4 I:kotlin.collections.IntIterator) type: VIRTUAL call: kotlin.collections.IntIterator.nextInt():int A[MD:():int (m)]\l0x003d: INVOKE  (r6 I:long) = (r10 I:long[] A[D('$this$maxBy_u2dMShoTSo' long[])]), (r5 I:int A[D('i' int)]) type: STATIC call: kotlin.ULongArray.get\-s\-VKNKU(long[], int):long A[MD:(long[], int):long (m)] (LINE:6073)\l0x0041: INVOKE  (r8 I:kotlin.ULong) = (r6 I:long A[D('e' long)]) type: STATIC call: kotlin.ULong.box\-impl(long):kotlin.ULong A[MD:(long):kotlin.ULong (m)] (LINE:6074)\l0x0045: INVOKE  (r8 I:java.lang.Object) = (r11 I:kotlin.jvm.functions.Function1 A[D('selector' kotlin.jvm.functions.Function1)]), (r8 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0049: CHECK_CAST (r8 I:java.lang.Comparable) = (java.lang.Comparable) (r8 I:??[OBJECT, ARRAY]) \l0x004b: INVOKE  (r9 I:int) = \l  (r3 I:java.lang.Comparable A[D('maxValue' java.lang.Comparable)])\l  (r8 I:java.lang.Object A[D('v' java.lang.Comparable)])\l type: INTERFACE call: java.lang.Comparable.compareTo(java.lang.Object):int A[MD:(T):int (c)] (LINE:6075)\l}"];
Node_32 [shape=record,label="{32\:\ 0x004f|0x004f: IF  (r9 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:40:0x0033 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0051|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0051|0x0051: MOVE  (r0 I:??[long, double] A[D('maxElem' long)]) = (r6 I:??[long, double] A[D('e' long)])  (LINE:6076)\l0x0052: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('maxValue' java.lang.Comparable)]) = (r8 I:??[OBJECT, ARRAY] A[D('v' java.lang.Comparable)])  (LINE:6077)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0033|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0033|LOOP_END\lSYNTHETIC\lLOOP:0: B:29:0x0033\-\>B:39:0x0033\l}"];
Node_40 [shape=record,label="{40\:\ 0x0033|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0054|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0054|RETURN\l|0x0054: RETURN  (r0 I:long A[D('maxElem' long)])  (LINE:6080)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0055|0x0055: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException A[D('maxElem' long)]) =  java.util.NoSuchElementException  (LINE:6067)\l0x0057: INVOKE  (r0 I:java.util.NoSuchElementException) type: DIRECT call: java.util.NoSuchElementException.\<init\>():void A[MD:():void (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x005a|0x005a: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static final long kotlin.collections.unsigned.UArraysKt___UArraysKt.maxByOrThrow\-U((r10 I:long[] A[D('$this$maxBy_u2dMShoTSo' long[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlin.jvm.functions.Function1\<? super kotlin.ULong, ? extends R extends java.lang.Comparable\<? super R\>\> A[D('selector' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:32:0x004f \-\> B:29:0x0033, BACK_EDGE: B:33:0x0051 \-\> B:29:0x0033, CROSS_EDGE: B:34:0x0054 \-\> B:22:?, CROSS_EDGE: B:36:0x005a \-\> B:22:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [R extends java.lang.Comparable\<? super R\>]\lSIGNATURE: \<R::Ljava\/lang\/Comparable\<\-TR;\>;\>([JLkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/ULong;+TR;\>;)J\lDebug Info:\l  0x0016\-0x001b: r2 '$this$lastIndex$iv' [J\l  0x0017\-0x001b: r3 '$i$f$getLastIndex\-QwZRm1k' I\l  0x003d\-0x0053: r5 'i' I\l  0x0041\-0x0053: r6 'e' J\l  0x004b\-0x0053: r8 'v' Ljava\/lang\/Comparable;\l  0x0015\-0x0055: r0 'maxElem' J\l  0x001c\-0x0055: r2 'lastIndex' I\l  0x0029\-0x0055: r3 'maxValue' Ljava\/lang\/Comparable;\l  \-1 \-0x005a: r10 '$this$maxBy_u2dMShoTSo' [J\l  \-1 \-0x005a: r11 'selector' Lkotlin\/jvm\/functions\/Function1;\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_35;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_22;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_37;
Node_31 -> Node_32;
Node_32 -> Node_38[style=dashed];
Node_32 -> Node_40;
Node_38 -> Node_33;
Node_33 -> Node_41;
Node_41 -> Node_39;
Node_39 -> Node_29;
Node_40 -> Node_39;
Node_37 -> Node_34;
Node_34 -> Node_22;
Node_35 -> Node_36;
Node_36 -> Node_22;
}

