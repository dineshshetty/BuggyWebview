digraph "CFG forkotlin.collections.unsigned.UArraysKt___UArraysKt.copyInto\-FUQE5sA$default([B[BIIIILjava\/lang\/Object;)[B" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0002|if ((r5 & 2) == 0) goto L4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|r2 = 0\l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|PHI: r2 \l  PHI: (r2v1 'destinationOffset' int) = (r2v0 'destinationOffset' int), (r2v2 'destinationOffset' int) binds: [B:16:0x0002, B:17:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|if ((r5 & 4) == 0) goto L7\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|r3 = 0\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|PHI: r3 \l  PHI: (r3v1 'startIndex' int) = (r3v0 'startIndex' int), (r3v2 'startIndex' int) binds: [B:19:0x0007, B:20:0x0009] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|if ((r5 & 8) == 0) goto L10\l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|int r4 = kotlin.UByteArray.m220getSizeimpl(r0)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|PHI: r4 \l  PHI: (r4v1 'endIndex' int) = (r4v0 'endIndex' int), (r4v2 'endIndex' int) binds: [B:22:0x000c, B:23:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r0, \"$this$copyInto\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"destination\")\lkotlin.collections.ArraysKt.copyInto(r0, r1, r2, r3, r4)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001f|RETURN\l|return r1\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ byte[] kotlin.collections.unsigned.UArraysKt___UArraysKt.copyInto\-FUQE5sA$default((r0v0 'copyInto' byte[] A[D('$this$copyInto_u2dFUQE5sA_u24default' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 'destination' byte[] A[D('destination' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'destinationOffset' int A[D('destinationOffset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'startIndex' int A[D('startIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'endIndex' int A[D('endIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:22:0x000c \-\> B:24:0x0012, CROSS_EDGE: B:19:0x0007 \-\> B:21:0x000a, CROSS_EDGE: B:16:0x0002 \-\> B:18:0x0005\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

