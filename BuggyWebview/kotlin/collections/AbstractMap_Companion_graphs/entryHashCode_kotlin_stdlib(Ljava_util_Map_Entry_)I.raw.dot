digraph "CFG forkotlin.collections.AbstractMap.Companion.entryHashCode$kotlin_stdlib(Ljava\/util\/Map$Entry;)I" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"e\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('e' java.util.Map$Entry)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('e' java.util.Map$Entry)])  (LINE:145)\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:154)\l0x0007: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Map$Entry A[D('$this$entryHashCode_u24lambda_u2d0' java.util.Map$Entry)]) type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)] (LINE:145)\l0x000b: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|0x000c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0013 \l}"];
Node_15 [shape=record,label="{15\:\ 0x000e|0x000e: INVOKE  (r2 I:int) = (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.hashCode():int A[MD:():int (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0014|0x0014: INVOKE  (r4 I:java.lang.Object) = (r0 I:java.util.Map$Entry A[D('$this$entryHashCode_u24lambda_u2d0' java.util.Map$Entry)]) type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0018|0x0018: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x001e \l}"];
Node_19 [shape=record,label="{19\:\ 0x001a|0x001a: INVOKE  (r3 I:int) = (r4 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.hashCode():int A[MD:():int (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x001e|0x001e: ARITH  (r0 I:??[int, boolean] A[D('$this$entryHashCode_u24lambda_u2d0' java.util.Map$Entry)]) = (r2 I:??[int, boolean, short, byte, char]) ^ (r3 I:??[int, boolean, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0020|RETURN\l|0x0020: RETURN  (r0 I:int A[D('$this$entryHashCode_u24lambda_u2d0' java.util.Map$Entry)]) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|0x0013: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public final int kotlin.collections.AbstractMap.Companion.entryHashCode$kotlin_stdlib((r5 'this' I:kotlin.collections.AbstractMap$Companion A[IMMUTABLE_TYPE, THIS]), (r6 I:java.util.Map$Entry\<?, ?\> A[D('e' java.util.Map$Entry), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0018 \-\> B:20:0x001e, CROSS_EDGE: B:16:0x0013 \-\> B:17:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0020: r0 '$this$entryHashCode_u24lambda_u2d0' Ljava\/util\/Map$Entry;\l  0x0007\-0x0020: r1 '$i$a$\-with\-AbstractMap$Companion$entryHashCode$1' I\l  \-1 \-0x0020: r6 'e' Ljava\/util\/Map$Entry;\lSIGNATURE: (Ljava\/util\/Map$Entry\<**\>;)I\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

