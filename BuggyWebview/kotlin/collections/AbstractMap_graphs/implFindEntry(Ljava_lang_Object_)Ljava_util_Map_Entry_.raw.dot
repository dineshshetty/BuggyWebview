digraph "CFG forkotlin.collections.AbstractMap.implFindEntry(Ljava\/lang\/Object;)Ljava\/util\/Map$Entry;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INVOKE  (r0 I:java.util.Set) = (r7 I:kotlin.collections.AbstractMap) type: VIRTUAL call: kotlin.collections.AbstractMap.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (m)] (LINE:141)\l0x0004: CHECK_CAST (r0 I:java.lang.Iterable) = (java.lang.Iterable) (r0 I:??[OBJECT, ARRAY]) \l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: INVOKE  (r2 I:java.util.Iterator) = (r0 I:java.lang.Iterable A[D('$this$firstOrNull$iv' java.lang.Iterable)]) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (c)] (LINE:160)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|LOOP_START\lLOOP:0: B:16:0x000b\-\>B:19:0x0021\l|0x000b: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|0x000f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0024 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|0x0011: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0015: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) \l0x0016: CHECK_CAST (r4 I:java.util.Map$Entry) = (java.util.Map$Entry) (r4 I:??[OBJECT, ARRAY]) \l0x0018: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: INVOKE  (r6 I:java.lang.Object) = (r4 I:java.util.Map$Entry A[D('it' java.util.Map$Entry)]) type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)] (LINE:141)\l0x001d: INVOKE  (r4 I:boolean A[D('it' java.util.Map$Entry)]) = (r6 I:java.lang.Object), (r8 I:java.lang.Object A[D('key' java.lang.Object)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0021|LOOP_END\lLOOP:0: B:16:0x000b\-\>B:19:0x0021\l|0x0021: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('it' java.util.Map$Entry)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x000b \l}"];
Node_24 [shape=record,label="{24\:\ 0x0025|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0025|0x0025: CHECK_CAST (r3 I:java.util.Map$Entry) = (java.util.Map$Entry) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0027|RETURN\l|0x0027: RETURN  (r3 I:java.util.Map$Entry\<K, V\>)  (LINE:141)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0024|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0024|0x0024: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:161)\l}"];
MethodNode[shape=record,label="{private final java.util.Map$Entry\<K, V\> kotlin.collections.AbstractMap.implFindEntry((r7 'this' I:kotlin.collections.AbstractMap\<K, V\> A[IMMUTABLE_TYPE, THIS]), (r8 I:K A[D('key' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0021 \-\> B:16:0x000b, CROSS_EDGE: B:21:0x0024 \-\> B:22:0x0025\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0018\-0x0021: r4 'it' Ljava\/util\/Map$Entry;\l  0x0019\-0x0021: r5 '$i$a$\-firstOrNull\-AbstractMap$implFindEntry$1' I\l  0x0015\-0x0024: r3 'element$iv' Ljava\/lang\/Object;\l  0x0006\-0x0025: r0 '$this$firstOrNull$iv' Ljava\/lang\/Iterable;\l  0x0007\-0x0025: r1 '$i$f$firstOrNull' I\l  \-1 \-0x0027: r8 'key' Ljava\/lang\/Object;\lTYPE_VARS: [V, K]\lSIGNATURE: (TK;)Ljava\/util\/Map$Entry\<TK;TV;\>;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_16;
Node_19 -> Node_24[style=dashed];
Node_24 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_25 -> Node_21;
Node_21 -> Node_22;
}

