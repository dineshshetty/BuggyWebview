digraph "CFG forkotlin.collections.AbstractMap.equals(Ljava\/lang\/Object;)Z" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000}"];
Node_31 [shape=record,label="{31\:\ 0x0001|if (r9 != r8) goto L5\l}"];
Node_32 [shape=record,label="{32\:\ 0x0003|RETURN\l|return true\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0004}"];
Node_34 [shape=record,label="{34\:\ 0x0007|if ((r9 instanceof java.util.Map) != false) goto L8\l}"];
Node_35 [shape=record,label="{35\:\ 0x0009|RETURN\l|return false\l}"];
Node_36 [shape=record,label="{36\:\ 0x000a}"];
Node_37 [shape=record,label="{37\:\ 0x0015|if (size() == ((java.util.Map) r9).size()) goto L11\l}"];
Node_38 [shape=record,label="{38\:\ 0x0017|RETURN\l|return false\l}"];
Node_39 [shape=record,label="{39\:\ 0x0018|java.lang.Iterable r1 = ((java.util.Map) r9).entrySet()\l}"];
Node_40 [shape=record,label="{40\:\ 0x0024|if ((r1 instanceof java.util.Collection) == false) goto L16\l}"];
Node_41 [shape=record,label="{41\:\ 0x0026}"];
Node_42 [shape=record,label="{42\:\ 0x002d|if (((java.util.Collection) r1).isEmpty() == false) goto L16\l}"];
Node_54 [shape=record,label="{54\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_44 [shape=record,label="{44\:\ 0x0030|java.util.Iterator r4 = r1.iterator()\l}"];
Node_45 [shape=record,label="{45\:\ 0x0034|LOOP_START\lLOOP:0: B:45:0x0034\-\>B:48:0x0046\l}"];
Node_46 [shape=record,label="{46\:\ 0x0038|if (r4.hasNext() == false) goto L23\l}"];
Node_47 [shape=record,label="{47\:\ 0x003a|java.lang.Object r5 = r4.next()\ljava.util.Map$Entry r6 = (java.util.Map.Entry) r5\l}"];
Node_48 [shape=record,label="{48\:\ 0x0046|LOOP_END\lLOOP:0: B:45:0x0034\-\>B:48:0x0046\l|if (containsEntry$kotlin_stdlib(r6) != false) goto L17\l}"];
Node_52 [shape=record,label="{52\:\ 0x0048|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0048|RETURN\lORIG_RETURN\l|return false\l}"];
Node_53 [shape=record,label="{53\:\ 0x004b|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean kotlin.collections.AbstractMap.equals((r8v0 'this' kotlin.collections.AbstractMap\<K, V\> A[IMMUTABLE_TYPE, THIS]), (r9v0 'other' java.lang.Object A[D('other' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:35:0x0009 \-\> B:29:?, CROSS_EDGE: B:38:0x0017 \-\> B:29:?, BACK_EDGE: B:48:0x0046 \-\> B:45:0x0034, CROSS_EDGE: B:51:0x004b \-\> B:29:?, CROSS_EDGE: B:46:0x0038 \-\> B:51:0x004b, CROSS_EDGE: B:42:0x002d \-\> B:51:0x004b, CROSS_EDGE: B:40:0x0024 \-\> B:44:0x0030\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lMETHOD_OVERRIDE: [ClspMth\{java.util.Map.equals(java.lang.Object):boolean\}]\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_29;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_29;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_29;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_44;
Node_41 -> Node_42;
Node_42 -> Node_44;
Node_42 -> Node_54[style=dashed];
Node_54 -> Node_29;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_53;
Node_47 -> Node_48;
Node_48 -> Node_45;
Node_48 -> Node_52[style=dashed];
Node_52 -> Node_49;
Node_49 -> Node_29;
Node_53 -> Node_55;
Node_55 -> Node_29;
}

