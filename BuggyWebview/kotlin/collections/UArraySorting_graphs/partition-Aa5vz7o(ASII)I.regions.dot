digraph "CFG forkotlin.collections.UArraySortingKt.partition\-Aa5vz7o([SII)I" {
subgraph cluster_Region_2001540678 {
label = "R(3:1|(3:(1:5)|(1:9)|(1:13)(0))|18)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0000|int r0 = r7\lint r1 = r8\lshort short r2 = kotlin.UShortArray.m479getMh2AYeg(r6, (r7 + r8) \/ 2)\l}"];
subgraph cluster_LoopRegion_1621151841 {
label = "LOOP:0: (3:(1:5)|(1:9)|(1:13)(0))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000a|LOOP_START\lLOOP:0: B:23:0x000a\-\>B:35:0x000a\lPHI: r0 r1 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v3 'i' int) binds: [B:22:0x0000, B:35:0x000a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'j' int) = (r1v0 'j' int), (r1v3 'j' int) binds: [B:22:0x0000, B:35:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \<= r1) goto L3\l}"];
subgraph cluster_Region_1788773043 {
label = "R(3:(1:5)|(1:9)|(1:13)(0))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_2134902037 {
label = "LOOP:1: (1:5)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x001a|if (kotlin.jvm.internal.Intrinsics.compare(kotlin.UShortArray.m479getMh2AYeg(r6, r0) & kotlin.UShort.MAX_VALUE, r2 & kotlin.UShort.MAX_VALUE) \< 0) goto L5\l}"];
subgraph cluster_Region_1531532939 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x001c|LOOP_END\lLOOP:1: B:24:0x000c\-\>B:26:0x001c\l|r0++\l}"];
}
}
subgraph cluster_LoopRegion_1229315974 {
label = "LOOP:2: (1:9)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x002a|if (kotlin.jvm.internal.Intrinsics.compare(kotlin.UShortArray.m479getMh2AYeg(r6, r1) & kotlin.UShort.MAX_VALUE, r2 & kotlin.UShort.MAX_VALUE) \> 0) goto L9\l}"];
subgraph cluster_Region_788541919 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x002c|LOOP_END\lLOOP:2: B:27:0x001f\-\>B:29:0x002c\l|r1\-\-\l}"];
}
}
subgraph cluster_IfRegion_1047315863 {
label = "IF [B:30:0x002f] THEN: R(1:13) ELSE: R(0)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x002f|if (r0 \<= r1) goto L12\l}"];
subgraph cluster_Region_511435464 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0031|short short r3 = kotlin.UShortArray.m479getMh2AYeg(r6, r0)\lkotlin.UShortArray.m484set01HTLdE(r6, r0, kotlin.UShortArray.m479getMh2AYeg(r6, r1))\lkotlin.UShortArray.m484set01HTLdE(r6, r1, r3)\lr0++\lr1\-\-\l}"];
}
subgraph cluster_Region_349275002 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_32 [shape=record,label="{32\:\ 0x0045|RETURN\l|return r0\l}"];
}
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x000c|LOOP_START\lLOOP:1: B:24:0x000c\-\>B:26:0x001c\lPHI: r0 \l  PHI: (r0v2 'i' int) = (r0v1 'i' int), (r0v5 'i' int) binds: [B:23:0x000a, B:26:0x001c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x001f|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x001f|LOOP_START\lLOOP:2: B:27:0x001f\-\>B:29:0x002c\lPHI: r1 \l  PHI: (r1v2 'j' int) = (r1v1 'j' int), (r1v5 'j' int) binds: [B:38:0x001f, B:29:0x002c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x002f|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0031|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x000a|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x000a|LOOP_END\lSYNTHETIC\lLOOP:0: B:23:0x000a\-\>B:35:0x000a\lPHI: r0 r1 \l  PHI: (r0v3 'i' int) = (r0v2 'i' int), (r0v4 'i' int) binds: [B:36:0x000a, B:37:0x000a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v3 'j' int) = (r1v2 'j' int), (r1v4 'j' int) binds: [B:36:0x000a, B:37:0x000a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x000a|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0045|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final int kotlin.collections.UArraySortingKt.partition\-Aa5vz7o((r6v0 'array' short[] A[D('array' short[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'left' int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'right' int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x001c \-\> B:24:0x000c, BACK_EDGE: B:29:0x002c \-\> B:27:0x001f, BACK_EDGE: B:30:0x002f \-\> B:23:0x000a, BACK_EDGE: B:31:0x0031 \-\> B:23:0x000a\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_20;Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_33[style=dashed];
Node_25 -> Node_26;
Node_25 -> Node_38[style=dashed];
Node_26 -> Node_24;
Node_28 -> Node_29;
Node_28 -> Node_39[style=dashed];
Node_29 -> Node_27;
Node_30 -> Node_34;
Node_30 -> Node_36[style=dashed];
Node_31 -> Node_37;
Node_32 -> Node_21;
Node_20 -> Node_22;
Node_24 -> Node_25;
Node_38 -> Node_27;
Node_27 -> Node_28;
Node_39 -> Node_30;
Node_34 -> Node_31;
Node_37 -> Node_35;
Node_35 -> Node_23;
Node_36 -> Node_35;
Node_33 -> Node_32;
}

