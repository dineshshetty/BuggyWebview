digraph "CFG forkotlin.collections.RingBuffer.forward(II)I" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0001: ARITH  (r1 I:int) = (r4 I:int A[D('$this$forward' int)]) + (r5 I:int A[D('n' int)])  (LINE:205)\l0x0003: INVOKE  (r2 I:int) = (r3 I:kotlin.collections.RingBuffer) type: STATIC call: kotlin.collections.RingBuffer.access$getCapacity$p(kotlin.collections.RingBuffer):int A[MD:(kotlin.collections.RingBuffer):int (m)]\l0x0007: ARITH  (r1 I:int) = (r1 I:int) % (r2 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: RETURN  (r1 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final int kotlin.collections.RingBuffer.forward((r3 'this' I:kotlin.collections.RingBuffer\<T\> A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('$this$forward' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('n' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0008: r0 '$i$f$forward' I\l  \-1 \-0x0008: r4 '$this$forward' I\l  \-1 \-0x0008: r5 'n' I\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

