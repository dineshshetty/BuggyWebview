digraph "CFG forkotlin.collections.RingBuffer.removeFirst(I)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:184)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0002|0x0002: IF  (r8 I:??[int, byte, short, char] A[D('n' int)]) \< (0 ??[int, byte, short, char])  \-\> B:29:0x0006 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0004|0x0004: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0007|0x0007: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0069 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0009|0x0009: INVOKE  (r2 I:int) = (r7 I:kotlin.collections.RingBuffer) type: VIRTUAL call: kotlin.collections.RingBuffer.size():int A[MD:():int (m)] (LINE:185)\l}"];
Node_32 [shape=record,label="{32\:\ 0x000d|0x000d: IF  (r8 I:??[int, byte, short, char] A[D('n' int)]) \> (r2 I:??[int, byte, short, char])  \-\> B:34:0x0010 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0010|0x0010: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0041 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0013|0x0013: IF  (r8 I:??[int, byte, short, char] A[D('n' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:47:?  (LINE:187)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0015|0x0015: IGET  (r0 I:int) = (r7 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.startIndex int  (LINE:188)\l0x0017: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('start' int)])  (LINE:189)\l0x0018: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY]) \l0x0019: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001a: ARITH  (r5 I:int) = (r2 I:int A[D('$this$forward$iv' int)]) + (r8 I:int A[D('n' int)])  (LINE:211)\l0x001c: INVOKE  (r6 I:int) = (r3 I:kotlin.collections.RingBuffer A[D('this_$iv' kotlin.collections.RingBuffer)]) type: STATIC call: kotlin.collections.RingBuffer.access$getCapacity$p(kotlin.collections.RingBuffer):int A[MD:(kotlin.collections.RingBuffer):int (m)]\l0x0020: ARITH  (r5 I:int) = (r5 I:int) % (r6 I:int) \l0x0021: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$this$forward$iv' int)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:189)\l0x0022: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:191)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0023|0x0023: IF  (r0 I:??[int, byte, short, char] A[D('start' int)]) \<= (r2 I:??[int, byte, short, char] A[D('end' int)])  \-\> B:40:0x0032 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0025|0x0025: IGET  (r4 I:java.lang.Object[]) = (r7 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.buffer java.lang.Object[]  (LINE:192)\l0x0027: IGET  (r5 I:int) = (r7 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.capacity int \l0x0029: INVOKE  (r4 I:java.lang.Object[]), (r3 I:java.lang.Object), (r0 I:int A[D('start' int)]), (r5 I:int) type: STATIC call: kotlin.collections.ArraysKt.fill(java.lang.Object[], java.lang.Object, int, int):void A[MD:\<T\>:(T[], T, int, int):void (m)]\l0x002c: IGET  (r4 I:java.lang.Object[]) = (r7 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.buffer java.lang.Object[]  (LINE:193)\l0x002e: INVOKE  (r4 I:java.lang.Object[]), (r3 I:java.lang.Object), (r1 I:int), (r2 I:int A[D('end' int)]) type: STATIC call: kotlin.collections.ArraysKt.fill(java.lang.Object[], java.lang.Object, int, int):void A[MD:\<T\>:(T[], T, int, int):void (m)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0037|0x0037: IPUT  (r2 I:int A[D('end' int)]), (r7 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.startIndex int  (LINE:198)\l0x0039: INVOKE  (r1 I:int) = (r7 I:kotlin.collections.RingBuffer) type: VIRTUAL call: kotlin.collections.RingBuffer.size():int A[MD:():int (m)] (LINE:199)\l0x003d: ARITH  (r1 I:int) = (r1 I:int) \- (r8 I:int A[D('n' int)]) \l0x003e: IPUT  (r1 I:int), (r7 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.size int \l}"];
Node_42 [shape=record,label="{42\:\ 0x0040|RETURN\lORIG_RETURN\l|0x0040: RETURN    (LINE:201)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0032|0x0032: IGET  (r1 I:java.lang.Object[]) = (r7 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.buffer java.lang.Object[]  (LINE:195)\l0x0034: INVOKE  (r1 I:java.lang.Object[]), (r3 I:java.lang.Object), (r0 I:int A[D('start' int)]), (r2 I:int A[D('end' int)]) type: STATIC call: kotlin.collections.ArraysKt.fill(java.lang.Object[], java.lang.Object, int, int):void A[MD:\<T\>:(T[], T, int, int):void (m)]\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|0x0040: RETURN   A[SYNTHETIC] (LINE:201)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0041|0x0041: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:208)\l0x0042: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:185)\l0x0044: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0047: CONST_STR  (r2 I:java.lang.String) =  \"n shouldn't be greater than the buffer size: n = \" \l0x0049: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004c: INVOKE  (r1 I:java.lang.StringBuilder), (r8 I:int A[D('n' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x004f: CONST_STR  (r2 I:java.lang.String) =  \", size = \" \l0x0051: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0054: INVOKE  (r2 I:int) = (r7 I:kotlin.collections.RingBuffer) type: VIRTUAL call: kotlin.collections.RingBuffer.size():int A[MD:():int (m)]\l0x0058: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x005b: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-RingBuffer$removeFirst$2' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x005f: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0061: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0065: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0068|0x0068: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0069|0x0069: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:208)\l0x006a: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:184)\l0x006c: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x006f: CONST_STR  (r2 I:java.lang.String) =  \"n shouldn't be negative but it is \" \l0x0071: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0074: INVOKE  (r1 I:java.lang.StringBuilder), (r8 I:int A[D('n' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0077: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-RingBuffer$removeFirst$1' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x007b: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x007d: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0081: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0084|0x0084: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0006|0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public final void kotlin.collections.RingBuffer.removeFirst((r7 'this' I:kotlin.collections.RingBuffer\<T\> A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('n' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:40:0x0032 \-\> B:41:0x0037, CROSS_EDGE: B:36:0x0013 \-\> B:42:0x0040, CROSS_EDGE: B:44:0x0068 \-\> B:25:?, CROSS_EDGE: B:32:0x000d \-\> B:35:0x0011, CROSS_EDGE: B:46:0x0084 \-\> B:25:?, CROSS_EDGE: B:29:0x0006 \-\> B:30:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0018\-0x0021: r2 '$this$forward$iv' I\l  0x0019\-0x0021: r3 'this_$iv' Lkotlin\/collections\/RingBuffer;\l  0x001a\-0x0021: r4 '$i$f$forward' I\l  0x0017\-0x0040: r0 'start' I\l  0x0022\-0x0040: r2 'end' I\l  0x0042\-0x005f: r0 '$i$a$\-require\-RingBuffer$removeFirst$2' I\l  0x006a\-0x007b: r0 '$i$a$\-require\-RingBuffer$removeFirst$1' I\l  \-1 \-0x0084: r8 'n' I\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_45;
Node_31 -> Node_32;
Node_32 -> Node_34;
Node_32 -> Node_35[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_43;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_47;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_25;
Node_40 -> Node_41;
Node_47 -> Node_25;
Node_43 -> Node_44;
Node_44 -> Node_25;
Node_45 -> Node_46;
Node_46 -> Node_25;
Node_29 -> Node_30;
}

