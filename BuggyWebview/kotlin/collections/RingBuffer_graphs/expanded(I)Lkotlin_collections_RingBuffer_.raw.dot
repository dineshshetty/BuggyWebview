digraph "CFG forkotlin.collections.RingBuffer.expanded(I)Lkotlin\/collections\/RingBuffer;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r4 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.capacity int  (LINE:163)\l0x0002: ARITH  (r1 I:int) = (r0 I:int) \>\> (1 int) \l0x0004: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0005: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0007: INVOKE  (r0 I:int) = (r0 I:int), (r5 I:int A[D('maxCapacity' int)]) type: STATIC call: kotlin.ranges.RangesKt.coerceAtMost(int, int):int A[MD:(int, int):int (m)]\l0x000b: IGET  (r1 I:int) = (r4 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.startIndex int  (LINE:164)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001b \l}"];
Node_12 [shape=record,label="{12\:\ 0x000f|0x000f: IGET  (r1 I:java.lang.Object[]) = (r4 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.buffer java.lang.Object[] \l0x0011: INVOKE  (r1 I:java.lang.Object[]) = (r1 I:java.lang.Object[]), (r0 I:int A[D('newCapacity' int)]) type: STATIC call: java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] A[MD:\<T\>:(T[], int):T[] (c)]\l0x0015: CONST_STR  (r2 I:java.lang.String) =  \"copyOf(this, newSize)\" \l0x0017: INVOKE  (r1 I:java.lang.Object), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0021|0x0021: NEW_INSTANCE  (r2 I:kotlin.collections.RingBuffer) =  kotlin.collections.RingBuffer  (LINE:165)\l0x0023: INVOKE  (r3 I:int) = (r4 I:kotlin.collections.RingBuffer) type: VIRTUAL call: kotlin.collections.RingBuffer.size():int A[MD:():int (m)]\l0x0027: INVOKE  (r2 I:kotlin.collections.RingBuffer), (r1 I:java.lang.Object[] A[D('newBuffer' java.lang.Object[])]), (r3 I:int) type: DIRECT call: kotlin.collections.RingBuffer.\<init\>(java.lang.Object[], int):void A[MD:(java.lang.Object[], int):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|RETURN\l|0x002a: RETURN  (r2 I:kotlin.collections.RingBuffer\<T\>) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|0x001b: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r0 I:int A[D('newCapacity' int), IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x001d: INVOKE  (r1 I:java.lang.Object[]) = (r4 I:kotlin.collections.RingBuffer), (r1 I:java.lang.Object[]) type: VIRTUAL call: kotlin.collections.RingBuffer.toArray(java.lang.Object[]):java.lang.Object[] A[MD:\<T\>:(T[]):T[] (m)]\l}"];
MethodNode[shape=record,label="{public final kotlin.collections.RingBuffer\<T\> kotlin.collections.RingBuffer.expanded((r4 'this' I:kotlin.collections.RingBuffer\<T\> A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('maxCapacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001b \-\> B:14:0x0021\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x002a: r0 'newCapacity' I\l  0x0021\-0x002a: r1 'newBuffer' [Ljava\/lang\/Object;\l  \-1 \-0x002a: r5 'maxCapacity' I\lTYPE_VARS: [T]\lSIGNATURE: (I)Lkotlin\/collections\/RingBuffer\<TT;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

