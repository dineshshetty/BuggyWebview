digraph "CFG forkotlin.collections.RingBuffer.toArray([Ljava\/lang\/Object;)[Ljava\/lang\/Object;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"array\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('array' java.lang.Object[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: ARRAY_LENGTH  (r0 I:int) = (r7 I:??[] A[D('array' java.lang.Object[])])  (LINE:130)\l0x0006: INVOKE  (r1 I:int) = (r6 I:kotlin.collections.RingBuffer) type: VIRTUAL call: kotlin.collections.RingBuffer.size():int A[MD:():int (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|0x000a: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:27:0x001a \l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|0x000c: INVOKE  (r0 I:int) = (r6 I:kotlin.collections.RingBuffer) type: VIRTUAL call: kotlin.collections.RingBuffer.size():int A[MD:():int (m)]\l0x0010: INVOKE  (r0 I:java.lang.Object[]) = (r7 I:java.lang.Object[] A[D('array' java.lang.Object[])]), (r0 I:int) type: STATIC call: java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] A[MD:\<T\>:(T[], int):T[] (c)]\l0x0014: CONST_STR  (r1 I:java.lang.String) =  \"copyOf(this, newSize)\" \l0x0016: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x001b|0x001c: INVOKE  (r1 I:int) = (r6 I:kotlin.collections.RingBuffer) type: VIRTUAL call: kotlin.collections.RingBuffer.size():int A[MD:():int (m)] (LINE:132)\l0x0020: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:134)\l0x0021: IGET  (r3 I:int) = (r6 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.startIndex int  (LINE:135)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0023|LOOP_START\lLOOP:0: B:29:0x0023\-\>B:32:0x0029\l|0x0023: IF  (r2 I:??[int, byte, short, char] A[D('widx' int)]) \>= (r1 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:41:0x0034  (LINE:137)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0025|0x0025: IGET  (r4 I:int) = (r6 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.capacity int \l}"];
Node_31 [shape=record,label="{31\:\ 0x0027|0x0027: IF  (r3 I:??[int, byte, short, char] A[D('idx' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:42:0x0034 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0029|LOOP_END\lLOOP:0: B:29:0x0023\-\>B:32:0x0029\l|0x0029: IGET  (r4 I:java.lang.Object[]) = (r6 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.buffer java.lang.Object[]  (LINE:138)\l0x002b: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char] A[D('idx' int)]) \l0x002d: APUT  \l  (r0 I:??[OBJECT, ARRAY][] A[D('result' java.lang.Object[])])\l  (r2 I:??[int, short, byte, char] A[D('widx' int)])\l  (r4 I:??[OBJECT, ARRAY])\l \l0x002f: ARITH  (r2 I:int) = (r2 I:int A[D('widx' int)]) + (1 int)  (LINE:139)\l0x0031: ARITH  (r3 I:int) = (r3 I:int A[D('idx' int)]) + (1 int)  (LINE:140)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0034|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0034|0x0034: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('idx' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:143)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0035|LOOP_START\lLOOP:1: B:34:0x0035\-\>B:35:0x0037\l|0x0035: IF  (r2 I:??[int, byte, short, char] A[D('widx' int)]) \>= (r1 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:43:0x0042  (LINE:144)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0037|LOOP_END\lLOOP:1: B:34:0x0035\-\>B:35:0x0037\l|0x0037: IGET  (r4 I:java.lang.Object[]) = (r6 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.buffer java.lang.Object[]  (LINE:145)\l0x0039: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char] A[D('idx' int)]) \l0x003b: APUT  \l  (r0 I:??[OBJECT, ARRAY][] A[D('result' java.lang.Object[])])\l  (r2 I:??[int, short, byte, char] A[D('widx' int)])\l  (r4 I:??[OBJECT, ARRAY])\l \l0x003d: ARITH  (r2 I:int) = (r2 I:int A[D('widx' int)]) + (1 int)  (LINE:146)\l0x003f: ARITH  (r3 I:int) = (r3 I:int A[D('idx' int)]) + (1 int)  (LINE:147)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0042|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0042|0x0042: ARRAY_LENGTH  (r4 I:int) = (r0 I:??[] A[D('result' java.lang.Object[])])  (LINE:149)\l0x0043: INVOKE  (r5 I:int) = (r6 I:kotlin.collections.RingBuffer) type: VIRTUAL call: kotlin.collections.RingBuffer.size():int A[MD:():int (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0047|0x0047: IF  (r4 I:??[int, byte, short, char]) \<= (r5 I:??[int, byte, short, char])  \-\> B:39:0x0050 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0049|0x0049: INVOKE  (r4 I:int) = (r6 I:kotlin.collections.RingBuffer) type: VIRTUAL call: kotlin.collections.RingBuffer.size():int A[MD:():int (m)]\l0x004d: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x004e: APUT  \l  (r0 I:??[OBJECT, ARRAY][] A[D('result' java.lang.Object[])])\l  (r4 I:??[int, short, byte, char])\l  (r5 I:??[OBJECT, ARRAY])\l \l}"];
Node_39 [shape=record,label="{39\:\ 0x0050|0x0050: CONST_STR  (r4 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlin.Array\<T of kotlin.collections.RingBuffer.toArray\>\"  (LINE:151)\l0x0052: INVOKE  (r0 I:java.lang.Object A[D('result' java.lang.Object[])]), (r4 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0055|RETURN\l|0x0055: RETURN  (r0 I:T[] A[D('result' java.lang.Object[])]) \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x0034|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x001a|0x001a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('array' java.lang.Object[])]) \l}"];
MethodNode[shape=record,label="{public T[] kotlin.collections.RingBuffer.toArray((r6 'this' I:kotlin.collections.RingBuffer\<T\> A[IMMUTABLE_TYPE, THIS]), (r7 I:T[] A[D('array' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:32:0x0029 \-\> B:29:0x0023, BACK_EDGE: B:35:0x0037 \-\> B:34:0x0035, CROSS_EDGE: B:37:0x0047 \-\> B:39:0x0050, CROSS_EDGE: B:29:0x0023 \-\> B:33:0x0034, CROSS_EDGE: B:27:0x001a \-\> B:28:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;)[TT;\lDebug Info:\l  0x001c\-0x0055: r0 'result' [Ljava\/lang\/Object;\l  0x0020\-0x0055: r1 'size' I\l  0x0021\-0x0055: r2 'widx' I\l  0x0023\-0x0055: r3 'idx' I\l  \-1 \-0x0055: r7 'array' [Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [ClspMth\{\<T\> java.util.Collection.toArray(T[]):T[]\}]\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_41;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_42;
Node_32 -> Node_29;
Node_42 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_43;
Node_35 -> Node_34;
Node_43 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_23;
Node_41 -> Node_33;
Node_27 -> Node_28;
}

