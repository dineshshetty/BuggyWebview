digraph "CFG forkotlin.collections.ArraysKt___ArraysJvmKt$asList$6.indexOf(D)I" {
subgraph cluster_Region_2108867951 {
label = "R(3:1|(2:3|(2:(1:9)|(1:7)))|13)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0000|double[] double[] r0 = r12.$this_asList\lint r2 = 0\lint int r3 = r0.length\l}"];
subgraph cluster_LoopRegion_1730936111 {
label = "LOOP:0: (2:3|(2:(1:9)|(1:7)))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0005|LOOP_START\lLOOP:0: B:19:0x0005\-\>B:26:0x001c\lPHI: r2 \l  PHI: (r2v1 'index$iv' int) = (r2v0 'index$iv' int), (r2v3 'index$iv' int) binds: [B:18:0x0000, B:26:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< r3) goto L3\l}"];
subgraph cluster_Region_1726009393 {
label = "R(2:3|(2:(1:9)|(1:7)))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0007|double r4 = r0[r2]\l}"];
subgraph cluster_Region_296235988 {
label = "R(2:(1:9)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_508238428 {
label = "IF [B:24:0x0019] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0019|PHI: r7 \l  PHI: (r7v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((java.lang.Double.doubleToLongBits(r4) == java.lang.Double.doubleToLongBits(r13)) != false) goto L8\l}"];
subgraph cluster_Region_2127183084 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_355994265 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x001c|LOOP_END\lLOOP:0: B:19:0x0005\-\>B:26:0x001c\l|r2++\l}"];
}
}
}
}
Node_27 [shape=record,label="{27\:\ 0x001f|RETURN\lORIG_RETURN\l|return \-1\l}"];
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0014}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0016}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0020|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0018}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x001f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int kotlin.collections.ArraysKt___ArraysJvmKt$asList$6.indexOf((r12v0 'this' kotlin.collections.ArraysKt___ArraysJvmKt$asList$6 A[IMMUTABLE_TYPE, THIS]), (r13v0 'element' double A[D('element' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x001c \-\> B:19:0x0005, CROSS_EDGE: B:23:0x0018 \-\> B:24:0x0019, CROSS_EDGE: B:27:0x001f \-\> B:28:0x0020\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_16;Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_29[style=dashed];
Node_20 -> Node_21;
Node_24 -> Node_26[style=dashed];
Node_24 -> Node_30;
Node_31 -> Node_17;
Node_26 -> Node_19;
Node_27 -> Node_17;
Node_16 -> Node_18;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_30 -> Node_31;
Node_23 -> Node_24;
Node_29 -> Node_27;
}

