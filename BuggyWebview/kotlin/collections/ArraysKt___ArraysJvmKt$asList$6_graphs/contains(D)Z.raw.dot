digraph "CFG forkotlin.collections.ArraysKt___ArraysJvmKt$asList$6.contains(D)Z" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY])  (LINE:213)\l0x0002: IGET  (r1 I:double[]) = (r0 I:kotlin.collections.ArraysKt___ArraysJvmKt$asList$6) kotlin.collections.ArraysKt___ArraysJvmKt$asList$6.$this_asList double[] \l0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: ARRAY_LENGTH  (r3 I:int) = (r1 I:??[] A[D('$this$any$iv' double[])])  (LINE:3421)\l0x0006: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|LOOP_START\lLOOP:0: B:20:0x0008\-\>B:28:0x0022\l|0x0008: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|0x0009: IF  (r5 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:31:0x0026 \l}"];
Node_22 [shape=record,label="{22\:\ 0x000b|0x000b: AGET  (r7 I:??[long, double]) = (r1 I:??[long, double][] A[D('$this$any$iv' double[])]), (r5 I:??[int, short, byte, char]) \l0x000d: MOVE  (r9 I:??[long, double]) = (r7 I:??[long, double] A[D('element$iv' double)]) \l0x000e: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: INVOKE  (r12 I:long) = (r9 I:double A[D('it' double)]) type: STATIC call: java.lang.Double.doubleToLongBits(double):long A[MD:(double):long (c)] (LINE:213)\l0x0013: INVOKE  (r14 I:long) = (r18 I:double A[D('element' double)]) type: STATIC call: java.lang.Double.doubleToLongBits(double):long A[MD:(double):long (c)]\l0x0017: CMP_L  (r16 I:int) = (r12 I:long), (r14 I:long) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|0x0019: IF  (r16 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001d \l}"];
Node_24 [shape=record,label="{24\:\ 0x001b|0x001b: CONST  (r12 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x001e|0x001e: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0022 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|LOOP_END\lLOOP:0: B:20:0x0008\-\>B:28:0x0022\l|0x0022: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0020|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0020|RETURN\lORIG_RETURN\l|0x0020: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0026: RETURN  (r4 I:boolean)  (LINE:213)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x001d|0x001d: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0026|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0026: RETURN  (r4 I:boolean) A[SYNTHETIC] (LINE:213)\l}"];
MethodNode[shape=record,label="{public boolean kotlin.collections.ArraysKt___ArraysJvmKt$asList$6.contains((r17 'this' I:kotlin.collections.ArraysKt___ArraysJvmKt$asList$6 A[IMMUTABLE_TYPE, THIS]), (r18 I:double A[D('element' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0022 \-\> B:20:0x0008, CROSS_EDGE: B:25:0x001d \-\> B:26:0x001e, CROSS_EDGE: B:21:0x0009 \-\> B:30:0x0026\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000e\-0x001e: r9 'it' D\l  0x000f\-0x001e: r11 '$i$a$\-any\-ArraysKt___ArraysJvmKt$asList$6$contains$1' I\l  0x000d\-0x0025: r7 'element$iv' D\l  0x0004\-0x0026: r1 '$this$any$iv' [D\l  0x0005\-0x0026: r2 '$i$f$any' I\l  \-1 \-0x0026: r18 'element' D\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_31;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_28;
Node_26 -> Node_32[style=dashed];
Node_28 -> Node_20;
Node_32 -> Node_27;
Node_27 -> Node_18;
Node_25 -> Node_26;
Node_31 -> Node_33;
Node_33 -> Node_18;
}

