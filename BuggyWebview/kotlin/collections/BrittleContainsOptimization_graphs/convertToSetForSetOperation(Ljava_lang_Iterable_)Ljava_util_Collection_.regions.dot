digraph "CFG forkotlin.collections.BrittleContainsOptimizationKt.convertToSetForSetOperation(Ljava\/lang\/Iterable;)Ljava\/util\/Collection;" {
subgraph cluster_Region_930643355 {
label = "R(2:1|(2:(1:4)|(1:(2:(1:9)|(1:18)))))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"\<this\>\")\l}"];
subgraph cluster_Region_1666405744 {
label = "R(2:(1:4)|(1:(2:(1:9)|(1:18))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_673398014 {
label = "IF [B:23:0x0008] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0008|if ((r1 instanceof java.util.Set) == true) goto L3\l}"];
subgraph cluster_Region_2070500948 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return (java.util.Collection) r1\l}"];
}
}
subgraph cluster_Region_260663303 {
label = "R(1:(2:(1:9)|(1:18)))";
node [shape=record,color=blue];
subgraph cluster_Region_1988641875 {
label = "R(2:(1:9)|(1:18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1207784112 {
label = "IF [B:26:0x0010] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0010|if ((r1 instanceof java.util.Collection) == true) goto L8\l}"];
subgraph cluster_Region_1981249517 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0019|RETURN\l|return safeToConvertToSet((java.util.Collection) r1) ? kotlin.collections.CollectionsKt.toHashSet(r1) : (java.util.Collection) r1\l}"];
}
}
subgraph cluster_Region_849010808 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0036|RETURN\lORIG_RETURN\l|return kotlin.collections.CollectionsJVM.brittleContainsOptimizationEnabled ? kotlin.collections.CollectionsKt.toHashSet(r1) : kotlin.collections.CollectionsKt.toList(r1)\l}"];
}
}
}
}
}
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x000a}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x000e}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0012}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x001b}"];
Node_38 [shape=record,color=red,label="{38\:\ ?|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0022}"];
Node_39 [shape=record,color=red,label="{39\:\ ?|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0026}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0029}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x002b}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0034|PHI: r0 \l  PHI: (r0v6 java.util.Collection\<T\> A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0030}"];
MethodNode[shape=record,label="{public static final java.util.Collection\<T\> kotlin.collections.BrittleContainsOptimizationKt.convertToSetForSetOperation((r1v0 java.lang.Iterable\<? extends T\> A[D('$this$convertToSetForSetOperation' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x001b \-\> B:36:0x0036, CROSS_EDGE: B:30:0x0022 \-\> B:36:0x0036, CROSS_EDGE: B:35:0x0034 \-\> B:36:0x0036, CROSS_EDGE: B:34:0x0030 \-\> B:35:0x0034\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;)Ljava\/util\/Collection\<TT;\>;\l}"];
MethodNode -> Node_20;Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_37 -> Node_21;
Node_26 -> Node_27;
Node_26 -> Node_31[style=dashed];
Node_28 -> Node_29;
Node_28 -> Node_30;
Node_36 -> Node_21;
Node_20 -> Node_22;
Node_24 -> Node_37;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_29 -> Node_38;
Node_38 -> Node_21;
Node_30 -> Node_39;
Node_39 -> Node_21;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_35 -> Node_36;
Node_34 -> Node_35;
}

