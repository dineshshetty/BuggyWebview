digraph "CFG forkotlin.collections.BrittleContainsOptimizationKt.convertToSetForSetOperation([Ljava\/lang\/Object;)Ljava\/util\/Collection;" {
subgraph cluster_Region_725694998 {
label = "R(2:1|5)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"\<this\>\")\l}"];
Node_15 [shape=record,label="{15\:\ 0x0015|RETURN\l|return kotlin.collections.CollectionsJVM.brittleContainsOptimizationEnabled ? kotlin.collections.ArraysKt.toHashSet(r1) : kotlin.collections.ArraysKt.asList(r1)\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0008}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x000a}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0013|PHI: r0 \l  PHI: (r0v4 java.util.Collection\<T\> A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x000f}"];
MethodNode[shape=record,label="{public static final java.util.Collection\<T\> kotlin.collections.BrittleContainsOptimizationKt.convertToSetForSetOperation((r1v0 T[] A[D('$this$convertToSetForSetOperation' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000f \-\> B:14:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;)Ljava\/util\/Collection\<TT;\>;\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_15 -> Node_9;
Node_8 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_13 -> Node_14;
}

