digraph "CFG forkotlin.collections.BrittleContainsOptimizationKt.convertToSetForSetOperation(Ljava\/lang\/Iterable;)Ljava\/util\/Collection;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"\<this\>\")\l}"];
Node_23 [shape=record,label="{23\:\ 0x0008|if ((r1 instanceof java.util.Set) == false) goto L6\l}"];
Node_24 [shape=record,label="{24\:\ 0x000a}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return (java.util.Collection) r1\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x000e}"];
Node_26 [shape=record,label="{26\:\ 0x0010|if ((r1 instanceof java.util.Collection) == false) goto L14\l}"];
Node_27 [shape=record,label="{27\:\ 0x0012}"];
Node_28 [shape=record,label="{28\:\ 0x0019|if (safeToConvertToSet((java.util.Collection) r1) == false) goto L12\l}"];
Node_29 [shape=record,label="{29\:\ 0x001b}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.collections.CollectionsKt.toHashSet(r1)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0022}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return (java.util.Collection) r1\l}"];
Node_31 [shape=record,label="{31\:\ 0x0026}"];
Node_32 [shape=record,label="{32\:\ 0x0029|if (kotlin.collections.CollectionsJVM.brittleContainsOptimizationEnabled == false) goto L19\l}"];
Node_33 [shape=record,label="{33\:\ 0x002b|java.util.HashSet r0 = kotlin.collections.CollectionsKt.toHashSet(r1)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0034|PHI: r0 \l  PHI: (r0v6 java.util.Collection\<T\>) = (r0v5 java.util.Collection\<T\>), (r0v8 java.util.Collection\<T\>) binds: [B:34:0x0030, B:33:0x002b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0036|RETURN\lORIG_RETURN\l|return r0\l}"];
Node_34 [shape=record,label="{34\:\ 0x0030|java.util.List r0 = kotlin.collections.CollectionsKt.toList(r1)\l}"];
MethodNode[shape=record,label="{public static final java.util.Collection\<T\> kotlin.collections.BrittleContainsOptimizationKt.convertToSetForSetOperation((r1v0 java.lang.Iterable\<? extends T\> A[D('$this$convertToSetForSetOperation' java.lang.Iterable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x001b \-\> B:36:0x0036, CROSS_EDGE: B:30:0x0022 \-\> B:36:0x0036, CROSS_EDGE: B:35:0x0034 \-\> B:36:0x0036, CROSS_EDGE: B:34:0x0030 \-\> B:35:0x0034\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Iterable\<+TT;\>;)Ljava\/util\/Collection\<TT;\>;\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_37;
Node_37 -> Node_21;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_31;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_38;
Node_38 -> Node_21;
Node_30 -> Node_39;
Node_39 -> Node_21;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_21;
Node_34 -> Node_35;
}

