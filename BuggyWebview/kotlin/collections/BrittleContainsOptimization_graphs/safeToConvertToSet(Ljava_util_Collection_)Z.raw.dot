digraph "CFG forkotlin.collections.BrittleContainsOptimizationKt.safeToConvertToSet(Ljava\/util\/Collection;)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:16)\l0x0001: SGET  (r0 I:boolean A[D('$i$f$brittleContainsOptimizationEnabled' int)]) =  kotlin.collections.CollectionSystemProperties.brittleContainsOptimizationEnabled boolean  (LINE:67)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$i$f$brittleContainsOptimizationEnabled' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0012 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|0x0005: INVOKE  (r0 I:int) = (r2 I:java.util.Collection A[D('$this$safeToConvertToSet' java.util.Collection)]) type: INTERFACE call: java.util.Collection.size():int A[MD:():int (c)] (LINE:16)\l0x0009: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|0x000a: IF  (r0 I:??[int, byte, short, char]) \<= (r1 I:??[int, byte, short, char])  \-\> B:21:0x0012 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|0x000c: INSTANCE_OF  (r0 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('$this$safeToConvertToSet' java.util.Collection)]) java.util.ArrayList \l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0012 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|SYNTHETIC\lRETURN\l|0x0010: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0013: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private static final boolean kotlin.collections.BrittleContainsOptimizationKt.safeToConvertToSet((r2 I:java.util.Collection\<? extends T\> A[D('$this$safeToConvertToSet' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0012 \-\> B:22:0x0013, CROSS_EDGE: B:17:0x000a \-\> B:21:0x0012, CROSS_EDGE: B:15:0x0003 \-\> B:21:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0003: r0 '$i$f$brittleContainsOptimizationEnabled' I\l  \-1 \-0x0013: r2 '$this$safeToConvertToSet' Ljava\/util\/Collection;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/Collection\<+TT;\>;)Z\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_13;
Node_21 -> Node_13;
}

