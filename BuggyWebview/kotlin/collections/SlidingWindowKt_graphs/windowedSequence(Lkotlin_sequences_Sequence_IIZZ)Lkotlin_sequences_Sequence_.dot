digraph "CFG forkotlin.collections.SlidingWindowKt.windowedSequence(Lkotlin\/sequences\/Sequence;IIZZ)Lkotlin\/sequences\/Sequence;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"\<this\>\")\lcheckWindowSizeStep(r8, r9)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|RETURN\l|return (kotlin.sequences.Sequence) ((kotlin.sequences.Sequence\<java.util.List\<? extends T\>\>) new kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1())\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<java.util.List\<T\>\> kotlin.collections.SlidingWindowKt.windowedSequence((r7v0 kotlin.sequences.Sequence\<? extends T\> A[D('$this$windowedSequence' kotlin.sequences.Sequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'size' int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'step' int A[D('step' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'partialWindows' boolean A[D('partialWindows' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'reuseBuffer' boolean A[D('reuseBuffer' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/sequences\/Sequence\<+TT;\>;IIZZ)Lkotlin\/sequences\/Sequence\<Ljava\/util\/List\<TT;\>;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

