digraph "CFG forkotlin.collections.MapsKt__MapWithDefaultKt.withDefaultMutable(Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$withDefault' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"defaultValue\" \l0x0007: INVOKE  (r2 I:java.lang.Object A[D('defaultValue' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000b: INSTANCE_OF  (r0 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('$this$withDefault' java.util.Map)]) kotlin.collections.MutableMapWithDefault  (LINE:52)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001b \l}"];
Node_12 [shape=record,label="{12\:\ 0x000f|0x000f: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$withDefault' java.util.Map)]) \l0x0010: CHECK_CAST (r0 I:kotlin.collections.MutableMapWithDefault) = (kotlin.collections.MutableMapWithDefault) (r0 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r0 I:java.util.Map) = (r0 I:kotlin.collections.MutableMapWithDefault) type: INTERFACE call: kotlin.collections.MutableMapWithDefault.getMap():java.util.Map A[MD:():java.util.Map\<K, V\> (m)]\l0x0016: INVOKE  (r0 I:java.util.Map) = (r0 I:java.util.Map), (r2 I:kotlin.jvm.functions.Function1 A[D('defaultValue' kotlin.jvm.functions.Function1)]) type: STATIC call: kotlin.collections.MapsKt.withDefaultMutable(java.util.Map, kotlin.jvm.functions.Function1):java.util.Map A[MD:\<K, V\>:(java.util.Map\<K, V\>, kotlin.jvm.functions.Function1\<? super K, ? extends V\>):java.util.Map\<K, V\> (m)]\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0022: RETURN  (r0 I:java.util.Map\<K, V\>) A[SYNTHETIC] (LINE:54)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|0x001b: NEW_INSTANCE  (r0 I:kotlin.collections.MutableMapWithDefaultImpl) =  kotlin.collections.MutableMapWithDefaultImpl  (LINE:53)\l0x001d: INVOKE  \l  (r0 I:kotlin.collections.MutableMapWithDefaultImpl)\l  (r1 I:java.util.Map A[D('$this$withDefault' java.util.Map)])\l  (r2 I:kotlin.jvm.functions.Function1 A[D('defaultValue' kotlin.jvm.functions.Function1)])\l type: DIRECT call: kotlin.collections.MutableMapWithDefaultImpl.\<init\>(java.util.Map, kotlin.jvm.functions.Function1):void A[MD:(java.util.Map\<K, V\>, kotlin.jvm.functions.Function1\<? super K, ? extends V\>):void (m)]\l0x0020: CHECK_CAST (r0 I:java.util.Map) = (java.util.Map) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: RETURN  (r0 I:java.util.Map\<K, V\>)  (LINE:54)\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.MapsKt__MapWithDefaultKt.withDefaultMutable((r1 I:java.util.Map\<K, V\> A[D('$this$withDefault' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.jvm.functions.Function1\<? super K, ? extends V\> A[D('defaultValue' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001b \-\> B:14:0x0022\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0022: r1 '$this$withDefault' Ljava\/util\/Map;\l  \-1 \-0x0022: r2 'defaultValue' Lkotlin\/jvm\/functions\/Function1;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/util\/Map\<TK;TV;\>;Lkotlin\/jvm\/functions\/Function1\<\-TK;+TV;\>;)Ljava\/util\/Map\<TK;TV;\>;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

