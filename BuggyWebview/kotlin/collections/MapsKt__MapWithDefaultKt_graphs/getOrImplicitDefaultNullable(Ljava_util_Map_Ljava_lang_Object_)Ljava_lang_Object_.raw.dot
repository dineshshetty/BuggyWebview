digraph "CFG forkotlin.collections.MapsKt__MapWithDefaultKt.getOrImplicitDefaultNullable(Ljava\/util\/Map;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('$this$getOrImplicitDefault' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INSTANCE_OF  (r0 I:boolean) = (r7 I:??[OBJECT, ARRAY] A[D('$this$getOrImplicitDefault' java.util.Map)]) kotlin.collections.MapWithDefault  (LINE:21)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0011 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$getOrImplicitDefault' java.util.Map)])  (LINE:22)\l0x000a: CHECK_CAST (r0 I:kotlin.collections.MapWithDefault) = (kotlin.collections.MapWithDefault) (r0 I:??[OBJECT, ARRAY]) \l0x000c: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlin.collections.MapWithDefault), (r8 I:java.lang.Object A[D('key' java.lang.Object)]) type: INTERFACE call: kotlin.collections.MapWithDefault.getOrImplicitDefault(java.lang.Object):java.lang.Object A[MD:(K):V (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:V) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|0x0011: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('$this$getOrImplicitDefault' java.util.Map)])  (LINE:24)\l0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: INVOKE  (r2 I:java.lang.Object) = \l  (r0 I:java.util.Map A[D('$this$getOrElseNullable$iv' java.util.Map)])\l  (r8 I:java.lang.Object A[D('key' java.lang.Object)])\l type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:105)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0017|0x0017: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value$iv' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x003e  (LINE:106)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|0x0019: INVOKE  (r3 I:boolean) = \l  (r0 I:java.util.Map A[D('$this$getOrElseNullable$iv' java.util.Map)])\l  (r8 I:java.lang.Object A[D('key' java.lang.Object)])\l type: INTERFACE call: java.util.Map.containsKey(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x001d|0x001d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0020 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|0x0020: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:107)\l0x0021: NEW_INSTANCE  (r4 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException  (LINE:24)\l0x0023: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0025: INVOKE  (r5 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0028: CONST_STR  (r6 I:java.lang.String) =  \"Key \" \l0x002a: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002d: INVOKE  (r5 I:java.lang.StringBuilder), (r8 I:java.lang.Object A[D('key' java.lang.Object)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0030: CONST_STR  (r6 I:java.lang.String) =  \" is missing in the map.\" \l0x0032: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0035: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0039: INVOKE  (r4 I:java.util.NoSuchElementException), (r5 I:java.lang.String) type: DIRECT call: java.util.NoSuchElementException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x003c|0x003c: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_29 [shape=record,label="{29\:\ 0x003e|RETURN\l|0x003e: RETURN  (r2 I:V A[D('value$iv' java.lang.Object)])  (LINE:24)\l}"];
MethodNode[shape=record,label="{public static final V kotlin.collections.MapsKt__MapWithDefaultKt.getOrImplicitDefaultNullable((r7 I:java.util.Map\<K, ? extends V\> A[D('$this$getOrImplicitDefault' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:K A[D('key' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x003c \-\> B:16:?, CROSS_EDGE: B:29:0x003e \-\> B:16:?, CROSS_EDGE: B:22:0x0017 \-\> B:29:0x003e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x003d: r3 '$i$a$\-getOrElseNullable\-MapsKt__MapWithDefaultKt$getOrImplicitDefault$1' I\l  0x0012\-0x003e: r0 '$this$getOrElseNullable$iv' Ljava\/util\/Map;\l  0x0013\-0x003e: r1 '$i$f$getOrElseNullable' I\l  0x0017\-0x003e: r2 'value$iv' Ljava\/lang\/Object;\l  \-1 \-0x003e: r7 '$this$getOrImplicitDefault' Ljava\/util\/Map;\l  \-1 \-0x003e: r8 'key' Ljava\/lang\/Object;\lTYPE_VARS: [V, K]\lSIGNATURE: \<K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;\>(Ljava\/util\/Map\<TK;+TV;\>;TK;)TV;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_16;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_29;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_29[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_29 -> Node_16;
}

