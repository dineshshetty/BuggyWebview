digraph "CFG forkotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1.iterator()Ljava\/util\/Iterator;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:22)\l0x0001: IGET  (r1 I:kotlin.sequences.Sequence) = (r6 I:kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1) kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1.$this_windowedSequence$inlined kotlin.sequences.Sequence  (LINE:681)\l0x0003: INVOKE  (r1 I:java.util.Iterator) = (r1 I:kotlin.sequences.Sequence) type: INTERFACE call: kotlin.sequences.Sequence.iterator():java.util.Iterator A[MD:():java.util.Iterator\<T\> (m)]\l0x0007: IGET  (r2 I:int) = (r6 I:kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1) kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1.$size$inlined int \l0x0009: IGET  (r3 I:int) = (r6 I:kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1) kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1.$step$inlined int \l0x000b: IGET  (r4 I:boolean) = (r6 I:kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1) kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1.$partialWindows$inlined boolean \l0x000d: IGET  (r5 I:boolean) = (r6 I:kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1) kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1.$reuseBuffer$inlined boolean \l0x000f: INVOKE  (r0 I:java.util.Iterator A[D('$i$a$\-Sequence\-SlidingWindowKt$windowedSequence$1' int)]) = (r1 I:java.util.Iterator), (r2 I:int), (r3 I:int), (r4 I:boolean), (r5 I:boolean) type: STATIC call: kotlin.collections.SlidingWindowKt.windowedIterator(java.util.Iterator, int, int, boolean, boolean):java.util.Iterator A[MD:\<T\>:(java.util.Iterator\<? extends T\>, int, int, boolean, boolean):java.util.Iterator\<java.util.List\<T\>\> (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:java.util.Iterator\<java.util.List\<? extends T\>\> A[D('$i$a$\-Sequence\-SlidingWindowKt$windowedSequence$1' int)]) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.util.Iterator\<java.util.List\<? extends T\>\> kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1.iterator((r6 'this' I:kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1 A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lDebug Info:\l  0x0001\-0x0013: r0 '$i$a$\-Sequence\-SlidingWindowKt$windowedSequence$1' I\lTYPE_VARS: EMPTY\lSIGNATURE: ()Ljava\/util\/Iterator\<Ljava\/util\/List\<+TT;\>;\>;\lMETHOD_OVERRIDE: [kotlin.sequences.Sequence.iterator():java.util.Iterator\<T\>]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

