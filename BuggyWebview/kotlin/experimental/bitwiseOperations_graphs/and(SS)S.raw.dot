digraph "CFG forkotlin.experimental.BitwiseOperationsKt.and(SS)S" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r0 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char] A[D('$this$and' short)]) & (r2 I:??[int, boolean, short, byte, char] A[D('other' short)])  (LINE:32)\l0x0002: CAST (r0 I:short) = (short) (r0 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|RETURN\l|0x0003: RETURN  (r0 I:short) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final short kotlin.experimental.BitwiseOperationsKt.and((r1 I:short A[D('$this$and' short), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:short A[D('other' short), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0003: r1 '$this$and' S\l  \-1 \-0x0003: r2 'other' S\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

