digraph "CFG forkotlin.UByteArrayKt.UByteArray(ILkotlin\/jvm\/functions\/Function1;)[B" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"init\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('init' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: NEW_ARRAY  (r0 I:byte[]) = (r3 I:int A[D('size' int), IMMUTABLE_TYPE]) type: byte[]  (LINE:79)\l0x0007: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|LOOP_START\lLOOP:0: B:3:0x0008\-\>B:4:0x000a\l|0x0008: IF  (r1 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:7:0x001d \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|LOOP_END\lLOOP:0: B:3:0x0008\-\>B:4:0x000a\l|0x000a: INVOKE  (r2 I:java.lang.Integer) = (r1 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x000e: INVOKE  (r2 I:java.lang.Object) = (r4 I:kotlin.jvm.functions.Function1 A[D('init' kotlin.jvm.functions.Function1)]), (r2 I:java.lang.Object) type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x0012: CHECK_CAST (r2 I:kotlin.UByte) = (kotlin.UByte) (r2 I:??[OBJECT, ARRAY]) \l0x0014: INVOKE  (r2 I:byte) = (r2 I:kotlin.UByte) type: VIRTUAL call: kotlin.UByte.unbox\-impl():byte A[MD:():byte (m)]\l0x0018: APUT  (r0 I:byte[] A[IMMUTABLE_TYPE]), (r1 I:??[int, short, byte, char]), (r2 I:byte A[IMMUTABLE_TYPE]) \l0x001a: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|SYNTHETIC\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: INVOKE  (r0 I:byte[]) = (r0 I:byte[]) type: STATIC call: kotlin.UByteArray.constructor\-impl(byte[]):byte[] A[MD:(byte[]):byte[] (m)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|RETURN\l|0x0021: RETURN  (r0 I:byte[]) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final byte[] kotlin.UByteArrayKt.UByteArray((r3 I:int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function1\<? super java.lang.Integer, kotlin.UByte\> A[D('init' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:4:0x000a \-\> B:3:0x0008\lDebug Info:\l  \-1 \-0x0021: r3 'size' I\l  \-1 \-0x0021: r4 'init' Lkotlin\/jvm\/functions\/Function1;\lSIGNATURE: (ILkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Integer;Lkotlin\/UByte;\>;)[B\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_3;
Node_7 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

