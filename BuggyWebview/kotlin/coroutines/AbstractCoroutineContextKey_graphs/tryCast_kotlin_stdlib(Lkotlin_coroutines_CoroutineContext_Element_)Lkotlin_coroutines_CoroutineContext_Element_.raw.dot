digraph "CFG forkotlin.coroutines.AbstractCoroutineContextKey.tryCast$kotlin_stdlib(Lkotlin\/coroutines\/CoroutineContext$Element;)Lkotlin\/coroutines\/CoroutineContext$Element;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"element\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('element' kotlin.coroutines.CoroutineContext$Element)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: IGET  (r0 I:kotlin.jvm.functions.Function1\<kotlin.coroutines.CoroutineContext$Element, E extends B\>) = (r1 I:kotlin.coroutines.AbstractCoroutineContextKey) kotlin.coroutines.AbstractCoroutineContextKey.safeCast kotlin.jvm.functions.Function1  (LINE:54)\l0x0007: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:kotlin.jvm.functions.Function1)\l  (r2 I:java.lang.Object A[D('element' kotlin.coroutines.CoroutineContext$Element)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)]\l0x000b: CHECK_CAST (r0 I:kotlin.coroutines.CoroutineContext$Element) = (kotlin.coroutines.CoroutineContext$Element) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|RETURN\l|0x000d: RETURN  (r0 I:kotlin.coroutines.CoroutineContext$Element) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final kotlin.coroutines.CoroutineContext$Element kotlin.coroutines.AbstractCoroutineContextKey.tryCast$kotlin_stdlib((r1 'this' I:kotlin.coroutines.AbstractCoroutineContextKey\<B extends kotlin.coroutines.CoroutineContext$Element, E extends B\> A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.coroutines.CoroutineContext$Element A[D('element' kotlin.coroutines.CoroutineContext$Element), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000d: r2 'element' Lkotlin\/coroutines\/CoroutineContext$Element;\lTYPE_VARS: [B extends kotlin.coroutines.CoroutineContext$Element, E extends B]\lSIGNATURE: (Lkotlin\/coroutines\/CoroutineContext$Element;)TE;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

