digraph "CFG forkotlin.coroutines.jvm.internal.DebugMetadataKt.getStackTraceElement(Lkotlin\/coroutines\/jvm\/internal\/BaseContinuationImpl;)Ljava\/lang\/StackTraceElement;" {
subgraph cluster_Region_2053102485 {
label = "R(2:1|(2:(1:3)|(5:5|6|8|(1:10)(1:13)|12))) | DECL_VAR: java.lang.String moduleAndClass\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"\<this\>\")\lkotlin.coroutines.jvm.internal.DebugMetadata kotlin.coroutines.jvm.internal.DebugMetadata r0 = getDebugMetadataAnnotation(r8)\l}"];
subgraph cluster_Region_152845606 {
label = "R(2:(1:3)|(5:5|6|8|(1:10)(1:13)|12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1914426572 {
label = "IF [B:3:0x0009] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r0 == null) goto L3\l}"];
subgraph cluster_Region_1779530810 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_712773271 {
label = "R(5:5|6|8|(1:10)(1:13)|12)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000d|checkDebugMetadataVersion(1, r0.m7v())\lint int r1 = getLabel(r8)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|int r2 = r1 \< 0 ? \-1 : r0.m11l()[r1]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|PHI: r2 \l  PHI: (r2v3 'lineNumber' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.String java.lang.String r3 = kotlin.coroutines.jvm.internal.ModuleNameRetriever.INSTANCE.getModuleName(r8)\l}"];
subgraph cluster_IfRegion_302936403 {
label = "IF [B:11:0x0029] THEN: R(1:10) ELSE: R(1:13)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0029|if (r3 == null) goto L10\l}"];
subgraph cluster_Region_974690381 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002b|java.lang.String r4 = r0.m14c()\l}"];
}
subgraph cluster_Region_1042251752 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0030|java.lang.String r4 = r3 + '\/' + r0.m14c()\l}"];
}
}
Node_15 [shape=record,label="{15\:\ 0x0055|RETURN\l|return new java.lang.StackTraceElement(r4, r0.m10m(), r0.m13f(), r2)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001b}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0048|PHI: r4 \l  PHI: (r4v2 'moduleAndClass' java.lang.String) = (r4v1 'moduleAndClass' java.lang.String), (r4v3 'moduleAndClass' java.lang.String) binds: [B:13:0x0030, B:12:0x002b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001d}"];
MethodNode[shape=record,label="{public static final java.lang.StackTraceElement kotlin.coroutines.jvm.internal.DebugMetadataKt.getStackTraceElement((r8v0 '$this$getStackTraceElementImpl' kotlin.coroutines.jvm.internal.BaseContinuationImpl A[D('$this$getStackTraceElementImpl' kotlin.coroutines.jvm.internal.BaseContinuationImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0055 \-\> B:1:?, CROSS_EDGE: B:13:0x0030 \-\> B:14:0x0048, CROSS_EDGE: B:9:0x001d \-\> B:10:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_15 -> Node_1;
Node_0 -> Node_2;
Node_8 -> Node_10;
Node_14 -> Node_15;
Node_9 -> Node_10;
}

