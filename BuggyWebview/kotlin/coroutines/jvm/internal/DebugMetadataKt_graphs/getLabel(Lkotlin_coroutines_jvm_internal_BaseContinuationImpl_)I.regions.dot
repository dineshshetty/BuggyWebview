digraph "CFG forkotlin.coroutines.jvm.internal.DebugMetadataKt.getLabel(Lkotlin\/coroutines\/jvm\/internal\/BaseContinuationImpl;)I" {
subgraph cluster_Region_1574893880 {
label = "R(1:(3:2|3|8))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1462094913 {
label = "Try: R(3:2|3|8) catches: R(1:14)";
node [shape=record,color=blue];
subgraph cluster_Region_275759426 {
label = "R(3:2|3|8)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0001|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x0025, blocks: (B:2:0x0001, B:4:0x0017, B:7:0x001d), top: B:14:0x0001 \}\lCatch: Exception \-\> 0x0025\l|java.lang.reflect.Field java.lang.reflect.Field r0 = r4.getClass().getDeclaredField(\"label\")     \/\/ Catch: java.lang.Exception \-\> L25\lr0.setAccessible(true)     \/\/ Catch: java.lang.Exception \-\> L25\ljava.lang.Object java.lang.Object r2 = r0.get(r4)     \/\/ Catch: java.lang.Exception \-\> L25\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|java.lang.Integer r2 = r2 instanceof java.lang.Integer ? (java.lang.Integer) r2 : null\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return (r2 != null ? r2.intValue() : 0) \- 1\l}"];
}
subgraph cluster_Region_402647645 {
label = "R(1:14) | ExcHandler: Exception \-\> 0x0025\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0026|RETURN\lORIG_RETURN\l|return \-1\l}"];
}
}
}
subgraph cluster_Region_402647645 {
label = "R(1:14) | ExcHandler: Exception \-\> 0x0025\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0026|RETURN\lORIG_RETURN\l|return \-1\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0017|TryCatch #0 \{Exception \-\> 0x0025, blocks: (B:2:0x0001, B:4:0x0017, B:7:0x001d), top: B:14:0x0001 \}\lCatch: Exception \-\> 0x0025\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001b|PHI: r2 \l  PHI: (r2v3 java.lang.Integer) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001d|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0025, blocks: (B:2:0x0001, B:4:0x0017, B:7:0x001d), top: B:14:0x0001 \}\lCatch: Exception \-\> 0x0025\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0023|PHI: r2 \l  PHI: (r2v5 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0022}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001a}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0025|ExcHandler: Exception \-\> 0x0025\l}"];
MethodNode[shape=record,label="{private static final int kotlin.coroutines.jvm.internal.DebugMetadataKt.getLabel((r4v0 '$this$getLabel' kotlin.coroutines.jvm.internal.BaseContinuationImpl A[D('$this$getLabel' kotlin.coroutines.jvm.internal.BaseContinuationImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0026 \-\> B:13:0x0027, CROSS_EDGE: B:9:0x0022 \-\> B:10:0x0023, CROSS_EDGE: B:5:0x001a \-\> B:6:0x001b, CROSS_EDGE: B:14:0x0001 \-\> B:11:0x0025\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x0025, blocks: (B:2:0x0001, B:4:0x0017, B:7:0x001d), top: B:14:0x0001 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_16 -> Node_1;
Node_12 -> Node_1;
Node_12 -> Node_1;
Node_0 -> Node_14;
Node_14 -> Node_2;
Node_14 -> Node_11;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_10;
Node_7 -> Node_15;
Node_10 -> Node_16;
Node_15 -> Node_11;
Node_9 -> Node_10;
Node_5 -> Node_6;
Node_11 -> Node_12;
}

