digraph "CFG forkotlin.coroutines.jvm.internal.DebugMetadataKt.getStackTraceElement(Lkotlin\/coroutines\/jvm\/internal\/BaseContinuationImpl;)Ljava\/lang\/StackTraceElement;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  \l  (r8 I:java.lang.Object A[D('$this$getStackTraceElementImpl' kotlin.coroutines.jvm.internal.BaseContinuationImpl)])\l  (r0 I:java.lang.String)\l type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:kotlin.coroutines.jvm.internal.DebugMetadata) = \l  (r8 I:kotlin.coroutines.jvm.internal.BaseContinuationImpl A[D('$this$getStackTraceElementImpl' kotlin.coroutines.jvm.internal.BaseContinuationImpl)])\l type: STATIC call: kotlin.coroutines.jvm.internal.DebugMetadataKt.getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl):kotlin.coroutines.jvm.internal.DebugMetadata A[MD:(kotlin.coroutines.jvm.internal.BaseContinuationImpl):kotlin.coroutines.jvm.internal.DebugMetadata (m)] (LINE:42)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000d \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|RETURN\l|0x000b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: RETURN  (r0 I:java.lang.StackTraceElement) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:43)\l0x000e: INVOKE  (r2 I:int) = (r0 I:kotlin.coroutines.jvm.internal.DebugMetadata A[D('debugMetadata' kotlin.coroutines.jvm.internal.DebugMetadata)]) type: INTERFACE call: kotlin.coroutines.jvm.internal.DebugMetadata.v():int A[MD:():int (m)]\l0x0012: INVOKE  (r1 I:int), (r2 I:int) type: STATIC call: kotlin.coroutines.jvm.internal.DebugMetadataKt.checkDebugMetadataVersion(int, int):void A[MD:(int, int):void (m)]\l0x0015: INVOKE  (r1 I:int) = \l  (r8 I:kotlin.coroutines.jvm.internal.BaseContinuationImpl A[D('$this$getStackTraceElementImpl' kotlin.coroutines.jvm.internal.BaseContinuationImpl)])\l type: STATIC call: kotlin.coroutines.jvm.internal.DebugMetadataKt.getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl):int A[MD:(kotlin.coroutines.jvm.internal.BaseContinuationImpl):int (m)] (LINE:44)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: IF  (r1 I:??[int, byte, short, char] A[D('label' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:9:0x001d  (LINE:45)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: SGET  (r3 I:kotlin.coroutines.jvm.internal.ModuleNameRetriever) =  kotlin.coroutines.jvm.internal.ModuleNameRetriever.INSTANCE kotlin.coroutines.jvm.internal.ModuleNameRetriever  (LINE:46)\l0x0025: INVOKE  (r3 I:java.lang.String) = \l  (r3 I:kotlin.coroutines.jvm.internal.ModuleNameRetriever)\l  (r8 I:kotlin.coroutines.jvm.internal.BaseContinuationImpl A[D('$this$getStackTraceElementImpl' kotlin.coroutines.jvm.internal.BaseContinuationImpl)])\l type: VIRTUAL call: kotlin.coroutines.jvm.internal.ModuleNameRetriever.getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl):java.lang.String A[MD:(kotlin.coroutines.jvm.internal.BaseContinuationImpl):java.lang.String (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('moduleName' java.lang.String)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0030  (LINE:47)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: INVOKE  (r4 I:java.lang.String) = (r0 I:kotlin.coroutines.jvm.internal.DebugMetadata A[D('debugMetadata' kotlin.coroutines.jvm.internal.DebugMetadata)]) type: INTERFACE call: kotlin.coroutines.jvm.internal.DebugMetadata.c():java.lang.String A[MD:():java.lang.String (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|0x0048: NEW_INSTANCE  (r5 I:java.lang.StackTraceElement) =  java.lang.StackTraceElement  (LINE:48)\l0x004a: INVOKE  (r6 I:java.lang.String) = (r0 I:kotlin.coroutines.jvm.internal.DebugMetadata A[D('debugMetadata' kotlin.coroutines.jvm.internal.DebugMetadata)]) type: INTERFACE call: kotlin.coroutines.jvm.internal.DebugMetadata.m():java.lang.String A[MD:():java.lang.String (m)]\l0x004e: INVOKE  (r7 I:java.lang.String) = (r0 I:kotlin.coroutines.jvm.internal.DebugMetadata A[D('debugMetadata' kotlin.coroutines.jvm.internal.DebugMetadata)]) type: INTERFACE call: kotlin.coroutines.jvm.internal.DebugMetadata.f():java.lang.String A[MD:():java.lang.String (m)]\l0x0052: INVOKE  \l  (r5 I:java.lang.StackTraceElement)\l  (r4 I:java.lang.String A[D('moduleAndClass' java.lang.String)])\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l  (r2 I:int A[D('lineNumber' int)])\l type: DIRECT call: java.lang.StackTraceElement.\<init\>(java.lang.String, java.lang.String, java.lang.String, int):void A[MD:(java.lang.String, java.lang.String, java.lang.String, int):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|RETURN\l|0x0055: RETURN  (r5 I:java.lang.StackTraceElement) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0032: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0035: INVOKE  (r4 I:java.lang.StringBuilder), (r3 I:java.lang.String A[D('moduleName' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0038: CONST  (r5 I:??[int, float, short, byte, char]) = (47 ??[int, float, short, byte, char]) \l0x003a: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x003d: INVOKE  (r5 I:java.lang.String) = (r0 I:kotlin.coroutines.jvm.internal.DebugMetadata A[D('debugMetadata' kotlin.coroutines.jvm.internal.DebugMetadata)]) type: INTERFACE call: kotlin.coroutines.jvm.internal.DebugMetadata.c():java.lang.String A[MD:():java.lang.String (m)]\l0x0041: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0044: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: INVOKE  (r2 I:int[]) = (r0 I:kotlin.coroutines.jvm.internal.DebugMetadata A[D('debugMetadata' kotlin.coroutines.jvm.internal.DebugMetadata)]) type: INTERFACE call: kotlin.coroutines.jvm.internal.DebugMetadata.l():int[] A[MD:():int[] (m)]\l0x0021: AGET  (r2 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][]), (r1 I:??[int, short, byte, char] A[D('label' int)]) \l}"];
MethodNode[shape=record,label="{public static final java.lang.StackTraceElement kotlin.coroutines.jvm.internal.DebugMetadataKt.getStackTraceElement((r8 I:kotlin.coroutines.jvm.internal.BaseContinuationImpl A[D('$this$getStackTraceElementImpl' kotlin.coroutines.jvm.internal.BaseContinuationImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0055 \-\> B:1:?, CROSS_EDGE: B:13:0x0030 \-\> B:14:0x0048, CROSS_EDGE: B:9:0x001d \-\> B:10:0x0023\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x0055: r0 'debugMetadata' Lkotlin\/coroutines\/jvm\/internal\/DebugMetadata;\l  0x0019\-0x0055: r1 'label' I\l  0x0023\-0x0055: r2 'lineNumber' I\l  0x0029\-0x0055: r3 'moduleName' Ljava\/lang\/String;\l  0x0048\-0x0055: r4 'moduleAndClass' Ljava\/lang\/String;\l  \-1 \-0x0055: r8 '$this$getStackTraceElementImpl' Lkotlin\/coroutines\/jvm\/internal\/BaseContinuationImpl;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_13 -> Node_14;
Node_9 -> Node_10;
}

