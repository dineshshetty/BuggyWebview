digraph "CFG forkotlin.coroutines.jvm.internal.DebugMetadataKt.getSpilledVariableFieldMapping(Lkotlin\/coroutines\/jvm\/internal\/BaseContinuationImpl;)[Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  \l  (r10 I:java.lang.Object A[D('$this$getSpilledVariableFieldMapping' kotlin.coroutines.jvm.internal.BaseContinuationImpl)])\l  (r0 I:java.lang.String)\l type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:kotlin.coroutines.jvm.internal.DebugMetadata) = \l  (r10 I:kotlin.coroutines.jvm.internal.BaseContinuationImpl A[D('$this$getSpilledVariableFieldMapping' kotlin.coroutines.jvm.internal.BaseContinuationImpl)])\l type: STATIC call: kotlin.coroutines.jvm.internal.DebugMetadataKt.getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl):kotlin.coroutines.jvm.internal.DebugMetadata A[MD:(kotlin.coroutines.jvm.internal.BaseContinuationImpl):kotlin.coroutines.jvm.internal.DebugMetadata (m)] (LINE:121)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000d \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|RETURN\l|0x000b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: RETURN  (r0 I:java.lang.String[]) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: INVOKE  (r1 I:int) = (r0 I:kotlin.coroutines.jvm.internal.DebugMetadata A[D('debugMetadata' kotlin.coroutines.jvm.internal.DebugMetadata)]) type: INTERFACE call: kotlin.coroutines.jvm.internal.DebugMetadata.v():int A[MD:():int (m)] (LINE:122)\l0x0011: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0012: INVOKE  (r2 I:int), (r1 I:int) type: STATIC call: kotlin.coroutines.jvm.internal.DebugMetadataKt.checkDebugMetadataVersion(int, int):void A[MD:(int, int):void (m)]\l0x0015: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:123)\l0x0017: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x001a: INVOKE  (r2 I:int) = \l  (r10 I:kotlin.coroutines.jvm.internal.BaseContinuationImpl A[D('$this$getSpilledVariableFieldMapping' kotlin.coroutines.jvm.internal.BaseContinuationImpl)])\l type: STATIC call: kotlin.coroutines.jvm.internal.DebugMetadataKt.getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl):int A[MD:(kotlin.coroutines.jvm.internal.BaseContinuationImpl):int (m)] (LINE:124)\l0x001e: INVOKE  (r3 I:int[]) = (r0 I:kotlin.coroutines.jvm.internal.DebugMetadata A[D('debugMetadata' kotlin.coroutines.jvm.internal.DebugMetadata)]) type: INTERFACE call: kotlin.coroutines.jvm.internal.DebugMetadata.i():int[] A[MD:():int[] (m)] (LINE:125)\l0x0022: ARRAY_LENGTH  (r4 I:int) = (r3 I:??[]) \l0x0023: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0024: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|LOOP_START\lLOOP:0: B:7:0x0025\-\>B:11:0x003e\l|0x0025: IF  (r6 I:??[int, byte, short, char]) \>= (r4 I:??[int, byte, short, char])  \-\> B:14:0x0041 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0028: AGET  (r8 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][]), (r6 I:??[int, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('labelOfIndex' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('label' int)])  \-\> B:16:0x003e  (LINE:126)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: INVOKE  (r9 I:java.lang.String[]) = (r0 I:kotlin.coroutines.jvm.internal.DebugMetadata A[D('debugMetadata' kotlin.coroutines.jvm.internal.DebugMetadata)]) type: INTERFACE call: kotlin.coroutines.jvm.internal.DebugMetadata.s():java.lang.String[] A[MD:():java.lang.String[] (m)] (LINE:127)\l0x0030: AGET  (r9 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('i' int)]) \l0x0032: INVOKE  (r1 I:java.util.ArrayList A[D('res' java.util.ArrayList)]), (r9 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0035: INVOKE  (r9 I:java.lang.String[]) = (r0 I:kotlin.coroutines.jvm.internal.DebugMetadata A[D('debugMetadata' kotlin.coroutines.jvm.internal.DebugMetadata)]) type: INTERFACE call: kotlin.coroutines.jvm.internal.DebugMetadata.n():java.lang.String[] A[MD:():java.lang.String[] (m)] (LINE:128)\l0x0039: AGET  (r9 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('i' int)]) \l0x003b: INVOKE  (r1 I:java.util.ArrayList A[D('res' java.util.ArrayList)]), (r9 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|LOOP_END\lLOOP:0: B:7:0x0025\-\>B:11:0x003e\l|0x003e: ARITH  (r6 I:int) = (r6 I:int) + (1 int)  (LINE:125)\l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|0x0041: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('res' java.util.ArrayList)])  (LINE:131)\l0x0042: CHECK_CAST (r3 I:java.util.Collection) = (java.util.Collection) (r3 I:??[OBJECT, ARRAY]) \l0x0044: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0046: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('$this$toTypedArray$iv' java.util.Collection)])  (LINE:136)\l0x0047: NEW_ARRAY  (r5 I:java.lang.String[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[]  (LINE:138)\l0x0049: INVOKE  (r5 I:java.lang.Object[]) = (r6 I:java.util.Collection A[D('thisCollection$iv' java.util.Collection)]), (r5 I:java.lang.Object[]) type: INTERFACE call: java.util.Collection.toArray(java.lang.Object[]):java.lang.Object[] A[MD:\<T\>:(T[]):T[] (c)]\l0x004d: CONST_STR  (r7 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlin.Array\<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray\>\" \l0x004f: INVOKE  (r5 I:java.lang.Object), (r7 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0052: CHECK_CAST (r5 I:java.lang.String[]) = (java.lang.String[]) (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0054|RETURN\l|0x0054: RETURN  (r5 I:java.lang.String[])  (LINE:131)\l}"];
MethodNode[shape=record,label="{public static final java.lang.String[] kotlin.coroutines.jvm.internal.DebugMetadataKt.getSpilledVariableFieldMapping((r10 I:kotlin.coroutines.jvm.internal.BaseContinuationImpl A[D('$this$getSpilledVariableFieldMapping' kotlin.coroutines.jvm.internal.BaseContinuationImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x003e \-\> B:7:0x0025, CROSS_EDGE: B:9:0x002a \-\> B:11:0x003e, CROSS_EDGE: B:13:0x0054 \-\> B:1:?\lDebug Info:\l  0x0028\-0x0041: r7 'i' I\l  0x002a\-0x0041: r8 'labelOfIndex' I\l  0x0044\-0x0052: r3 '$this$toTypedArray$iv' Ljava\/util\/Collection;\l  0x0045\-0x0052: r4 '$i$f$toTypedArray' I\l  0x0047\-0x0052: r6 'thisCollection$iv' Ljava\/util\/Collection;\l  0x000d\-0x0054: r0 'debugMetadata' Lkotlin\/coroutines\/jvm\/internal\/DebugMetadata;\l  0x001a\-0x0054: r1 'res' Ljava\/util\/ArrayList;\l  0x001e\-0x0054: r2 'label' I\l  \-1 \-0x0054: r10 '$this$getSpilledVariableFieldMapping' Lkotlin\/coroutines\/jvm\/internal\/BaseContinuationImpl;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_15;
Node_15 -> Node_11;
Node_11 -> Node_7;
Node_16 -> Node_11;
Node_14 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_1;
}

