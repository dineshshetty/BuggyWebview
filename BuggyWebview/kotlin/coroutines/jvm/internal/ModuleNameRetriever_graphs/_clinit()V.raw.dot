digraph "CFG forkotlin.coroutines.jvm.internal.ModuleNameRetriever.\<clinit\>()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlin.coroutines.jvm.internal.ModuleNameRetriever) =  kotlin.coroutines.jvm.internal.ModuleNameRetriever \l0x0002: INVOKE  (r0 I:kotlin.coroutines.jvm.internal.ModuleNameRetriever) type: DIRECT call: kotlin.coroutines.jvm.internal.ModuleNameRetriever.\<init\>():void A[MD:():void (m)]\l0x0005: SPUT  (r0 I:kotlin.coroutines.jvm.internal.ModuleNameRetriever) kotlin.coroutines.jvm.internal.ModuleNameRetriever.INSTANCE kotlin.coroutines.jvm.internal.ModuleNameRetriever \l0x0007: NEW_INSTANCE  (r0 I:kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache) =  kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache  (LINE:61)\l0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: INVOKE  \l  (r0 I:kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache)\l  (r1 I:java.lang.reflect.Method)\l  (r1 I:java.lang.reflect.Method)\l  (r1 I:java.lang.reflect.Method)\l type: DIRECT call: kotlin.coroutines.jvm.internal.ModuleNameRetriever.Cache.\<init\>(java.lang.reflect.Method, java.lang.reflect.Method, java.lang.reflect.Method):void A[MD:(java.lang.reflect.Method, java.lang.reflect.Method, java.lang.reflect.Method):void (m)]\l0x000d: SPUT  (r0 I:kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache) kotlin.coroutines.jvm.internal.ModuleNameRetriever.notOnJava9 kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|RETURN\l|0x000f: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlin.coroutines.jvm.internal.ModuleNameRetriever.\<clinit\>()  | DONT_GENERATE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

