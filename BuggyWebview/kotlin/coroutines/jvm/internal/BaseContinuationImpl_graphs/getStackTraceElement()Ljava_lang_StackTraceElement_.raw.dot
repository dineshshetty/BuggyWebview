digraph "CFG forkotlin.coroutines.jvm.internal.BaseContinuationImpl.getStackTraceElement()Ljava\/lang\/StackTraceElement;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.StackTraceElement) = (r1 I:kotlin.coroutines.jvm.internal.BaseContinuationImpl) type: STATIC call: kotlin.coroutines.jvm.internal.DebugMetadataKt.getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl):java.lang.StackTraceElement A[MD:(kotlin.coroutines.jvm.internal.BaseContinuationImpl):java.lang.StackTraceElement (m)] (LINE:76)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:java.lang.StackTraceElement) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.StackTraceElement kotlin.coroutines.jvm.internal.BaseContinuationImpl.getStackTraceElement((r1 'this' I:kotlin.coroutines.jvm.internal.BaseContinuationImpl A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlin.coroutines.jvm.internal.CoroutineStackFrame.getStackTraceElement():java.lang.StackTraceElement]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

