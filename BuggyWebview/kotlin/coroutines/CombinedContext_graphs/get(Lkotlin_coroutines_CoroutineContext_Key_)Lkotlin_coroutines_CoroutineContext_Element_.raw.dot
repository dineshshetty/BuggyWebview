digraph "CFG forkotlin.coroutines.CombinedContext.get(Lkotlin\/coroutines\/CoroutineContext$Key;)Lkotlin\/coroutines\/CoroutineContext$Element;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"key\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('key' kotlin.coroutines.CoroutineContext$Key)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY])  (LINE:118)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|LOOP_START\lLOOP:0: B:17:0x0006\-\>B:23:0x0017\l|0x0007: IGET  (r1 I:kotlin.coroutines.CoroutineContext$Element) = (r0 I:kotlin.coroutines.CombinedContext A[D('cur' kotlin.coroutines.CombinedContext)]) kotlin.coroutines.CombinedContext.element kotlin.coroutines.CoroutineContext$Element  (LINE:120)\l0x0009: INVOKE  (r1 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r1 I:kotlin.coroutines.CoroutineContext$Element)\l  (r4 I:kotlin.coroutines.CoroutineContext$Key A[D('key' kotlin.coroutines.CoroutineContext$Key)])\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.Element.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0011 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|0x0011: IGET  (r1 I:kotlin.coroutines.CoroutineContext A[D('it' kotlin.coroutines.CoroutineContext$Element)]) = (r0 I:kotlin.coroutines.CombinedContext A[D('cur' kotlin.coroutines.CombinedContext)]) kotlin.coroutines.CombinedContext.left kotlin.coroutines.CoroutineContext  (LINE:121)\l0x0013: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('next' kotlin.coroutines.CoroutineContext)]) kotlin.coroutines.CombinedContext  (LINE:122)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|0x0015: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001b \l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|LOOP_END\lLOOP:0: B:17:0x0006\-\>B:23:0x0017\l|0x0017: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('cur' kotlin.coroutines.CombinedContext)]) = (r1 I:??[OBJECT, ARRAY] A[D('next' kotlin.coroutines.CoroutineContext)])  (LINE:123)\l0x0018: CHECK_CAST (r0 I:kotlin.coroutines.CombinedContext) = (kotlin.coroutines.CombinedContext) (r0 I:??[OBJECT, ARRAY] A[D('cur' kotlin.coroutines.CombinedContext)]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x001b|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x001b|0x001b: INVOKE  (r2 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r1 I:kotlin.coroutines.CoroutineContext A[D('next' kotlin.coroutines.CoroutineContext)])\l  (r4 I:kotlin.coroutines.CoroutineContext$Key A[D('key' kotlin.coroutines.CoroutineContext$Key)])\l type: INTERFACE call: kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)] (LINE:125)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001f|RETURN\l|0x001f: RETURN  (r2 I:E extends kotlin.coroutines.CoroutineContext$Element) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:197)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|RETURN\l|0x0010: RETURN  (r1 I:E extends kotlin.coroutines.CoroutineContext$Element A[D('it' kotlin.coroutines.CoroutineContext$Element)])  (LINE:120)\l}"];
MethodNode[shape=record,label="{public E extends kotlin.coroutines.CoroutineContext$Element kotlin.coroutines.CombinedContext.get((r3 'this' I:kotlin.coroutines.CombinedContext A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\> A[D('key' kotlin.coroutines.CoroutineContext$Key), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x0017 \-\> B:17:0x0006, CROSS_EDGE: B:25:0x001f \-\> B:15:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E extends kotlin.coroutines.CoroutineContext$Element]\lSIGNATURE: \<E::Lkotlin\/coroutines\/CoroutineContext$Element;\>(Lkotlin\/coroutines\/CoroutineContext$Key\<TE;\>;)TE;\lDebug Info:\l  0x000f\-0x0011: r1 'it' Lkotlin\/coroutines\/CoroutineContext$Element;\l  0x0010\-0x0011: r2 '$i$a$\-let\-CombinedContext$get$1' I\l  0x0006\-0x001f: r0 'cur' Lkotlin\/coroutines\/CombinedContext;\l  0x0013\-0x001f: r1 'next' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x001f: r4 'key' Lkotlin\/coroutines\/CoroutineContext$Key;\lMETHOD_OVERRIDE: [kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_21;
Node_18 -> Node_27[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_17;
Node_26 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_27 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_15;
}

