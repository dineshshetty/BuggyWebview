digraph "CFG forkotlin.coroutines.CombinedContext.containsAll(Lkotlin\/coroutines\/CombinedContext;)Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('context' kotlin.coroutines.CombinedContext)])  (LINE:156)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0001|LOOP_START\lLOOP:0: B:17:0x0001\-\>B:23:0x0012\l|0x0002: IGET  (r1 I:kotlin.coroutines.CoroutineContext$Element) = (r0 I:kotlin.coroutines.CombinedContext A[D('cur' kotlin.coroutines.CombinedContext)]) kotlin.coroutines.CombinedContext.element kotlin.coroutines.CoroutineContext$Element  (LINE:158)\l0x0004: INVOKE  (r1 I:boolean) = (r3 I:kotlin.coroutines.CombinedContext), (r1 I:kotlin.coroutines.CoroutineContext$Element) type: DIRECT call: kotlin.coroutines.CombinedContext.contains(kotlin.coroutines.CoroutineContext$Element):boolean A[MD:(kotlin.coroutines.CoroutineContext$Element):boolean (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x000c \l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|0x000c: IGET  (r1 I:kotlin.coroutines.CoroutineContext) = (r0 I:kotlin.coroutines.CombinedContext A[D('cur' kotlin.coroutines.CombinedContext)]) kotlin.coroutines.CombinedContext.left kotlin.coroutines.CoroutineContext  (LINE:159)\l0x000e: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('next' kotlin.coroutines.CoroutineContext)]) kotlin.coroutines.CombinedContext  (LINE:160)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|0x0010: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0016 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0012|LOOP_END\lLOOP:0: B:17:0x0001\-\>B:23:0x0012\l|0x0012: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('cur' kotlin.coroutines.CombinedContext)]) = (r1 I:??[OBJECT, ARRAY] A[D('next' kotlin.coroutines.CoroutineContext)])  (LINE:161)\l0x0013: CHECK_CAST (r0 I:kotlin.coroutines.CombinedContext) = (kotlin.coroutines.CombinedContext) (r0 I:??[OBJECT, ARRAY] A[D('cur' kotlin.coroutines.CombinedContext)]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|0x0016: CONST_STR  (r2 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlin.coroutines.CoroutineContext.Element\"  (LINE:163)\l0x0018: INVOKE  (r1 I:java.lang.Object A[D('next' kotlin.coroutines.CoroutineContext)]), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x001b: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('next' kotlin.coroutines.CoroutineContext)]) \l0x001c: CHECK_CAST (r2 I:kotlin.coroutines.CoroutineContext$Element) = (kotlin.coroutines.CoroutineContext$Element) (r2 I:??[OBJECT, ARRAY]) \l0x001e: INVOKE  (r2 I:boolean) = (r3 I:kotlin.coroutines.CombinedContext), (r2 I:kotlin.coroutines.CoroutineContext$Element) type: DIRECT call: kotlin.coroutines.CombinedContext.contains(kotlin.coroutines.CoroutineContext$Element):boolean A[MD:(kotlin.coroutines.CoroutineContext$Element):boolean (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0022|RETURN\l|0x0022: RETURN  (r2 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x000a|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|RETURN\l|0x000a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{private final boolean kotlin.coroutines.CombinedContext.containsAll((r3 'this' I:kotlin.coroutines.CombinedContext A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlin.coroutines.CombinedContext A[D('context' kotlin.coroutines.CombinedContext), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x0012 \-\> B:17:0x0001, CROSS_EDGE: B:25:0x0022 \-\> B:15:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0022: r0 'cur' Lkotlin\/coroutines\/CombinedContext;\l  0x000e\-0x0022: r1 'next' Lkotlin\/coroutines\/CoroutineContext;\l  \-1 \-0x0022: r4 'context' Lkotlin\/coroutines\/CombinedContext;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_21;
Node_18 -> Node_27[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_17;
Node_26 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_27 -> Node_19;
Node_19 -> Node_15;
}

