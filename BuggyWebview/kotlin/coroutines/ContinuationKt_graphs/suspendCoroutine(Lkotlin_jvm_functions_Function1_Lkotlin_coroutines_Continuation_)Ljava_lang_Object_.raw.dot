digraph "CFG forkotlin.coroutines.ContinuationKt.suspendCoroutine(Lkotlin\/jvm\/functions\/Function1;Lkotlin\/coroutines\/Continuation;)Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0001|0x0001: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:144)\l0x0002: INVOKE  (r0 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('$completion' kotlin.coroutines.Continuation)]) \l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: NEW_INSTANCE  (r2 I:kotlin.coroutines.SafeContinuation) =  kotlin.coroutines.SafeContinuation  (LINE:145)\l0x0009: INVOKE  (r3 I:kotlin.coroutines.Continuation) = (r0 I:kotlin.coroutines.Continuation A[D('c' kotlin.coroutines.Continuation)]) type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.intercepted(kotlin.coroutines.Continuation):kotlin.coroutines.Continuation A[MD:\<T\>:(kotlin.coroutines.Continuation\<? super T\>):kotlin.coroutines.Continuation\<T\> (m)]\l0x000d: INVOKE  (r2 I:kotlin.coroutines.SafeContinuation), (r3 I:kotlin.coroutines.Continuation) type: DIRECT call: kotlin.coroutines.SafeContinuation.\<init\>(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<? super T\>):void (m)]\l0x0010: INVOKE  \l  (r4 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)])\l  (r2 I:java.lang.Object A[D('safe' kotlin.coroutines.SafeContinuation)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[MD:(P1):R (m)] (LINE:146)\l0x0013: INVOKE  (r0 I:java.lang.Object A[D('c' kotlin.coroutines.Continuation)]) = (r2 I:kotlin.coroutines.SafeContinuation A[D('safe' kotlin.coroutines.SafeContinuation)]) type: VIRTUAL call: kotlin.coroutines.SafeContinuation.getOrThrow():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:147)\l0x0017: INVOKE  (r1 I:java.lang.Object) =  type: STATIC call: kotlin.coroutines.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:144)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0020 \l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|0x001d: INVOKE  (r5 I:kotlin.coroutines.Continuation A[D('$completion' kotlin.coroutines.Continuation)]) type: STATIC call: kotlin.coroutines.jvm.internal.DebugProbesKt.probeCoroutineSuspended(kotlin.coroutines.Continuation):void A[MD:(kotlin.coroutines.Continuation\<?\>):void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0021: INVOKE  (r1 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.mark(int):void A[MD:(int):void (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|RETURN\l|0x0024: RETURN  (r0 I:java.lang.Object) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static final java.lang.Object kotlin.coroutines.ContinuationKt.suspendCoroutine((r4 I:kotlin.jvm.functions.Function1\<? super kotlin.coroutines.Continuation\<? super T\>, kotlin.Unit\> A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.coroutines.Continuation\<? super T\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x001b \-\> B:12:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0017: r0 'c' Lkotlin\/coroutines\/Continuation;\l  0x0007\-0x0017: r1 '$i$a$\-suspendCoroutineUninterceptedOrReturn\-ContinuationKt$suspendCoroutine$3' I\l  0x0010\-0x0017: r2 'safe' Lkotlin\/coroutines\/SafeContinuation;\l  \-1 \-0x0024: r4 'block' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x0024: r5 '$completion' Lkotlin\/coroutines\/Continuation;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/coroutines\/Continuation\<\-TT;\>;Lkotlin\/Unit;\>;Lkotlin\/coroutines\/Continuation\<\-TT;\>;)Ljava\/lang\/Object;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

