digraph "CFG forkotlin.coroutines.AbstractCoroutineContextElement.get(Lkotlin\/coroutines\/CoroutineContext$Key;)Lkotlin\/coroutines\/CoroutineContext$Element;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlin.coroutines.CoroutineContext$Element) = \l  (r1 I:kotlin.coroutines.CoroutineContext$Element)\l  (r2 I:kotlin.coroutines.CoroutineContext$Key A[D('key' kotlin.coroutines.CoroutineContext$Key)])\l type: STATIC call: kotlin.coroutines.CoroutineContext.Element.DefaultImpls.get(kotlin.coroutines.CoroutineContext$Element, kotlin.coroutines.CoroutineContext$Key):kotlin.coroutines.CoroutineContext$Element A[MD:\<E extends kotlin.coroutines.CoroutineContext$Element\>:(kotlin.coroutines.CoroutineContext$Element, kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element (m)] (LINE:14)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:E extends kotlin.coroutines.CoroutineContext$Element) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public E extends kotlin.coroutines.CoroutineContext$Element kotlin.coroutines.AbstractCoroutineContextElement.get((r1 'this' I:kotlin.coroutines.AbstractCoroutineContextElement A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\> A[D('key' kotlin.coroutines.CoroutineContext$Key), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0004: r2 'key' Lkotlin\/coroutines\/CoroutineContext$Key;\lTYPE_VARS: [E extends kotlin.coroutines.CoroutineContext$Element]\lSIGNATURE: \<E::Lkotlin\/coroutines\/CoroutineContext$Element;\>(Lkotlin\/coroutines\/CoroutineContext$Key\<TE;\>;)TE;\lMETHOD_OVERRIDE: [kotlin.coroutines.CoroutineContext.get(kotlin.coroutines.CoroutineContext$Key\<E extends kotlin.coroutines.CoroutineContext$Element\>):E extends kotlin.coroutines.CoroutineContext$Element]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

