digraph "CFG forkotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.createCoroutineUnintercepted(Lkotlin\/jvm\/functions\/Function1;Lkotlin\/coroutines\/Continuation;)Lkotlin\/coroutines\/Continuation;" {
subgraph cluster_Region_397135559 {
label = "R(2:1|(2:(1:4)|(3:6|(1:8)(1:11)|10))) | DECL_VAR: kotlin.coroutines.jvm.internal.ContinuationImpl null\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"completion\")\lkotlin.coroutines.Continuation kotlin.coroutines.Continuation r0 = kotlin.coroutines.jvm.internal.DebugProbes.probeCoroutineCreated(r5)\l}"];
subgraph cluster_Region_412789340 {
label = "R(2:(1:4)|(3:6|(1:8)(1:11)|10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_61041803 {
label = "IF [B:15:0x0010] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0010|if ((r4 instanceof kotlin.coroutines.jvm.internal.BaseContinuationImpl) != false) goto L3\l}"];
subgraph cluster_Region_273506703 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return ((kotlin.coroutines.jvm.internal.BaseContinuationImpl) r4).create(r0)\l}"];
}
}
subgraph cluster_Region_1756418094 {
label = "R(3:6|(1:8)(1:11)|10)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x001a|kotlin.coroutines.CoroutineContext kotlin.coroutines.CoroutineContext r2 = r0.getContext()\l}"];
subgraph cluster_IfRegion_1072372618 {
label = "IF [B:18:0x0021] THEN: R(1:8) ELSE: R(1:11)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0021|if (r2 == kotlin.coroutines.EmptyCoroutineContext.INSTANCE) goto L8\l}"];
subgraph cluster_Region_231043343 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0023|kotlin.coroutines.Continuation r3 = new kotlin.coroutines.intrinsics.C0877xa50de660(r0, r4)\l}"];
}
subgraph cluster_Region_1154567046 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x002b|kotlin.coroutines.Continuation r3 = new kotlin.coroutines.intrinsics.C0878xa50de661(r0, r2, r4)\l}"];
}
}
Node_22 [shape=record,label="{22\:\ 0x0033|RETURN\lORIG_RETURN\l|return r3\l}"];
}
}
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0012}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0032|PHI: r3 \l  PHI: (r3v3 kotlin.coroutines.Continuation\<kotlin.Unit\>) = (r3v2 kotlin.coroutines.jvm.internal.ContinuationImpl), (r3v5 kotlin.coroutines.jvm.internal.RestrictedContinuationImpl) binds: [B:20:0x002b, B:19:0x0023] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public static final kotlin.coroutines.Continuation\<kotlin.Unit\> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.createCoroutineUnintercepted((r4v0 kotlin.jvm.functions.Function1\<? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\> A[D('$this$createCoroutineUnintercepted' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'completion' kotlin.coroutines.Continuation\<? super T\> A[D('completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0032 \-\> B:22:0x0033, CROSS_EDGE: B:20:0x002b \-\> B:21:0x0032\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/coroutines\/Continuation\<\-TT;\>;+Ljava\/lang\/Object;\>;Lkotlin\/coroutines\/Continuation\<\-TT;\>;)Lkotlin\/coroutines\/Continuation\<Lkotlin\/Unit;\>;\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_23 -> Node_13;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_22 -> Node_13;
Node_12 -> Node_14;
Node_16 -> Node_23;
Node_21 -> Node_22;
}

