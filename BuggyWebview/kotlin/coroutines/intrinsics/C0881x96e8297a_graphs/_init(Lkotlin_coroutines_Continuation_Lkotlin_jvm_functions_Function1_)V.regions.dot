digraph "CFG forkotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.\<init\>(Lkotlin\/coroutines\/Continuation;Lkotlin\/jvm\/functions\/Function1;)V" {
subgraph cluster_Region_763425005 {
label = "R(2:1|(1:1))";
node [shape=record,color=blue];
Node_InsnContainer_1448885476 [shape=record,label="{|super(r2)\l}"];
subgraph cluster_Region_1300587556 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|r1.$block = r3\lkotlin.jvm.internal.Intrinsics.checkNotNull(r2, \"null cannot be cast to non\-null type kotlin.coroutines.Continuation\<kotlin.Any?\>\")\l}"];
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000a}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.\<init\>((r1v0 'this' kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1 A[IMMUTABLE_TYPE, THIS]), (r2v0 kotlin.coroutines.Continuation\<? super T\> A[D('$completion' kotlin.coroutines.Continuation), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlin.jvm.functions.Function1\<? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\> A[D('$block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | NO_SKIP_ARGS\lANONYMOUS_CONSTRUCTOR\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l \-\> 'super' call moved to the top of the method (can break code semantics)\l DEBUG: \l \-\> Multi\-variable search result rejected for r3v0, resolved type: kotlin.jvm.functions.Function1\<? super kotlin.coroutines.Continuation\<? super T\>, ? extends java.lang.Object\>\}\lSIGNATURE: (Lkotlin\/coroutines\/Continuation\<\-TT;\>;Lkotlin\/jvm\/functions\/Function1\<\-Lkotlin\/coroutines\/Continuation\<\-TT;\>;+Ljava\/lang\/Object;\>;)V\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_0 -> Node_2;
Node_3 -> Node_1;
}

