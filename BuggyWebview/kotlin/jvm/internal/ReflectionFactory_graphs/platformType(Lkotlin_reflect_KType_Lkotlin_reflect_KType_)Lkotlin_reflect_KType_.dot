digraph "CFG forkotlin.jvm.internal.ReflectionFactory.platformType(Lkotlin\/reflect\/KType;Lkotlin\/reflect\/KType;)Lkotlin\/reflect\/KType;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0014|RETURN\l|return new kotlin.jvm.internal.TypeReference(r5.getClassifier(), r5.getArguments(), r6, ((kotlin.jvm.internal.TypeReference) r5).getFlags$kotlin_stdlib())\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlin.reflect.KType kotlin.jvm.internal.ReflectionFactory.platformType((r4v0 'this' kotlin.jvm.internal.ReflectionFactory A[IMMUTABLE_TYPE, THIS]), (r5v0 'lowerBound' kotlin.reflect.KType A[D('lowerBound' kotlin.reflect.KType), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'upperBound' kotlin.reflect.KType A[D('upperBound' kotlin.reflect.KType), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

