digraph "CFG forkotlin.jvm.internal.ReflectionFactory.setUpperBounds(Lkotlin\/reflect\/KTypeParameter;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('typeParameter' kotlin.reflect.KTypeParameter)])  (LINE:94)\l0x0001: CHECK_CAST (r0 I:kotlin.jvm.internal.TypeParameterReference) = (kotlin.jvm.internal.TypeParameterReference) (r0 I:??[OBJECT, ARRAY]) \l0x0003: INVOKE  \l  (r0 I:kotlin.jvm.internal.TypeParameterReference)\l  (r3 I:java.util.List A[D('bounds' java.util.List\<kotlin.reflect.KType\>)])\l type: VIRTUAL call: kotlin.jvm.internal.TypeParameterReference.setUpperBounds(java.util.List):void A[MD:(java.util.List\<? extends kotlin.reflect.KType\>):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|RETURN\l|0x0006: RETURN    (LINE:95)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.jvm.internal.ReflectionFactory.setUpperBounds((r1 'this' I:kotlin.jvm.internal.ReflectionFactory A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.reflect.KTypeParameter A[D('typeParameter' kotlin.reflect.KTypeParameter), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.util.List\<kotlin.reflect.KType\> A[D('bounds' java.util.List\<kotlin.reflect.KType\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0006: r2 'typeParameter' Lkotlin\/reflect\/KTypeParameter;\l  0x0000\-0x0006: r3 'bounds' Ljava\/util\/List;, signature: Ljava\/util\/List\<Lkotlin\/reflect\/KType;\>;\lSIGNATURE: (Lkotlin\/reflect\/KTypeParameter;Ljava\/util\/List\<Lkotlin\/reflect\/KType;\>;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

