digraph "CFG forkotlin.jvm.internal.ReflectionFactory.typeOf(Lkotlin\/reflect\/KClassifier;Ljava\/util\/List;Z)Lkotlin\/reflect\/KType;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:kotlin.jvm.internal.TypeReference) =  kotlin.jvm.internal.TypeReference  (LINE:84)\l0x0002: INVOKE  \l  (r0 I:kotlin.jvm.internal.TypeReference)\l  (r2 I:kotlin.reflect.KClassifier A[D('klass' kotlin.reflect.KClassifier)])\l  (r3 I:java.util.List A[D('arguments' java.util.List\<kotlin.reflect.KTypeProjection\>)])\l  (r4 I:boolean A[D('isMarkedNullable' boolean)])\l type: DIRECT call: kotlin.jvm.internal.TypeReference.\<init\>(kotlin.reflect.KClassifier, java.util.List, boolean):void A[MD:(kotlin.reflect.KClassifier, java.util.List\<kotlin.reflect.KTypeProjection\>, boolean):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|RETURN\l|0x0005: RETURN  (r0 I:kotlin.reflect.KType) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlin.reflect.KType kotlin.jvm.internal.ReflectionFactory.typeOf((r1 'this' I:kotlin.jvm.internal.ReflectionFactory A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.reflect.KClassifier A[D('klass' kotlin.reflect.KClassifier), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.util.List\<kotlin.reflect.KTypeProjection\> A[D('arguments' java.util.List\<kotlin.reflect.KTypeProjection\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('isMarkedNullable' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0005: r2 'klass' Lkotlin\/reflect\/KClassifier;\l  0x0000\-0x0005: r3 'arguments' Ljava\/util\/List;, signature: Ljava\/util\/List\<Lkotlin\/reflect\/KTypeProjection;\>;\l  \-1 \-0x0005: r4 'isMarkedNullable' Z\lSIGNATURE: (Lkotlin\/reflect\/KClassifier;Ljava\/util\/List\<Lkotlin\/reflect\/KTypeProjection;\>;Z)Lkotlin\/reflect\/KType;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

