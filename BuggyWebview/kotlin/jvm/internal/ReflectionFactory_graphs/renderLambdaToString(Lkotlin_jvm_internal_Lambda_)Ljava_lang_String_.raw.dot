digraph "CFG forkotlin.jvm.internal.ReflectionFactory.renderLambdaToString(Lkotlin\/jvm\/internal\/Lambda;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.String) = \l  (r1 I:kotlin.jvm.internal.ReflectionFactory)\l  (r2 I:kotlin.jvm.internal.FunctionBase A[D('lambda' kotlin.jvm.internal.Lambda)])\l type: VIRTUAL call: kotlin.jvm.internal.ReflectionFactory.renderLambdaToString(kotlin.jvm.internal.FunctionBase):java.lang.String A[MD:(kotlin.jvm.internal.FunctionBase):java.lang.String (m)] (LINE:39)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:java.lang.String) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.String kotlin.jvm.internal.ReflectionFactory.renderLambdaToString((r1 'this' I:kotlin.jvm.internal.ReflectionFactory A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.jvm.internal.Lambda A[D('lambda' kotlin.jvm.internal.Lambda), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0004: r2 'lambda' Lkotlin\/jvm\/internal\/Lambda;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

