digraph "CFG forkotlin.jvm.internal.TypeReference.getArrayClassName(Ljava\/lang\/Class;)Ljava\/lang\/String;" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0001}"];
Node_39 [shape=record,label="{39\:\ 0x0007|if (kotlin.jvm.internal.Intrinsics.areEqual(r2, boolean[].class) == false) goto L5\l}"];
Node_40 [shape=record,label="{40\:\ 0x0009|SYNTHETIC\lRETURN\l|return \"kotlin.BooleanArray\"\l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x000c}"];
Node_42 [shape=record,label="{42\:\ 0x0012|if (kotlin.jvm.internal.Intrinsics.areEqual(r2, char[].class) == false) goto L8\l}"];
Node_43 [shape=record,label="{43\:\ 0x0014|SYNTHETIC\lRETURN\l|return \"kotlin.CharArray\"\l}"];
Node_44 [shape=record,label="{44\:\ 0x0017}"];
Node_45 [shape=record,label="{45\:\ 0x001d|if (kotlin.jvm.internal.Intrinsics.areEqual(r2, byte[].class) == false) goto L11\l}"];
Node_46 [shape=record,label="{46\:\ 0x001f|SYNTHETIC\lRETURN\l|return \"kotlin.ByteArray\"\l}"];
Node_47 [shape=record,label="{47\:\ 0x0022}"];
Node_48 [shape=record,label="{48\:\ 0x0028|if (kotlin.jvm.internal.Intrinsics.areEqual(r2, short[].class) == false) goto L14\l}"];
Node_49 [shape=record,label="{49\:\ 0x002a|SYNTHETIC\lRETURN\l|return \"kotlin.ShortArray\"\l}"];
Node_50 [shape=record,label="{50\:\ 0x002d}"];
Node_51 [shape=record,label="{51\:\ 0x0033|if (kotlin.jvm.internal.Intrinsics.areEqual(r2, int[].class) == false) goto L17\l}"];
Node_52 [shape=record,label="{52\:\ 0x0035|SYNTHETIC\lRETURN\l|return \"kotlin.IntArray\"\l}"];
Node_53 [shape=record,label="{53\:\ 0x0038}"];
Node_54 [shape=record,label="{54\:\ 0x003e|if (kotlin.jvm.internal.Intrinsics.areEqual(r2, float[].class) == false) goto L20\l}"];
Node_55 [shape=record,label="{55\:\ 0x0040|SYNTHETIC\lRETURN\l|return \"kotlin.FloatArray\"\l}"];
Node_56 [shape=record,label="{56\:\ 0x0043}"];
Node_57 [shape=record,label="{57\:\ 0x0049|if (kotlin.jvm.internal.Intrinsics.areEqual(r2, long[].class) == false) goto L23\l}"];
Node_58 [shape=record,label="{58\:\ 0x004b|SYNTHETIC\lRETURN\l|return \"kotlin.LongArray\"\l}"];
Node_59 [shape=record,label="{59\:\ 0x004e}"];
Node_60 [shape=record,label="{60\:\ 0x0054|if (kotlin.jvm.internal.Intrinsics.areEqual(r2, double[].class) == false) goto L26\l}"];
Node_61 [shape=record,label="{61\:\ 0x0056|SYNTHETIC\lRETURN\l|return \"kotlin.DoubleArray\"\l}"];
Node_62 [shape=record,label="{62\:\ 0x0059|RETURN\lORIG_RETURN\l|return \"kotlin.Array\"\l}"];
MethodNode[shape=record,label="{private final java.lang.String kotlin.jvm.internal.TypeReference.getArrayClassName((r1v0 'this' kotlin.jvm.internal.TypeReference A[IMMUTABLE_TYPE, THIS]), (r2v0 java.lang.Class\<?\> A[D('$this$arrayClassName' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:43:0x0014 \-\> B:63:0x005b, CROSS_EDGE: B:46:0x001f \-\> B:63:0x005b, CROSS_EDGE: B:49:0x002a \-\> B:63:0x005b, CROSS_EDGE: B:52:0x0035 \-\> B:63:0x005b, CROSS_EDGE: B:55:0x0040 \-\> B:63:0x005b, CROSS_EDGE: B:58:0x004b \-\> B:63:0x005b, CROSS_EDGE: B:61:0x0056 \-\> B:63:0x005b, CROSS_EDGE: B:62:0x0059 \-\> B:63:0x005b\lINLINE_NOT_NEEDED\lSIGNATURE: (Ljava\/lang\/Class\<*\>;)Ljava\/lang\/String;\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_37;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_37;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_37;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_37;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_37;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_37;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_37;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_37;
Node_62 -> Node_37;
}

