digraph "CFG forkotlin.jvm.internal.TypeReference.asString(Z)Ljava\/lang\/String;" {
subgraph cluster_Region_1283826430 {
label = "R(9:1|2|6|(1:8)(1:(1:31)(1:(1:34)(1:(1:38)(1:39))))|10|13|15|(2:17|(2:19|(2:(2:21|22)|(2:24|25))))|27) | DECL_VAR: java.lang.String klass\l";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0000|kotlin.reflect.KClassifier kotlin.reflect.KClassifier r0 = getClassifier()\l}"];
Node_46 [shape=record,label="{46\:\ 0x0007|kotlin.reflect.KClass r0 = r0 instanceof kotlin.reflect.KClass ? (kotlin.reflect.KClass) r0 : null\l}"];
Node_51 [shape=record,label="{51\:\ 0x0013|PHI: r2 \l  PHI: (r2v1 java.lang.Class A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|java.lang.Class r0 = r0 != null ? kotlin.jvm.JvmClassMapping.getJavaClass(r0) : null\l}"];
subgraph cluster_IfRegion_1118376558 {
label = "IF [B:52:0x0015] THEN: R(1:8) ELSE: R(1:(1:31)(1:(1:34)(1:(1:38)(1:39))))";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x0015|if (r0 == null) goto L8\l}"];
subgraph cluster_Region_99390505 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0017|java.lang.String r1 = getClassifier().toString()\l}"];
}
subgraph cluster_Region_1790626807 {
label = "R(1:(1:31)(1:(1:34)(1:(1:38)(1:39)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_791122108 {
label = "IF [B:55:0x0024] THEN: R(1:31) ELSE: R(1:(1:34)(1:(1:38)(1:39))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x0024|if ((r13.flags & 4) != 0) goto L31\l}"];
subgraph cluster_Region_247228029 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x0026|java.lang.String r1 = \"kotlin.Nothing\"\l}"];
}
subgraph cluster_Region_1428006659 {
label = "R(1:(1:34)(1:(1:38)(1:39))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_347571519 {
label = "IF [B:58:0x002d] THEN: R(1:34) ELSE: R(1:(1:38)(1:39)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x002d|if (r0.isArray() == true) goto L34\l}"];
subgraph cluster_Region_967423906 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x002f|java.lang.String r1 = getArrayClassName(r0)\l}"];
}
subgraph cluster_Region_18206699 {
label = "R(1:(1:38)(1:39)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1482317883 {
label = "IF [B:60:0x0034, B:62:0x003a] THEN: R(1:38) ELSE: R(1:39) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x0034|if (r14 == true) goto L36\l}"];
Node_62 [shape=record,label="{62\:\ 0x003a|ADDED_TO_REGION\l|if (r0.isPrimitive() == true) goto L38\l}"];
subgraph cluster_Region_2052905523 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x003c|kotlin.reflect.KClassifier kotlin.reflect.KClassifier r1 = getClassifier()\lkotlin.jvm.internal.Intrinsics.checkNotNull(r1, \"null cannot be cast to non\-null type kotlin.reflect.KClass\<*\>\")\ljava.lang.String r1 = kotlin.jvm.JvmClassMapping.getJavaObjectType((kotlin.reflect.KClass) r1).getName()\l}"];
}
subgraph cluster_Region_1382687548 {
label = "R(1:39)";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x0050|java.lang.String r1 = r0.getName()\l}"];
}
}
}
}
}
}
}
}
Node_66 [shape=record,label="{66\:\ 0x005f|java.lang.String r2 = getArguments().isEmpty() ? \"\" : kotlin.collections.CollectionsKt.joinToString$default(getArguments(), \", \", \"\<\", \"\>\", 0, null, new kotlin.jvm.internal.TypeReference$asString$args$1(r13), 24, null)\l}"];
Node_70 [shape=record,label="{70\:\ 0x0090|java.lang.String r3 = isMarkedNullable() ? \"?\" : \"\"\l}"];
Node_72 [shape=record,label="{72\:\ 0x0094|PHI: r3 \l  PHI: (r3v1 'nullable' java.lang.String) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|java.lang.String java.lang.String r4 = r1 + r2 + r3\lkotlin.reflect.KType kotlin.reflect.KType r5 = r13.platformTypeUpperBound\l}"];
subgraph cluster_IfRegion_1897641900 {
label = "IF [B:73:0x00aa] THEN: R(2:17|(2:19|(2:(2:21|22)|(2:24|25)))) ELSE: null";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x00aa|if ((r5 instanceof kotlin.jvm.internal.TypeReference) != false) goto L17\l}"];
subgraph cluster_Region_71125349 {
label = "R(2:17|(2:19|(2:(2:21|22)|(2:24|25))))";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x00ac|java.lang.String java.lang.String r6 = ((kotlin.jvm.internal.TypeReference) r5).asString(true)\l}"];
subgraph cluster_IfRegion_102511723 {
label = "IF [B:75:0x00b8] THEN: R(2:19|(2:(2:21|22)|(2:24|25))) ELSE: null";
node [shape=record,color=blue];
Node_75 [shape=record,label="{75\:\ 0x00b8|if (kotlin.jvm.internal.Intrinsics.areEqual(r6, r4) == false) goto L19\l}"];
subgraph cluster_Region_1036802381 {
label = "R(2:19|(2:(2:21|22)|(2:24|25)))";
node [shape=record,color=blue];
Node_77 [shape=record,label="{77\:\ 0x00bb}"];
subgraph cluster_Region_779979832 {
label = "R(2:(2:21|22)|(2:24|25))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_437124057 {
label = "IF [B:78:0x00d0] THEN: R(2:21|22) ELSE: null";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x00d0|if (kotlin.jvm.internal.Intrinsics.areEqual(r6, r4 + '?') == true) goto L21\l}"];
subgraph cluster_Region_2012211563 {
label = "R(2:21|22)";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x00d2}"];
Node_84 [shape=record,label="{84\:\ ?|SYNTHETIC\lRETURN\l|return r4 + '!'\l}"];
}
}
subgraph cluster_Region_373515875 {
label = "R(2:24|25)";
node [shape=record,color=blue];
Node_80 [shape=record,label="{80\:\ 0x00e4}"];
Node_85 [shape=record,label="{85\:\ ?|SYNTHETIC\lRETURN\l|return '(' + r4 + \"..\" + r6 + ')'\l}"];
}
}
}
}
}
}
Node_83 [shape=record,label="{83\:\ 0x0105|RETURN\lORIG_RETURN\l|return r4\l}"];
}
Node_43 [shape=record,color=red,label="{43\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0009}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x000d|PHI: r0 \l  PHI: (r0v2 kotlin.reflect.KClass) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x000f}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x0054|PHI: r1 \l  PHI: (r1v12 'klass' java.lang.String) = (r1v4 'klass' java.lang.String), (r1v9 'klass' java.lang.String), (r1v10 'klass' java.lang.String), (r1v11 'klass' java.lang.String), (r1v14 'klass' java.lang.String) binds: [B:64:0x0050, B:63:0x003c, B:59:0x002f, B:56:0x0026, B:53:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x0061}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x008a|PHI: r2 \l  PHI: (r2v11 'args' java.lang.String) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_71 [shape=record,color=red,label="{71\:\ 0x0092}"];
Node_44 [shape=record,color=red,label="{44\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_82 [shape=record,color=red,label="{82\:\ 0x0104}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x0063}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x0020}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x0029}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x0036}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x000c}"];
MethodNode[shape=record,label="{private final java.lang.String kotlin.jvm.internal.TypeReference.asString((r13v0 'this' kotlin.jvm.internal.TypeReference A[IMMUTABLE_TYPE, THIS]), (r14v0 'convertPrimitiveToWrapper' boolean A[D('convertPrimitiveToWrapper' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:80:0x00e4 \-\> B:83:0x0105, CROSS_EDGE: B:82:0x0104 \-\> B:83:0x0105, CROSS_EDGE: B:73:0x00aa \-\> B:82:0x0104, CROSS_EDGE: B:70:0x0090 \-\> B:72:0x0094, CROSS_EDGE: B:68:0x0063 \-\> B:69:0x008a, CROSS_EDGE: B:56:0x0026 \-\> B:65:0x0054, CROSS_EDGE: B:59:0x002f \-\> B:65:0x0054, CROSS_EDGE: B:63:0x003c \-\> B:65:0x0054, CROSS_EDGE: B:64:0x0050 \-\> B:65:0x0054, CROSS_EDGE: B:60:0x0034 \-\> B:64:0x0050, CROSS_EDGE: B:49:0x000d \-\> B:51:0x0013, CROSS_EDGE: B:48:0x000c \-\> B:49:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_43;Node_45 -> Node_46;
Node_46 -> Node_47;
Node_46 -> Node_48;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_52 -> Node_54[style=dashed];
Node_53 -> Node_65;
Node_55 -> Node_56;
Node_55 -> Node_57[style=dashed];
Node_56 -> Node_65;
Node_58 -> Node_59;
Node_58 -> Node_60[style=dashed];
Node_59 -> Node_65;
Node_60 -> Node_61;
Node_60 -> Node_64[style=dashed];
Node_62 -> Node_63;
Node_62 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_65;
Node_66 -> Node_67;
Node_66 -> Node_68;
Node_70 -> Node_71;
Node_70 -> Node_72;
Node_72 -> Node_73;
Node_73 -> Node_74;
Node_73 -> Node_82[style=dashed];
Node_74 -> Node_75;
Node_75 -> Node_77;
Node_75 -> Node_82[style=dashed];
Node_77 -> Node_78;
Node_78 -> Node_79;
Node_78 -> Node_80[style=dashed];
Node_79 -> Node_84;
Node_84 -> Node_44;
Node_80 -> Node_85;
Node_85 -> Node_44;
Node_83 -> Node_44;
Node_43 -> Node_45;
Node_47 -> Node_49;
Node_49 -> Node_50;
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_65 -> Node_66;
Node_67 -> Node_69;
Node_69 -> Node_70;
Node_71 -> Node_72;
Node_82 -> Node_83;
Node_68 -> Node_69;
Node_54 -> Node_55;
Node_57 -> Node_58;
Node_61 -> Node_62;
Node_48 -> Node_49;
}

