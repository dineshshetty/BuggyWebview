digraph "CFG forkotlin.jvm.internal.TypeReference.\<init\>(Lkotlin\/reflect\/KClassifier;Ljava\/util\/List;Z)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"classifier\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('classifier' kotlin.reflect.KClassifier)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"arguments\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('arguments' java.util.List)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:21)\l0x000b: INVOKE  \l  (r1 I:kotlin.jvm.internal.TypeReference)\l  (r2 I:kotlin.reflect.KClassifier A[D('classifier' kotlin.reflect.KClassifier)])\l  (r3 I:java.util.List A[D('arguments' java.util.List)])\l  (r0 I:kotlin.reflect.KType)\l  (r4 I:int A[D('isMarkedNullable' boolean)])\l type: DIRECT call: kotlin.jvm.internal.TypeReference.\<init\>(kotlin.reflect.KClassifier, java.util.List, kotlin.reflect.KType, int):void A[MD:(kotlin.reflect.KClassifier, java.util.List\<kotlin.reflect.KTypeProjection\>, kotlin.reflect.KType, int):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|RETURN\l|0x000e: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void kotlin.jvm.internal.TypeReference.\<init\>((r1 'this' I:kotlin.jvm.internal.TypeReference A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.reflect.KClassifier A[D('classifier' kotlin.reflect.KClassifier), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.util.List\<kotlin.reflect.KTypeProjection\> A[D('arguments' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('isMarkedNullable' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000e: r2 'classifier' Lkotlin\/reflect\/KClassifier;\l  \-1 \-0x000e: r3 'arguments' Ljava\/util\/List;\l  \-1 \-0x000e: r4 'isMarkedNullable' Z\lSIGNATURE: (Lkotlin\/reflect\/KClassifier;Ljava\/util\/List\<Lkotlin\/reflect\/KTypeProjection;\>;Z)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

