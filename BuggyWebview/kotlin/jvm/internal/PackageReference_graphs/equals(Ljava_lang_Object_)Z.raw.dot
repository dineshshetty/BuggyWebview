digraph "CFG forkotlin.jvm.internal.PackageReference.equals(Ljava\/lang\/Object;)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)]) kotlin.jvm.internal.PackageReference  (LINE:19)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0017 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: INVOKE  (r0 I:java.lang.Class) = (r2 I:kotlin.jvm.internal.PackageReference) type: VIRTUAL call: kotlin.jvm.internal.PackageReference.getJClass():java.lang.Class A[MD:():java.lang.Class\<?\> (m)]\l0x0008: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)]) \l0x0009: CHECK_CAST (r1 I:kotlin.jvm.internal.PackageReference) = (kotlin.jvm.internal.PackageReference) (r1 I:??[OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:java.lang.Class) = (r1 I:kotlin.jvm.internal.PackageReference) type: VIRTUAL call: kotlin.jvm.internal.PackageReference.getJClass():java.lang.Class A[MD:():java.lang.Class\<?\> (m)]\l0x000f: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r1 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0017 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0015|SYNTHETIC\lRETURN\l|0x0015: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0018: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|RETURN\lORIG_RETURN\l|0x0017: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlin.jvm.internal.PackageReference.equals((r2 'this' I:kotlin.jvm.internal.PackageReference A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[D('other' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0017 \-\> B:18:0x0018, CROSS_EDGE: B:13:0x0002 \-\> B:17:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r3 'other' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

