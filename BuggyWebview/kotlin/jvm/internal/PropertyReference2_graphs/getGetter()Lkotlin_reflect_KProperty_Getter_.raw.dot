digraph "CFG forkotlin.jvm.internal.PropertyReference2.getGetter()Lkotlin\/reflect\/KProperty$Getter;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlin.reflect.KProperty2$Getter) = (r1 I:kotlin.jvm.internal.PropertyReference2) type: VIRTUAL call: kotlin.jvm.internal.PropertyReference2.getGetter():kotlin.reflect.KProperty2$Getter A[MD:():kotlin.reflect.KProperty2$Getter (m)] (LINE:12)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:kotlin.reflect.KProperty$Getter) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ kotlin.reflect.KProperty$Getter kotlin.jvm.internal.PropertyReference2.getGetter((r1 'this' I:kotlin.jvm.internal.PropertyReference2 A[IMMUTABLE_TYPE, THIS]))  | DONT_GENERATE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlin.reflect.KProperty.getGetter():kotlin.reflect.KProperty$Getter\<V\>]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

