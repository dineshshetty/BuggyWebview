digraph "CFG forkotlin.jvm.internal.TypeParameterReference.setUpperBounds(Ljava\/util\/List;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"upperBounds\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('upperBounds' java.util.List)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: IGET  (r0 I:java.util.List\<? extends kotlin.reflect.KType\>) = (r3 I:kotlin.jvm.internal.TypeParameterReference) kotlin.jvm.internal.TypeParameterReference.bounds java.util.List  (LINE:30)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x000c \l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|0x0009: IPUT  \l  (r4 I:java.util.List\<? extends kotlin.reflect.KType\> A[D('upperBounds' java.util.List)])\l  (r3 I:kotlin.jvm.internal.TypeParameterReference)\l kotlin.jvm.internal.TypeParameterReference.bounds java.util.List  (LINE:33)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000b|RETURN\l|0x000b: RETURN    (LINE:34)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:30)\l0x000e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:31)\l0x0010: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0013: CONST_STR  (r2 I:java.lang.String) =  \"Upper bounds of type parameter '\" \l0x0015: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0018: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x001b: CONST_STR  (r2 I:java.lang.String) =  \"' have already been initialized.\" \l0x001d: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0020: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0024: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0028: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|0x002b: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final void kotlin.jvm.internal.TypeParameterReference.setUpperBounds((r3 'this' I:kotlin.jvm.internal.TypeParameterReference A[IMMUTABLE_TYPE, THIS]), (r4 I:java.util.List\<? extends kotlin.reflect.KType\> A[D('upperBounds' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x002b \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002b: r4 'upperBounds' Ljava\/util\/List;\lSIGNATURE: (Ljava\/util\/List\<+Lkotlin\/reflect\/KType;\>;)V\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

