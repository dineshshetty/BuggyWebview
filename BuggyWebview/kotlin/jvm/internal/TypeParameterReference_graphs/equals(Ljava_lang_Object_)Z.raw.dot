digraph "CFG forkotlin.jvm.internal.TypeParameterReference.equals(Ljava\/lang\/Object;)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)]) kotlin.jvm.internal.TypeParameterReference  (LINE:37)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0024 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|0x0004: IGET  (r0 I:java.lang.Object) = (r2 I:kotlin.jvm.internal.TypeParameterReference) kotlin.jvm.internal.TypeParameterReference.container java.lang.Object \l0x0006: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)]) \l0x0007: CHECK_CAST (r1 I:kotlin.jvm.internal.TypeParameterReference) = (kotlin.jvm.internal.TypeParameterReference) (r1 I:??[OBJECT, ARRAY]) \l0x0009: IGET  (r1 I:java.lang.Object) = (r1 I:kotlin.jvm.internal.TypeParameterReference) kotlin.jvm.internal.TypeParameterReference.container java.lang.Object \l0x000b: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r1 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0024 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|0x0011: INVOKE  (r0 I:java.lang.String) = (r2 I:kotlin.jvm.internal.TypeParameterReference) type: VIRTUAL call: kotlin.jvm.internal.TypeParameterReference.getName():java.lang.String A[MD:():java.lang.String (m)]\l0x0015: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('other' java.lang.Object)]) \l0x0016: CHECK_CAST (r1 I:kotlin.jvm.internal.TypeParameterReference) = (kotlin.jvm.internal.TypeParameterReference) (r1 I:??[OBJECT, ARRAY]) \l0x0018: INVOKE  (r1 I:java.lang.String) = (r1 I:kotlin.jvm.internal.TypeParameterReference) type: VIRTUAL call: kotlin.jvm.internal.TypeParameterReference.getName():java.lang.String A[MD:():java.lang.String (m)]\l0x001c: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r1 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0020|0x0020: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0024 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0022|SYNTHETIC\lRETURN\l|0x0022: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0025: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0024|RETURN\lORIG_RETURN\l|0x0024: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0025: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlin.jvm.internal.TypeParameterReference.equals((r2 'this' I:kotlin.jvm.internal.TypeParameterReference A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[D('other' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0024 \-\> B:22:0x0025, CROSS_EDGE: B:17:0x000f \-\> B:21:0x0024, CROSS_EDGE: B:15:0x0002 \-\> B:21:0x0024\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0025: r3 'other' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_13;
Node_21 -> Node_13;
}

