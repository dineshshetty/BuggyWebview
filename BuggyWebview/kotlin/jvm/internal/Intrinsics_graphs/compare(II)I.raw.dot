digraph "CFG forkotlin.jvm.internal.Intrinsics.compare(II)I" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IF  (r1 I:??[int, byte, short, char] A[D('thisVal' int)]) \>= (r2 I:??[int, byte, short, char] A[D('anotherVal' int)])  \-\> B:14:0x0004  (LINE:163)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|SYNTHETIC\lRETURN\l|0x0002: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0009: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('thisVal' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('anotherVal' int)])  \-\> B:16:0x0008 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|SYNTHETIC\lRETURN\l|0x0006: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|RETURN\lORIG_RETURN\l|0x0008: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0009: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public static int kotlin.jvm.internal.Intrinsics.compare((r1 I:int A[D('thisVal' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('anotherVal' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0006 \-\> B:17:0x0009, CROSS_EDGE: B:16:0x0008 \-\> B:17:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0009: r1 'thisVal' I\l  \-1 \-0x0009: r2 'anotherVal' I\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_11;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_11;
Node_16 -> Node_11;
}

