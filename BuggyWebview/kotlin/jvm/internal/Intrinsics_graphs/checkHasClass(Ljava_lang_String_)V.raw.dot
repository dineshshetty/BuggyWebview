digraph "CFG forkotlin.jvm.internal.Intrinsics.checkHasClass(Ljava\/lang\/String;)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (47 ??[int, float, short, byte, char])  (LINE:227)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (46 ??[int, float, short, byte, char]) \l0x0004: INVOKE  (r0 I:java.lang.String) = (r5 I:java.lang.String A[D('internalName' java.lang.String)]), (r0 I:char), (r1 I:char) type: VIRTUAL call: java.lang.String.replace(char, char):java.lang.String A[MD:(char, char):java.lang.String (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_13 [shape=record,label="{13\:\ 0x0008|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{ClassNotFoundException \-\> 0x000d, blocks: (B:13:0x0008), top: B:18:0x0008 \}\lCatch: ClassNotFoundException \-\> 0x000d\l|0x0008: INVOKE  (r0 I:java.lang.String A[D('fqName' java.lang.String)]) type: STATIC call: java.lang.Class.forName(java.lang.String):java.lang.Class A[Catch: ClassNotFoundException \-\> 0x000d, MD:(java.lang.String):java.lang.Class\<?\> throws java.lang.ClassNotFoundException (c), TRY_ENTER, TRY_LEAVE] (LINE:229)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|RETURN\l|0x000c: RETURN    (LINE:236)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|ExcHandler: ClassNotFoundException \-\> 0x000d\l|0x000d: MOVE_EXCEPTION  (r1 I:java.lang.ClassNotFoundException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: ClassNotFoundException \-\> 0x000d] (LINE:231)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000e|0x000e: NEW_INSTANCE  (r2 I:java.lang.ClassNotFoundException) =  java.lang.ClassNotFoundException  (LINE:232)\l0x0010: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0012: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0015: CONST_STR  (r4 I:java.lang.String) =  \"Class \" \l0x0017: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001a: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String A[D('fqName' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001d: CONST_STR  (r4 I:java.lang.String) =  \" is not found. Please update the Kotlin runtime to the latest version\" \l0x001f: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0022: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0026: INVOKE  \l  (r2 I:java.lang.ClassNotFoundException)\l  (r3 I:java.lang.String)\l  (r1 I:java.lang.Throwable A[D('e' java.lang.ClassNotFoundException)])\l type: DIRECT call: java.lang.ClassNotFoundException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l0x0029: INVOKE  (r2 I:java.lang.Throwable) = (r2 I:java.lang.Throwable) type: STATIC call: kotlin.jvm.internal.Intrinsics.sanitizeStackTrace(java.lang.Throwable):java.lang.Throwable A[MD:\<T extends java.lang.Throwable\>:(T extends java.lang.Throwable):T extends java.lang.Throwable (m)]\l0x002d: CHECK_CAST (r2 I:java.lang.ClassNotFoundException) = (java.lang.ClassNotFoundException) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x002f|0x002f: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void kotlin.jvm.internal.Intrinsics.checkHasClass((r5 I:java.lang.String A[D('internalName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x002f \-\> B:11:?, CROSS_EDGE: B:18:0x0008 \-\> B:15:0x000d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x002f: r0 'fqName' Ljava\/lang\/String;\l  0x000e\-0x002f: r1 'e' Ljava\/lang\/ClassNotFoundException;\l  \-1 \-0x002f: r5 'internalName' Ljava\/lang\/String;\lTryCatch #0 \{ClassNotFoundException \-\> 0x000d, blocks: (B:13:0x0008), top: B:18:0x0008 \}\lEXCEPTIONS:[Ljava\/lang\/ClassNotFoundException;]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_18;
Node_18 -> Node_13;
Node_18 -> Node_15;
Node_13 -> Node_14;
Node_13 -> Node_19;
Node_14 -> Node_11;
Node_19 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_11;
}

