digraph "CFG forkotlin.jvm.internal.ClassReference.Companion.getClassSimpleName(Ljava\/lang\/Class;)Ljava\/lang\/String;" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"jClass\" \l0x0002: INVOKE  (r10 I:java.lang.Object A[D('jClass' java.lang.Class)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0006: INVOKE  (r0 I:boolean) = (r10 I:java.lang.Class A[D('jClass' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.isAnonymousClass():boolean A[MD:():boolean (c)] (LINE:166)\l0x000a: CONST_STR  (r1 I:java.lang.String) =  \"Array\" \l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0012 \l}"];
Node_41 [shape=record,label="{41\:\ 0x000f|0x000f: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_67 [shape=record,label="{67\:\ ?|SYNTHETIC\lRETURN\l|0x00bc: RETURN  (r1 I:java.lang.String) A[SYNTHETIC] (LINE:181)\l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0012|0x0012: INVOKE  (r0 I:boolean) = (r10 I:java.lang.Class A[D('jClass' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.isLocalClass():boolean A[MD:():boolean (c)] (LINE:167)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x006f \l}"];
Node_44 [shape=record,label="{44\:\ 0x0018|0x0018: INVOKE  (r0 I:java.lang.String) = (r10 I:java.lang.Class A[D('jClass' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.getSimpleName():java.lang.String A[MD:():java.lang.String (c)] (LINE:168)\l0x001c: INVOKE  (r1 I:java.lang.reflect.Method) = (r10 I:java.lang.Class A[D('jClass' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.getEnclosingMethod():java.lang.reflect.Method A[MD:():java.lang.reflect.Method (c)] (LINE:169)\l0x0020: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0021: CONST  (r4 I:??[int, float, short, byte, char]) = (36 ??[int, float, short, byte, char]) \l0x0023: CONST_STR  (r5 I:java.lang.String) =  \"name\" \l}"];
Node_45 [shape=record,label="{45\:\ 0x0025|0x0025: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0044 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0027|0x0027: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:206)\l0x0028: INVOKE  (r0 I:java.lang.Object A[D('name' java.lang.String)]), (r5 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)] (LINE:169)\l0x002b: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002d: INVOKE  (r7 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0030: INVOKE  (r8 I:java.lang.String) = (r1 I:java.lang.reflect.Method A[D('method' java.lang.reflect.Method)]) type: VIRTUAL call: java.lang.reflect.Method.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x0034: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0037: INVOKE  (r7 I:java.lang.StringBuilder), (r4 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x003a: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x003e: INVOKE  (r1 I:java.lang.String A[D('method' java.lang.reflect.Method)]) = \l  (r0 I:java.lang.String A[D('name' java.lang.String)])\l  (r7 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r2 I:java.lang.Object)\l type: STATIC call: kotlin.text.StringsKt.substringAfter$default(java.lang.String, java.lang.String, java.lang.String, int, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.String, java.lang.String, int, java.lang.Object):java.lang.String (m)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0042|0x0042: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('method' java.lang.reflect.Method)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:? \l}"];
Node_68 [shape=record,label="{68\:\ ?|SYNTHETIC\lRETURN\l|0x00bc: RETURN  (r1 I:java.lang.String) A[SYNTHETIC] (LINE:181)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0044|0x0044: INVOKE  (r1 I:java.lang.reflect.Constructor) = (r10 I:java.lang.Class A[D('jClass' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.getEnclosingConstructor():java.lang.reflect.Constructor A[MD:():java.lang.reflect.Constructor\<?\> (c)] (LINE:170)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0048|0x0048: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0066 \l}"];
Node_50 [shape=record,label="{50\:\ 0x004a|0x004a: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:206)\l0x004b: INVOKE  (r0 I:java.lang.Object A[D('name' java.lang.String)]), (r5 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)] (LINE:170)\l0x004e: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0050: INVOKE  (r5 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0053: INVOKE  (r7 I:java.lang.String) = (r1 I:java.lang.reflect.Constructor A[D('constructor' java.lang.reflect.Constructor)]) type: VIRTUAL call: java.lang.reflect.Constructor.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x0057: INVOKE  (r5 I:java.lang.StringBuilder), (r7 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x005a: INVOKE  (r5 I:java.lang.StringBuilder), (r4 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x005d: INVOKE  (r4 I:java.lang.String) = (r5 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0061: INVOKE  (r1 I:java.lang.String A[D('constructor' java.lang.reflect.Constructor)]) = \l  (r0 I:java.lang.String A[D('name' java.lang.String)])\l  (r4 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r2 I:java.lang.Object)\l type: STATIC call: kotlin.text.StringsKt.substringAfter$default(java.lang.String, java.lang.String, java.lang.String, int, java.lang.Object):java.lang.String A[MD:(java.lang.String, java.lang.String, java.lang.String, int, java.lang.Object):java.lang.String (m)]\l}"];
Node_69 [shape=record,label="{69\:\ ?|SYNTHETIC\lRETURN\l|0x00bc: RETURN  (r1 I:java.lang.String) A[SYNTHETIC] (LINE:181)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0066|0x0067: INVOKE  (r0 I:java.lang.Object A[D('name' java.lang.String)]), (r5 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)] (LINE:171)\l0x006a: INVOKE  (r1 I:java.lang.String) = \l  (r0 I:java.lang.String A[D('name' java.lang.String)])\l  (r4 I:char)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r2 I:java.lang.Object)\l type: STATIC call: kotlin.text.StringsKt.substringAfter$default(java.lang.String, char, java.lang.String, int, java.lang.Object):java.lang.String A[MD:(java.lang.String, char, java.lang.String, int, java.lang.Object):java.lang.String (m)]\l}"];
Node_70 [shape=record,label="{70\:\ ?|SYNTHETIC\lRETURN\l|0x00bc: RETURN  (r1 I:java.lang.String) A[SYNTHETIC] (LINE:181)\l}"];
Node_52 [shape=record,label="{52\:\ 0x006f|0x006f: INVOKE  (r0 I:boolean) = (r10 I:java.lang.Class A[D('jClass' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.isArray():boolean A[MD:():boolean (c)] (LINE:173)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0073|0x0073: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x00a7 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0075|0x0075: INVOKE  (r0 I:java.lang.Class) = (r10 I:java.lang.Class A[D('jClass' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.getComponentType():java.lang.Class A[MD:():java.lang.Class\<?\> (c)] (LINE:174)\l0x007a: INVOKE  (r3 I:boolean) = (r0 I:java.lang.Class A[D('componentType' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.isPrimitive():boolean A[MD:():boolean (c)] (LINE:176)\l}"];
Node_55 [shape=record,label="{55\:\ 0x007e|0x007e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x00a1 \l}"];
Node_56 [shape=record,label="{56\:\ 0x0080|0x0080: INVOKE  (r3 I:java.util.Map) =  type: STATIC call: kotlin.jvm.internal.ClassReference.access$getSimpleNames$cp():java.util.Map A[MD:():java.util.Map (m)]\l0x0084: INVOKE  (r4 I:java.lang.String) = (r0 I:java.lang.Class A[D('componentType' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x0088: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.Map), (r4 I:java.lang.Object) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x008c: CHECK_CAST (r3 I:java.lang.String) = (java.lang.String) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x008e|0x008e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x00a1 \l}"];
Node_58 [shape=record,label="{58\:\ 0x0090|0x0090: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0092: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0095: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0098: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x009b: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_60 [shape=record,label="{60\:\ 0x00a1|0x00a1: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x00a5  (LINE:175)\l}"];
Node_62 [shape=record,label="{62\:\ 0x00a5|0x00a5: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY])  (LINE:175)\l}"];
Node_71 [shape=record,label="{71\:\ ?|SYNTHETIC\lRETURN\l|0x00bc: RETURN  (r1 I:java.lang.String) A[SYNTHETIC] (LINE:181)\l}"];
Node_73 [shape=record,label="{73\:\ ?|SYNTHETIC\lRETURN\l|0x00bc: RETURN  (r1 I:java.lang.String) A[SYNTHETIC] (LINE:181)\l}"];
Node_63 [shape=record,label="{63\:\ 0x00a7|0x00a7: INVOKE  (r0 I:java.util.Map) =  type: STATIC call: kotlin.jvm.internal.ClassReference.access$getSimpleNames$cp():java.util.Map A[MD:():java.util.Map (m)] (LINE:180)\l0x00ab: INVOKE  (r1 I:java.lang.String) = (r10 I:java.lang.Class A[D('jClass' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x00af: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r1 I:java.lang.Object) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x00b3: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x00b4: CHECK_CAST (r1 I:java.lang.String) = (java.lang.String) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_64 [shape=record,label="{64\:\ 0x00b6|0x00b6: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:? \l}"];
Node_65 [shape=record,label="{65\:\ 0x00b8|0x00b8: INVOKE  (r1 I:java.lang.String) = (r10 I:java.lang.Class A[D('jClass' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.getSimpleName():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_66 [shape=record,label="{66\:\ 0x00bc|RETURN\lORIG_RETURN\l|0x00bc: RETURN  (r1 I:java.lang.String)  (LINE:181)\l}"];
Node_72 [shape=record,label="{72\:\ ?|SYNTHETIC\lRETURN\l|0x00bc: RETURN  (r1 I:java.lang.String) A[SYNTHETIC] (LINE:181)\l}"];
MethodNode[shape=record,label="{public final java.lang.String kotlin.jvm.internal.ClassReference.Companion.getClassSimpleName((r9 'this' I:kotlin.jvm.internal.ClassReference$Companion A[IMMUTABLE_TYPE, THIS]), (r10 I:java.lang.Class\<?\> A[D('jClass' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:50:0x004a \-\> B:66:0x00bc, CROSS_EDGE: B:51:0x0066 \-\> B:66:0x00bc, CROSS_EDGE: B:47:0x0042 \-\> B:66:0x00bc, CROSS_EDGE: B:45:0x0025 \-\> B:48:0x0044, CROSS_EDGE: B:62:0x00a5 \-\> B:66:0x00bc, CROSS_EDGE: B:60:0x00a1 \-\> B:66:0x00bc, CROSS_EDGE: B:57:0x008e \-\> B:60:0x00a1, CROSS_EDGE: B:55:0x007e \-\> B:60:0x00a1, CROSS_EDGE: B:65:0x00b8 \-\> B:66:0x00bc, CROSS_EDGE: B:64:0x00b6 \-\> B:66:0x00bc\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0027\-0x0042: r1 'method' Ljava\/lang\/reflect\/Method;\l  0x0028\-0x0042: r6 '$i$a$\-let\-ClassReference$Companion$getClassSimpleName$1' I\l  0x004a\-0x0065: r1 'constructor' Ljava\/lang\/reflect\/Constructor;\l  0x004b\-0x0065: r6 '$i$a$\-let\-ClassReference$Companion$getClassSimpleName$2' I\l  0x001c\-0x006e: r0 'name' Ljava\/lang\/String;\l  0x0079\-0x00a4: r0 'componentType' Ljava\/lang\/Class;\l  0x00a5\-0x00a7: r0 'componentType' Ljava\/lang\/Class;\l  \-1 \-0x00bc: r10 'jClass' Ljava\/lang\/Class;\lSIGNATURE: (Ljava\/lang\/Class\<*\>;)Ljava\/lang\/String;\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_67;
Node_67 -> Node_38;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_52;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_48;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_68;
Node_68 -> Node_38;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_69;
Node_69 -> Node_38;
Node_51 -> Node_70;
Node_70 -> Node_38;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_63;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_60;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_60;
Node_58 -> Node_60;
Node_60 -> Node_62;
Node_60 -> Node_73[style=dashed];
Node_62 -> Node_71;
Node_71 -> Node_38;
Node_73 -> Node_38;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_72;
Node_65 -> Node_66;
Node_66 -> Node_38;
Node_72 -> Node_38;
}

