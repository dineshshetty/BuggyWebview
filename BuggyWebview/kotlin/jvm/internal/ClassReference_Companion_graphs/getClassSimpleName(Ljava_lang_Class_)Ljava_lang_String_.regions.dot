digraph "CFG forkotlin.jvm.internal.ClassReference.Companion.getClassSimpleName(Ljava\/lang\/Class;)Ljava\/lang\/String;" {
subgraph cluster_Region_528418395 {
label = "R(2:1|(2:(1:4)|(1:(4:8|(2:10|(1:12))|13|(2:(2:15|16)|(2:17|18)))(1:(2:30|31)(3:21|(1:25)|26))))) | DECL_VAR: java.lang.String null\l";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"jClass\")\ljava.lang.String r2 = null\l}"];
subgraph cluster_Region_1568853160 {
label = "R(2:(1:4)|(1:(4:8|(2:10|(1:12))|13|(2:(2:15|16)|(2:17|18)))(1:(2:30|31)(3:21|(1:25)|26))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_537596939 {
label = "IF [B:40:0x000d] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x000d|if (r10.isAnonymousClass() == true) goto L3\l}"];
subgraph cluster_Region_2007446871 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1222653912 {
label = "R(1:(4:8|(2:10|(1:12))|13|(2:(2:15|16)|(2:17|18)))(1:(2:30|31)(3:21|(1:25)|26)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_55330272 {
label = "IF [B:43:0x0016] THEN: R(4:8|(2:10|(1:12))|13|(2:(2:15|16)|(2:17|18))) ELSE: R(1:(2:30|31)(3:21|(1:25)|26))";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0016|if (r10.isLocalClass() != false) goto L8\l}"];
subgraph cluster_Region_1268019039 {
label = "R(4:8|(2:10|(1:12))|13|(2:(2:15|16)|(2:17|18)))";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0018|java.lang.String java.lang.String r0 = r10.getSimpleName()\ljava.lang.reflect.Method java.lang.reflect.Method r1 = r10.getEnclosingMethod()\l}"];
subgraph cluster_IfRegion_1252547647 {
label = "IF [B:45:0x0025] THEN: R(2:10|(1:12)) ELSE: null";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0025|if (r1 != null) goto L10\l}"];
subgraph cluster_Region_293734393 {
label = "R(2:10|(1:12))";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0027|kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"name\")\ljava.lang.String java.lang.String r1 = kotlin.text.StringsKt.substringAfter$default(r0, r1.getName() + kotlin.text.Typography.dollar, (java.lang.String) null, 2, (java.lang.Object) null)\l}"];
subgraph cluster_IfRegion_1436177935 {
label = "IF [B:47:0x0042] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x0042|if (r1 != null) goto L12\l}"];
subgraph cluster_Region_116051647 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
}
}
}
}
Node_48 [shape=record,label="{48\:\ 0x0044|java.lang.reflect.Constructor java.lang.reflect.Constructor r1 = r10.getEnclosingConstructor()\l}"];
subgraph cluster_Region_2074063566 {
label = "R(2:(2:15|16)|(2:17|18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1268000604 {
label = "IF [B:49:0x0048] THEN: R(2:15|16) ELSE: null";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0048|if (r1 != null) goto L15\l}"];
subgraph cluster_Region_789983449 {
label = "R(2:15|16)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x004a|kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"name\")\l}"];
Node_69 [shape=record,label="{69\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.text.StringsKt.substringAfter$default(r0, r1.getName() + kotlin.text.Typography.dollar, (java.lang.String) null, 2, (java.lang.Object) null)\l}"];
}
}
subgraph cluster_Region_573448626 {
label = "R(2:17|18)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0066|kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"name\")\l}"];
Node_70 [shape=record,label="{70\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.text.StringsKt.substringAfter$default(r0, (char) kotlin.text.Typography.dollar, (java.lang.String) null, 2, (java.lang.Object) null)\l}"];
}
}
}
subgraph cluster_Region_895233383 {
label = "R(1:(2:30|31)(3:21|(1:25)|26)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2093712099 {
label = "IF [B:53:0x0073] THEN: R(2:30|31) ELSE: R(3:21|(1:25)|26) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0073|if (r10.isArray() == false) goto L30\l}"];
subgraph cluster_Region_697497375 {
label = "R(2:30|31)";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x00a7|java.lang.String java.lang.String r1 = (java.lang.String) kotlin.jvm.internal.ClassReference.simpleNames.get(r10.getName())\l}"];
Node_64 [shape=record,label="{64\:\ 0x00b6|RETURN\l|return r1 == null ? r10.getSimpleName() : r1\l}"];
}
subgraph cluster_Region_1105425897 {
label = "R(3:21|(1:25)|26)";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0075|java.lang.Class java.lang.Class r0 = r10.getComponentType()\l}"];
subgraph cluster_IfRegion_1312317864 {
label = "IF [B:55:0x007e, B:57:0x008e] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x007e|if (r0.isPrimitive() != false) goto L23\l}"];
Node_57 [shape=record,label="{57\:\ 0x008e|ADDED_TO_REGION\l|if ((r3 = (java.lang.String) kotlin.jvm.internal.ClassReference.simpleNames.get(r0.getName())) != null) goto L25\l}"];
subgraph cluster_Region_1809698446 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0090|java.lang.String r2 = r3 + \"Array\"\l}"];
}
}
Node_60 [shape=record,label="{60\:\ 0x00a1|RETURN\lPHI: r2 \l  PHI: (r2v1 java.lang.String) = (r2v0 java.lang.String), (r2v0 java.lang.String), (r2v3 java.lang.String) binds: [B:55:0x007e, B:57:0x008e, B:58:0x0090] A[DONT_GENERATE, DONT_INLINE]\l|return r2 == null ? \"Array\" : r2\l}"];
}
}
}
}
}
}
}
Node_37 [shape=record,color=red,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x000f}"];
Node_38 [shape=record,color=red,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0012}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x006f}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x0080}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x00a5}"];
Node_71 [shape=record,color=red,label="{71\:\ ?|SYNTHETIC\l}"];
Node_73 [shape=record,color=red,label="{73\:\ ?|SYNTHETIC\l}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x00b8}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x00bc|ORIG_RETURN\l}"];
Node_72 [shape=record,color=red,label="{72\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final java.lang.String kotlin.jvm.internal.ClassReference.Companion.getClassSimpleName((r9v0 'this' kotlin.jvm.internal.ClassReference$Companion A[IMMUTABLE_TYPE, THIS]), (r10v0 'jClass' java.lang.Class\<?\> A[D('jClass' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:50:0x004a \-\> B:66:0x00bc, CROSS_EDGE: B:51:0x0066 \-\> B:66:0x00bc, CROSS_EDGE: B:47:0x0042 \-\> B:66:0x00bc, CROSS_EDGE: B:45:0x0025 \-\> B:48:0x0044, CROSS_EDGE: B:62:0x00a5 \-\> B:66:0x00bc, CROSS_EDGE: B:60:0x00a1 \-\> B:66:0x00bc, CROSS_EDGE: B:57:0x008e \-\> B:60:0x00a1, CROSS_EDGE: B:55:0x007e \-\> B:60:0x00a1, CROSS_EDGE: B:65:0x00b8 \-\> B:66:0x00bc, CROSS_EDGE: B:64:0x00b6 \-\> B:66:0x00bc\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/lang\/Class\<*\>;)Ljava\/lang\/String;\l}"];
MethodNode -> Node_37;Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_42[style=dashed];
Node_67 -> Node_38;
Node_43 -> Node_44;
Node_43 -> Node_52[style=dashed];
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_45 -> Node_48[style=dashed];
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_68;
Node_68 -> Node_38;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_49 -> Node_51[style=dashed];
Node_50 -> Node_69;
Node_69 -> Node_38;
Node_51 -> Node_70;
Node_70 -> Node_38;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65;
Node_64 -> Node_72;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_55 -> Node_60[style=dashed];
Node_57 -> Node_58;
Node_57 -> Node_60[style=dashed];
Node_58 -> Node_60;
Node_60 -> Node_62;
Node_60 -> Node_73;
Node_37 -> Node_39;
Node_41 -> Node_67;
Node_42 -> Node_43;
Node_52 -> Node_53;
Node_56 -> Node_57;
Node_62 -> Node_71;
Node_71 -> Node_38;
Node_73 -> Node_38;
Node_65 -> Node_66;
Node_66 -> Node_38;
Node_72 -> Node_38;
}

