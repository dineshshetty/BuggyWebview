digraph "CFG forkotlin.jvm.internal.ClassReference.\<clinit\>()V" {
subgraph cluster_Region_1939250263 {
label = "R(9:1|(3:4|(1:6)(0)|8)|11|(1:14)|16|(1:19)|21|(1:24)|26)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0000|java.lang.Iterable java.lang.Iterable r0 = kotlin.collections.CollectionsKt.listOf((java.lang.Object[]) new java.lang.Class[]\{kotlin.jvm.functions.Functions.class, kotlin.jvm.functions.Function1.class, kotlin.jvm.functions.Function2.class, kotlin.jvm.functions.Function3.class, kotlin.jvm.functions.Function4.class, kotlin.jvm.functions.Function5.class, kotlin.jvm.functions.Function6.class, kotlin.jvm.functions.Function7.class, kotlin.jvm.functions.Function8.class, kotlin.jvm.functions.Function9.class, kotlin.jvm.functions.Function10.class, kotlin.jvm.functions.Function11.class, kotlin.jvm.functions.Function12.class, kotlin.jvm.functions.Function13.class, kotlin.jvm.functions.Function14.class, kotlin.jvm.functions.Function15.class, kotlin.jvm.functions.Function16.class, kotlin.jvm.functions.Function17.class, kotlin.jvm.functions.Function18.class, kotlin.jvm.functions.Function19.class, kotlin.jvm.functions.Function20.class, kotlin.jvm.functions.Function21.class, kotlin.jvm.functions.Function22.class\})\ljava.util.Collection java.util.Collection r4 = new java.util.ArrayList(kotlin.collections.CollectionsKt.collectionSizeOrDefault(r0, 10))\lint r7 = 0\ljava.util.Iterator r8 = r0.iterator()\l\l}"];
subgraph cluster_LoopRegion_457601914 {
label = "LOOP:0: (3:4|(1:6)(0)|8)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x00ae|java.lang.Object \lif (r8.hasNext() != false) goto L4\l}"];
subgraph cluster_Region_435629658 {
label = "R(3:4|(1:6)(0)|8)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x00b0|java.lang.Object r9 = r8.next()\lint int r10 = r7 + 1\l}"];
subgraph cluster_IfRegion_1134837172 {
label = "IF [B:35:0x00b6] THEN: R(1:6) ELSE: R(0)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x00b6|if (r7 \< 0) goto L6\l}"];
subgraph cluster_Region_1336234592 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x00b8|kotlin.collections.CollectionsKt.throwIndexOverflow()\l}"];
}
subgraph cluster_Region_1876495853 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_37 [shape=record,label="{37\:\ 0x00bb|LOOP_END\lLOOP:0: B:32:0x00aa\-\>B:37:0x00bb\l|java.lang.Class java.lang.Class r11 = (java.lang.Class) r9\lr4.add(kotlin.TuplesKt.m15to(r11, java.lang.Integer.valueOf(r7)))\lr7 = r10\l}"];
}
}
Node_38 [shape=record,label="{38\:\ 0x00cc|kotlin.jvm.internal.ClassReference.FUNCTION_CLASSES = kotlin.collections.MapsKt.toMap((java.util.List) r4)\ljava.util.HashMap java.util.HashMap r0 = new java.util.HashMap()\lr0.put(androidx.constraintlayout.core.motion.utils.TypedValues.Custom.S_BOOLEAN, \"kotlin.Boolean\")\lr0.put(\"char\", \"kotlin.Char\")\lr0.put(\"byte\", \"kotlin.Byte\")\lr0.put(\"short\", \"kotlin.Short\")\lr0.put(\"int\", \"kotlin.Int\")\lr0.put(androidx.constraintlayout.core.motion.utils.TypedValues.Custom.S_FLOAT, \"kotlin.Float\")\lr0.put(\"long\", \"kotlin.Long\")\lr0.put(\"double\", \"kotlin.Double\")\lkotlin.jvm.internal.ClassReference.primitiveFqNames = r0\ljava.util.HashMap java.util.HashMap r2 = new java.util.HashMap()\lr2.put(\"java.lang.Boolean\", \"kotlin.Boolean\")\lr2.put(\"java.lang.Character\", \"kotlin.Char\")\lr2.put(\"java.lang.Byte\", \"kotlin.Byte\")\lr2.put(\"java.lang.Short\", \"kotlin.Short\")\lr2.put(\"java.lang.Integer\", \"kotlin.Int\")\lr2.put(\"java.lang.Float\", \"kotlin.Float\")\lr2.put(\"java.lang.Long\", \"kotlin.Long\")\lr2.put(\"java.lang.Double\", \"kotlin.Double\")\lkotlin.jvm.internal.ClassReference.primitiveWrapperFqNames = r2\ljava.util.HashMap java.util.HashMap r4 = new java.util.HashMap()\lr4.put(\"java.lang.Object\", \"kotlin.Any\")\lr4.put(\"java.lang.String\", \"kotlin.String\")\lr4.put(\"java.lang.CharSequence\", \"kotlin.CharSequence\")\lr4.put(\"java.lang.Throwable\", \"kotlin.Throwable\")\lr4.put(\"java.lang.Cloneable\", \"kotlin.Cloneable\")\lr4.put(\"java.lang.Number\", \"kotlin.Number\")\lr4.put(\"java.lang.Comparable\", \"kotlin.Comparable\")\lr4.put(\"java.lang.Enum\", \"kotlin.Enum\")\lr4.put(\"java.lang.annotation.Annotation\", \"kotlin.Annotation\")\lr4.put(\"java.lang.Iterable\", \"kotlin.collections.Iterable\")\lr4.put(\"java.util.Iterator\", \"kotlin.collections.Iterator\")\lr4.put(\"java.util.Collection\", \"kotlin.collections.Collection\")\lr4.put(\"java.util.List\", \"kotlin.collections.List\")\lr4.put(\"java.util.Set\", \"kotlin.collections.Set\")\lr4.put(\"java.util.ListIterator\", \"kotlin.collections.ListIterator\")\lr4.put(\"java.util.Map\", \"kotlin.collections.Map\")\lr4.put(\"java.util.Map$Entry\", \"kotlin.collections.Map.Entry\")\lr4.put(\"kotlin.jvm.internal.StringCompanionObject\", \"kotlin.String.Companion\")\lr4.put(\"kotlin.jvm.internal.EnumCompanionObject\", \"kotlin.Enum.Companion\")\lr4.putAll(r0)\lr4.putAll(r2)\ljava.util.Collection java.lang.Iterable r0 = r0.values()\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"primitiveFqNames.values\")\ljava.lang.Iterable java.lang.Iterable r0 = r0\ljava.util.Iterator r7 = r0.iterator()\l\l}"];
subgraph cluster_LoopRegion_1058985098 {
label = "LOOP:1: (1:14)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x01f9|java.lang.Object \lif (r7.hasNext() != false) goto L14\l}"];
subgraph cluster_Region_1874049344 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x01fb|LOOP_END\lLOOP:1: B:39:0x01f3\-\>B:41:0x01fb\l|java.lang.Object r8 = r7.next()\ljava.lang.String java.lang.String r11 = (java.lang.String) r8\ljava.lang.StringBuilder java.lang.StringBuilder r13 = new java.lang.StringBuilder()\lr13.append(\"kotlin.jvm.internal.\")\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r11, \"kotlinName\")\lr13.append(kotlin.text.StringsKt.substringAfterLast$default(r11, '.', (java.lang.String) null, 2, (java.lang.Object) null))\lr13.append(\"CompanionObject\")\lkotlin.Pair kotlin.Tuples r9 = kotlin.TuplesKt.m15to(r13.toString(), r11 + \".Companion\")\lr4.put(r9.getFirst(), r9.getSecond())\l}"];
}
}
Node_42 [shape=record,label="{42\:\ 0x0246|java.util.Iterator r0 = kotlin.jvm.internal.ClassReference.FUNCTION_CLASSES.entrySet().iterator()\l\l}"];
subgraph cluster_LoopRegion_401321392 {
label = "LOOP:2: (1:19)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0257|java.util.Map$Entry \lif (r0.hasNext() != false) goto L19\l}"];
subgraph cluster_Region_671147205 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0259|LOOP_END\lLOOP:2: B:43:0x0253\-\>B:45:0x0259\l|java.util.Map$Entry r2 = r0.next()\ljava.lang.Class java.lang.Class r7 = r2.getKey()\lint int r2 = r2.getValue().intValue()\lr4.put(r7.getName(), \"kotlin.Function\" + r2)\l}"];
}
}
Node_46 [shape=record,label="{46\:\ 0x0288|kotlin.jvm.internal.ClassReference.classFqNames = r4\ljava.util.Map java.util.HashMap r0 = r4\ljava.util.Map java.util.Map r4 = new java.util.LinkedHashMap(kotlin.collections.MapsKt.mapCapacity(r0.size()))\ljava.lang.Iterable java.lang.Iterable r7 = r0.entrySet()\ljava.util.Iterator r10 = r7.iterator()\l\l}"];
subgraph cluster_LoopRegion_1916324735 {
label = "LOOP:3: (1:24)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x02af|java.lang.Object \lif (r10.hasNext() != false) goto L24\l}"];
subgraph cluster_Region_136677985 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x02b1|LOOP_END\lLOOP:3: B:47:0x02ab\-\>B:49:0x02b1\l|java.lang.Object r11 = r10.next()\ljava.util.Map$Entry java.util.Map.Entry r12 = (java.util.Map.Entry) r11\ljava.lang.Object java.lang.Object r12 = r12.getKey()\ljava.lang.String java.lang.String r13 = (java.lang.String) ((java.util.Map.Entry) r11).getValue()\lr4.put(r12, kotlin.text.StringsKt.substringAfterLast$default(r13, '.', (java.lang.String) null, 2, (java.lang.Object) null))\l}"];
}
}
Node_50 [shape=record,label="{50\:\ 0x02cf|kotlin.jvm.internal.ClassReference.simpleNames = r4\l}"];
}
Node_29 [shape=record,color=red,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x00aa|LOOP_START\lLOOP:0: B:32:0x00aa\-\>B:37:0x00bb\lPHI: r7 \l  PHI: (r7v1 'index$iv$iv' int) = (r7v0 'index$iv$iv' int), (r7v30 'index$iv$iv' int) binds: [B:31:0x0000, B:37:0x00bb] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x00bb|SYNTHETIC\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x00bb|SYNTHETIC\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x00cc|SYNTHETIC\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x01f3|LOOP_START\lLOOP:1: B:39:0x01f3\-\>B:41:0x01fb\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x0246|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0253|LOOP_START\lLOOP:2: B:43:0x0253\-\>B:45:0x0259\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x0288|SYNTHETIC\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x02ab|LOOP_START\lLOOP:3: B:47:0x02ab\-\>B:49:0x02b1\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x02cf|SYNTHETIC\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x02d4}"];
Node_30 [shape=record,color=red,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void kotlin.jvm.internal.ClassReference.\<clinit\>()  | USE_LINES_HINTS\lBACK_EDGE: B:37:0x00bb \-\> B:32:0x00aa, CROSS_EDGE: B:35:0x00b6 \-\> B:37:0x00bb, BACK_EDGE: B:41:0x01fb \-\> B:39:0x01f3, BACK_EDGE: B:45:0x0259 \-\> B:43:0x0253, BACK_EDGE: B:49:0x02b1 \-\> B:47:0x02ab\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_29;Node_31 -> Node_32;
Node_33 -> Node_34;
Node_33 -> Node_52[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_54[style=dashed];
Node_36 -> Node_53;
Node_37 -> Node_32;
Node_38 -> Node_39;
Node_40 -> Node_41;
Node_40 -> Node_55[style=dashed];
Node_41 -> Node_39;
Node_42 -> Node_43;
Node_44 -> Node_45;
Node_44 -> Node_56[style=dashed];
Node_45 -> Node_43;
Node_46 -> Node_47;
Node_48 -> Node_49;
Node_48 -> Node_57[style=dashed];
Node_49 -> Node_47;
Node_50 -> Node_51;
Node_29 -> Node_31;
Node_32 -> Node_33;
Node_53 -> Node_37;
Node_54 -> Node_37;
Node_52 -> Node_38;
Node_39 -> Node_40;
Node_55 -> Node_42;
Node_43 -> Node_44;
Node_56 -> Node_46;
Node_47 -> Node_48;
Node_57 -> Node_50;
Node_51 -> Node_30;
}

