digraph "CFG forkotlin.jvm.internal.PropertyReference.toString()Ljava\/lang\/String;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlin.reflect.KCallable) = (r3 I:kotlin.jvm.internal.PropertyReference) type: VIRTUAL call: kotlin.jvm.internal.PropertyReference.compute():kotlin.reflect.KCallable A[MD:():kotlin.reflect.KCallable (m)] (LINE:69)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('reflected' kotlin.reflect.KCallable)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x000b  (LINE:70)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: INVOKE  (r1 I:java.lang.String) = (r0 I:java.lang.Object A[D('reflected' kotlin.reflect.KCallable)]) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)] (LINE:71)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|RETURN\l|0x000a: RETURN  (r1 I:java.lang.String) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000b|0x000b: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:74)\l0x000d: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0010: CONST_STR  (r2 I:java.lang.String) =  \"property \" \l0x0012: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0015: INVOKE  (r2 I:java.lang.String) = (r3 I:kotlin.jvm.internal.PropertyReference) type: VIRTUAL call: kotlin.jvm.internal.PropertyReference.getName():java.lang.String A[MD:():java.lang.String (m)]\l0x0019: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001c: CONST_STR  (r2 I:java.lang.String) =  \" (Kotlin reflection is not available)\" \l0x001e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0021: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|RETURN\l|0x0025: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String kotlin.jvm.internal.PropertyReference.toString((r3 'this' I:kotlin.jvm.internal.PropertyReference A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0025 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0025: r0 'reflected' Lkotlin\/reflect\/KCallable;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

