digraph "CFG forkotlin.jvm.internal.AdaptedFunctionReference.getOwner()Lkotlin\/reflect\/KDeclarationContainer;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Class) = (r2 I:kotlin.jvm.internal.AdaptedFunctionReference) kotlin.jvm.internal.AdaptedFunctionReference.owner java.lang.Class  (LINE:58)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0006 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|SYNTHETIC\lRETURN\l|0x0004: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: RETURN  (r0 I:kotlin.reflect.KDeclarationContainer) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: IGET  (r1 I:boolean) = (r2 I:kotlin.jvm.internal.AdaptedFunctionReference) kotlin.jvm.internal.AdaptedFunctionReference.isTopLevel boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000f \l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|0x000a: INVOKE  (r0 I:kotlin.reflect.KDeclarationContainer) = (r0 I:java.lang.Class) type: STATIC call: kotlin.jvm.internal.Reflection.getOrCreateKotlinPackage(java.lang.Class):kotlin.reflect.KDeclarationContainer A[MD:(java.lang.Class):kotlin.reflect.KDeclarationContainer (m)]\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|0x0013: RETURN  (r0 I:kotlin.reflect.KDeclarationContainer) A[SYNTHETIC]\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: INVOKE  (r0 I:kotlin.reflect.KClass) = (r0 I:java.lang.Class) type: STATIC call: kotlin.jvm.internal.Reflection.getOrCreateKotlinClass(java.lang.Class):kotlin.reflect.KClass A[MD:(java.lang.Class):kotlin.reflect.KClass (m)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|RETURN\lORIG_RETURN\l|0x0013: RETURN  (r0 I:kotlin.reflect.KDeclarationContainer) \l}"];
MethodNode[shape=record,label="{public kotlin.reflect.KDeclarationContainer kotlin.jvm.internal.AdaptedFunctionReference.getOwner((r2 'this' I:kotlin.jvm.internal.AdaptedFunctionReference A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x000a \-\> B:9:0x0013, CROSS_EDGE: B:8:0x000f \-\> B:9:0x0013\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_11;
Node_11 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

