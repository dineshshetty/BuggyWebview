digraph "CFG forkotlin.jvm.internal.AdaptedFunctionReference.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0001|if (r5 != r6) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|RETURN\l|return true\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0004}"];
Node_6 [shape=record,label="{6\:\ 0x0007|if ((r6 instanceof kotlin.jvm.internal.AdaptedFunctionReference) != false) goto L8\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|RETURN\l|return false\l}"];
Node_8 [shape=record,label="{8\:\ 0x000a|kotlin.jvm.internal.AdaptedFunctionReference r1 = (kotlin.jvm.internal.AdaptedFunctionReference) r6\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|if (r5.isTopLevel != r1.isTopLevel) goto L23\l}"];
Node_10 [shape=record,label="{10\:\ 0x0013}"];
Node_11 [shape=record,label="{11\:\ 0x0017|if (r5.arity != r1.arity) goto L23\l}"];
Node_12 [shape=record,label="{12\:\ 0x0019}"];
Node_13 [shape=record,label="{13\:\ 0x001d|if (r5.flags != r1.flags) goto L23\l}"];
Node_14 [shape=record,label="{14\:\ 0x001f}"];
Node_15 [shape=record,label="{15\:\ 0x0027|if (kotlin.jvm.internal.Intrinsics.areEqual(r5.receiver, r1.receiver) == false) goto L23\l}"];
Node_16 [shape=record,label="{16\:\ 0x0029}"];
Node_17 [shape=record,label="{17\:\ 0x0031|if (kotlin.jvm.internal.Intrinsics.areEqual(r5.owner, r1.owner) == false) goto L23\l}"];
Node_18 [shape=record,label="{18\:\ 0x0033}"];
Node_19 [shape=record,label="{19\:\ 0x003b|if (r5.name.equals(r1.name) == false) goto L23\l}"];
Node_20 [shape=record,label="{20\:\ 0x003d}"];
Node_21 [shape=record,label="{21\:\ 0x0045|if (r5.signature.equals(r1.signature) == false) goto L23\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_23 [shape=record,label="{23\:\ 0x0048|RETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean kotlin.jvm.internal.AdaptedFunctionReference.equals((r5v0 'this' kotlin.jvm.internal.AdaptedFunctionReference A[IMMUTABLE_TYPE, THIS]), (r6v0 'o' java.lang.Object A[D('o' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0009 \-\> B:1:?, CROSS_EDGE: B:24:0x0049 \-\> B:1:?, CROSS_EDGE: B:21:0x0045 \-\> B:24:0x0049, CROSS_EDGE: B:19:0x003b \-\> B:23:0x0048, CROSS_EDGE: B:17:0x0031 \-\> B:23:0x0048, CROSS_EDGE: B:15:0x0027 \-\> B:23:0x0048, CROSS_EDGE: B:13:0x001d \-\> B:23:0x0048, CROSS_EDGE: B:11:0x0017 \-\> B:23:0x0048, CROSS_EDGE: B:9:0x0011 \-\> B:23:0x0048\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_23;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_23;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_23;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_25[style=dashed];
Node_25 -> Node_1;
Node_23 -> Node_1;
}

