digraph "CFG forkotlin.jvm.internal.CollectionToArray.toArray(Ljava\/util\/Collection;[Ljava\/lang\/Object;)[Ljava\/lang\/Object;" {
Node_56 [shape=record,label="{56\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_58 [shape=record,label="{58\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r10, \"collection\")\l}"];
Node_59 [shape=record,label="{59\:\ 0x0005|if (r11 == null) goto L51\l}"];
Node_60 [shape=record,label="{60\:\ 0x0007|int r1 = r10.size()\l}"];
Node_61 [shape=record,label="{61\:\ 0x000e|if (r1 != 0) goto L11\l}"];
Node_62 [shape=record,label="{62\:\ 0x0010}"];
Node_63 [shape=record,label="{63\:\ 0x0012|if (r11.length \<= 0) goto L8\l}"];
Node_64 [shape=record,label="{64\:\ 0x0014|r11[0] = null\l}"];
Node_72 [shape=record,label="{72\:\ 0x0029}"];
Node_110 [shape=record,label="{110\:\ ?|SYNTHETIC\lRETURN\l|return r11\l}"];
Node_57 [shape=record,label="{57\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_66 [shape=record,label="{66\:\ 0x0018|java.util.Iterator r4 = r10.iterator()\l}"];
Node_67 [shape=record,label="{67\:\ 0x0020|if (r4.hasNext() != false) goto L16\l}"];
Node_68 [shape=record,label="{68\:\ 0x0022}"];
Node_69 [shape=record,label="{69\:\ 0x0024|if (r11.length \<= 0) goto L8\l}"];
Node_70 [shape=record,label="{70\:\ 0x0026|r11[0] = null\l}"];
Node_73 [shape=record,label="{73\:\ 0x002c}"];
Node_74 [shape=record,label="{74\:\ 0x002f|if (r1 \> r11.length) goto L50\l}"];
Node_75 [shape=record,label="{75\:\ 0x0031|r6 = r11\l}"];
Node_77 [shape=record,label="{77\:\ 0x0046|PHI: r6 \l  PHI: (r6v5 java.lang.Object[]) = (r6v4 java.lang.Object[]), (r6v7 java.lang.Object[]) binds: [B:76:0x0033, B:75:0x0031] A[DONT_GENERATE, DONT_INLINE]\l|r2 = r6\lr5 = 0\l}"];
Node_78 [shape=record,label="{78\:\ 0x0048|LOOP_START\lLOOP:0: B:78:0x0048\-\>B:107:0x0048\lPHI: r2 r5 \l  PHI: (r2v3 'result$iv' java.lang.Object[]) = (r2v2 'result$iv' java.lang.Object[]), (r2v5 'result$iv' java.lang.Object[]) binds: [B:77:0x0046, B:107:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v3 'i$iv' int) = (r5v2 'i$iv' int), (r5v12 'i$iv' int) binds: [B:77:0x0046, B:107:0x0048] A[DONT_GENERATE, DONT_INLINE]\l|int r6 = r5 + 1\lr2[r5] = r4.next()\l}"];
Node_79 [shape=record,label="{79\:\ 0x0052|if (r6 \< r2.length) goto L22\l}"];
Node_102 [shape=record,label="{102\:\ 0x007e|SYNTHETIC\l}"];
Node_91 [shape=record,label="{91\:\ 0x007e}"];
Node_92 [shape=record,label="{92\:\ 0x0082|if (r4.hasNext() != false) goto L25\l}"];
Node_99 [shape=record,label="{99\:\ 0x0098|r5 = r6\l}"];
Node_108 [shape=record,label="{108\:\ 0x0048|SYNTHETIC\l}"];
Node_107 [shape=record,label="{107\:\ 0x0048|LOOP_END\lSYNTHETIC\lLOOP:0: B:78:0x0048\-\>B:107:0x0048\lPHI: r2 r5 \l  PHI: (r2v5 'result$iv' java.lang.Object[]) = (r2v4 'result$iv' java.lang.Object[]), (r2v3 'result$iv' java.lang.Object[]) binds: [B:109:0x0048, B:108:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v12 'i$iv' int) = (r5v10 'i$iv' int), (r5v15 'i$iv' int) binds: [B:109:0x0048, B:108:0x0048] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_105 [shape=record,label="{105\:\ 0x0084|SYNTHETIC\l}"];
Node_93 [shape=record,label="{93\:\ 0x0084|r5 = r2\l}"];
Node_94 [shape=record,label="{94\:\ 0x0087|if (r5 != r11) goto L34\l}"];
Node_95 [shape=record,label="{95\:\ 0x0089|r11[r6] = null\lr3 = r11\l}"];
Node_97 [shape=record,label="{97\:\ 0x0096|PHI: r3 \l  PHI: (r3v3 java.lang.Object[]) = (r3v2 java.lang.Object[]), (r3v4 java.lang.Object[]) binds: [B:96:0x008d, B:95:0x0089] A[DONT_GENERATE, DONT_INLINE]\l|r2 = r3\l}"];
Node_98 [shape=record,label="{98\:\ 0x0097|RETURN\lORIG_RETURN\l|return r2\l}"];
Node_96 [shape=record,label="{96\:\ 0x008d|java.lang.Object[] r3 = java.util.Arrays.copyOf(r5, r6)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r3, \"copyOf(result, size)\")\l}"];
Node_106 [shape=record,label="{106\:\ 0x0054|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ 0x0054}"];
Node_81 [shape=record,label="{81\:\ 0x0058|if (r4.hasNext() != false) goto L38\l}"];
Node_83 [shape=record,label="{83\:\ 0x005b|int r5 = ((r6 * 3) + 1) \>\>\> 1\l}"];
Node_84 [shape=record,label="{84\:\ 0x0061|if (r5 \> r6) goto L46\l}"];
Node_85 [shape=record,label="{85\:\ 0x0063}"];
Node_86 [shape=record,label="{86\:\ 0x0066|if (r6 \>= kotlin.jvm.internal.CollectionToArray.MAX_SIZE) goto L43\l}"];
Node_87 [shape=record,label="{87\:\ 0x0068|r5 = kotlin.jvm.internal.CollectionToArray.MAX_SIZE\l}"];
Node_103 [shape=record,label="{103\:\ 0x006c|SYNTHETIC\l}"];
Node_88 [shape=record,label="{88\:\ 0x006c}"];
Node_89 [shape=record,label="{89\:\ 0x0071|throw new java.lang.OutOfMemoryError()\l}"];
Node_90 [shape=record,label="{90\:\ 0x0072|PHI: r5 \l  PHI: (r5v9 'newSize$iv' int) = (r5v8 'newSize$iv' int), (r5v11 'newSize$iv' int) binds: [B:84:0x0061, B:87:0x0068] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Object[] r7 = java.util.Arrays.copyOf(r2, r5)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r7, \"copyOf(result, newSize)\")\lr2 = r7\lr5 = r6\l}"];
Node_109 [shape=record,label="{109\:\ 0x0048|SYNTHETIC\l}"];
Node_104 [shape=record,label="{104\:\ 0x0097|SYNTHETIC\l}"];
Node_111 [shape=record,label="{111\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
Node_76 [shape=record,label="{76\:\ 0x0033|java.lang.Object r6 = java.lang.reflect.Array.newInstance(r11.getClass().getComponentType(), r1)\lkotlin.jvm.internal.Intrinsics.checkNotNull(r6, \"null cannot be cast to non\-null type kotlin.Array\<kotlin.Any?\>\")\ljava.lang.Object[] r6 = (java.lang.Object[]) r6\l}"];
Node_100 [shape=record,label="{100\:\ 0x009a}"];
Node_101 [shape=record,label="{101\:\ 0x009f|throw new java.lang.NullPointerException()\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object[] kotlin.jvm.internal.CollectionToArray.toArray((r10v0 'collection' java.util.Collection\<?\> A[D('collection' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'a' java.lang.Object[] A[D('a' java.lang.Object[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:63:0x0012 \-\> B:72:0x0029, CROSS_EDGE: B:70:0x0026 \-\> B:72:0x0029, CROSS_EDGE: B:69:0x0024 \-\> B:72:0x0029, BACK_EDGE: B:90:0x0072 \-\> B:78:0x0048, CROSS_EDGE: B:89:0x0071 \-\> B:57:?, CROSS_EDGE: B:84:0x0061 \-\> B:90:0x0072, CROSS_EDGE: B:81:0x0058 \-\> B:98:0x0097, CROSS_EDGE: B:97:0x0096 \-\> B:98:0x0097, CROSS_EDGE: B:96:0x008d \-\> B:97:0x0096, BACK_EDGE: B:99:0x0098 \-\> B:78:0x0048, CROSS_EDGE: B:76:0x0033 \-\> B:77:0x0046, CROSS_EDGE: B:101:0x009f \-\> B:57:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/util\/Collection\<*\>;[Ljava\/lang\/Object;)[Ljava\/lang\/Object;\l}"];
MethodNode -> Node_56;Node_56 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_100;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_66;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_72;
Node_64 -> Node_72;
Node_72 -> Node_110;
Node_110 -> Node_57;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_73;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_72;
Node_70 -> Node_72;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_75 -> Node_77;
Node_77 -> Node_78;
Node_78 -> Node_79;
Node_79 -> Node_102;
Node_79 -> Node_106[style=dashed];
Node_102 -> Node_91;
Node_91 -> Node_92;
Node_92 -> Node_99;
Node_92 -> Node_105[style=dashed];
Node_99 -> Node_108;
Node_108 -> Node_107;
Node_107 -> Node_78;
Node_105 -> Node_93;
Node_93 -> Node_94;
Node_94 -> Node_95[style=dashed];
Node_94 -> Node_96;
Node_95 -> Node_97;
Node_97 -> Node_98;
Node_98 -> Node_57;
Node_96 -> Node_97;
Node_106 -> Node_80;
Node_80 -> Node_81;
Node_81 -> Node_83;
Node_81 -> Node_104[style=dashed];
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_90;
Node_85 -> Node_86;
Node_86 -> Node_87[style=dashed];
Node_86 -> Node_103;
Node_87 -> Node_90;
Node_103 -> Node_88;
Node_88 -> Node_89;
Node_89 -> Node_57;
Node_90 -> Node_109;
Node_109 -> Node_107;
Node_104 -> Node_111;
Node_111 -> Node_57;
Node_76 -> Node_77;
Node_100 -> Node_101;
Node_101 -> Node_57;
}

