digraph "CFG forkotlin.jvm.internal.CollectionToArray.toArrayImpl(Ljava\/util\/Collection;Lkotlin\/jvm\/functions\/Function0;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function2;)[Ljava\/lang\/Object;" {
subgraph cluster_Region_102461985 {
label = "R(2:1|(2:(1:4)|(2:6|(2:(1:9)|(2:10|(2:11|(1:(2:(1:36)|(3:25|(1:(2:(1:32)|(1:29)))|33)))(1:(1:21)(1:16))))))))";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0000|int int r1 = r8.size()\l}"];
subgraph cluster_Region_1086423424 {
label = "R(2:(1:4)|(2:6|(2:(1:9)|(2:10|(2:11|(1:(2:(1:36)|(3:25|(1:(2:(1:32)|(1:29)))|33)))(1:(1:21)(1:16)))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1810523227 {
label = "IF [B:40:0x0005] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0005|if (r1 == 0) goto L3\l}"];
subgraph cluster_Region_1559223274 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x000d|RETURN\l|return r9.invoke()\l}"];
}
}
subgraph cluster_Region_1638210589 {
label = "R(2:6|(2:(1:9)|(2:10|(2:11|(1:(2:(1:36)|(3:25|(1:(2:(1:32)|(1:29)))|33)))(1:(1:21)(1:16))))))";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x000e|java.util.Iterator java.util.Iterator r2 = r8.iterator()\l}"];
subgraph cluster_Region_51355702 {
label = "R(2:(1:9)|(2:10|(2:11|(1:(2:(1:36)|(3:25|(1:(2:(1:32)|(1:29)))|33)))(1:(1:21)(1:16)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1014161522 {
label = "IF [B:44:0x0016] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0016|if (r2.hasNext() != true) goto L8\l}"];
subgraph cluster_Region_1628209904 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x001e|RETURN\l|return r9.invoke()\l}"];
}
}
subgraph cluster_Region_481332467 {
label = "R(2:10|(2:11|(1:(2:(1:36)|(3:25|(1:(2:(1:32)|(1:29)))|33)))(1:(1:21)(1:16))))";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x001f|java.lang.Object[] java.lang.Object[] r3 = r10.invoke(java.lang.Integer.valueOf(r1))\lint r4 = 0\l}"];
subgraph cluster_LoopRegion_755880656 {
label = "LOOP:0: (2:11|(1:(2:(1:36)|(3:25|(1:(2:(1:32)|(1:29)))|33)))(1:(1:21)(1:16)))";
node [shape=record,color=blue];
subgraph cluster_Region_67277595 {
label = "R(2:11|(1:(2:(1:36)|(3:25|(1:(2:(1:32)|(1:29)))|33)))(1:(1:21)(1:16)))";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x002a|LOOP_START\lLOOP:0: B:48:0x002a\-\>B:71:0x002a\lPHI: r3 r4 \l  PHI: (r3v4 ??) = (r3v3 java.lang.Object[]), (r3v6 ??) binds: [B:47:0x001f, B:71:0x002a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'i' int) = (r4v0 'i' int), (r4v10 'i' int) binds: [B:47:0x001f, B:71:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|int int r5 = r4 + 1\lr3[r4] = r2.next()\l}"];
subgraph cluster_IfRegion_1846617893 {
label = "IF [B:49:0x0034] THEN: R(1:(2:(1:36)|(3:25|(1:(2:(1:32)|(1:29)))|33))) ELSE: R(1:(1:21)(1:16))";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0034|if (r5 \>= r3.length) goto L22\l}"];
subgraph cluster_Region_262106128 {
label = "R(1:(2:(1:36)|(3:25|(1:(2:(1:32)|(1:29)))|33)))";
node [shape=record,color=blue];
subgraph cluster_Region_1903125445 {
label = "R(2:(1:36)|(3:25|(1:(2:(1:32)|(1:29)))|33))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_483213436 {
label = "IF [B:51:0x003a] THEN: R(1:36) ELSE: null";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x003a|if (r2.hasNext() != true) goto L35\l}"];
subgraph cluster_Region_405361723 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x003c|RETURN\l|return r3\l}"];
}
}
subgraph cluster_Region_2115762614 {
label = "R(3:25|(1:(2:(1:32)|(1:29)))|33)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x003d|int int r4 = ((r5 * 3) + 1) \>\>\> 1\l}"];
subgraph cluster_IfRegion_68855883 {
label = "IF [B:54:0x0043] THEN: R(1:(2:(1:32)|(1:29))) ELSE: null";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0043|if (r4 \<= r5) goto L27\l}"];
subgraph cluster_Region_1961980954 {
label = "R(1:(2:(1:32)|(1:29)))";
node [shape=record,color=blue];
subgraph cluster_Region_925475590 {
label = "R(2:(1:32)|(1:29))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1455467647 {
label = "IF [B:56:0x0048] THEN: R(1:32) ELSE: null";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x0048|if (r5 \>= kotlin.jvm.internal.CollectionToArray.MAX_SIZE) goto L30\l}"];
subgraph cluster_Region_1134732831 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x0053|throw new java.lang.OutOfMemoryError()\l}"];
}
}
subgraph cluster_Region_68494739 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x004a|r4 = kotlin.jvm.internal.CollectionToArray.MAX_SIZE\l}"];
}
}
}
}
Node_60 [shape=record,label="{60\:\ 0x0054|PHI: r4 \l  PHI: (r4v7 'newSize' int) = (r4v6 'newSize' int), (r4v9 'newSize' int) binds: [B:54:0x0043, B:57:0x004a] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Object[] java.lang.Object[] r6 = java.util.Arrays.copyOf((java.lang.Object[]) r3, r4)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r6, \"copyOf(result, newSize)\")\lr3 = r6\lr4 = r5\l}"];
}
}
}
subgraph cluster_Region_1238992101 {
label = "R(1:(1:21)(1:16)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1438769676 {
label = "IF [B:62:0x0064] THEN: R(1:21) ELSE: R(1:16) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x0064|if (r2.hasNext() != true) goto L19\l}"];
subgraph cluster_Region_1109525680 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x0070|RETURN\l|return r11.invoke(r3, java.lang.Integer.valueOf(r5))\l}"];
}
subgraph cluster_Region_1666548491 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x0071|r4 = r5\l}"];
}
}
}
}
}
}
}
}
}
}
}
Node_37 [shape=record,color=red,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0007}"];
Node_38 [shape=record,color=red,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0018}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0060|SYNTHETIC\l}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x0060}"];
Node_72 [shape=record,color=red,label="{72\:\ 0x002a|SYNTHETIC\l}"];
Node_71 [shape=record,color=red,label="{71\:\ 0x002a|LOOP_END\lSYNTHETIC\lLOOP:0: B:48:0x002a\-\>B:71:0x002a\lPHI: r3 r4 \l  PHI: (r3v6 ??) = (r3v5 ??), (r3v4 ??) binds: [B:73:0x002a, B:72:0x002a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v10 'i' int) = (r4v8 'i' int), (r4v15 'i' int) binds: [B:73:0x002a, B:72:0x002a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x0066|SYNTHETIC\l}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0066}"];
Node_70 [shape=record,color=red,label="{70\:\ 0x0036|SYNTHETIC\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0036}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x0045}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x004e|SYNTHETIC\l}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x004e}"];
Node_73 [shape=record,color=red,label="{73\:\ 0x002a|SYNTHETIC\l}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x003c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static final java.lang.Object[] kotlin.jvm.internal.CollectionToArray.toArrayImpl((r8v0 java.util.Collection\<?\> A[D('collection' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 kotlin.jvm.functions.Function0\<java.lang.Object[]\> A[D('empty' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 kotlin.jvm.functions.Function1\<? super java.lang.Integer, java.lang.Object[]\> A[D('alloc' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 kotlin.jvm.functions.Function2\<? super java.lang.Object[], ? super java.lang.Integer, java.lang.Object[]\> A[D('trim' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:46:0x001e \-\> B:38:?, CROSS_EDGE: B:52:0x003c \-\> B:38:?, BACK_EDGE: B:60:0x0054 \-\> B:48:0x002a, CROSS_EDGE: B:59:0x0053 \-\> B:38:?, CROSS_EDGE: B:54:0x0043 \-\> B:60:0x0054, CROSS_EDGE: B:64:0x0070 \-\> B:38:?, BACK_EDGE: B:65:0x0071 \-\> B:48:0x002a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/util\/Collection\<*\>;Lkotlin\/jvm\/functions\/Function0\<[Ljava\/lang\/Object;\>;Lkotlin\/jvm\/functions\/Function1\<\-Ljava\/lang\/Integer;[Ljava\/lang\/Object;\>;Lkotlin\/jvm\/functions\/Function2\<\-[Ljava\/lang\/Object;\-Ljava\/lang\/Integer;[Ljava\/lang\/Object;\>;)[Ljava\/lang\/Object;\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r3v3, types: [java.lang.Object[]]\l \-\> Type inference failed for: r3v4, types: [java.lang.Object[], java.lang.Object]\l \-\> Type inference failed for: r3v5\l \-\> Type inference failed for: r3v6\l DEBUG: \l \-\> Failed to insert an additional move for type inference into block B:71:0x002a\l \-\> Failed to insert an additional move for type inference into block B:73:0x002a\}\l}"];
MethodNode -> Node_37;Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_43[style=dashed];
Node_42 -> Node_38;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_44 -> Node_47[style=dashed];
Node_46 -> Node_38;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_66[style=dashed];
Node_49 -> Node_70;
Node_51 -> Node_53[style=dashed];
Node_51 -> Node_68;
Node_52 -> Node_38;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_54 -> Node_60[style=dashed];
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_67;
Node_59 -> Node_38;
Node_57 -> Node_60;
Node_60 -> Node_73;
Node_62 -> Node_65[style=dashed];
Node_62 -> Node_69;
Node_64 -> Node_38;
Node_65 -> Node_72;
Node_37 -> Node_39;
Node_41 -> Node_42;
Node_45 -> Node_46;
Node_66 -> Node_61;
Node_61 -> Node_62;
Node_72 -> Node_71;
Node_71 -> Node_48;
Node_69 -> Node_63;
Node_63 -> Node_64;
Node_70 -> Node_50;
Node_50 -> Node_51;
Node_55 -> Node_56;
Node_67 -> Node_58;
Node_58 -> Node_59;
Node_73 -> Node_71;
Node_68 -> Node_52;
}

