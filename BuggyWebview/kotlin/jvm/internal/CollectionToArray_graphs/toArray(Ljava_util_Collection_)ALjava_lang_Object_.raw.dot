digraph "CFG forkotlin.jvm.internal.CollectionToArray.toArray(Ljava\/util\/Collection;)[Ljava\/lang\/Object;" {
Node_38 [shape=record,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"collection\" \l0x0002: INVOKE  (r10 I:java.lang.Object A[D('collection' java.util.Collection)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:19)\l0x0006: INVOKE  (r1 I:int) = (r10 I:java.util.Collection A[D('collection' java.util.Collection)]) type: INTERFACE call: java.util.Collection.size():int A[MD:():int (c)] (LINE:83)\l}"];
Node_41 [shape=record,label="{41\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('size$iv' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0010  (LINE:84)\l}"];
Node_42 [shape=record,label="{42\:\ 0x000c|0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: SGET  (r2 I:java.lang.Object[] A[D('$i$a$\-toArrayImpl\-CollectionToArray$collectionToArray$1' int)]) =  kotlin.jvm.internal.CollectionToArray.EMPTY java.lang.Object[]  (LINE:21)\l}"];
Node_73 [shape=record,label="{73\:\ ?|SYNTHETIC\lRETURN\l|0x006e: RETURN  (r2 I:java.lang.Object[] A[D('iter$iv' java.util.Iterator)]) A[SYNTHETIC] (LINE:24)\l}"];
Node_39 [shape=record,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x0010|0x0010: INVOKE  (r2 I:java.util.Iterator) = (r10 I:java.util.Collection A[D('collection' java.util.Collection)]) type: INTERFACE call: java.util.Collection.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:85)\l0x0014: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator A[D('iter$iv' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:86)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0018|0x0018: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x001f \l}"];
Node_45 [shape=record,label="{45\:\ 0x001a|0x001a: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001b: SGET  (r3 I:java.lang.Object[] A[D('$i$a$\-toArrayImpl\-CollectionToArray$collectionToArray$1' int)]) =  kotlin.jvm.internal.CollectionToArray.EMPTY java.lang.Object[]  (LINE:21)\l0x001d: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('iter$iv' java.util.Iterator)]) = (r3 I:??[OBJECT, ARRAY] A[D('$i$a$\-toArrayImpl\-CollectionToArray$collectionToArray$1' int)]) \l}"];
Node_74 [shape=record,label="{74\:\ ?|SYNTHETIC\lRETURN\l|0x006e: RETURN  (r2 I:java.lang.Object[] A[D('iter$iv' java.util.Iterator)]) A[SYNTHETIC] (LINE:24)\l}"];
Node_46 [shape=record,label="{46\:\ 0x001f|0x001f: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('size$iv' int)])  (LINE:87)\l0x0020: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0021: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[D('size' int), IMMUTABLE_TYPE]) type: java.lang.Object[]  (LINE:22)\l0x0023: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$i$a$\-toArrayImpl\-CollectionToArray$collectionToArray$2' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:88)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0024|LOOP_START\lLOOP:0: B:47:0x0024\-\>B:70:0x0024\l|0x0025: ARITH  (r5 I:int) = (r4 I:int A[D('i$iv' int)]) + (1 int)  (LINE:91)\l0x0027: INVOKE  (r6 I:java.lang.Object) = (r2 I:java.util.Iterator A[D('iter$iv' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x002b: APUT  \l  (r3 I:??[OBJECT, ARRAY][] A[D('result$iv' java.lang.Object[])])\l  (r4 I:??[int, short, byte, char])\l  (r6 I:??[OBJECT, ARRAY])\l \l0x002d: ARRAY_LENGTH  (r4 I:int) = (r3 I:??[] A[D('result$iv' java.lang.Object[])])  (LINE:92)\l}"];
Node_48 [shape=record,label="{48\:\ 0x002e|0x002e: IF  (r5 I:??[int, byte, short, char] A[D('i$iv' int)]) \< (r4 I:??[int, byte, short, char])  \-\> B:67:0x005b \l}"];
Node_67 [shape=record,label="{67\:\ 0x005b|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x005b|0x005b: INVOKE  (r4 I:boolean) = (r2 I:java.util.Iterator A[D('iter$iv' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:104)\l}"];
Node_61 [shape=record,label="{61\:\ 0x005f|0x005f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x006f \l}"];
Node_64 [shape=record,label="{64\:\ 0x006f|0x006f: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i$iv' int)])  (LINE:104)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0024|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x0024|LOOP_END\lSYNTHETIC\lLOOP:0: B:47:0x0024\-\>B:70:0x0024\l}"];
Node_69 [shape=record,label="{69\:\ 0x0061|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0061|0x0061: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('result$iv' java.lang.Object[])]) \l0x0062: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i$iv' int)]) \l0x0063: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0064: INVOKE  (r8 I:java.lang.Object[]) = (r4 I:java.lang.Object[] A[D('result' java.lang.Object[])]), (r6 I:int A[D('size' int)]) type: STATIC call: java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] A[MD:\<T\>:(T[], int):T[] (c)] (LINE:23)\l0x0068: CONST_STR  (r9 I:java.lang.String) =  \"copyOf(result, size)\" \l0x006a: INVOKE  (r8 I:java.lang.Object), (r9 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x006d: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('iter$iv' java.util.Iterator)]) = (r8 I:??[OBJECT, ARRAY]) \l}"];
Node_63 [shape=record,label="{63\:\ 0x006e|RETURN\lORIG_RETURN\l|0x006e: RETURN  (r2 I:java.lang.Object[] A[D('iter$iv' java.util.Iterator)])  (LINE:24)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0030|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0030|0x0030: INVOKE  (r4 I:boolean) = (r2 I:java.util.Iterator A[D('iter$iv' java.util.Iterator)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:93)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0034|0x0034: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0038 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0038|0x0038: ARITH  (r4 I:int) = (r5 I:int A[D('i$iv' int)]) * (3 int)  (LINE:97)\l0x003a: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x003c: ARITH  (r4 I:int) = (r4 I:int) \>\>\> (1 int) \l}"];
Node_53 [shape=record,label="{53\:\ 0x003e|0x003e: IF  (r4 I:??[int, byte, short, char] A[D('newSize$iv' int)]) \> (r5 I:??[int, byte, short, char] A[D('i$iv' int)])  \-\> B:59:0x004f  (LINE:98)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0040|0x0040: CONST  (r6 I:??[int, float, short, byte, char]) = (2147483645(0x7ffffffd, float:NaN) ??[int, float, short, byte, char])  (LINE:99)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0043|0x0043: IF  (r5 I:??[int, byte, short, char] A[D('i$iv' int)]) \>= (r6 I:??[int, byte, short, char])  \-\> B:65:0x0049 \l}"];
Node_56 [shape=record,label="{56\:\ 0x0045|0x0045: CONST  (r4 I:??[int, float, short, byte, char] A[D('newSize$iv' int)]) = (2147483645(0x7ffffffd, float:NaN) ??[int, float, short, byte, char])  (LINE:100)\l}"];
Node_65 [shape=record,label="{65\:\ 0x0049|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0049|0x0049: NEW_INSTANCE  (r6 I:java.lang.OutOfMemoryError) =  java.lang.OutOfMemoryError  (LINE:99)\l0x004b: INVOKE  (r6 I:java.lang.OutOfMemoryError) type: DIRECT call: java.lang.OutOfMemoryError.\<init\>():void A[MD:():void (c)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x004e|0x004e: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_59 [shape=record,label="{59\:\ 0x004f|0x004f: INVOKE  (r6 I:java.lang.Object[]) = (r3 I:java.lang.Object[] A[D('result$iv' java.lang.Object[])]), (r4 I:int A[D('newSize$iv' int)]) type: STATIC call: java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] A[MD:\<T\>:(T[], int):T[] (c)] (LINE:102)\l0x0053: CONST_STR  (r7 I:java.lang.String) =  \"copyOf(result, newSize)\" \l0x0055: INVOKE  (r6 I:java.lang.Object), (r7 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0058: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('result$iv' java.lang.Object[])]) = (r6 I:??[OBJECT, ARRAY]) \l0x0059: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newSize$iv' int)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i$iv' int)]) \l}"];
Node_72 [shape=record,label="{72\:\ 0x0024|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0036|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0036|0x0036: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('iter$iv' java.util.Iterator)]) = (r3 I:??[OBJECT, ARRAY] A[D('result$iv' java.lang.Object[])]) \l}"];
Node_75 [shape=record,label="{75\:\ ?|SYNTHETIC\lRETURN\l|0x006e: RETURN  (r2 I:java.lang.Object[] A[D('iter$iv' java.util.Iterator)]) A[SYNTHETIC] (LINE:24)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object[] kotlin.jvm.internal.CollectionToArray.toArray((r10 I:java.util.Collection\<?\> A[D('collection' java.util.Collection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:45:0x001a \-\> B:63:0x006e, CROSS_EDGE: B:51:0x0036 \-\> B:63:0x006e, BACK_EDGE: B:59:0x004f \-\> B:47:0x0024, CROSS_EDGE: B:58:0x004e \-\> B:39:?, CROSS_EDGE: B:53:0x003e \-\> B:59:0x004f, CROSS_EDGE: B:62:0x0061 \-\> B:63:0x006e, BACK_EDGE: B:64:0x006f \-\> B:47:0x0024\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x000f: r2 '$i$a$\-toArrayImpl\-CollectionToArray$collectionToArray$1' I\l  0x001b\-0x001e: r3 '$i$a$\-toArrayImpl\-CollectionToArray$collectionToArray$1' I\l  0x0021\-0x0023: r4 '$i$a$\-toArrayImpl\-CollectionToArray$collectionToArray$2' I\l  0x0020\-0x0023: r3 'size' I\l  0x0024\-0x0027: r4 'i$iv' I\l  0x003e\-0x005a: r4 'newSize$iv' I\l  0x0006\-0x006e: r0 '$i$f$toArrayImpl' I\l  0x000a\-0x006e: r1 'size$iv' I\l  0x0014\-0x006e: r2 'iter$iv' Ljava\/util\/Iterator;\l  0x0023\-0x006e: r3 'result$iv' [Ljava\/lang\/Object;\l  0x0062\-0x006e: r4 'result' [Ljava\/lang\/Object;\l  0x0027\-0x006e: r5 'i$iv' I\l  0x0063\-0x006e: r6 'size' I\l  0x0064\-0x006e: r7 '$i$a$\-toArrayImpl\-CollectionToArray$collectionToArray$3' I\l  0x006f\-0x0070: r0 '$i$f$toArrayImpl' I\l  0x006f\-0x0070: r1 'size$iv' I\l  0x006f\-0x0070: r2 'iter$iv' Ljava\/util\/Iterator;\l  0x006f\-0x0070: r3 'result$iv' [Ljava\/lang\/Object;\l  0x006f\-0x0070: r5 'i$iv' I\l  \-1 \-0x0070: r10 'collection' Ljava\/util\/Collection;\lSIGNATURE: (Ljava\/util\/Collection\<*\>;)[Ljava\/lang\/Object;\l}"];
MethodNode -> Node_38;Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_73;
Node_73 -> Node_39;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_74;
Node_74 -> Node_39;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_67;
Node_48 -> Node_68[style=dashed];
Node_67 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_64;
Node_61 -> Node_69[style=dashed];
Node_64 -> Node_71;
Node_71 -> Node_70;
Node_70 -> Node_47;
Node_69 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_39;
Node_68 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_52;
Node_50 -> Node_66[style=dashed];
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_59;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_65;
Node_56 -> Node_59;
Node_65 -> Node_57;
Node_57 -> Node_58;
Node_58 -> Node_39;
Node_59 -> Node_72;
Node_72 -> Node_70;
Node_66 -> Node_51;
Node_51 -> Node_75;
Node_75 -> Node_39;
}

