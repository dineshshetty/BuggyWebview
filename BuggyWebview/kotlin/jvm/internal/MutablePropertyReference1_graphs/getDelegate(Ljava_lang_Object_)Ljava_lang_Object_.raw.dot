digraph "CFG forkotlin.jvm.internal.MutablePropertyReference1.getDelegate(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlin.reflect.KProperty) = (r1 I:kotlin.jvm.internal.MutablePropertyReference1) type: VIRTUAL call: kotlin.jvm.internal.MutablePropertyReference1.getReflected():kotlin.reflect.KProperty A[MD:():kotlin.reflect.KCallable (m)] (LINE:52)\l0x0004: CHECK_CAST (r0 I:kotlin.reflect.KMutableProperty1) = (kotlin.reflect.KMutableProperty1) (r0 I:??[OBJECT, ARRAY]) \l0x0006: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlin.reflect.KMutableProperty1), (r2 I:java.lang.Object A[D('receiver' java.lang.Object)]) type: INTERFACE call: kotlin.reflect.KMutableProperty1.getDelegate(java.lang.Object):java.lang.Object A[MD:(T):java.lang.Object (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:java.lang.Object) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlin.jvm.internal.MutablePropertyReference1.getDelegate((r1 'this' I:kotlin.jvm.internal.MutablePropertyReference1 A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Object A[D('receiver' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000a: r2 'receiver' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlin.reflect.KProperty1.getDelegate(T):java.lang.Object]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

