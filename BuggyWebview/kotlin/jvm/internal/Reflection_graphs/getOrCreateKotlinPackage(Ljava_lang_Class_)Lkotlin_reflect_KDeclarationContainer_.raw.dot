digraph "CFG forkotlin.jvm.internal.Reflection.getOrCreateKotlinPackage(Ljava\/lang\/Class;)Lkotlin\/reflect\/KDeclarationContainer;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:kotlin.jvm.internal.ReflectionFactory) =  kotlin.jvm.internal.Reflection.factory kotlin.jvm.internal.ReflectionFactory  (LINE:51)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"\" \l0x0004: INVOKE  (r0 I:kotlin.reflect.KDeclarationContainer) = \l  (r0 I:kotlin.jvm.internal.ReflectionFactory)\l  (r2 I:java.lang.Class A[D('javaClass' java.lang.Class)])\l  (r1 I:java.lang.String)\l type: VIRTUAL call: kotlin.jvm.internal.ReflectionFactory.getOrCreateKotlinPackage(java.lang.Class, java.lang.String):kotlin.reflect.KDeclarationContainer A[MD:(java.lang.Class, java.lang.String):kotlin.reflect.KDeclarationContainer (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:kotlin.reflect.KDeclarationContainer) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static kotlin.reflect.KDeclarationContainer kotlin.jvm.internal.Reflection.getOrCreateKotlinPackage((r2 I:java.lang.Class A[D('javaClass' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r2 'javaClass' Ljava\/lang\/Class;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

