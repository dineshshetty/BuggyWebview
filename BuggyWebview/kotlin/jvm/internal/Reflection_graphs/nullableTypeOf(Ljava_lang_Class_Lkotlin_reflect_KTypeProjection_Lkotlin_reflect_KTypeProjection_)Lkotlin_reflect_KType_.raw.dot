digraph "CFG forkotlin.jvm.internal.Reflection.nullableTypeOf(Ljava\/lang\/Class;Lkotlin\/reflect\/KTypeProjection;Lkotlin\/reflect\/KTypeProjection;)Lkotlin\/reflect\/KType;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:kotlin.jvm.internal.ReflectionFactory) =  kotlin.jvm.internal.Reflection.factory kotlin.jvm.internal.ReflectionFactory  (LINE:162)\l0x0002: INVOKE  (r1 I:kotlin.reflect.KClass) = (r4 I:java.lang.Class A[D('klass' java.lang.Class)]) type: STATIC call: kotlin.jvm.internal.Reflection.getOrCreateKotlinClass(java.lang.Class):kotlin.reflect.KClass A[MD:(java.lang.Class):kotlin.reflect.KClass (m)]\l0x0006: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0007: NEW_ARRAY  (r2 I:kotlin.reflect.KTypeProjection[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: kotlin.reflect.KTypeProjection[] \l0x0009: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: APUT  \l  (r2 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char])\l  (r5 I:??[OBJECT, ARRAY] A[D('arg1' kotlin.reflect.KTypeProjection)])\l \l0x000c: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000d: APUT  \l  (r2 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char])\l  (r6 I:??[OBJECT, ARRAY] A[D('arg2' kotlin.reflect.KTypeProjection)])\l \l0x000f: INVOKE  (r2 I:java.util.List) = (r2 I:java.lang.Object[]) type: STATIC call: java.util.Arrays.asList(java.lang.Object[]):java.util.List A[MD:\<T\>:(T[]):java.util.List\<T\> VARARG (c)]\l0x0013: INVOKE  (r0 I:kotlin.reflect.KType) = (r0 I:kotlin.jvm.internal.ReflectionFactory), (r1 I:kotlin.reflect.KClassifier), (r2 I:java.util.List), (r3 I:boolean) type: VIRTUAL call: kotlin.jvm.internal.ReflectionFactory.typeOf(kotlin.reflect.KClassifier, java.util.List, boolean):kotlin.reflect.KType A[MD:(kotlin.reflect.KClassifier, java.util.List\<kotlin.reflect.KTypeProjection\>, boolean):kotlin.reflect.KType (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:kotlin.reflect.KType) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static kotlin.reflect.KType kotlin.jvm.internal.Reflection.nullableTypeOf((r4 I:java.lang.Class A[D('klass' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.reflect.KTypeProjection A[D('arg1' kotlin.reflect.KTypeProjection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.reflect.KTypeProjection A[D('arg2' kotlin.reflect.KTypeProjection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0017: r4 'klass' Ljava\/lang\/Class;\l  \-1 \-0x0017: r5 'arg1' Lkotlin\/reflect\/KTypeProjection;\l  \-1 \-0x0017: r6 'arg2' Lkotlin\/reflect\/KTypeProjection;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

