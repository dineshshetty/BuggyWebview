digraph "CFG forkotlin.jvm.internal.Reflection.getOrCreateKotlinClasses([Ljava\/lang\/Class;)[Lkotlin\/reflect\/KClass;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: ARRAY_LENGTH  (r0 I:int) = (r4 I:??[] A[D('javaClasses' java.lang.Class[])])  (LINE:67)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0001|0x0001: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('size' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0006  (LINE:68)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0003|0x0003: SGET  (r1 I:kotlin.reflect.KClass[]) =  kotlin.jvm.internal.Reflection.EMPTY_K_CLASS_ARRAY kotlin.reflect.KClass[] \l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|RETURN\l|0x0005: RETURN  (r1 I:kotlin.reflect.KClass[]) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|0x0006: NEW_ARRAY  (r1 I:kotlin.reflect.KClass[]) = (r0 I:int A[D('size' int), IMMUTABLE_TYPE]) type: kotlin.reflect.KClass[]  (LINE:69)\l0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:70)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|LOOP_START\lLOOP:0: B:18:0x0009\-\>B:19:0x000b\l|0x0009: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:21:0x0016 \l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|LOOP_END\lLOOP:0: B:18:0x0009\-\>B:19:0x000b\l|0x000b: AGET  (r3 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][] A[D('javaClasses' java.lang.Class[])]), (r2 I:??[int, short, byte, char] A[D('i' int)])  (LINE:71)\l0x000d: INVOKE  (r3 I:kotlin.reflect.KClass) = (r3 I:java.lang.Class) type: STATIC call: kotlin.jvm.internal.Reflection.getOrCreateKotlinClass(java.lang.Class):kotlin.reflect.KClass A[MD:(java.lang.Class):kotlin.reflect.KClass (m)]\l0x0011: APUT  \l  (r1 I:??[OBJECT, ARRAY][] A[D('kClasses' kotlin.reflect.KClass[])])\l  (r2 I:??[int, short, byte, char] A[D('i' int)])\l  (r3 I:??[OBJECT, ARRAY])\l \l0x0013: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:70)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|RETURN\l|0x0016: RETURN  (r1 I:kotlin.reflect.KClass[] A[D('kClasses' kotlin.reflect.KClass[])])  (LINE:73)\l}"];
MethodNode[shape=record,label="{public static kotlin.reflect.KClass[] kotlin.jvm.internal.Reflection.getOrCreateKotlinClasses((r4 I:java.lang.Class[] A[D('javaClasses' java.lang.Class[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x000b \-\> B:18:0x0009, CROSS_EDGE: B:20:0x0016 \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0016: r2 'i' I\l  0x0001\-0x0016: r0 'size' I\l  0x0008\-0x0016: r1 'kClasses' [Lkotlin\/reflect\/KClass;\l  \-1 \-0x0016: r4 'javaClasses' [Ljava\/lang\/Class;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_18;
Node_21 -> Node_20;
Node_20 -> Node_12;
}

