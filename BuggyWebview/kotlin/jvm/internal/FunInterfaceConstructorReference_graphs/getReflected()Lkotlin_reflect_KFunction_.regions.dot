digraph "CFG forkotlin.jvm.internal.FunInterfaceConstructorReference.getReflected()Lkotlin\/reflect\/KFunction;" {
subgraph cluster_Region_374184514 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|throw new java.lang.UnsupportedOperationException(\"Functional interface constructor does not support reflection\")\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public kotlin.reflect.KFunction kotlin.jvm.internal.FunInterfaceConstructorReference.getReflected((r2v0 'this' kotlin.jvm.internal.FunInterfaceConstructorReference A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lREPLACED_BY: kotlin.jvm.internal.FunInterfaceConstructorReference.getReflected():kotlin.reflect.KCallable\lJadxCommentsAttr\{\l INFO: \l \-\> Access modifiers changed from: protected\l DEBUG: \l \-\> Method merged with bridge method\}\lMETHOD_OVERRIDE: [kotlin.jvm.internal.CallableReference.getReflected():kotlin.reflect.KCallable]\l}"];
MethodNode -> Node_0;Node_3 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
}

