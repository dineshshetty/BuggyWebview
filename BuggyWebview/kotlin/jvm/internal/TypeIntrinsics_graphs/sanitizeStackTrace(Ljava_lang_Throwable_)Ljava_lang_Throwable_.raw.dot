digraph "CFG forkotlin.jvm.internal.TypeIntrinsics.sanitizeStackTrace(Ljava\/lang\/Throwable;)Ljava\/lang\/Throwable;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_CLASS  (r0 I:java.lang.Class\<kotlin.jvm.internal.TypeIntrinsics\>) =  kotlin.jvm.internal.TypeIntrinsics.class  (LINE:17)\l0x0002: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x0006: INVOKE  (r0 I:java.lang.Throwable) = (r1 I:java.lang.Throwable A[D('throwable' T extends java.lang.Throwable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.sanitizeStackTrace(java.lang.Throwable, java.lang.String):java.lang.Throwable A[MD:\<T extends java.lang.Throwable\>:(T extends java.lang.Throwable, java.lang.String):T extends java.lang.Throwable (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:T extends java.lang.Throwable) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static T extends java.lang.Throwable kotlin.jvm.internal.TypeIntrinsics.sanitizeStackTrace((r1 I:T extends java.lang.Throwable A[D('throwable' T extends java.lang.Throwable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x000a: r1 'throwable' Ljava\/lang\/Throwable;, signature: TT;\lTYPE_VARS: [T extends java.lang.Throwable]\lSIGNATURE: \<T:Ljava\/lang\/Throwable;\>(TT;)TT;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

