digraph "CFG forkotlin.jvm.internal.CharSpreadBuilder.getSize(Ljava\/lang\/Object;)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('$this$getSize' java.lang.Object)])  (LINE:63)\l0x0001: CHECK_CAST (r0 I:char[]) = (char[]) (r0 I:??[OBJECT, ARRAY]) \l0x0003: INVOKE  (r0 I:int) = (r1 I:kotlin.jvm.internal.CharSpreadBuilder), (r0 I:char[]) type: VIRTUAL call: kotlin.jvm.internal.CharSpreadBuilder.getSize(char[]):int A[MD:(char[]):int (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ int kotlin.jvm.internal.CharSpreadBuilder.getSize((r1 'this' I:kotlin.jvm.internal.CharSpreadBuilder A[IMMUTABLE_TYPE, THIS]), (r2 I:char[] A[D('$this$getSize' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0007: r2 '$this$getSize' Ljava\/lang\/Object;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Method arguments types fixed to match base method, original types: [java.lang.Object]\}\lMETHOD_OVERRIDE: [kotlin.jvm.internal.PrimitiveSpreadBuilder.getSize(T):int]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

