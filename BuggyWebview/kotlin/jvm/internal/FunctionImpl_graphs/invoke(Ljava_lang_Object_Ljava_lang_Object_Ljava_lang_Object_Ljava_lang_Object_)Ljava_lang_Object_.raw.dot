digraph "CFG forkotlin.jvm.internal.FunctionImpl.invoke(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:66)\l0x0001: INVOKE  (r2 I:kotlin.jvm.internal.FunctionImpl), (r0 I:int) type: DIRECT call: kotlin.jvm.internal.FunctionImpl.checkArity(int):void A[MD:(int):void (m)]\l0x0004: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[]  (LINE:67)\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: APUT  (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY] A[D('p1' java.lang.Object)]) \l0x0009: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000a: APUT  (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY] A[D('p2' java.lang.Object)]) \l0x000c: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x000d: APUT  (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY] A[D('p3' java.lang.Object)]) \l0x000f: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0010: APUT  (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY] A[D('p4' java.lang.Object)]) \l0x0012: INVOKE  (r0 I:java.lang.Object) = (r2 I:kotlin.jvm.internal.FunctionImpl), (r0 I:java.lang.Object[]) type: VIRTUAL call: kotlin.jvm.internal.FunctionImpl.invokeVararg(java.lang.Object[]):java.lang.Object A[MD:(java.lang.Object[]):java.lang.Object VARARG (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:java.lang.Object) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlin.jvm.internal.FunctionImpl.invoke((r2 'this' I:kotlin.jvm.internal.FunctionImpl A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[D('p1' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[D('p2' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Object A[D('p3' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Object A[D('p4' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0016: r3 'p1' Ljava\/lang\/Object;\l  \-1 \-0x0016: r4 'p2' Ljava\/lang\/Object;\l  \-1 \-0x0016: r5 'p3' Ljava\/lang\/Object;\l  \-1 \-0x0016: r6 'p4' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function4.invoke(P1, P2, P3, P4):R]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

