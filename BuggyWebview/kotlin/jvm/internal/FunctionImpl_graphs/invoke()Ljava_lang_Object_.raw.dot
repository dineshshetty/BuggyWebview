digraph "CFG forkotlin.jvm.internal.FunctionImpl.invoke()Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:42)\l0x0001: INVOKE  (r1 I:kotlin.jvm.internal.FunctionImpl), (r0 I:int) type: DIRECT call: kotlin.jvm.internal.FunctionImpl.checkArity(int):void A[MD:(int):void (m)]\l0x0004: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[]  (LINE:43)\l0x0006: INVOKE  (r0 I:java.lang.Object) = (r1 I:kotlin.jvm.internal.FunctionImpl), (r0 I:java.lang.Object[]) type: VIRTUAL call: kotlin.jvm.internal.FunctionImpl.invokeVararg(java.lang.Object[]):java.lang.Object A[MD:(java.lang.Object[]):java.lang.Object VARARG (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:java.lang.Object) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlin.jvm.internal.FunctionImpl.invoke((r1 'this' I:kotlin.jvm.internal.FunctionImpl A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lMETHOD_OVERRIDE: [kotlin.jvm.functions.Function0.invoke():R]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

