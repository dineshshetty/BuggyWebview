digraph "CFG forkotlin.jvm.internal.FunctionReference.equals(Ljava\/lang\/Object;)Z" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000}"];
Node_31 [shape=record,label="{31\:\ 0x0001|if (r6 != r5) goto L5\l}"];
Node_32 [shape=record,label="{32\:\ 0x0003|RETURN\l|return true\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0004}"];
Node_34 [shape=record,label="{34\:\ 0x0007|if ((r6 instanceof kotlin.jvm.internal.FunctionReference) == false) goto L21\l}"];
Node_35 [shape=record,label="{35\:\ 0x0009|kotlin.jvm.internal.FunctionReference r1 = (kotlin.jvm.internal.FunctionReference) r6\l}"];
Node_36 [shape=record,label="{36\:\ 0x0018|if (getName().equals(r1.getName()) == false) goto L20\l}"];
Node_37 [shape=record,label="{37\:\ 0x001a}"];
Node_38 [shape=record,label="{38\:\ 0x0026|if (getSignature().equals(r1.getSignature()) == false) goto L20\l}"];
Node_39 [shape=record,label="{39\:\ 0x0028}"];
Node_40 [shape=record,label="{40\:\ 0x002c|if (r5.flags != r1.flags) goto L20\l}"];
Node_41 [shape=record,label="{41\:\ 0x002e}"];
Node_42 [shape=record,label="{42\:\ 0x0032|if (r5.arity != r1.arity) goto L20\l}"];
Node_43 [shape=record,label="{43\:\ 0x0034}"];
Node_44 [shape=record,label="{44\:\ 0x0040|if (kotlin.jvm.internal.Intrinsics.areEqual(getBoundReceiver(), r1.getBoundReceiver()) == false) goto L20\l}"];
Node_45 [shape=record,label="{45\:\ 0x0042}"];
Node_46 [shape=record,label="{46\:\ 0x004e|if (kotlin.jvm.internal.Intrinsics.areEqual(getOwner(), r1.getOwner()) == false) goto L20\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_48 [shape=record,label="{48\:\ 0x0051|RETURN\lORIG_RETURN\l|return false\l}"];
Node_50 [shape=record,label="{50\:\ 0x0053}"];
Node_51 [shape=record,label="{51\:\ 0x0055|if ((r6 instanceof kotlin.reflect.KFunction) == false) goto L25\l}"];
Node_52 [shape=record,label="{52\:\ 0x0057}"];
Node_53 [shape=record,label="{53\:\ 0x005f|RETURN\l|return r6.equals(compute())\l}"];
Node_54 [shape=record,label="{54\:\ 0x0060|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean kotlin.jvm.internal.FunctionReference.equals((r5v0 'this' kotlin.jvm.internal.FunctionReference A[IMMUTABLE_TYPE, THIS]), (r6v0 'obj' java.lang.Object A[D('obj' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:49:0x0052 \-\> B:29:?, CROSS_EDGE: B:46:0x004e \-\> B:49:0x0052, CROSS_EDGE: B:44:0x0040 \-\> B:48:0x0051, CROSS_EDGE: B:42:0x0032 \-\> B:48:0x0051, CROSS_EDGE: B:40:0x002c \-\> B:48:0x0051, CROSS_EDGE: B:38:0x0026 \-\> B:48:0x0051, CROSS_EDGE: B:36:0x0018 \-\> B:48:0x0051, CROSS_EDGE: B:53:0x005f \-\> B:29:?, CROSS_EDGE: B:54:0x0060 \-\> B:29:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [kotlin.jvm.internal.FunctionReference.equals(java.lang.Object):boolean]\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_29;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_50;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_48;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_48;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_48;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_48;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_48;
Node_45 -> Node_46;
Node_46 -> Node_48;
Node_46 -> Node_55[style=dashed];
Node_55 -> Node_29;
Node_48 -> Node_29;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_54;
Node_52 -> Node_53;
Node_53 -> Node_29;
Node_54 -> Node_29;
}

