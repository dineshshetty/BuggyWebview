digraph "CFG forkotlin.jvm.internal.CallableReference.getOwner()Lkotlin\/reflect\/KDeclarationContainer;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Class) = (r2 I:kotlin.jvm.internal.CallableReference) kotlin.jvm.internal.CallableReference.owner java.lang.Class  (LINE:111)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0006 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|SYNTHETIC\lRETURN\l|0x0004: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: RETURN  (r0 I:kotlin.reflect.KDeclarationContainer) A[SYNTHETIC]\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|0x0006: IGET  (r1 I:boolean) = (r2 I:kotlin.jvm.internal.CallableReference) kotlin.jvm.internal.CallableReference.isTopLevel boolean \l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x000f \l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: INVOKE  (r0 I:kotlin.reflect.KDeclarationContainer) = (r0 I:java.lang.Class) type: STATIC call: kotlin.jvm.internal.Reflection.getOrCreateKotlinPackage(java.lang.Class):kotlin.reflect.KDeclarationContainer A[MD:(java.lang.Class):kotlin.reflect.KDeclarationContainer (m)]\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0013: RETURN  (r0 I:kotlin.reflect.KDeclarationContainer) A[SYNTHETIC]\l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|0x000f: INVOKE  (r0 I:kotlin.reflect.KClass) = (r0 I:java.lang.Class) type: STATIC call: kotlin.jvm.internal.Reflection.getOrCreateKotlinClass(java.lang.Class):kotlin.reflect.KClass A[MD:(java.lang.Class):kotlin.reflect.KClass (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|RETURN\lORIG_RETURN\l|0x0013: RETURN  (r0 I:kotlin.reflect.KDeclarationContainer) \l}"];
MethodNode[shape=record,label="{public kotlin.reflect.KDeclarationContainer kotlin.jvm.internal.CallableReference.getOwner((r2 'this' I:kotlin.jvm.internal.CallableReference A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000a \-\> B:21:0x0013, CROSS_EDGE: B:20:0x000f \-\> B:21:0x0013\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [kotlin.jvm.internal.CallableReference.getOwner():kotlin.reflect.KDeclarationContainer]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_13;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_23;
Node_23 -> Node_13;
Node_20 -> Node_21;
Node_21 -> Node_13;
}

