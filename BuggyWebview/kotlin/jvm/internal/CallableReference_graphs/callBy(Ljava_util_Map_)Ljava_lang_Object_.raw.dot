digraph "CFG forkotlin.jvm.internal.CallableReference.callBy(Ljava\/util\/Map;)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:kotlin.reflect.KCallable) = (r1 I:kotlin.jvm.internal.CallableReference) type: VIRTUAL call: kotlin.jvm.internal.CallableReference.getReflected():kotlin.reflect.KCallable A[MD:():kotlin.reflect.KCallable (m)] (LINE:166)\l0x0004: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlin.reflect.KCallable), (r2 I:java.util.Map A[D('args' java.util.Map)]) type: INTERFACE call: kotlin.reflect.KCallable.callBy(java.util.Map):java.lang.Object A[MD:(java.util.Map\<kotlin.reflect.KParameter, ? extends java.lang.Object\>):R (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:java.lang.Object) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlin.jvm.internal.CallableReference.callBy((r1 'this' I:kotlin.jvm.internal.CallableReference A[IMMUTABLE_TYPE, THIS]), (r2 I:java.util.Map A[D('args' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r2 'args' Ljava\/util\/Map;\lMETHOD_OVERRIDE: [kotlin.reflect.KCallable.callBy(java.util.Map\<kotlin.reflect.KParameter, ? extends java.lang.Object\>):R]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

