digraph "CFG forkotlin.jvm.JvmClassMappingKt.getJavaObjectType(Lkotlin\/reflect\/KClass;)Ljava\/lang\/Class;" {
Node_50 [shape=record,label="{50\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_52 [shape=record,label="{52\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\ljava.lang.Class r0 = (java.lang.Class\<T\>) ((kotlin.jvm.internal.ClassBasedDeclarationContainer) r4).getJClass()\l}"];
Node_53 [shape=record,label="{53\:\ 0x0012|if (r0.isPrimitive() != false) goto L6\l}"];
Node_54 [shape=record,label="{54\:\ 0x0014|kotlin.jvm.internal.Intrinsics.checkNotNull(r0, \"null cannot be cast to non\-null type java.lang.Class\<T of kotlin.jvm.JvmClassMappingKt.\<get\-javaObjectType\>\>\")\l}"];
Node_55 [shape=record,label="{55\:\ 0x0017|RETURN\l|return r0\l}"];
Node_51 [shape=record,label="{51\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_56 [shape=record,label="{56\:\ 0x0018|java.lang.String r1 = r0.getName()\l}"];
Node_57 [shape=record,label="{57\:\ 0x001c|if (r1 == null) goto L39\l}"];
Node_58 [shape=record,label="{58\:\ 0x001e}"];
Node_59 [shape=record,label="{59\:\ 0x0022|switch(r1.hashCode()) \{\l    case \-1325958191: goto L36;\l    case 104431: goto L33;\l    case 3039496: goto L30;\l    case 3052374: goto L27;\l    case 3327612: goto L24;\l    case 3625364: goto L21;\l    case 64711720: goto L18;\l    case 97526364: goto L15;\l    case 109413500: goto L10;\l    default: goto L39;\l\}\l}"];
Node_61 [shape=record,label="{61\:\ 0x0027}"];
Node_62 [shape=record,label="{62\:\ 0x002d|if (r1.equals(\"short\") != false) goto L12\l}"];
Node_64 [shape=record,label="{64\:\ 0x0031|java.lang.Class\<java.lang.Short\> r1 = (java.lang.Class\<T\>) java.lang.Short.class\l}"];
Node_98 [shape=record,label="{98\:\ 0x0096|PHI: r1 \l  PHI: (r1v3 java.lang.Class\<T\>) = (r1v2 java.lang.Class\<T\>), (r1v5 java.lang.Class\<T\>), (r1v7 java.lang.Class\<T\>), (r1v9 java.lang.Class\<T\>), (r1v11 java.lang.Class\<T\>), (r1v13 java.lang.Class\<T\>), (r1v15 java.lang.Class\<T\>), (r1v17 java.lang.Class\<T\>), (r1v19 java.lang.Class\<T\>), (r1v21 java.lang.Class\<T\>) binds: [B:97:0x0095, B:96:0x0092, B:92:0x0086, B:88:0x007a, B:84:0x006e, B:80:0x0062, B:76:0x0056, B:72:0x004a, B:68:0x003e, B:64:0x0031] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Intrinsics.checkNotNull(r1, \"null cannot be cast to non\-null type java.lang.Class\<T of kotlin.jvm.JvmClassMappingKt.\<get\-javaObjectType\>\>\")\l}"];
Node_99 [shape=record,label="{99\:\ 0x0099|RETURN\l|return r1\l}"];
Node_65 [shape=record,label="{65\:\ 0x0035}"];
Node_66 [shape=record,label="{66\:\ 0x003b|if (r1.equals(androidx.constraintlayout.core.motion.utils.TypedValues.Custom.S_FLOAT) != false) goto L17\l}"];
Node_68 [shape=record,label="{68\:\ 0x003e|java.lang.Class\<java.lang.Float\> r1 = (java.lang.Class\<T\>) java.lang.Float.class\l}"];
Node_69 [shape=record,label="{69\:\ 0x0041}"];
Node_70 [shape=record,label="{70\:\ 0x0047|if (r1.equals(androidx.constraintlayout.core.motion.utils.TypedValues.Custom.S_BOOLEAN) != false) goto L20\l}"];
Node_72 [shape=record,label="{72\:\ 0x004a|java.lang.Class\<java.lang.Boolean\> r1 = (java.lang.Class\<T\>) java.lang.Boolean.class\l}"];
Node_73 [shape=record,label="{73\:\ 0x004d}"];
Node_74 [shape=record,label="{74\:\ 0x0053|if (r1.equals(\"void\") != false) goto L23\l}"];
Node_76 [shape=record,label="{76\:\ 0x0056|java.lang.Class\<java.lang.Void\> r1 = (java.lang.Class\<T\>) java.lang.Void.class\l}"];
Node_77 [shape=record,label="{77\:\ 0x0059}"];
Node_78 [shape=record,label="{78\:\ 0x005f|if (r1.equals(\"long\") != false) goto L26\l}"];
Node_80 [shape=record,label="{80\:\ 0x0062|java.lang.Class\<java.lang.Long\> r1 = (java.lang.Class\<T\>) java.lang.Long.class\l}"];
Node_81 [shape=record,label="{81\:\ 0x0065}"];
Node_82 [shape=record,label="{82\:\ 0x006b|if (r1.equals(\"char\") != false) goto L29\l}"];
Node_84 [shape=record,label="{84\:\ 0x006e|java.lang.Class\<java.lang.Character\> r1 = (java.lang.Class\<T\>) java.lang.Character.class\l}"];
Node_85 [shape=record,label="{85\:\ 0x0071}"];
Node_86 [shape=record,label="{86\:\ 0x0077|if (r1.equals(\"byte\") != false) goto L32\l}"];
Node_88 [shape=record,label="{88\:\ 0x007a|java.lang.Class\<java.lang.Byte\> r1 = (java.lang.Class\<T\>) java.lang.Byte.class\l}"];
Node_89 [shape=record,label="{89\:\ 0x007d}"];
Node_90 [shape=record,label="{90\:\ 0x0083|if (r1.equals(\"int\") != false) goto L35\l}"];
Node_92 [shape=record,label="{92\:\ 0x0086|java.lang.Class\<java.lang.Integer\> r1 = (java.lang.Class\<T\>) java.lang.Integer.class\l}"];
Node_93 [shape=record,label="{93\:\ 0x0089}"];
Node_94 [shape=record,label="{94\:\ 0x008f|if (r1.equals(\"double\") != false) goto L38\l}"];
Node_96 [shape=record,label="{96\:\ 0x0092|java.lang.Class\<java.lang.Double\> r1 = (java.lang.Class\<T\>) java.lang.Double.class\l}"];
Node_97 [shape=record,label="{97\:\ 0x0095|r1 = r0\l}"];
MethodNode[shape=record,label="{public static final java.lang.Class\<T\> kotlin.jvm.JvmClassMappingKt.getJavaObjectType((r4v0 kotlin.reflect.KClass\<T\> A[D('$this$javaObjectType' kotlin.reflect.KClass), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:99:0x0099 \-\> B:51:?, CROSS_EDGE: B:97:0x0095 \-\> B:98:0x0096, CROSS_EDGE: B:68:0x003e \-\> B:98:0x0096, CROSS_EDGE: B:66:0x003b \-\> B:97:0x0095, CROSS_EDGE: B:72:0x004a \-\> B:98:0x0096, CROSS_EDGE: B:70:0x0047 \-\> B:97:0x0095, CROSS_EDGE: B:76:0x0056 \-\> B:98:0x0096, CROSS_EDGE: B:74:0x0053 \-\> B:97:0x0095, CROSS_EDGE: B:80:0x0062 \-\> B:98:0x0096, CROSS_EDGE: B:78:0x005f \-\> B:97:0x0095, CROSS_EDGE: B:84:0x006e \-\> B:98:0x0096, CROSS_EDGE: B:82:0x006b \-\> B:97:0x0095, CROSS_EDGE: B:88:0x007a \-\> B:98:0x0096, CROSS_EDGE: B:86:0x0077 \-\> B:97:0x0095, CROSS_EDGE: B:92:0x0086 \-\> B:98:0x0096, CROSS_EDGE: B:90:0x0083 \-\> B:97:0x0095, CROSS_EDGE: B:96:0x0092 \-\> B:98:0x0096, CROSS_EDGE: B:94:0x008f \-\> B:97:0x0095, CROSS_EDGE: B:59:0x0022 \-\> B:97:0x0095, CROSS_EDGE: B:57:0x001c \-\> B:97:0x0095\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/reflect\/KClass\<TT;\>;)Ljava\/lang\/Class\<TT;\>;\l}"];
MethodNode -> Node_50;Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_56;
Node_54 -> Node_55;
Node_55 -> Node_51;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_97;
Node_58 -> Node_59;
Node_59 -> Node_61;
Node_59 -> Node_65;
Node_59 -> Node_69;
Node_59 -> Node_73;
Node_59 -> Node_77;
Node_59 -> Node_81;
Node_59 -> Node_85;
Node_59 -> Node_89;
Node_59 -> Node_93;
Node_59 -> Node_97;
Node_61 -> Node_62;
Node_62 -> Node_64;
Node_62 -> Node_97[style=dashed];
Node_64 -> Node_98;
Node_98 -> Node_99;
Node_99 -> Node_51;
Node_65 -> Node_66;
Node_66 -> Node_68;
Node_66 -> Node_97[style=dashed];
Node_68 -> Node_98;
Node_69 -> Node_70;
Node_70 -> Node_72;
Node_70 -> Node_97[style=dashed];
Node_72 -> Node_98;
Node_73 -> Node_74;
Node_74 -> Node_76;
Node_74 -> Node_97[style=dashed];
Node_76 -> Node_98;
Node_77 -> Node_78;
Node_78 -> Node_80;
Node_78 -> Node_97[style=dashed];
Node_80 -> Node_98;
Node_81 -> Node_82;
Node_82 -> Node_84;
Node_82 -> Node_97[style=dashed];
Node_84 -> Node_98;
Node_85 -> Node_86;
Node_86 -> Node_88;
Node_86 -> Node_97[style=dashed];
Node_88 -> Node_98;
Node_89 -> Node_90;
Node_90 -> Node_92;
Node_90 -> Node_97[style=dashed];
Node_92 -> Node_98;
Node_93 -> Node_94;
Node_94 -> Node_96;
Node_94 -> Node_97[style=dashed];
Node_96 -> Node_98;
Node_97 -> Node_98;
}

