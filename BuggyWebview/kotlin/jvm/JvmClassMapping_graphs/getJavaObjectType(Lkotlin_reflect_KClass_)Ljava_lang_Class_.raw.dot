digraph "CFG forkotlin.jvm.JvmClassMappingKt.getJavaObjectType(Lkotlin\/reflect\/KClass;)Ljava\/lang\/Class;" {
Node_50 [shape=record,label="{50\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_52 [shape=record,label="{52\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$javaObjectType' kotlin.reflect.KClass)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('$this$javaObjectType' kotlin.reflect.KClass)])  (LINE:59)\l0x0006: CHECK_CAST (r0 I:kotlin.jvm.internal.ClassBasedDeclarationContainer) = (kotlin.jvm.internal.ClassBasedDeclarationContainer) (r0 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  (r0 I:java.lang.Class) = (r0 I:kotlin.jvm.internal.ClassBasedDeclarationContainer) type: INTERFACE call: kotlin.jvm.internal.ClassBasedDeclarationContainer.getJClass():java.lang.Class A[MD:():java.lang.Class\<?\> (m)]\l0x000c: INVOKE  (r1 I:boolean) = (r0 I:java.lang.Class A[D('thisJClass' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.isPrimitive():boolean A[MD:():boolean (c)] (LINE:60)\l0x0010: CONST_STR  (r2 I:java.lang.String) =  \"null cannot be cast to non\-null type java.lang.Class\<T of kotlin.jvm.JvmClassMappingKt.\<get\-javaObjectType\>\>\" \l}"];
Node_53 [shape=record,label="{53\:\ 0x0012|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0018 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0014|0x0014: INVOKE  (r0 I:java.lang.Object A[D('thisJClass' java.lang.Class)]), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:java.lang.Class\<T\> A[D('thisJClass' java.lang.Class)]) \l}"];
Node_51 [shape=record,label="{51\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_56 [shape=record,label="{56\:\ 0x0018|0x0018: INVOKE  (r1 I:java.lang.String) = (r0 I:java.lang.Class A[D('thisJClass' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.getName():java.lang.String A[MD:():java.lang.String (c)] (LINE:62)\l}"];
Node_57 [shape=record,label="{57\:\ 0x001c|0x001c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:97:0x0095 \l}"];
Node_58 [shape=record,label="{58\:\ 0x001e|0x001e: INVOKE  (r3 I:int) = (r1 I:java.lang.String) type: VIRTUAL call: java.lang.String.hashCode():int A[MD:():int (c)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x0022|0x0022: SWITCH  (r3 I:??)\l case \-1325958191: goto B:93:0x0089\l case 104431: goto B:89:0x007d\l case 3039496: goto B:85:0x0071\l case 3052374: goto B:81:0x0065\l case 3327612: goto B:77:0x0059\l case 3625364: goto B:73:0x004d\l case 64711720: goto B:69:0x0041\l case 97526364: goto B:65:0x0035\l case 109413500: goto B:61:0x0027\l default: goto B:97:0x0095 \l}"];
Node_61 [shape=record,label="{61\:\ 0x0027|0x0027: CONST_STR  (r3 I:java.lang.String) =  \"short\" \l0x0029: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x002d|0x002d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0031 \l}"];
Node_64 [shape=record,label="{64\:\ 0x0031|0x0031: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Short\>) =  java.lang.Short.class \l}"];
Node_98 [shape=record,label="{98\:\ 0x0096|0x0096: INVOKE  (r1 I:java.lang.Object), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)] (LINE:62)\l}"];
Node_99 [shape=record,label="{99\:\ 0x0099|RETURN\l|0x0099: RETURN  (r1 I:java.lang.Class\<T\>) \l}"];
Node_65 [shape=record,label="{65\:\ 0x0035|0x0035: CONST_STR  (r3 I:java.lang.String) =  \"float\" \l0x0037: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_66 [shape=record,label="{66\:\ 0x003b|0x003b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x003e \l}"];
Node_68 [shape=record,label="{68\:\ 0x003e|0x003e: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Float\>) =  java.lang.Float.class \l}"];
Node_69 [shape=record,label="{69\:\ 0x0041|0x0041: CONST_STR  (r3 I:java.lang.String) =  \"boolean\" \l0x0043: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_70 [shape=record,label="{70\:\ 0x0047|0x0047: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x004a \l}"];
Node_72 [shape=record,label="{72\:\ 0x004a|0x004a: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Boolean\>) =  java.lang.Boolean.class \l}"];
Node_73 [shape=record,label="{73\:\ 0x004d|0x004d: CONST_STR  (r3 I:java.lang.String) =  \"void\" \l0x004f: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_74 [shape=record,label="{74\:\ 0x0053|0x0053: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:76:0x0056 \l}"];
Node_76 [shape=record,label="{76\:\ 0x0056|0x0056: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Void\>) =  java.lang.Void.class \l}"];
Node_77 [shape=record,label="{77\:\ 0x0059|0x0059: CONST_STR  (r3 I:java.lang.String) =  \"long\" \l0x005b: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_78 [shape=record,label="{78\:\ 0x005f|0x005f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x0062 \l}"];
Node_80 [shape=record,label="{80\:\ 0x0062|0x0062: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Long\>) =  java.lang.Long.class \l}"];
Node_81 [shape=record,label="{81\:\ 0x0065|0x0065: CONST_STR  (r3 I:java.lang.String) =  \"char\" \l0x0067: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_82 [shape=record,label="{82\:\ 0x006b|0x006b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:0x006e \l}"];
Node_84 [shape=record,label="{84\:\ 0x006e|0x006e: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Character\>) =  java.lang.Character.class \l}"];
Node_85 [shape=record,label="{85\:\ 0x0071|0x0071: CONST_STR  (r3 I:java.lang.String) =  \"byte\" \l0x0073: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_86 [shape=record,label="{86\:\ 0x0077|0x0077: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:88:0x007a \l}"];
Node_88 [shape=record,label="{88\:\ 0x007a|0x007a: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Byte\>) =  java.lang.Byte.class \l}"];
Node_89 [shape=record,label="{89\:\ 0x007d|0x007d: CONST_STR  (r3 I:java.lang.String) =  \"int\" \l0x007f: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_90 [shape=record,label="{90\:\ 0x0083|0x0083: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:92:0x0086 \l}"];
Node_92 [shape=record,label="{92\:\ 0x0086|0x0086: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Integer\>) =  java.lang.Integer.class \l}"];
Node_93 [shape=record,label="{93\:\ 0x0089|0x0089: CONST_STR  (r3 I:java.lang.String) =  \"double\" \l0x008b: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_94 [shape=record,label="{94\:\ 0x008f|0x008f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:96:0x0092 \l}"];
Node_96 [shape=record,label="{96\:\ 0x0092|0x0092: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Double\>) =  java.lang.Double.class \l}"];
Node_97 [shape=record,label="{97\:\ 0x0095|0x0095: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('thisJClass' java.lang.Class)])  (LINE:72)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Class\<T\> kotlin.jvm.JvmClassMappingKt.getJavaObjectType((r4 I:kotlin.reflect.KClass\<T\> A[D('$this$javaObjectType' kotlin.reflect.KClass), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:99:0x0099 \-\> B:51:?, CROSS_EDGE: B:97:0x0095 \-\> B:98:0x0096, CROSS_EDGE: B:68:0x003e \-\> B:98:0x0096, CROSS_EDGE: B:66:0x003b \-\> B:97:0x0095, CROSS_EDGE: B:72:0x004a \-\> B:98:0x0096, CROSS_EDGE: B:70:0x0047 \-\> B:97:0x0095, CROSS_EDGE: B:76:0x0056 \-\> B:98:0x0096, CROSS_EDGE: B:74:0x0053 \-\> B:97:0x0095, CROSS_EDGE: B:80:0x0062 \-\> B:98:0x0096, CROSS_EDGE: B:78:0x005f \-\> B:97:0x0095, CROSS_EDGE: B:84:0x006e \-\> B:98:0x0096, CROSS_EDGE: B:82:0x006b \-\> B:97:0x0095, CROSS_EDGE: B:88:0x007a \-\> B:98:0x0096, CROSS_EDGE: B:86:0x0077 \-\> B:97:0x0095, CROSS_EDGE: B:92:0x0086 \-\> B:98:0x0096, CROSS_EDGE: B:90:0x0083 \-\> B:97:0x0095, CROSS_EDGE: B:96:0x0092 \-\> B:98:0x0096, CROSS_EDGE: B:94:0x008f \-\> B:97:0x0095, CROSS_EDGE: B:59:0x0022 \-\> B:97:0x0095, CROSS_EDGE: B:57:0x001c \-\> B:97:0x0095\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x00bf: r0 'thisJClass' Ljava\/lang\/Class;\l  \-1 \-0x00bf: r4 '$this$javaObjectType' Lkotlin\/reflect\/KClass;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/reflect\/KClass\<TT;\>;)Ljava\/lang\/Class\<TT;\>;\l}"];
MethodNode -> Node_50;Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_56;
Node_54 -> Node_55;
Node_55 -> Node_51;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_97;
Node_58 -> Node_59;
Node_59 -> Node_61;
Node_59 -> Node_65;
Node_59 -> Node_69;
Node_59 -> Node_73;
Node_59 -> Node_77;
Node_59 -> Node_81;
Node_59 -> Node_85;
Node_59 -> Node_89;
Node_59 -> Node_93;
Node_59 -> Node_97;
Node_61 -> Node_62;
Node_62 -> Node_64;
Node_62 -> Node_97[style=dashed];
Node_64 -> Node_98;
Node_98 -> Node_99;
Node_99 -> Node_51;
Node_65 -> Node_66;
Node_66 -> Node_68;
Node_66 -> Node_97[style=dashed];
Node_68 -> Node_98;
Node_69 -> Node_70;
Node_70 -> Node_72;
Node_70 -> Node_97[style=dashed];
Node_72 -> Node_98;
Node_73 -> Node_74;
Node_74 -> Node_76;
Node_74 -> Node_97[style=dashed];
Node_76 -> Node_98;
Node_77 -> Node_78;
Node_78 -> Node_80;
Node_78 -> Node_97[style=dashed];
Node_80 -> Node_98;
Node_81 -> Node_82;
Node_82 -> Node_84;
Node_82 -> Node_97[style=dashed];
Node_84 -> Node_98;
Node_85 -> Node_86;
Node_86 -> Node_88;
Node_86 -> Node_97[style=dashed];
Node_88 -> Node_98;
Node_89 -> Node_90;
Node_90 -> Node_92;
Node_90 -> Node_97[style=dashed];
Node_92 -> Node_98;
Node_93 -> Node_94;
Node_94 -> Node_96;
Node_94 -> Node_97[style=dashed];
Node_96 -> Node_98;
Node_97 -> Node_98;
}

