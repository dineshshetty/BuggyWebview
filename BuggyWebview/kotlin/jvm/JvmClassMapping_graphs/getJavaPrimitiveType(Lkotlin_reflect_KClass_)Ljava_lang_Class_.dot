digraph "CFG forkotlin.jvm.JvmClassMappingKt.getJavaPrimitiveType(Lkotlin\/reflect\/KClass;)Ljava\/lang\/Class;" {
Node_58 [shape=record,label="{58\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_60 [shape=record,label="{60\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\ljava.lang.Class r0 = (java.lang.Class\<T\>) ((kotlin.jvm.internal.ClassBasedDeclarationContainer) r3).getJClass()\l}"];
Node_61 [shape=record,label="{61\:\ 0x0010|if (r0.isPrimitive() == false) goto L6\l}"];
Node_62 [shape=record,label="{62\:\ 0x0012|kotlin.jvm.internal.Intrinsics.checkNotNull(r0, \"null cannot be cast to non\-null type java.lang.Class\<T of kotlin.jvm.JvmClassMappingKt.\<get\-javaPrimitiveType\>\>\")\l}"];
Node_63 [shape=record,label="{63\:\ 0x0017|RETURN\l|return r0\l}"];
Node_59 [shape=record,label="{59\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_64 [shape=record,label="{64\:\ 0x0018|java.lang.String r1 = r0.getName()\l}"];
Node_65 [shape=record,label="{65\:\ 0x001c|if (r1 == null) goto L46\l}"];
Node_66 [shape=record,label="{66\:\ 0x001e}"];
Node_67 [shape=record,label="{67\:\ 0x0022|switch(r1.hashCode()) \{\l    case \-2056817302: goto L42;\l    case \-527879800: goto L38;\l    case \-515992664: goto L34;\l    case 155276373: goto L30;\l    case 344809556: goto L26;\l    case 398507100: goto L22;\l    case 398795216: goto L18;\l    case 399092968: goto L14;\l    case 761287205: goto L10;\l    default: goto L46;\l\}\l}"];
Node_69 [shape=record,label="{69\:\ 0x0027}"];
Node_70 [shape=record,label="{70\:\ 0x002d|if (r1.equals(\"java.lang.Double\") != false) goto L12\l}"];
Node_72 [shape=record,label="{72\:\ 0x0031}"];
Node_107 [shape=record,label="{107\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Double.TYPE\l}"];
Node_73 [shape=record,label="{73\:\ 0x0035}"];
Node_74 [shape=record,label="{74\:\ 0x003b|if (r1.equals(\"java.lang.Void\") != false) goto L16\l}"];
Node_76 [shape=record,label="{76\:\ 0x003e}"];
Node_108 [shape=record,label="{108\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Void.TYPE\l}"];
Node_77 [shape=record,label="{77\:\ 0x0041}"];
Node_78 [shape=record,label="{78\:\ 0x0047|if (r1.equals(\"java.lang.Long\") != false) goto L20\l}"];
Node_80 [shape=record,label="{80\:\ 0x004a}"];
Node_109 [shape=record,label="{109\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Long.TYPE\l}"];
Node_81 [shape=record,label="{81\:\ 0x004d}"];
Node_82 [shape=record,label="{82\:\ 0x0053|if (r1.equals(\"java.lang.Byte\") != false) goto L24\l}"];
Node_84 [shape=record,label="{84\:\ 0x0056}"];
Node_110 [shape=record,label="{110\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Byte.TYPE\l}"];
Node_85 [shape=record,label="{85\:\ 0x0059}"];
Node_86 [shape=record,label="{86\:\ 0x005f|if (r1.equals(\"java.lang.Boolean\") != false) goto L28\l}"];
Node_88 [shape=record,label="{88\:\ 0x0062}"];
Node_111 [shape=record,label="{111\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Boolean.TYPE\l}"];
Node_89 [shape=record,label="{89\:\ 0x0065}"];
Node_90 [shape=record,label="{90\:\ 0x006b|if (r1.equals(\"java.lang.Character\") != false) goto L32\l}"];
Node_92 [shape=record,label="{92\:\ 0x006e}"];
Node_112 [shape=record,label="{112\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Character.TYPE\l}"];
Node_93 [shape=record,label="{93\:\ 0x0071}"];
Node_94 [shape=record,label="{94\:\ 0x0077|if (r1.equals(\"java.lang.Short\") != false) goto L36\l}"];
Node_96 [shape=record,label="{96\:\ 0x007a}"];
Node_113 [shape=record,label="{113\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Short.TYPE\l}"];
Node_97 [shape=record,label="{97\:\ 0x007d}"];
Node_98 [shape=record,label="{98\:\ 0x0083|if (r1.equals(\"java.lang.Float\") != false) goto L40\l}"];
Node_100 [shape=record,label="{100\:\ 0x0086}"];
Node_114 [shape=record,label="{114\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Float.TYPE\l}"];
Node_101 [shape=record,label="{101\:\ 0x0089}"];
Node_102 [shape=record,label="{102\:\ 0x008f|if (r1.equals(\"java.lang.Integer\") != false) goto L44\l}"];
Node_104 [shape=record,label="{104\:\ 0x0092}"];
Node_115 [shape=record,label="{115\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Integer.TYPE\l}"];
Node_105 [shape=record,label="{105\:\ 0x0095|RETURN\lORIG_RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public static final java.lang.Class\<T\> kotlin.jvm.JvmClassMappingKt.getJavaPrimitiveType((r3v0 kotlin.reflect.KClass\<T\> A[D('$this$javaPrimitiveType' kotlin.reflect.KClass), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:106:0x0096 \-\> B:59:?, CROSS_EDGE: B:105:0x0095 \-\> B:106:0x0096, CROSS_EDGE: B:76:0x003e \-\> B:106:0x0096, CROSS_EDGE: B:74:0x003b \-\> B:105:0x0095, CROSS_EDGE: B:80:0x004a \-\> B:106:0x0096, CROSS_EDGE: B:78:0x0047 \-\> B:105:0x0095, CROSS_EDGE: B:84:0x0056 \-\> B:106:0x0096, CROSS_EDGE: B:82:0x0053 \-\> B:105:0x0095, CROSS_EDGE: B:88:0x0062 \-\> B:106:0x0096, CROSS_EDGE: B:86:0x005f \-\> B:105:0x0095, CROSS_EDGE: B:92:0x006e \-\> B:106:0x0096, CROSS_EDGE: B:90:0x006b \-\> B:105:0x0095, CROSS_EDGE: B:96:0x007a \-\> B:106:0x0096, CROSS_EDGE: B:94:0x0077 \-\> B:105:0x0095, CROSS_EDGE: B:100:0x0086 \-\> B:106:0x0096, CROSS_EDGE: B:98:0x0083 \-\> B:105:0x0095, CROSS_EDGE: B:104:0x0092 \-\> B:106:0x0096, CROSS_EDGE: B:102:0x008f \-\> B:105:0x0095, CROSS_EDGE: B:67:0x0022 \-\> B:105:0x0095, CROSS_EDGE: B:65:0x001c \-\> B:105:0x0095\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Lkotlin\/reflect\/KClass\<TT;\>;)Ljava\/lang\/Class\<TT;\>;\l}"];
MethodNode -> Node_58;Node_58 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_64;
Node_62 -> Node_63;
Node_63 -> Node_59;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_105;
Node_66 -> Node_67;
Node_67 -> Node_69;
Node_67 -> Node_73;
Node_67 -> Node_77;
Node_67 -> Node_81;
Node_67 -> Node_85;
Node_67 -> Node_89;
Node_67 -> Node_93;
Node_67 -> Node_97;
Node_67 -> Node_101;
Node_67 -> Node_105;
Node_69 -> Node_70;
Node_70 -> Node_72;
Node_70 -> Node_105[style=dashed];
Node_72 -> Node_107;
Node_107 -> Node_59;
Node_73 -> Node_74;
Node_74 -> Node_76;
Node_74 -> Node_105[style=dashed];
Node_76 -> Node_108;
Node_108 -> Node_59;
Node_77 -> Node_78;
Node_78 -> Node_80;
Node_78 -> Node_105[style=dashed];
Node_80 -> Node_109;
Node_109 -> Node_59;
Node_81 -> Node_82;
Node_82 -> Node_84;
Node_82 -> Node_105[style=dashed];
Node_84 -> Node_110;
Node_110 -> Node_59;
Node_85 -> Node_86;
Node_86 -> Node_88;
Node_86 -> Node_105[style=dashed];
Node_88 -> Node_111;
Node_111 -> Node_59;
Node_89 -> Node_90;
Node_90 -> Node_92;
Node_90 -> Node_105[style=dashed];
Node_92 -> Node_112;
Node_112 -> Node_59;
Node_93 -> Node_94;
Node_94 -> Node_96;
Node_94 -> Node_105[style=dashed];
Node_96 -> Node_113;
Node_113 -> Node_59;
Node_97 -> Node_98;
Node_98 -> Node_100;
Node_98 -> Node_105[style=dashed];
Node_100 -> Node_114;
Node_114 -> Node_59;
Node_101 -> Node_102;
Node_102 -> Node_104;
Node_102 -> Node_105[style=dashed];
Node_104 -> Node_115;
Node_115 -> Node_59;
Node_105 -> Node_59;
}

