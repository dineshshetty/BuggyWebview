digraph "CFG forcom.google.android.material.textview.MaterialTextView.applyLineHeightFromViewAppearance(Landroid\/content\/res\/Resources$Theme;I)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: SGET  (r0 I:int[]) =  com.google.android.material.R.styleable.MaterialTextAppearance int[]  (LINE:130)\l0x0002: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r6 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l  (r7 I:int A[D('resId' int)])\l  (r0 I:int[])\l type: VIRTUAL call: android.content.res.Resources.Theme.obtainStyledAttributes(int, int[]):android.content.res.TypedArray A[MD:(int, int[]):android.content.res.TypedArray throws android.content.res.Resources$NotFoundException (c)]\l0x0007: INVOKE  (r1 I:android.content.Context) = (r5 I:com.google.android.material.textview.MaterialTextView) type: VIRTUAL call: com.google.android.material.textview.MaterialTextView.getContext():android.content.Context A[MD:():android.content.Context (s)] (LINE:133)\l0x000b: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x000c: NEW_ARRAY  (r2 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x000e: SGET  (r3 I:int) =  com.google.android.material.R.styleable.MaterialTextAppearance_android_lineHeight int \l0x0010: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0011: APUT  (r2 I:??[int, float][]), (r4 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l0x0013: SGET  (r3 I:int) =  com.google.android.material.R.styleable.MaterialTextAppearance_lineHeight int \l0x0015: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0016: APUT  (r2 I:??[int, float][]), (r4 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l0x0018: INVOKE  (r1 I:int) = \l  (r1 I:android.content.Context)\l  (r0 I:android.content.res.TypedArray A[D('attributes' android.content.res.TypedArray)])\l  (r2 I:int[])\l type: STATIC call: com.google.android.material.textview.MaterialTextView.readFirstAvailableDimension(android.content.Context, android.content.res.TypedArray, int[]):int A[MD:(android.content.Context, android.content.res.TypedArray, int[]):int VARARG (m)] (LINE:132)\l0x001c: INVOKE  (r0 I:android.content.res.TypedArray A[D('attributes' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:137)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: IF  (r1 I:??[int, byte, short, char] A[D('lineHeight' int)]) \< (0 ??[int, byte, short, char])  \-\> B:13:?  (LINE:139)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: INVOKE  (r5 I:com.google.android.material.textview.MaterialTextView), (r1 I:int A[D('lineHeight' int)]) type: VIRTUAL call: com.google.android.material.textview.MaterialTextView.setLineHeight(int):void A[MD:(int):void (m)] (LINE:140)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|RETURN\lORIG_RETURN\l|0x0024: RETURN    (LINE:142)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0024: RETURN   A[SYNTHETIC] (LINE:142)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.textview.MaterialTextView.applyLineHeightFromViewAppearance((r5 'this' I:com.google.android.material.textview.MaterialTextView A[IMMUTABLE_TYPE, THIS]), (r6 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('resId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x001f \-\> B:12:0x0024\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0024: r0 'attributes' Landroid\/content\/res\/TypedArray;\l  0x001c\-0x0024: r1 'lineHeight' I\l  \-1 \-0x0024: r6 'theme' Landroid\/content\/res\/Resources$Theme;\l  \-1 \-0x0024: r7 'resId' I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

