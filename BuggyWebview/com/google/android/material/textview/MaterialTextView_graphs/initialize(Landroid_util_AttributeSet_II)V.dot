digraph "CFG forcom.google.android.material.textview.MaterialTextView.initialize(Landroid\/util\/AttributeSet;II)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|android.content.Context r0 = getContext()\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|if (canApplyTextAppearanceLineHeight(r0) == false) goto L12\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|android.content.res.Resources$Theme r1 = r0.getTheme()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|if (viewAttrsHasLineHeight(r0, r1, r5, r6, r7) != false) goto L11\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|int r2 = findViewAppearanceResourceId(r1, r5, r6, r7)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0019|if (r2 == (\-1)) goto L10\l}"];
Node_21 [shape=record,label="{21\:\ 0x001b|applyLineHeightFromViewAppearance(r1, r2)\l}"];
Node_22 [shape=record,label="{22\:\ 0x001e|RETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.textview.MaterialTextView.initialize((r4v0 'this' com.google.android.material.textview.MaterialTextView A[IMMUTABLE_TYPE, THIS]), (r5v0 'attrs' android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'defStyleAttr' int A[D('defStyleAttr' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'defStyleRes' int A[D('defStyleRes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0019 \-\> B:22:0x001e, CROSS_EDGE: B:18:0x0012 \-\> B:22:0x001e, CROSS_EDGE: B:16:0x0008 \-\> B:22:0x001e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_14;
Node_23 -> Node_14;
}

