digraph "CFG forcom.google.android.material.checkbox.MaterialCheckBox.setButtonIconTintMode(Landroid\/graphics\/PorterDuff$Mode;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.PorterDuff$Mode) = (r1 I:com.google.android.material.checkbox.MaterialCheckBox) com.google.android.material.checkbox.MaterialCheckBox.buttonIconTintMode android.graphics.PorterDuff$Mode  (LINE:671)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tintMode' android.graphics.PorterDuff$Mode)])  \-\> B:12:0x0005 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|RETURN\l|0x0004: RETURN    (LINE:672)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|0x0005: IPUT  \l  (r2 I:android.graphics.PorterDuff$Mode A[D('tintMode' android.graphics.PorterDuff$Mode)])\l  (r1 I:com.google.android.material.checkbox.MaterialCheckBox)\l com.google.android.material.checkbox.MaterialCheckBox.buttonIconTintMode android.graphics.PorterDuff$Mode  (LINE:674)\l0x0007: INVOKE  (r1 I:com.google.android.material.checkbox.MaterialCheckBox) type: DIRECT call: com.google.android.material.checkbox.MaterialCheckBox.refreshButtonDrawable():void A[MD:():void (m)] (LINE:675)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:676)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.checkbox.MaterialCheckBox.setButtonIconTintMode((r1 'this' I:com.google.android.material.checkbox.MaterialCheckBox A[IMMUTABLE_TYPE, THIS]), (r2 I:android.graphics.PorterDuff$Mode A[D('tintMode' android.graphics.PorterDuff$Mode), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000a \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000a: r2 'tintMode' Landroid\/graphics\/PorterDuff$Mode;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

