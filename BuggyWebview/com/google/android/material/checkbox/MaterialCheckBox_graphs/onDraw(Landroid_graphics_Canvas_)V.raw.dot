digraph "CFG forcom.google.android.material.checkbox.MaterialCheckBox.onDraw(Landroid\/graphics\/Canvas;)V" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r10 I:com.google.android.material.checkbox.MaterialCheckBox) com.google.android.material.checkbox.MaterialCheckBox.centerIfNoTextEnabled boolean  (LINE:288)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0056 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|0x0004: INVOKE  (r0 I:java.lang.CharSequence) = (r10 I:com.google.android.material.checkbox.MaterialCheckBox) type: VIRTUAL call: com.google.android.material.checkbox.MaterialCheckBox.getText():java.lang.CharSequence A[MD:():java.lang.CharSequence (s)]\l0x0008: INVOKE  (r0 I:boolean) = (r0 I:java.lang.CharSequence) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0056 \l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|0x000e: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r10 I:android.widget.CompoundButton) type: STATIC call: androidx.core.widget.CompoundButtonCompat.getButtonDrawable(android.widget.CompoundButton):android.graphics.drawable.Drawable A[MD:(android.widget.CompoundButton):android.graphics.drawable.Drawable (m)] (LINE:289)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawable' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0056  (LINE:290)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0014|0x0014: INVOKE  (r1 I:boolean) = (r10 I:android.view.View) type: STATIC call: com.google.android.material.internal.ViewUtils.isLayoutRtl(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:291)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|0x0018: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001c \l}"];
Node_29 [shape=record,label="{29\:\ 0x001a|0x001a: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x001d|0x001d: INVOKE  (r2 I:int) = (r10 I:com.google.android.material.checkbox.MaterialCheckBox) type: VIRTUAL call: com.google.android.material.checkbox.MaterialCheckBox.getWidth():int A[MD:():int (s)] (LINE:292)\l0x0021: INVOKE  (r3 I:int) = (r0 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicWidth():int A[MD:():int (c)]\l0x0025: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0026: ARITH  (r2 I:int) = (r2 I:int) \/ (2 int) \l0x0028: ARITH  (r2 I:int) = (r2 I:int) * (r1 I:int A[D('direction' int)]) \l0x002a: INVOKE  (r3 I:int) = (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:294)\l0x002e: CAST (r4 I:float) = (float) (r2 I:int A[D('dx' int)])  (LINE:295)\l0x002f: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0030: INVOKE  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r4 I:float), (r5 I:float) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)]\l0x0033: INVOKE  \l  (r10 I:androidx.appcompat.widget.AppCompatCheckBox)\l  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: SUPER call: androidx.appcompat.widget.AppCompatCheckBox.onDraw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (s)] (LINE:296)\l0x0036: INVOKE  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r3 I:int A[D('saveCount' int)]) type: VIRTUAL call: android.graphics.Canvas.restoreToCount(int):void A[MD:(int):void (c)] (LINE:297)\l0x0039: INVOKE  (r4 I:android.graphics.drawable.Drawable) = (r10 I:com.google.android.material.checkbox.MaterialCheckBox) type: VIRTUAL call: com.google.android.material.checkbox.MaterialCheckBox.getBackground():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (s)] (LINE:299)\l}"];
Node_32 [shape=record,label="{32\:\ 0x003d|0x003d: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:? \l}"];
Node_33 [shape=record,label="{33\:\ 0x003f|0x003f: INVOKE  (r4 I:android.graphics.Rect) = (r0 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (c)] (LINE:300)\l0x0044: INVOKE  (r5 I:android.graphics.drawable.Drawable) = (r10 I:com.google.android.material.checkbox.MaterialCheckBox) type: VIRTUAL call: com.google.android.material.checkbox.MaterialCheckBox.getBackground():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (s)] (LINE:302)\l0x0048: IGET  (r6 I:int) = (r4 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.left int \l0x004a: ARITH  (r6 I:int) = (r6 I:int) + (r2 I:int A[D('dx' int)]) \l0x004b: IGET  (r7 I:int) = (r4 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.top int \l0x004d: IGET  (r8 I:int) = (r4 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.right int \l0x004f: ARITH  (r8 I:int) = (r8 I:int) + (r2 I:int A[D('dx' int)]) \l0x0050: IGET  (r9 I:int) = (r4 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.bottom int \l0x0052: INVOKE  (r5 I:android.graphics.drawable.Drawable), (r6 I:int), (r7 I:int), (r8 I:int), (r9 I:int) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable, int, int, int, int):void A[MD:(android.graphics.drawable.Drawable, int, int, int, int):void (m)] (LINE:301)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0055|RETURN\lORIG_RETURN\l|0x0055: RETURN    (LINE:305)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x0055: RETURN   A[SYNTHETIC] (LINE:305)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001c|0x001c: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0056|0x0056: INVOKE  \l  (r10 I:androidx.appcompat.widget.AppCompatCheckBox)\l  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: SUPER call: androidx.appcompat.widget.AppCompatCheckBox.onDraw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (s)] (LINE:309)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0059|RETURN\l|0x0059: RETURN    (LINE:310)\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.checkbox.MaterialCheckBox.onDraw((r10 'this' I:com.google.android.material.checkbox.MaterialCheckBox A[IMMUTABLE_TYPE, THIS]), (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:32:0x003d \-\> B:34:0x0055, CROSS_EDGE: B:30:0x001c \-\> B:31:0x001d, CROSS_EDGE: B:36:0x0059 \-\> B:20:?, CROSS_EDGE: B:24:0x000c \-\> B:35:0x0056, CROSS_EDGE: B:22:0x0002 \-\> B:35:0x0056\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0043\-0x0055: r4 'bounds' Landroid\/graphics\/Rect;\l  0x0012\-0x0056: r0 'drawable' Landroid\/graphics\/drawable\/Drawable;\l  0x001d\-0x0056: r1 'direction' I\l  0x002a\-0x0056: r2 'dx' I\l  0x002e\-0x0056: r3 'saveCount' I\l  \-1 \-0x0059: r11 'canvas' Landroid\/graphics\/Canvas;\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onDraw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_35;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_35;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_35;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_34;
Node_34 -> Node_20;
Node_37 -> Node_20;
Node_30 -> Node_31;
Node_35 -> Node_36;
Node_36 -> Node_20;
}

