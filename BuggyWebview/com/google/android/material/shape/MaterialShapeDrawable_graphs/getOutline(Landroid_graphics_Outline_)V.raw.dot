digraph "CFG forcom.google.android.material.shape.MaterialShapeDrawable.getOutline(Landroid\/graphics\/Outline;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) = (r2 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.drawableState com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState  (LINE:1204)\l0x0002: IGET  (r0 I:int) = (r0 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) com.google.android.material.shape.MaterialShapeDrawable.MaterialShapeDrawableState.shadowCompatMode int \l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0008 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|RETURN\l|0x0007: RETURN    (LINE:1206)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: INVOKE  (r0 I:boolean) = (r2 I:com.google.android.material.shape.MaterialShapeDrawable) type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.isRoundRect():boolean A[MD:():boolean (m)] (LINE:1209)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0020 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|0x000e: INVOKE  (r0 I:float) = (r2 I:com.google.android.material.shape.MaterialShapeDrawable) type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.getTopLeftCornerResolvedSize():float A[MD:():float (m)] (LINE:1210)\l0x0012: IGET  (r1 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) = (r2 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.drawableState com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState \l0x0014: IGET  (r1 I:float) = (r1 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) com.google.android.material.shape.MaterialShapeDrawable.MaterialShapeDrawableState.interpolation float \l0x0016: ARITH  (r0 I:float) = (r0 I:float) * (r1 I:float) \l0x0018: INVOKE  (r1 I:android.graphics.Rect) = (r2 I:com.google.android.material.shape.MaterialShapeDrawable) type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (c)] (LINE:1211)\l0x001c: INVOKE  \l  (r3 I:android.graphics.Outline A[D('outline' android.graphics.Outline)])\l  (r1 I:android.graphics.Rect)\l  (r0 I:float A[D('radius' float)])\l type: VIRTUAL call: android.graphics.Outline.setRoundRect(android.graphics.Rect, float):void A[MD:(android.graphics.Rect, float):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x001f|RETURN\l|0x001f: RETURN    (LINE:1212)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0020|0x0020: INVOKE  (r0 I:android.graphics.RectF) = (r2 I:com.google.android.material.shape.MaterialShapeDrawable) type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.getBoundsAsRectF():android.graphics.RectF A[MD:():android.graphics.RectF (m)] (LINE:1215)\l0x0024: IGET  (r1 I:android.graphics.Path) = (r2 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.path android.graphics.Path \l0x0026: INVOKE  \l  (r2 I:com.google.android.material.shape.MaterialShapeDrawable)\l  (r0 I:android.graphics.RectF)\l  (r1 I:android.graphics.Path)\l type: DIRECT call: com.google.android.material.shape.MaterialShapeDrawable.calculatePath(android.graphics.RectF, android.graphics.Path):void A[MD:(android.graphics.RectF, android.graphics.Path):void (m)]\l0x0029: IGET  (r0 I:android.graphics.Path) = (r2 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.path android.graphics.Path  (LINE:1216)\l0x002b: INVOKE  (r3 I:android.graphics.Outline A[D('outline' android.graphics.Outline)]), (r0 I:android.graphics.Path) type: STATIC call: com.google.android.material.drawable.DrawableUtils.setOutlineToPath(android.graphics.Outline, android.graphics.Path):void A[MD:(android.graphics.Outline, android.graphics.Path):void (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x002e|RETURN\l|0x002e: RETURN    (LINE:1217)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.shape.MaterialShapeDrawable.getOutline((r2 'this' I:com.google.android.material.shape.MaterialShapeDrawable A[IMMUTABLE_TYPE, THIS]), (r3 I:android.graphics.Outline A[D('outline' android.graphics.Outline), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:19:0x001f \-\> B:12:?, CROSS_EDGE: B:21:0x002e \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0018\-0x0020: r0 'radius' F\l  \-1 \-0x002e: r3 'outline' Landroid\/graphics\/Outline;\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.getOutline(android.graphics.Outline):void\}]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

