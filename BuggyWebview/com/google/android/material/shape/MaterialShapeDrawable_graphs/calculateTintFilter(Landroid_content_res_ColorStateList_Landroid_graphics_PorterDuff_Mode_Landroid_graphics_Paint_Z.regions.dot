digraph "CFG forcom.google.android.material.shape.MaterialShapeDrawable.calculateTintFilter(Landroid\/content\/res\/ColorStateList;Landroid\/graphics\/PorterDuff$Mode;Landroid\/graphics\/Paint;Z)Landroid\/graphics\/PorterDuffColorFilter;" {
subgraph cluster_Region_1593977011 {
label = "R(1:(2:(1:7)|(1:4)))";
node [shape=record,color=blue];
subgraph cluster_Region_862142340 {
label = "R(2:(1:7)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1800205992 {
label = "IF [B:11:0x0000, B:12:0x0002] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|if (r2 == null) goto L6\l}"];
Node_12 [shape=record,label="{12\:\ 0x0002|ADDED_TO_REGION\l|if (r3 == null) goto L6\l}"];
subgraph cluster_Region_1935119256 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x000e|RETURN\lORIG_RETURN\l|return calculatePaintColorTintFilter(r4, r5)\l}"];
}
}
subgraph cluster_Region_1029602033 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return calculateTintColorTintFilter(r2, r3, r5)\l}"];
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0005}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000a}"];
MethodNode[shape=record,label="{private android.graphics.PorterDuffColorFilter com.google.android.material.shape.MaterialShapeDrawable.calculateTintFilter((r1v0 'this' com.google.android.material.shape.MaterialShapeDrawable A[IMMUTABLE_TYPE, THIS]), (r2v0 'tintList' android.content.res.ColorStateList A[D('tintList' android.content.res.ColorStateList), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'tintMode' android.graphics.PorterDuff$Mode A[D('tintMode' android.graphics.PorterDuff$Mode), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'paint' android.graphics.Paint A[D('paint' android.graphics.Paint), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'requiresElevationOverlay' boolean A[D('requiresElevationOverlay' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000a \-\> B:16:0x000e, CROSS_EDGE: B:11:0x0000 \-\> B:15:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_9;Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_14[style=dashed];
Node_12 -> Node_15;
Node_16 -> Node_10;
Node_17 -> Node_10;
Node_9 -> Node_11;
Node_14 -> Node_17;
Node_15 -> Node_16;
}

