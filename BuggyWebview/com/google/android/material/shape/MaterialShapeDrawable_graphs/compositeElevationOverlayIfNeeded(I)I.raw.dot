digraph "CFG forcom.google.android.material.shape.MaterialShapeDrawable.compositeElevationOverlayIfNeeded(I)I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:float) = (r2 I:com.google.android.material.shape.MaterialShapeDrawable) type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.getZ():float A[MD:():float (m)] (LINE:623)\l0x0004: INVOKE  (r1 I:float) = (r2 I:com.google.android.material.shape.MaterialShapeDrawable) type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.getParentAbsoluteElevation():float A[MD:():float (m)]\l0x0008: ARITH  (r0 I:float) = (r0 I:float) + (r1 I:float) \l0x0009: IGET  (r1 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) = (r2 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.drawableState com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState  (LINE:624)\l0x000b: IGET  (r1 I:com.google.android.material.elevation.ElevationOverlayProvider) = (r1 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) com.google.android.material.shape.MaterialShapeDrawable.MaterialShapeDrawableState.elevationOverlayProvider com.google.android.material.elevation.ElevationOverlayProvider \l}"];
Node_11 [shape=record,label="{11\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0018 \l}"];
Node_12 [shape=record,label="{12\:\ 0x000f|0x000f: IGET  (r1 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) = (r2 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.drawableState com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState  (LINE:625)\l0x0011: IGET  (r1 I:com.google.android.material.elevation.ElevationOverlayProvider) = (r1 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) com.google.android.material.shape.MaterialShapeDrawable.MaterialShapeDrawableState.elevationOverlayProvider com.google.android.material.elevation.ElevationOverlayProvider \l0x0013: INVOKE  (r1 I:int) = \l  (r1 I:com.google.android.material.elevation.ElevationOverlayProvider)\l  (r3 I:int A[D('backgroundColor' int)])\l  (r0 I:float A[D('elevation' float)])\l type: VIRTUAL call: com.google.android.material.elevation.ElevationOverlayProvider.compositeOverlayIfNeeded(int, float):int A[MD:(int, float):int (m)]\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0019: RETURN  (r1 I:int) A[SYNTHETIC] (LINE:624)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0018|0x0018: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('backgroundColor' int)])  (LINE:627)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0019|RETURN\lORIG_RETURN\l|0x0019: RETURN  (r1 I:int)  (LINE:624)\l}"];
MethodNode[shape=record,label="{public int com.google.android.material.shape.MaterialShapeDrawable.compositeElevationOverlayIfNeeded((r2 'this' I:com.google.android.material.shape.MaterialShapeDrawable A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('backgroundColor' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0018 \-\> B:14:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0019: r0 'elevation' F\l  \-1 \-0x0019: r3 'backgroundColor' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

