digraph "CFG forcom.google.android.material.shape.MaterialShapeDrawable.draw(Landroid\/graphics\/Canvas;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|r4.fillPaint.setColorFilter(r4.tintFilter)\lint r0 = r4.fillPaint.getAlpha()\lr4.fillPaint.setAlpha(modulateAlpha(r0, r4.drawableState.alpha))\lr4.strokePaint.setColorFilter(r4.strokeTintFilter)\lr4.strokePaint.setStrokeWidth(r4.drawableState.strokeWidth)\lint r1 = r4.strokePaint.getAlpha()\lr4.strokePaint.setAlpha(modulateAlpha(r1, r4.drawableState.alpha))\l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|if (r4.pathDirty == false) goto L4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0041|calculateStrokePath()\lcalculatePath(getBoundsAsRectF(), r4.path)\lr4.pathDirty = false\l}"];
Node_18 [shape=record,label="{18\:\ 0x0050|maybeDrawCompatShadow(r5)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0057|if (hasFill() == false) goto L7\l}"];
Node_20 [shape=record,label="{20\:\ 0x0059|drawFillShape(r5)\l}"];
Node_21 [shape=record,label="{21\:\ 0x005c}"];
Node_22 [shape=record,label="{22\:\ 0x0060|if (hasStroke() == false) goto L10\l}"];
Node_23 [shape=record,label="{23\:\ 0x0062|drawStrokeShape(r5)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0065|r4.fillPaint.setAlpha(r0)\lr4.strokePaint.setAlpha(r1)\l}"];
Node_25 [shape=record,label="{25\:\ 0x006f|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.shape.MaterialShapeDrawable.draw((r4v0 'this' com.google.android.material.shape.MaterialShapeDrawable A[IMMUTABLE_TYPE, THIS]), (r5v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:22:0x0060 \-\> B:24:0x0065, CROSS_EDGE: B:19:0x0057 \-\> B:21:0x005c, CROSS_EDGE: B:16:0x003f \-\> B:18:0x0050\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

