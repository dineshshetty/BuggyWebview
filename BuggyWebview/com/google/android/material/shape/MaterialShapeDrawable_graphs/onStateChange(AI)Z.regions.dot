digraph "CFG forcom.google.android.material.shape.MaterialShapeDrawable.onStateChange([I)Z" {
subgraph cluster_Region_878722312 {
label = "R(4:1|2|(1:6)|7)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0000|boolean boolean r0 = updateColorsForState(r4)\lboolean boolean r1 = updateTintFilter()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|boolean r2 = r0 \|\| r1\l}"];
subgraph cluster_IfRegion_1929109221 {
label = "IF [B:19:0x0010] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0010|PHI: r2 \l  PHI: (r2v1 'invalidateSelf' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 != false) goto L6\l}"];
subgraph cluster_Region_937741512 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0012|invalidateSelf()\l}"];
}
}
Node_21 [shape=record,label="{21\:\ 0x0015|RETURN\l|return r2\l}"];
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000a|REMOVE\lADDED_TO_REGION\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x000d}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x000f}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.shape.MaterialShapeDrawable.onStateChange((r3v0 'this' com.google.android.material.shape.MaterialShapeDrawable A[IMMUTABLE_TYPE, THIS]), (r4v0 'state' int[] A[D('state' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:19:0x0010 \-\> B:21:0x0015, CROSS_EDGE: B:18:0x000f \-\> B:19:0x0010, CROSS_EDGE: B:14:0x0008 \-\> B:18:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.onStateChange(int[]):boolean\}, com.google.android.material.internal.TextDrawableHelper.TextDrawableDelegate.onStateChange(int[]):boolean]\l}"];
MethodNode -> Node_11;Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_18;
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_11 -> Node_13;
Node_15 -> Node_17;
Node_15 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
}

