digraph "CFG forcom.google.android.material.shape.MaterialShapeDrawable.drawCompatShadow(Landroid\/graphics\/Canvas;)V" {
subgraph cluster_Region_1319753671 {
label = "R(5:(1:3)|(1:6)|7|(1:10)|(1:(1:14)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_463380530 {
label = "IF [B:21:0x0006] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0006|if (r4.containsIncompatibleShadowOp.cardinality() \> 0) goto L3\l}"];
subgraph cluster_Region_1411005322 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0008|android.util.Log.w(com.google.android.material.shape.MaterialShapeDrawable.TAG, \"Compatibility shadow requested but can't be drawn for all operations in this shape.\")\l}"];
}
}
subgraph cluster_IfRegion_450710026 {
label = "IF [B:24:0x0013] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0013|if (r4.drawableState.shadowCompatOffset != 0) goto L6\l}"];
subgraph cluster_Region_1385212277 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0015|r5.drawPath(r4.path, r4.shadowRenderer.getShadowPaint())\l}"];
}
}
Node_26 [shape=record,label="{26\:\ 0x0020|int r0 = 0\l}"];
subgraph cluster_LoopRegion_1390776840 {
label = "LOOP:0: (1:10)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0022|if (r0 \< 4) goto L10\l}"];
subgraph cluster_Region_1720719376 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0024|LOOP_END\lLOOP:0: B:27:0x0021\-\>B:29:0x0024\l|r4.cornerShadowOperation[r0].draw(r4.shadowRenderer, r4.drawableState.shadowCompatRadius, r5)\lr4.edgeShadowOperation[r0].draw(r4.shadowRenderer, r4.drawableState.shadowCompatRadius, r5)\lr0++\l}"];
}
}
subgraph cluster_Region_1021381669 {
label = "R(1:(1:14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_966964824 {
label = "IF [B:31:0x0043] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0043|if (r4.shadowBitmapDrawingEnable != false) goto L14\l}"];
subgraph cluster_Region_1817254765 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0045|int int r0 = getShadowOffsetX()\lint int r1 = getShadowOffsetY()\lr5.translate(\-r0, \-r1)\lr5.drawPath(r4.path, com.google.android.material.shape.MaterialShapeDrawable.clearPaint)\lr5.translate(r0, r1)\l}"];
}
}
}
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0000}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x000f}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0021|LOOP_START\lLOOP:0: B:27:0x0021\-\>B:29:0x0024\lPHI: r0 \l  PHI: (r0v5 'index' int) = (r0v4 'index' int), (r0v8 'index' int) binds: [B:26:0x0020, B:29:0x0024] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0041|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0041}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0060|ORIG_RETURN\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.shape.MaterialShapeDrawable.drawCompatShadow((r4v0 'this' com.google.android.material.shape.MaterialShapeDrawable A[IMMUTABLE_TYPE, THIS]), (r5v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x0024 \-\> B:27:0x0021, CROSS_EDGE: B:31:0x0043 \-\> B:33:0x0060, CROSS_EDGE: B:24:0x0013 \-\> B:26:0x0020, CROSS_EDGE: B:21:0x0006 \-\> B:23:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_28 -> Node_34[style=dashed];
Node_29 -> Node_27;
Node_31 -> Node_32;
Node_31 -> Node_35[style=dashed];
Node_32 -> Node_33;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_23 -> Node_24;
Node_27 -> Node_28;
Node_34 -> Node_30;
Node_30 -> Node_31;
Node_33 -> Node_19;
Node_35 -> Node_19;
}

