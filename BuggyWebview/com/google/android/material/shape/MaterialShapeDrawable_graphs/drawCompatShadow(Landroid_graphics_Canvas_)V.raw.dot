digraph "CFG forcom.google.android.material.shape.MaterialShapeDrawable.drawCompatShadow(Landroid\/graphics\/Canvas;)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: IGET  (r0 I:java.util.BitSet) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.containsIncompatibleShadowOp java.util.BitSet  (LINE:1113)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.BitSet) type: VIRTUAL call: java.util.BitSet.cardinality():int A[MD:():int (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|0x0006: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:23:0x000f \l}"];
Node_22 [shape=record,label="{22\:\ 0x0008|0x0008: SGET  (r0 I:java.lang.String) =  com.google.android.material.shape.MaterialShapeDrawable.TAG java.lang.String  (LINE:1114)\l0x000a: CONST_STR  (r1 I:java.lang.String) =  \"Compatibility shadow requested but can't be drawn for all operations in this shape.\" \l0x000c: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|0x000f: IGET  (r0 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.drawableState com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState  (LINE:1119)\l0x0011: IGET  (r0 I:int) = (r0 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) com.google.android.material.shape.MaterialShapeDrawable.MaterialShapeDrawableState.shadowCompatOffset int \l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0020 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0015|0x0015: IGET  (r0 I:android.graphics.Path) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.path android.graphics.Path  (LINE:1120)\l0x0017: IGET  (r1 I:com.google.android.material.shadow.ShadowRenderer) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer com.google.android.material.shadow.ShadowRenderer \l0x0019: INVOKE  (r1 I:android.graphics.Paint) = (r1 I:com.google.android.material.shadow.ShadowRenderer) type: VIRTUAL call: com.google.android.material.shadow.ShadowRenderer.getShadowPaint():android.graphics.Paint A[MD:():android.graphics.Paint (m)]\l0x001d: INVOKE  \l  (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.Path)\l  (r1 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawPath(android.graphics.Path, android.graphics.Paint):void A[MD:(android.graphics.Path, android.graphics.Paint):void (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|0x0020: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1124)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|LOOP_START\lLOOP:0: B:27:0x0021\-\>B:29:0x0024\l|0x0021: CONST  (r1 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|0x0022: IF  (r0 I:??[int, byte, short, char] A[D('index' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:34:0x0041 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0024|LOOP_END\lLOOP:0: B:27:0x0021\-\>B:29:0x0024\l|0x0024: IGET  (r1 I:com.google.android.material.shape.ShapePath$ShadowCompatOperation[]) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation com.google.android.material.shape.ShapePath$ShadowCompatOperation[]  (LINE:1125)\l0x0026: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('index' int)]) \l0x0028: IGET  (r2 I:com.google.android.material.shadow.ShadowRenderer) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer com.google.android.material.shadow.ShadowRenderer \l0x002a: IGET  (r3 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.drawableState com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState \l0x002c: IGET  (r3 I:int) = (r3 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) com.google.android.material.shape.MaterialShapeDrawable.MaterialShapeDrawableState.shadowCompatRadius int \l0x002e: INVOKE  \l  (r1 I:com.google.android.material.shape.ShapePath$ShadowCompatOperation)\l  (r2 I:com.google.android.material.shadow.ShadowRenderer)\l  (r3 I:int)\l  (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.ShadowCompatOperation.draw(com.google.android.material.shadow.ShadowRenderer, int, android.graphics.Canvas):void A[MD:(com.google.android.material.shadow.ShadowRenderer, int, android.graphics.Canvas):void (m)]\l0x0031: IGET  (r1 I:com.google.android.material.shape.ShapePath$ShadowCompatOperation[]) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation com.google.android.material.shape.ShapePath$ShadowCompatOperation[]  (LINE:1126)\l0x0033: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('index' int)]) \l0x0035: IGET  (r2 I:com.google.android.material.shadow.ShadowRenderer) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer com.google.android.material.shadow.ShadowRenderer \l0x0037: IGET  (r3 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.drawableState com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState \l0x0039: IGET  (r3 I:int) = (r3 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) com.google.android.material.shape.MaterialShapeDrawable.MaterialShapeDrawableState.shadowCompatRadius int \l0x003b: INVOKE  \l  (r1 I:com.google.android.material.shape.ShapePath$ShadowCompatOperation)\l  (r2 I:com.google.android.material.shadow.ShadowRenderer)\l  (r3 I:int)\l  (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.ShadowCompatOperation.draw(com.google.android.material.shadow.ShadowRenderer, int, android.graphics.Canvas):void A[MD:(com.google.android.material.shadow.ShadowRenderer, int, android.graphics.Canvas):void (m)]\l0x003e: ARITH  (r0 I:int) = (r0 I:int A[D('index' int)]) + (1 int)  (LINE:1124)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0041|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0041|0x0041: IGET  (r0 I:boolean A[D('index' int)]) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable boolean  (LINE:1129)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0043|0x0043: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:? \l}"];
Node_32 [shape=record,label="{32\:\ 0x0045|0x0045: INVOKE  (r0 I:int) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable) type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.getShadowOffsetX():int A[MD:():int (m)] (LINE:1130)\l0x0049: INVOKE  (r1 I:int) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable) type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.getShadowOffsetY():int A[MD:():int (m)] (LINE:1131)\l0x004d: NEG  (r2 I:int) = (r0 I:int A[D('shadowOffsetX' int)])  (LINE:1133)\l0x004e: CAST (r2 I:float) = (float) (r2 I:int) \l0x004f: NEG  (r3 I:int) = (r1 I:int A[D('shadowOffsetY' int)]) \l0x0050: CAST (r3 I:float) = (float) (r3 I:int) \l0x0051: INVOKE  (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r2 I:float), (r3 I:float) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)]\l0x0054: IGET  (r2 I:android.graphics.Path) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.path android.graphics.Path  (LINE:1134)\l0x0056: SGET  (r3 I:android.graphics.Paint) =  com.google.android.material.shape.MaterialShapeDrawable.clearPaint android.graphics.Paint \l0x0058: INVOKE  \l  (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r2 I:android.graphics.Path)\l  (r3 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawPath(android.graphics.Path, android.graphics.Paint):void A[MD:(android.graphics.Path, android.graphics.Paint):void (c)]\l0x005b: CAST (r2 I:float) = (float) (r0 I:int A[D('shadowOffsetX' int)])  (LINE:1135)\l0x005c: CAST (r3 I:float) = (float) (r1 I:int A[D('shadowOffsetY' int)]) \l0x005d: INVOKE  (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r2 I:float), (r3 I:float) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0060|RETURN\lORIG_RETURN\l|0x0060: RETURN    (LINE:1137)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0060: RETURN   A[SYNTHETIC] (LINE:1137)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.shape.MaterialShapeDrawable.drawCompatShadow((r4 'this' I:com.google.android.material.shape.MaterialShapeDrawable A[IMMUTABLE_TYPE, THIS]), (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x0024 \-\> B:27:0x0021, CROSS_EDGE: B:31:0x0043 \-\> B:33:0x0060, CROSS_EDGE: B:24:0x0013 \-\> B:26:0x0020, CROSS_EDGE: B:21:0x0006 \-\> B:23:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x0041: r0 'index' I\l  0x0049\-0x0060: r0 'shadowOffsetX' I\l  0x004d\-0x0060: r1 'shadowOffsetY' I\l  \-1 \-0x0060: r5 'canvas' Landroid\/graphics\/Canvas;\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_34;
Node_29 -> Node_27;
Node_34 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_35 -> Node_19;
}

