digraph "CFG forcom.google.android.material.shape.MaterialShapeDrawable.updateTintFilter()Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|android.graphics.PorterDuffColorFilter r0 = r7.tintFilter\landroid.graphics.PorterDuffColorFilter r1 = r7.strokeTintFilter\lr7.tintFilter = calculateTintFilter(r7.drawableState.tintList, r7.drawableState.tintMode, r7.fillPaint, true)\lr7.strokeTintFilter = calculateTintFilter(r7.drawableState.strokeTintList, r7.drawableState.tintMode, r7.strokePaint, false)\l}"];
Node_18 [shape=record,label="{18\:\ 0x002a|if (r7.drawableState.useTintColorForShadow == false) goto L4\l}"];
Node_19 [shape=record,label="{19\:\ 0x002c|r7.shadowRenderer.setShadowColor(r7.drawableState.tintList.getColorForState(getState(), 0))\l}"];
Node_20 [shape=record,label="{20\:\ 0x003d}"];
Node_21 [shape=record,label="{21\:\ 0x0043|if (androidx.core.util.ObjectsCompat.equals(r0, r7.tintFilter) == false) goto L11\l}"];
Node_22 [shape=record,label="{22\:\ 0x0045}"];
Node_23 [shape=record,label="{23\:\ 0x004b|if (androidx.core.util.ObjectsCompat.equals(r1, r7.strokeTintFilter) != false) goto L8\l}"];
Node_25 [shape=record,label="{25\:\ 0x004e|RETURN\lORIG_RETURN\l|return false\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.material.shape.MaterialShapeDrawable.updateTintFilter((r7v0 'this' com.google.android.material.shape.MaterialShapeDrawable A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x004b \-\> B:27:0x0051, CROSS_EDGE: B:21:0x0043 \-\> B:27:0x0051, CROSS_EDGE: B:18:0x002a \-\> B:20:0x003d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_28;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_29[style=dashed];
Node_25 -> Node_16;
Node_29 -> Node_16;
Node_28 -> Node_16;
}

