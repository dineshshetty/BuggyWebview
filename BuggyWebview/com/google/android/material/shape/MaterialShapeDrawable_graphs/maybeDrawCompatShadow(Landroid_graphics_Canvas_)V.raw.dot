digraph "CFG forcom.google.android.material.shape.MaterialShapeDrawable.maybeDrawCompatShadow(Landroid\/graphics\/Canvas;)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r8 I:com.google.android.material.shape.MaterialShapeDrawable) type: DIRECT call: com.google.android.material.shape.MaterialShapeDrawable.hasCompatShadow():boolean A[MD:():boolean (m)] (LINE:988)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0007 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|RETURN\l|0x0006: RETURN    (LINE:989)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|0x0007: INVOKE  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:992)\l0x000a: INVOKE  \l  (r8 I:com.google.android.material.shape.MaterialShapeDrawable)\l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: DIRECT call: com.google.android.material.shape.MaterialShapeDrawable.prepareCanvasForShadow(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (m)] (LINE:993)\l0x000d: IGET  (r0 I:boolean) = (r8 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable boolean  (LINE:994)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0018 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|0x0011: INVOKE  \l  (r8 I:com.google.android.material.shape.MaterialShapeDrawable)\l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: DIRECT call: com.google.android.material.shape.MaterialShapeDrawable.drawCompatShadow(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (m)] (LINE:995)\l0x0014: INVOKE  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.restore():void A[MD:():void (c)] (LINE:996)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|RETURN\l|0x0017: RETURN    (LINE:997)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|0x0018: IGET  (r0 I:android.graphics.RectF) = (r8 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.pathBounds android.graphics.RectF  (LINE:1002)\l0x001a: INVOKE  (r0 I:float) = (r0 I:android.graphics.RectF) type: VIRTUAL call: android.graphics.RectF.width():float A[MD:():float (c)]\l0x001e: INVOKE  (r1 I:android.graphics.Rect) = (r8 I:com.google.android.material.shape.MaterialShapeDrawable) type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (c)]\l0x0022: INVOKE  (r1 I:int) = (r1 I:android.graphics.Rect) type: VIRTUAL call: android.graphics.Rect.width():int A[MD:():int (c)]\l0x0026: CAST (r1 I:float) = (float) (r1 I:int) \l0x0027: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x0028: CAST (r0 I:int) = (int) (r0 I:float) \l0x0029: IGET  (r1 I:android.graphics.RectF) = (r8 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.pathBounds android.graphics.RectF  (LINE:1003)\l0x002b: INVOKE  (r1 I:float) = (r1 I:android.graphics.RectF) type: VIRTUAL call: android.graphics.RectF.height():float A[MD:():float (c)]\l0x002f: INVOKE  (r2 I:android.graphics.Rect) = (r8 I:com.google.android.material.shape.MaterialShapeDrawable) type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (c)]\l0x0033: INVOKE  (r2 I:int) = (r2 I:android.graphics.Rect) type: VIRTUAL call: android.graphics.Rect.height():int A[MD:():int (c)]\l0x0037: CAST (r2 I:float) = (float) (r2 I:int) \l0x0038: ARITH  (r1 I:float) = (r1 I:float) \- (r2 I:float) \l0x0039: CAST (r1 I:int) = (int) (r1 I:float) \l}"];
Node_26 [shape=record,label="{26\:\ 0x003a|0x003a: IF  (r0 I:??[int, byte, short, char] A[D('pathExtraWidth' int)]) \< (0 ??[int, byte, short, char])  \-\> B:30:0x0094  (LINE:1005)\l}"];
Node_27 [shape=record,label="{27\:\ 0x003c|0x003c: IF  (r1 I:??[int, byte, short, char] A[D('pathExtraHeight' int)]) \< (0 ??[int, byte, short, char])  \-\> B:30:0x0094 \l}"];
Node_28 [shape=record,label="{28\:\ 0x003e|0x003e: IGET  (r2 I:android.graphics.RectF) = (r8 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.pathBounds android.graphics.RectF  (LINE:1012)\l0x0040: INVOKE  (r2 I:float) = (r2 I:android.graphics.RectF) type: VIRTUAL call: android.graphics.RectF.width():float A[MD:():float (c)] (LINE:1014)\l0x0044: CAST (r2 I:int) = (int) (r2 I:float) \l0x0045: IGET  (r3 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) = (r8 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.drawableState com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState \l0x0047: IGET  (r3 I:int) = (r3 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) com.google.android.material.shape.MaterialShapeDrawable.MaterialShapeDrawableState.shadowCompatRadius int \l0x0049: ARITH  (r3 I:int) = (r3 I:int) * (2 int) \l0x004b: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x004c: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int A[D('pathExtraWidth' int)]) \l0x004d: IGET  (r3 I:android.graphics.RectF) = (r8 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.pathBounds android.graphics.RectF \l0x004f: INVOKE  (r3 I:float) = (r3 I:android.graphics.RectF) type: VIRTUAL call: android.graphics.RectF.height():float A[MD:():float (c)] (LINE:1015)\l0x0053: CAST (r3 I:int) = (int) (r3 I:float) \l0x0054: IGET  (r4 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) = (r8 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.drawableState com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState \l0x0056: IGET  (r4 I:int) = (r4 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) com.google.android.material.shape.MaterialShapeDrawable.MaterialShapeDrawableState.shadowCompatRadius int \l0x0058: ARITH  (r4 I:int) = (r4 I:int) * (2 int) \l0x005a: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x005b: ARITH  (r3 I:int) = (r3 I:int) + (r1 I:int A[D('pathExtraHeight' int)]) \l0x005c: SGET  (r4 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config \l0x005e: INVOKE  (r2 I:android.graphics.Bitmap) = (r2 I:int), (r3 I:int), (r4 I:android.graphics.Bitmap$Config) type: STATIC call: android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap A[MD:(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap (c)] (LINE:1013)\l0x0062: NEW_INSTANCE  (r3 I:android.graphics.Canvas) =  android.graphics.Canvas  (LINE:1017)\l0x0064: INVOKE  (r3 I:android.graphics.Canvas), (r2 I:android.graphics.Bitmap A[D('shadowLayer' android.graphics.Bitmap)]) type: DIRECT call: android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)]\l0x0067: INVOKE  (r4 I:android.graphics.Rect) = (r8 I:com.google.android.material.shape.MaterialShapeDrawable) type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (c)] (LINE:1021)\l0x006b: IGET  (r4 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.left int \l0x006d: IGET  (r5 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) = (r8 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.drawableState com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState \l0x006f: IGET  (r5 I:int) = (r5 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) com.google.android.material.shape.MaterialShapeDrawable.MaterialShapeDrawableState.shadowCompatRadius int \l0x0071: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x0072: ARITH  (r4 I:int) = (r4 I:int) \- (r0 I:int A[D('pathExtraWidth' int)]) \l0x0073: CAST (r4 I:float) = (float) (r4 I:int) \l0x0074: INVOKE  (r5 I:android.graphics.Rect) = (r8 I:com.google.android.material.shape.MaterialShapeDrawable) type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (c)] (LINE:1022)\l0x0078: IGET  (r5 I:int) = (r5 I:android.graphics.Rect) android.graphics.Rect.top int \l0x007a: IGET  (r6 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) = (r8 I:com.google.android.material.shape.MaterialShapeDrawable) com.google.android.material.shape.MaterialShapeDrawable.drawableState com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState \l0x007c: IGET  (r6 I:int) = (r6 I:com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) com.google.android.material.shape.MaterialShapeDrawable.MaterialShapeDrawableState.shadowCompatRadius int \l0x007e: ARITH  (r5 I:int) = (r5 I:int) \- (r6 I:int) \l0x007f: ARITH  (r5 I:int) = (r5 I:int) \- (r1 I:int A[D('pathExtraHeight' int)]) \l0x0080: CAST (r5 I:float) = (float) (r5 I:int) \l0x0081: NEG  (r6 I:float) = (r4 I:float A[D('shadowLeft' float)])  (LINE:1023)\l0x0082: NEG  (r7 I:float) = (r5 I:float A[D('shadowTop' float)]) \l0x0083: INVOKE  (r3 I:android.graphics.Canvas A[D('shadowCanvas' android.graphics.Canvas)]), (r6 I:float), (r7 I:float) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)]\l0x0086: INVOKE  \l  (r8 I:com.google.android.material.shape.MaterialShapeDrawable)\l  (r3 I:android.graphics.Canvas A[D('shadowCanvas' android.graphics.Canvas)])\l type: DIRECT call: com.google.android.material.shape.MaterialShapeDrawable.drawCompatShadow(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (m)] (LINE:1024)\l0x0089: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1025)\l0x008a: INVOKE  \l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r2 I:android.graphics.Bitmap A[D('shadowLayer' android.graphics.Bitmap)])\l  (r4 I:float A[D('shadowLeft' float)])\l  (r5 I:float A[D('shadowTop' float)])\l  (r6 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawBitmap(android.graphics.Bitmap, float, float, android.graphics.Paint):void A[MD:(android.graphics.Bitmap, float, float, android.graphics.Paint):void (c)]\l0x008d: INVOKE  (r2 I:android.graphics.Bitmap A[D('shadowLayer' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.recycle():void A[MD:():void (c)] (LINE:1028)\l0x0090: INVOKE  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.restore():void A[MD:():void (c)] (LINE:1031)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0093|RETURN\l|0x0093: RETURN    (LINE:1032)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0094|0x0094: NEW_INSTANCE  (r2 I:java.lang.IllegalStateException A[D('shadowLayer' android.graphics.Bitmap)]) =  java.lang.IllegalStateException  (LINE:1006)\l0x0096: CONST_STR  (r3 I:java.lang.String) =  \"Invalid shadow bounds. Check that the treatments result in a valid path.\" \l0x0098: INVOKE  (r2 I:java.lang.IllegalStateException), (r3 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x009b|0x009b: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void com.google.android.material.shape.MaterialShapeDrawable.maybeDrawCompatShadow((r8 'this' I:com.google.android.material.shape.MaterialShapeDrawable A[IMMUTABLE_TYPE, THIS]), (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0017 \-\> B:17:?, CROSS_EDGE: B:29:0x0093 \-\> B:17:?, CROSS_EDGE: B:31:0x009b \-\> B:17:?, CROSS_EDGE: B:26:0x003a \-\> B:30:0x0094\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0062\-0x0094: r2 'shadowLayer' Landroid\/graphics\/Bitmap;\l  0x0067\-0x0094: r3 'shadowCanvas' Landroid\/graphics\/Canvas;\l  0x0074\-0x0094: r4 'shadowLeft' F\l  0x0081\-0x0094: r5 'shadowTop' F\l  0x0029\-0x009b: r0 'pathExtraWidth' I\l  0x003a\-0x009b: r1 'pathExtraHeight' I\l  \-1 \-0x009b: r9 'canvas' Landroid\/graphics\/Canvas;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_17;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_30;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_17;
Node_30 -> Node_31;
Node_31 -> Node_17;
}

