digraph "CFG forcom.google.android.material.shape.ShapeAppearanceModel.isRoundRect(Landroid\/graphics\/RectF;)Z" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.shape.EdgeTreatment) = (r6 I:com.google.android.material.shape.ShapeAppearanceModel) com.google.android.material.shape.ShapeAppearanceModel.leftEdge com.google.android.material.shape.EdgeTreatment  (LINE:819)\l0x0002: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)] (LINE:820)\l0x0006: CONST_CLASS  (r1 I:java.lang.Class\<com.google.android.material.shape.EdgeTreatment\>) =  com.google.android.material.shape.EdgeTreatment.class \l0x0008: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l0x000c: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x003c \l}"];
Node_41 [shape=record,label="{41\:\ 0x0010|0x0010: IGET  (r0 I:com.google.android.material.shape.EdgeTreatment) = (r6 I:com.google.android.material.shape.ShapeAppearanceModel) com.google.android.material.shape.ShapeAppearanceModel.rightEdge com.google.android.material.shape.EdgeTreatment \l0x0012: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)] (LINE:821)\l0x0016: CONST_CLASS  (r3 I:java.lang.Class\<com.google.android.material.shape.EdgeTreatment\>) =  com.google.android.material.shape.EdgeTreatment.class \l0x0018: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x001c|0x001c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x003c \l}"];
Node_43 [shape=record,label="{43\:\ 0x001e|0x001e: IGET  (r0 I:com.google.android.material.shape.EdgeTreatment) = (r6 I:com.google.android.material.shape.ShapeAppearanceModel) com.google.android.material.shape.ShapeAppearanceModel.topEdge com.google.android.material.shape.EdgeTreatment \l0x0020: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)] (LINE:822)\l0x0024: CONST_CLASS  (r3 I:java.lang.Class\<com.google.android.material.shape.EdgeTreatment\>) =  com.google.android.material.shape.EdgeTreatment.class \l0x0026: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x002a|0x002a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x003c \l}"];
Node_45 [shape=record,label="{45\:\ 0x002c|0x002c: IGET  (r0 I:com.google.android.material.shape.EdgeTreatment) = (r6 I:com.google.android.material.shape.ShapeAppearanceModel) com.google.android.material.shape.ShapeAppearanceModel.bottomEdge com.google.android.material.shape.EdgeTreatment \l0x002e: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)] (LINE:823)\l0x0032: CONST_CLASS  (r3 I:java.lang.Class\<com.google.android.material.shape.EdgeTreatment\>) =  com.google.android.material.shape.EdgeTreatment.class \l0x0034: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0038|0x0038: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x003c \l}"];
Node_47 [shape=record,label="{47\:\ 0x003a|0x003a: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x003d|0x003d: IGET  (r3 I:com.google.android.material.shape.CornerSize) = (r6 I:com.google.android.material.shape.ShapeAppearanceModel) com.google.android.material.shape.ShapeAppearanceModel.topLeftCornerSize com.google.android.material.shape.CornerSize  (LINE:825)\l0x003f: INVOKE  (r3 I:float) = \l  (r3 I:com.google.android.material.shape.CornerSize)\l  (r7 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)])\l type: INTERFACE call: com.google.android.material.shape.CornerSize.getCornerSize(android.graphics.RectF):float A[MD:(android.graphics.RectF):float (m)]\l0x0043: IGET  (r4 I:com.google.android.material.shape.CornerSize) = (r6 I:com.google.android.material.shape.ShapeAppearanceModel) com.google.android.material.shape.ShapeAppearanceModel.topRightCornerSize com.google.android.material.shape.CornerSize  (LINE:827)\l0x0045: INVOKE  (r4 I:float) = \l  (r4 I:com.google.android.material.shape.CornerSize)\l  (r7 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)])\l type: INTERFACE call: com.google.android.material.shape.CornerSize.getCornerSize(android.graphics.RectF):float A[MD:(android.graphics.RectF):float (m)] (LINE:828)\l0x0049: CMP_L  (r4 I:int) = (r4 I:float), (r3 I:float A[D('cornerSize' float)]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x004b|0x004b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0063 \l}"];
Node_51 [shape=record,label="{51\:\ 0x004d|0x004d: IGET  (r4 I:com.google.android.material.shape.CornerSize) = (r6 I:com.google.android.material.shape.ShapeAppearanceModel) com.google.android.material.shape.ShapeAppearanceModel.bottomLeftCornerSize com.google.android.material.shape.CornerSize \l0x004f: INVOKE  (r4 I:float) = \l  (r4 I:com.google.android.material.shape.CornerSize)\l  (r7 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)])\l type: INTERFACE call: com.google.android.material.shape.CornerSize.getCornerSize(android.graphics.RectF):float A[MD:(android.graphics.RectF):float (m)] (LINE:829)\l0x0053: CMP_L  (r4 I:int) = (r4 I:float), (r3 I:float A[D('cornerSize' float)]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0055|0x0055: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0063 \l}"];
Node_53 [shape=record,label="{53\:\ 0x0057|0x0057: IGET  (r4 I:com.google.android.material.shape.CornerSize) = (r6 I:com.google.android.material.shape.ShapeAppearanceModel) com.google.android.material.shape.ShapeAppearanceModel.bottomRightCornerSize com.google.android.material.shape.CornerSize \l0x0059: INVOKE  (r4 I:float) = \l  (r4 I:com.google.android.material.shape.CornerSize)\l  (r7 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)])\l type: INTERFACE call: com.google.android.material.shape.CornerSize.getCornerSize(android.graphics.RectF):float A[MD:(android.graphics.RectF):float (m)] (LINE:830)\l0x005d: CMP_L  (r4 I:int) = (r4 I:float), (r3 I:float A[D('cornerSize' float)]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x005f|0x005f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0063 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0061|0x0061: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x0064|0x0064: IGET  (r5 I:com.google.android.material.shape.CornerTreatment) = (r6 I:com.google.android.material.shape.ShapeAppearanceModel) com.google.android.material.shape.ShapeAppearanceModel.topRightCorner com.google.android.material.shape.CornerTreatment  (LINE:832)\l0x0066: INSTANCE_OF  (r5 I:boolean) = (r5 I:??[OBJECT, ARRAY]) com.google.android.material.shape.RoundedCornerTreatment \l}"];
Node_58 [shape=record,label="{58\:\ 0x0068|0x0068: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x007e \l}"];
Node_59 [shape=record,label="{59\:\ 0x006a|0x006a: IGET  (r5 I:com.google.android.material.shape.CornerTreatment) = (r6 I:com.google.android.material.shape.ShapeAppearanceModel) com.google.android.material.shape.ShapeAppearanceModel.topLeftCorner com.google.android.material.shape.CornerTreatment \l0x006c: INSTANCE_OF  (r5 I:boolean) = (r5 I:??[OBJECT, ARRAY]) com.google.android.material.shape.RoundedCornerTreatment \l}"];
Node_60 [shape=record,label="{60\:\ 0x006e|0x006e: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x007e \l}"];
Node_61 [shape=record,label="{61\:\ 0x0070|0x0070: IGET  (r5 I:com.google.android.material.shape.CornerTreatment) = (r6 I:com.google.android.material.shape.ShapeAppearanceModel) com.google.android.material.shape.ShapeAppearanceModel.bottomRightCorner com.google.android.material.shape.CornerTreatment \l0x0072: INSTANCE_OF  (r5 I:boolean) = (r5 I:??[OBJECT, ARRAY]) com.google.android.material.shape.RoundedCornerTreatment \l}"];
Node_62 [shape=record,label="{62\:\ 0x0074|0x0074: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x007e \l}"];
Node_63 [shape=record,label="{63\:\ 0x0076|0x0076: IGET  (r5 I:com.google.android.material.shape.CornerTreatment) = (r6 I:com.google.android.material.shape.ShapeAppearanceModel) com.google.android.material.shape.ShapeAppearanceModel.bottomLeftCorner com.google.android.material.shape.CornerTreatment \l0x0078: INSTANCE_OF  (r5 I:boolean) = (r5 I:??[OBJECT, ARRAY]) com.google.android.material.shape.RoundedCornerTreatment \l}"];
Node_64 [shape=record,label="{64\:\ 0x007a|0x007a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x007e \l}"];
Node_65 [shape=record,label="{65\:\ 0x007c|0x007c: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_67 [shape=record,label="{67\:\ 0x007f|0x007f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasDefaultEdges' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x0086  (LINE:838)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0081|0x0081: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cornersHaveSameSize' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x0086 \l}"];
Node_69 [shape=record,label="{69\:\ 0x0083|0x0083: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasRoundedCorners' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x0086 \l}"];
Node_73 [shape=record,label="{73\:\ ?|SYNTHETIC\lRETURN\l|0x0087: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_71 [shape=record,label="{71\:\ 0x0086|RETURN\lORIG_RETURN\l|0x0086: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0087: RETURN  (r1 I:boolean) \l}"];
Node_66 [shape=record,label="{66\:\ 0x007e|0x007e: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0063|0x0063: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x003c|0x003c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.shape.ShapeAppearanceModel.isRoundRect((r6 'this' I:com.google.android.material.shape.ShapeAppearanceModel A[IMMUTABLE_TYPE, THIS]), (r7 I:android.graphics.RectF A[D('bounds' android.graphics.RectF), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:69:0x0083 \-\> B:72:0x0087, CROSS_EDGE: B:68:0x0081 \-\> B:71:0x0086, CROSS_EDGE: B:67:0x007f \-\> B:71:0x0086, CROSS_EDGE: B:66:0x007e \-\> B:67:0x007f, CROSS_EDGE: B:62:0x0074 \-\> B:66:0x007e, CROSS_EDGE: B:60:0x006e \-\> B:66:0x007e, CROSS_EDGE: B:58:0x0068 \-\> B:66:0x007e, CROSS_EDGE: B:56:0x0063 \-\> B:57:0x0064, CROSS_EDGE: B:52:0x0055 \-\> B:56:0x0063, CROSS_EDGE: B:50:0x004b \-\> B:56:0x0063, CROSS_EDGE: B:48:0x003c \-\> B:49:0x003d, CROSS_EDGE: B:44:0x002a \-\> B:48:0x003c, CROSS_EDGE: B:42:0x001c \-\> B:48:0x003c, CROSS_EDGE: B:40:0x000e \-\> B:48:0x003c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003d\-0x0087: r0 'hasDefaultEdges' Z\l  0x0043\-0x0087: r3 'cornerSize' F\l  0x0064\-0x0087: r4 'cornersHaveSameSize' Z\l  0x007f\-0x0087: r5 'hasRoundedCorners' Z\l  \-1 \-0x0087: r7 'bounds' Landroid\/graphics\/RectF;\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_48;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_48;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_48;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_56;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_56;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_57;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_66;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_66;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_66;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_71;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_71;
Node_69 -> Node_71;
Node_69 -> Node_73[style=dashed];
Node_73 -> Node_38;
Node_71 -> Node_38;
Node_66 -> Node_67;
Node_56 -> Node_57;
Node_48 -> Node_49;
}

