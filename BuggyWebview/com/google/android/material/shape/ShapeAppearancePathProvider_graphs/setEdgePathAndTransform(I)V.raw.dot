digraph "CFG forcom.google.android.material.shape.ShapeAppearancePathProvider.setEdgePathAndTransform(I)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:float[]) = (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.scratch float[]  (LINE:160)\l0x0002: IGET  (r1 I:com.google.android.material.shape.ShapePath[]) = (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths com.google.android.material.shape.ShapePath[] \l0x0004: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index' int)]) \l0x0006: INVOKE  (r1 I:float) = (r1 I:com.google.android.material.shape.ShapePath) type: VIRTUAL call: com.google.android.material.shape.ShapePath.getEndX():float A[MD:():float (m)]\l0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: APUT  (r0 I:??[int, float][]), (r2 I:??[int, short, byte, char]), (r1 I:??[int, float, short, byte, char]) \l0x000d: IGET  (r0 I:float[]) = (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.scratch float[]  (LINE:161)\l0x000f: IGET  (r1 I:com.google.android.material.shape.ShapePath[]) = (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths com.google.android.material.shape.ShapePath[] \l0x0011: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index' int)]) \l0x0013: INVOKE  (r1 I:float) = (r1 I:com.google.android.material.shape.ShapePath) type: VIRTUAL call: com.google.android.material.shape.ShapePath.getEndY():float A[MD:():float (m)]\l0x0017: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0018: APUT  (r0 I:??[int, float][]), (r3 I:??[int, short, byte, char]), (r1 I:??[int, float, short, byte, char]) \l0x001a: IGET  (r0 I:android.graphics.Matrix[]) = (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms android.graphics.Matrix[]  (LINE:162)\l0x001c: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index' int)]) \l0x001e: IGET  (r1 I:float[]) = (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.scratch float[] \l0x0020: INVOKE  (r0 I:android.graphics.Matrix), (r1 I:float[]) type: VIRTUAL call: android.graphics.Matrix.mapPoints(float[]):void A[MD:(float[]):void (c)]\l0x0023: INVOKE  (r0 I:float) = (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider), (r6 I:int A[D('index' int)]) type: DIRECT call: com.google.android.material.shape.ShapeAppearancePathProvider.angleOfEdge(int):float A[MD:(int):float (m)] (LINE:163)\l0x0027: IGET  (r1 I:android.graphics.Matrix[]) = (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms android.graphics.Matrix[]  (LINE:164)\l0x0029: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index' int)]) \l0x002b: INVOKE  (r1 I:android.graphics.Matrix) type: VIRTUAL call: android.graphics.Matrix.reset():void A[MD:():void (c)]\l0x002e: IGET  (r1 I:android.graphics.Matrix[]) = (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms android.graphics.Matrix[]  (LINE:165)\l0x0030: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index' int)]) \l0x0032: IGET  (r4 I:float[]) = (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.scratch float[] \l0x0034: AGET  (r2 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][]), (r2 I:??[int, short, byte, char]) \l0x0036: AGET  (r3 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][]), (r3 I:??[int, short, byte, char]) \l0x0038: INVOKE  (r1 I:android.graphics.Matrix), (r2 I:float), (r3 I:float) type: VIRTUAL call: android.graphics.Matrix.setTranslate(float, float):void A[MD:(float, float):void (c)]\l0x003b: IGET  (r1 I:android.graphics.Matrix[]) = (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms android.graphics.Matrix[]  (LINE:166)\l0x003d: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index' int)]) \l0x003f: INVOKE  (r1 I:android.graphics.Matrix), (r0 I:float A[D('edgeAngle' float)]) type: VIRTUAL call: android.graphics.Matrix.preRotate(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0042|RETURN\l|0x0042: RETURN    (LINE:167)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.shape.ShapeAppearancePathProvider.setEdgePathAndTransform((r5 'this' I:com.google.android.material.shape.ShapeAppearancePathProvider A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0027\-0x0042: r0 'edgeAngle' F\l  \-1 \-0x0042: r6 'index' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

