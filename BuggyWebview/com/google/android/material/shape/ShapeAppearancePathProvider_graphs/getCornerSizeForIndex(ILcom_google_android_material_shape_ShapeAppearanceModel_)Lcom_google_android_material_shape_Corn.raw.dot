digraph "CFG forcom.google.android.material.shape.ShapeAppearancePathProvider.getCornerSizeForIndex(ILcom\/google\/android\/material\/shape\/ShapeAppearanceModel;)Lcom\/google\/android\/material\/shape\/CornerSize;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: SWITCH  (r2 I:?? A[D('index' int)])\l case 1: goto B:20:0x0012\l case 2: goto B:18:0x000d\l case 3: goto B:16:0x0008\l default: goto B:14:0x0003  (LINE:278)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0003|0x0003: INVOKE  (r0 I:com.google.android.material.shape.CornerSize) = \l  (r3 I:com.google.android.material.shape.ShapeAppearanceModel A[D('shapeAppearanceModel' com.google.android.material.shape.ShapeAppearanceModel)])\l type: VIRTUAL call: com.google.android.material.shape.ShapeAppearanceModel.getTopRightCornerSize():com.google.android.material.shape.CornerSize A[MD:():com.google.android.material.shape.CornerSize (m)] (LINE:287)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:com.google.android.material.shape.CornerSize) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: INVOKE  (r0 I:com.google.android.material.shape.CornerSize) = \l  (r3 I:com.google.android.material.shape.ShapeAppearanceModel A[D('shapeAppearanceModel' com.google.android.material.shape.ShapeAppearanceModel)])\l type: VIRTUAL call: com.google.android.material.shape.ShapeAppearanceModel.getTopLeftCornerSize():com.google.android.material.shape.CornerSize A[MD:():com.google.android.material.shape.CornerSize (m)] (LINE:284)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:com.google.android.material.shape.CornerSize) \l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|0x000d: INVOKE  (r0 I:com.google.android.material.shape.CornerSize) = \l  (r3 I:com.google.android.material.shape.ShapeAppearanceModel A[D('shapeAppearanceModel' com.google.android.material.shape.ShapeAppearanceModel)])\l type: VIRTUAL call: com.google.android.material.shape.ShapeAppearanceModel.getBottomLeftCornerSize():com.google.android.material.shape.CornerSize A[MD:():com.google.android.material.shape.CornerSize (m)] (LINE:282)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:com.google.android.material.shape.CornerSize) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|0x0012: INVOKE  (r0 I:com.google.android.material.shape.CornerSize) = \l  (r3 I:com.google.android.material.shape.ShapeAppearanceModel A[D('shapeAppearanceModel' com.google.android.material.shape.ShapeAppearanceModel)])\l type: VIRTUAL call: com.google.android.material.shape.ShapeAppearanceModel.getBottomRightCornerSize():com.google.android.material.shape.CornerSize A[MD:():com.google.android.material.shape.CornerSize (m)] (LINE:280)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:com.google.android.material.shape.CornerSize) \l}"];
MethodNode[shape=record,label="{private com.google.android.material.shape.CornerSize com.google.android.material.shape.ShapeAppearancePathProvider.getCornerSizeForIndex((r1 'this' I:com.google.android.material.shape.ShapeAppearancePathProvider A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.google.android.material.shape.ShapeAppearanceModel A[D('shapeAppearanceModel' com.google.android.material.shape.ShapeAppearanceModel), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000c \-\> B:12:?, CROSS_EDGE: B:19:0x0011 \-\> B:12:?, CROSS_EDGE: B:21:0x0016 \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0021: r2 'index' I\l  \-1 \-0x0021: r3 'shapeAppearanceModel' Lcom\/google\/android\/material\/shape\/ShapeAppearanceModel;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_13 -> Node_18;
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_12;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

