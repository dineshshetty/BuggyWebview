digraph "CFG forcom.google.android.material.shape.ShapeAppearancePathProvider.appendCornerPath(Lcom\/google\/android\/material\/shape\/ShapeAppearancePathProvider$ShapeAppearancePathSpec;I)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:float[]) = (r4 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.scratch float[]  (LINE:170)\l0x0002: IGET  (r1 I:com.google.android.material.shape.ShapePath[]) = (r4 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths com.google.android.material.shape.ShapePath[] \l0x0004: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index' int)]) \l0x0006: INVOKE  (r1 I:float) = (r1 I:com.google.android.material.shape.ShapePath) type: VIRTUAL call: com.google.android.material.shape.ShapePath.getStartX():float A[MD:():float (m)]\l0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: APUT  (r0 I:??[int, float][]), (r2 I:??[int, short, byte, char]), (r1 I:??[int, float, short, byte, char]) \l0x000d: IGET  (r0 I:float[]) = (r4 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.scratch float[]  (LINE:171)\l0x000f: IGET  (r1 I:com.google.android.material.shape.ShapePath[]) = (r4 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths com.google.android.material.shape.ShapePath[] \l0x0011: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index' int)]) \l0x0013: INVOKE  (r1 I:float) = (r1 I:com.google.android.material.shape.ShapePath) type: VIRTUAL call: com.google.android.material.shape.ShapePath.getStartY():float A[MD:():float (m)]\l0x0017: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0018: APUT  (r0 I:??[int, float][]), (r3 I:??[int, short, byte, char]), (r1 I:??[int, float, short, byte, char]) \l0x001a: IGET  (r0 I:android.graphics.Matrix[]) = (r4 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms android.graphics.Matrix[]  (LINE:172)\l0x001c: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index' int)]) \l0x001e: IGET  (r1 I:float[]) = (r4 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.scratch float[] \l0x0020: INVOKE  (r0 I:android.graphics.Matrix), (r1 I:float[]) type: VIRTUAL call: android.graphics.Matrix.mapPoints(float[]):void A[MD:(float[]):void (c)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|0x0023: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0031  (LINE:173)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|0x0025: IGET  (r0 I:android.graphics.Path) = \l  (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec A[D('spec' com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec)])\l com.google.android.material.shape.ShapeAppearancePathProvider.ShapeAppearancePathSpec.path android.graphics.Path  (LINE:174)\l0x0027: IGET  (r1 I:float[]) = (r4 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.scratch float[] \l0x0029: AGET  (r2 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][]), (r2 I:??[int, short, byte, char]) \l0x002b: AGET  (r1 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][]), (r3 I:??[int, short, byte, char]) \l0x002d: INVOKE  (r0 I:android.graphics.Path), (r2 I:float), (r1 I:float) type: VIRTUAL call: android.graphics.Path.moveTo(float, float):void A[MD:(float, float):void (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|0x003c: IGET  (r0 I:com.google.android.material.shape.ShapePath[]) = (r4 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths com.google.android.material.shape.ShapePath[]  (LINE:178)\l0x003e: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index' int)]) \l0x0040: IGET  (r1 I:android.graphics.Matrix[]) = (r4 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms android.graphics.Matrix[] \l0x0042: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index' int)]) \l0x0044: IGET  (r2 I:android.graphics.Path) = \l  (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec A[D('spec' com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec)])\l com.google.android.material.shape.ShapeAppearancePathProvider.ShapeAppearancePathSpec.path android.graphics.Path \l0x0046: INVOKE  (r0 I:com.google.android.material.shape.ShapePath), (r1 I:android.graphics.Matrix), (r2 I:android.graphics.Path) type: VIRTUAL call: com.google.android.material.shape.ShapePath.applyToPath(android.graphics.Matrix, android.graphics.Path):void A[MD:(android.graphics.Matrix, android.graphics.Path):void (m)]\l0x0049: IGET  (r0 I:com.google.android.material.shape.ShapeAppearancePathProvider$PathListener) = \l  (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec A[D('spec' com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec)])\l com.google.android.material.shape.ShapeAppearancePathProvider.ShapeAppearancePathSpec.pathListener com.google.android.material.shape.ShapeAppearancePathProvider$PathListener  (LINE:179)\l}"];
Node_18 [shape=record,label="{18\:\ 0x004b|0x004b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:? \l}"];
Node_19 [shape=record,label="{19\:\ 0x004d|0x004d: IGET  (r0 I:com.google.android.material.shape.ShapeAppearancePathProvider$PathListener) = \l  (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec A[D('spec' com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec)])\l com.google.android.material.shape.ShapeAppearancePathProvider.ShapeAppearancePathSpec.pathListener com.google.android.material.shape.ShapeAppearancePathProvider$PathListener  (LINE:180)\l0x004f: IGET  (r1 I:com.google.android.material.shape.ShapePath[]) = (r4 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths com.google.android.material.shape.ShapePath[] \l0x0051: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index' int)]) \l0x0053: IGET  (r2 I:android.graphics.Matrix[]) = (r4 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms android.graphics.Matrix[] \l0x0055: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char] A[D('index' int)]) \l0x0057: INVOKE  \l  (r0 I:com.google.android.material.shape.ShapeAppearancePathProvider$PathListener)\l  (r1 I:com.google.android.material.shape.ShapePath)\l  (r2 I:android.graphics.Matrix)\l  (r6 I:int A[D('index' int)])\l type: INTERFACE call: com.google.android.material.shape.ShapeAppearancePathProvider.PathListener.onCornerPathCreated(com.google.android.material.shape.ShapePath, android.graphics.Matrix, int):void A[MD:(com.google.android.material.shape.ShapePath, android.graphics.Matrix, int):void (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x005a|RETURN\lORIG_RETURN\l|0x005a: RETURN    (LINE:182)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x005a: RETURN   A[SYNTHETIC] (LINE:182)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0031|0x0031: IGET  (r0 I:android.graphics.Path) = \l  (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec A[D('spec' com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec)])\l com.google.android.material.shape.ShapeAppearancePathProvider.ShapeAppearancePathSpec.path android.graphics.Path  (LINE:176)\l0x0033: IGET  (r1 I:float[]) = (r4 I:com.google.android.material.shape.ShapeAppearancePathProvider) com.google.android.material.shape.ShapeAppearancePathProvider.scratch float[] \l0x0035: AGET  (r2 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][]), (r2 I:??[int, short, byte, char]) \l0x0037: AGET  (r1 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][]), (r3 I:??[int, short, byte, char]) \l0x0039: INVOKE  (r0 I:android.graphics.Path), (r2 I:float), (r1 I:float) type: VIRTUAL call: android.graphics.Path.lineTo(float, float):void A[MD:(float, float):void (c)]\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.shape.ShapeAppearancePathProvider.appendCornerPath((r4 'this' I:com.google.android.material.shape.ShapeAppearancePathProvider A[IMMUTABLE_TYPE, THIS]), (r5 I:com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec A[D('spec' com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x004b \-\> B:20:0x005a, CROSS_EDGE: B:16:0x0031 \-\> B:17:0x003c\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x005a: r5 'spec' Lcom\/google\/android\/material\/shape\/ShapeAppearancePathProvider$ShapeAppearancePathSpec;\l  \-1 \-0x005a: r6 'index' I\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

