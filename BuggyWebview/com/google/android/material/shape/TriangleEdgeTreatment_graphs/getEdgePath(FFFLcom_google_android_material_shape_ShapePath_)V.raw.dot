digraph "CFG forcom.google.android.material.shape.TriangleEdgeTreatment.getEdgePath(FFFLcom\/google\/android\/material\/shape\/ShapePath;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r3 I:com.google.android.material.shape.TriangleEdgeTreatment) com.google.android.material.shape.TriangleEdgeTreatment.inside boolean  (LINE:50)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IGET  (r0 I:float) = (r3 I:com.google.android.material.shape.TriangleEdgeTreatment) com.google.android.material.shape.TriangleEdgeTreatment.size float  (LINE:51)\l0x0007: ARITH  (r0 I:float) = (r0 I:float) * (r6 I:float A[D('interpolation' float)]) \l0x0009: ARITH  (r0 I:float) = (r5 I:float A[D('center' float)]) \- (r0 I:float) \l0x000b: INVOKE  \l  (r7 I:com.google.android.material.shape.ShapePath A[D('shapePath' com.google.android.material.shape.ShapePath)])\l  (r0 I:float)\l  (r1 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.lineTo(float, float):void A[MD:(float, float):void (m)]\l0x000e: IGET  (r0 I:float) = (r3 I:com.google.android.material.shape.TriangleEdgeTreatment) com.google.android.material.shape.TriangleEdgeTreatment.size float  (LINE:52)\l0x0010: ARITH  (r2 I:float) = (r0 I:float) * (r6 I:float A[D('interpolation' float)]) \l0x0012: ARITH  (r0 I:float) = (r0 I:float) * (r6 I:float A[D('interpolation' float)]) \l0x0014: ARITH  (r0 I:float) = (r0 I:float) + (r5 I:float A[D('center' float)]) \l0x0015: INVOKE  \l  (r7 I:com.google.android.material.shape.ShapePath A[D('shapePath' com.google.android.material.shape.ShapePath)])\l  (r5 I:float A[D('center' float)])\l  (r2 I:float)\l  (r0 I:float)\l  (r1 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.lineTo(float, float, float, float):void A[MD:(float, float, float, float):void (m)]\l0x0018: INVOKE  \l  (r7 I:com.google.android.material.shape.ShapePath A[D('shapePath' com.google.android.material.shape.ShapePath)])\l  (r4 I:float A[D('length' float)])\l  (r1 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.lineTo(float, float):void A[MD:(float, float):void (m)] (LINE:53)\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|0x0030: RETURN   A[SYNTHETIC] (LINE:58)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: IGET  (r0 I:float) = (r3 I:com.google.android.material.shape.TriangleEdgeTreatment) com.google.android.material.shape.TriangleEdgeTreatment.size float  (LINE:55)\l0x001e: ARITH  (r2 I:float) = (r0 I:float) * (r6 I:float A[D('interpolation' float)]) \l0x0020: ARITH  (r2 I:float) = (r5 I:float A[D('center' float)]) \- (r2 I:float) \l0x0022: NEG  (r0 I:float) = (r0 I:float) \l0x0023: ARITH  (r0 I:float) = (r0 I:float) * (r6 I:float A[D('interpolation' float)]) \l0x0025: INVOKE  \l  (r7 I:com.google.android.material.shape.ShapePath A[D('shapePath' com.google.android.material.shape.ShapePath)])\l  (r2 I:float)\l  (r1 I:float)\l  (r5 I:float A[D('center' float)])\l  (r0 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.lineTo(float, float, float, float):void A[MD:(float, float, float, float):void (m)]\l0x0028: IGET  (r0 I:float) = (r3 I:com.google.android.material.shape.TriangleEdgeTreatment) com.google.android.material.shape.TriangleEdgeTreatment.size float  (LINE:56)\l0x002a: ARITH  (r0 I:float) = (r0 I:float) * (r6 I:float A[D('interpolation' float)]) \l0x002c: ARITH  (r0 I:float) = (r0 I:float) + (r5 I:float A[D('center' float)]) \l0x002d: INVOKE  \l  (r7 I:com.google.android.material.shape.ShapePath A[D('shapePath' com.google.android.material.shape.ShapePath)])\l  (r0 I:float)\l  (r1 I:float)\l  (r4 I:float A[D('length' float)])\l  (r1 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.lineTo(float, float, float, float):void A[MD:(float, float, float, float):void (m)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|RETURN\lORIG_RETURN\l|0x0030: RETURN    (LINE:58)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.shape.TriangleEdgeTreatment.getEdgePath((r3 'this' I:com.google.android.material.shape.TriangleEdgeTreatment A[IMMUTABLE_TYPE, THIS]), (r4 I:float A[D('length' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:float A[D('center' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[D('interpolation' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.google.android.material.shape.ShapePath A[D('shapePath' com.google.android.material.shape.ShapePath), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x001c \-\> B:6:0x0030\lDebug Info:\l  \-1 \-0x0030: r4 'length' F\l  \-1 \-0x0030: r5 'center' F\l  \-1 \-0x0030: r6 'interpolation' F\l  \-1 \-0x0030: r7 'shapePath' Lcom\/google\/android\/material\/shape\/ShapePath;\lMETHOD_OVERRIDE: [com.google.android.material.shape.EdgeTreatment.getEdgePath(float, float, float, com.google.android.material.shape.ShapePath):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

