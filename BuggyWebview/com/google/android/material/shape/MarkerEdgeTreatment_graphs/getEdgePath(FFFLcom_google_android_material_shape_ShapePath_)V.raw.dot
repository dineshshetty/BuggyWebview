digraph "CFG forcom.google.android.material.shape.MarkerEdgeTreatment.getEdgePath(FFFLcom\/google\/android\/material\/shape\/ShapePath;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:float) = (r9 I:com.google.android.material.shape.MarkerEdgeTreatment) com.google.android.material.shape.MarkerEdgeTreatment.radius float  (LINE:39)\l0x0002: CAST (r0 I:double) = (double) (r0 I:float) \l0x0003: CONST  (r2 I:??[long, double]) = (4611686018427387904(0x4000000000000000, double:2.0) ??[long, double]) \l0x0005: INVOKE  (r4 I:double) = (r2 I:double) type: STATIC call: java.lang.Math.sqrt(double):double A[MD:(double):double (c)]\l0x0009: ARITH  (r0 I:double) = (r0 I:double) * (r4 I:double) \l0x000b: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l0x000c: CAST (r0 I:float) = (float) (r0 I:double) \l0x000d: IGET  (r1 I:float) = (r9 I:com.google.android.material.shape.MarkerEdgeTreatment) com.google.android.material.shape.MarkerEdgeTreatment.radius float  (LINE:40)\l0x000f: CAST (r4 I:double) = (double) (r1 I:float) \l0x0010: INVOKE  (r4 I:double) = (r4 I:double), (r2 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x0014: CAST (r6 I:double) = (double) (r0 I:float A[D('side' float)]) \l0x0015: INVOKE  (r6 I:double) = (r6 I:double), (r2 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x0019: ARITH  (r4 I:double) = (r4 I:double) \- (r6 I:double) \l0x001a: INVOKE  (r4 I:double) = (r4 I:double) type: STATIC call: java.lang.Math.sqrt(double):double A[MD:(double):double (c)]\l0x001e: CAST (r1 I:float) = (float) (r4 I:double) \l0x001f: ARITH  (r4 I:float) = (r11 I:float A[D('center' float)]) \- (r0 I:float A[D('side' float)])  (LINE:41)\l0x0021: IGET  (r5 I:float) = (r9 I:com.google.android.material.shape.MarkerEdgeTreatment) com.google.android.material.shape.MarkerEdgeTreatment.radius float \l0x0023: CAST (r5 I:double) = (double) (r5 I:float) \l0x0024: INVOKE  (r7 I:double) = (r2 I:double) type: STATIC call: java.lang.Math.sqrt(double):double A[MD:(double):double (c)]\l0x0028: ARITH  (r5 I:double) = (r5 I:double) * (r7 I:double) \l0x002a: IGET  (r7 I:float) = (r9 I:com.google.android.material.shape.MarkerEdgeTreatment) com.google.android.material.shape.MarkerEdgeTreatment.radius float \l0x002c: CAST (r7 I:double) = (double) (r7 I:float) \l0x002d: ARITH  (r5 I:double) = (r5 I:double) \- (r7 I:double) \l0x002e: NEG  (r5 I:double) = (r5 I:double) \l0x002f: CAST (r5 I:float) = (float) (r5 I:double) \l0x0030: ARITH  (r5 I:float) = (r5 I:float) + (r1 I:float A[D('side2' float)]) \l0x0031: INVOKE  \l  (r13 I:com.google.android.material.shape.ShapePath A[D('shapePath' com.google.android.material.shape.ShapePath)])\l  (r4 I:float)\l  (r5 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.reset(float, float):void A[MD:(float, float):void (m)]\l0x0034: IGET  (r4 I:float) = (r9 I:com.google.android.material.shape.MarkerEdgeTreatment) com.google.android.material.shape.MarkerEdgeTreatment.radius float  (LINE:42)\l0x0036: CAST (r4 I:double) = (double) (r4 I:float) \l0x0037: INVOKE  (r6 I:double) = (r2 I:double) type: STATIC call: java.lang.Math.sqrt(double):double A[MD:(double):double (c)]\l0x003b: ARITH  (r4 I:double) = (r4 I:double) * (r6 I:double) \l0x003d: IGET  (r6 I:float) = (r9 I:com.google.android.material.shape.MarkerEdgeTreatment) com.google.android.material.shape.MarkerEdgeTreatment.radius float \l0x003f: CAST (r6 I:double) = (double) (r6 I:float) \l0x0040: ARITH  (r4 I:double) = (r4 I:double) \- (r6 I:double) \l0x0041: NEG  (r4 I:double) = (r4 I:double) \l0x0042: CAST (r4 I:float) = (float) (r4 I:double) \l0x0043: INVOKE  \l  (r13 I:com.google.android.material.shape.ShapePath A[D('shapePath' com.google.android.material.shape.ShapePath)])\l  (r11 I:float A[D('center' float)])\l  (r4 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.lineTo(float, float):void A[MD:(float, float):void (m)]\l0x0046: ARITH  (r4 I:float) = (r11 I:float A[D('center' float)]) + (r0 I:float A[D('side' float)])  (LINE:43)\l0x0048: IGET  (r5 I:float) = (r9 I:com.google.android.material.shape.MarkerEdgeTreatment) com.google.android.material.shape.MarkerEdgeTreatment.radius float \l0x004a: CAST (r5 I:double) = (double) (r5 I:float) \l0x004b: INVOKE  (r2 I:double) = (r2 I:double) type: STATIC call: java.lang.Math.sqrt(double):double A[MD:(double):double (c)]\l0x004f: ARITH  (r5 I:double) = (r5 I:double) * (r2 I:double) \l0x0051: IGET  (r2 I:float) = (r9 I:com.google.android.material.shape.MarkerEdgeTreatment) com.google.android.material.shape.MarkerEdgeTreatment.radius float \l0x0053: CAST (r2 I:double) = (double) (r2 I:float) \l0x0054: ARITH  (r5 I:double) = (r5 I:double) \- (r2 I:double) \l0x0055: NEG  (r2 I:double) = (r5 I:double) \l0x0056: CAST (r2 I:float) = (float) (r2 I:double) \l0x0057: ARITH  (r2 I:float) = (r2 I:float) + (r1 I:float A[D('side2' float)]) \l0x0058: INVOKE  \l  (r13 I:com.google.android.material.shape.ShapePath A[D('shapePath' com.google.android.material.shape.ShapePath)])\l  (r4 I:float)\l  (r2 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.lineTo(float, float):void A[MD:(float, float):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x005b|RETURN\l|0x005b: RETURN    (LINE:44)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.shape.MarkerEdgeTreatment.getEdgePath((r9 'this' I:com.google.android.material.shape.MarkerEdgeTreatment A[IMMUTABLE_TYPE, THIS]), (r10 I:float A[D('length' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:float A[D('center' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:float A[D('interpolation' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:com.google.android.material.shape.ShapePath A[D('shapePath' com.google.android.material.shape.ShapePath), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x005b: r0 'side' F\l  0x001f\-0x005b: r1 'side2' F\l  \-1 \-0x005b: r10 'length' F\l  \-1 \-0x005b: r11 'center' F\l  \-1 \-0x005b: r12 'interpolation' F\l  \-1 \-0x005b: r13 'shapePath' Lcom\/google\/android\/material\/shape\/ShapePath;\lMETHOD_OVERRIDE: [com.google.android.material.shape.EdgeTreatment.getEdgePath(float, float, float, com.google.android.material.shape.ShapePath):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

