digraph "CFG forcom.google.android.material.shape.CutCornerTreatment.getCornerPath(Lcom\/google\/android\/material\/shape\/ShapePath;FFF)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|r6.reset(0.0f, r9 * r8, 180.0f, 180.0f \- r7)\lr6.lineTo((float) ((java.lang.Math.sin(java.lang.Math.toRadians((double) r7)) * ((double) r9)) * ((double) r8)), (float) ((java.lang.Math.sin(java.lang.Math.toRadians((double) (90.0f \- r7))) * ((double) r9)) * ((double) r8)))\l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.shape.CutCornerTreatment.getCornerPath((r5v0 'this' com.google.android.material.shape.CutCornerTreatment A[IMMUTABLE_TYPE, THIS]), (r6v0 'shapePath' com.google.android.material.shape.ShapePath A[D('shapePath' com.google.android.material.shape.ShapePath), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'angle' float A[D('angle' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'interpolation' float A[D('interpolation' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'radius' float A[D('radius' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [com.google.android.material.shape.CornerTreatment.getCornerPath(com.google.android.material.shape.ShapePath, float, float, float):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

