digraph "CFG forcom.google.android.material.shape.RoundedCornerTreatment.getCornerPath(Lcom\/google\/android\/material\/shape\/ShapePath;FFF)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: ARITH  (r0 I:float) = (r13 I:float A[D('radius' float)]) * (r12 I:float A[D('interpolation' float)])  (LINE:43)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (1127481344(0x43340000, float:180.0) ??[int, float, short, byte, char]) \l0x0004: ARITH  (r2 I:float) = (r1 I:float) \- (r11 I:float A[D('angle' float)]) \l0x0006: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: INVOKE  \l  (r10 I:com.google.android.material.shape.ShapePath A[D('shapePath' com.google.android.material.shape.ShapePath)])\l  (r3 I:float)\l  (r0 I:float)\l  (r1 I:float)\l  (r2 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.reset(float, float, float, float):void A[MD:(float, float, float, float):void (m)]\l0x000a: CONST  (r0 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:44)\l0x000c: ARITH  (r1 I:float) = (r13 I:float A[D('radius' float)]) * (r0 I:float) \l0x000e: ARITH  (r5 I:float) = (r1 I:float) * (r12 I:float A[D('interpolation' float)]) \l0x0010: ARITH  (r0 I:float) = (r0 I:float) * (r13 I:float A[D('radius' float)]) \l0x0012: ARITH  (r6 I:float) = (r0 I:float) * (r12 I:float A[D('interpolation' float)]) \l0x0014: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: CONST  (r7 I:??[int, float, short, byte, char]) = (1127481344(0x43340000, float:180.0) ??[int, float, short, byte, char]) \l0x0017: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('shapePath' com.google.android.material.shape.ShapePath)]) \l0x0018: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('angle' float)]) \l0x0019: INVOKE  \l  (r2 I:com.google.android.material.shape.ShapePath)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.addArc(float, float, float, float, float, float):void A[MD:(float, float, float, float, float, float):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|RETURN\l|0x001c: RETURN    (LINE:45)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.shape.RoundedCornerTreatment.getCornerPath((r9 'this' I:com.google.android.material.shape.RoundedCornerTreatment A[IMMUTABLE_TYPE, THIS]), (r10 I:com.google.android.material.shape.ShapePath A[D('shapePath' com.google.android.material.shape.ShapePath), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:float A[D('angle' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:float A[D('interpolation' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:float A[D('radius' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001c: r10 'shapePath' Lcom\/google\/android\/material\/shape\/ShapePath;\l  \-1 \-0x001c: r11 'angle' F\l  \-1 \-0x001c: r12 'interpolation' F\l  \-1 \-0x001c: r13 'radius' F\lMETHOD_OVERRIDE: [com.google.android.material.shape.CornerTreatment.getCornerPath(com.google.android.material.shape.ShapePath, float, float, float):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

