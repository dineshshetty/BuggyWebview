digraph "CFG forcom.google.android.material.shape.MaterialShapeDrawable.2.apply(Lcom\/google\/android\/material\/shape\/CornerSize;)Lcom\/google\/android\/material\/shape\/CornerSize;" {
subgraph cluster_Region_1629040330 {
label = "R(1:(2:(1:4)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_799387771 {
label = "R(2:(1:4)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_636382292 {
label = "IF [B:11:0x0002] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0002|if ((r3 instanceof com.google.android.material.shape.RelativeCornerSize) != false) goto L3\l}"];
subgraph cluster_Region_907158721 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return r3\l}"];
}
}
subgraph cluster_Region_517284791 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x000d|RETURN\lORIG_RETURN\l|return new com.google.android.material.shape.AdjustedCornerSize(r2, r3)\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0004}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0006}"];
MethodNode[shape=record,label="{public com.google.android.material.shape.CornerSize com.google.android.material.shape.MaterialShapeDrawable.2.apply((r2v0 'this' com.google.android.material.shape.MaterialShapeDrawable$2 A[IMMUTABLE_TYPE, THIS]), (r3v0 'cornerSize' com.google.android.material.shape.CornerSize A[D('cornerSize' com.google.android.material.shape.CornerSize), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0006 \-\> B:14:0x000d\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [com.google.android.material.shape.ShapeAppearanceModel.CornerSizeUnaryOperator.apply(com.google.android.material.shape.CornerSize):com.google.android.material.shape.CornerSize]\l}"];
MethodNode -> Node_8;Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_15 -> Node_9;
Node_14 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_15;
Node_13 -> Node_14;
}

