digraph "CFG forcom.google.android.material.shape.ShapePath.PathArcOperation.applyToPath(Landroid\/graphics\/Matrix;Landroid\/graphics\/Path;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.Matrix) = (r6 I:com.google.android.material.shape.ShapePath$PathArcOperation) com.google.android.material.shape.ShapePath.PathArcOperation.matrix android.graphics.Matrix  (LINE:701)\l0x0002: INVOKE  \l  (r7 I:android.graphics.Matrix A[D('transform' android.graphics.Matrix)])\l  (r0 I:android.graphics.Matrix A[D('inverse' android.graphics.Matrix)])\l type: VIRTUAL call: android.graphics.Matrix.invert(android.graphics.Matrix):boolean A[MD:(android.graphics.Matrix):boolean (c)] (LINE:702)\l0x0005: INVOKE  \l  (r8 I:android.graphics.Path A[D('path' android.graphics.Path)])\l  (r0 I:android.graphics.Matrix A[D('inverse' android.graphics.Matrix)])\l type: VIRTUAL call: android.graphics.Path.transform(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)] (LINE:703)\l0x0008: SGET  (r1 I:android.graphics.RectF) =  com.google.android.material.shape.ShapePath.PathArcOperation.rectF android.graphics.RectF  (LINE:704)\l0x000a: INVOKE  (r2 I:float) = (r6 I:com.google.android.material.shape.ShapePath$PathArcOperation) type: DIRECT call: com.google.android.material.shape.ShapePath.PathArcOperation.getLeft():float A[MD:():float (m)]\l0x000e: INVOKE  (r3 I:float) = (r6 I:com.google.android.material.shape.ShapePath$PathArcOperation) type: DIRECT call: com.google.android.material.shape.ShapePath.PathArcOperation.getTop():float A[MD:():float (m)]\l0x0012: INVOKE  (r4 I:float) = (r6 I:com.google.android.material.shape.ShapePath$PathArcOperation) type: DIRECT call: com.google.android.material.shape.ShapePath.PathArcOperation.getRight():float A[MD:():float (m)]\l0x0016: INVOKE  (r5 I:float) = (r6 I:com.google.android.material.shape.ShapePath$PathArcOperation) type: DIRECT call: com.google.android.material.shape.ShapePath.PathArcOperation.getBottom():float A[MD:():float (m)]\l0x001a: INVOKE  (r1 I:android.graphics.RectF), (r2 I:float), (r3 I:float), (r4 I:float), (r5 I:float) type: VIRTUAL call: android.graphics.RectF.set(float, float, float, float):void A[MD:(float, float, float, float):void (c)]\l0x001d: INVOKE  (r2 I:float) = (r6 I:com.google.android.material.shape.ShapePath$PathArcOperation) type: DIRECT call: com.google.android.material.shape.ShapePath.PathArcOperation.getStartAngle():float A[MD:():float (m)] (LINE:705)\l0x0021: INVOKE  (r3 I:float) = (r6 I:com.google.android.material.shape.ShapePath$PathArcOperation) type: DIRECT call: com.google.android.material.shape.ShapePath.PathArcOperation.getSweepAngle():float A[MD:():float (m)]\l0x0025: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0026: INVOKE  \l  (r8 I:android.graphics.Path A[D('path' android.graphics.Path)])\l  (r1 I:android.graphics.RectF)\l  (r2 I:float)\l  (r3 I:float)\l  (r4 I:boolean)\l type: VIRTUAL call: android.graphics.Path.arcTo(android.graphics.RectF, float, float, boolean):void A[MD:(android.graphics.RectF, float, float, boolean):void (c)]\l0x0029: INVOKE  \l  (r8 I:android.graphics.Path A[D('path' android.graphics.Path)])\l  (r7 I:android.graphics.Matrix A[D('transform' android.graphics.Matrix)])\l type: VIRTUAL call: android.graphics.Path.transform(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)] (LINE:706)\l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|RETURN\l|0x002c: RETURN    (LINE:707)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.shape.ShapePath.PathArcOperation.applyToPath((r6 'this' I:com.google.android.material.shape.ShapePath$PathArcOperation A[IMMUTABLE_TYPE, THIS]), (r7 I:android.graphics.Matrix A[D('transform' android.graphics.Matrix), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.graphics.Path A[D('path' android.graphics.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x002c: r0 'inverse' Landroid\/graphics\/Matrix;\l  \-1 \-0x002c: r7 'transform' Landroid\/graphics\/Matrix;\l  \-1 \-0x002c: r8 'path' Landroid\/graphics\/Path;\lMETHOD_OVERRIDE: [com.google.android.material.shape.ShapePath.PathOperation.applyToPath(android.graphics.Matrix, android.graphics.Path):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

