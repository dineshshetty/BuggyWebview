digraph "CFG forcom.google.android.material.ripple.RippleUtils.sanitizeRippleDrawableColor(Landroid\/content\/res\/ColorStateList;)Landroid\/content\/res\/ColorStateList;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:220)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0001|0x0001: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('rippleColor' android.content.res.ColorStateList)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x002d \l}"];
Node_20 [shape=record,label="{20\:\ 0x0003|0x0003: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:221)\l0x0005: CONST  (r2 I:??[int, float, short, byte, char]) = (22 ??[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|0x0007: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:29:0x002c \l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|0x0009: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x000b: CONST  (r2 I:??[int, float, short, byte, char]) = (27 ??[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|0x000d: IF  (r1 I:??[int, byte, short, char]) \> (r2 I:??[int, byte, short, char])  \-\> B:29:0x002c \l}"];
Node_24 [shape=record,label="{24\:\ 0x000f|0x000f: INVOKE  (r1 I:int) = (r3 I:android.content.res.ColorStateList A[D('rippleColor' android.content.res.ColorStateList)]) type: VIRTUAL call: android.content.res.ColorStateList.getDefaultColor():int A[MD:():int (c)] (LINE:223)\l0x0013: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: android.graphics.Color.alpha(int):int A[MD:(int):int (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|0x0017: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x002c \l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|0x0019: SGET  (r1 I:int[]) =  com.google.android.material.ripple.RippleUtils.ENABLED_PRESSED_STATE_SET int[] \l0x001b: INVOKE  (r0 I:int) = \l  (r3 I:android.content.res.ColorStateList A[D('rippleColor' android.content.res.ColorStateList)])\l  (r1 I:int[])\l  (r0 I:int)\l type: VIRTUAL call: android.content.res.ColorStateList.getColorForState(int[], int):int A[MD:(int[], int):int (c)] (LINE:224)\l0x001f: INVOKE  (r0 I:int) = (r0 I:int) type: STATIC call: android.graphics.Color.alpha(int):int A[MD:(int):int (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0023|0x0023: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x002c \l}"];
Node_28 [shape=record,label="{28\:\ 0x0025|0x0025: SGET  (r0 I:java.lang.String) =  com.google.android.material.ripple.RippleUtils.LOG_TAG java.lang.String  (LINE:226)\l0x0027: CONST_STR  (r1 I:java.lang.String) =  \"Use a non\-transparent color for the default color as it will be used to finish ripple animations.\" \l0x0029: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x002c|RETURN\l|0x002c: RETURN  (r3 I:android.content.res.ColorStateList A[D('rippleColor' android.content.res.ColorStateList)])  (LINE:228)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x002d|0x002d: INVOKE  (r0 I:android.content.res.ColorStateList) = (r0 I:int) type: STATIC call: android.content.res.ColorStateList.valueOf(int):android.content.res.ColorStateList A[MD:(int):android.content.res.ColorStateList (c)] (LINE:230)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0031|RETURN\l|0x0031: RETURN  (r0 I:android.content.res.ColorStateList) \l}"];
MethodNode[shape=record,label="{public static android.content.res.ColorStateList com.google.android.material.ripple.RippleUtils.sanitizeRippleDrawableColor((r3 I:android.content.res.ColorStateList A[D('rippleColor' android.content.res.ColorStateList), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0023 \-\> B:29:0x002c, CROSS_EDGE: B:25:0x0017 \-\> B:29:0x002c, CROSS_EDGE: B:23:0x000d \-\> B:29:0x002c, CROSS_EDGE: B:21:0x0007 \-\> B:29:0x002c, CROSS_EDGE: B:31:0x0031 \-\> B:17:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0031: r3 'rippleColor' Landroid\/content\/res\/ColorStateList;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_30;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_17;
Node_30 -> Node_31;
Node_31 -> Node_17;
}

