digraph "CFG forcom.google.android.material.ripple.RippleUtils.shouldDrawRippleCompat([I)Z" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|r0 = false\lr1 = false\lint r2 = r7.length\lr4 = 0\l}"];
Node_32 [shape=record,label="{32\:\ 0x0005|LOOP_START\lLOOP:0: B:32:0x0005\-\>B:45:0x0024\lPHI: r0 r1 r4 \l  PHI: (r0v1 'enabled' boolean) = (r0v0 'enabled' boolean), (r0v2 'enabled' boolean) binds: [B:31:0x0000, B:45:0x0024] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'interactedState' boolean) = (r1v0 'interactedState' boolean), (r1v5 'interactedState' boolean) binds: [B:31:0x0000, B:45:0x0024] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:31:0x0000, B:45:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \>= r2) goto L21\l}"];
Node_33 [shape=record,label="{33\:\ 0x0007|r5 = r7[r4]\l}"];
Node_34 [shape=record,label="{34\:\ 0x000c|if (r5 != 16842910) goto L8\l}"];
Node_35 [shape=record,label="{35\:\ 0x000e|r0 = true\l}"];
Node_52 [shape=record,label="{52\:\ 0x0024|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0024|LOOP_END\lLOOP:0: B:32:0x0005\-\>B:45:0x0024\lPHI: r0 r1 \l  PHI: (r0v2 'enabled' boolean) = (r0v1 'enabled' boolean), (r0v1 'enabled' boolean), (r0v1 'enabled' boolean), (r0v1 'enabled' boolean), (r0v3 'enabled' boolean) binds: [B:55:0x0024, B:51:0x0024, B:54:0x0024, B:53:0x0024, B:52:0x0024] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v5 'interactedState' boolean) = (r1v1 'interactedState' boolean), (r1v2 'interactedState' boolean), (r1v3 'interactedState' boolean), (r1v4 'interactedState' boolean), (r1v1 'interactedState' boolean) binds: [B:55:0x0024, B:51:0x0024, B:54:0x0024, B:53:0x0024, B:52:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|int r4 = r4 + 1\l}"];
Node_36 [shape=record,label="{36\:\ 0x0010}"];
Node_37 [shape=record,label="{37\:\ 0x0013|if (r5 != 16842908) goto L12\l}"];
Node_38 [shape=record,label="{38\:\ 0x0015|r1 = true\l}"];
Node_53 [shape=record,label="{53\:\ 0x0024|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0017}"];
Node_40 [shape=record,label="{40\:\ 0x001a|if (r5 != 16842919) goto L16\l}"];
Node_41 [shape=record,label="{41\:\ 0x001c|r1 = true\l}"];
Node_54 [shape=record,label="{54\:\ 0x0024|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x001e}"];
Node_43 [shape=record,label="{43\:\ 0x0021|if (r5 != 16843623) goto L20\l}"];
Node_44 [shape=record,label="{44\:\ 0x0023|r1 = true\l}"];
Node_51 [shape=record,label="{51\:\ 0x0024|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0024|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0027|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0027|if (r0 == false) goto L27\l}"];
Node_47 [shape=record,label="{47\:\ 0x0029|if (r1 == false) goto L26\l}"];
Node_48 [shape=record,label="{48\:\ 0x002b|RETURN\lORIG_RETURN\l|return true\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static boolean com.google.android.material.ripple.RippleUtils.shouldDrawRippleCompat((r7v0 'stateSet' int[] A[D('stateSet' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:45:0x0024 \-\> B:32:0x0005, CROSS_EDGE: B:38:0x0015 \-\> B:45:0x0024, CROSS_EDGE: B:41:0x001c \-\> B:45:0x0024, CROSS_EDGE: B:44:0x0023 \-\> B:45:0x0024, CROSS_EDGE: B:43:0x0021 \-\> B:45:0x0024, CROSS_EDGE: B:47:0x0029 \-\> B:49:0x002c, CROSS_EDGE: B:46:0x0027 \-\> B:49:0x002c\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_50;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_52;
Node_52 -> Node_45;
Node_45 -> Node_32;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_53;
Node_53 -> Node_45;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_54;
Node_54 -> Node_45;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_55;
Node_44 -> Node_51;
Node_51 -> Node_45;
Node_55 -> Node_45;
Node_50 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_56;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_57;
Node_48 -> Node_30;
Node_57 -> Node_30;
Node_56 -> Node_30;
}

