digraph "CFG forcom.google.android.material.sidesheet.RightSheetDelegate.calculateTargetStateOnViewReleased(Landroid\/view\/View;FF)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:75)\l0x0001: CMP_G  (r1 I:int) = (r5 I:float A[D('xVelocity' float)]), (r0 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r1 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:5:0x0007 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|RETURN\lORIG_RETURN\l|0x0005: CONST  (r0 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:76)\l0x004b: RETURN  (r0 I:int A[D('targetState' int)])  (LINE:98)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: INVOKE  (r1 I:boolean) = \l  (r3 I:com.google.android.material.sidesheet.RightSheetDelegate)\l  (r4 I:android.view.View A[D('releasedChild' android.view.View)])\l  (r5 I:float A[D('xVelocity' float)])\l type: VIRTUAL call: com.google.android.material.sidesheet.RightSheetDelegate.shouldHide(android.view.View, float):boolean A[MD:(android.view.View, float):boolean (m)] (LINE:78)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x001e \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: INVOKE  (r0 I:boolean) = \l  (r3 I:com.google.android.material.sidesheet.RightSheetDelegate)\l  (r5 I:float A[D('xVelocity' float)])\l  (r6 I:float A[D('yVelocity' float)])\l type: DIRECT call: com.google.android.material.sidesheet.RightSheetDelegate.isSwipeSignificant(float, float):boolean A[MD:(float, float):boolean (m)] (LINE:81)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: INVOKE  (r0 I:boolean) = \l  (r3 I:com.google.android.material.sidesheet.RightSheetDelegate)\l  (r4 I:android.view.View A[D('releasedChild' android.view.View)])\l type: DIRECT call: com.google.android.material.sidesheet.RightSheetDelegate.isReleasedCloseToOriginEdge(android.view.View):boolean A[MD:(android.view.View):boolean (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001a \l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|SYNTHETIC\lRETURN\l|0x001a: CONST  (r0 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:84)\l0x004b: RETURN  (r0 I:int A[D('targetState' int)]) A[SYNTHETIC] (LINE:98)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|SYNTHETIC\lRETURN\l|0x001c: CONST  (r0 I:??[int, float, short, byte, char] A[D('targetState' int)]) = (5 ??[int, float, short, byte, char])  (LINE:82)\l0x004b: RETURN  (r0 I:int A[D('targetState' int)]) A[SYNTHETIC] (LINE:98)\l}"];
Node_14 [shape=record,label="{14\:\ 0x001e|0x001e: CMP_L  (r0 I:int) = (r5 I:float A[D('xVelocity' float)]), (r0 I:float A[D('targetState' int)])  (LINE:86)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0020|0x0020: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x002b \l}"];
Node_16 [shape=record,label="{16\:\ 0x0022|0x0022: INVOKE  (r0 I:boolean) = (r5 I:float A[D('xVelocity' float)]), (r6 I:float A[D('yVelocity' float)]) type: STATIC call: com.google.android.material.sidesheet.SheetUtils.isSwipeMostlyHorizontal(float, float):boolean A[MD:(float, float):boolean (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|0x0026: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0029 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0029|SYNTHETIC\lRETURN\l|0x0029: CONST  (r0 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char])  (LINE:96)\l0x004b: RETURN  (r0 I:int A[D('targetState' int)]) A[SYNTHETIC] (LINE:98)\l}"];
Node_20 [shape=record,label="{20\:\ 0x002b|0x002b: INVOKE  (r0 I:int) = (r4 I:android.view.View A[D('releasedChild' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:89)\l0x002f: INVOKE  (r1 I:int) = (r3 I:com.google.android.material.sidesheet.RightSheetDelegate) type: VIRTUAL call: com.google.android.material.sidesheet.RightSheetDelegate.getExpandedOffset():int A[MD:():int (m)] (LINE:90)\l0x0033: ARITH  (r1 I:int) = (r0 I:int A[D('currentLeft' int)]) \- (r1 I:int) \l0x0035: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l0x0039: INVOKE  (r2 I:int) = (r3 I:com.google.android.material.sidesheet.RightSheetDelegate) type: VIRTUAL call: com.google.android.material.sidesheet.RightSheetDelegate.getHiddenOffset():int A[MD:():int (m)]\l0x003d: ARITH  (r2 I:int) = (r0 I:int A[D('currentLeft' int)]) \- (r2 I:int) \l0x003f: INVOKE  (r2 I:int) = (r2 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0043|0x0043: IF  (r1 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:23:0x0048 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0045|0x0045: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:91)\l0x0046: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('currentLeft' int)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|0x004b: RETURN  (r0 I:int A[D('targetState' int)]) A[SYNTHETIC] (LINE:98)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0048|0x0048: CONST  (r1 I:??[int, float, short, byte, char] A[D('targetState' int)]) = (5 ??[int, float, short, byte, char])  (LINE:93)\l0x0049: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('currentLeft' int)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x004b: RETURN  (r0 I:int A[D('targetState' int)]) A[SYNTHETIC] (LINE:98)\l}"];
MethodNode[shape=record,label="{int com.google.android.material.sidesheet.RightSheetDelegate.calculateTargetStateOnViewReleased((r3 'this' I:com.google.android.material.sidesheet.RightSheetDelegate A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.View A[D('releasedChild' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:float A[D('xVelocity' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[D('yVelocity' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x001a \-\> B:25:0x004b, CROSS_EDGE: B:13:0x001c \-\> B:25:0x004b, CROSS_EDGE: B:8:0x0011 \-\> B:13:0x001c, CROSS_EDGE: B:19:0x0029 \-\> B:25:0x004b, CROSS_EDGE: B:22:0x0045 \-\> B:25:0x004b, CROSS_EDGE: B:23:0x0048 \-\> B:25:0x004b, CROSS_EDGE: B:15:0x0020 \-\> B:20:0x002b\lDebug Info:\l  0x0006\-0x0007: r0 'targetState' I\l  0x001b\-0x001c: r0 'targetState' I\l  0x001d\-0x001e: r0 'targetState' I\l  0x002a\-0x002b: r0 'targetState' I\l  0x0047\-0x0048: r1 'targetState' I\l  0x002f\-0x004a: r0 'currentLeft' I\l  0x004a\-0x004b: r0 'targetState' I\l  \-1 \-0x004b: r4 'releasedChild' Landroid\/view\/View;\l  \-1 \-0x004b: r5 'xVelocity' F\l  \-1 \-0x004b: r6 'yVelocity' F\lMETHOD_OVERRIDE: [com.google.android.material.sidesheet.SheetDelegate.calculateTargetStateOnViewReleased(android.view.View, float, float):int]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_13[style=dashed];
Node_12 -> Node_1;
Node_13 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_20[style=dashed];
Node_19 -> Node_1;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_30;
Node_30 -> Node_1;
Node_23 -> Node_29;
Node_29 -> Node_1;
}

