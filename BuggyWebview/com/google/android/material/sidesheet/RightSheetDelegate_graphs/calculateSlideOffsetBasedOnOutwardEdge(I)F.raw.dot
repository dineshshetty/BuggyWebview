digraph "CFG forcom.google.android.material.sidesheet.RightSheetDelegate.calculateSlideOffsetBasedOnOutwardEdge(I)F" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r3 I:com.google.android.material.sidesheet.RightSheetDelegate) type: VIRTUAL call: com.google.android.material.sidesheet.RightSheetDelegate.getHiddenOffset():int A[MD:():int (m)] (LINE:129)\l0x0004: CAST (r0 I:float) = (float) (r0 I:int) \l0x0005: INVOKE  (r1 I:int) = (r3 I:com.google.android.material.sidesheet.RightSheetDelegate) type: VIRTUAL call: com.google.android.material.sidesheet.RightSheetDelegate.getExpandedOffset():int A[MD:():int (m)] (LINE:130)\l0x0009: CAST (r1 I:float) = (float) (r1 I:int) \l0x000a: ARITH  (r1 I:float) = (r0 I:float A[D('hiddenOffset' float)]) \- (r1 I:float) \l0x000c: CAST (r2 I:float) = (float) (r4 I:int A[D('left' int)])  (LINE:132)\l0x000d: ARITH  (r2 I:float) = (r0 I:float A[D('hiddenOffset' float)]) \- (r2 I:float) \l0x000f: ARITH  (r2 I:float) = (r2 I:float) \/ (r1 I:float A[D('sheetWidth' float)]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|RETURN\l|0x0010: RETURN  (r2 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{float com.google.android.material.sidesheet.RightSheetDelegate.calculateSlideOffsetBasedOnOutwardEdge((r3 'this' I:com.google.android.material.sidesheet.RightSheetDelegate A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  0x0005\-0x0010: r0 'hiddenOffset' F\l  0x000c\-0x0010: r1 'sheetWidth' F\l  \-1 \-0x0010: r4 'left' I\lMETHOD_OVERRIDE: [com.google.android.material.sidesheet.SheetDelegate.calculateSlideOffsetBasedOnOutwardEdge(int):float]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

