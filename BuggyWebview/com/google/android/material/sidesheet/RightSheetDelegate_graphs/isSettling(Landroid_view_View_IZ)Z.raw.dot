digraph "CFG forcom.google.android.material.sidesheet.RightSheetDelegate.isSettling(Landroid\/view\/View;IZ)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.sidesheet.SideSheetBehavior\<? extends android.view.View\>) = (r3 I:com.google.android.material.sidesheet.RightSheetDelegate) com.google.android.material.sidesheet.RightSheetDelegate.sheetBehavior com.google.android.material.sidesheet.SideSheetBehavior  (LINE:114)\l0x0002: INVOKE  (r0 I:int) = (r0 I:com.google.android.material.sidesheet.SideSheetBehavior), (r5 I:int A[D('state' int)]) type: VIRTUAL call: com.google.android.material.sidesheet.SideSheetBehavior.getOutwardEdgeOffsetForState(int):int A[MD:(int):int (m)]\l0x0006: IGET  (r1 I:com.google.android.material.sidesheet.SideSheetBehavior\<? extends android.view.View\>) = (r3 I:com.google.android.material.sidesheet.RightSheetDelegate) com.google.android.material.sidesheet.RightSheetDelegate.sheetBehavior com.google.android.material.sidesheet.SideSheetBehavior  (LINE:115)\l0x0008: INVOKE  (r1 I:androidx.customview.widget.ViewDragHelper) = (r1 I:com.google.android.material.sidesheet.SideSheetBehavior) type: VIRTUAL call: com.google.android.material.sidesheet.SideSheetBehavior.getViewDragHelper():androidx.customview.widget.ViewDragHelper A[MD:():androidx.customview.widget.ViewDragHelper (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('viewDragHelper' androidx.customview.widget.ViewDragHelper)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0027  (LINE:116)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isReleasingView' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001b \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: INVOKE  (r2 I:int) = (r4 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)] (LINE:118)\l0x0014: INVOKE  (r2 I:boolean) = \l  (r1 I:androidx.customview.widget.ViewDragHelper A[D('viewDragHelper' androidx.customview.widget.ViewDragHelper)])\l  (r0 I:int A[D('left' int)])\l  (r2 I:int)\l type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.settleCapturedViewAt(int, int):boolean A[MD:(int, int):boolean (m)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0027 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|SYNTHETIC\lRETURN\l|0x0025: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0028: RETURN  (r2 I:boolean) A[SYNTHETIC] (LINE:116)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: INVOKE  (r2 I:int) = (r4 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)] (LINE:119)\l0x001f: INVOKE  (r2 I:boolean) = \l  (r1 I:androidx.customview.widget.ViewDragHelper A[D('viewDragHelper' androidx.customview.widget.ViewDragHelper)])\l  (r4 I:android.view.View A[D('child' android.view.View)])\l  (r0 I:int A[D('left' int)])\l  (r2 I:int)\l type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.smoothSlideViewTo(android.view.View, int, int):boolean A[MD:(android.view.View, int, int):boolean (m)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0027 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|RETURN\lORIG_RETURN\l|0x0027: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0028: RETURN  (r2 I:boolean)  (LINE:116)\l}"];
MethodNode[shape=record,label="{boolean com.google.android.material.sidesheet.RightSheetDelegate.isSettling((r3 'this' I:com.google.android.material.sidesheet.RightSheetDelegate A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('state' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('isReleasingView' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0025 \-\> B:12:0x0028, CROSS_EDGE: B:9:0x0023 \-\> B:10:0x0025, CROSS_EDGE: B:9:0x0023 \-\> B:11:0x0027, CROSS_EDGE: B:3:0x000c \-\> B:11:0x0027\lDebug Info:\l  0x0006\-0x0028: r0 'left' I\l  0x000c\-0x0028: r1 'viewDragHelper' Landroidx\/customview\/widget\/ViewDragHelper;\l  \-1 \-0x0028: r4 'child' Landroid\/view\/View;\l  \-1 \-0x0028: r5 'state' I\l  \-1 \-0x0028: r6 'isReleasingView' Z\lMETHOD_OVERRIDE: [com.google.android.material.sidesheet.SheetDelegate.isSettling(android.view.View, int, boolean):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_11;
Node_6 -> Node_10[style=dashed];
Node_10 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_1;
}

