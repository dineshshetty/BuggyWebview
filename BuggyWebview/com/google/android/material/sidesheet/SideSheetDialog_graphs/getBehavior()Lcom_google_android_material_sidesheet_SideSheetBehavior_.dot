digraph "CFG forcom.google.android.material.sidesheet.SideSheetDialog.getBehavior()Lcom\/google\/android\/material\/sidesheet\/SideSheetBehavior;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|com.google.android.material.sidesheet.Sheet r0 = super.getBehavior()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if ((r0 instanceof com.google.android.material.sidesheet.SideSheetBehavior) == false) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008}"];
Node_5 [shape=record,label="{5\:\ 0x000b|RETURN\l|return (com.google.android.material.sidesheet.SideSheetBehavior) r0\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c}"];
Node_7 [shape=record,label="{7\:\ 0x0013|throw new java.lang.IllegalStateException(\"The view is not associated with SideSheetBehavior\")\l}"];
MethodNode[shape=record,label="{public com.google.android.material.sidesheet.Sheet\<com.google.android.material.sidesheet.SideSheetCallback\> com.google.android.material.sidesheet.SideSheetDialog.getBehavior((r3v0 'this' com.google.android.material.sidesheet.SideSheetDialog A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0013 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ()Lcom\/google\/android\/material\/sidesheet\/SideSheetBehavior\<+Landroid\/view\/View;\>;\lRENAME_REASON:avoid collision after fix types in other method\lBRIDGED_BY: com.google.android.material.sidesheet.SideSheetDialog.getBehavior():com.google.android.material.sidesheet.Sheet\<com.google.android.material.sidesheet.SideSheetCallback\>\lJadxCommentsAttr\{\l DEBUG: \l \-\> Return type fixed from 'com.google.android.material.sidesheet.SideSheetBehavior\<? extends android.view.View\>' to match base method\}\lMETHOD_OVERRIDE: [com.google.android.material.sidesheet.SheetDialog.getBehavior():com.google.android.material.sidesheet.Sheet\<C extends com.google.android.material.sidesheet.SheetCallback\>]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

