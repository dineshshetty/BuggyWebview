digraph "CFG forcom.google.android.material.sidesheet.SideSheetBehavior.setSheetEdge(I)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|com.google.android.material.sidesheet.SheetDelegate r0 = r3.sheetDelegate\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|if (r0 == null) goto L7\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004}"];
Node_18 [shape=record,label="{18\:\ 0x0008|if (r0.getSheetEdge() == r4) goto L5\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|if (r4 != 0) goto L10\l}"];
Node_22 [shape=record,label="{22\:\ 0x000e|r3.sheetDelegate = new com.google.android.material.sidesheet.RightSheetDelegate(r3)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|RETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Invalid sheet edge position value: \")\lr1.append(r4)\lr1.append(\". Must be \")\lr1.append(0)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0035|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.sidesheet.SideSheetBehavior.setSheetEdge((r3v0 'this' com.google.android.material.sidesheet.SideSheetBehavior\<V extends android.view.View\> A[D('this' com.google.android.material.sidesheet.SideSheetBehavior\<V extends android.view.View\>), IMMUTABLE_TYPE, THIS]), (r4v0 'sheetEdge' int A[D('sheetEdge' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0015 \-\> B:14:?, CROSS_EDGE: B:25:0x0035 \-\> B:14:?, CROSS_EDGE: B:16:0x0002 \-\> B:21:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: [V extends android.view.View]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_21[style=dashed];
Node_20 -> Node_14;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

