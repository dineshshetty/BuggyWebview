digraph "CFG forcom.google.android.material.sidesheet.SideSheetBehavior.setState(I)V" {
subgraph cluster_Region_1967870732 {
label = "R(1:(2:(3:14|17|18)|(2:5|(1:12)(1:9))))";
node [shape=record,color=blue];
subgraph cluster_Region_97329217 {
label = "R(2:(3:14|17|18)|(2:5|(1:12)(1:9)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1414847481 {
label = "IF [B:25:0x0001, B:27:0x0004] THEN: R(3:14|17|18) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0001|if (r5 == 1) goto L14\l}"];
Node_27 [shape=record,label="{27\:\ 0x0004|ADDED_TO_REGION\l|if (r5 == 2) goto L14\l}"];
subgraph cluster_Region_493655384 {
label = "R(3:14|17|18)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0028|java.lang.StringBuilder java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"STATE_\")\l}"];
Node_41 [shape=record,label="{41\:\ 0x003b|PHI: r0 \l  PHI: (r0v2 java.lang.String A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r2.append(r5 == 1 ? \"DRAGGING\" : \"SETTLING\")\lr2.append(\" should not be set externally.\")\l}"];
Node_42 [shape=record,label="{42\:\ 0x004a|throw new java.lang.IllegalArgumentException(r2.toString())\l}"];
}
}
subgraph cluster_Region_784495541 {
label = "R(2:5|(1:12)(1:9))";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0007|java.lang.ref.WeakReference\<V extends android.view.View\> java.lang.ref.WeakReference\<V\> r1 = r4.viewRef\l}"];
subgraph cluster_IfRegion_459772824 {
label = "IF [B:30:0x000a, B:32:0x0010] THEN: R(1:12) ELSE: R(1:9)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x000a|if (r1 == null) goto L12\l}"];
Node_32 [shape=record,label="{32\:\ 0x0010|ADDED_TO_REGION\l|if (r1.get() == null) goto L12\l}"];
subgraph cluster_Region_1454772072 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0024|setStateInternal(r5)\l}"];
}
subgraph cluster_Region_2043340161 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0013|runAfterLayout(r4.viewRef.get(), new com.google.android.material.sidesheet.SideSheetBehavior$$ExternalSyntheticLambda1())\l}"];
}
}
}
}
}
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0000}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0003}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x000c}"];
Node_43 [shape=record,color=red,label="{43\:\ ?|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0027|ORIG_RETURN\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0034}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0036}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0039}"];
MethodNode[shape=record,label="{public void com.google.android.material.sidesheet.SideSheetBehavior.setState((r4v0 'this' com.google.android.material.sidesheet.SideSheetBehavior\<V extends android.view.View\> A[D('this' com.google.android.material.sidesheet.SideSheetBehavior\<V extends android.view.View\>), IMMUTABLE_TYPE, THIS]), (r5v0 'state' int A[D('state' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0024 \-\> B:36:0x0027, CROSS_EDGE: B:30:0x000a \-\> B:35:0x0024, CROSS_EDGE: B:42:0x004a \-\> B:23:?, CROSS_EDGE: B:40:0x0039 \-\> B:41:0x003b, CROSS_EDGE: B:25:0x0001 \-\> B:37:0x0028\lINLINE_NOT_NEEDED\lTYPE_VARS: [V extends android.view.View]\lMETHOD_OVERRIDE: [com.google.android.material.sidesheet.Sheet.setState(int):void]\l}"];
MethodNode -> Node_22;Node_25 -> Node_26[style=dashed];
Node_25 -> Node_37;
Node_27 -> Node_29[style=dashed];
Node_27 -> Node_37;
Node_37 -> Node_38;
Node_41 -> Node_42;
Node_42 -> Node_23;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_35;
Node_32 -> Node_34[style=dashed];
Node_32 -> Node_35;
Node_35 -> Node_36;
Node_34 -> Node_43;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_31 -> Node_32;
Node_43 -> Node_23;
Node_36 -> Node_23;
Node_38 -> Node_39;
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_40 -> Node_41;
}

