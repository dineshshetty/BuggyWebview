digraph "CFG forcom.google.android.material.sidesheet.SideSheetBehavior.setCoplanarSiblingView(Landroid\/view\/View;)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|r2.coplanarSiblingViewId = \-1\l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|if (r3 != null) goto L6\l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|clearCoplanarSiblingView()\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|r2.coplanarSiblingViewRef = new java.lang.ref.WeakReference\<\>(r3)\ljava.lang.ref.WeakReference\<V extends android.view.View\> r0 = r2.viewRef\l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|if (r0 == null) goto L13\l}"];
Node_21 [shape=record,label="{21\:\ 0x0014|android.view.View r0 = r0.get()\l}"];
Node_22 [shape=record,label="{22\:\ 0x001e|if (androidx.core.view.ViewCompat.isLaidOut(r0) == false) goto L12\l}"];
Node_23 [shape=record,label="{23\:\ 0x0020|r0.requestLayout()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0023|RETURN\lORIG_RETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.sidesheet.SideSheetBehavior.setCoplanarSiblingView((r2v0 'this' com.google.android.material.sidesheet.SideSheetBehavior\<V extends android.view.View\> A[D('this' com.google.android.material.sidesheet.SideSheetBehavior\<V extends android.view.View\>), IMMUTABLE_TYPE, THIS]), (r3v0 'coplanarSiblingView' android.view.View A[D('coplanarSiblingView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0020 \-\> B:24:0x0023, CROSS_EDGE: B:22:0x001e \-\> B:24:0x0023, CROSS_EDGE: B:20:0x0012 \-\> B:24:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: [V extends android.view.View]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_25;
Node_25 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_15;
Node_27 -> Node_15;
Node_26 -> Node_15;
}

