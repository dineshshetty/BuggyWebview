digraph "CFG forcom.google.android.material.sidesheet.SideSheetBehavior.isDraggedFarEnough(Landroid\/view\/MotionEvent;)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = \l  (r3 I:com.google.android.material.sidesheet.SideSheetBehavior A[D('this' com.google.android.material.sidesheet.SideSheetBehavior\<V extends android.view.View\>)])\l type: DIRECT call: com.google.android.material.sidesheet.SideSheetBehavior.shouldHandleDraggingWithHelper():boolean A[MD:():boolean (m)] (LINE:457)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0008 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:boolean)  (LINE:458)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|0x0008: IGET  (r0 I:int) = \l  (r3 I:com.google.android.material.sidesheet.SideSheetBehavior A[D('this' com.google.android.material.sidesheet.SideSheetBehavior\<V extends android.view.View\>)])\l com.google.android.material.sidesheet.SideSheetBehavior.initialX int  (LINE:460)\l0x000a: CAST (r0 I:float) = (float) (r0 I:int) \l0x000b: INVOKE  (r2 I:float) = (r4 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getX():float A[MD:():float (c)]\l0x000f: INVOKE  (r0 I:float) = \l  (r3 I:com.google.android.material.sidesheet.SideSheetBehavior A[D('this' com.google.android.material.sidesheet.SideSheetBehavior\<V extends android.view.View\>)])\l  (r0 I:float)\l  (r2 I:float)\l type: DIRECT call: com.google.android.material.sidesheet.SideSheetBehavior.calculateDragDistance(float, float):float A[MD:(float, float):float (m)]\l0x0013: IGET  (r2 I:androidx.customview.widget.ViewDragHelper) = \l  (r3 I:com.google.android.material.sidesheet.SideSheetBehavior A[D('this' com.google.android.material.sidesheet.SideSheetBehavior\<V extends android.view.View\>)])\l com.google.android.material.sidesheet.SideSheetBehavior.viewDragHelper androidx.customview.widget.ViewDragHelper  (LINE:461)\l0x0015: INVOKE  (r2 I:int) = (r2 I:androidx.customview.widget.ViewDragHelper) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.getTouchSlop():int A[MD:():int (m)]\l0x0019: CAST (r2 I:float) = (float) (r2 I:int) \l0x001a: CMP_L  (r2 I:int) = (r0 I:float A[D('distanceDragged' float)]), (r2 I:float) \l}"];
Node_16 [shape=record,label="{16\:\ 0x001c|0x001c: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:19:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x001e|RETURN\lORIG_RETURN\l|0x001e: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001f: RETURN  (r1 I:boolean) \l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x001f: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.material.sidesheet.SideSheetBehavior.isDraggedFarEnough((r3 'this' I:com.google.android.material.sidesheet.SideSheetBehavior\<V extends android.view.View\> A[D('this' com.google.android.material.sidesheet.SideSheetBehavior\<V extends android.view.View\>), IMMUTABLE_TYPE, THIS]), (r4 I:android.view.MotionEvent A[D('event' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x001f \-\> B:11:?, CROSS_EDGE: B:16:0x001c \-\> B:18:0x001f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x001f: r0 'distanceDragged' F\l  0x0000\-0x001f: r3 'this' Lcom\/google\/android\/material\/sidesheet\/SideSheetBehavior;, signature: Lcom\/google\/android\/material\/sidesheet\/SideSheetBehavior\<TV;\>;\l  \-1 \-0x001f: r4 'event' Landroid\/view\/MotionEvent;\lTYPE_VARS: [V extends android.view.View]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_11;
Node_19 -> Node_11;
}

