digraph "CFG forcom.google.android.material.sidesheet.SideSheetBehavior.maybeAssignCoplanarSiblingViewBasedId(Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0002|if (r2.coplanarSiblingViewRef != null) goto L12\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|int r0 = r2.coplanarSiblingViewId\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|if (r0 == (\-1)) goto L11\l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|android.view.View r0 = r3.findViewById(r0)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000d|if (r0 == null) goto L10\l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|r2.coplanarSiblingViewRef = new java.lang.ref.WeakReference\<\>(r0)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|RETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.sidesheet.SideSheetBehavior.maybeAssignCoplanarSiblingViewBasedId((r2v0 'this' com.google.android.material.sidesheet.SideSheetBehavior\<V extends android.view.View\> A[D('this' com.google.android.material.sidesheet.SideSheetBehavior\<V extends android.view.View\>), IMMUTABLE_TYPE, THIS]), (r3v0 'parent' androidx.coordinatorlayout.widget.CoordinatorLayout A[D('parent' androidx.coordinatorlayout.widget.CoordinatorLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x000d \-\> B:22:0x0016, CROSS_EDGE: B:18:0x0007 \-\> B:22:0x0016, CROSS_EDGE: B:16:0x0002 \-\> B:22:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: [V extends android.view.View]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_14;
Node_23 -> Node_14;
}

