digraph "CFG forcom.google.android.material.sidesheet.SheetDialog.ensureContainerAndBehavior()V" {
subgraph cluster_Region_1480306130 {
label = "R(1:(1:(1:3)))";
node [shape=record,color=blue];
subgraph cluster_Region_1508933228 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1788233876 {
label = "IF [B:10:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0002|if (r3.container == null) goto L3\l}"];
subgraph cluster_Region_932774904 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0004|android.widget.FrameLayout android.widget.FrameLayout r0 = (android.widget.FrameLayout) android.view.View.inflate(getContext(), getLayoutResId(), null)\lr3.container = r0\landroid.widget.FrameLayout android.widget.FrameLayout r0 = (android.widget.FrameLayout) r0.findViewById(getDialogId())\lr3.sheet = r0\lcom.google.android.material.sidesheet.Sheet com.google.android.material.sidesheet.Sheet\<C\> r0 = getBehaviorFromSheet(r0)\lr3.behavior = r0\laddSheetCancelOnHideCallback(r0)\l}"];
}
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0000}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x002a|ORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.sidesheet.SheetDialog.ensureContainerAndBehavior((r3v0 'this' com.google.android.material.sidesheet.SheetDialog\<C extends com.google.android.material.sidesheet.SheetCallback\> A[D('this' com.google.android.material.sidesheet.SheetDialog\<C extends com.google.android.material.sidesheet.SheetCallback\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0002 \-\> B:12:0x002a\lINLINE_NOT_NEEDED\lTYPE_VARS: [C extends com.google.android.material.sidesheet.SheetCallback]\l}"];
MethodNode -> Node_7;Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

