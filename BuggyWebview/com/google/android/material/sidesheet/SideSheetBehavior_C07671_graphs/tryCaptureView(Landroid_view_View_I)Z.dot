digraph "CFG forcom.google.android.material.sidesheet.SideSheetBehavior.1.tryCaptureView(Landroid\/view\/View;I)Z" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0008|if (com.google.android.material.sidesheet.SideSheetBehavior.this.state != 1) goto L5\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|RETURN\l|return false\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b}"];
Node_19 [shape=record,label="{19\:\ 0x0011|if (com.google.android.material.sidesheet.SideSheetBehavior.this.viewRef == null) goto L11\l}"];
Node_20 [shape=record,label="{20\:\ 0x0013}"];
Node_21 [shape=record,label="{21\:\ 0x001d|if (com.google.android.material.sidesheet.SideSheetBehavior.this.viewRef.get() != r4) goto L10\l}"];
Node_22 [shape=record,label="{22\:\ 0x001f|RETURN\lORIG_RETURN\l|return true\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.sidesheet.SideSheetBehavior.1.tryCaptureView((r3v0 'this' com.google.android.material.sidesheet.SideSheetBehavior$1 A[D('this' com.google.android.material.sidesheet.SideSheetBehavior$1), IMMUTABLE_TYPE, THIS]), (r4v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'pointerId' int A[D('pointerId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0020 \-\> B:14:?, CROSS_EDGE: B:21:0x001d \-\> B:23:0x0020, CROSS_EDGE: B:19:0x0011 \-\> B:23:0x0020\lINLINE_NOT_NEEDED\lTYPE_VARS: [V extends android.view.View]\lMETHOD_OVERRIDE: [androidx.customview.widget.ViewDragHelper.Callback.tryCaptureView(android.view.View, int):boolean]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_14;
}

