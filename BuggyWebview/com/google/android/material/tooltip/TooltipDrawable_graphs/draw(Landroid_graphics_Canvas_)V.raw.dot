digraph "CFG forcom.google.android.material.tooltip.TooltipDrawable.draw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:411)\l0x0003: INVOKE  (r0 I:float) = (r8 I:com.google.android.material.tooltip.TooltipDrawable) type: DIRECT call: com.google.android.material.tooltip.TooltipDrawable.calculatePointerOffset():float A[MD:():float (m)] (LINE:415)\l0x0007: IGET  (r1 I:int) = (r8 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.arrowSize int  (LINE:419)\l0x0009: CAST (r1 I:double) = (double) (r1 I:int) \l0x000a: CONST  (r3 I:??[long, double]) = (4611686018427387904(0x4000000000000000, double:2.0) ??[long, double]) \l0x000c: INVOKE  (r3 I:double) = (r3 I:double) type: STATIC call: java.lang.Math.sqrt(double):double A[MD:(double):double (c)]\l0x0010: ARITH  (r1 I:double) = (r1 I:double) * (r3 I:double) \l0x0012: IGET  (r3 I:int) = (r8 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.arrowSize int \l0x0014: CAST (r3 I:double) = (double) (r3 I:int) \l0x0015: ARITH  (r1 I:double) = (r1 I:double) \- (r3 I:double) \l0x0016: NEG  (r1 I:double) = (r1 I:double) \l0x0017: CAST (r1 I:float) = (float) (r1 I:double) \l0x0018: IGET  (r2 I:float) = (r8 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.tooltipScaleX float  (LINE:423)\l0x001a: IGET  (r3 I:float) = (r8 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.tooltipScaleY float \l0x001c: INVOKE  (r4 I:android.graphics.Rect) = (r8 I:com.google.android.material.tooltip.TooltipDrawable) type: VIRTUAL call: com.google.android.material.tooltip.TooltipDrawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (s)] (LINE:426)\l0x0020: IGET  (r4 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0022: CAST (r4 I:float) = (float) (r4 I:int) \l0x0023: INVOKE  (r5 I:android.graphics.Rect) = (r8 I:com.google.android.material.tooltip.TooltipDrawable) type: VIRTUAL call: com.google.android.material.tooltip.TooltipDrawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (s)]\l0x0027: INVOKE  (r5 I:int) = (r5 I:android.graphics.Rect) type: VIRTUAL call: android.graphics.Rect.width():int A[MD:():int (c)]\l0x002b: CAST (r5 I:float) = (float) (r5 I:int) \l0x002c: CONST  (r6 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char]) \l0x002e: ARITH  (r5 I:float) = (r5 I:float) * (r6 I:float) \l0x0030: ARITH  (r4 I:float) = (r4 I:float) + (r5 I:float) \l0x0031: INVOKE  (r5 I:android.graphics.Rect) = (r8 I:com.google.android.material.tooltip.TooltipDrawable) type: VIRTUAL call: com.google.android.material.tooltip.TooltipDrawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (s)] (LINE:427)\l0x0035: IGET  (r5 I:int) = (r5 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0037: CAST (r5 I:float) = (float) (r5 I:int) \l0x0038: INVOKE  (r6 I:android.graphics.Rect) = (r8 I:com.google.android.material.tooltip.TooltipDrawable) type: VIRTUAL call: com.google.android.material.tooltip.TooltipDrawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (s)]\l0x003c: INVOKE  (r6 I:int) = (r6 I:android.graphics.Rect) type: VIRTUAL call: android.graphics.Rect.height():int A[MD:():int (c)]\l0x0040: CAST (r6 I:float) = (float) (r6 I:int) \l0x0041: IGET  (r7 I:float) = (r8 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.tooltipPivotY float \l0x0043: ARITH  (r6 I:float) = (r6 I:float) * (r7 I:float) \l0x0045: ARITH  (r5 I:float) = (r5 I:float) + (r6 I:float) \l0x0046: INVOKE  \l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r2 I:float)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:float)\l type: VIRTUAL call: android.graphics.Canvas.scale(float, float, float, float):void A[MD:(float, float, float, float):void (c)] (LINE:423)\l0x0049: INVOKE  \l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:float A[D('translateX' float)])\l  (r1 I:float A[D('translateY' float)])\l type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)] (LINE:429)\l0x004c: INVOKE  \l  (r8 I:com.google.android.material.shape.MaterialShapeDrawable)\l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: SUPER call: com.google.android.material.shape.MaterialShapeDrawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (m)] (LINE:432)\l0x004f: INVOKE  \l  (r8 I:com.google.android.material.tooltip.TooltipDrawable)\l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: DIRECT call: com.google.android.material.tooltip.TooltipDrawable.drawText(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (m)] (LINE:435)\l0x0052: INVOKE  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.restore():void A[MD:():void (c)] (LINE:437)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0055|RETURN\l|0x0055: RETURN    (LINE:438)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.tooltip.TooltipDrawable.draw((r8 'this' I:com.google.android.material.tooltip.TooltipDrawable A[IMMUTABLE_TYPE, THIS]), (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lDebug Info:\l  0x0007\-0x0055: r0 'translateX' F\l  0x0018\-0x0055: r1 'translateY' F\l  \-1 \-0x0055: r9 'canvas' Landroid\/graphics\/Canvas;\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

