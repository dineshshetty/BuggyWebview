digraph "CFG forcom.google.android.material.tooltip.TooltipDrawable.drawText(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.CharSequence) = (r11 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.text java.lang.CharSequence  (LINE:488)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0005 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|RETURN\l|0x0004: RETURN    (LINE:490)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|0x0005: INVOKE  (r0 I:android.graphics.Rect) = (r11 I:com.google.android.material.tooltip.TooltipDrawable) type: VIRTUAL call: com.google.android.material.tooltip.TooltipDrawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (s)] (LINE:493)\l0x0009: INVOKE  (r1 I:float) = \l  (r11 I:com.google.android.material.tooltip.TooltipDrawable)\l  (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l type: DIRECT call: com.google.android.material.tooltip.TooltipDrawable.calculateTextOriginAndAlignment(android.graphics.Rect):float A[MD:(android.graphics.Rect):float (m)] (LINE:494)\l0x000d: CAST (r1 I:int) = (int) (r1 I:float) \l0x000e: IGET  (r2 I:com.google.android.material.internal.TextDrawableHelper) = (r11 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.textDrawableHelper com.google.android.material.internal.TextDrawableHelper  (LINE:496)\l0x0010: INVOKE  (r2 I:com.google.android.material.resources.TextAppearance) = (r2 I:com.google.android.material.internal.TextDrawableHelper) type: VIRTUAL call: com.google.android.material.internal.TextDrawableHelper.getTextAppearance():com.google.android.material.resources.TextAppearance A[MD:():com.google.android.material.resources.TextAppearance (m)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0039 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IGET  (r2 I:com.google.android.material.internal.TextDrawableHelper) = (r11 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.textDrawableHelper com.google.android.material.internal.TextDrawableHelper  (LINE:497)\l0x0018: INVOKE  (r2 I:android.text.TextPaint) = (r2 I:com.google.android.material.internal.TextDrawableHelper) type: VIRTUAL call: com.google.android.material.internal.TextDrawableHelper.getTextPaint():android.text.TextPaint A[MD:():android.text.TextPaint (m)]\l0x001c: INVOKE  (r3 I:int[]) = (r11 I:com.google.android.material.tooltip.TooltipDrawable) type: VIRTUAL call: com.google.android.material.tooltip.TooltipDrawable.getState():int[] A[MD:():int[] (m)]\l0x0020: IPUT  (r3 I:int[]), (r2 I:android.text.TextPaint) android.text.TextPaint.drawableState int[] \l0x0022: IGET  (r2 I:com.google.android.material.internal.TextDrawableHelper) = (r11 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.textDrawableHelper com.google.android.material.internal.TextDrawableHelper  (LINE:498)\l0x0024: IGET  (r3 I:android.content.Context) = (r11 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.context android.content.Context \l0x0026: INVOKE  (r2 I:com.google.android.material.internal.TextDrawableHelper), (r3 I:android.content.Context) type: VIRTUAL call: com.google.android.material.internal.TextDrawableHelper.updateTextPaintDrawState(android.content.Context):void A[MD:(android.content.Context):void (m)]\l0x0029: IGET  (r2 I:com.google.android.material.internal.TextDrawableHelper) = (r11 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.textDrawableHelper com.google.android.material.internal.TextDrawableHelper  (LINE:499)\l0x002b: INVOKE  (r2 I:android.text.TextPaint) = (r2 I:com.google.android.material.internal.TextDrawableHelper) type: VIRTUAL call: com.google.android.material.internal.TextDrawableHelper.getTextPaint():android.text.TextPaint A[MD:():android.text.TextPaint (m)]\l0x002f: IGET  (r3 I:float) = (r11 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.labelOpacity float \l0x0031: CONST  (r4 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char]) \l0x0033: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x0035: CAST (r3 I:int) = (int) (r3 I:float) \l0x0036: INVOKE  (r2 I:android.text.TextPaint), (r3 I:int) type: VIRTUAL call: android.text.TextPaint.setAlpha(int):void A[MD:(int):void (c)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: IGET  (r5 I:java.lang.CharSequence) = (r11 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.text java.lang.CharSequence  (LINE:502)\l0x003b: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x003c: INVOKE  (r7 I:int) = (r5 I:java.lang.CharSequence) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x0040: INVOKE  (r2 I:int) = (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.centerX():int A[MD:():int (c)]\l0x0044: CAST (r8 I:float) = (float) (r2 I:int) \l0x0045: CAST (r9 I:float) = (float) (r1 I:int A[D('y' int)]) \l0x0046: IGET  (r2 I:com.google.android.material.internal.TextDrawableHelper) = (r11 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.textDrawableHelper com.google.android.material.internal.TextDrawableHelper \l0x0048: INVOKE  (r10 I:android.text.TextPaint) = (r2 I:com.google.android.material.internal.TextDrawableHelper) type: VIRTUAL call: com.google.android.material.internal.TextDrawableHelper.getTextPaint():android.text.TextPaint A[MD:():android.text.TextPaint (m)]\l0x004c: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x004d: INVOKE  \l  (r4 I:android.graphics.Canvas)\l  (r5 I:java.lang.CharSequence)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:float)\l  (r9 I:float)\l  (r10 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawText(java.lang.CharSequence, int, int, float, float, android.graphics.Paint):void A[MD:(java.lang.CharSequence, int, int, float, float, android.graphics.Paint):void (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0050|RETURN\l|0x0050: RETURN    (LINE:503)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.tooltip.TooltipDrawable.drawText((r11 'this' I:com.google.android.material.tooltip.TooltipDrawable A[IMMUTABLE_TYPE, THIS]), (r12 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0050 \-\> B:1:?, CROSS_EDGE: B:6:0x0014 \-\> B:8:0x0039\lDebug Info:\l  0x0009\-0x0050: r0 'bounds' Landroid\/graphics\/Rect;\l  0x000e\-0x0050: r1 'y' I\l  \-1 \-0x0050: r12 'canvas' Landroid\/graphics\/Canvas;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

