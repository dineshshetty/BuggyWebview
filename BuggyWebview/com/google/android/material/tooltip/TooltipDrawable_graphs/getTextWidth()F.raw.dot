digraph "CFG forcom.google.android.material.tooltip.TooltipDrawable.getTextWidth()F" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.CharSequence) = (r2 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.text java.lang.CharSequence  (LINE:506)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0006 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|RETURN\l|0x0004: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:507)\l0x0005: RETURN  (r0 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0006|0x0006: IGET  (r1 I:com.google.android.material.internal.TextDrawableHelper) = (r2 I:com.google.android.material.tooltip.TooltipDrawable) com.google.android.material.tooltip.TooltipDrawable.textDrawableHelper com.google.android.material.internal.TextDrawableHelper  (LINE:509)\l0x0008: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.CharSequence) type: INTERFACE call: java.lang.CharSequence.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x000c: INVOKE  (r0 I:float) = (r1 I:com.google.android.material.internal.TextDrawableHelper), (r0 I:java.lang.String) type: VIRTUAL call: com.google.android.material.internal.TextDrawableHelper.getTextWidth(java.lang.String):float A[MD:(java.lang.String):float (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:float) \l}"];
MethodNode[shape=record,label="{private float com.google.android.material.tooltip.TooltipDrawable.getTextWidth((r2 'this' I:com.google.android.material.tooltip.TooltipDrawable A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0010 \-\> B:1:?\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

