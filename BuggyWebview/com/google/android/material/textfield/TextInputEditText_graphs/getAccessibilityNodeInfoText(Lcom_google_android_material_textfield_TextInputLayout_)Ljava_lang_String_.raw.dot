digraph "CFG forcom.google.android.material.textfield.TextInputEditText.getAccessibilityNodeInfoText(Lcom\/google\/android\/material\/textfield\/TextInputLayout;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:android.text.Editable) = (r8 I:com.google.android.material.textfield.TextInputEditText) type: VIRTUAL call: com.google.android.material.textfield.TextInputEditText.getText():android.text.Editable A[MD:():android.text.Editable (m)] (LINE:207)\l0x0004: INVOKE  (r1 I:java.lang.CharSequence) = \l  (r9 I:com.google.android.material.textfield.TextInputLayout A[D('layout' com.google.android.material.textfield.TextInputLayout)])\l type: VIRTUAL call: com.google.android.material.textfield.TextInputLayout.getHint():java.lang.CharSequence A[MD:():java.lang.CharSequence (m)] (LINE:208)\l0x0008: INVOKE  (r2 I:boolean) = (r0 I:java.lang.CharSequence A[D('inputText' java.lang.CharSequence)]) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)] (LINE:209)\l0x000c: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) ^ (1 ??[boolean, int, float, short, byte, char]) \l0x000e: INVOKE  (r3 I:boolean) = (r1 I:java.lang.CharSequence A[D('hintText' java.lang.CharSequence)]) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)] (LINE:210)\l0x0012: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) ^ (1 ??[boolean, int, float, short, byte, char]) \l0x0014: CONST_STR  (r4 I:java.lang.String) =  \"\"  (LINE:212)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasHint' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: INVOKE  (r5 I:java.lang.String) = (r1 I:java.lang.CharSequence A[D('hintText' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('showingText' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0047  (LINE:214)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:215)\l0x0022: INVOKE  (r6 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0025: INVOKE  (r6 I:java.lang.StringBuilder), (r0 I:java.lang.Object A[D('inputText' java.lang.CharSequence)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0028: INVOKE  (r7 I:boolean) = (r5 I:java.lang.CharSequence A[D('hint' java.lang.String)]) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|0x002c: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003f \l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|0x002e: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0030: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0033: CONST_STR  (r7 I:java.lang.String) =  \", \" \l0x0035: INVOKE  (r4 I:java.lang.StringBuilder), (r7 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0038: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String A[D('hint' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003b: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|0x003f: INVOKE  (r6 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0042: INVOKE  (r4 I:java.lang.String) = (r6 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0046|RETURN\l|0x0046: RETURN  (r4 I:java.lang.String) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0047|0x0047: INVOKE  (r6 I:boolean) = (r5 I:java.lang.CharSequence A[D('hint' java.lang.String)]) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)] (LINE:216)\l}"];
Node_13 [shape=record,label="{13\:\ 0x004b|0x004b: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004e \l}"];
Node_14 [shape=record,label="{14\:\ 0x004d|RETURN\l|0x004d: RETURN  (r5 I:java.lang.String A[D('hint' java.lang.String)])  (LINE:217)\l}"];
Node_15 [shape=record,label="{15\:\ 0x004e|RETURN\l|0x004e: RETURN  (r4 I:java.lang.String)  (LINE:219)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private java.lang.String com.google.android.material.textfield.TextInputEditText.getAccessibilityNodeInfoText((r8 'this' I:com.google.android.material.textfield.TextInputEditText A[IMMUTABLE_TYPE, THIS]), (r9 I:com.google.android.material.textfield.TextInputLayout A[D('layout' com.google.android.material.textfield.TextInputLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x002c \-\> B:10:0x003f, CROSS_EDGE: B:14:0x004d \-\> B:1:?, CROSS_EDGE: B:15:0x004e \-\> B:1:?, CROSS_EDGE: B:5:0x001d \-\> B:6:0x001e\lDebug Info:\l  0x0004\-0x004e: r0 'inputText' Ljava\/lang\/CharSequence;\l  0x0008\-0x004e: r1 'hintText' Ljava\/lang\/CharSequence;\l  0x000e\-0x004e: r2 'showingText' Z\l  0x0014\-0x004e: r3 'hasHint' Z\l  0x001e\-0x004e: r5 'hint' Ljava\/lang\/String;\l  \-1 \-0x004e: r9 'layout' Lcom\/google\/android\/material\/textfield\/TextInputLayout;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_1;
Node_15 -> Node_1;
Node_5 -> Node_6;
}

