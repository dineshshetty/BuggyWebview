digraph "CFG forcom.google.android.material.textfield.TextInputLayout.updateStrokeErrorColor(ZZ)V" {
subgraph cluster_Region_976827060 {
label = "R(2:1|(1:3)(1:(1:7)(1:9)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0000|int int r0 = r4.strokeErrorColor.getDefaultColor()\lint int r1 = r4.strokeErrorColor.getColorForState(new int[]\{16843623, 16842910\}, r0)\lint int r2 = r4.strokeErrorColor.getColorForState(new int[]\{16843518, 16842910\}, r0)\l}"];
subgraph cluster_IfRegion_25590115 {
label = "IF [B:14:0x001d] THEN: R(1:3) ELSE: R(1:(1:7)(1:9))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x001d|if (r5 != false) goto L3\l}"];
subgraph cluster_Region_934673325 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x001f|r4.boxStrokeColor = r2\l}"];
}
subgraph cluster_Region_2132424011 {
label = "R(1:(1:7)(1:9)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_673976785 {
label = "IF [B:16:0x0022] THEN: R(1:7) ELSE: R(1:9) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0022|if (r6 != false) goto L7\l}"];
subgraph cluster_Region_1594571994 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0024|r4.boxStrokeColor = r1\l}"];
}
subgraph cluster_Region_1667944942 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0027|r4.boxStrokeColor = r0\l}"];
}
}
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0029|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.textfield.TextInputLayout.updateStrokeErrorColor((r4v0 'this' com.google.android.material.textfield.TextInputLayout A[IMMUTABLE_TYPE, THIS]), (r5v0 'hasFocus' boolean A[D('hasFocus' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'isHovered' boolean A[D('isHovered' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0024 \-\> B:19:0x0029, CROSS_EDGE: B:18:0x0027 \-\> B:19:0x0029\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_11 -> Node_13;
Node_20 -> Node_12;
Node_21 -> Node_12;
Node_19 -> Node_12;
}

