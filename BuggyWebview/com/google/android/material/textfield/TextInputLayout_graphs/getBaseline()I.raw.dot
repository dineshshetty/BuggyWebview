digraph "CFG forcom.google.android.material.textfield.TextInputLayout.getBaseline()I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:android.widget.EditText) = (r2 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.editText android.widget.EditText  (LINE:1583)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0013 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: INVOKE  (r0 I:int) = (r0 I:android.widget.EditText) type: VIRTUAL call: android.widget.EditText.getBaseline():int A[MD:():int (c)] (LINE:1584)\l0x0008: INVOKE  (r1 I:int) = (r2 I:com.google.android.material.textfield.TextInputLayout) type: VIRTUAL call: com.google.android.material.textfield.TextInputLayout.getPaddingTop():int A[MD:():int (s)]\l0x000c: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x000d: INVOKE  (r1 I:int) = (r2 I:com.google.android.material.textfield.TextInputLayout) type: DIRECT call: com.google.android.material.textfield.TextInputLayout.calculateLabelMarginTop():int A[MD:():int (m)]\l0x0011: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0012|RETURN\l|0x0012: RETURN  (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0013|0x0013: INVOKE  (r0 I:int) = (r2 I:android.widget.LinearLayout) type: SUPER call: android.widget.LinearLayout.getBaseline():int A[MD:():int (c)] (LINE:1586)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int com.google.android.material.textfield.TextInputLayout.getBaseline((r2 'this' I:com.google.android.material.textfield.TextInputLayout A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0017 \-\> B:9:?\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.getBaseline():int\}]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

