digraph "CFG forcom.google.android.material.textfield.TextInputLayout.recalculateCutout()V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r1 I:com.google.android.material.textfield.TextInputLayout) type: DIRECT call: com.google.android.material.textfield.TextInputLayout.cutoutEnabled():boolean A[MD:():boolean (m)] (LINE:4170)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:? \l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: IGET  (r0 I:boolean) = (r1 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.hintExpanded boolean \l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:? \l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|0x000a: INVOKE  (r1 I:com.google.android.material.textfield.TextInputLayout) type: DIRECT call: com.google.android.material.textfield.TextInputLayout.closeCutout():void A[MD:():void (m)] (LINE:4171)\l0x000d: INVOKE  (r1 I:com.google.android.material.textfield.TextInputLayout) type: DIRECT call: com.google.android.material.textfield.TextInputLayout.openCutout():void A[MD:():void (m)] (LINE:4172)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0010|RETURN\lORIG_RETURN\l|0x0010: RETURN    (LINE:4174)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0010: RETURN   A[SYNTHETIC] (LINE:4174)\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|0x0010: RETURN   A[SYNTHETIC] (LINE:4174)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.textfield.TextInputLayout.recalculateCutout((r1 'this' I:com.google.android.material.textfield.TextInputLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0008 \-\> B:17:0x0010, CROSS_EDGE: B:13:0x0004 \-\> B:17:0x0010\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

