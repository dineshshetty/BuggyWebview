digraph "CFG forcom.google.android.material.textfield.TextInputLayout.dispatchProvideAutofillStructure(Landroid\/view\/ViewStructure;I)V" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|0x0000: IGET  (r0 I:android.widget.EditText) = (r4 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.editText android.widget.EditText  (LINE:1429)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0008 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0004|0x0004: INVOKE  \l  (r4 I:android.widget.LinearLayout)\l  (r5 I:android.view.ViewStructure A[D('structure' android.view.ViewStructure)])\l  (r6 I:int A[D('flags' int)])\l type: SUPER call: android.widget.LinearLayout.dispatchProvideAutofillStructure(android.view.ViewStructure, int):void A[MD:(android.view.ViewStructure, int):void (c)] (LINE:1430)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0007|RETURN\l|0x0007: RETURN    (LINE:1431)\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0008|0x0008: IGET  (r1 I:java.lang.CharSequence) = (r4 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.originalHint java.lang.CharSequence  (LINE:1434)\l}"];
Node_35 [shape=record,label="{35\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0031 \l}"];
Node_36 [shape=record,label="{36\:\ 0x000c|0x000c: IGET  (r1 I:boolean) = (r4 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.isProvidingHint boolean  (LINE:1437)\l0x000e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1439)\l0x000f: IPUT  (r2 I:boolean), (r4 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.isProvidingHint boolean \l0x0011: INVOKE  (r0 I:java.lang.CharSequence) = (r0 I:android.widget.EditText) type: VIRTUAL call: android.widget.EditText.getHint():java.lang.CharSequence A[MD:():java.lang.CharSequence (c)] (LINE:1440)\l0x0015: IGET  (r2 I:android.widget.EditText) = (r4 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.editText android.widget.EditText  (LINE:1441)\l0x0017: IGET  (r3 I:java.lang.CharSequence) = (r4 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.originalHint java.lang.CharSequence \l0x0019: INVOKE  (r2 I:android.widget.EditText), (r3 I:java.lang.CharSequence) type: VIRTUAL call: android.widget.EditText.setHint(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (c)]\l}"];
Node_50 [shape=record,label="{50\:\ 0x001c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_37 [shape=record,label="{37\:\ 0x001c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0028, blocks: (B:37:0x001c), top: B:50:0x001c \}\lCatch: all \-\> 0x0028\l|0x001c: INVOKE  \l  (r4 I:android.widget.LinearLayout)\l  (r5 I:android.view.ViewStructure A[D('structure' android.view.ViewStructure)])\l  (r6 I:int A[D('flags' int)])\l type: SUPER call: android.widget.LinearLayout.dispatchProvideAutofillStructure(android.view.ViewStructure, int):void A[Catch: all \-\> 0x0028, MD:(android.view.ViewStructure, int):void (c), TRY_ENTER, TRY_LEAVE] (LINE:1443)\l}"];
Node_38 [shape=record,label="{38\:\ 0x001f|0x001f: IGET  (r2 I:android.widget.EditText) = (r4 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.editText android.widget.EditText  (LINE:1445)\l0x0021: INVOKE  (r2 I:android.widget.EditText), (r0 I:java.lang.CharSequence A[D('hint' java.lang.CharSequence)]) type: VIRTUAL call: android.widget.EditText.setHint(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (c)]\l0x0024: IPUT  (r1 I:boolean A[D('wasProvidingHint' boolean)]), (r4 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.isProvidingHint boolean  (LINE:1446)\l}"];
Node_49 [shape=record,label="{49\:\ 0x006b|RETURN\lORIG_RETURN\l|0x006b: RETURN    (LINE:1465)\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_39 [shape=record,label="{39\:\ 0x0028|ExcHandler: all \-\> 0x0028\l|0x0028: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0028] (LINE:1445)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0029|0x0029: IGET  (r3 I:android.widget.EditText) = (r4 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.editText android.widget.EditText \l0x002b: INVOKE  (r3 I:android.widget.EditText), (r0 I:java.lang.CharSequence A[D('hint' java.lang.CharSequence)]) type: VIRTUAL call: android.widget.EditText.setHint(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (c)]\l0x002e: IPUT  (r1 I:boolean A[D('wasProvidingHint' boolean)]), (r4 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.isProvidingHint boolean  (LINE:1446)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0030|0x0030: THROW  (r2 I:java.lang.Throwable)  (LINE:1447)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0031|0x0031: INVOKE  (r0 I:android.view.autofill.AutofillId) = (r4 I:com.google.android.material.textfield.TextInputLayout) type: VIRTUAL call: com.google.android.material.textfield.TextInputLayout.getAutofillId():android.view.autofill.AutofillId A[MD:():android.view.autofill.AutofillId (s)] (LINE:1451)\l0x0035: INVOKE  (r5 I:android.view.ViewStructure A[D('structure' android.view.ViewStructure)]), (r0 I:android.view.autofill.AutofillId) type: VIRTUAL call: android.view.ViewStructure.setAutofillId(android.view.autofill.AutofillId):void A[MD:(android.view.autofill.AutofillId):void (c)]\l0x0038: INVOKE  \l  (r4 I:com.google.android.material.textfield.TextInputLayout)\l  (r5 I:android.view.ViewStructure A[D('structure' android.view.ViewStructure)])\l  (r6 I:int A[D('flags' int)])\l type: VIRTUAL call: com.google.android.material.textfield.TextInputLayout.onProvideAutofillStructure(android.view.ViewStructure, int):void A[MD:(android.view.ViewStructure, int):void (s)] (LINE:1452)\l0x003b: INVOKE  \l  (r4 I:com.google.android.material.textfield.TextInputLayout)\l  (r5 I:android.view.ViewStructure A[D('structure' android.view.ViewStructure)])\l  (r6 I:int A[D('flags' int)])\l type: VIRTUAL call: com.google.android.material.textfield.TextInputLayout.onProvideAutofillVirtualStructure(android.view.ViewStructure, int):void A[MD:(android.view.ViewStructure, int):void (s)] (LINE:1453)\l0x003e: IGET  (r0 I:android.widget.FrameLayout) = (r4 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.inputFrame android.widget.FrameLayout  (LINE:1455)\l0x0040: INVOKE  (r0 I:int) = (r0 I:android.widget.FrameLayout) type: VIRTUAL call: android.widget.FrameLayout.getChildCount():int A[MD:():int (c)]\l0x0044: INVOKE  (r5 I:android.view.ViewStructure A[D('structure' android.view.ViewStructure)]), (r0 I:int) type: VIRTUAL call: android.view.ViewStructure.setChildCount(int):void A[MD:(int):void (c)]\l0x0047: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1456)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0048|LOOP_START\lLOOP:0: B:43:0x0048\-\>B:48:0x0068\l|0x0048: IGET  (r1 I:android.widget.FrameLayout) = (r4 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.inputFrame android.widget.FrameLayout \l0x004a: INVOKE  (r1 I:int) = (r1 I:android.widget.FrameLayout) type: VIRTUAL call: android.widget.FrameLayout.getChildCount():int A[MD:():int (c)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x004e|0x004e: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:52:0x006b \l}"];
Node_45 [shape=record,label="{45\:\ 0x0050|0x0050: IGET  (r1 I:android.widget.FrameLayout) = (r4 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.inputFrame android.widget.FrameLayout  (LINE:1457)\l0x0052: INVOKE  (r1 I:android.view.View) = (r1 I:android.widget.FrameLayout), (r0 I:int A[D('i' int)]) type: VIRTUAL call: android.widget.FrameLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)]\l0x0056: INVOKE  (r2 I:android.view.ViewStructure) = (r5 I:android.view.ViewStructure A[D('structure' android.view.ViewStructure)]), (r0 I:int A[D('i' int)]) type: VIRTUAL call: android.view.ViewStructure.newChild(int):android.view.ViewStructure A[MD:(int):android.view.ViewStructure (c)] (LINE:1458)\l0x005a: INVOKE  \l  (r1 I:android.view.View A[D('child' android.view.View)])\l  (r2 I:android.view.ViewStructure A[D('childStructure' android.view.ViewStructure)])\l  (r6 I:int A[D('flags' int)])\l type: VIRTUAL call: android.view.View.dispatchProvideAutofillStructure(android.view.ViewStructure, int):void A[MD:(android.view.ViewStructure, int):void (c)] (LINE:1459)\l0x005d: IGET  (r3 I:android.widget.EditText) = (r4 I:com.google.android.material.textfield.TextInputLayout) com.google.android.material.textfield.TextInputLayout.editText android.widget.EditText  (LINE:1460)\l}"];
Node_46 [shape=record,label="{46\:\ 0x005f|0x005f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('child' android.view.View)]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0068 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0061|0x0061: INVOKE  (r3 I:java.lang.CharSequence) = (r4 I:com.google.android.material.textfield.TextInputLayout) type: VIRTUAL call: com.google.android.material.textfield.TextInputLayout.getHint():java.lang.CharSequence A[MD:():java.lang.CharSequence (m)] (LINE:1461)\l0x0065: INVOKE  (r2 I:android.view.ViewStructure A[D('childStructure' android.view.ViewStructure)]), (r3 I:java.lang.CharSequence) type: VIRTUAL call: android.view.ViewStructure.setHint(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (c)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0068|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0068|LOOP_END\lLOOP:0: B:43:0x0048\-\>B:48:0x0068\l|0x0068: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:1456)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0068|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x006b|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\l|0x006b: RETURN   A[SYNTHETIC] (LINE:1465)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.textfield.TextInputLayout.dispatchProvideAutofillStructure((r4 'this' I:com.google.android.material.textfield.TextInputLayout A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.ViewStructure A[D('structure' android.view.ViewStructure), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:49:0x006b \-\> B:29:?, CROSS_EDGE: B:41:0x0030 \-\> B:29:?, CROSS_EDGE: B:50:0x001c \-\> B:39:0x0028, BACK_EDGE: B:48:0x0068 \-\> B:43:0x0048, CROSS_EDGE: B:46:0x005f \-\> B:48:0x0068, CROSS_EDGE: B:44:0x004e \-\> B:49:0x006b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x0027: r0 'hint' Ljava\/lang\/CharSequence;\l  0x000e\-0x0027: r1 'wasProvidingHint' Z\l  0x0028\-0x0031: r0 'hint' Ljava\/lang\/CharSequence;\l  0x0028\-0x0031: r1 'wasProvidingHint' Z\l  0x0056\-0x0068: r1 'child' Landroid\/view\/View;\l  0x005a\-0x0068: r2 'childStructure' Landroid\/view\/ViewStructure;\l  0x0048\-0x006b: r0 'i' I\l  \-1 \-0x006b: r5 'structure' Landroid\/view\/ViewStructure;\l  \-1 \-0x006b: r6 'flags' I\lTryCatch #0 \{all \-\> 0x0028, blocks: (B:37:0x001c), top: B:50:0x001c \}\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.dispatchProvideAutofillStructure(android.view.ViewStructure, int):void\}]\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_29;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_42;
Node_36 -> Node_50;
Node_50 -> Node_37;
Node_50 -> Node_39;
Node_37 -> Node_38;
Node_37 -> Node_51;
Node_38 -> Node_49;
Node_49 -> Node_29;
Node_51 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_29;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_52;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_54;
Node_47 -> Node_53;
Node_53 -> Node_48;
Node_48 -> Node_43;
Node_54 -> Node_48;
Node_52 -> Node_55;
Node_55 -> Node_29;
}

