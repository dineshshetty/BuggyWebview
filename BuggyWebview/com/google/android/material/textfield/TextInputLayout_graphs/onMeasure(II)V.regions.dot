digraph "CFG forcom.google.android.material.textfield.TextInputLayout.onMeasure(II)V" {
subgraph cluster_Region_142717894 {
label = "R(3:1|(1:7)|4)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|super.onMeasure(r5, r6)\lboolean boolean r0 = updateEditTextHeightBasedOnIcon()\lboolean boolean r1 = updateDummyDrawables()\l}"];
subgraph cluster_IfRegion_516664874 {
label = "IF [B:11:0x000b, B:12:0x000d] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000b|if (r0 != false) goto L7\l}"];
Node_12 [shape=record,label="{12\:\ 0x000d|ADDED_TO_REGION\l|if (r1 != false) goto L7\l}"];
subgraph cluster_Region_238792555 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000f|r4.editText.post(new com.google.android.material.textfield.TextInputLayout.RunnableC08093())\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0019|updatePlaceholderMeasurementsBasedOnEditText()\lr4.endLayout.updateSuffixTextViewPadding()\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0021}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.textfield.TextInputLayout.onMeasure((r4v0 'this' com.google.android.material.textfield.TextInputLayout A[IMMUTABLE_TYPE, THIS]), (r5v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:12:0x000d \-\> B:14:0x0019, CROSS_EDGE: B:11:0x000b \-\> B:13:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_8 -> Node_10;
Node_15 -> Node_9;
}

