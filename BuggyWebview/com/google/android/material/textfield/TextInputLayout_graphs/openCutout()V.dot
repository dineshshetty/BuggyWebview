digraph "CFG forcom.google.android.material.textfield.TextInputLayout.openCutout()V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0004|if (cutoutEnabled() != false) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|android.graphics.RectF r0 = r5.tmpRectF\lr5.collapsingTextHelper.getCollapsedTextActualBounds(r0, r5.editText.getWidth(), r5.editText.getGravity())\l}"];
Node_20 [shape=record,label="{20\:\ 0x0021|if ((r0.width() \> 0.0f ? 1 : (r0.width() == 0.0f ? 0 : \-1)) \<= 0) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x0023}"];
Node_22 [shape=record,label="{22\:\ 0x0029|if ((r0.height() \> 0.0f ? 1 : (r0.height() == 0.0f ? 0 : \-1)) \> 0) goto L9\l}"];
Node_24 [shape=record,label="{24\:\ 0x002c|applyCutoutPadding(r0)\lr0.offset((float) (\-getPaddingLeft()), (((float) (\-getPaddingTop())) \- (r0.height() \/ 2.0f)) + ((float) r5.boxStrokeWidthPx))\l((com.google.android.material.textfield.CutoutDrawable) r5.boxBackground).setCutout(r0)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0052|RETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ 0x0053|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.textfield.TextInputLayout.openCutout((r5v0 'this' com.google.android.material.textfield.TextInputLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0052 \-\> B:15:?, CROSS_EDGE: B:26:0x0053 \-\> B:15:?, CROSS_EDGE: B:20:0x0021 \-\> B:26:0x0053\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_24;
Node_22 -> Node_27[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_27 -> Node_15;
Node_26 -> Node_15;
}

