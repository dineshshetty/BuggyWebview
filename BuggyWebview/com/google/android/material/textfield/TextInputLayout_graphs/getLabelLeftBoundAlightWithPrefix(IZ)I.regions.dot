digraph "CFG forcom.google.android.material.textfield.TextInputLayout.getLabelLeftBoundAlightWithPrefix(IZ)I" {
subgraph cluster_Region_1301088264 {
label = "R(2:1|(2:(1:5)|(1:7)))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|int int r0 = r3.editText.getCompoundPaddingLeft() + r4\l}"];
subgraph cluster_Region_672722784 {
label = "R(2:(1:5)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_8167919 {
label = "IF [B:12:0x000b, B:13:0x000d] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x000b|if (getPrefixText() != null) goto L3\l}"];
Node_13 [shape=record,label="{13\:\ 0x000d|ADDED_TO_REGION\l|if (r5 == false) goto L4\l}"];
subgraph cluster_Region_14766528 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0023|RETURN\lORIG_RETURN\l|return (r0 \- getPrefixTextView().getMeasuredWidth()) + getPrefixTextView().getPaddingLeft()\l}"];
}
}
subgraph cluster_Region_1748829206 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000f}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return r0\l}"];
MethodNode[shape=record,label="{private int com.google.android.material.textfield.TextInputLayout.getLabelLeftBoundAlightWithPrefix((r3v0 'this' com.google.android.material.textfield.TextInputLayout A[IMMUTABLE_TYPE, THIS]), (r4v0 'rectLeft' int A[D('rectLeft' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'isRtl' boolean A[D('isRtl' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000d \-\> B:15:0x0023, CROSS_EDGE: B:12:0x000b \-\> B:15:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_16[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_15 -> Node_10;
Node_17 -> Node_10;
Node_9 -> Node_11;
Node_14 -> Node_15;
Node_16 -> Node_10;
}

