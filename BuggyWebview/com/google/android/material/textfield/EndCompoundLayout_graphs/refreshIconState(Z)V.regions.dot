digraph "CFG forcom.google.android.material.textfield.EndCompoundLayout.refreshIconState(Z)V" {
subgraph cluster_Region_765850530 {
label = "R(4:1|(1:5)|(1:10)|(1:(1:15))) | DECL_VAR: boolean wasActivated, boolean wasChecked\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0000|boolean r0 = false\lcom.google.android.material.textfield.EndIconDelegate com.google.android.material.textfield.EndIconDelegate r1 = getEndIconDelegate()\l}"];
subgraph cluster_IfRegion_1700457744 {
label = "IF [B:20:0x0009, B:22:0x0015] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0009|if (r1.isIconCheckable() != false) goto L3\l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|ADDED_TO_REGION\l|if ((r2 = r5.endIconView.isChecked()) != r1.isIconChecked()) goto L5\l}"];
subgraph cluster_Region_1351512744 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0017|r5.endIconView.setChecked(!r2)\lr0 = true\l}"];
}
}
subgraph cluster_IfRegion_2138333379 {
label = "IF [B:25:0x0023, B:27:0x002f] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0023|if (r1.isIconActivable() != false) goto L8\l}"];
Node_27 [shape=record,label="{27\:\ 0x002f|ADDED_TO_REGION\l|if ((r2 = r5.endIconView.isActivated()) != r1.isIconActivated()) goto L10\l}"];
subgraph cluster_Region_1826540893 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0031|setEndIconActivated(!r2)\lr0 = true\l}"];
}
}
subgraph cluster_Region_1107039265 {
label = "R(1:(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1742748333 {
label = "IF [B:29:0x0037, B:30:0x0039] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0037|PHI: r0 \l  PHI: (r0v2 'stateChanged' boolean) = (r0v1 'stateChanged' boolean), (r0v1 'stateChanged' boolean), (r0v3 'stateChanged' boolean) binds: [B:25:0x0023, B:27:0x002f, B:28:0x0031] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 != false) goto L15\l}"];
Node_30 [shape=record,label="{30\:\ 0x0039|ADDED_TO_REGION\l|if (r0 != false) goto L15\l}"];
subgraph cluster_Region_1377267134 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x003b|refreshEndIconDrawableState()\l}"];
}
}
}
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000b}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x001f|PHI: r0 \l  PHI: (r0v1 'stateChanged' boolean) = (r0v0 'stateChanged' boolean), (r0v0 'stateChanged' boolean), (r0v4 'stateChanged' boolean) binds: [B:20:0x0009, B:22:0x0015, B:23:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0025}"];
Node_33 [shape=record,color=red,label="{33\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x003e|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.textfield.EndCompoundLayout.refreshIconState((r5v0 'this' com.google.android.material.textfield.EndCompoundLayout A[IMMUTABLE_TYPE, THIS]), (r6v0 'force' boolean A[D('force' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0039 \-\> B:32:0x003e, CROSS_EDGE: B:29:0x0037 \-\> B:31:0x003b, CROSS_EDGE: B:27:0x002f \-\> B:29:0x0037, CROSS_EDGE: B:25:0x0023 \-\> B:29:0x0037, CROSS_EDGE: B:22:0x0015 \-\> B:24:0x001f, CROSS_EDGE: B:20:0x0009 \-\> B:24:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_17;Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_24[style=dashed];
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_25 -> Node_29[style=dashed];
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_30 -> Node_33[style=dashed];
Node_31 -> Node_32;
Node_17 -> Node_19;
Node_21 -> Node_22;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_33 -> Node_18;
Node_32 -> Node_18;
}

