digraph "CFG forcom.google.android.material.textfield.EndCompoundLayout.updateSuffixTextVisibility()V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|int r0 = r4.suffixTextView.getVisibility()\lr2 = false\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|if (r4.suffixText == null) goto L14\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b}"];
Node_20 [shape=record,label="{20\:\ 0x000d|if (r4.hintExpanded != false) goto L14\l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|r1 = 0\l}"];
Node_23 [shape=record,label="{23\:\ 0x0013|PHI: r1 \l  PHI: (r1v2 'newVisibility' int) = (r1v1 'newVisibility' int), (r1v4 'newVisibility' int) binds: [B:22:0x0011, B:21:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == r1) goto L11\l}"];
Node_24 [shape=record,label="{24\:\ 0x0015|com.google.android.material.textfield.EndIconDelegate r3 = getEndIconDelegate()\l}"];
Node_25 [shape=record,label="{25\:\ 0x0019|if (r1 != 0) goto L10\l}"];
Node_26 [shape=record,label="{26\:\ 0x001b|r2 = true\l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|PHI: r2 \l  PHI: (r2v3 boolean) = (r2v0 boolean), (r2v4 boolean) binds: [B:25:0x0019, B:26:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|r3.onSuffixVisibilityChanged(r2)\l}"];
Node_28 [shape=record,label="{28\:\ 0x001f|updateEndLayoutVisibility()\lr4.suffixTextView.setVisibility(r1)\lr4.textInputLayout.updateDummyDrawables()\l}"];
Node_29 [shape=record,label="{29\:\ 0x002c|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|r1 = 8\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.textfield.EndCompoundLayout.updateSuffixTextVisibility((r4v0 'this' com.google.android.material.textfield.EndCompoundLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0019 \-\> B:27:0x001c, CROSS_EDGE: B:23:0x0013 \-\> B:28:0x001f, CROSS_EDGE: B:22:0x0011 \-\> B:23:0x0013, CROSS_EDGE: B:18:0x0009 \-\> B:22:0x0011\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_16;
Node_22 -> Node_23;
}

