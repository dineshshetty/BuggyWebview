digraph "CFG forcom.google.android.material.textfield.CutoutDrawable.setCutout(FFFF)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.RectF) = (r1 I:com.google.android.material.textfield.CutoutDrawable) com.google.android.material.textfield.CutoutDrawable.cutoutBounds android.graphics.RectF  (LINE:61)\l0x0002: IGET  (r0 I:float) = (r0 I:android.graphics.RectF) android.graphics.RectF.left float \l0x0004: CMP_L  (r0 I:int) = (r2 I:float A[D('left' float)]), (r0 I:float) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0020 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: IGET  (r0 I:android.graphics.RectF) = (r1 I:com.google.android.material.textfield.CutoutDrawable) com.google.android.material.textfield.CutoutDrawable.cutoutBounds android.graphics.RectF \l0x000a: IGET  (r0 I:float) = (r0 I:android.graphics.RectF) android.graphics.RectF.top float \l0x000c: CMP_L  (r0 I:int) = (r3 I:float A[D('top' float)]), (r0 I:float) \l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0020 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: IGET  (r0 I:android.graphics.RectF) = (r1 I:com.google.android.material.textfield.CutoutDrawable) com.google.android.material.textfield.CutoutDrawable.cutoutBounds android.graphics.RectF \l0x0012: IGET  (r0 I:float) = (r0 I:android.graphics.RectF) android.graphics.RectF.right float \l0x0014: CMP_L  (r0 I:int) = (r4 I:float A[D('right' float)]), (r0 I:float) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0020 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|0x0018: IGET  (r0 I:android.graphics.RectF) = (r1 I:com.google.android.material.textfield.CutoutDrawable) com.google.android.material.textfield.CutoutDrawable.cutoutBounds android.graphics.RectF \l0x001a: IGET  (r0 I:float) = (r0 I:android.graphics.RectF) android.graphics.RectF.bottom float \l0x001c: CMP_L  (r0 I:int) = (r5 I:float A[D('bottom' float)]), (r0 I:float) \l}"];
Node_22 [shape=record,label="{22\:\ 0x001e|0x001e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:? \l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN   A[SYNTHETIC] (LINE:68)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0020|0x0020: IGET  (r0 I:android.graphics.RectF) = (r1 I:com.google.android.material.textfield.CutoutDrawable) com.google.android.material.textfield.CutoutDrawable.cutoutBounds android.graphics.RectF  (LINE:65)\l0x0022: INVOKE  \l  (r0 I:android.graphics.RectF)\l  (r2 I:float A[D('left' float)])\l  (r3 I:float A[D('top' float)])\l  (r4 I:float A[D('right' float)])\l  (r5 I:float A[D('bottom' float)])\l type: VIRTUAL call: android.graphics.RectF.set(float, float, float, float):void A[MD:(float, float, float, float):void (c)]\l0x0025: INVOKE  (r1 I:com.google.android.material.textfield.CutoutDrawable) type: VIRTUAL call: com.google.android.material.textfield.CutoutDrawable.invalidateSelf():void A[MD:():void (m)] (LINE:66)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0028|RETURN\lORIG_RETURN\l|0x0028: RETURN    (LINE:68)\l}"];
MethodNode[shape=record,label="{void com.google.android.material.textfield.CutoutDrawable.setCutout((r1 'this' I:com.google.android.material.textfield.CutoutDrawable A[IMMUTABLE_TYPE, THIS]), (r2 I:float A[D('left' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:float A[D('top' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:float A[D('right' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:float A[D('bottom' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x001e \-\> B:24:0x0028, CROSS_EDGE: B:20:0x0016 \-\> B:23:0x0020, CROSS_EDGE: B:18:0x000e \-\> B:23:0x0020, CROSS_EDGE: B:16:0x0006 \-\> B:23:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0028: r2 'left' F\l  \-1 \-0x0028: r3 'top' F\l  \-1 \-0x0028: r4 'right' F\l  \-1 \-0x0028: r5 'bottom' F\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_25 -> Node_14;
Node_23 -> Node_24;
Node_24 -> Node_14;
}

