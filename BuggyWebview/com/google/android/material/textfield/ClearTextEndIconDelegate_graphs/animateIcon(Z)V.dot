digraph "CFG forcom.google.android.material.textfield.ClearTextEndIconDelegate.animateIcon(Z)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r2.endLayout.isEndIconVisible() != r3) goto L20\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|r0 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|PHI: r0 \l  PHI: (r0v3 'shouldSkipAnimation' boolean) = (r0v2 'shouldSkipAnimation' boolean), (r0v4 'shouldSkipAnimation' boolean) binds: [B:5:0x000a, B:4:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == false) goto L13\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d}"];
Node_8 [shape=record,label="{8\:\ 0x0013|if (r2.iconInAnim.isRunning() != false) goto L13\l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|r2.iconOutAnim.cancel()\lr2.iconInAnim.start()\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|if (r0 == false) goto L12\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|r2.iconInAnim.end()\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|if (r3 != false) goto L19\l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|r2.iconInAnim.cancel()\lr2.iconOutAnim.start()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|if (r0 == false) goto L18\l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|r2.iconOutAnim.end()\l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|RETURN\lORIG_RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|r0 = false\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.textfield.ClearTextEndIconDelegate.animateIcon((r2v0 'this' com.google.android.material.textfield.ClearTextEndIconDelegate A[IMMUTABLE_TYPE, THIS]), (r3v0 'show' boolean A[D('show' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x001f \-\> B:16:0x003a, CROSS_EDGE: B:15:0x0035 \-\> B:16:0x003a, CROSS_EDGE: B:14:0x0033 \-\> B:16:0x003a, CROSS_EDGE: B:12:0x0027 \-\> B:16:0x003a, CROSS_EDGE: B:6:0x000b \-\> B:12:0x0027, CROSS_EDGE: B:5:0x000a \-\> B:6:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_18;
Node_18 -> Node_1;
Node_17 -> Node_1;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_19;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_20 -> Node_1;
Node_19 -> Node_1;
Node_5 -> Node_6;
}

