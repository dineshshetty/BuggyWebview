digraph "CFG forcom.google.android.material.textfield.IndicatorViewController.getCaptionViewFromDisplayState(I)Landroid\/widget\/TextView;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SWITCH  (r2 I:?? A[D('captionDisplayState' int)])\l case 1: goto B:7:0x0008\l case 2: goto B:5:0x0005\l default: goto B:3:0x0003  (LINE:390)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|RETURN\l|0x0003: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:398)\l0x0004: RETURN  (r0 I:android.widget.TextView) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|0x0005: IGET  (r0 I:android.widget.TextView) = (r1 I:com.google.android.material.textfield.IndicatorViewController) com.google.android.material.textfield.IndicatorViewController.helperTextView android.widget.TextView  (LINE:394)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:android.widget.TextView) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|0x0008: IGET  (r0 I:android.widget.TextView) = (r1 I:com.google.android.material.textfield.IndicatorViewController) com.google.android.material.textfield.IndicatorViewController.errorView android.widget.TextView  (LINE:392)\l}"];
Node_8 [shape=record,label="{8\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:android.widget.TextView) \l}"];
MethodNode[shape=record,label="{private android.widget.TextView com.google.android.material.textfield.IndicatorViewController.getCaptionViewFromDisplayState((r1 'this' I:com.google.android.material.textfield.IndicatorViewController A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('captionDisplayState' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0007 \-\> B:1:?, CROSS_EDGE: B:8:0x000a \-\> B:1:?\lDebug Info:\l  \-1 \-0x0013: r2 'captionDisplayState' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_2 -> Node_7;
Node_3 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_1;
}

