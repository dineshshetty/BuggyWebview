digraph "CFG forcom.google.android.material.textfield.IndicatorViewController.setErrorViewTextColor(Landroid\/content\/res\/ColorStateList;)V" {
subgraph cluster_Region_955888392 {
label = "R(2:1|(1:(1:4)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|r1.errorViewTextColor = r2\landroid.widget.TextView android.widget.TextView r0 = r1.errorView\l}"];
subgraph cluster_Region_263386005 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_554497078 {
label = "IF [B:3:0x0004, B:4:0x0006] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r0 != null) goto L3\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|ADDED_TO_REGION\l|if (r2 != null) goto L4\l}"];
subgraph cluster_Region_1707462348 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0008|r0.setTextColor(r2)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000b|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.textfield.IndicatorViewController.setErrorViewTextColor((r1v0 'this' com.google.android.material.textfield.IndicatorViewController A[IMMUTABLE_TYPE, THIS]), (r2v0 'errorViewTextColor' android.content.res.ColorStateList A[D('errorViewTextColor' android.content.res.ColorStateList), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:4:0x0006 \-\> B:6:0x000b, CROSS_EDGE: B:3:0x0004 \-\> B:6:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l INFO: \l \-\> Access modifiers changed from: package\-private\}\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_8[style=dashed];
Node_5 -> Node_6;
Node_0 -> Node_2;
Node_6 -> Node_1;
Node_8 -> Node_1;
Node_7 -> Node_1;
}

