digraph "CFG forcom.google.android.material.textfield.IndicatorViewController.getIndicatorPadding(ZII)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isFontScaleLarge' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d  (LINE:431)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IGET  (r0 I:android.content.Context) = (r1 I:com.google.android.material.textfield.IndicatorViewController) com.google.android.material.textfield.IndicatorViewController.context android.content.Context  (LINE:432)\l0x0004: INVOKE  (r0 I:android.content.res.Resources) = (r0 I:android.content.Context) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)]\l0x0008: INVOKE  (r0 I:int) = (r0 I:android.content.res.Resources), (r3 I:int A[D('largeFontPaddingRes' int)]) type: VIRTUAL call: android.content.res.Resources.getDimensionPixelSize(int):int A[MD:(int):int throws android.content.res.Resources$NotFoundException (c)]\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|0x000e: RETURN  (r0 I:int) A[SYNTHETIC] (LINE:431)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('defaultPadding' int)])  (LINE:433)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|RETURN\lORIG_RETURN\l|0x000e: RETURN  (r0 I:int)  (LINE:431)\l}"];
MethodNode[shape=record,label="{private int com.google.android.material.textfield.IndicatorViewController.getIndicatorPadding((r1 'this' I:com.google.android.material.textfield.IndicatorViewController A[IMMUTABLE_TYPE, THIS]), (r2 I:boolean A[D('isFontScaleLarge' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('largeFontPaddingRes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('defaultPadding' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:4:0x000d \-\> B:5:0x000e\lDebug Info:\l  \-1 \-0x000e: r2 'isFontScaleLarge' Z\l  \-1 \-0x000e: r3 'largeFontPaddingRes' I\l  \-1 \-0x000e: r4 'defaultPadding' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_6;
Node_6 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_1;
}

