digraph "CFG forcom.google.android.material.textfield.IndicatorViewController.createCaptionAnimators(Ljava\/util\/List;ZLandroid\/widget\/TextView;III)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionView' android.widget.TextView)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x003c  (LINE:339)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionEnabled' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0005 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|0x0005: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:342)\l0x0006: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|0x0007: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionState' int)]) == (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionToShow' int)])  \-\> B:10:0x000e \l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|0x0009: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionState' int)]) != (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionToHide' int)])  \-\> B:9:0x000c \l}"];
Node_9 [shape=record,label="{9\:\ 0x000c|0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x000f|0x000f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('shouldShowOrHide' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:?  (LINE:343)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0011|0x0011: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionToShow' int)]) != (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionState' int)])  \-\> B:14:0x0015  (LINE:345)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0013|0x0013: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0016|0x0016: INVOKE  (r3 I:android.animation.ObjectAnimator) = \l  (r6 I:com.google.android.material.textfield.IndicatorViewController)\l  (r9 I:android.widget.TextView A[D('captionView' android.widget.TextView)])\l  (r3 I:boolean)\l type: DIRECT call: com.google.android.material.textfield.IndicatorViewController.createCaptionOpacityAnimator(android.widget.TextView, boolean):android.animation.ObjectAnimator A[MD:(android.widget.TextView, boolean):android.animation.ObjectAnimator (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x001a|0x001a: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionState' int)]) != (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionToShow' int)])  \-\> B:19:0x001f  (LINE:346)\l}"];
Node_17 [shape=record,label="{17\:\ 0x001c|0x001c: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionToHide' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x001f \l}"];
Node_18 [shape=record,label="{18\:\ 0x001e|0x001e: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x001f|0x001f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('enableShowAnimation' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0027  (LINE:348)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0021|0x0021: IGET  (r1 I:int) = (r6 I:com.google.android.material.textfield.IndicatorViewController) com.google.android.material.textfield.IndicatorViewController.captionFadeOutAnimationDuration int  (LINE:349)\l0x0023: CAST (r4 I:long) = (long) (r1 I:int) \l0x0024: INVOKE  (r3 I:android.animation.Animator A[D('animator' android.animation.Animator)]), (r4 I:long) type: VIRTUAL call: android.animation.Animator.setStartDelay(long):void A[MD:(long):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0027|0x0027: INVOKE  \l  (r7 I:java.util.List A[D('captionAnimatorList' java.util.List\<android.animation.Animator\>)])\l  (r3 I:java.lang.Object A[D('animator' android.animation.Animator)])\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:351)\l}"];
Node_22 [shape=record,label="{22\:\ 0x002a|0x002a: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionToShow' int)]) != (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionState' int)])  \-\> B:28:?  (LINE:352)\l}"];
Node_23 [shape=record,label="{23\:\ 0x002c|0x002c: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionToHide' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:? \l}"];
Node_24 [shape=record,label="{24\:\ 0x002e|0x002e: INVOKE  (r1 I:android.animation.ObjectAnimator) = \l  (r6 I:com.google.android.material.textfield.IndicatorViewController)\l  (r9 I:android.widget.TextView A[D('captionView' android.widget.TextView)])\l type: DIRECT call: com.google.android.material.textfield.IndicatorViewController.createCaptionTranslationYAnimator(android.widget.TextView):android.animation.ObjectAnimator A[MD:(android.widget.TextView):android.animation.ObjectAnimator (m)] (LINE:353)\l0x0032: IGET  (r4 I:int) = (r6 I:com.google.android.material.textfield.IndicatorViewController) com.google.android.material.textfield.IndicatorViewController.captionFadeOutAnimationDuration int  (LINE:354)\l0x0034: CAST (r4 I:long) = (long) (r4 I:int) \l0x0035: INVOKE  (r1 I:android.animation.Animator A[D('translationYAnimator' android.animation.Animator)]), (r4 I:long) type: VIRTUAL call: android.animation.Animator.setStartDelay(long):void A[MD:(long):void (c)]\l0x0038: INVOKE  \l  (r7 I:java.util.List A[D('captionAnimatorList' java.util.List\<android.animation.Animator\>)])\l  (r1 I:java.lang.Object A[D('translationYAnimator' android.animation.Animator)])\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:355)\l}"];
Node_25 [shape=record,label="{25\:\ 0x003b|RETURN\lORIG_RETURN\l|0x003b: RETURN    (LINE:358)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x003b: RETURN   A[SYNTHETIC] (LINE:358)\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|0x003b: RETURN   A[SYNTHETIC] (LINE:358)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0015|0x0015: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x003b: RETURN   A[SYNTHETIC] (LINE:358)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000e|0x000e: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|0x003c: RETURN   A[SYNTHETIC] (LINE:340)\l}"];
Node_26 [shape=record,label="{26\:\ 0x003c|RETURN\lORIG_RETURN\l|0x003c: RETURN    (LINE:340)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.textfield.IndicatorViewController.createCaptionAnimators((r6 'this' I:com.google.android.material.textfield.IndicatorViewController A[IMMUTABLE_TYPE, THIS]), (r7 I:java.util.List\<android.animation.Animator\> A[D('captionAnimatorList' java.util.List\<android.animation.Animator\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[D('captionEnabled' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.widget.TextView A[D('captionView' android.widget.TextView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('captionState' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('captionToHide' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('captionToShow' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x002c \-\> B:25:0x003b, CROSS_EDGE: B:22:0x002a \-\> B:25:0x003b, CROSS_EDGE: B:19:0x001f \-\> B:21:0x0027, CROSS_EDGE: B:17:0x001c \-\> B:19:0x001f, CROSS_EDGE: B:16:0x001a \-\> B:19:0x001f, CROSS_EDGE: B:14:0x0015 \-\> B:15:0x0016, CROSS_EDGE: B:11:0x000f \-\> B:25:0x003b, CROSS_EDGE: B:10:0x000e \-\> B:11:0x000f, CROSS_EDGE: B:6:0x0007 \-\> B:10:0x000e, CROSS_EDGE: B:26:0x003c \-\> B:1:?, CROSS_EDGE: B:2:0x0000 \-\> B:26:0x003c\lDebug Info:\l  0x001f\-0x003b: r0 'enableShowAnimation' Z\l  0x0032\-0x003b: r1 'translationYAnimator' Landroid\/animation\/Animator;\l  0x001a\-0x003b: r3 'animator' Landroid\/animation\/Animator;\l  0x000f\-0x003c: r2 'shouldShowOrHide' Z\l  0x0000\-0x003c: r7 'captionAnimatorList' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroid\/animation\/Animator;\>;\l  \-1 \-0x003c: r8 'captionEnabled' Z\l  \-1 \-0x003c: r9 'captionView' Landroid\/widget\/TextView;\l  \-1 \-0x003c: r10 'captionState' I\l  \-1 \-0x003c: r11 'captionToHide' I\l  \-1 \-0x003c: r12 'captionToShow' I\lSIGNATURE: (Ljava\/util\/List\<Landroid\/animation\/Animator;\>;ZLandroid\/widget\/TextView;III)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_26;
Node_3 -> Node_5;
Node_3 -> Node_30[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_9;
Node_7 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_27;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_1;
Node_29 -> Node_1;
Node_28 -> Node_1;
Node_14 -> Node_15;
Node_27 -> Node_1;
Node_10 -> Node_11;
Node_30 -> Node_1;
Node_26 -> Node_1;
}

