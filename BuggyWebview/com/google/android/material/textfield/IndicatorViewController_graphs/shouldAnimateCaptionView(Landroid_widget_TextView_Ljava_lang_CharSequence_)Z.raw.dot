digraph "CFG forcom.google.android.material.textfield.IndicatorViewController.shouldAnimateCaptionView(Landroid\/widget\/TextView;Ljava\/lang\/CharSequence;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.textfield.TextInputLayout) = (r2 I:com.google.android.material.textfield.IndicatorViewController) com.google.android.material.textfield.IndicatorViewController.textInputView com.google.android.material.textfield.TextInputLayout  (LINE:227)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.isLaidOut(android.view.View):boolean A[MD:(android.view.View):boolean (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0024 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r0 I:com.google.android.material.textfield.TextInputLayout) = (r2 I:com.google.android.material.textfield.IndicatorViewController) com.google.android.material.textfield.IndicatorViewController.textInputView com.google.android.material.textfield.TextInputLayout \l0x000a: INVOKE  (r0 I:boolean) = (r0 I:com.google.android.material.textfield.TextInputLayout) type: VIRTUAL call: com.google.android.material.textfield.TextInputLayout.isEnabled():boolean A[MD:():boolean (s)] (LINE:228)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0024 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r0 I:int) = (r2 I:com.google.android.material.textfield.IndicatorViewController) com.google.android.material.textfield.IndicatorViewController.captionToShow int \l0x0012: IGET  (r1 I:int) = (r2 I:com.google.android.material.textfield.IndicatorViewController) com.google.android.material.textfield.IndicatorViewController.captionDisplayed int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0022 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('captionView' android.widget.TextView)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0022 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: INVOKE  (r0 I:java.lang.CharSequence) = (r3 I:android.widget.TextView A[D('captionView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getText():java.lang.CharSequence A[MD:():java.lang.CharSequence (c)] (LINE:231)\l0x001c: INVOKE  (r0 I:boolean) = (r0 I:java.lang.CharSequence), (r4 I:java.lang.CharSequence A[D('captionText' java.lang.CharSequence)]) type: STATIC call: android.text.TextUtils.equals(java.lang.CharSequence, java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence, java.lang.CharSequence):boolean (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0024 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|SYNTHETIC\lRETURN\l|0x0022: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0025: RETURN  (r0 I:boolean) A[SYNTHETIC] (LINE:227)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|RETURN\lORIG_RETURN\l|0x0024: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0025: RETURN  (r0 I:boolean)  (LINE:227)\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.material.textfield.IndicatorViewController.shouldAnimateCaptionView((r2 'this' I:com.google.android.material.textfield.IndicatorViewController A[IMMUTABLE_TYPE, THIS]), (r3 I:android.widget.TextView A[D('captionView' android.widget.TextView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.CharSequence A[D('captionText' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0024 \-\> B:13:0x0025, CROSS_EDGE: B:8:0x0016 \-\> B:11:0x0022, CROSS_EDGE: B:7:0x0014 \-\> B:11:0x0022, CROSS_EDGE: B:5:0x000e \-\> B:12:0x0024, CROSS_EDGE: B:3:0x0006 \-\> B:12:0x0024\lDebug Info:\l  \-1 \-0x0025: r3 'captionView' Landroid\/widget\/TextView;\l  \-1 \-0x0025: r4 'captionText' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_1;
Node_12 -> Node_1;
}

