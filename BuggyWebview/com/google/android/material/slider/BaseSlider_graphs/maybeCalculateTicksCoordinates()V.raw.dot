digraph "CFG forcom.google.android.material.slider.BaseSlider.maybeCalculateTicksCoordinates()V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: IGET  (r0 I:float) = \l  (r7 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.stepSize float  (LINE:1655)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CMP_G  (r0 I:int) = (r0 I:float), (r1 I:float) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|0x0005: IF  (r0 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:21:0x0008 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|RETURN\l|0x0007: RETURN    (LINE:1656)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008|0x0008: INVOKE  \l  (r7 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.validateConfigurationIfDirty():void A[MD:():void (m)] (LINE:1659)\l0x000b: IGET  (r0 I:float) = \l  (r7 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.valueTo float  (LINE:1661)\l0x000d: IGET  (r1 I:float) = \l  (r7 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.valueFrom float \l0x000f: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x0010: IGET  (r1 I:float) = \l  (r7 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.stepSize float \l0x0012: ARITH  (r0 I:float) = (r0 I:float) \/ (r1 I:float) \l0x0013: CONST  (r1 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x0015: ARITH  (r0 I:float) = (r0 I:float) + (r1 I:float) \l0x0016: CAST (r0 I:int) = (int) (r0 I:float) \l0x0017: IGET  (r1 I:int) = \l  (r7 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.trackWidth int  (LINE:1663)\l0x0019: IGET  (r2 I:int) = \l  (r7 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.trackHeight int \l0x001b: ARITH  (r2 I:int) = (r2 I:int) * (2 int) \l0x001d: ARITH  (r1 I:int) = (r1 I:int) \/ (r2 I:int) \l0x001e: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0020: INVOKE  (r0 I:int A[D('tickCount' int)]) = (r0 I:int A[D('tickCount' int)]), (r1 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0024: IGET  (r1 I:float[]) = \l  (r7 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.ticksCoordinates float[]  (LINE:1664)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0026|0x0026: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x002d \l}"];
Node_23 [shape=record,label="{23\:\ 0x0028|0x0028: ARRAY_LENGTH  (r1 I:int) = (r1 I:??[]) \l0x0029: ARITH  (r2 I:int) = (r0 I:int A[D('tickCount' int)]) * (2 int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x002b|0x002b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0033 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0033|0x0033: IGET  (r1 I:int) = \l  (r7 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.trackWidth int  (LINE:1668)\l0x0035: CAST (r1 I:float) = (float) (r1 I:int) \l0x0036: ARITH  (r2 I:int) = (r0 I:int A[D('tickCount' int)]) + (\-1 int) \l0x0038: CAST (r2 I:float) = (float) (r2 I:int) \l0x0039: ARITH  (r1 I:float) = (r1 I:float) \/ (r2 I:float) \l0x003a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1669)\l}"];
Node_27 [shape=record,label="{27\:\ 0x003b|LOOP_START\lLOOP:0: B:27:0x003b\-\>B:29:0x003f\l|0x003b: ARITH  (r3 I:int) = (r0 I:int A[D('tickCount' int)]) * (2 int) \l}"];
Node_28 [shape=record,label="{28\:\ 0x003d|0x003d: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:31:0x0059 \l}"];
Node_29 [shape=record,label="{29\:\ 0x003f|LOOP_END\lLOOP:0: B:27:0x003b\-\>B:29:0x003f\l|0x003f: IGET  (r3 I:float[]) = \l  (r7 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.ticksCoordinates float[]  (LINE:1670)\l0x0041: IGET  (r4 I:int) = \l  (r7 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.trackSidePadding int \l0x0043: CAST (r4 I:float) = (float) (r4 I:int) \l0x0044: CAST (r5 I:float) = (float) (r2 I:int A[D('i' int)]) \l0x0045: CONST  (r6 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0047: ARITH  (r5 I:float) = (r5 I:float) \/ (r6 I:float) \l0x0048: ARITH  (r5 I:float) = (r5 I:float) * (r1 I:float A[D('interval' float)]) \l0x004a: ARITH  (r4 I:float) = (r4 I:float) + (r5 I:float) \l0x004b: APUT  (r3 I:??[int, float][]), (r2 I:??[int, short, byte, char] A[D('i' int)]), (r4 I:??[int, float, short, byte, char]) \l0x004d: ARITH  (r4 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:1671)\l0x004f: INVOKE  (r5 I:int) = \l  (r7 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.calculateTrackCenter():int A[MD:():int (m)]\l0x0053: CAST (r5 I:float) = (float) (r5 I:int) \l0x0054: APUT  (r3 I:??[int, float][]), (r4 I:??[int, short, byte, char]), (r5 I:??[int, float, short, byte, char]) \l0x0056: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (2 int)  (LINE:1669)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0059|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0059|RETURN\l|0x0059: RETURN    (LINE:1673)\l}"];
Node_25 [shape=record,label="{25\:\ 0x002d|0x002d: ARITH  (r1 I:int) = (r0 I:int A[D('tickCount' int)]) * (2 int)  (LINE:1665)\l0x002f: NEW_ARRAY  (r1 I:float[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0031: IPUT  \l  (r1 I:float[])\l  (r7 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.ticksCoordinates float[] \l}"];
MethodNode[shape=record,label="{private void com.google.android.material.slider.BaseSlider.maybeCalculateTicksCoordinates((r7 'this' I:com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x003f \-\> B:27:0x003b, CROSS_EDGE: B:30:0x0059 \-\> B:17:?, CROSS_EDGE: B:24:0x002b \-\> B:26:0x0033, CROSS_EDGE: B:22:0x0026 \-\> B:25:0x002d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003b\-0x0059: r2 'i' I\l  0x0017\-0x0059: r0 'tickCount' I\l  0x003a\-0x0059: r1 'interval' F\l  0x0000\-0x0059: r7 'this' Lcom\/google\/android\/material\/slider\/BaseSlider;, signature: Lcom\/google\/android\/material\/slider\/BaseSlider\<TS;TL;TT;\>;\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_27;
Node_31 -> Node_30;
Node_30 -> Node_17;
Node_25 -> Node_26;
}

