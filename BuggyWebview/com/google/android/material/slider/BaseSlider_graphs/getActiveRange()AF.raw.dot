digraph "CFG forcom.google.android.material.slider.BaseSlider.getActiveRange()[F" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r0 I:java.util.List) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.getValues():java.util.List A[MD:():java.util.List\<java.lang.Float\> (m)] (LINE:1742)\l0x0004: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Collection) type: STATIC call: java.util.Collections.max(java.util.Collection):java.lang.Object A[MD:\<T extends java.lang.Comparable\<? super T\>\>:(java.util.Collection\<? extends T extends java.lang.Comparable\<? super T\>\>):T extends java.lang.Comparable\<? super T\> (c)]\l0x0008: CHECK_CAST (r0 I:java.lang.Float) = (java.lang.Float) (r0 I:??[OBJECT, ARRAY]) \l0x000a: INVOKE  (r0 I:float) = (r0 I:java.lang.Float) type: VIRTUAL call: java.lang.Float.floatValue():float A[MD:():float (c)]\l0x000e: INVOKE  (r1 I:java.util.List) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.getValues():java.util.List A[MD:():java.util.List\<java.lang.Float\> (m)] (LINE:1743)\l0x0012: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.Collection) type: STATIC call: java.util.Collections.min(java.util.Collection):java.lang.Object A[MD:\<T extends java.lang.Comparable\<? super T\>\>:(java.util.Collection\<? extends T extends java.lang.Comparable\<? super T\>\>):T extends java.lang.Comparable\<? super T\> (c)]\l0x0016: CHECK_CAST (r1 I:java.lang.Float) = (java.lang.Float) (r1 I:??[OBJECT, ARRAY]) \l0x0018: INVOKE  (r1 I:float) = (r1 I:java.lang.Float) type: VIRTUAL call: java.lang.Float.floatValue():float A[MD:():float (c)]\l0x001c: IGET  (r2 I:java.util.ArrayList\<java.lang.Float\>) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.values java.util.ArrayList  (LINE:1744)\l0x001e: INVOKE  (r2 I:int) = (r2 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0022: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|0x0023: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0028 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0025|0x0025: IGET  (r2 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.valueFrom float \l}"];
Node_18 [shape=record,label="{18\:\ 0x0029|0x0029: INVOKE  (r2 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l  (r2 I:float)\l type: DIRECT call: com.google.android.material.slider.BaseSlider.normalizeValue(float):float A[MD:(float):float (m)]\l0x002d: INVOKE  (r4 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l  (r0 I:float A[D('max' float)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.normalizeValue(float):float A[MD:(float):float (m)] (LINE:1745)\l0x0031: INVOKE  (r5 I:boolean) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.isRtl():boolean A[MD:():boolean (m)] (LINE:1748)\l0x0035: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0036: CONST  (r7 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0037|0x0037: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0040 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0039|0x0039: NEW_ARRAY  (r5 I:float[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x003b: APUT  \l  (r5 I:??[int, float][])\l  (r6 I:??[int, short, byte, char])\l  (r4 I:??[int, float, short, byte, char] A[D('right' float)])\l \l0x003d: APUT  (r5 I:??[int, float][]), (r3 I:??[int, short, byte, char]), (r2 I:??[int, float, short, byte, char] A[D('left' float)]) \l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0046: RETURN  (r5 I:float[]) A[SYNTHETIC]\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0040|0x0040: NEW_ARRAY  (r5 I:float[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0042: APUT  (r5 I:??[int, float][]), (r6 I:??[int, short, byte, char]), (r2 I:??[int, float, short, byte, char] A[D('left' float)]) \l0x0044: APUT  \l  (r5 I:??[int, float][])\l  (r3 I:??[int, short, byte, char])\l  (r4 I:??[int, float, short, byte, char] A[D('right' float)])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x0046|RETURN\lORIG_RETURN\l|0x0046: RETURN  (r5 I:float[]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0028|0x0028: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('min' float)]) \l}"];
MethodNode[shape=record,label="{private float[] com.google.android.material.slider.BaseSlider.getActiveRange((r8 'this' I:com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0040 \-\> B:22:0x0046, CROSS_EDGE: B:17:0x0028 \-\> B:18:0x0029\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000e\-0x0046: r0 'max' F\l  0x001c\-0x0046: r1 'min' F\l  0x002d\-0x0046: r2 'left' F\l  0x0031\-0x0046: r4 'right' F\l  0x0000\-0x0046: r8 'this' Lcom\/google\/android\/material\/slider\/BaseSlider;, signature: Lcom\/google\/android\/material\/slider\/BaseSlider\<TS;TL;TT;\>;\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_22;
Node_22 -> Node_13;
Node_17 -> Node_18;
}

