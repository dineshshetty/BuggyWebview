digraph "CFG forcom.google.android.material.slider.BaseSlider.onTouchEvent(Landroid\/view\/MotionEvent;)Z" {
Node_44 [shape=record,label="{44\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.isEnabled():boolean A[MD:():boolean (c)] (LINE:1867)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0008 \l}"];
Node_48 [shape=record,label="{48\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:boolean)  (LINE:1868)\l}"];
Node_45 [shape=record,label="{45\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x0008|0x0008: INVOKE  (r0 I:float) = (r6 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getX():float A[MD:():float (c)] (LINE:1870)\l0x000c: IGET  (r2 I:int) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.trackSidePadding int  (LINE:1871)\l0x000e: CAST (r2 I:float) = (float) (r2 I:int) \l0x000f: ARITH  (r2 I:float) = (r0 I:float A[D('x' float)]) \- (r2 I:float) \l0x0011: IGET  (r3 I:int) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.trackWidth int \l0x0013: CAST (r3 I:float) = (float) (r3 I:int) \l0x0014: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l0x0015: IPUT  \l  (r2 I:float)\l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.touchPosition float \l0x0017: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1872)\l0x0018: INVOKE  (r2 I:float) = (r3 I:float), (r2 I:float) type: STATIC call: java.lang.Math.max(float, float):float A[MD:(float, float):float (c)]\l0x001c: IPUT  \l  (r2 I:float)\l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.touchPosition float \l0x001e: CONST  (r3 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:1873)\l0x0020: INVOKE  (r2 I:float) = (r3 I:float), (r2 I:float) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)]\l0x0024: IPUT  \l  (r2 I:float)\l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.touchPosition float \l0x0026: INVOKE  (r2 I:int) = (r6 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getActionMasked():int A[MD:():int (c)] (LINE:1875)\l0x002a: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x002b|0x002b: SWITCH  (r2 I:??)\l case 0: goto B:79:0x00bb\l case 1: goto B:64:0x0069\l case 2: goto B:52:0x0030\l case 3: goto B:64:0x0069\l default: goto B:86:0x00e4 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0030|0x0030: IGET  (r2 I:boolean) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.thumbIsPressed boolean  (LINE:1900)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0032|0x0032: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0054 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0034|0x0034: INVOKE  (r2 I:boolean) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.isInVerticalScrollingContainer():boolean A[MD:():boolean (m)] (LINE:1902)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0038|0x0038: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x004a \l}"];
Node_56 [shape=record,label="{56\:\ 0x003a|0x003a: IGET  (r2 I:float) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.touchDownX float \l0x003c: ARITH  (r2 I:float) = (r0 I:float A[D('x' float)]) \- (r2 I:float) \l0x003e: INVOKE  (r2 I:float) = (r2 I:float) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x0042: IGET  (r4 I:int) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.scaledTouchSlop int \l0x0044: CAST (r4 I:float) = (float) (r4 I:int) \l0x0045: CMP_G  (r2 I:int) = (r2 I:float), (r4 I:float) \l}"];
Node_57 [shape=record,label="{57\:\ 0x0047|0x0047: IF  (r2 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:59:0x004a \l}"];
Node_58 [shape=record,label="{58\:\ 0x0049|RETURN\l|0x0049: RETURN  (r1 I:boolean)  (LINE:1903)\l}"];
Node_59 [shape=record,label="{59\:\ 0x004a|0x004a: INVOKE  (r1 I:android.view.ViewParent) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:1905)\l0x004e: INVOKE  (r1 I:android.view.ViewParent), (r3 I:boolean) type: INTERFACE call: android.view.ViewParent.requestDisallowInterceptTouchEvent(boolean):void A[MD:(boolean):void (c)]\l0x0051: INVOKE  \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.onStartTrackingTouch():void A[MD:():void (m)] (LINE:1906)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0054|0x0054: INVOKE  (r1 I:boolean) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.pickActiveThumb():boolean A[MD:():boolean (m)] (LINE:1909)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0058|0x0058: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x005c \l}"];
Node_63 [shape=record,label="{63\:\ 0x005c|0x005c: IPUT  \l  (r3 I:boolean)\l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.thumbIsPressed boolean  (LINE:1914)\l0x005e: INVOKE  \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.snapTouchPosition():boolean A[MD:():boolean (m)] (LINE:1915)\l0x0061: INVOKE  \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.updateHaloHotspot():void A[MD:():void (m)] (LINE:1916)\l0x0064: INVOKE  \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.invalidate():void A[MD:():void (c)] (LINE:1917)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0069|0x0069: IPUT  \l  (r1 I:boolean)\l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.thumbIsPressed boolean  (LINE:1921)\l0x006b: IGET  (r1 I:android.view.MotionEvent) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.lastEvent android.view.MotionEvent  (LINE:1923)\l}"];
Node_65 [shape=record,label="{65\:\ 0x006d|0x006d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x00aa \l}"];
Node_66 [shape=record,label="{66\:\ 0x006f|0x006f: INVOKE  (r1 I:int) = (r1 I:android.view.MotionEvent) type: VIRTUAL call: android.view.MotionEvent.getActionMasked():int A[MD:():int (c)] (LINE:1924)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0073|0x0073: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x00aa \l}"];
Node_68 [shape=record,label="{68\:\ 0x0075|0x0075: IGET  (r1 I:android.view.MotionEvent) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.lastEvent android.view.MotionEvent \l0x0077: INVOKE  (r1 I:float) = (r1 I:android.view.MotionEvent) type: VIRTUAL call: android.view.MotionEvent.getX():float A[MD:():float (c)] (LINE:1925)\l0x007b: INVOKE  (r2 I:float) = (r6 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getX():float A[MD:():float (c)]\l0x007f: ARITH  (r1 I:float) = (r1 I:float) \- (r2 I:float) \l0x0080: INVOKE  (r1 I:float) = (r1 I:float) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x0084: IGET  (r2 I:int) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.scaledTouchSlop int \l0x0086: CAST (r2 I:float) = (float) (r2 I:int) \l0x0087: CMP_G  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_69 [shape=record,label="{69\:\ 0x0089|0x0089: IF  (r1 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:75:0x00aa \l}"];
Node_70 [shape=record,label="{70\:\ 0x008b|0x008b: IGET  (r1 I:android.view.MotionEvent) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.lastEvent android.view.MotionEvent \l0x008d: INVOKE  (r1 I:float) = (r1 I:android.view.MotionEvent) type: VIRTUAL call: android.view.MotionEvent.getY():float A[MD:():float (c)] (LINE:1926)\l0x0091: INVOKE  (r2 I:float) = (r6 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getY():float A[MD:():float (c)]\l0x0095: ARITH  (r1 I:float) = (r1 I:float) \- (r2 I:float) \l0x0096: INVOKE  (r1 I:float) = (r1 I:float) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x009a: IGET  (r2 I:int) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.scaledTouchSlop int \l0x009c: CAST (r2 I:float) = (float) (r2 I:int) \l0x009d: CMP_G  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_71 [shape=record,label="{71\:\ 0x009f|0x009f: IF  (r1 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:75:0x00aa \l}"];
Node_72 [shape=record,label="{72\:\ 0x00a1|0x00a1: INVOKE  (r1 I:boolean) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.pickActiveThumb():boolean A[MD:():boolean (m)] (LINE:1927)\l}"];
Node_73 [shape=record,label="{73\:\ 0x00a5|0x00a5: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x00aa \l}"];
Node_74 [shape=record,label="{74\:\ 0x00a7|0x00a7: INVOKE  \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.onStartTrackingTouch():void A[MD:():void (m)] (LINE:1928)\l}"];
Node_75 [shape=record,label="{75\:\ 0x00aa|0x00aa: IGET  (r1 I:int) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.activeThumbIdx int  (LINE:1932)\l0x00ac: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_76 [shape=record,label="{76\:\ 0x00ad|0x00ad: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:78:0x00b7 \l}"];
Node_77 [shape=record,label="{77\:\ 0x00af|0x00af: INVOKE  \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.snapTouchPosition():boolean A[MD:():boolean (m)] (LINE:1933)\l0x00b2: IPUT  \l  (r2 I:int)\l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.activeThumbIdx int  (LINE:1934)\l0x00b4: INVOKE  \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.onStopTrackingTouch():void A[MD:():void (m)] (LINE:1935)\l}"];
Node_78 [shape=record,label="{78\:\ 0x00b7|0x00b7: INVOKE  \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.invalidate():void A[MD:():void (c)] (LINE:1937)\l}"];
Node_79 [shape=record,label="{79\:\ 0x00bb|0x00bb: IPUT  \l  (r0 I:float A[D('x' float)])\l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.touchDownX float  (LINE:1877)\l0x00bd: INVOKE  (r1 I:boolean) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.isInVerticalScrollingContainer():boolean A[MD:():boolean (m)] (LINE:1881)\l}"];
Node_80 [shape=record,label="{80\:\ 0x00c1|0x00c1: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:82:0x00c4 \l}"];
Node_82 [shape=record,label="{82\:\ 0x00c4|0x00c4: INVOKE  (r1 I:android.view.ViewParent) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:1885)\l0x00c8: INVOKE  (r1 I:android.view.ViewParent), (r3 I:boolean) type: INTERFACE call: android.view.ViewParent.requestDisallowInterceptTouchEvent(boolean):void A[MD:(boolean):void (c)]\l0x00cb: INVOKE  (r1 I:boolean) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.pickActiveThumb():boolean A[MD:():boolean (m)] (LINE:1887)\l}"];
Node_83 [shape=record,label="{83\:\ 0x00cf|0x00cf: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:85:0x00d2 \l}"];
Node_85 [shape=record,label="{85\:\ 0x00d2|0x00d2: INVOKE  \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.requestFocus():boolean A[MD:():boolean (c)] (LINE:1892)\l0x00d5: IPUT  \l  (r3 I:boolean)\l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.thumbIsPressed boolean  (LINE:1893)\l0x00d7: INVOKE  \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.snapTouchPosition():boolean A[MD:():boolean (m)] (LINE:1894)\l0x00da: INVOKE  \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.updateHaloHotspot():void A[MD:():void (m)] (LINE:1895)\l0x00dd: INVOKE  \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.invalidate():void A[MD:():void (c)] (LINE:1896)\l0x00e0: INVOKE  \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.onStartTrackingTouch():void A[MD:():void (m)] (LINE:1897)\l}"];
Node_86 [shape=record,label="{86\:\ 0x00e4|0x00e4: IGET  (r1 I:boolean) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.thumbIsPressed boolean  (LINE:1944)\l0x00e6: INVOKE  \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l  (r1 I:boolean)\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.setPressed(boolean):void A[MD:(boolean):void (c)]\l0x00e9: INVOKE  (r1 I:android.view.MotionEvent) = (r6 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: STATIC call: android.view.MotionEvent.obtain(android.view.MotionEvent):android.view.MotionEvent A[MD:(android.view.MotionEvent):android.view.MotionEvent (c)] (LINE:1946)\l0x00ed: IPUT  \l  (r1 I:android.view.MotionEvent)\l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.lastEvent android.view.MotionEvent \l}"];
Node_87 [shape=record,label="{87\:\ 0x00ef|RETURN\l|0x00ef: RETURN  (r3 I:boolean)  (LINE:1947)\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.slider.BaseSlider.onTouchEvent((r5 'this' I:com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]), (r6 I:android.view.MotionEvent A[D('event' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:58:0x0049 \-\> B:45:?, CROSS_EDGE: B:87:0x00ef \-\> B:45:?, CROSS_EDGE: B:61:0x0058 \-\> B:86:0x00e4, CROSS_EDGE: B:55:0x0038 \-\> B:59:0x004a, CROSS_EDGE: B:53:0x0032 \-\> B:60:0x0054, CROSS_EDGE: B:78:0x00b7 \-\> B:86:0x00e4, CROSS_EDGE: B:76:0x00ad \-\> B:78:0x00b7, CROSS_EDGE: B:73:0x00a5 \-\> B:75:0x00aa, CROSS_EDGE: B:71:0x009f \-\> B:75:0x00aa, CROSS_EDGE: B:69:0x0089 \-\> B:75:0x00aa, CROSS_EDGE: B:67:0x0073 \-\> B:75:0x00aa, CROSS_EDGE: B:65:0x006d \-\> B:75:0x00aa, CROSS_EDGE: B:85:0x00d2 \-\> B:86:0x00e4, CROSS_EDGE: B:83:0x00cf \-\> B:86:0x00e4, CROSS_EDGE: B:80:0x00c1 \-\> B:86:0x00e4, CROSS_EDGE: B:50:0x002b \-\> B:86:0x00e4\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x00fb: r0 'x' F\l  0x0000\-0x00fb: r5 'this' Lcom\/google\/android\/material\/slider\/BaseSlider;, signature: Lcom\/google\/android\/material\/slider\/BaseSlider\<TS;TL;TT;\>;\l  \-1 \-0x00fb: r6 'event' Landroid\/view\/MotionEvent;\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onTouchEvent(android.view.MotionEvent):boolean\}]\l}"];
MethodNode -> Node_44;Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_45;
Node_49 -> Node_50;
Node_50 -> Node_52;
Node_50 -> Node_64;
Node_50 -> Node_79;
Node_50 -> Node_86;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_60;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_59;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_45;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_63;
Node_61 -> Node_86[style=dashed];
Node_63 -> Node_86;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_75;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_75;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_75;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_75;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_75;
Node_74 -> Node_75;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_78;
Node_77 -> Node_78;
Node_78 -> Node_86;
Node_79 -> Node_80;
Node_80 -> Node_82;
Node_80 -> Node_86[style=dashed];
Node_82 -> Node_83;
Node_83 -> Node_85;
Node_83 -> Node_86[style=dashed];
Node_85 -> Node_86;
Node_86 -> Node_87;
Node_87 -> Node_45;
}

