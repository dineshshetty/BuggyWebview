digraph "CFG forcom.google.android.material.slider.BaseSlider.validateValues()V" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|0x0000: IGET  (r0 I:java.util.ArrayList\<java.lang.Float\>) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.values java.util.ArrayList  (LINE:557)\l0x0002: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0006|LOOP_START\lLOOP:0: B:31:0x0006\-\>B:53:0x0006\l|0x0006: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0086 \l}"];
Node_33 [shape=record,label="{33\:\ 0x000c|0x000c: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0010: CHECK_CAST (r1 I:java.lang.Float) = (java.lang.Float) (r1 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r2 I:float) = (r1 I:java.lang.Float A[D('value' java.lang.Float)]) type: VIRTUAL call: java.lang.Float.floatValue():float A[MD:():float (c)] (LINE:558)\l0x0016: IGET  (r3 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.valueFrom float \l0x0018: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0019: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001a: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001b: CONST  (r7 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x001c: CMP_G  (r2 I:int) = (r2 I:float), (r3 I:float) \l}"];
Node_34 [shape=record,label="{34\:\ 0x001e|0x001e: IF  (r2 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:50:0x0066 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0020|0x0020: INVOKE  (r2 I:float) = (r1 I:java.lang.Float A[D('value' java.lang.Float)]) type: VIRTUAL call: java.lang.Float.floatValue():float A[MD:():float (c)]\l0x0024: IGET  (r3 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.valueTo float \l0x0026: CMP_L  (r2 I:int) = (r2 I:float), (r3 I:float) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0028|0x0028: IF  (r2 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:48:0x0066 \l}"];
Node_37 [shape=record,label="{37\:\ 0x002a|0x002a: IGET  (r2 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.stepSize float  (LINE:562)\l0x002c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002d: CMP_L  (r2 I:int) = (r2 I:float), (r3 I:float) \l}"];
Node_38 [shape=record,label="{38\:\ 0x002f|0x002f: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:54:0x0006 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0031|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0031|0x0031: INVOKE  (r2 I:float) = (r1 I:java.lang.Float A[D('value' java.lang.Float)]) type: VIRTUAL call: java.lang.Float.floatValue():float A[MD:():float (c)]\l0x0035: INVOKE  (r2 I:boolean) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l  (r2 I:float)\l type: DIRECT call: com.google.android.material.slider.BaseSlider.valueLandsOnTick(float):boolean A[MD:(float):boolean (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0039|0x0039: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x003c \l}"];
Node_52 [shape=record,label="{52\:\ 0x003c|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x003c|0x003c: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:563)\l0x003e: CONST  (r2 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x003f: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0041: APUT  (r2 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r1 I:??[OBJECT, ARRAY] A[D('value' java.lang.Float)]) \l0x0043: IGET  (r3 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.valueFrom float \l0x0045: INVOKE  (r3 I:java.lang.Float) = (r3 I:float) type: STATIC call: java.lang.Float.valueOf(float):java.lang.Float A[MD:(float):java.lang.Float (c)] (LINE:564)\l0x0049: APUT  (r2 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) \l0x004b: IGET  (r3 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.stepSize float \l0x004d: INVOKE  (r3 I:java.lang.Float) = (r3 I:float) type: STATIC call: java.lang.Float.valueOf(float):java.lang.Float A[MD:(float):java.lang.Float (c)]\l0x0051: APUT  (r2 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) \l0x0053: IGET  (r3 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.stepSize float \l0x0055: INVOKE  (r3 I:java.lang.Float) = (r3 I:float) type: STATIC call: java.lang.Float.valueOf(float):java.lang.Float A[MD:(float):java.lang.Float (c)]\l0x0059: APUT  (r2 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) \l0x005b: CONST_STR  (r3 I:java.lang.String) =  \"Value(%s) must be equal to valueFrom(%s) plus a multiple of stepSize(%s) when using stepSize(%s)\" \l0x005d: INVOKE  (r2 I:java.lang.String) = (r3 I:java.lang.String), (r2 I:java.lang.Object[]) type: STATIC call: java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String A[MD:(java.lang.String, java.lang.Object[]):java.lang.String VARARG (c)]\l0x0061: INVOKE  (r0 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0064|0x0064: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_55 [shape=record,label="{55\:\ 0x0006|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:31:0x0006\-\>B:53:0x0006\l}"];
Node_54 [shape=record,label="{54\:\ 0x0006|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0066|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0066|0x0066: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:559)\l0x0068: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x006a: APUT  (r2 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r1 I:??[OBJECT, ARRAY] A[D('value' java.lang.Float)]) \l0x006c: IGET  (r3 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.valueFrom float \l0x006e: INVOKE  (r3 I:java.lang.Float) = (r3 I:float) type: STATIC call: java.lang.Float.valueOf(float):java.lang.Float A[MD:(float):java.lang.Float (c)] (LINE:560)\l0x0072: APUT  (r2 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) \l0x0074: IGET  (r3 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.valueTo float \l0x0076: INVOKE  (r3 I:java.lang.Float) = (r3 I:float) type: STATIC call: java.lang.Float.valueOf(float):java.lang.Float A[MD:(float):java.lang.Float (c)]\l0x007a: APUT  (r2 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) \l0x007c: CONST_STR  (r3 I:java.lang.String) =  \"Slider value(%s) must be greater or equal to valueFrom(%s), and lower or equal to valueTo(%s)\" \l0x007e: INVOKE  (r2 I:java.lang.String) = (r3 I:java.lang.String), (r2 I:java.lang.Object[]) type: STATIC call: java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String A[MD:(java.lang.String, java.lang.Object[]):java.lang.String VARARG (c)]\l0x0082: INVOKE  (r0 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0085|0x0085: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0066|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0086|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0086|RETURN\l|0x0086: RETURN    (LINE:567)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.slider.BaseSlider.validateValues((r8 'this' I:com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:40:0x0039 \-\> B:31:0x0006, BACK_EDGE: B:38:0x002f \-\> B:31:0x0006, CROSS_EDGE: B:46:0x0085 \-\> B:29:?, CROSS_EDGE: B:34:0x001e \-\> B:45:0x0066, CROSS_EDGE: B:47:0x0086 \-\> B:29:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0065: r1 'value' Ljava\/lang\/Float;\l  0x0066\-0x0086: r1 'value' Ljava\/lang\/Float;\l  0x0000\-0x0086: r8 'this' Lcom\/google\/android\/material\/slider\/BaseSlider;, signature: Lcom\/google\/android\/material\/slider\/BaseSlider\<TS;TL;TT;\>;\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_49;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_50;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_48;
Node_37 -> Node_38;
Node_38 -> Node_51[style=dashed];
Node_38 -> Node_54;
Node_51 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_52;
Node_40 -> Node_55[style=dashed];
Node_52 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_29;
Node_55 -> Node_53;
Node_53 -> Node_31;
Node_54 -> Node_53;
Node_48 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_29;
Node_50 -> Node_45;
Node_49 -> Node_47;
Node_47 -> Node_29;
}

