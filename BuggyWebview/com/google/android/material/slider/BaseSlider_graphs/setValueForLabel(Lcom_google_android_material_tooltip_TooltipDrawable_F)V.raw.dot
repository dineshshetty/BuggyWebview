digraph "CFG forcom.google.android.material.slider.BaseSlider.setValueForLabel(Lcom\/google\/android\/material\/tooltip\/TooltipDrawable;F)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.String) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l  (r6 I:float A[D('value' float)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.formatValue(float):java.lang.String A[MD:(float):java.lang.String (m)] (LINE:2242)\l0x0004: INVOKE  \l  (r5 I:com.google.android.material.tooltip.TooltipDrawable A[D('label' com.google.android.material.tooltip.TooltipDrawable)])\l  (r0 I:java.lang.CharSequence)\l type: VIRTUAL call: com.google.android.material.tooltip.TooltipDrawable.setText(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (m)]\l0x0007: IGET  (r0 I:int) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.trackSidePadding int  (LINE:2244)\l0x0009: INVOKE  (r1 I:float) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l  (r6 I:float A[D('value' float)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.normalizeValue(float):float A[MD:(float):float (m)] (LINE:2246)\l0x000d: IGET  (r2 I:int) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.trackWidth int \l0x000f: CAST (r2 I:float) = (float) (r2 I:int) \l0x0010: ARITH  (r1 I:float) = (r1 I:float) * (r2 I:float) \l0x0012: CAST (r1 I:int) = (int) (r1 I:float) \l0x0013: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0014: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.material.tooltip.TooltipDrawable A[D('label' com.google.android.material.tooltip.TooltipDrawable)])\l type: VIRTUAL call: com.google.android.material.tooltip.TooltipDrawable.getIntrinsicWidth():int A[MD:():int (m)] (LINE:2247)\l0x0018: ARITH  (r1 I:int) = (r1 I:int) \/ (2 int) \l0x001a: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x001b: INVOKE  (r1 I:int) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.calculateTrackCenter():int A[MD:():int (m)] (LINE:2248)\l0x001f: IGET  (r2 I:int) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.labelPadding int \l0x0021: IGET  (r3 I:int) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.thumbRadius int \l0x0023: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0024: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0025: INVOKE  (r2 I:int) = \l  (r5 I:com.google.android.material.tooltip.TooltipDrawable A[D('label' com.google.android.material.tooltip.TooltipDrawable)])\l type: VIRTUAL call: com.google.android.material.tooltip.TooltipDrawable.getIntrinsicHeight():int A[MD:():int (m)] (LINE:2249)\l0x0029: ARITH  (r2 I:int) = (r1 I:int A[D('top' int)]) \- (r2 I:int) \l0x002b: INVOKE  (r3 I:int) = \l  (r5 I:com.google.android.material.tooltip.TooltipDrawable A[D('label' com.google.android.material.tooltip.TooltipDrawable)])\l type: VIRTUAL call: com.google.android.material.tooltip.TooltipDrawable.getIntrinsicWidth():int A[MD:():int (m)]\l0x002f: ARITH  (r3 I:int) = (r3 I:int) + (r0 I:int A[D('left' int)]) \l0x0030: INVOKE  \l  (r5 I:com.google.android.material.tooltip.TooltipDrawable A[D('label' com.google.android.material.tooltip.TooltipDrawable)])\l  (r0 I:int A[D('left' int)])\l  (r2 I:int)\l  (r3 I:int)\l  (r1 I:int A[D('top' int)])\l type: VIRTUAL call: com.google.android.material.tooltip.TooltipDrawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (s)]\l0x0033: NEW_INSTANCE  (r2 I:android.graphics.Rect) =  android.graphics.Rect  (LINE:2253)\l0x0035: INVOKE  (r3 I:android.graphics.Rect) = \l  (r5 I:com.google.android.material.tooltip.TooltipDrawable A[D('label' com.google.android.material.tooltip.TooltipDrawable)])\l type: VIRTUAL call: com.google.android.material.tooltip.TooltipDrawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (s)]\l0x0039: INVOKE  (r2 I:android.graphics.Rect), (r3 I:android.graphics.Rect) type: DIRECT call: android.graphics.Rect.\<init\>(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (c)]\l0x003c: INVOKE  (r3 I:android.view.ViewGroup) = \l  (r4 I:android.view.View A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: STATIC call: com.google.android.material.internal.ViewUtils.getContentView(android.view.View):android.view.ViewGroup A[MD:(android.view.View):android.view.ViewGroup (m)] (LINE:2254)\l0x0040: INVOKE  \l  (r3 I:android.view.ViewGroup)\l  (r4 I:android.view.View A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l  (r2 I:android.graphics.Rect A[D('rect' android.graphics.Rect)])\l type: STATIC call: com.google.android.material.internal.DescendantOffsetUtils.offsetDescendantRect(android.view.ViewGroup, android.view.View, android.graphics.Rect):void A[MD:(android.view.ViewGroup, android.view.View, android.graphics.Rect):void (m)]\l0x0043: INVOKE  \l  (r5 I:com.google.android.material.tooltip.TooltipDrawable A[D('label' com.google.android.material.tooltip.TooltipDrawable)])\l  (r2 I:android.graphics.Rect A[D('rect' android.graphics.Rect)])\l type: VIRTUAL call: com.google.android.material.tooltip.TooltipDrawable.setBounds(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (s)] (LINE:2255)\l0x0046: INVOKE  (r3 I:com.google.android.material.internal.ViewOverlayImpl) = \l  (r4 I:android.view.View A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: STATIC call: com.google.android.material.internal.ViewUtils.getContentViewOverlay(android.view.View):com.google.android.material.internal.ViewOverlayImpl A[MD:(android.view.View):com.google.android.material.internal.ViewOverlayImpl (m)] (LINE:2257)\l0x004a: INVOKE  \l  (r3 I:com.google.android.material.internal.ViewOverlayImpl)\l  (r5 I:android.graphics.drawable.Drawable A[D('label' com.google.android.material.tooltip.TooltipDrawable)])\l type: INTERFACE call: com.google.android.material.internal.ViewOverlayImpl.add(android.graphics.drawable.Drawable):void A[MD:(android.graphics.drawable.Drawable):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x004d|RETURN\l|0x004d: RETURN    (LINE:2258)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.slider.BaseSlider.setValueForLabel((r4 'this' I:com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]), (r5 I:com.google.android.material.tooltip.TooltipDrawable A[D('label' com.google.android.material.tooltip.TooltipDrawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[D('value' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x004d: r0 'left' I\l  0x0025\-0x004d: r1 'top' I\l  0x003c\-0x004d: r2 'rect' Landroid\/graphics\/Rect;\l  0x0000\-0x004d: r4 'this' Lcom\/google\/android\/material\/slider\/BaseSlider;, signature: Lcom\/google\/android\/material\/slider\/BaseSlider\<TS;TL;TT;\>;\l  \-1 \-0x004d: r5 'label' Lcom\/google\/android\/material\/tooltip\/TooltipDrawable;\l  \-1 \-0x004d: r6 'value' F\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

