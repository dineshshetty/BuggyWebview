digraph "CFG forcom.google.android.material.slider.BaseSlider.drawThumbs(Landroid\/graphics\/Canvas;II)V" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1812)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0001|LOOP_START\lLOOP:0: B:24:0x0001\-\>B:36:0x0060\l|0x0001: IGET  (r1 I:java.util.ArrayList\<java.lang.Float\>) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.values java.util.ArrayList \l0x0003: INVOKE  (r1 I:int) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0007|0x0007: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:38:0x0063 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0009|0x0009: IGET  (r1 I:java.util.ArrayList\<java.lang.Float\>) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.values java.util.ArrayList  (LINE:1813)\l0x000b: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.ArrayList), (r0 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x000f: CHECK_CAST (r1 I:java.lang.Float) = (java.lang.Float) (r1 I:??[OBJECT, ARRAY]) \l0x0011: INVOKE  (r1 I:float) = (r1 I:java.lang.Float) type: VIRTUAL call: java.lang.Float.floatValue():float A[MD:():float (c)]\l0x0015: IGET  (r7 I:android.graphics.drawable.Drawable) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.customThumbDrawable android.graphics.drawable.Drawable  (LINE:1814)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0017|0x0017: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0022 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0019|0x0019: MOVE  (r2 I:??[OBJECT, ARRAY]) = \l  (r8 I:??[OBJECT, ARRAY] A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l  (LINE:1815)\l0x001a: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x001b: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('width' int)]) \l0x001c: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('yCenter' int)]) \l0x001d: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('value' float)]) \l0x001e: INVOKE  \l  (r2 I:com.google.android.material.slider.BaseSlider)\l  (r3 I:android.graphics.Canvas)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:float)\l  (r7 I:android.graphics.drawable.Drawable)\l type: DIRECT call: com.google.android.material.slider.BaseSlider.drawThumbDrawable(android.graphics.Canvas, int, int, float, android.graphics.drawable.Drawable):void A[MD:(android.graphics.Canvas, int, int, float, android.graphics.drawable.Drawable):void (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0060|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0060|LOOP_END\lLOOP:0: B:24:0x0001\-\>B:36:0x0060\l|0x0060: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:1812)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0022|0x0022: IGET  (r2 I:java.util.List\<android.graphics.drawable.Drawable\>) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.customThumbDrawablesForValues java.util.List  (LINE:1816)\l0x0024: INVOKE  (r2 I:int) = (r2 I:java.util.List) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0028|0x0028: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:32:0x003c \l}"];
Node_31 [shape=record,label="{31\:\ 0x002a|0x002a: IGET  (r2 I:java.util.List\<android.graphics.drawable.Drawable\>) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.customThumbDrawablesForValues java.util.List  (LINE:1817)\l0x002c: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.List), (r0 I:int A[D('i' int)]) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0030: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x0031: CHECK_CAST (r7 I:android.graphics.drawable.Drawable) = (android.graphics.drawable.Drawable) (r7 I:??[OBJECT, ARRAY]) \l0x0033: MOVE  (r2 I:??[OBJECT, ARRAY]) = \l  (r8 I:??[OBJECT, ARRAY] A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l \l0x0034: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x0035: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('width' int)]) \l0x0036: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('yCenter' int)]) \l0x0037: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('value' float)]) \l0x0038: INVOKE  \l  (r2 I:com.google.android.material.slider.BaseSlider)\l  (r3 I:android.graphics.Canvas)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:float)\l  (r7 I:android.graphics.drawable.Drawable)\l type: DIRECT call: com.google.android.material.slider.BaseSlider.drawThumbDrawable(android.graphics.Canvas, int, int, float, android.graphics.drawable.Drawable):void A[MD:(android.graphics.Canvas, int, int, float, android.graphics.drawable.Drawable):void (m)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0060|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x003c|0x003c: INVOKE  (r2 I:boolean) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.isEnabled():boolean A[MD:():boolean (c)] (LINE:1821)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0040|0x0040: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0056 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0042|0x0042: IGET  (r2 I:int) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.trackSidePadding int  (LINE:1822)\l0x0044: CAST (r2 I:float) = (float) (r2 I:int) \l0x0045: INVOKE  (r3 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l  (r1 I:float A[D('value' float)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.normalizeValue(float):float A[MD:(float):float (m)] (LINE:1823)\l0x0049: CAST (r4 I:float) = (float) (r10 I:int A[D('width' int)]) \l0x004a: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x004c: ARITH  (r2 I:float) = (r2 I:float) + (r3 I:float) \l0x004d: CAST (r3 I:float) = (float) (r11 I:int A[D('yCenter' int)]) \l0x004e: IGET  (r4 I:int) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.thumbRadius int \l0x0050: CAST (r4 I:float) = (float) (r4 I:int) \l0x0051: IGET  (r5 I:android.graphics.Paint) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.thumbPaint android.graphics.Paint \l0x0053: INVOKE  \l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r2 I:float)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawCircle(float, float, float, android.graphics.Paint):void A[MD:(float, float, float, android.graphics.Paint):void (c)] (LINE:1822)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0056|0x0056: IGET  (r7 I:com.google.android.material.shape.MaterialShapeDrawable) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.defaultThumbDrawable com.google.android.material.shape.MaterialShapeDrawable  (LINE:1825)\l0x0058: MOVE  (r2 I:??[OBJECT, ARRAY]) = \l  (r8 I:??[OBJECT, ARRAY] A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l \l0x0059: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x005a: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('width' int)]) \l0x005b: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('yCenter' int)]) \l0x005c: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('value' float)]) \l0x005d: INVOKE  \l  (r2 I:com.google.android.material.slider.BaseSlider)\l  (r3 I:android.graphics.Canvas)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:float)\l  (r7 I:android.graphics.drawable.Drawable)\l type: DIRECT call: com.google.android.material.slider.BaseSlider.drawThumbDrawable(android.graphics.Canvas, int, int, float, android.graphics.drawable.Drawable):void A[MD:(android.graphics.Canvas, int, int, float, android.graphics.drawable.Drawable):void (m)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0060|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0063|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0063|RETURN\l|0x0063: RETURN    (LINE:1828)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.slider.BaseSlider.drawThumbs((r8 'this' I:com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]), (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('yCenter' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:36:0x0060 \-\> B:24:0x0001, CROSS_EDGE: B:31:0x002a \-\> B:36:0x0060, CROSS_EDGE: B:35:0x0056 \-\> B:36:0x0060, CROSS_EDGE: B:33:0x0040 \-\> B:35:0x0056\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x0060: r1 'value' F\l  0x0001\-0x0063: r0 'i' I\l  0x0000\-0x0063: r8 'this' Lcom\/google\/android\/material\/slider\/BaseSlider;, signature: Lcom\/google\/android\/material\/slider\/BaseSlider\<TS;TL;TT;\>;\l  \-1 \-0x0063: r9 'canvas' Landroid\/graphics\/Canvas;\l  \-1 \-0x0063: r10 'width' I\l  \-1 \-0x0063: r11 'yCenter' I\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_38;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_40;
Node_40 -> Node_36;
Node_36 -> Node_24;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_41;
Node_41 -> Node_36;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_39;
Node_39 -> Node_36;
Node_38 -> Node_37;
Node_37 -> Node_22;
}

