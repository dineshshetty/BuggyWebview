digraph "CFG forcom.google.android.material.slider.BaseSlider.onTouchEvent(Landroid\/view\/MotionEvent;)Z" {
Node_44 [shape=record,label="{44\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x0000}"];
Node_47 [shape=record,label="{47\:\ 0x0005|if (isEnabled() != false) goto L5\l}"];
Node_48 [shape=record,label="{48\:\ 0x0007|RETURN\l|return false\l}"];
Node_45 [shape=record,label="{45\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x0008|float r0 = r6.getX()\lfloat r2 = (r0 \- ((float) r5.trackSidePadding)) \/ ((float) r5.trackWidth)\lr5.touchPosition = r2\lfloat r2 = java.lang.Math.max(0.0f, r2)\lr5.touchPosition = r2\lr5.touchPosition = java.lang.Math.min(1.0f, r2)\l}"];
Node_50 [shape=record,label="{50\:\ 0x002b|switch(r6.getActionMasked()) \{\l    case 0: goto L33;\l    case 1: goto L18;\l    case 2: goto L7;\l    case 3: goto L18;\l    default: goto L38;\l\}\l}"];
Node_52 [shape=record,label="{52\:\ 0x0030}"];
Node_53 [shape=record,label="{53\:\ 0x0032|if (r5.thumbIsPressed != false) goto L15\l}"];
Node_54 [shape=record,label="{54\:\ 0x0034}"];
Node_55 [shape=record,label="{55\:\ 0x0038|if (isInVerticalScrollingContainer() == false) goto L14\l}"];
Node_56 [shape=record,label="{56\:\ 0x003a}"];
Node_57 [shape=record,label="{57\:\ 0x0047|if ((java.lang.Math.abs(r0 \- r5.touchDownX) \> ((float) r5.scaledTouchSlop) ? 1 : (java.lang.Math.abs(r0 \- r5.touchDownX) == ((float) r5.scaledTouchSlop) ? 0 : \-1)) \>= 0) goto L14\l}"];
Node_58 [shape=record,label="{58\:\ 0x0049|RETURN\l|return false\l}"];
Node_59 [shape=record,label="{59\:\ 0x004a|getParent().requestDisallowInterceptTouchEvent(true)\lonStartTrackingTouch()\l}"];
Node_60 [shape=record,label="{60\:\ 0x0054}"];
Node_61 [shape=record,label="{61\:\ 0x0058|if (pickActiveThumb() != false) goto L17\l}"];
Node_63 [shape=record,label="{63\:\ 0x005c|r5.thumbIsPressed = true\lsnapTouchPosition()\lupdateHaloHotspot()\linvalidate()\l}"];
Node_64 [shape=record,label="{64\:\ 0x0069|r5.thumbIsPressed = false\landroid.view.MotionEvent r1 = r5.lastEvent\l}"];
Node_65 [shape=record,label="{65\:\ 0x006d|if (r1 == null) goto L29\l}"];
Node_66 [shape=record,label="{66\:\ 0x006f}"];
Node_67 [shape=record,label="{67\:\ 0x0073|if (r1.getActionMasked() != 0) goto L29\l}"];
Node_68 [shape=record,label="{68\:\ 0x0075}"];
Node_69 [shape=record,label="{69\:\ 0x0089|if ((java.lang.Math.abs(r5.lastEvent.getX() \- r6.getX()) \> ((float) r5.scaledTouchSlop) ? 1 : (java.lang.Math.abs(r5.lastEvent.getX() \- r6.getX()) == ((float) r5.scaledTouchSlop) ? 0 : \-1)) \> 0) goto L29\l}"];
Node_70 [shape=record,label="{70\:\ 0x008b}"];
Node_71 [shape=record,label="{71\:\ 0x009f|if ((java.lang.Math.abs(r5.lastEvent.getY() \- r6.getY()) \> ((float) r5.scaledTouchSlop) ? 1 : (java.lang.Math.abs(r5.lastEvent.getY() \- r6.getY()) == ((float) r5.scaledTouchSlop) ? 0 : \-1)) \> 0) goto L29\l}"];
Node_72 [shape=record,label="{72\:\ 0x00a1}"];
Node_73 [shape=record,label="{73\:\ 0x00a5|if (pickActiveThumb() == false) goto L29\l}"];
Node_74 [shape=record,label="{74\:\ 0x00a7|onStartTrackingTouch()\l}"];
Node_75 [shape=record,label="{75\:\ 0x00aa}"];
Node_76 [shape=record,label="{76\:\ 0x00ad|if (r5.activeThumbIdx == (\-1)) goto L32\l}"];
Node_77 [shape=record,label="{77\:\ 0x00af|snapTouchPosition()\lr5.activeThumbIdx = \-1\lonStopTrackingTouch()\l}"];
Node_78 [shape=record,label="{78\:\ 0x00b7|invalidate()\l}"];
Node_79 [shape=record,label="{79\:\ 0x00bb|r5.touchDownX = r0\l}"];
Node_80 [shape=record,label="{80\:\ 0x00c1|if (isInVerticalScrollingContainer() == false) goto L35\l}"];
Node_82 [shape=record,label="{82\:\ 0x00c4|getParent().requestDisallowInterceptTouchEvent(true)\l}"];
Node_83 [shape=record,label="{83\:\ 0x00cf|if (pickActiveThumb() != false) goto L37\l}"];
Node_85 [shape=record,label="{85\:\ 0x00d2|requestFocus()\lr5.thumbIsPressed = true\lsnapTouchPosition()\lupdateHaloHotspot()\linvalidate()\lonStartTrackingTouch()\l}"];
Node_86 [shape=record,label="{86\:\ 0x00e4|setPressed(r5.thumbIsPressed)\lr5.lastEvent = android.view.MotionEvent.obtain(r6)\l}"];
Node_87 [shape=record,label="{87\:\ 0x00ef|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.slider.BaseSlider.onTouchEvent((r5v0 'this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]), (r6v0 'event' android.view.MotionEvent A[D('event' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:58:0x0049 \-\> B:45:?, CROSS_EDGE: B:87:0x00ef \-\> B:45:?, CROSS_EDGE: B:61:0x0058 \-\> B:86:0x00e4, CROSS_EDGE: B:55:0x0038 \-\> B:59:0x004a, CROSS_EDGE: B:53:0x0032 \-\> B:60:0x0054, CROSS_EDGE: B:78:0x00b7 \-\> B:86:0x00e4, CROSS_EDGE: B:76:0x00ad \-\> B:78:0x00b7, CROSS_EDGE: B:73:0x00a5 \-\> B:75:0x00aa, CROSS_EDGE: B:71:0x009f \-\> B:75:0x00aa, CROSS_EDGE: B:69:0x0089 \-\> B:75:0x00aa, CROSS_EDGE: B:67:0x0073 \-\> B:75:0x00aa, CROSS_EDGE: B:65:0x006d \-\> B:75:0x00aa, CROSS_EDGE: B:85:0x00d2 \-\> B:86:0x00e4, CROSS_EDGE: B:83:0x00cf \-\> B:86:0x00e4, CROSS_EDGE: B:80:0x00c1 \-\> B:86:0x00e4, CROSS_EDGE: B:50:0x002b \-\> B:86:0x00e4\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onTouchEvent(android.view.MotionEvent):boolean\}]\l}"];
MethodNode -> Node_44;Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_45;
Node_49 -> Node_50;
Node_50 -> Node_52;
Node_50 -> Node_64;
Node_50 -> Node_79;
Node_50 -> Node_86;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_60;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_59;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_45;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_63;
Node_61 -> Node_86[style=dashed];
Node_63 -> Node_86;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_75;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_75;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_75;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_75;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_75;
Node_74 -> Node_75;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_78;
Node_77 -> Node_78;
Node_78 -> Node_86;
Node_79 -> Node_80;
Node_80 -> Node_82;
Node_80 -> Node_86[style=dashed];
Node_82 -> Node_83;
Node_83 -> Node_85;
Node_83 -> Node_86[style=dashed];
Node_85 -> Node_86;
Node_86 -> Node_87;
Node_87 -> Node_45;
}

