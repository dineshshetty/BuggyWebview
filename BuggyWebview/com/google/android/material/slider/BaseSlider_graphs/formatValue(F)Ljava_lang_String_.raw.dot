digraph "CFG forcom.google.android.material.slider.BaseSlider.formatValue(F)Ljava\/lang\/String;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.hasLabelFormatter():boolean A[MD:():boolean (m)] (LINE:2234)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000d \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: IGET  (r0 I:com.google.android.material.slider.LabelFormatter) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.formatter com.google.android.material.slider.LabelFormatter  (LINE:2235)\l0x0008: INVOKE  (r0 I:java.lang.String) = (r0 I:com.google.android.material.slider.LabelFormatter), (r5 I:float A[D('value' float)]) type: INTERFACE call: com.google.android.material.slider.LabelFormatter.getFormattedValue(float):java.lang.String A[MD:(float):java.lang.String (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:java.lang.String) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|0x000d: CAST (r0 I:int) = (int) (r5 I:float A[D('value' float)])  (LINE:2238)\l0x000e: CAST (r0 I:float) = (float) (r0 I:int) \l0x000f: CMP_L  (r0 I:int) = (r0 I:float), (r5 I:float A[D('value' float)]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0016 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|0x0013: CONST_STR  (r0 I:java.lang.String) =  \"%.0f\" \l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|0x0018: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0019: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x001b: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001c: INVOKE  (r3 I:java.lang.Float) = (r5 I:float A[D('value' float)]) type: STATIC call: java.lang.Float.valueOf(float):java.lang.Float A[MD:(float):java.lang.Float (c)]\l0x0020: APUT  (r1 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) \l0x0022: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String), (r1 I:java.lang.Object[]) type: STATIC call: java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String A[MD:(java.lang.String, java.lang.Object[]):java.lang.String VARARG (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|RETURN\l|0x0026: RETURN  (r0 I:java.lang.String) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|0x0016: CONST_STR  (r0 I:java.lang.String) =  \"%.2f\" \l}"];
MethodNode[shape=record,label="{public java.lang.String com.google.android.material.slider.BaseSlider.formatValue((r4 'this' I:com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]), (r5 I:float A[D('value' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0026 \-\> B:13:?, CROSS_EDGE: B:21:0x0016 \-\> B:22:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0026: r4 'this' Lcom\/google\/android\/material\/slider\/BaseSlider;, signature: Lcom\/google\/android\/material\/slider\/BaseSlider\<TS;TL;TT;\>;\l  \-1 \-0x0026: r5 'value' F\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_22;
}

