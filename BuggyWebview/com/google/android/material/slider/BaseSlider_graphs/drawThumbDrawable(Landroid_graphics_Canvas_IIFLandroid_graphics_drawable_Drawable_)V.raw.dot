digraph "CFG forcom.google.android.material.slider.BaseSlider.drawThumbDrawable(Landroid\/graphics\/Canvas;IIFLandroid\/graphics\/drawable\/Drawable;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:1832)\l0x0003: IGET  (r0 I:int) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.trackSidePadding int  (LINE:1833)\l0x0005: INVOKE  (r1 I:float) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l  (r8 I:float A[D('value' float)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.normalizeValue(float):float A[MD:(float):float (m)] (LINE:1835)\l0x0009: CAST (r2 I:float) = (float) (r6 I:int A[D('width' int)]) \l0x000a: ARITH  (r1 I:float) = (r1 I:float) * (r2 I:float) \l0x000c: CAST (r1 I:int) = (int) (r1 I:float) \l0x000d: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x000e: CAST (r0 I:float) = (float) (r0 I:int) \l0x000f: INVOKE  (r1 I:android.graphics.Rect) = (r9 I:android.graphics.drawable.Drawable A[D('thumbDrawable' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (c)] (LINE:1836)\l0x0013: INVOKE  (r1 I:int) = (r1 I:android.graphics.Rect) type: VIRTUAL call: android.graphics.Rect.width():int A[MD:():int (c)]\l0x0017: CAST (r1 I:float) = (float) (r1 I:int) \l0x0018: CONST  (r2 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x001a: ARITH  (r1 I:float) = (r1 I:float) \/ (r2 I:float) \l0x001b: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x001c: CAST (r1 I:float) = (float) (r7 I:int A[D('top' int)]) \l0x001d: INVOKE  (r3 I:android.graphics.Rect) = (r9 I:android.graphics.drawable.Drawable A[D('thumbDrawable' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (c)] (LINE:1837)\l0x0021: INVOKE  (r3 I:int) = (r3 I:android.graphics.Rect) type: VIRTUAL call: android.graphics.Rect.height():int A[MD:():int (c)]\l0x0025: CAST (r3 I:float) = (float) (r3 I:int) \l0x0026: ARITH  (r3 I:float) = (r3 I:float) \/ (r2 I:float) \l0x0027: ARITH  (r1 I:float) = (r1 I:float) \- (r3 I:float) \l0x0028: INVOKE  (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r0 I:float), (r1 I:float) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)] (LINE:1833)\l0x002b: INVOKE  \l  (r9 I:android.graphics.drawable.Drawable A[D('thumbDrawable' android.graphics.drawable.Drawable)])\l  (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)] (LINE:1838)\l0x002e: INVOKE  (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.restore():void A[MD:():void (c)] (LINE:1839)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|RETURN\l|0x0031: RETURN    (LINE:1840)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.slider.BaseSlider.drawThumbDrawable((r4 'this' I:com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]), (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:float A[D('value' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.graphics.drawable.Drawable A[D('thumbDrawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0031: r4 'this' Lcom\/google\/android\/material\/slider\/BaseSlider;, signature: Lcom\/google\/android\/material\/slider\/BaseSlider\<TS;TL;TT;\>;\l  \-1 \-0x0031: r5 'canvas' Landroid\/graphics\/Canvas;\l  \-1 \-0x0031: r6 'width' I\l  \-1 \-0x0031: r7 'top' I\l  \-1 \-0x0031: r8 'value' F\l  \-1 \-0x0031: r9 'thumbDrawable' Landroid\/graphics\/drawable\/Drawable;\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

