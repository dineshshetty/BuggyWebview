digraph "CFG forcom.google.android.material.slider.BaseSlider.moveFocus(I)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|int r0 = r11.focusedThumbIdx\llong r1 = ((long) r0) + ((long) r12)\lint r3 = (int) androidx.core.math.MathUtils.clamp(r1, 0, (long) (r11.values.size() \- 1))\lr11.focusedThumbIdx = r3\l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|if (r3 != r0) goto L5\l}"];
Node_15 [shape=record,label="{15\:\ 0x001a|RETURN\l|return false\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x001c}"];
Node_18 [shape=record,label="{18\:\ 0x001f|if (r11.activeThumbIdx == (\-1)) goto L8\l}"];
Node_19 [shape=record,label="{19\:\ 0x0021|r11.activeThumbIdx = r3\l}"];
Node_20 [shape=record,label="{20\:\ 0x0023|updateHaloHotspot()\lpostInvalidate()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0029|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.material.slider.BaseSlider.moveFocus((r11v0 'this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]), (r12v0 'direction' int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0029 \-\> B:12:?, CROSS_EDGE: B:18:0x001f \-\> B:20:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_12;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

