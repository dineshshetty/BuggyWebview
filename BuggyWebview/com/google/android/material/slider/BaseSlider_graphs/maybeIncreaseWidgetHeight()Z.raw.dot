digraph "CFG forcom.google.android.material.slider.BaseSlider.maybeIncreaseWidgetHeight()Z" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.getPaddingTop():int A[MD:():int (c)] (LINE:1295)\l0x0004: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.getPaddingBottom():int A[MD:():int (c)]\l0x0008: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0009: IGET  (r1 I:int) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.trackHeight int  (LINE:1296)\l0x000b: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int A[D('topAndBottomPaddings' int)]) \l0x000c: IGET  (r2 I:int) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.thumbRadius int  (LINE:1297)\l0x000e: ARITH  (r2 I:int) = (r2 I:int) * (2 int) \l0x0010: INVOKE  (r3 I:int) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.getPaddingTop():int A[MD:():int (c)]\l0x0014: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0015: INVOKE  (r3 I:int) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.getPaddingBottom():int A[MD:():int (c)]\l0x0019: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x001a: IGET  (r3 I:int) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.minWidgetHeight int  (LINE:1299)\l0x001c: INVOKE  (r4 I:int) = (r1 I:int A[D('minHeightRequiredByTrack' int)]), (r2 I:int A[D('minHeightRequiredByThumb' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:1300)\l0x0020: INVOKE  (r3 I:int) = (r3 I:int), (r4 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0024: IGET  (r4 I:int) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.widgetHeight int  (LINE:1301)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newWidgetHeight' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002a \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|RETURN\l|0x0028: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1302)\l0x0029: RETURN  (r4 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|0x002a: IPUT  \l  (r3 I:int A[D('newWidgetHeight' int)])\l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.widgetHeight int  (LINE:1304)\l0x002c: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1305)\l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|RETURN\l|0x002d: RETURN  (r4 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean com.google.android.material.slider.BaseSlider.maybeIncreaseWidgetHeight((r5 'this' I:com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x002d \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x002d: r0 'topAndBottomPaddings' I\l  0x000c\-0x002d: r1 'minHeightRequiredByTrack' I\l  0x001a\-0x002d: r2 'minHeightRequiredByThumb' I\l  0x0024\-0x002d: r3 'newWidgetHeight' I\l  0x0000\-0x002d: r5 'this' Lcom\/google\/android\/material\/slider\/BaseSlider;, signature: Lcom\/google\/android\/material\/slider\/BaseSlider\<TS;TL;TT;\>;\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

