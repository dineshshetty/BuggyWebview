digraph "CFG forcom.google.android.material.slider.BaseSlider.calculateIncrementForKey(I)Ljava\/lang\/Float;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000}"];
Node_28 [shape=record,label="{28\:\ 0x0002|if (r2.isLongPress == false) goto L23\l}"];
Node_29 [shape=record,label="{29\:\ 0x0004|float r0 = calculateStepIncrement(20)\l}"];
Node_31 [shape=record,label="{31\:\ 0x000f|PHI: r0 \l  PHI: (r0v2 'increment' float) = (r0v1 'increment' float), (r0v4 'increment' float) binds: [B:30:0x000b, B:29:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|switch(r3) \{\l    case 21: goto L17;\l    case 22: goto L11;\l    case 69: goto L9;\l    case 70: goto L7;\l    case 81: goto L7;\l    default: goto L5;\l\}\l}"];
Node_32 [shape=record,label="{32\:\ 0x0012|RETURN\l|return null\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0014}"];
Node_35 [shape=record,label="{35\:\ 0x0018|RETURN\l|return java.lang.Float.valueOf(r0)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0019}"];
Node_37 [shape=record,label="{37\:\ 0x001e|RETURN\l|return java.lang.Float.valueOf(\-r0)\l}"];
Node_38 [shape=record,label="{38\:\ 0x001f}"];
Node_39 [shape=record,label="{39\:\ 0x0023|if (isRtl() == false) goto L16\l}"];
Node_40 [shape=record,label="{40\:\ 0x0025|float r1 = \-r0\l}"];
Node_42 [shape=record,label="{42\:\ 0x0028|PHI: r1 \l  PHI: (r1v7 float) = (r1v6 float), (r1v9 float) binds: [B:41:0x0027, B:40:0x0025] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_43 [shape=record,label="{43\:\ 0x002c|RETURN\l|return java.lang.Float.valueOf(r1)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0027|r1 = r0\l}"];
Node_44 [shape=record,label="{44\:\ 0x002d}"];
Node_45 [shape=record,label="{45\:\ 0x0031|if (isRtl() == false) goto L22\l}"];
Node_46 [shape=record,label="{46\:\ 0x0033|r1 = r0\l}"];
Node_48 [shape=record,label="{48\:\ 0x0036|PHI: r1 \l  PHI: (r1v2 float) = (r1v1 float), (r1v4 float) binds: [B:47:0x0035, B:46:0x0033] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_49 [shape=record,label="{49\:\ 0x003a|RETURN\l|return java.lang.Float.valueOf(r1)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0035|float r1 = \-r0\l}"];
Node_30 [shape=record,label="{30\:\ 0x000b|float r0 = calculateStepIncrement()\l}"];
MethodNode[shape=record,label="{private java.lang.Float com.google.android.material.slider.BaseSlider.calculateIncrementForKey((r2v0 'this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]), (r3v0 'keyCode' int A[D('keyCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0018 \-\> B:26:?, CROSS_EDGE: B:37:0x001e \-\> B:26:?, CROSS_EDGE: B:43:0x002c \-\> B:26:?, CROSS_EDGE: B:41:0x0027 \-\> B:42:0x0028, CROSS_EDGE: B:49:0x003a \-\> B:26:?, CROSS_EDGE: B:47:0x0035 \-\> B:48:0x0036, CROSS_EDGE: B:30:0x000b \-\> B:31:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_34;
Node_31 -> Node_36;
Node_31 -> Node_38;
Node_31 -> Node_44;
Node_32 -> Node_26;
Node_34 -> Node_35;
Node_35 -> Node_26;
Node_36 -> Node_37;
Node_37 -> Node_26;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_26;
Node_41 -> Node_42;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_26;
Node_47 -> Node_48;
Node_30 -> Node_31;
}

