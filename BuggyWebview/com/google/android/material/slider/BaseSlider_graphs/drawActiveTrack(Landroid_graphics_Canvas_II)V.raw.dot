digraph "CFG forcom.google.android.material.slider.BaseSlider.drawActiveTrack(Landroid\/graphics\/Canvas;II)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:float[]) = \l  (r10 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.getActiveRange():float[] A[MD:():float[] (m)] (LINE:1778)\l0x0004: IGET  (r1 I:int) = \l  (r10 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.trackSidePadding int  (LINE:1779)\l0x0006: CAST (r2 I:float) = (float) (r1 I:int) \l0x0007: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0008: AGET  (r3 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][] A[D('activeRange' float[])]), (r3 I:??[int, short, byte, char]) \l0x000a: CAST (r4 I:float) = (float) (r12 I:int A[D('width' int)]) \l0x000b: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x000d: ARITH  (r2 I:float) = (r2 I:float) + (r3 I:float) \l0x000e: CAST (r1 I:float) = (float) (r1 I:int)  (LINE:1780)\l0x000f: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: AGET  (r3 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][] A[D('activeRange' float[])]), (r3 I:??[int, short, byte, char]) \l0x0012: CAST (r4 I:float) = (float) (r12 I:int A[D('width' int)]) \l0x0013: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x0015: ARITH  (r1 I:float) = (r1 I:float) + (r3 I:float) \l0x0016: CAST (r6 I:float) = (float) (r13 I:int A[D('yCenter' int)])  (LINE:1781)\l0x0017: CAST (r8 I:float) = (float) (r13 I:int A[D('yCenter' int)]) \l0x0018: IGET  (r9 I:android.graphics.Paint) = \l  (r10 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.activeTrackPaint android.graphics.Paint \l0x001a: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x001b: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('left' float)]) \l0x001c: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('right' float)]) \l0x001d: INVOKE  (r4 I:android.graphics.Canvas), (r5 I:float), (r6 I:float), (r7 I:float), (r8 I:float), (r9 I:android.graphics.Paint) type: VIRTUAL call: android.graphics.Canvas.drawLine(float, float, float, float, android.graphics.Paint):void A[MD:(float, float, float, float, android.graphics.Paint):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|RETURN\l|0x0020: RETURN    (LINE:1782)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.slider.BaseSlider.drawActiveTrack((r10 'this' I:com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]), (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('yCenter' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0020: r0 'activeRange' [F\l  0x0016\-0x0020: r1 'left' F\l  0x000e\-0x0020: r2 'right' F\l  0x0000\-0x0020: r10 'this' Lcom\/google\/android\/material\/slider\/BaseSlider;, signature: Lcom\/google\/android\/material\/slider\/BaseSlider\<TS;TL;TT;\>;\l  \-1 \-0x0020: r11 'canvas' Landroid\/graphics\/Canvas;\l  \-1 \-0x0020: r12 'width' I\l  \-1 \-0x0020: r13 'yCenter' I\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

