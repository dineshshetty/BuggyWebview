digraph "CFG forcom.google.android.material.slider.BaseSlider.setFocusedThumbIndex(I)V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|if (r3 \< 0) goto L7\l}"];
Node_12 [shape=record,label="{12\:\ 0x0002}"];
Node_13 [shape=record,label="{13\:\ 0x0008|if (r3 \>= r2.values.size()) goto L7\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|r2.focusedThumbIdx = r3\lr2.accessibilityHelper.requestKeyboardFocusForVirtualView(r3)\lpostInvalidate()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0014|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0015}"];
Node_17 [shape=record,label="{17\:\ 0x001c|throw new java.lang.IllegalArgumentException(\"index out of range\")\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.slider.BaseSlider.setFocusedThumbIndex((r2v0 'this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]), (r3v0 'index' int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x001c \-\> B:10:?, CROSS_EDGE: B:11:0x0000 \-\> B:16:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\lMETHOD_OVERRIDE: [com.google.android.material.slider.BaseSlider.setFocusedThumbIndex(int):void]\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_10;
Node_16 -> Node_17;
Node_17 -> Node_10;
}

