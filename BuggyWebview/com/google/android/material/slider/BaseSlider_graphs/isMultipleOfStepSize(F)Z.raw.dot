digraph "CFG forcom.google.android.material.slider.BaseSlider.isMultipleOfStepSize(F)Z" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.math.BigDecimal) =  java.math.BigDecimal  (LINE:540)\l0x0002: INVOKE  (r1 I:java.lang.String) = (r8 I:float A[D('value' float)]) type: STATIC call: java.lang.Float.toString(float):java.lang.String A[MD:(float):java.lang.String (c)] (LINE:541)\l0x0006: INVOKE  (r0 I:java.math.BigDecimal), (r1 I:java.lang.String) type: DIRECT call: java.math.BigDecimal.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x0009: NEW_INSTANCE  (r1 I:java.math.BigDecimal) =  java.math.BigDecimal \l0x000b: IGET  (r2 I:float) = \l  (r7 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.stepSize float \l0x000d: INVOKE  (r2 I:java.lang.String) = (r2 I:float) type: STATIC call: java.lang.Float.toString(float):java.lang.String A[MD:(float):java.lang.String (c)] (LINE:542)\l0x0011: INVOKE  (r1 I:java.math.BigDecimal), (r2 I:java.lang.String) type: DIRECT call: java.math.BigDecimal.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x0014: SGET  (r2 I:java.math.MathContext) =  java.math.MathContext.DECIMAL64 java.math.MathContext \l0x0016: INVOKE  (r0 I:java.math.BigDecimal) = (r0 I:java.math.BigDecimal), (r1 I:java.math.BigDecimal), (r2 I:java.math.MathContext) type: VIRTUAL call: java.math.BigDecimal.divide(java.math.BigDecimal, java.math.MathContext):java.math.BigDecimal A[MD:(java.math.BigDecimal, java.math.MathContext):java.math.BigDecimal (c)]\l0x001a: INVOKE  (r0 I:double) = (r0 I:java.math.BigDecimal) type: VIRTUAL call: java.math.BigDecimal.doubleValue():double A[MD:():double (c)] (LINE:543)\l0x001e: INVOKE  (r2 I:long) = (r0 I:double A[D('result' double)]) type: STATIC call: java.lang.Math.round(double):long A[MD:(double):long (c)] (LINE:546)\l0x0022: CAST (r2 I:double) = (double) (r2 I:long) \l0x0023: ARITH  (r2 I:double) = (r2 I:double) \- (r0 I:double A[D('result' double)]) \l0x0024: INVOKE  (r2 I:double) = (r2 I:double) type: STATIC call: java.lang.Math.abs(double):double A[MD:(double):double (c)]\l0x0028: CONST  (r4 I:??[long, double]) = (4547007122018943789(0x3f1a36e2eb1c432d, double:1.0E\-4) ??[long, double]) \l0x002d: CMP_G  (r6 I:int) = (r2 I:double), (r4 I:double) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|0x002f: IF  (r6 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:13:0x0033 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|SYNTHETIC\lRETURN\l|0x0031: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0034: RETURN  (r2 I:boolean) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|RETURN\lORIG_RETURN\l|0x0033: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0034: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean com.google.android.material.slider.BaseSlider.isMultipleOfStepSize((r7 'this' I:com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]), (r8 I:float A[D('value' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0033 \-\> B:14:0x0034\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x0034: r0 'result' D\l  0x0000\-0x0034: r7 'this' Lcom\/google\/android\/material\/slider\/BaseSlider;, signature: Lcom\/google\/android\/material\/slider\/BaseSlider\<TS;TL;TT;\>;\l  \-1 \-0x0034: r8 'value' F\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_9;
Node_13 -> Node_9;
}

