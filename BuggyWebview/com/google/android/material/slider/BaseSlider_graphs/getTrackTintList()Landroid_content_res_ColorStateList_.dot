digraph "CFG forcom.google.android.material.slider.BaseSlider.getTrackTintList()Landroid\/content\/res\/ColorStateList;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000}"];
Node_11 [shape=record,label="{11\:\ 0x0008|if (r2.trackColorInactive.equals(r2.trackColorActive) == false) goto L6\l}"];
Node_12 [shape=record,label="{12\:\ 0x000a}"];
Node_13 [shape=record,label="{13\:\ 0x000c|RETURN\l|return r2.trackColorActive\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000d}"];
Node_15 [shape=record,label="{15\:\ 0x0014|throw new java.lang.IllegalStateException(\"The inactive and active parts of the track are different colors. Use the getInactiveTrackColor() and getActiveTrackColor() methods instead.\")\l}"];
MethodNode[shape=record,label="{public android.content.res.ColorStateList com.google.android.material.slider.BaseSlider.getTrackTintList((r2v0 'this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0014 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\lMETHOD_OVERRIDE: [com.google.android.material.slider.BaseSlider.getTrackTintList():android.content.res.ColorStateList]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

