digraph "CFG forcom.google.android.material.slider.BaseSlider.validateValues()V" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|java.util.Iterator r0 = r8.values.iterator()\l}"];
Node_31 [shape=record,label="{31\:\ 0x0006|LOOP_START\lLOOP:0: B:31:0x0006\-\>B:53:0x0006\l}"];
Node_32 [shape=record,label="{32\:\ 0x000a|if (r0.hasNext() == false) goto L24\l}"];
Node_33 [shape=record,label="{33\:\ 0x000c|java.lang.Float r1 = r0.next()\l}"];
Node_34 [shape=record,label="{34\:\ 0x001e|if ((r1.floatValue() \> r8.valueFrom ? 1 : (r1.floatValue() == r8.valueFrom ? 0 : \-1)) \< 0) goto L23\l}"];
Node_35 [shape=record,label="{35\:\ 0x0020}"];
Node_36 [shape=record,label="{36\:\ 0x0028|if ((r1.floatValue() \> r8.valueTo ? 1 : (r1.floatValue() == r8.valueTo ? 0 : \-1)) \> 0) goto L20\l}"];
Node_37 [shape=record,label="{37\:\ 0x002a}"];
Node_38 [shape=record,label="{38\:\ 0x002f|if ((r8.stepSize \> 0.0f ? 1 : (r8.stepSize == 0.0f ? 0 : \-1)) \<= 0) goto L19\l}"];
Node_51 [shape=record,label="{51\:\ 0x0031|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0031}"];
Node_40 [shape=record,label="{40\:\ 0x0039|if (valueLandsOnTick(r1.floatValue()) == false) goto L13\l}"];
Node_52 [shape=record,label="{52\:\ 0x003c|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x003c}"];
Node_43 [shape=record,label="{43\:\ 0x0064|throw new java.lang.IllegalStateException(java.lang.String.format(com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_DISCRETE_VALUE, new java.lang.Object[]\{r1, java.lang.Float.valueOf(r8.valueFrom), java.lang.Float.valueOf(r8.stepSize), java.lang.Float.valueOf(r8.stepSize)\}))\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_55 [shape=record,label="{55\:\ 0x0006|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:31:0x0006\-\>B:53:0x0006\l}"];
Node_54 [shape=record,label="{54\:\ 0x0006|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0066|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0066}"];
Node_46 [shape=record,label="{46\:\ 0x0085|throw new java.lang.IllegalStateException(java.lang.String.format(com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_VALUE, new java.lang.Object[]\{r1, java.lang.Float.valueOf(r8.valueFrom), java.lang.Float.valueOf(r8.valueTo)\}))\l}"];
Node_50 [shape=record,label="{50\:\ 0x0066|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0086|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0086|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.slider.BaseSlider.validateValues((r8v0 'this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:40:0x0039 \-\> B:31:0x0006, BACK_EDGE: B:38:0x002f \-\> B:31:0x0006, CROSS_EDGE: B:46:0x0085 \-\> B:29:?, CROSS_EDGE: B:34:0x001e \-\> B:45:0x0066, CROSS_EDGE: B:47:0x0086 \-\> B:29:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_49;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_50;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_48;
Node_37 -> Node_38;
Node_38 -> Node_51[style=dashed];
Node_38 -> Node_54;
Node_51 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_52;
Node_40 -> Node_55[style=dashed];
Node_52 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_29;
Node_55 -> Node_53;
Node_53 -> Node_31;
Node_54 -> Node_53;
Node_48 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_29;
Node_50 -> Node_45;
Node_49 -> Node_47;
Node_47 -> Node_29;
}

