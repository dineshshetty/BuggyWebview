digraph "CFG forcom.google.android.material.slider.BaseSlider.isInVerticalScrollingContainer()Z" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.ViewParent) = \l  (r5 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: VIRTUAL call: com.google.android.material.slider.BaseSlider.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:2275)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|LOOP_START\lLOOP:0: B:23:0x0004\-\>B:34:0x0024\l|0x0004: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('p' android.view.ViewParent)]) android.view.ViewGroup  (LINE:2276)\l0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0029 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0009|0x0009: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('p' android.view.ViewParent)])  (LINE:2277)\l0x000a: CHECK_CAST (r1 I:android.view.ViewGroup) = (android.view.ViewGroup) (r1 I:??[OBJECT, ARRAY]) \l0x000c: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:2278)\l0x000d: INVOKE  (r4 I:boolean) = (r1 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup)]), (r3 I:int) type: VIRTUAL call: android.view.ViewGroup.canScrollVertically(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|0x0011: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x001a \l}"];
Node_27 [shape=record,label="{27\:\ 0x0013|0x0013: CONST  (r4 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0014: INVOKE  (r4 I:boolean) = (r1 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup)]), (r4 I:int) type: VIRTUAL call: android.view.ViewGroup.canScrollVertically(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|0x0018: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001b \l}"];
Node_30 [shape=record,label="{30\:\ 0x001b|0x001b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('canScrollVertically' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0024  (LINE:2279)\l}"];
Node_31 [shape=record,label="{31\:\ 0x001d|0x001d: INVOKE  (r4 I:boolean) = (r1 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.shouldDelayChildPressedState():boolean A[MD:():boolean (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0021|0x0021: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0024 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0023|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0023|RETURN\l|0x0023: RETURN  (r3 I:boolean)  (LINE:2280)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0024|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0024|LOOP_END\lLOOP:0: B:23:0x0004\-\>B:34:0x0024\l|0x0024: INVOKE  (r0 I:android.view.ViewParent A[D('p' android.view.ViewParent)]) = (r0 I:android.view.ViewParent A[D('p' android.view.ViewParent)]) type: INTERFACE call: android.view.ViewParent.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:2282)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0024|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x001a|0x001a: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0029|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0029|RETURN\l|0x0029: RETURN  (r2 I:boolean)  (LINE:2284)\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.material.slider.BaseSlider.isInVerticalScrollingContainer((r5 'this' I:com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x0024 \-\> B:23:0x0004, CROSS_EDGE: B:30:0x001b \-\> B:34:0x0024, CROSS_EDGE: B:28:0x0018 \-\> B:30:0x001b, CROSS_EDGE: B:26:0x0011 \-\> B:29:0x001a, CROSS_EDGE: B:35:0x0029 \-\> B:21:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x0028: r1 'parent' Landroid\/view\/ViewGroup;\l  0x001b\-0x0028: r2 'canScrollVertically' Z\l  0x0004\-0x0029: r0 'p' Landroid\/view\/ViewParent;\l  0x0000\-0x0029: r5 'this' Lcom\/google\/android\/material\/slider\/BaseSlider;, signature: Lcom\/google\/android\/material\/slider\/BaseSlider\<TS;TL;TT;\>;\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_37;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_38;
Node_31 -> Node_32;
Node_32 -> Node_36[style=dashed];
Node_32 -> Node_39;
Node_36 -> Node_33;
Node_33 -> Node_21;
Node_39 -> Node_34;
Node_34 -> Node_23;
Node_38 -> Node_34;
Node_29 -> Node_30;
Node_37 -> Node_35;
Node_35 -> Node_21;
}

