digraph "CFG forcom.google.android.material.slider.BaseSlider.setThumbRadius(I)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: IGET  (r0 I:int) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.thumbRadius int  (LINE:1053)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0002|0x0002: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('radius' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0005 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|RETURN\l|0x0004: RETURN    (LINE:1054)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0005|0x0005: IPUT  \l  (r5 I:int A[D('radius' int)])\l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.thumbRadius int  (LINE:1057)\l0x0007: IGET  (r0 I:com.google.android.material.shape.MaterialShapeDrawable) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.defaultThumbDrawable com.google.android.material.shape.MaterialShapeDrawable  (LINE:1059)\l0x0009: INVOKE  (r1 I:com.google.android.material.shape.ShapeAppearanceModel$Builder) =  type: STATIC call: com.google.android.material.shape.ShapeAppearanceModel.builder():com.google.android.material.shape.ShapeAppearanceModel$Builder A[MD:():com.google.android.material.shape.ShapeAppearanceModel$Builder (m)] (LINE:1060)\l0x000d: IGET  (r2 I:int) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.thumbRadius int \l0x000f: CAST (r2 I:float) = (float) (r2 I:int) \l0x0010: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0011: INVOKE  (r1 I:com.google.android.material.shape.ShapeAppearanceModel$Builder) = (r1 I:com.google.android.material.shape.ShapeAppearanceModel$Builder), (r3 I:int), (r2 I:float) type: VIRTUAL call: com.google.android.material.shape.ShapeAppearanceModel.Builder.setAllCorners(int, float):com.google.android.material.shape.ShapeAppearanceModel$Builder A[MD:(int, float):com.google.android.material.shape.ShapeAppearanceModel$Builder (m)]\l0x0015: INVOKE  (r1 I:com.google.android.material.shape.ShapeAppearanceModel) = (r1 I:com.google.android.material.shape.ShapeAppearanceModel$Builder) type: VIRTUAL call: com.google.android.material.shape.ShapeAppearanceModel.Builder.build():com.google.android.material.shape.ShapeAppearanceModel A[MD:():com.google.android.material.shape.ShapeAppearanceModel (m)]\l0x0019: INVOKE  \l  (r0 I:com.google.android.material.shape.MaterialShapeDrawable)\l  (r1 I:com.google.android.material.shape.ShapeAppearanceModel)\l type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel):void A[MD:(com.google.android.material.shape.ShapeAppearanceModel):void (m)] (LINE:1059)\l0x001c: IGET  (r0 I:com.google.android.material.shape.MaterialShapeDrawable) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.defaultThumbDrawable com.google.android.material.shape.MaterialShapeDrawable  (LINE:1061)\l0x001e: IGET  (r1 I:int) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.thumbRadius int \l0x0020: ARITH  (r2 I:int) = (r1 I:int) * (2 int) \l0x0022: ARITH  (r1 I:int) = (r1 I:int) * (2 int) \l0x0024: INVOKE  (r0 I:com.google.android.material.shape.MaterialShapeDrawable), (r3 I:int), (r3 I:int), (r2 I:int), (r1 I:int) type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x0027: IGET  (r0 I:android.graphics.drawable.Drawable) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.customThumbDrawable android.graphics.drawable.Drawable  (LINE:1063)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0029|0x0029: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x002e \l}"];
Node_22 [shape=record,label="{22\:\ 0x002b|0x002b: INVOKE  \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l  (r0 I:android.graphics.drawable.Drawable)\l type: DIRECT call: com.google.android.material.slider.BaseSlider.adjustCustomThumbDrawableBounds(android.graphics.drawable.Drawable):void A[MD:(android.graphics.drawable.Drawable):void (m)] (LINE:1064)\l}"];
Node_23 [shape=record,label="{23\:\ 0x002e|0x002e: IGET  (r0 I:java.util.List\<android.graphics.drawable.Drawable\>) = \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.customThumbDrawablesForValues java.util.List  (LINE:1066)\l0x0030: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0034|LOOP_START\lLOOP:0: B:24:0x0034\-\>B:26:0x003a\l|0x0034: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0038|0x0038: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0044 \l}"];
Node_26 [shape=record,label="{26\:\ 0x003a|LOOP_END\lLOOP:0: B:24:0x0034\-\>B:26:0x003a\l|0x003a: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x003e: CHECK_CAST (r1 I:android.graphics.drawable.Drawable) = (android.graphics.drawable.Drawable) (r1 I:??[OBJECT, ARRAY]) \l0x0040: INVOKE  \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l  (r1 I:android.graphics.drawable.Drawable A[D('customDrawable' android.graphics.drawable.Drawable)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.adjustCustomThumbDrawableBounds(android.graphics.drawable.Drawable):void A[MD:(android.graphics.drawable.Drawable):void (m)] (LINE:1067)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0044|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0044|0x0044: INVOKE  \l  (r4 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l type: DIRECT call: com.google.android.material.slider.BaseSlider.updateWidgetLayout():void A[MD:():void (m)] (LINE:1070)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0047|RETURN\l|0x0047: RETURN    (LINE:1071)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.slider.BaseSlider.setThumbRadius((r4 'this' I:com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('radius' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x003a \-\> B:24:0x0034, CROSS_EDGE: B:28:0x0047 \-\> B:16:?, CROSS_EDGE: B:21:0x0029 \-\> B:23:0x002e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0040\-0x0043: r1 'customDrawable' Landroid\/graphics\/drawable\/Drawable;\l  0x0000\-0x0047: r4 'this' Lcom\/google\/android\/material\/slider\/BaseSlider;, signature: Lcom\/google\/android\/material\/slider\/BaseSlider\<TS;TL;TT;\>;\l  \-1 \-0x0047: r5 'radius' I\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\lMETHOD_OVERRIDE: [com.google.android.material.slider.BaseSlider.setThumbRadius(int):void]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_24;
Node_29 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_16;
}

