digraph "CFG forcom.google.android.material.slider.BaseSlider.warnAboutFloatingPointError()V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: IGET  (r0 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.stepSize float  (LINE:590)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CMP_L  (r1 I:int) = (r0 I:float), (r1 I:float) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|0x0005: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0008 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|RETURN\l|0x0007: RETURN    (LINE:592)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008|0x0008: CAST (r1 I:int) = (int) (r0 I:float)  (LINE:595)\l0x0009: CAST (r1 I:float) = (float) (r1 I:int) \l0x000a: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000b: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x000d: CONST_STR  (r5 I:java.lang.String) =  \"Floating point value used for %s(%s). Using floats can have rounding errors which may result in incorrect values. Instead, consider using integers with a custom LabelFormatter to display the value correctly.\" \l0x000f: CMP_L  (r1 I:int) = (r1 I:float), (r0 I:float) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0028 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0013|0x0013: SGET  (r1 I:java.lang.String) =  com.google.android.material.slider.BaseSlider.TAG java.lang.String  (LINE:596)\l0x0015: NEW_ARRAY  (r6 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0017: CONST_STR  (r7 I:java.lang.String) =  \"stepSize\" \l0x0019: APUT  (r6 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) \l0x001b: INVOKE  (r0 I:java.lang.Float) = (r0 I:float) type: STATIC call: java.lang.Float.valueOf(float):java.lang.Float A[MD:(float):java.lang.Float (c)]\l0x001f: APUT  (r6 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r0 I:??[OBJECT, ARRAY]) \l0x0021: INVOKE  (r0 I:java.lang.String) = (r5 I:java.lang.String), (r6 I:java.lang.Object[]) type: STATIC call: java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String A[MD:(java.lang.String, java.lang.Object[]):java.lang.String VARARG (c)]\l0x0025: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0028|0x0028: IGET  (r0 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.valueFrom float  (LINE:599)\l0x002a: CAST (r1 I:int) = (int) (r0 I:float) \l0x002b: CAST (r1 I:float) = (float) (r1 I:int) \l0x002c: CMP_L  (r1 I:int) = (r1 I:float), (r0 I:float) \l}"];
Node_25 [shape=record,label="{25\:\ 0x002e|0x002e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0045 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0030|0x0030: SGET  (r1 I:java.lang.String) =  com.google.android.material.slider.BaseSlider.TAG java.lang.String  (LINE:600)\l0x0032: NEW_ARRAY  (r6 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0034: CONST_STR  (r7 I:java.lang.String) =  \"valueFrom\" \l0x0036: APUT  (r6 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) \l0x0038: INVOKE  (r0 I:java.lang.Float) = (r0 I:float) type: STATIC call: java.lang.Float.valueOf(float):java.lang.Float A[MD:(float):java.lang.Float (c)]\l0x003c: APUT  (r6 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r0 I:??[OBJECT, ARRAY]) \l0x003e: INVOKE  (r0 I:java.lang.String) = (r5 I:java.lang.String), (r6 I:java.lang.Object[]) type: STATIC call: java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String A[MD:(java.lang.String, java.lang.Object[]):java.lang.String VARARG (c)]\l0x0042: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0045|0x0045: IGET  (r0 I:float) = \l  (r8 I:com.google.android.material.slider.BaseSlider A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>)])\l com.google.android.material.slider.BaseSlider.valueTo float  (LINE:603)\l0x0047: CAST (r1 I:int) = (int) (r0 I:float) \l0x0048: CAST (r1 I:float) = (float) (r1 I:int) \l0x0049: CMP_L  (r1 I:int) = (r1 I:float), (r0 I:float) \l}"];
Node_28 [shape=record,label="{28\:\ 0x004b|0x004b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:? \l}"];
Node_29 [shape=record,label="{29\:\ 0x004d|0x004d: SGET  (r1 I:java.lang.String) =  com.google.android.material.slider.BaseSlider.TAG java.lang.String  (LINE:604)\l0x004f: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0051: CONST_STR  (r6 I:java.lang.String) =  \"valueTo\" \l0x0053: APUT  (r4 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY]) \l0x0055: INVOKE  (r0 I:java.lang.Float) = (r0 I:float) type: STATIC call: java.lang.Float.valueOf(float):java.lang.Float A[MD:(float):java.lang.Float (c)]\l0x0059: APUT  (r4 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r0 I:??[OBJECT, ARRAY]) \l0x005b: INVOKE  (r0 I:java.lang.String) = (r5 I:java.lang.String), (r4 I:java.lang.Object[]) type: STATIC call: java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String A[MD:(java.lang.String, java.lang.Object[]):java.lang.String VARARG (c)]\l0x005f: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0062|RETURN\lORIG_RETURN\l|0x0062: RETURN    (LINE:606)\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0062: RETURN   A[SYNTHETIC] (LINE:606)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.slider.BaseSlider.warnAboutFloatingPointError((r8 'this' I:com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\> A[D('this' com.google.android.material.slider.BaseSlider\<S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0062 \-\> B:17:?, CROSS_EDGE: B:28:0x004b \-\> B:30:0x0062, CROSS_EDGE: B:25:0x002e \-\> B:27:0x0045, CROSS_EDGE: B:22:0x0011 \-\> B:24:0x0028\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0062: r8 'this' Lcom\/google\/android\/material\/slider\/BaseSlider;, signature: Lcom\/google\/android\/material\/slider\/BaseSlider\<TS;TL;TT;\>;\lTYPE_VARS: [S extends com.google.android.material.slider.BaseSlider\<S, L, T\>, T extends com.google.android.material.slider.BaseOnSliderTouchListener\<S\>, L extends com.google.android.material.slider.BaseOnChangeListener\<S\>]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_17;
Node_31 -> Node_17;
}

