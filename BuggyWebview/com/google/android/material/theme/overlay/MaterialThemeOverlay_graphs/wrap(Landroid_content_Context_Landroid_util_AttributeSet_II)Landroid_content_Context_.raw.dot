digraph "CFG forcom.google.android.material.theme.overlay.MaterialThemeOverlay.wrap(Landroid\/content\/Context;Landroid\/util\/AttributeSet;II)Landroid\/content\/Context;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0001|0x0001: INVOKE  (r0 I:int) = \l  (r6 I:android.content.Context A[D('context' android.content.Context)])\l  (r7 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r8 I:int A[D('defStyleAttr' int)])\l  (r9 I:int A[D('defStyleRes' int)])\l type: STATIC call: com.google.android.material.theme.overlay.MaterialThemeOverlay.obtainMaterialThemeOverlayId(android.content.Context, android.util.AttributeSet, int, int):int A[MD:(android.content.Context, android.util.AttributeSet, int, int):int (m)] (LINE:67)\l0x0005: INSTANCE_OF  (r1 I:boolean) = (r6 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)]) androidx.appcompat.view.ContextThemeWrapper  (LINE:68)\l0x0007: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0015 \l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|0x000a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)]) \l0x000b: CHECK_CAST (r1 I:androidx.appcompat.view.ContextThemeWrapper) = (androidx.appcompat.view.ContextThemeWrapper) (r1 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  (r1 I:int) = (r1 I:androidx.appcompat.view.ContextThemeWrapper) type: VIRTUAL call: androidx.appcompat.view.ContextThemeWrapper.getThemeResId():int A[MD:():int (m)] (LINE:69)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('materialThemeOverlayId' int)])  \-\> B:23:0x0015 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0013|0x0013: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('materialThemeOverlayId' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x002e  (LINE:71)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|0x0018: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('contextHasOverlay' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x001b \l}"];
Node_27 [shape=record,label="{27\:\ 0x001b|0x001b: NEW_INSTANCE  (r3 I:androidx.appcompat.view.ContextThemeWrapper) =  androidx.appcompat.view.ContextThemeWrapper  (LINE:75)\l0x001d: INVOKE  \l  (r3 I:androidx.appcompat.view.ContextThemeWrapper)\l  (r6 I:android.content.Context A[D('context' android.content.Context)])\l  (r0 I:int A[D('materialThemeOverlayId' int)])\l type: DIRECT call: androidx.appcompat.view.ContextThemeWrapper.\<init\>(android.content.Context, int):void A[MD:(android.content.Context, int):void (m)]\l0x0020: INVOKE  (r4 I:int) = \l  (r6 I:android.content.Context A[D('context' android.content.Context)])\l  (r7 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l type: STATIC call: com.google.android.material.theme.overlay.MaterialThemeOverlay.obtainAndroidThemeOverlayId(android.content.Context, android.util.AttributeSet):int A[MD:(android.content.Context, android.util.AttributeSet):int (m)] (LINE:79)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0024|0x0024: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('androidThemeOverlayId' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x002d  (LINE:80)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0026|0x0026: INVOKE  (r5 I:android.content.res.Resources$Theme) = (r3 I:android.content.Context A[D('contextThemeWrapper' android.content.Context)]) type: VIRTUAL call: android.content.Context.getTheme():android.content.res.Resources$Theme A[MD:():android.content.res.Resources$Theme (c)] (LINE:81)\l0x002a: INVOKE  (r5 I:android.content.res.Resources$Theme), (r4 I:int A[D('androidThemeOverlayId' int)]), (r2 I:boolean) type: VIRTUAL call: android.content.res.Resources.Theme.applyStyle(int, boolean):void A[MD:(int, boolean):void (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x002d|RETURN\l|0x002d: RETURN  (r3 I:android.content.Context A[D('contextThemeWrapper' android.content.Context)])  (LINE:84)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x002e|RETURN\l|0x002e: RETURN  (r6 I:android.content.Context A[D('context' android.content.Context)])  (LINE:72)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|0x0015: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static android.content.Context com.google.android.material.theme.overlay.MaterialThemeOverlay.wrap((r6 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('defStyleAttr' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('defStyleRes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0024 \-\> B:30:0x002d, CROSS_EDGE: B:31:0x002e \-\> B:17:?, CROSS_EDGE: B:24:0x0016 \-\> B:31:0x002e, CROSS_EDGE: B:23:0x0015 \-\> B:24:0x0016, CROSS_EDGE: B:19:0x0008 \-\> B:23:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0020\-0x002e: r3 'contextThemeWrapper' Landroid\/content\/Context;\l  0x0024\-0x002e: r4 'androidThemeOverlayId' I\l  0x0005\-0x002e: r0 'materialThemeOverlayId' I\l  0x0016\-0x002e: r1 'contextHasOverlay' Z\l  \-1 \-0x002e: r6 'context' Landroid\/content\/Context;\l  \-1 \-0x002e: r7 'attrs' Landroid\/util\/AttributeSet;\l  \-1 \-0x002e: r8 'defStyleAttr' I\l  \-1 \-0x002e: r9 'defStyleRes' I\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_31;
Node_25 -> Node_27;
Node_25 -> Node_31[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_17;
Node_31 -> Node_17;
Node_23 -> Node_24;
}

