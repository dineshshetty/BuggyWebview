digraph "CFG forcom.google.android.material.drawable.DrawableUtils.createTintableMutatedDrawableIfNeeded(Landroid\/graphics\/drawable\/Drawable;Landroid\/content\/res\/ColorStateList;Landroid\/graphics\/PorterDuff$Mode;Z)Landroid\/graphics\/drawable\/Drawable;" {
subgraph cluster_Region_2133184633 {
label = "R(1:(2:(1:2)|(2:(2:5|(1:7))(1:(1:10))|8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1571213617 {
label = "R(2:(1:2)|(2:(2:5|(1:7))(1:(1:10))|8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_83661212 {
label = "IF [B:14:0x0000] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|if (r1 == null) goto L2\l}"];
subgraph cluster_Region_1713903298 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0002|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_929014886 {
label = "R(2:(2:5|(1:7))(1:(1:10))|8)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1553712357 {
label = "IF [B:17:0x0004] THEN: R(2:5|(1:7)) ELSE: R(1:(1:10))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0004|if (r2 != null) goto L5\l}"];
subgraph cluster_Region_1015795355 {
label = "R(2:5|(1:7))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0006|android.graphics.drawable.Drawable r1 = androidx.core.graphics.drawable.DrawableCompat.wrap(r1).mutate()\l}"];
subgraph cluster_IfRegion_439570894 {
label = "IF [B:19:0x000e] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x000e|if (r3 != null) goto L7\l}"];
subgraph cluster_Region_1342552698 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0010|androidx.core.graphics.drawable.DrawableCompat.setTintMode(r1, r3)\l}"];
}
}
}
subgraph cluster_Region_1379655795 {
label = "R(1:(1:10)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_816190393 {
label = "IF [B:21:0x0014] THEN: R(1:10) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0014|if (r4 != false) goto L10\l}"];
subgraph cluster_Region_815503682 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0016|r1.mutate()\l}"];
}
}
}
}
Node_23 [shape=record,label="{23\:\ 0x0019|RETURN\lPHI: r1 \l  PHI: (r1v1 'drawable' android.graphics.drawable.Drawable) = (r1v0 'drawable' android.graphics.drawable.Drawable), (r1v0 'drawable' android.graphics.drawable.Drawable), (r1v2 'drawable' android.graphics.drawable.Drawable), (r1v2 'drawable' android.graphics.drawable.Drawable) binds: [B:21:0x0014, B:22:0x0016, B:19:0x000e, B:20:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|return r1\l}"];
}
}
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static android.graphics.drawable.Drawable com.google.android.material.drawable.DrawableUtils.createTintableMutatedDrawableIfNeeded((r1v0 'drawable' android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'tintList' android.content.res.ColorStateList A[D('tintList' android.content.res.ColorStateList), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'tintMode' android.graphics.PorterDuff$Mode A[D('tintMode' android.graphics.PorterDuff$Mode), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'forceMutate' boolean A[D('forceMutate' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0019 \-\> B:13:?, CROSS_EDGE: B:19:0x000e \-\> B:23:0x0019, CROSS_EDGE: B:22:0x0016 \-\> B:23:0x0019, CROSS_EDGE: B:21:0x0014 \-\> B:23:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_14 -> Node_17[style=dashed];
Node_15 -> Node_13;
Node_17 -> Node_18;
Node_17 -> Node_21[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_23[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_12 -> Node_14;
}

