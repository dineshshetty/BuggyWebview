digraph "CFG forcom.google.android.material.drawable.DrawableUtils.setRippleDrawableRadius(Landroid\/graphics\/drawable\/RippleDrawable;I)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:131)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:31:0x000a \l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|0x0006: INVOKE  \l  (r6 I:android.graphics.drawable.RippleDrawable A[D('drawable' android.graphics.drawable.RippleDrawable)])\l  (r7 I:int A[D('radius' int)])\l type: VIRTUAL call: android.graphics.drawable.RippleDrawable.setRadius(int):void A[MD:(int):void (c)] (LINE:132)\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0026: RETURN   A[SYNTHETIC] (LINE:143)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x000a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029, blocks: (B:22:0x000a), top: B:31:0x000a \}\lCatch: IllegalAccessException \-\> 0x0027, IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029, NoSuchMethodException \-\> 0x002b\l|0x000a: CONST_CLASS  (r0 I:java.lang.Class\<android.graphics.drawable.RippleDrawable\>) =  android.graphics.drawable.RippleDrawable.class A[TRY_ENTER] (LINE:136)\l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"setMaxRadius\" \l0x000e: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000f: NEW_ARRAY  (r3 I:java.lang.Class[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: IllegalAccessException \-\> 0x0027, IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029, NoSuchMethodException \-\> 0x002b]\l0x0011: SGET  (r4 I:java.lang.Class) =  java.lang.Integer.TYPE java.lang.Class A[Catch: IllegalAccessException \-\> 0x0027, IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029, NoSuchMethodException \-\> 0x002b]\l0x0013: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: APUT  (r3 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) A[Catch: IllegalAccessException \-\> 0x0027, IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029, NoSuchMethodException \-\> 0x002b]\l0x0016: INVOKE  (r0 I:java.lang.reflect.Method) = (r0 I:java.lang.Class), (r1 I:java.lang.String), (r3 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: IllegalAccessException \-\> 0x0027, IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029, NoSuchMethodException \-\> 0x002b, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)] (LINE:137)\l0x001a: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: IllegalAccessException \-\> 0x0027, IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029, NoSuchMethodException \-\> 0x002b] (LINE:138)\l0x001c: INVOKE  (r2 I:java.lang.Integer) = (r7 I:int A[D('radius' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[Catch: IllegalAccessException \-\> 0x0027, IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029, NoSuchMethodException \-\> 0x002b, MD:(int):java.lang.Integer (c)]\l0x0020: APUT  (r1 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r2 I:??[OBJECT, ARRAY]) A[Catch: IllegalAccessException \-\> 0x0027, IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029, NoSuchMethodException \-\> 0x002b]\l0x0022: INVOKE  \l  (r0 I:java.lang.reflect.Method A[D('setMaxRadiusMethod' java.lang.reflect.Method)])\l  (r6 I:java.lang.Object A[D('drawable' android.graphics.drawable.RippleDrawable)])\l  (r1 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: IllegalAccessException \-\> 0x0027, IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029, NoSuchMethodException \-\> 0x002b, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c), TRY_LEAVE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|RETURN\lORIG_RETURN\l|0x0026: RETURN    (LINE:143)\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_26 [shape=record,label="{26\:\ 0x0029|ExcHandler: IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029\l|0x0029: MOVE_EXCEPTION  (r0 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029]\l}"];
Node_29 [shape=record,label="{29\:\ 0x002c|0x002c: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:140)\l0x002e: CONST_STR  (r2 I:java.lang.String) =  \"Couldn't set RippleDrawable radius\" \l0x0030: INVOKE  \l  (r1 I:java.lang.IllegalStateException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.ReflectiveOperationException)])\l type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0033|0x0033: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void com.google.android.material.drawable.DrawableUtils.setRippleDrawableRadius((r6 I:android.graphics.drawable.RippleDrawable A[D('drawable' android.graphics.drawable.RippleDrawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('radius' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x000a \-\> B:23:0x0026, CROSS_EDGE: B:30:0x0033 \-\> B:18:?, CROSS_EDGE: B:31:0x000a \-\> B:26:0x0029\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x0026: r0 'setMaxRadiusMethod' Ljava\/lang\/reflect\/Method;\l  0x002c\-0x0033: r0 'e' Ljava\/lang\/ReflectiveOperationException;\l  \-1 \-0x0033: r6 'drawable' Landroid\/graphics\/drawable\/RippleDrawable;\l  \-1 \-0x0033: r7 'radius' I\lTryCatch #2 \{IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029, blocks: (B:22:0x000a), top: B:31:0x000a \}\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_31;
Node_21 -> Node_33;
Node_33 -> Node_18;
Node_31 -> Node_22;
Node_31 -> Node_26;
Node_22 -> Node_23;
Node_22 -> Node_32;
Node_23 -> Node_18;
Node_32 -> Node_26;
Node_26 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_18;
}

