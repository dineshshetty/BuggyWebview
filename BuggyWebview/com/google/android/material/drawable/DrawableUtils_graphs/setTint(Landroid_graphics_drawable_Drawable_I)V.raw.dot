digraph "CFG forcom.google.android.material.drawable.DrawableUtils.setTint(Landroid\/graphics\/drawable\/Drawable;I)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('color' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0004  (LINE:68)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|0x0002: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0005|0x0005: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:69)\l0x0007: CONST  (r2 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l0x0009: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0018 \l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasTint' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0014  (LINE:72)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|0x000e: SGET  (r1 I:android.graphics.PorterDuff$Mode) =  android.graphics.PorterDuff.Mode.SRC_IN android.graphics.PorterDuff$Mode  (LINE:73)\l0x0010: INVOKE  \l  (r4 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)])\l  (r5 I:int A[D('color' int)])\l  (r1 I:android.graphics.PorterDuff$Mode)\l type: VIRTUAL call: android.graphics.drawable.Drawable.setColorFilter(int, android.graphics.PorterDuff$Mode):void A[MD:(int, android.graphics.PorterDuff$Mode):void (c)]\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0021: RETURN   A[SYNTHETIC] (LINE:84)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0014|0x0014: INVOKE  \l  (r4 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)])\l  (r3 I:android.graphics.ColorFilter)\l type: VIRTUAL call: android.graphics.drawable.Drawable.setColorFilter(android.graphics.ColorFilter):void A[MD:(android.graphics.ColorFilter):void (c)] (LINE:75)\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|0x0021: RETURN   A[SYNTHETIC] (LINE:84)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0018|0x0018: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasTint' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x001e  (LINE:78)\l}"];
Node_28 [shape=record,label="{28\:\ 0x001a|0x001a: INVOKE  \l  (r4 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)])\l  (r5 I:int A[D('color' int)])\l type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setTint(android.graphics.drawable.Drawable, int):void A[MD:(android.graphics.drawable.Drawable, int):void (m)] (LINE:79)\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0021: RETURN   A[SYNTHETIC] (LINE:84)\l}"];
Node_29 [shape=record,label="{29\:\ 0x001e|0x001e: INVOKE  \l  (r4 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)])\l  (r3 I:android.content.res.ColorStateList)\l type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable, android.content.res.ColorStateList):void A[MD:(android.graphics.drawable.Drawable, android.content.res.ColorStateList):void (m)] (LINE:81)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0021|RETURN\lORIG_RETURN\l|0x0021: RETURN    (LINE:84)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|0x0004: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static void com.google.android.material.drawable.DrawableUtils.setTint((r4 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('color' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0014 \-\> B:30:0x0021, CROSS_EDGE: B:28:0x001a \-\> B:30:0x0021, CROSS_EDGE: B:29:0x001e \-\> B:30:0x0021, CROSS_EDGE: B:21:0x0004 \-\> B:22:0x0005\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0021: r0 'hasTint' Z\l  \-1 \-0x0021: r4 'drawable' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x0021: r5 'color' I\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_31;
Node_31 -> Node_18;
Node_26 -> Node_32;
Node_32 -> Node_18;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_33;
Node_33 -> Node_18;
Node_29 -> Node_30;
Node_30 -> Node_18;
Node_21 -> Node_22;
}

