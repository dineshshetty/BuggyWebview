digraph "CFG forcom.google.android.material.drawable.DrawableUtils.setRippleDrawableRadius(Landroid\/graphics\/drawable\/RippleDrawable;I)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000}"];
Node_20 [shape=record,label="{20\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 23) goto L6\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|r6.setRadius(r7)\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x000a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029, blocks: (B:22:0x000a), top: B:31:0x000a \}\lCatch: IllegalAccessException \-\> 0x0027, IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029, NoSuchMethodException \-\> 0x002b\l|java.lang.reflect.Method r0 = android.graphics.drawable.RippleDrawable.class.getDeclaredMethod(\"setMaxRadius\", new java.lang.Class[]\{java.lang.Integer.TYPE\})     \/\/ Catch: java.lang.IllegalAccessException \-\> L27 java.lang.Throwable \-\> L29 java.lang.NoSuchMethodException \-\> L2b\lr0.invoke(r6, new java.lang.Object[]\{java.lang.Integer.valueOf(r7)\})     \/\/ Catch: java.lang.IllegalAccessException \-\> L27 java.lang.Throwable \-\> L29 java.lang.NoSuchMethodException \-\> L2b\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|RETURN\lORIG_RETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_26 [shape=record,label="{26\:\ 0x0029|ExcHandler: IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029\l|java.lang.reflect.InvocationTargetException r0 = move\-exception\l}"];
Node_29 [shape=record,label="{29\:\ 0x002c}"];
Node_30 [shape=record,label="{30\:\ 0x0033|throw new java.lang.IllegalStateException(\"Couldn't set RippleDrawable radius\", r0)\l}"];
MethodNode[shape=record,label="{public static void com.google.android.material.drawable.DrawableUtils.setRippleDrawableRadius((r6v0 'drawable' android.graphics.drawable.RippleDrawable A[D('drawable' android.graphics.drawable.RippleDrawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'radius' int A[D('radius' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x000a \-\> B:23:0x0026, CROSS_EDGE: B:30:0x0033 \-\> B:18:?, CROSS_EDGE: B:31:0x000a \-\> B:26:0x0029\lINLINE_NOT_NEEDED\lTryCatch #2 \{IllegalAccessException \| NoSuchMethodException \| InvocationTargetException \-\> 0x0029, blocks: (B:22:0x000a), top: B:31:0x000a \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_31;
Node_21 -> Node_33;
Node_33 -> Node_18;
Node_31 -> Node_22;
Node_31 -> Node_26;
Node_22 -> Node_23;
Node_22 -> Node_32;
Node_23 -> Node_18;
Node_32 -> Node_26;
Node_26 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_18;
}

