digraph "CFG forcom.google.android.material.bottomappbar.BottomAppBar.translateActionMenuView(Landroidx\/appcompat\/widget\/ActionMenuView;IZZ)V" {
subgraph cluster_Region_1272274427 {
label = "R(2:1|(1:3)(1:6))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|com.google.android.material.bottomappbar.BottomAppBar$8 java.lang.Runnable r0 = new com.google.android.material.bottomappbar.BottomAppBar.RunnableC06018()\l}"];
subgraph cluster_IfRegion_249302890 {
label = "IF [B:11:0x0005] THEN: R(1:3) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0005|if (r5 != false) goto L3\l}"];
subgraph cluster_Region_978686333 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0007|r2.post(r0)\l}"];
}
subgraph cluster_Region_1467203297 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000b|r0.run()\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000e|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.bottomappbar.BottomAppBar.translateActionMenuView((r1v0 'this' com.google.android.material.bottomappbar.BottomAppBar A[IMMUTABLE_TYPE, THIS]), (r2v0 'actionMenuView' androidx.appcompat.widget.ActionMenuView A[D('actionMenuView' androidx.appcompat.widget.ActionMenuView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'fabAlignmentMode' int A[D('fabAlignmentMode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'fabAttached' boolean A[D('fabAttached' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'shouldWaitForMenuReplacement' boolean A[D('shouldWaitForMenuReplacement' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000b \-\> B:14:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_8 -> Node_10;
Node_15 -> Node_9;
Node_14 -> Node_9;
}

