digraph "CFG forcom.google.android.material.bottomappbar.BottomAppBar.setCutoutStateAndTranslateFab()V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|getTopEdgeTreatment().setHorizontalOffset(getFabTranslationX())\lcom.google.android.material.shape.MaterialShapeDrawable r0 = r3.materialShapeDrawable\l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|if (r3.fabAttached == false) goto L14\l}"];
Node_19 [shape=record,label="{19\:\ 0x0011}"];
Node_20 [shape=record,label="{20\:\ 0x0015|if (isFabVisibleOrWillBeShown() == false) goto L14\l}"];
Node_21 [shape=record,label="{21\:\ 0x0017}"];
Node_22 [shape=record,label="{22\:\ 0x001a|if (r3.fabAnchorMode != 1) goto L14\l}"];
Node_23 [shape=record,label="{23\:\ 0x001c|r1 = 1.0f\l}"];
Node_25 [shape=record,label="{25\:\ 0x0020|PHI: r1 \l  PHI: (r1v3 float) = (r1v2 float), (r1v8 float) binds: [B:24:0x001f, B:23:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|r0.setInterpolation(r1)\landroid.view.View r0 = findDependentView()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|if (r0 == null) goto L13\l}"];
Node_27 [shape=record,label="{27\:\ 0x0029|r0.setTranslationY(getFabTranslationY())\lr0.setTranslationX(getFabTranslationX())\l}"];
Node_28 [shape=record,label="{28\:\ 0x0037|RETURN\lORIG_RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|r1 = 0.0f\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.bottomappbar.BottomAppBar.setCutoutStateAndTranslateFab((r3v0 'this' com.google.android.material.bottomappbar.BottomAppBar A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0027 \-\> B:28:0x0037, CROSS_EDGE: B:24:0x001f \-\> B:25:0x0020, CROSS_EDGE: B:20:0x0015 \-\> B:24:0x001f, CROSS_EDGE: B:18:0x000f \-\> B:24:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_16;
Node_29 -> Node_16;
Node_24 -> Node_25;
}

