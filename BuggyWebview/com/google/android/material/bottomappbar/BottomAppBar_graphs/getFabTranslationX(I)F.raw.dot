digraph "CFG forcom.google.android.material.bottomappbar.BottomAppBar.getFabTranslationX(I)F" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r8 I:android.view.View) type: STATIC call: com.google.android.material.internal.ViewUtils.isLayoutRtl(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1047)\l0x0004: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1048)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0005|0x0005: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fabAlignmentMode' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0036 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0007|0x0007: INVOKE  (r2 I:android.view.View) = (r8 I:com.google.android.material.bottomappbar.BottomAppBar) type: DIRECT call: com.google.android.material.bottomappbar.BottomAppBar.findDependentView():android.view.View A[MD:():android.view.View (m)] (LINE:1049)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isRtl' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0010  (LINE:1050)\l}"];
Node_26 [shape=record,label="{26\:\ 0x000d|0x000d: IGET  (r3 I:int) = (r8 I:com.google.android.material.bottomappbar.BottomAppBar) com.google.android.material.bottomappbar.BottomAppBar.leftInset int \l}"];
Node_28 [shape=record,label="{28\:\ 0x0012|0x0012: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('systemEndInset' int)])  (LINE:1051)\l0x0013: IGET  (r5 I:int) = (r8 I:com.google.android.material.bottomappbar.BottomAppBar) com.google.android.material.bottomappbar.BottomAppBar.fabAlignmentModeEndMargin int  (LINE:1052)\l0x0015: CONST  (r6 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0016|0x0016: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0025 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0018|0x0018: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fab' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0025 \l}"];
Node_31 [shape=record,label="{31\:\ 0x001a|0x001a: INVOKE  (r5 I:int) = (r2 I:android.view.View A[D('fab' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:1053)\l0x001e: ARITH  (r5 I:int) = (r5 I:int) \/ (2 int) \l0x0020: IGET  (r7 I:int) = (r8 I:com.google.android.material.bottomappbar.BottomAppBar) com.google.android.material.bottomappbar.BottomAppBar.fabAlignmentModeEndMargin int \l0x0022: ARITH  (r5 I:int) = (r5 I:int) + (r7 I:int) \l0x0023: ARITH  (r4 I:int) = (r4 I:int A[D('totalEndInset' int)]) + (r5 I:int) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0028|0x0028: INVOKE  (r5 I:int) = (r8 I:com.google.android.material.bottomappbar.BottomAppBar) type: VIRTUAL call: com.google.android.material.bottomappbar.BottomAppBar.getMeasuredWidth():int A[MD:():int (s)] (LINE:1060)\l0x002c: ARITH  (r5 I:int) = (r5 I:int) \/ (2 int) \l0x002e: ARITH  (r5 I:int) = (r5 I:int) \- (r4 I:int A[D('totalEndInset' int)]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x002f|0x002f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isRtl' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0032 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0031|0x0031: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0032|0x0032: ARITH  (r5 I:int) = (r5 I:int) * (r1 I:int) \l0x0034: CAST (r1 I:float) = (float) (r5 I:int) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0035|RETURN\l|0x0035: RETURN  (r1 I:float) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0025|0x0025: IGET  (r5 I:int) = (r8 I:com.google.android.material.bottomappbar.BottomAppBar) com.google.android.material.bottomappbar.BottomAppBar.fabOffsetEndMode int  (LINE:1058)\l0x0027: ARITH  (r4 I:int) = (r4 I:int A[D('totalEndInset' int)]) + (r5 I:int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|0x0010: IGET  (r3 I:int) = (r8 I:com.google.android.material.bottomappbar.BottomAppBar) com.google.android.material.bottomappbar.BottomAppBar.rightInset int \l}"];
Node_38 [shape=record,label="{38\:\ 0x0036|RETURN\l|0x0036: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1062)\l0x0037: RETURN  (r1 I:float) \l}"];
MethodNode[shape=record,label="{public float com.google.android.material.bottomappbar.BottomAppBar.getFabTranslationX((r8 'this' I:com.google.android.material.bottomappbar.BottomAppBar A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[D('fabAlignmentMode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x002f \-\> B:36:0x0032, CROSS_EDGE: B:32:0x0025 \-\> B:33:0x0028, CROSS_EDGE: B:29:0x0016 \-\> B:32:0x0025, CROSS_EDGE: B:27:0x0010 \-\> B:28:0x0012, CROSS_EDGE: B:39:0x0037 \-\> B:21:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0036: r2 'fab' Landroid\/view\/View;\l  0x0012\-0x0036: r3 'systemEndInset' I\l  0x0013\-0x0036: r4 'totalEndInset' I\l  0x0004\-0x0037: r0 'isRtl' Z\l  \-1 \-0x0037: r9 'fabAlignmentMode' I\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_38;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_21;
Node_32 -> Node_33;
Node_27 -> Node_28;
Node_38 -> Node_21;
}

