digraph "CFG forcom.google.android.material.bottomappbar.BottomAppBar.onLayout(ZIIII)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|super.onLayout(r3, r4, r5, r6, r7)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0003|if (r3 == false) goto L8\l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|cancelAnimations()\lsetCutoutStateAndTranslateFab()\landroid.view.View r0 = findDependentView()\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|if (r0 == null) goto L8\l}"];
Node_17 [shape=record,label="{17\:\ 0x0011}"];
Node_18 [shape=record,label="{18\:\ 0x0015|if (androidx.core.view.ViewCompat.isLaidOut(r0) == false) goto L8\l}"];
Node_19 [shape=record,label="{19\:\ 0x0017|r0.post(new com.google.android.material.bottomappbar.BottomAppBar$$ExternalSyntheticLambda0())\l}"];
Node_20 [shape=record,label="{20\:\ 0x001f|setActionMenuViewPosition()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0022|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.bottomappbar.BottomAppBar.onLayout((r2v0 'this' com.google.android.material.bottomappbar.BottomAppBar A[IMMUTABLE_TYPE, THIS]), (r3v0 'changed' boolean A[D('changed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'l' int A[D('l' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 't' int A[D('t' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'r' int A[D('r' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'b' int A[D('b' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:18:0x0015 \-\> B:20:0x001f, CROSS_EDGE: B:16:0x000f \-\> B:20:0x001f, CROSS_EDGE: B:14:0x0003 \-\> B:20:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onLayout(boolean, int, int, int, int):void\}]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

