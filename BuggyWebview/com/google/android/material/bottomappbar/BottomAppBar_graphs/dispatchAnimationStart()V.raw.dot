digraph "CFG forcom.google.android.material.bottomappbar.BottomAppBar.dispatchAnimationStart()V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r2 I:com.google.android.material.bottomappbar.BottomAppBar) com.google.android.material.bottomappbar.BottomAppBar.animatingModeChangeCounter int  (LINE:779)\l0x0002: ARITH  (r1 I:int) = (r0 I:int) + (1 int) \l0x0004: IPUT  (r1 I:int), (r2 I:com.google.android.material.bottomappbar.BottomAppBar) com.google.android.material.bottomappbar.BottomAppBar.animatingModeChangeCounter int \l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0020 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|0x0008: IGET  (r0 I:java.util.ArrayList\<com.google.android.material.bottomappbar.BottomAppBar$AnimationListener\>) = (r2 I:com.google.android.material.bottomappbar.BottomAppBar) com.google.android.material.bottomappbar.BottomAppBar.animationListeners java.util.ArrayList \l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:? \l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|0x000c: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:781)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|LOOP_START\lLOOP:0: B:21:0x0010\-\>B:23:0x0016\l|0x0010: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|0x0014: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0020 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|LOOP_END\lLOOP:0: B:21:0x0010\-\>B:23:0x0016\l|0x0016: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001a: CHECK_CAST (r1 I:com.google.android.material.bottomappbar.BottomAppBar$AnimationListener) = (com.google.android.material.bottomappbar.BottomAppBar$AnimationListener) (r1 I:??[OBJECT, ARRAY]) \l0x001c: INVOKE  \l  (r1 I:com.google.android.material.bottomappbar.BottomAppBar$AnimationListener A[D('listener' com.google.android.material.bottomappbar.BottomAppBar$AnimationListener)])\l  (r2 I:com.google.android.material.bottomappbar.BottomAppBar)\l type: INTERFACE call: com.google.android.material.bottomappbar.BottomAppBar.AnimationListener.onAnimationStart(com.google.android.material.bottomappbar.BottomAppBar):void A[MD:(com.google.android.material.bottomappbar.BottomAppBar):void (m)] (LINE:782)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0020|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0020: RETURN   A[SYNTHETIC] (LINE:785)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|0x0020: RETURN   A[SYNTHETIC] (LINE:785)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0020|RETURN\lORIG_RETURN\l|0x0020: RETURN    (LINE:785)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.bottomappbar.BottomAppBar.dispatchAnimationStart((r2 'this' I:com.google.android.material.bottomappbar.BottomAppBar A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x0016 \-\> B:21:0x0010, CROSS_EDGE: B:19:0x000a \-\> B:24:0x0020, CROSS_EDGE: B:17:0x0006 \-\> B:24:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x001f: r1 'listener' Lcom\/google\/android\/material\/bottomappbar\/BottomAppBar$AnimationListener;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_26;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_21;
Node_25 -> Node_27;
Node_27 -> Node_15;
Node_26 -> Node_15;
Node_24 -> Node_15;
}

