digraph "CFG forcom.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment.getEdgePath(FFFLcom\/google\/android\/material\/shape\/ShapePath;)V" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r31 I:??[OBJECT, ARRAY])  (LINE:74)\l0x0002: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r32 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('length' float)]) \l0x0004: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r35 I:??[OBJECT, ARRAY] A[D('shapePath' com.google.android.material.shape.ShapePath)]) \l0x0006: IGET  (r2 I:float) = (r0 I:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment) com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment.fabDiameter float \l0x0008: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: CMP_L  (r3 I:int) = (r2 I:float), (r10 I:float) \l}"];
Node_30 [shape=record,label="{30\:\ 0x000b|0x000b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0011 \l}"];
Node_31 [shape=record,label="{31\:\ 0x000d|0x000d: INVOKE  (r9 I:com.google.android.material.shape.ShapePath), (r1 I:float), (r10 I:float) type: VIRTUAL call: com.google.android.material.shape.ShapePath.lineTo(float, float):void A[MD:(float, float):void (m)] (LINE:76)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0010|RETURN\l|0x0010: RETURN    (LINE:77)\l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0011|0x0011: IGET  (r3 I:float) = (r0 I:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment) com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment.fabMargin float  (LINE:80)\l0x0013: CONST  (r11 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0015: ARITH  (r3 I:float) = (r3 I:float) * (r11 I:float) \l0x0017: ARITH  (r12 I:float) = (r3 I:float) + (r2 I:float) \l0x0019: ARITH  (r13 I:float) = (r12 I:float A[D('cradleDiameter' float)]) \/ (r11 I:float)  (LINE:81)\l0x001b: IGET  (r3 I:float) = (r0 I:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment) com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment.roundedCornerRadius float  (LINE:82)\l0x001d: ARITH  (r14 I:float) = (r34 I:float A[D('interpolation' float)]) * (r3 I:float) \l0x001f: IGET  (r3 I:float) = (r0 I:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment) com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment.horizontalOffset float  (LINE:83)\l0x0021: ARITH  (r15 I:float) = (r33 I:float A[D('center' float)]) + (r3 I:float) \l0x0023: IGET  (r3 I:float) = (r0 I:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment) com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment.cradleVerticalOffset float  (LINE:87)\l0x0025: ARITH  (r3 I:float) = (r3 I:float) * (r34 I:float A[D('interpolation' float)]) \l0x0027: CONST  (r4 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x0029: ARITH  (r5 I:float) = (r4 I:float) \- (r34 I:float A[D('interpolation' float)]) \l0x002b: ARITH  (r5 I:float) = (r5 I:float) * (r13 I:float A[D('cradleRadius' float)]) \l0x002d: ARITH  (r3 I:float) = (r3 I:float) + (r5 I:float) \l0x002e: ARITH  (r16 I:float) = (r3 I:float A[D('verticalOffset' float)]) \/ (r13 I:float A[D('cradleRadius' float)])  (LINE:89)\l0x0030: CMP_L  (r4 I:int) = (r16 I:float A[D('verticalOffsetRatio' float)]), (r4 I:float)  (LINE:90)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0032|0x0032: IF  (r4 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:37:0x0038 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0034|0x0034: INVOKE  (r9 I:com.google.android.material.shape.ShapePath), (r1 I:float), (r10 I:float) type: VIRTUAL call: com.google.android.material.shape.ShapePath.lineTo(float, float):void A[MD:(float, float):void (m)] (LINE:93)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0037|RETURN\l|0x0037: RETURN    (LINE:94)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0038|0x0038: IGET  (r4 I:float) = (r0 I:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment) com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment.fabCornerSize float  (LINE:103)\l0x003a: ARITH  (r17 I:float) = (r4 I:float) * (r34 I:float A[D('interpolation' float)]) \l0x003c: CONST  (r5 I:??[int, float, short, byte, char]) = (\-1082130432(0xffffffffbf800000, float:\-1.0) ??[int, float, short, byte, char])  (LINE:104)\l0x003e: CMP_L  (r5 I:int) = (r4 I:float), (r5 I:float) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0040|0x0040: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0053 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0042|0x0042: ARITH  (r4 I:float) = (r4 I:float) * (r11 I:float) \l0x0044: ARITH  (r4 I:float) = (r4 I:float) \- (r2 I:float) \l0x0045: INVOKE  (r2 I:float) = (r4 I:float) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x0049: CONST  (r4 I:??[int, float, short, byte, char]) = (1036831949(0x3dcccccd, float:0.1) ??[int, float, short, byte, char]) \l0x004c: CMP_G  (r2 I:int) = (r2 I:float), (r4 I:float) \l}"];
Node_40 [shape=record,label="{40\:\ 0x004e|0x004e: IF  (r2 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:42:0x0051 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0051|0x0051: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0054|0x0054: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0056: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:105)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0057|0x0057: IF  (r18 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('useCircleCutout' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0061  (LINE:106)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0059|0x0059: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('verticalOffset' float)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:107)\l0x005a: CONST  (r2 I:??[int, float, short, byte, char] A[D('arcOffset' float)]) = (1071644672(0x3fe00000, float:1.75) ??[int, float, short, byte, char])  (LINE:108)\l0x005c: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('arcOffset' float)]) \l0x005e: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('verticalOffset' float)]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0065|0x0065: ARITH  (r21 I:float) = (r13 I:float A[D('cradleRadius' float)]) + (r14 I:float A[D('roundedCornerOffset' float)])  (LINE:111)\l0x0067: ARITH  (r22 I:float) = (r21 I:float A[D('distanceBetweenCenters' float)]) * (r21 I:float A[D('distanceBetweenCenters' float)])  (LINE:112)\l0x0069: ARITH  (r23 I:float) = (r20 I:float A[D('verticalOffset' float)]) + (r14 I:float A[D('roundedCornerOffset' float)])  (LINE:113)\l0x006b: ARITH  (r2 I:float) = (r23 I:float A[D('distanceY' float)]) * (r23 I:float A[D('distanceY' float)])  (LINE:114)\l0x006d: ARITH  (r2 I:float) = (r22 I:float A[D('distanceBetweenCentersSquared' float)]) \- (r2 I:float) \l0x006f: CAST (r2 I:double) = (double) (r2 I:float) \l0x0070: INVOKE  (r2 I:double) = (r2 I:double) type: STATIC call: java.lang.Math.sqrt(double):double A[MD:(double):double (c)]\l0x0074: CAST (r8 I:float) = (float) (r2 I:double) \l0x0075: ARITH  (r7 I:float) = (r15 I:float A[D('middle' float)]) \- (r8 I:float A[D('distanceX' float)])  (LINE:117)\l0x0077: ARITH  (r24 I:float) = (r15 I:float A[D('middle' float)]) + (r8 I:float A[D('distanceX' float)])  (LINE:118)\l0x0079: ARITH  (r2 I:float) = (r8 I:float A[D('distanceX' float)]) \/ (r23 I:float A[D('distanceY' float)])  (LINE:121)\l0x007b: CAST (r2 I:double) = (double) (r2 I:float) \l0x007c: INVOKE  (r2 I:double) = (r2 I:double) type: STATIC call: java.lang.Math.atan(double):double A[MD:(double):double (c)]\l0x0080: INVOKE  (r2 I:double) = (r2 I:double) type: STATIC call: java.lang.Math.toDegrees(double):double A[MD:(double):double (c)]\l0x0084: CAST (r6 I:float) = (float) (r2 I:double) \l0x0085: CONST  (r2 I:??[int, float, short, byte, char]) = (1119092736(0x42b40000, float:90.0) ??[int, float, short, byte, char])  (LINE:122)\l0x0087: ARITH  (r2 I:float) = (r2 I:float) \- (r6 I:float A[D('cornerRadiusArcLength' float)]) \l0x0088: ARITH  (r25 I:float) = (r2 I:float) + (r19 I:float A[D('arcOffset' float)]) \l0x008a: INVOKE  (r9 I:com.google.android.material.shape.ShapePath), (r7 I:float A[D('leftRoundedCornerCircleX' float)]), (r10 I:float) type: VIRTUAL call: com.google.android.material.shape.ShapePath.lineTo(float, float):void A[MD:(float, float):void (m)] (LINE:125)\l0x008d: ARITH  (r3 I:float) = (r7 I:float A[D('leftRoundedCornerCircleX' float)]) \- (r14 I:float A[D('roundedCornerOffset' float)])  (LINE:129)\l0x008f: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0090: ARITH  (r5 I:float) = (r7 I:float A[D('leftRoundedCornerCircleX' float)]) + (r14 I:float A[D('roundedCornerOffset' float)]) \l0x0092: ARITH  (r26 I:float) = (r14 I:float A[D('roundedCornerOffset' float)]) * (r11 I:float) \l0x0094: CONST  (r27 I:??[int, float, short, byte, char]) = (1132920832(0x43870000, float:270.0) ??[int, float, short, byte, char]) \l0x0096: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r35 I:??[OBJECT, ARRAY] A[D('shapePath' com.google.android.material.shape.ShapePath)]) \l0x0098: MOVE  (r28 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cornerRadiusArcLength' float)]) \l0x009a: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cornerRadiusArcLength' float)]) = (r26 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x009c: MOVE  (r26 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('leftRoundedCornerCircleX' float)]) \l0x009e: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('leftRoundedCornerCircleX' float)]) = (r27 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00a0: MOVE  (r27 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('distanceX' float)]) \l0x00a2: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('distanceX' float)]) = (r28 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cornerRadiusArcLength' float)]) \l0x00a4: INVOKE  \l  (r2 I:com.google.android.material.shape.ShapePath)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.addArc(float, float, float, float, float, float):void A[MD:(float, float, float, float, float, float):void (m)]\l0x00a7: CONST  (r2 I:??[int, float, short, byte, char]) = (1127481344(0x43340000, float:180.0) ??[int, float, short, byte, char])  (LINE:137)\l}"];
Node_49 [shape=record,label="{49\:\ 0x00a9|0x00a9: IF  (r18 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('useCircleCutout' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x00bf \l}"];
Node_50 [shape=record,label="{50\:\ 0x00ab|0x00ab: ARITH  (r3 I:float) = (r15 I:float A[D('middle' float)]) \- (r13 I:float A[D('cradleRadius' float)])  (LINE:139)\l0x00ad: NEG  (r4 I:float) = (r13 I:float A[D('cradleRadius' float)]) \l0x00ae: ARITH  (r4 I:float) = (r4 I:float) \- (r20 I:float A[D('verticalOffset' float)]) \l0x00b0: ARITH  (r5 I:float) = (r15 I:float A[D('middle' float)]) + (r13 I:float A[D('cradleRadius' float)]) \l0x00b2: ARITH  (r6 I:float) = (r13 I:float A[D('cradleRadius' float)]) \- (r20 I:float A[D('verticalOffset' float)]) \l0x00b4: ARITH  (r7 I:float) = (r2 I:float) \- (r25 I:float A[D('cutoutArcOffset' float)]) \l0x00b6: ARITH  (r8 I:float) = (r25 I:float A[D('cutoutArcOffset' float)]) * (r11 I:float) \l0x00b8: ARITH  (r8 I:float) = (r8 I:float) \- (r2 I:float) \l0x00b9: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r35 I:??[OBJECT, ARRAY] A[D('shapePath' com.google.android.material.shape.ShapePath)]) \l0x00bb: INVOKE  \l  (r2 I:com.google.android.material.shape.ShapePath)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.addArc(float, float, float, float, float, float):void A[MD:(float, float, float, float, float, float):void (m)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0112|0x0112: ARITH  (r3 I:float) = (r24 I:float A[D('rightRoundedCornerCircleX' float)]) \- (r14 I:float A[D('roundedCornerOffset' float)])  (LINE:170)\l0x0114: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0115: ARITH  (r5 I:float) = (r24 I:float A[D('rightRoundedCornerCircleX' float)]) + (r14 I:float A[D('roundedCornerOffset' float)]) \l0x0117: ARITH  (r6 I:float) = (r14 I:float A[D('roundedCornerOffset' float)]) * (r11 I:float) \l0x0119: CONST  (r2 I:??[int, float, short, byte, char]) = (1132920832(0x43870000, float:270.0) ??[int, float, short, byte, char]) \l0x011b: ARITH  (r7 I:float) = (r2 I:float) \- (r28 I:float A[D('cornerRadiusArcLength' float)]) \l0x011d: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r35 I:??[OBJECT, ARRAY] A[D('shapePath' com.google.android.material.shape.ShapePath)]) \l0x011f: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r28 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cornerRadiusArcLength' float)]) \l0x0121: INVOKE  \l  (r2 I:com.google.android.material.shape.ShapePath)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.addArc(float, float, float, float, float, float):void A[MD:(float, float, float, float, float, float):void (m)]\l0x0124: INVOKE  (r9 I:com.google.android.material.shape.ShapePath), (r1 I:float), (r10 I:float) type: VIRTUAL call: com.google.android.material.shape.ShapePath.lineTo(float, float):void A[MD:(float, float):void (m)] (LINE:179)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0127|RETURN\l|0x0127: RETURN    (LINE:180)\l}"];
Node_51 [shape=record,label="{51\:\ 0x00bf|0x00bf: IGET  (r3 I:float) = (r0 I:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment) com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment.fabMargin float  (LINE:147)\l0x00c1: ARITH  (r4 I:float) = (r17 I:float A[D('cornerSize' float)]) * (r11 I:float) \l0x00c3: ARITH  (r29 I:float) = (r3 I:float) + (r4 I:float) \l0x00c5: ARITH  (r4 I:float) = (r15 I:float A[D('middle' float)]) \- (r13 I:float A[D('cradleRadius' float)])  (LINE:148)\l0x00c7: ARITH  (r5 I:float) = (r17 I:float A[D('cornerSize' float)]) + (r3 I:float) \l0x00c9: NEG  (r5 I:float) = (r5 I:float) \l0x00ca: ARITH  (r6 I:float) = (r15 I:float A[D('middle' float)]) \- (r13 I:float A[D('cradleRadius' float)]) \l0x00cc: ARITH  (r6 I:float) = (r6 I:float) + (r29 I:float A[D('cutoutDiameter' float)]) \l0x00ce: ARITH  (r7 I:float) = (r3 I:float) + (r17 I:float A[D('cornerSize' float)]) \l0x00d0: ARITH  (r8 I:float) = (r2 I:float) \- (r25 I:float A[D('cutoutArcOffset' float)]) \l0x00d2: ARITH  (r3 I:float) = (r25 I:float A[D('cutoutArcOffset' float)]) * (r11 I:float) \l0x00d4: ARITH  (r3 I:float) = (r3 I:float) \- (r2 I:float) \l0x00d5: ARITH  (r30 I:float) = (r3 I:float) \/ (r11 I:float) \l0x00d7: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r35 I:??[OBJECT, ARRAY] A[D('shapePath' com.google.android.material.shape.ShapePath)]) \l0x00d9: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00da: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00db: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00dc: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00dd: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00de: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r30 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00e0: INVOKE  \l  (r2 I:com.google.android.material.shape.ShapePath)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.addArc(float, float, float, float, float, float):void A[MD:(float, float, float, float, float, float):void (m)]\l0x00e3: ARITH  (r2 I:float) = (r15 I:float A[D('middle' float)]) + (r13 I:float A[D('cradleRadius' float)])  (LINE:156)\l0x00e5: IGET  (r3 I:float) = (r0 I:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment) com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment.fabMargin float \l0x00e7: ARITH  (r4 I:float) = (r3 I:float) \/ (r11 I:float) \l0x00e9: ARITH  (r4 I:float) = (r17 I:float A[D('cornerSize' float)]) + (r4 I:float) \l0x00eb: ARITH  (r2 I:float) = (r2 I:float) \- (r4 I:float) \l0x00ec: ARITH  (r3 I:float) = (r17 I:float A[D('cornerSize' float)]) + (r3 I:float) \l0x00ee: INVOKE  (r9 I:com.google.android.material.shape.ShapePath), (r2 I:float), (r3 I:float) type: VIRTUAL call: com.google.android.material.shape.ShapePath.lineTo(float, float):void A[MD:(float, float):void (m)]\l0x00f1: ARITH  (r2 I:float) = (r15 I:float A[D('middle' float)]) + (r13 I:float A[D('cradleRadius' float)])  (LINE:159)\l0x00f3: ARITH  (r3 I:float) = (r17 I:float A[D('cornerSize' float)]) * (r11 I:float) \l0x00f5: IGET  (r4 I:float) = (r0 I:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment) com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment.fabMargin float \l0x00f7: ARITH  (r3 I:float) = (r3 I:float) + (r4 I:float) \l0x00f8: ARITH  (r3 I:float) = (r2 I:float) \- (r3 I:float) \l0x00fa: ARITH  (r2 I:float) = (r17 I:float A[D('cornerSize' float)]) + (r4 I:float) \l0x00fc: NEG  (r5 I:float) = (r2 I:float) \l0x00fd: ARITH  (r6 I:float) = (r15 I:float A[D('middle' float)]) + (r13 I:float A[D('cradleRadius' float)]) \l0x00ff: ARITH  (r7 I:float) = (r4 I:float) + (r17 I:float A[D('cornerSize' float)]) \l0x0101: CONST  (r8 I:??[int, float, short, byte, char]) = (1119092736(0x42b40000, float:90.0) ??[int, float, short, byte, char]) \l0x0103: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1028390912(0xffffffffc2b40000, float:\-90.0) ??[int, float, short, byte, char]) \l0x0105: ARITH  (r30 I:float) = (r25 I:float A[D('cutoutArcOffset' float)]) + (r2 I:float) \l0x0107: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r35 I:??[OBJECT, ARRAY] A[D('shapePath' com.google.android.material.shape.ShapePath)]) \l0x0109: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x010a: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x010b: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x010c: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x010d: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r30 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x010f: INVOKE  \l  (r2 I:com.google.android.material.shape.ShapePath)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:float)\l type: VIRTUAL call: com.google.android.material.shape.ShapePath.addArc(float, float, float, float, float, float):void A[MD:(float, float, float, float, float, float):void (m)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0061|0x0061: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('arcOffset' float)])  (LINE:106)\l0x0063: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('verticalOffset' float)]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0053|0x0053: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public void com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment.getEdgePath((r31 'this' I:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment A[IMMUTABLE_TYPE, THIS]), (r32 I:float A[D('length' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33 I:float A[D('center' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34 I:float A[D('interpolation' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r35 I:com.google.android.material.shape.ShapePath A[D('shapePath' com.google.android.material.shape.ShapePath), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x0037 \-\> B:28:?, CROSS_EDGE: B:53:0x0127 \-\> B:28:?, CROSS_EDGE: B:51:0x00bf \-\> B:52:0x0112, CROSS_EDGE: B:47:0x0061 \-\> B:48:0x0065, CROSS_EDGE: B:43:0x0053 \-\> B:44:0x0054, CROSS_EDGE: B:38:0x0040 \-\> B:43:0x0053\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0057\-0x0065: r2 'arcOffset' F\l  0x002e\-0x0065: r3 'verticalOffset' F\l  0x0085\-0x009a: r6 'cornerRadiusArcLength' F\l  0x0077\-0x009e: r7 'leftRoundedCornerCircleX' F\l  0x0075\-0x00a2: r8 'distanceX' F\l  0x00c5\-0x0112: r29 'cutoutDiameter' F\l  0x0019\-0x0127: r12 'cradleDiameter' F\l  0x001b\-0x0127: r13 'cradleRadius' F\l  0x001f\-0x0127: r14 'roundedCornerOffset' F\l  0x0023\-0x0127: r15 'middle' F\l  0x0030\-0x0127: r16 'verticalOffsetRatio' F\l  0x003c\-0x0127: r17 'cornerSize' F\l  0x0056\-0x0127: r18 'useCircleCutout' Z\l  0x0065\-0x0127: r19 'arcOffset' F\l  0x0065\-0x0127: r20 'verticalOffset' F\l  0x0067\-0x0127: r21 'distanceBetweenCenters' F\l  0x0069\-0x0127: r22 'distanceBetweenCentersSquared' F\l  0x006b\-0x0127: r23 'distanceY' F\l  0x0079\-0x0127: r24 'rightRoundedCornerCircleX' F\l  0x008a\-0x0127: r25 'cutoutArcOffset' F\l  0x009e\-0x0127: r26 'leftRoundedCornerCircleX' F\l  0x00a2\-0x0127: r27 'distanceX' F\l  0x009a\-0x0127: r28 'cornerRadiusArcLength' F\l  \-1 \-0x0127: r32 'length' F\l  \-1 \-0x0127: r33 'center' F\l  \-1 \-0x0127: r34 'interpolation' F\l  \-1 \-0x0127: r35 'shapePath' Lcom\/google\/android\/material\/shape\/ShapePath;\lMETHOD_OVERRIDE: [com.google.android.material.shape.EdgeTreatment.getEdgePath(float, float, float, com.google.android.material.shape.ShapePath):void]\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_28;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_37;
Node_35 -> Node_36;
Node_36 -> Node_28;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_43;
Node_39 -> Node_40;
Node_40 -> Node_42;
Node_40 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_28;
Node_51 -> Node_52;
Node_47 -> Node_48;
Node_43 -> Node_44;
}

