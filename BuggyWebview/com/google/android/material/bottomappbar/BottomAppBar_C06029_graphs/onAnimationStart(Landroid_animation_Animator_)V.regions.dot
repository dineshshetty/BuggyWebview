digraph "CFG forcom.google.android.material.bottomappbar.BottomAppBar.9.onAnimationStart(Landroid\/animation\/Animator;)V" {
subgraph cluster_Region_64967954 {
label = "R(2:1|(1:(1:3)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|com.google.android.material.bottomappbar.BottomAppBar.this.fabAnimationListener.onAnimationStart(r3)\lcom.google.android.material.floatingactionbutton.FloatingActionButton com.google.android.material.floatingactionbutton.FloatingActionButton r0 = com.google.android.material.bottomappbar.BottomAppBar.this.findDependentFab()\l}"];
subgraph cluster_Region_1214261216 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1351815730 {
label = "IF [B:10:0x000d] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x000d|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_1786599487 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000f|r0.setTranslationX(com.google.android.material.bottomappbar.BottomAppBar.this.getFabTranslationX())\l}"];
}
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0018|ORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.bottomappbar.BottomAppBar.9.onAnimationStart((r2v0 'this' com.google.android.material.bottomappbar.BottomAppBar$9 A[IMMUTABLE_TYPE, THIS]), (r3v0 'animation' android.animation.Animator A[D('animation' android.animation.Animator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x000d \-\> B:12:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.animation.Animator.AnimatorListener.onAnimationStart(android.animation.Animator):void\}]\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_7 -> Node_9;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

