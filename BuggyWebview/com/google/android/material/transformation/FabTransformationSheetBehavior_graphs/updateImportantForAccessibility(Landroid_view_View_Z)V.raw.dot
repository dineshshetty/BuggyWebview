digraph "CFG forcom.google.android.material.transformation.FabTransformationSheetBehavior.updateImportantForAccessibility(Landroid\/view\/View;Z)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.ViewParent) = (r10 I:android.view.View A[D('sheet' android.view.View)]) type: VIRTUAL call: android.view.View.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:84)\l0x0004: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('viewParent' android.view.ViewParent)]) androidx.coordinatorlayout.widget.CoordinatorLayout  (LINE:85)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0009 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|RETURN\l|0x0008: RETURN    (LINE:86)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('viewParent' android.view.ViewParent)])  (LINE:89)\l0x000a: CHECK_CAST (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout) = (androidx.coordinatorlayout.widget.CoordinatorLayout) (r1 I:??[OBJECT, ARRAY]) \l0x000c: INVOKE  (r2 I:int) = \l  (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('parent' androidx.coordinatorlayout.widget.CoordinatorLayout)])\l type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getChildCount():int A[MD:():int (c)] (LINE:90)\l0x0010: SGET  (r3 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:91)\l0x0012: CONST  (r4 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IF  (r3 I:??[int, byte, short, char]) \< (r4 I:??[int, byte, short, char])  \-\> B:9:0x001f \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('expanded' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001f \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: NEW_INSTANCE  (r3 I:java.util.HashMap) =  java.util.HashMap  (LINE:92)\l0x001a: INVOKE  (r3 I:java.util.HashMap), (r2 I:int A[D('childCount' int)]) type: DIRECT call: java.util.HashMap.\<init\>(int):void A[MD:(int):void (c)]\l0x001d: IPUT  \l  (r3 I:java.util.Map\<android.view.View, java.lang.Integer\>)\l  (r9 I:com.google.android.material.transformation.FabTransformationSheetBehavior)\l com.google.android.material.transformation.FabTransformationSheetBehavior.importantForAccessibilityMap java.util.Map \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:95)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|LOOP_START\lLOOP:0: B:10:0x0020\-\>B:30:0x0076\l|0x0020: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:34:0x0079 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: INVOKE  (r5 I:android.view.View) = \l  (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('parent' androidx.coordinatorlayout.widget.CoordinatorLayout)])\l  (r3 I:int A[D('i' int)])\l type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:96)\l0x0027: INVOKE  (r6 I:android.view.ViewGroup$LayoutParams) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:100)\l0x002b: INSTANCE_OF  (r6 I:boolean) = (r6 I:??[OBJECT, ARRAY]) androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams \l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x003f \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: INVOKE  (r6 I:android.view.ViewGroup$LayoutParams) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:101)\l0x0033: CHECK_CAST (r6 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) (r6 I:??[OBJECT, ARRAY]) \l0x0035: INVOKE  (r6 I:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) = (r6 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.getBehavior():androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior A[MD:():androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior (m)]\l0x0039: INSTANCE_OF  (r6 I:boolean) = (r6 I:??[OBJECT, ARRAY]) com.google.android.material.transformation.FabTransformationScrimBehavior \l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|0x003b: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x003f \l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0040|0x0040: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('child' android.view.View)]) == (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('sheet' android.view.View)])  \-\> B:36:0x0076  (LINE:103)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0042|0x0042: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasScrimBehavior' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0045 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0045|0x0045: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('expanded' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0061  (LINE:107)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0047|0x0047: IGET  (r7 I:java.util.Map\<android.view.View, java.lang.Integer\>) = (r9 I:com.google.android.material.transformation.FabTransformationSheetBehavior) com.google.android.material.transformation.FabTransformationSheetBehavior.importantForAccessibilityMap java.util.Map  (LINE:108)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0049|0x0049: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0076 \l}"];
Node_23 [shape=record,label="{23\:\ 0x004b|0x004b: INVOKE  (r7 I:boolean) = (r7 I:java.util.Map), (r5 I:java.lang.Object A[D('child' android.view.View)]) type: INTERFACE call: java.util.Map.containsKey(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:109)\l}"];
Node_24 [shape=record,label="{24\:\ 0x004f|0x004f: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0076 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0051|0x0051: IGET  (r7 I:java.util.Map\<android.view.View, java.lang.Integer\>) = (r9 I:com.google.android.material.transformation.FabTransformationSheetBehavior) com.google.android.material.transformation.FabTransformationSheetBehavior.importantForAccessibilityMap java.util.Map  (LINE:111)\l0x0053: INVOKE  (r7 I:java.lang.Object) = (r7 I:java.util.Map), (r5 I:java.lang.Object A[D('child' android.view.View)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0057: CHECK_CAST (r7 I:java.lang.Integer) = (java.lang.Integer) (r7 I:??[OBJECT, ARRAY]) \l0x0059: INVOKE  (r7 I:int) = (r7 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x005d: INVOKE  (r5 I:android.view.View A[D('child' android.view.View)]), (r7 I:int) type: STATIC call: androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0076|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0076|LOOP_END\lLOOP:0: B:10:0x0020\-\>B:30:0x0076\l|0x0076: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:95)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0076|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0076|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0061|0x0061: SGET  (r7 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:115)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0063|0x0063: IF  (r7 I:??[int, byte, short, char]) \< (r4 I:??[int, byte, short, char])  \-\> B:29:0x0072 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0065|0x0065: IGET  (r7 I:java.util.Map\<android.view.View, java.lang.Integer\>) = (r9 I:com.google.android.material.transformation.FabTransformationSheetBehavior) com.google.android.material.transformation.FabTransformationSheetBehavior.importantForAccessibilityMap java.util.Map  (LINE:116)\l0x0067: INVOKE  (r8 I:int) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getImportantForAccessibility():int A[MD:():int (c)]\l0x006b: INVOKE  (r8 I:java.lang.Integer) = (r8 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x006f: INVOKE  (r7 I:java.util.Map), (r5 I:java.lang.Object A[D('child' android.view.View)]), (r8 I:java.lang.Object) type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0072|0x0072: CONST  (r7 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:119)\l0x0073: INVOKE  (r5 I:android.view.View A[D('child' android.view.View)]), (r7 I:int) type: STATIC call: androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0076|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0076|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0076|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0079|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0079|0x0079: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('expanded' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:?  (LINE:124)\l}"];
Node_32 [shape=record,label="{32\:\ 0x007b|0x007b: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:125)\l0x007c: IPUT  \l  (r3 I:java.util.Map\<android.view.View, java.lang.Integer\>)\l  (r9 I:com.google.android.material.transformation.FabTransformationSheetBehavior)\l com.google.android.material.transformation.FabTransformationSheetBehavior.importantForAccessibilityMap java.util.Map \l}"];
Node_33 [shape=record,label="{33\:\ 0x007e|RETURN\lORIG_RETURN\l|0x007e: RETURN    (LINE:127)\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|0x007e: RETURN   A[SYNTHETIC] (LINE:127)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.transformation.FabTransformationSheetBehavior.updateImportantForAccessibility((r9 'this' I:com.google.android.material.transformation.FabTransformationSheetBehavior A[IMMUTABLE_TYPE, THIS]), (r10 I:android.view.View A[D('sheet' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[D('expanded' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:30:0x0076 \-\> B:10:0x0020, CROSS_EDGE: B:24:0x004f \-\> B:30:0x0076, CROSS_EDGE: B:22:0x0049 \-\> B:30:0x0076, CROSS_EDGE: B:29:0x0072 \-\> B:30:0x0076, CROSS_EDGE: B:27:0x0063 \-\> B:29:0x0072, CROSS_EDGE: B:18:0x0042 \-\> B:30:0x0076, CROSS_EDGE: B:17:0x0040 \-\> B:30:0x0076, CROSS_EDGE: B:16:0x003f \-\> B:17:0x0040, CROSS_EDGE: B:12:0x002d \-\> B:16:0x003f, CROSS_EDGE: B:33:0x007e \-\> B:1:?, CROSS_EDGE: B:31:0x0079 \-\> B:33:0x007e, CROSS_EDGE: B:7:0x0016 \-\> B:9:0x001f, CROSS_EDGE: B:6:0x0014 \-\> B:9:0x001f\lDebug Info:\l  0x0026\-0x0076: r5 'child' Landroid\/view\/View;\l  0x0040\-0x0076: r6 'hasScrimBehavior' Z\l  0x0020\-0x0079: r3 'i' I\l  0x0004\-0x007e: r0 'viewParent' Landroid\/view\/ViewParent;\l  0x000c\-0x007e: r1 'parent' Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;\l  0x0010\-0x007e: r2 'childCount' I\l  \-1 \-0x007e: r10 'sheet' Landroid\/view\/View;\l  \-1 \-0x007e: r11 'expanded' Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_34;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_36;
Node_18 -> Node_20;
Node_18 -> Node_40[style=dashed];
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_37;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_38;
Node_25 -> Node_39;
Node_39 -> Node_30;
Node_30 -> Node_10;
Node_38 -> Node_30;
Node_37 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_35;
Node_35 -> Node_30;
Node_40 -> Node_30;
Node_36 -> Node_30;
Node_16 -> Node_17;
Node_34 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_41;
Node_32 -> Node_33;
Node_33 -> Node_1;
Node_41 -> Node_1;
}

