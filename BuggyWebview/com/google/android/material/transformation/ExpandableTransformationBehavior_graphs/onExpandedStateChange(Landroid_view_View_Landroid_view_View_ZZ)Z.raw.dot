digraph "CFG forcom.google.android.material.transformation.ExpandableTransformationBehavior.onExpandedStateChange(Landroid\/view\/View;Landroid\/view\/View;ZZ)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IGET  (r0 I:android.animation.AnimatorSet) = (r4 I:com.google.android.material.transformation.ExpandableTransformationBehavior) com.google.android.material.transformation.ExpandableTransformationBehavior.currentAnimation android.animation.AnimatorSet  (LINE:75)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0007 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|0x0005: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|0x0008: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('currentlyAnimating' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x000d  (LINE:76)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: INVOKE  (r0 I:android.animation.AnimatorSet) type: VIRTUAL call: android.animation.AnimatorSet.cancel():void A[MD:():void (c)] (LINE:77)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000d|0x000e: INVOKE  (r0 I:android.animation.AnimatorSet) = \l  (r4 I:com.google.android.material.transformation.ExpandableTransformationBehavior)\l  (r5 I:android.view.View A[D('dependency' android.view.View)])\l  (r6 I:android.view.View A[D('child' android.view.View)])\l  (r7 I:boolean A[D('expanded' boolean)])\l  (r2 I:boolean A[D('currentlyAnimating' boolean)])\l type: VIRTUAL call: com.google.android.material.transformation.ExpandableTransformationBehavior.onCreateExpandedStateChangeAnimation(android.view.View, android.view.View, boolean, boolean):android.animation.AnimatorSet A[MD:(android.view.View, android.view.View, boolean, boolean):android.animation.AnimatorSet (m)] (LINE:81)\l0x0012: IPUT  \l  (r0 I:android.animation.AnimatorSet)\l  (r4 I:com.google.android.material.transformation.ExpandableTransformationBehavior)\l com.google.android.material.transformation.ExpandableTransformationBehavior.currentAnimation android.animation.AnimatorSet \l0x0014: NEW_INSTANCE  (r3 I:com.google.android.material.transformation.ExpandableTransformationBehavior$1) =  com.google.android.material.transformation.ExpandableTransformationBehavior$1  (LINE:82)\l0x0016: INVOKE  \l  (r3 I:com.google.android.material.transformation.ExpandableTransformationBehavior$1)\l  (r4 I:com.google.android.material.transformation.ExpandableTransformationBehavior)\l type: DIRECT call: com.google.android.material.transformation.ExpandableTransformationBehavior.1.\<init\>(com.google.android.material.transformation.ExpandableTransformationBehavior):void A[MD:(com.google.android.material.transformation.ExpandableTransformationBehavior):void (m)]\l0x0019: INVOKE  (r0 I:android.animation.AnimatorSet), (r3 I:android.animation.Animator$AnimatorListener) type: VIRTUAL call: android.animation.AnimatorSet.addListener(android.animation.Animator$AnimatorListener):void A[MD:(android.animation.Animator$AnimatorListener):void (c)]\l0x001c: IGET  (r0 I:android.animation.AnimatorSet) = (r4 I:com.google.android.material.transformation.ExpandableTransformationBehavior) com.google.android.material.transformation.ExpandableTransformationBehavior.currentAnimation android.animation.AnimatorSet  (LINE:90)\l0x001e: INVOKE  (r0 I:android.animation.AnimatorSet) type: VIRTUAL call: android.animation.AnimatorSet.start():void A[MD:():void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0021|0x0021: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('animated' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0028  (LINE:91)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0023|0x0023: IGET  (r0 I:android.animation.AnimatorSet) = (r4 I:com.google.android.material.transformation.ExpandableTransformationBehavior) com.google.android.material.transformation.ExpandableTransformationBehavior.currentAnimation android.animation.AnimatorSet  (LINE:94)\l0x0025: INVOKE  (r0 I:android.animation.AnimatorSet) type: VIRTUAL call: android.animation.AnimatorSet.end():void A[MD:():void (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0028|RETURN\l|0x0028: RETURN  (r1 I:boolean)  (LINE:97)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.transformation.ExpandableTransformationBehavior.onExpandedStateChange((r4 'this' I:com.google.android.material.transformation.ExpandableTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[D('dependency' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[D('expanded' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[D('animated' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0021 \-\> B:23:0x0028, CROSS_EDGE: B:18:0x0008 \-\> B:20:0x000d, CROSS_EDGE: B:17:0x0007 \-\> B:18:0x0008\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x0028: r2 'currentlyAnimating' Z\l  \-1 \-0x0028: r5 'dependency' Landroid\/view\/View;\l  \-1 \-0x0028: r6 'child' Landroid\/view\/View;\l  \-1 \-0x0028: r7 'expanded' Z\l  \-1 \-0x0028: r8 'animated' Z\lMETHOD_OVERRIDE: [com.google.android.material.transformation.ExpandableBehavior.onExpandedStateChange(android.view.View, android.view.View, boolean, boolean):boolean]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_17 -> Node_18;
}

