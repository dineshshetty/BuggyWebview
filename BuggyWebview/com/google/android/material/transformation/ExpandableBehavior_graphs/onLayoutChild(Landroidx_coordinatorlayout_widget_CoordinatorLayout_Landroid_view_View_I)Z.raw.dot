digraph "CFG forcom.google.android.material.transformation.ExpandableBehavior.onLayoutChild(Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;Landroid\/view\/View;I)Z" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r6 I:android.view.View A[D('child' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.isLaidOut(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:98)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:? \l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|0x0006: INVOKE  (r0 I:com.google.android.material.expandable.ExpandableWidget) = \l  (r4 I:com.google.android.material.transformation.ExpandableBehavior)\l  (r5 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('parent' androidx.coordinatorlayout.widget.CoordinatorLayout)])\l  (r6 I:android.view.View A[D('child' android.view.View)])\l type: VIRTUAL call: com.google.android.material.transformation.ExpandableBehavior.findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View):com.google.android.material.expandable.ExpandableWidget A[MD:(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View):com.google.android.material.expandable.ExpandableWidget (m)] (LINE:99)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('dep' com.google.android.material.expandable.ExpandableWidget)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:?  (LINE:100)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|0x000c: INVOKE  (r1 I:boolean) = \l  (r0 I:com.google.android.material.expandable.ExpandableWidget A[D('dep' com.google.android.material.expandable.ExpandableWidget)])\l type: INTERFACE call: com.google.android.material.expandable.ExpandableWidget.isExpanded():boolean A[MD:():boolean (m)]\l0x0010: INVOKE  (r1 I:boolean) = (r4 I:com.google.android.material.transformation.ExpandableBehavior), (r1 I:boolean) type: DIRECT call: com.google.android.material.transformation.ExpandableBehavior.didStateChange(boolean):boolean A[MD:(boolean):boolean (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|0x0014: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:? \l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|0x0016: INVOKE  (r1 I:boolean) = \l  (r0 I:com.google.android.material.expandable.ExpandableWidget A[D('dep' com.google.android.material.expandable.ExpandableWidget)])\l type: INTERFACE call: com.google.android.material.expandable.ExpandableWidget.isExpanded():boolean A[MD:():boolean (m)] (LINE:101)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001a|0x001a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x001e \l}"];
Node_28 [shape=record,label="{28\:\ 0x001c|0x001c: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x001f|0x001f: IPUT  (r1 I:int), (r4 I:com.google.android.material.transformation.ExpandableBehavior) com.google.android.material.transformation.ExpandableBehavior.currentState int \l0x0021: IGET  (r1 I:int) = (r4 I:com.google.android.material.transformation.ExpandableBehavior) com.google.android.material.transformation.ExpandableBehavior.currentState int  (LINE:102)\l0x0024: INVOKE  (r2 I:android.view.ViewTreeObserver) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getViewTreeObserver():android.view.ViewTreeObserver A[MD:():android.view.ViewTreeObserver (c)] (LINE:104)\l0x0028: NEW_INSTANCE  (r3 I:com.google.android.material.transformation.ExpandableBehavior$1) =  com.google.android.material.transformation.ExpandableBehavior$1 \l0x002a: INVOKE  \l  (r3 I:com.google.android.material.transformation.ExpandableBehavior$1)\l  (r4 I:com.google.android.material.transformation.ExpandableBehavior)\l  (r6 I:android.view.View A[D('child' android.view.View)])\l  (r1 I:int A[D('expectedState' int)])\l  (r0 I:com.google.android.material.expandable.ExpandableWidget A[D('dep' com.google.android.material.expandable.ExpandableWidget)])\l type: DIRECT call: com.google.android.material.transformation.ExpandableBehavior.1.\<init\>(com.google.android.material.transformation.ExpandableBehavior, android.view.View, int, com.google.android.material.expandable.ExpandableWidget):void A[MD:(com.google.android.material.transformation.ExpandableBehavior, android.view.View, int, com.google.android.material.expandable.ExpandableWidget):void (m)]\l0x002d: INVOKE  (r2 I:android.view.ViewTreeObserver), (r3 I:android.view.ViewTreeObserver$OnPreDrawListener) type: VIRTUAL call: android.view.ViewTreeObserver.addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener):void A[MD:(android.view.ViewTreeObserver$OnPreDrawListener):void (c)] (LINE:105)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0030|RETURN\lORIG_RETURN\l|0x0030: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dep' com.google.android.material.expandable.ExpandableWidget)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:120)\l0x0031: RETURN  (r0 I:boolean) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x001e|0x001e: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0030: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dep' com.google.android.material.expandable.ExpandableWidget)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:120)\l0x0031: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|0x0030: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dep' com.google.android.material.expandable.ExpandableWidget)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:120)\l0x0031: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0030: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dep' com.google.android.material.expandable.ExpandableWidget)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:120)\l0x0031: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.transformation.ExpandableBehavior.onLayoutChild((r4 'this' I:com.google.android.material.transformation.ExpandableBehavior A[IMMUTABLE_TYPE, THIS]), (r5 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('parent' androidx.coordinatorlayout.widget.CoordinatorLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('layoutDirection' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x001e \-\> B:30:0x001f, CROSS_EDGE: B:25:0x0014 \-\> B:31:0x0030, CROSS_EDGE: B:23:0x000a \-\> B:31:0x0030, CROSS_EDGE: B:21:0x0004 \-\> B:31:0x0030\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x0030: r0 'dep' Lcom\/google\/android\/material\/expandable\/ExpandableWidget;\l  0x0023\-0x0030: r1 'expectedState' I\l  \-1 \-0x0031: r5 'parent' Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;\l  \-1 \-0x0031: r6 'child' Landroid\/view\/View;\l  \-1 \-0x0031: r7 'layoutDirection' I\lMETHOD_OVERRIDE: [androidx.coordinatorlayout.widget.CoordinatorLayout.Behavior.onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout, V extends android.view.View, int):boolean]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_33;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_34;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_35;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_19;
Node_29 -> Node_30;
Node_35 -> Node_19;
Node_34 -> Node_19;
Node_33 -> Node_19;
}

