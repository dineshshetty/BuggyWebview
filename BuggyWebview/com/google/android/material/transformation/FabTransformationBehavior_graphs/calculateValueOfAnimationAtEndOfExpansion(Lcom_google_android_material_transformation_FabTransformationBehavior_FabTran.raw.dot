digraph "CFG forcom.google.android.material.transformation.FabTransformationBehavior.calculateValueOfAnimationAtEndOfExpansion(Lcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;Lcom\/google\/android\/material\/animation\/MotionTiming;FF)F" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:long) = \l  (r11 I:com.google.android.material.animation.MotionTiming A[D('timing' com.google.android.material.animation.MotionTiming)])\l type: VIRTUAL call: com.google.android.material.animation.MotionTiming.getDelay():long A[MD:():long (m)] (LINE:690)\l0x0004: INVOKE  (r2 I:long) = \l  (r11 I:com.google.android.material.animation.MotionTiming A[D('timing' com.google.android.material.animation.MotionTiming)])\l type: VIRTUAL call: com.google.android.material.animation.MotionTiming.getDuration():long A[MD:():long (m)] (LINE:691)\l0x0008: IGET  (r4 I:com.google.android.material.animation.MotionSpec) = \l  (r10 I:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec A[D('spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec)])\l com.google.android.material.transformation.FabTransformationBehavior.FabTransformationSpec.timings com.google.android.material.animation.MotionSpec  (LINE:694)\l0x000a: CONST_STR  (r5 I:java.lang.String) =  \"expansion\" \l0x000c: INVOKE  (r4 I:com.google.android.material.animation.MotionTiming) = (r4 I:com.google.android.material.animation.MotionSpec), (r5 I:java.lang.String) type: VIRTUAL call: com.google.android.material.animation.MotionSpec.getTiming(java.lang.String):com.google.android.material.animation.MotionTiming A[MD:(java.lang.String):com.google.android.material.animation.MotionTiming (m)]\l0x0010: INVOKE  (r5 I:long) = \l  (r4 I:com.google.android.material.animation.MotionTiming A[D('expansionTiming' com.google.android.material.animation.MotionTiming)])\l type: VIRTUAL call: com.google.android.material.animation.MotionTiming.getDelay():long A[MD:():long (m)] (LINE:695)\l0x0014: INVOKE  (r7 I:long) = \l  (r4 I:com.google.android.material.animation.MotionTiming A[D('expansionTiming' com.google.android.material.animation.MotionTiming)])\l type: VIRTUAL call: com.google.android.material.animation.MotionTiming.getDuration():long A[MD:():long (m)]\l0x0018: ARITH  (r5 I:long) = (r5 I:long) + (r7 I:long) \l0x0019: CONST  (r7 I:??[long, double]) = (17 ??[long, double])  (LINE:698)\l0x001b: ARITH  (r5 I:long) = (r5 I:long A[D('expansionEnd' long)]) + (r7 I:long) \l0x001c: ARITH  (r7 I:long) = (r5 I:long A[D('expansionEnd' long)]) \- (r0 I:long A[D('delay' long)])  (LINE:699)\l0x001e: CAST (r7 I:float) = (float) (r7 I:long) \l0x001f: CAST (r8 I:float) = (float) (r2 I:long A[D('duration' long)]) \l0x0020: ARITH  (r7 I:float) = (r7 I:float) \/ (r8 I:float) \l0x0021: INVOKE  (r8 I:android.animation.TimeInterpolator) = \l  (r11 I:com.google.android.material.animation.MotionTiming A[D('timing' com.google.android.material.animation.MotionTiming)])\l type: VIRTUAL call: com.google.android.material.animation.MotionTiming.getInterpolator():android.animation.TimeInterpolator A[MD:():android.animation.TimeInterpolator (m)] (LINE:702)\l0x0025: INVOKE  (r7 I:float A[D('fraction' float)]) = (r8 I:android.animation.TimeInterpolator), (r7 I:float A[D('fraction' float)]) type: INTERFACE call: android.animation.TimeInterpolator.getInterpolation(float):float A[MD:(float):float (c)]\l0x0029: INVOKE  (r8 I:float) = (r12 I:float A[D('from' float)]), (r13 I:float A[D('to' float)]), (r7 I:float A[D('fraction' float)]) type: STATIC call: com.google.android.material.animation.AnimationUtils.lerp(float, float, float):float A[MD:(float, float, float):float (m)] (LINE:703)\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|RETURN\l|0x002d: RETURN  (r8 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private float com.google.android.material.transformation.FabTransformationBehavior.calculateValueOfAnimationAtEndOfExpansion((r9 'this' I:com.google.android.material.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r10 I:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec A[D('spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:com.google.android.material.animation.MotionTiming A[D('timing' com.google.android.material.animation.MotionTiming), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:float A[D('from' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:float A[D('to' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x002d: r0 'delay' J\l  0x0008\-0x002d: r2 'duration' J\l  0x0010\-0x002d: r4 'expansionTiming' Lcom\/google\/android\/material\/animation\/MotionTiming;\l  0x0019\-0x002d: r5 'expansionEnd' J\l  0x0021\-0x002d: r7 'fraction' F\l  \-1 \-0x002d: r10 'spec' Lcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;\l  \-1 \-0x002d: r11 'timing' Lcom\/google\/android\/material\/animation\/MotionTiming;\l  \-1 \-0x002d: r12 'from' F\l  \-1 \-0x002d: r13 'to' F\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

