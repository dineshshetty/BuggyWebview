digraph "CFG forcom.google.android.material.transformation.FabTransformationBehavior.createExpansionAnimation(Landroid\/view\/View;Landroid\/view\/View;ZZLcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;FFLjava\/util\/List;Ljava\/util\/List;)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000}"];
Node_19 [shape=record,label="{19\:\ 0x000a|if ((r26 instanceof com.google.android.material.circularreveal.CircularRevealWidget) != false) goto L5\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|com.google.android.material.circularreveal.CircularRevealWidget r11 = (com.google.android.material.circularreveal.CircularRevealWidget) r26\lfloat r10 = calculateRevealCenterX(r25, r26, r29.positioning)\lfloat r9 = calculateRevealCenterY(r25, r26, r29.positioning)\l((com.google.android.material.floatingactionbutton.FloatingActionButton) r25).getContentRect(r24.tmpRect)\lfloat r8 = ((float) r24.tmpRect.width()) \/ 2.0f\lcom.google.android.material.animation.MotionTiming r7 = r29.timings.getTiming(\"expansion\")\l}"];
Node_22 [shape=record,label="{22\:\ 0x0037|if (r27 == false) goto L15\l}"];
Node_23 [shape=record,label="{23\:\ 0x0039|if (r28 != false) goto L9\l}"];
Node_24 [shape=record,label="{24\:\ 0x003b|r11.setRevealInfo(new com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo(r10, r9, r8))\l}"];
Node_25 [shape=record,label="{25\:\ 0x0043|if (r28 == false) goto L14\l}"];
Node_26 [shape=record,label="{26\:\ 0x0045|r6 = r11.getRevealInfo().radius\l}"];
Node_28 [shape=record,label="{28\:\ 0x004e|PHI: r6 \l  PHI: (r6v4 'fromRadius' float) = (r6v3 'fromRadius' float), (r6v5 'fromRadius' float) binds: [B:27:0x004d, B:26:0x0045] A[DONT_GENERATE, DONT_INLINE]\l|float r5 = com.google.android.material.math.MathUtils.distanceToFurthestCorner(r10, r9, 0.0f, 0.0f, r30, r31)\landroid.animation.Animator r4 = com.google.android.material.circularreveal.CircularRevealCompat.createCircularReveal(r11, r10, r9, r5)\lr4.addListener(new com.google.android.material.transformation.FabTransformationBehavior.C08364())\lr16 = r7\lcreatePreFillRadialExpansion(r26, r7.getDelay(), (int) r10, (int) r9, r6, r32)\lr23 = r11\lr4 = r4\l}"];
Node_30 [shape=record,label="{30\:\ 0x00e5|PHI: r4 r16 r23 \l  PHI: (r4v3 'animator' android.animation.Animator) = (r4v2 'animator' android.animation.Animator), (r4v6 'animator' android.animation.Animator) binds: [B:29:0x0094, B:28:0x004e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r16v1 'timing' com.google.android.material.animation.MotionTiming) = (r16v0 'timing' com.google.android.material.animation.MotionTiming), (r16v4 'timing' com.google.android.material.animation.MotionTiming) binds: [B:29:0x0094, B:28:0x004e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r23v1 'circularRevealChild' com.google.android.material.circularreveal.CircularRevealWidget) = (r23v0 'circularRevealChild' com.google.android.material.circularreveal.CircularRevealWidget), (r23v2 'circularRevealChild' com.google.android.material.circularreveal.CircularRevealWidget) binds: [B:29:0x0094, B:28:0x004e] A[DONT_GENERATE, DONT_INLINE]\l|r16.apply(r4)\lr32.add(r4)\lr33.add(com.google.android.material.circularreveal.CircularRevealCompat.createCircularRevealListener(r23))\l}"];
Node_31 [shape=record,label="{31\:\ 0x00f8|RETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ 0x004d|r6 = r8\l}"];
Node_29 [shape=record,label="{29\:\ 0x0094|r16 = r7\lfloat r7 = r11.getRevealInfo().radius\landroid.animation.Animator r17 = com.google.android.material.circularreveal.CircularRevealCompat.createCircularReveal(r11, r10, r9, r8)\lcreatePreFillRadialExpansion(r26, r16.getDelay(), (int) r10, (int) r9, r7, r32)\lr23 = r11\lcreatePostFillRadialExpansion(r26, r16.getDelay(), r16.getDuration(), r29.timings.getTotalDuration(), (int) r10, (int) r9, r8, r32)\lr4 = r17\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.transformation.FabTransformationBehavior.createExpansionAnimation((r24v0 'this' com.google.android.material.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r25v0 'dependency' android.view.View A[D('dependency' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 'expanded' boolean A[D('expanded' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28v0 'currentlyAnimating' boolean A[D('currentlyAnimating' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29v0 'spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec A[D('spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30v0 'childWidth' float A[D('childWidth' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31v0 'childHeight' float A[D('childHeight' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 'animations' java.util.List\<android.animation.Animator\> A[D('animations' java.util.List\<android.animation.Animator\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33v0 'listeners' java.util.List\<android.animation.Animator$AnimatorListener\> A[D('listeners' java.util.List\<android.animation.Animator$AnimatorListener\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x00f8 \-\> B:17:?, CROSS_EDGE: B:27:0x004d \-\> B:28:0x004e, CROSS_EDGE: B:23:0x0039 \-\> B:25:0x0043, CROSS_EDGE: B:29:0x0094 \-\> B:30:0x00e5\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Landroid\/view\/View;Landroid\/view\/View;ZZLcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;FFLjava\/util\/List\<Landroid\/animation\/Animator;\>;Ljava\/util\/List\<Landroid\/animation\/Animator$AnimatorListener;\>;)V\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_29;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_17;
Node_27 -> Node_28;
Node_29 -> Node_30;
}

