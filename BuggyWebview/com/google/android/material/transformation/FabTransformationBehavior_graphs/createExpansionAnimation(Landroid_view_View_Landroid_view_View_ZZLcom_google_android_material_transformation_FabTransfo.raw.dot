digraph "CFG forcom.google.android.material.transformation.FabTransformationBehavior.createExpansionAnimation(Landroid\/view\/View;Landroid\/view\/View;ZZLcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;FFLjava\/util\/List;Ljava\/util\/List;)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r24 I:??[OBJECT, ARRAY])  (LINE:377)\l0x0002: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r25 I:??[OBJECT, ARRAY] A[D('dependency' android.view.View)]) \l0x0004: MOVE  (r14 I:??[OBJECT, ARRAY]) = (r26 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) \l0x0006: MOVE  (r15 I:??[OBJECT, ARRAY]) = \l  (r29 I:??[OBJECT, ARRAY] A[D('spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec)])\l \l0x0008: INSTANCE_OF  (r0 I:boolean) = (r14 I:??[OBJECT, ARRAY]) com.google.android.material.circularreveal.CircularRevealWidget \l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x000d \l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|RETURN\l|0x000c: RETURN    (LINE:378)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|0x000d: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY])  (LINE:380)\l0x000e: CHECK_CAST (r11 I:com.google.android.material.circularreveal.CircularRevealWidget) = (com.google.android.material.circularreveal.CircularRevealWidget) (r11 I:??[OBJECT, ARRAY]) \l0x0010: IGET  (r0 I:com.google.android.material.animation.Positioning) = (r15 I:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec) com.google.android.material.transformation.FabTransformationBehavior.FabTransformationSpec.positioning com.google.android.material.animation.Positioning  (LINE:382)\l0x0012: INVOKE  (r10 I:float) = \l  (r12 I:com.google.android.material.transformation.FabTransformationBehavior)\l  (r13 I:android.view.View)\l  (r14 I:android.view.View)\l  (r0 I:com.google.android.material.animation.Positioning)\l type: DIRECT call: com.google.android.material.transformation.FabTransformationBehavior.calculateRevealCenterX(android.view.View, android.view.View, com.google.android.material.animation.Positioning):float A[MD:(android.view.View, android.view.View, com.google.android.material.animation.Positioning):float (m)]\l0x0016: IGET  (r0 I:com.google.android.material.animation.Positioning) = (r15 I:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec) com.google.android.material.transformation.FabTransformationBehavior.FabTransformationSpec.positioning com.google.android.material.animation.Positioning  (LINE:383)\l0x0018: INVOKE  (r9 I:float) = \l  (r12 I:com.google.android.material.transformation.FabTransformationBehavior)\l  (r13 I:android.view.View)\l  (r14 I:android.view.View)\l  (r0 I:com.google.android.material.animation.Positioning)\l type: DIRECT call: com.google.android.material.transformation.FabTransformationBehavior.calculateRevealCenterY(android.view.View, android.view.View, com.google.android.material.animation.Positioning):float A[MD:(android.view.View, android.view.View, com.google.android.material.animation.Positioning):float (m)]\l0x001c: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY])  (LINE:384)\l0x001d: CHECK_CAST (r0 I:com.google.android.material.floatingactionbutton.FloatingActionButton) = (com.google.android.material.floatingactionbutton.FloatingActionButton) (r0 I:??[OBJECT, ARRAY]) \l0x001f: IGET  (r1 I:android.graphics.Rect) = (r12 I:com.google.android.material.transformation.FabTransformationBehavior) com.google.android.material.transformation.FabTransformationBehavior.tmpRect android.graphics.Rect \l0x0021: INVOKE  (r0 I:com.google.android.material.floatingactionbutton.FloatingActionButton), (r1 I:android.graphics.Rect) type: VIRTUAL call: com.google.android.material.floatingactionbutton.FloatingActionButton.getContentRect(android.graphics.Rect):boolean A[MD:(android.graphics.Rect):boolean (m)]\l0x0024: IGET  (r0 I:android.graphics.Rect) = (r12 I:com.google.android.material.transformation.FabTransformationBehavior) com.google.android.material.transformation.FabTransformationBehavior.tmpRect android.graphics.Rect  (LINE:385)\l0x0026: INVOKE  (r0 I:int) = (r0 I:android.graphics.Rect) type: VIRTUAL call: android.graphics.Rect.width():int A[MD:():int (c)]\l0x002a: CAST (r0 I:float) = (float) (r0 I:int) \l0x002b: CONST  (r1 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x002d: ARITH  (r8 I:float) = (r0 I:float) \/ (r1 I:float) \l0x002f: IGET  (r0 I:com.google.android.material.animation.MotionSpec) = (r15 I:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec) com.google.android.material.transformation.FabTransformationBehavior.FabTransformationSpec.timings com.google.android.material.animation.MotionSpec  (LINE:388)\l0x0031: CONST_STR  (r1 I:java.lang.String) =  \"expansion\" \l0x0033: INVOKE  (r7 I:com.google.android.material.animation.MotionTiming) = (r0 I:com.google.android.material.animation.MotionSpec), (r1 I:java.lang.String) type: VIRTUAL call: com.google.android.material.animation.MotionSpec.getTiming(java.lang.String):com.google.android.material.animation.MotionTiming A[MD:(java.lang.String):com.google.android.material.animation.MotionTiming (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0037|0x0037: IF  (r27 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('expanded' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0094  (LINE:390)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0039|0x0039: IF  (r28 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('currentlyAnimating' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0043  (LINE:391)\l}"];
Node_24 [shape=record,label="{24\:\ 0x003b|0x003b: NEW_INSTANCE  (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) =  com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo  (LINE:392)\l0x003d: INVOKE  \l  (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)\l  (r10 I:float A[D('revealCenterX' float)])\l  (r9 I:float A[D('revealCenterY' float)])\l  (r8 I:float A[D('dependencyRadius' float)])\l type: DIRECT call: com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.\<init\>(float, float, float):void A[MD:(float, float, float):void (m)]\l0x0040: INVOKE  \l  (r11 I:com.google.android.material.circularreveal.CircularRevealWidget A[D('circularRevealChild' com.google.android.material.circularreveal.CircularRevealWidget)])\l  (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)\l type: INTERFACE call: com.google.android.material.circularreveal.CircularRevealWidget.setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo):void A[MD:(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo):void (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0043|0x0043: IF  (r28 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('currentlyAnimating' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x004d  (LINE:396)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0045|0x0045: INVOKE  (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) = \l  (r11 I:com.google.android.material.circularreveal.CircularRevealWidget A[D('circularRevealChild' com.google.android.material.circularreveal.CircularRevealWidget)])\l type: INTERFACE call: com.google.android.material.circularreveal.CircularRevealWidget.getRevealInfo():com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo A[MD:():com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo (m)]\l0x0049: IGET  (r0 I:float) = (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.radius float \l0x004b: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x004e|0x004e: CONST  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:397)\l0x0050: CONST  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0052: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('revealCenterX' float)])  (LINE:398)\l0x0054: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('revealCenterY' float)]) \l0x0056: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r30 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childWidth' float)]) \l0x0058: MOVE  (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r31 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childHeight' float)]) \l0x005a: INVOKE  (r5 I:float) = (r16 I:float), (r17 I:float), (r18 I:float), (r19 I:float), (r20 I:float), (r21 I:float) type: STATIC call: com.google.android.material.math.MathUtils.distanceToFurthestCorner(float, float, float, float, float, float):float A[MD:(float, float, float, float, float, float):float (m)]\l0x005f: INVOKE  (r4 I:android.animation.Animator) = \l  (r11 I:com.google.android.material.circularreveal.CircularRevealWidget A[D('circularRevealChild' com.google.android.material.circularreveal.CircularRevealWidget)])\l  (r10 I:float A[D('revealCenterX' float)])\l  (r9 I:float A[D('revealCenterY' float)])\l  (r5 I:float A[D('toRadius' float)])\l type: STATIC call: com.google.android.material.circularreveal.CircularRevealCompat.createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget, float, float, float):android.animation.Animator A[MD:(com.google.android.material.circularreveal.CircularRevealWidget, float, float, float):android.animation.Animator (m)] (LINE:402)\l0x0063: NEW_INSTANCE  (r0 I:com.google.android.material.transformation.FabTransformationBehavior$4) =  com.google.android.material.transformation.FabTransformationBehavior$4  (LINE:404)\l0x0065: INVOKE  \l  (r0 I:com.google.android.material.transformation.FabTransformationBehavior$4)\l  (r12 I:com.google.android.material.transformation.FabTransformationBehavior)\l  (r11 I:com.google.android.material.circularreveal.CircularRevealWidget A[D('circularRevealChild' com.google.android.material.circularreveal.CircularRevealWidget)])\l type: DIRECT call: com.google.android.material.transformation.FabTransformationBehavior.4.\<init\>(com.google.android.material.transformation.FabTransformationBehavior, com.google.android.material.circularreveal.CircularRevealWidget):void A[MD:(com.google.android.material.transformation.FabTransformationBehavior, com.google.android.material.circularreveal.CircularRevealWidget):void (m)]\l0x0068: INVOKE  \l  (r4 I:android.animation.Animator A[D('animator' android.animation.Animator)])\l  (r0 I:android.animation.Animator$AnimatorListener)\l type: VIRTUAL call: android.animation.Animator.addListener(android.animation.Animator$AnimatorListener):void A[MD:(android.animation.Animator$AnimatorListener):void (c)]\l0x006c: INVOKE  (r2 I:long) = \l  (r7 I:com.google.android.material.animation.MotionTiming A[D('timing' com.google.android.material.animation.MotionTiming)])\l type: VIRTUAL call: com.google.android.material.animation.MotionTiming.getDelay():long A[MD:():long (m)] (LINE:418)\l0x0070: CAST (r1 I:int) = (int) (r10 I:float A[D('revealCenterX' float)]) \l0x0071: CAST (r0 I:int) = (int) (r9 I:float A[D('revealCenterY' float)]) \l0x0072: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:416)\l0x0074: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r24 I:??[OBJECT, ARRAY]) \l0x0076: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0078: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r26 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) \l0x007a: MOVE  (r18 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('animator' android.animation.Animator)]) \l0x007c: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('animator' android.animation.Animator)]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x007e: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('toRadius' float)]) \l0x0080: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('toRadius' float)]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0082: MOVE  (r16 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('timing' com.google.android.material.animation.MotionTiming)]) \l0x0084: MOVE  (r7 I:??[OBJECT, ARRAY] A[D('timing' com.google.android.material.animation.MotionTiming)]) = (r32 I:??[OBJECT, ARRAY] A[D('animations' java.util.List\<android.animation.Animator\>)]) \l0x0086: INVOKE  \l  (r0 I:com.google.android.material.transformation.FabTransformationBehavior)\l  (r1 I:android.view.View)\l  (r2 I:long)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:float A[D('fromRadius' float)])\l  (r7 I:java.util.List)\l type: DIRECT call: com.google.android.material.transformation.FabTransformationBehavior.createPreFillRadialExpansion(android.view.View, long, int, int, float, java.util.List):void A[MD:(android.view.View, long, int, int, float, java.util.List\<android.animation.Animator\>):void (m)]\l0x0089: MOVE  (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dependencyRadius' float)])  (LINE:424)\l0x008b: MOVE  (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('revealCenterY' float)]) \l0x008d: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('revealCenterX' float)]) \l0x008f: MOVE  (r23 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('circularRevealChild' com.google.android.material.circularreveal.CircularRevealWidget)]) \l0x0091: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY] A[D('animator' android.animation.Animator)]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00e5|0x00e5: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY] A[D('timing' com.google.android.material.animation.MotionTiming)])  (LINE:449)\l0x00e7: INVOKE  \l  (r0 I:com.google.android.material.animation.MotionTiming A[D('timing' com.google.android.material.animation.MotionTiming)])\l  (r4 I:android.animation.Animator A[D('animator' android.animation.Animator)])\l type: VIRTUAL call: com.google.android.material.animation.MotionTiming.apply(android.animation.Animator):void A[MD:(android.animation.Animator):void (m)]\l0x00ea: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r32 I:??[OBJECT, ARRAY] A[D('animations' java.util.List\<android.animation.Animator\>)])  (LINE:450)\l0x00ec: INVOKE  (r1 I:java.util.List), (r4 I:java.lang.Object A[D('animator' android.animation.Animator)]) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x00ef: INVOKE  (r2 I:android.animation.Animator$AnimatorListener) = \l  (r23 I:com.google.android.material.circularreveal.CircularRevealWidget A[D('circularRevealChild' com.google.android.material.circularreveal.CircularRevealWidget)])\l type: STATIC call: com.google.android.material.circularreveal.CircularRevealCompat.createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget):android.animation.Animator$AnimatorListener A[MD:(com.google.android.material.circularreveal.CircularRevealWidget):android.animation.Animator$AnimatorListener (m)] (LINE:451)\l0x00f3: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r33 I:??[OBJECT, ARRAY] A[D('listeners' java.util.List\<android.animation.Animator$AnimatorListener\>)]) \l0x00f5: INVOKE  (r3 I:java.util.List), (r2 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x00f8|RETURN\l|0x00f8: RETURN    (LINE:452)\l}"];
Node_27 [shape=record,label="{27\:\ 0x004d|0x004d: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dependencyRadius' float)]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0094|0x0094: MOVE  (r16 I:??[OBJECT, ARRAY] A[D('timing' com.google.android.material.animation.MotionTiming)]) = (r7 I:??[OBJECT, ARRAY] A[D('timing' com.google.android.material.animation.MotionTiming)])  (LINE:425)\l0x0096: INVOKE  (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) = \l  (r11 I:com.google.android.material.circularreveal.CircularRevealWidget A[D('circularRevealChild' com.google.android.material.circularreveal.CircularRevealWidget)])\l type: INTERFACE call: com.google.android.material.circularreveal.CircularRevealWidget.getRevealInfo():com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo A[MD:():com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo (m)]\l0x009a: IGET  (r7 I:float) = (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.radius float \l0x009c: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dependencyRadius' float)])  (LINE:426)\l0x009e: INVOKE  (r17 I:android.animation.Animator) = \l  (r11 I:com.google.android.material.circularreveal.CircularRevealWidget A[D('circularRevealChild' com.google.android.material.circularreveal.CircularRevealWidget)])\l  (r10 I:float A[D('revealCenterX' float)])\l  (r9 I:float A[D('revealCenterY' float)])\l  (r6 I:float A[D('toRadius' float)])\l type: STATIC call: com.google.android.material.circularreveal.CircularRevealCompat.createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget, float, float, float):android.animation.Animator A[MD:(com.google.android.material.circularreveal.CircularRevealWidget, float, float, float):android.animation.Animator (m)] (LINE:428)\l0x00a3: INVOKE  (r2 I:long) = \l  (r16 I:com.google.android.material.animation.MotionTiming A[D('timing' com.google.android.material.animation.MotionTiming)])\l type: VIRTUAL call: com.google.android.material.animation.MotionTiming.getDelay():long A[MD:():long (m)] (LINE:433)\l0x00a7: CAST (r4 I:int) = (int) (r10 I:float A[D('revealCenterX' float)]) \l0x00a8: CAST (r5 I:int) = (int) (r9 I:float A[D('revealCenterY' float)]) \l0x00a9: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r24 I:??[OBJECT, ARRAY])  (LINE:431)\l0x00ab: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r26 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) \l0x00ad: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('toRadius' float)]) \l0x00af: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('toRadius' float)]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fromRadius' float)]) \l0x00b0: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fromRadius' float)]) \l0x00b2: MOVE  (r7 I:??[OBJECT, ARRAY] A[D('fromRadius' float)]) = (r32 I:??[OBJECT, ARRAY] A[D('animations' java.util.List\<android.animation.Animator\>)]) \l0x00b4: INVOKE  \l  (r0 I:com.google.android.material.transformation.FabTransformationBehavior)\l  (r1 I:android.view.View)\l  (r2 I:long)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:float)\l  (r7 I:java.util.List)\l type: DIRECT call: com.google.android.material.transformation.FabTransformationBehavior.createPreFillRadialExpansion(android.view.View, long, int, int, float, java.util.List):void A[MD:(android.view.View, long, int, int, float, java.util.List\<android.animation.Animator\>):void (m)]\l0x00b8: INVOKE  (r2 I:long) = \l  (r16 I:com.google.android.material.animation.MotionTiming A[D('timing' com.google.android.material.animation.MotionTiming)])\l type: VIRTUAL call: com.google.android.material.animation.MotionTiming.getDelay():long A[MD:():long (m)] (LINE:440)\l0x00bc: INVOKE  (r4 I:long) = \l  (r16 I:com.google.android.material.animation.MotionTiming A[D('timing' com.google.android.material.animation.MotionTiming)])\l type: VIRTUAL call: com.google.android.material.animation.MotionTiming.getDuration():long A[MD:():long (m)] (LINE:441)\l0x00c0: IGET  (r0 I:com.google.android.material.animation.MotionSpec) = (r15 I:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec) com.google.android.material.transformation.FabTransformationBehavior.FabTransformationSpec.timings com.google.android.material.animation.MotionSpec \l0x00c2: INVOKE  (r6 I:long) = (r0 I:com.google.android.material.animation.MotionSpec) type: VIRTUAL call: com.google.android.material.animation.MotionSpec.getTotalDuration():long A[MD:():long (m)] (LINE:442)\l0x00c6: CAST (r1 I:int) = (int) (r10 I:float A[D('revealCenterX' float)]) \l0x00c7: CAST (r0 I:int) = (int) (r9 I:float A[D('revealCenterY' float)]) \l0x00c8: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:438)\l0x00ca: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r24 I:??[OBJECT, ARRAY]) \l0x00cc: MOVE  (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00ce: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r26 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) \l0x00d0: MOVE  (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dependencyRadius' float)]) \l0x00d2: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dependencyRadius' float)]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00d4: MOVE  (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('revealCenterY' float)]) \l0x00d6: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('revealCenterY' float)]) = (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00d8: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('revealCenterX' float)]) \l0x00da: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('revealCenterX' float)]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('toRadius' float)]) \l0x00dc: MOVE  (r23 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('circularRevealChild' com.google.android.material.circularreveal.CircularRevealWidget)]) \l0x00de: MOVE  (r11 I:??[OBJECT, ARRAY] A[D('circularRevealChild' com.google.android.material.circularreveal.CircularRevealWidget)]) = (r32 I:??[OBJECT, ARRAY] A[D('animations' java.util.List\<android.animation.Animator\>)]) \l0x00e0: INVOKE  \l  (r0 I:com.google.android.material.transformation.FabTransformationBehavior)\l  (r1 I:android.view.View)\l  (r2 I:long)\l  (r4 I:long)\l  (r6 I:long)\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:float)\l  (r11 I:java.util.List)\l type: DIRECT call: com.google.android.material.transformation.FabTransformationBehavior.createPostFillRadialExpansion(android.view.View, long, long, long, int, int, float, java.util.List):void A[MD:(android.view.View, long, long, long, int, int, float, java.util.List\<android.animation.Animator\>):void (m)]\l0x00e3: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('animator' android.animation.Animator)]) \l}"];
MethodNode[shape=record,label="{private void com.google.android.material.transformation.FabTransformationBehavior.createExpansionAnimation((r24 'this' I:com.google.android.material.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r25 I:android.view.View A[D('dependency' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:boolean A[D('expanded' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:boolean A[D('currentlyAnimating' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec A[D('spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30 I:float A[D('childWidth' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31 I:float A[D('childHeight' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32 I:java.util.List\<android.animation.Animator\> A[D('animations' java.util.List\<android.animation.Animator\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33 I:java.util.List\<android.animation.Animator$AnimatorListener\> A[D('listeners' java.util.List\<android.animation.Animator$AnimatorListener\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x00f8 \-\> B:17:?, CROSS_EDGE: B:27:0x004d \-\> B:28:0x004e, CROSS_EDGE: B:23:0x0039 \-\> B:25:0x0043, CROSS_EDGE: B:29:0x0094 \-\> B:30:0x00e5\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0063\-0x007c: r4 'animator' Landroid\/animation\/Animator;\l  0x005e\-0x0080: r5 'toRadius' F\l  0x0037\-0x0084: r7 'timing' Lcom\/google\/android\/material\/animation\/MotionTiming;\l  0x004e\-0x0089: r6 'fromRadius' F\l  0x0080\-0x0089: r17 'toRadius' F\l  0x0084\-0x0094: r16 'timing' Lcom\/google\/android\/material\/animation\/MotionTiming;\l  0x007c\-0x0094: r18 'animator' Landroid\/animation\/Animator;\l  0x0094\-0x0096: r7 'timing' Lcom\/google\/android\/material\/animation\/MotionTiming;\l  0x009d\-0x00af: r6 'toRadius' F\l  0x009c\-0x00b2: r7 'fromRadius' F\l  0x002f\-0x00d2: r8 'dependencyRadius' F\l  0x001c\-0x00d6: r9 'revealCenterY' F\l  0x0016\-0x00da: r10 'revealCenterX' F\l  0x0010\-0x00de: r11 'circularRevealChild' Lcom\/google\/android\/material\/circularreveal\/CircularRevealWidget;\l  0x00a2\-0x00e5: r17 'animator' Landroid\/animation\/Animator;\l  0x00af\-0x00e5: r18 'toRadius' F\l  0x00b2\-0x00e5: r19 'fromRadius' F\l  0x0096\-0x00e7: r16 'timing' Lcom\/google\/android\/material\/animation\/MotionTiming;\l  0x00e7\-0x00f8: r0 'timing' Lcom\/google\/android\/material\/animation\/MotionTiming;\l  0x00e5\-0x00f8: r4 'animator' Landroid\/animation\/Animator;\l  0x00da\-0x00f8: r20 'revealCenterX' F\l  0x00d6\-0x00f8: r21 'revealCenterY' F\l  0x00d2\-0x00f8: r22 'dependencyRadius' F\l  0x00de\-0x00f8: r23 'circularRevealChild' Lcom\/google\/android\/material\/circularreveal\/CircularRevealWidget;\l  \-1 \-0x00f8: r25 'dependency' Landroid\/view\/View;\l  \-1 \-0x00f8: r26 'child' Landroid\/view\/View;\l  \-1 \-0x00f8: r27 'expanded' Z\l  \-1 \-0x00f8: r28 'currentlyAnimating' Z\l  \-1 \-0x00f8: r29 'spec' Lcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;\l  \-1 \-0x00f8: r30 'childWidth' F\l  \-1 \-0x00f8: r31 'childHeight' F\l  0x0000\-0x00f8: r32 'animations' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroid\/animation\/Animator;\>;\l  0x0000\-0x00f8: r33 'listeners' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroid\/animation\/Animator$AnimatorListener;\>;\lSIGNATURE: (Landroid\/view\/View;Landroid\/view\/View;ZZLcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;FFLjava\/util\/List\<Landroid\/animation\/Animator;\>;Ljava\/util\/List\<Landroid\/animation\/Animator$AnimatorListener;\>;)V\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_29;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_17;
Node_27 -> Node_28;
Node_29 -> Node_30;
}

