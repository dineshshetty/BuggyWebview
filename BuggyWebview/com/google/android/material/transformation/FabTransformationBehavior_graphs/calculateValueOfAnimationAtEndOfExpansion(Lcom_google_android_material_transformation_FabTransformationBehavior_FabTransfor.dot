digraph "CFG forcom.google.android.material.transformation.FabTransformationBehavior.calculateValueOfAnimationAtEndOfExpansion(Lcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;Lcom\/google\/android\/material\/animation\/MotionTiming;FF)F" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|long r0 = r11.getDelay()\llong r2 = r11.getDuration()\lcom.google.android.material.animation.MotionTiming r4 = r10.timings.getTiming(\"expansion\")\llong r5 = r4.getDelay() + r4.getDuration()\lfloat r7 = ((float) ((r5 + 17) \- r0)) \/ ((float) r2)\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|RETURN\l|return com.google.android.material.animation.AnimationUtils.lerp(r12, r13, r11.getInterpolator().getInterpolation(r7))\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private float com.google.android.material.transformation.FabTransformationBehavior.calculateValueOfAnimationAtEndOfExpansion((r9v0 'this' com.google.android.material.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r10v0 'spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec A[D('spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'timing' com.google.android.material.animation.MotionTiming A[D('timing' com.google.android.material.animation.MotionTiming), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'from' float A[D('from' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'to' float A[D('to' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

