digraph "CFG forcom.google.android.material.transformation.FabTransformationBehavior.createColorAnimation(Landroid\/view\/View;Landroid\/view\/View;ZZLcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;Ljava\/util\/List;Ljava\/util\/List;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0002|if ((r8 instanceof com.google.android.material.circularreveal.CircularRevealWidget) != false) goto L5\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|com.google.android.material.circularreveal.CircularRevealWidget r0 = (com.google.android.material.circularreveal.CircularRevealWidget) r8\lint r1 = getBackgroundTint(r7)\lr2 = 16777215 & r1\l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|if (r9 == false) goto L12\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|if (r10 != false) goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|r0.setCircularRevealScrimColor(r1)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0019|android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofInt(r0, com.google.android.material.circularreveal.CircularRevealWidget.CircularRevealScrimColorProperty.CIRCULAR_REVEAL_SCRIM_COLOR, new int[]\{r2\})\l}"];
Node_24 [shape=record,label="{24\:\ 0x002e|PHI: r3 \l  PHI: (r3v2 'animator' android.animation.ObjectAnimator) = (r3v1 'animator' android.animation.ObjectAnimator), (r3v3 'animator' android.animation.ObjectAnimator) binds: [B:23:0x0024, B:22:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|r3.setEvaluator(com.google.android.material.animation.ArgbEvaluatorCompat.getInstance())\lcom.google.android.material.animation.MotionTiming r4 = r11.timings.getTiming(androidx.constraintlayout.core.motion.utils.TypedValues.Custom.S_COLOR)\lr4.apply(r3)\lr12.add(r3)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0043|RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x0024|android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofInt(r0, com.google.android.material.circularreveal.CircularRevealWidget.CircularRevealScrimColorProperty.CIRCULAR_REVEAL_SCRIM_COLOR, new int[]\{r1\})\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.transformation.FabTransformationBehavior.createColorAnimation((r6v0 'this' com.google.android.material.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r7v0 'dependency' android.view.View A[D('dependency' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'expanded' boolean A[D('expanded' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'currentlyAnimating' boolean A[D('currentlyAnimating' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec A[D('spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'animations' java.util.List\<android.animation.Animator\> A[D('animations' java.util.List\<android.animation.Animator\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'unusedListeners' java.util.List\<android.animation.Animator$AnimatorListener\> A[D('unusedListeners' java.util.List\<android.animation.Animator$AnimatorListener\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0043 \-\> B:14:?, CROSS_EDGE: B:20:0x0014 \-\> B:22:0x0019, CROSS_EDGE: B:23:0x0024 \-\> B:24:0x002e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Landroid\/view\/View;Landroid\/view\/View;ZZLcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;Ljava\/util\/List\<Landroid\/animation\/Animator;\>;Ljava\/util\/List\<Landroid\/animation\/Animator$AnimatorListener;\>;)V\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
Node_23 -> Node_24;
}

