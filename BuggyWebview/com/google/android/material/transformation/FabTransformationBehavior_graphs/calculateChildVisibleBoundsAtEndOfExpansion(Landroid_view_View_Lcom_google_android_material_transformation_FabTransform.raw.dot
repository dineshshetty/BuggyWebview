digraph "CFG forcom.google.android.material.transformation.FabTransformationBehavior.calculateChildVisibleBoundsAtEndOfExpansion(Landroid\/view\/View;Lcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;Lcom\/google\/android\/material\/animation\/MotionTiming;Lcom\/google\/android\/material\/animation\/MotionTiming;FFFFLandroid\/graphics\/RectF;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0001|0x0001: INVOKE  (r0 I:float) = \l  (r5 I:com.google.android.material.transformation.FabTransformationBehavior)\l  (r7 I:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec A[D('spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec)])\l  (r8 I:com.google.android.material.animation.MotionTiming A[D('translationXTiming' com.google.android.material.animation.MotionTiming)])\l  (r10 I:float A[D('fromX' float)])\l  (r12 I:float A[D('toX' float)])\l type: DIRECT call: com.google.android.material.transformation.FabTransformationBehavior.calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec, com.google.android.material.animation.MotionTiming, float, float):float A[MD:(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec, com.google.android.material.animation.MotionTiming, float, float):float (m)] (LINE:669)\l0x0006: INVOKE  (r1 I:float) = \l  (r5 I:com.google.android.material.transformation.FabTransformationBehavior)\l  (r7 I:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec A[D('spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec)])\l  (r9 I:com.google.android.material.animation.MotionTiming A[D('translationYTiming' com.google.android.material.animation.MotionTiming)])\l  (r11 I:float A[D('fromY' float)])\l  (r13 I:float A[D('toY' float)])\l type: DIRECT call: com.google.android.material.transformation.FabTransformationBehavior.calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec, com.google.android.material.animation.MotionTiming, float, float):float A[MD:(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec, com.google.android.material.animation.MotionTiming, float, float):float (m)] (LINE:671)\l0x000a: IGET  (r2 I:android.graphics.Rect) = (r5 I:com.google.android.material.transformation.FabTransformationBehavior) com.google.android.material.transformation.FabTransformationBehavior.tmpRect android.graphics.Rect  (LINE:674)\l0x000c: INVOKE  \l  (r6 I:android.view.View A[D('child' android.view.View)])\l  (r2 I:android.graphics.Rect A[D('window' android.graphics.Rect)])\l type: VIRTUAL call: android.view.View.getWindowVisibleDisplayFrame(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (c)] (LINE:675)\l0x000f: IGET  (r3 I:android.graphics.RectF) = (r5 I:com.google.android.material.transformation.FabTransformationBehavior) com.google.android.material.transformation.FabTransformationBehavior.tmpRectF1 android.graphics.RectF  (LINE:676)\l0x0011: INVOKE  \l  (r3 I:android.graphics.RectF A[D('windowF' android.graphics.RectF)])\l  (r2 I:android.graphics.Rect A[D('window' android.graphics.Rect)])\l type: VIRTUAL call: android.graphics.RectF.set(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (c)] (LINE:677)\l0x0014: IGET  (r4 I:android.graphics.RectF) = (r5 I:com.google.android.material.transformation.FabTransformationBehavior) com.google.android.material.transformation.FabTransformationBehavior.tmpRectF2 android.graphics.RectF  (LINE:680)\l0x0016: INVOKE  \l  (r5 I:com.google.android.material.transformation.FabTransformationBehavior)\l  (r6 I:android.view.View A[D('child' android.view.View)])\l  (r4 I:android.graphics.RectF A[D('childVisibleBounds' android.graphics.RectF)])\l type: DIRECT call: com.google.android.material.transformation.FabTransformationBehavior.calculateWindowBounds(android.view.View, android.graphics.RectF):void A[MD:(android.view.View, android.graphics.RectF):void (m)] (LINE:681)\l0x0019: INVOKE  \l  (r4 I:android.graphics.RectF A[D('childVisibleBounds' android.graphics.RectF)])\l  (r0 I:float A[D('translationX' float)])\l  (r1 I:float A[D('translationY' float)])\l type: VIRTUAL call: android.graphics.RectF.offset(float, float):void A[MD:(float, float):void (c)] (LINE:682)\l0x001c: INVOKE  \l  (r4 I:android.graphics.RectF A[D('childVisibleBounds' android.graphics.RectF)])\l  (r3 I:android.graphics.RectF A[D('windowF' android.graphics.RectF)])\l type: VIRTUAL call: android.graphics.RectF.intersect(android.graphics.RectF):boolean A[MD:(android.graphics.RectF):boolean (c)] (LINE:683)\l0x001f: INVOKE  \l  (r14 I:android.graphics.RectF A[D('childBounds' android.graphics.RectF)])\l  (r4 I:android.graphics.RectF A[D('childVisibleBounds' android.graphics.RectF)])\l type: VIRTUAL call: android.graphics.RectF.set(android.graphics.RectF):void A[MD:(android.graphics.RectF):void (c)] (LINE:685)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|RETURN\l|0x0022: RETURN    (LINE:686)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.transformation.FabTransformationBehavior.calculateChildVisibleBoundsAtEndOfExpansion((r5 'this' I:com.google.android.material.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r6 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec A[D('spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.google.android.material.animation.MotionTiming A[D('translationXTiming' com.google.android.material.animation.MotionTiming), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.google.android.material.animation.MotionTiming A[D('translationYTiming' com.google.android.material.animation.MotionTiming), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:float A[D('fromX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:float A[D('fromY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:float A[D('toX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:float A[D('toY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:android.graphics.RectF A[D('childBounds' android.graphics.RectF), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0022: r0 'translationX' F\l  0x000a\-0x0022: r1 'translationY' F\l  0x000c\-0x0022: r2 'window' Landroid\/graphics\/Rect;\l  0x0011\-0x0022: r3 'windowF' Landroid\/graphics\/RectF;\l  0x0016\-0x0022: r4 'childVisibleBounds' Landroid\/graphics\/RectF;\l  \-1 \-0x0022: r6 'child' Landroid\/view\/View;\l  \-1 \-0x0022: r7 'spec' Lcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;\l  \-1 \-0x0022: r8 'translationXTiming' Lcom\/google\/android\/material\/animation\/MotionTiming;\l  \-1 \-0x0022: r9 'translationYTiming' Lcom\/google\/android\/material\/animation\/MotionTiming;\l  \-1 \-0x0022: r10 'fromX' F\l  \-1 \-0x0022: r11 'fromY' F\l  \-1 \-0x0022: r12 'toX' F\l  \-1 \-0x0022: r13 'toY' F\l  \-1 \-0x0022: r14 'childBounds' Landroid\/graphics\/RectF;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

