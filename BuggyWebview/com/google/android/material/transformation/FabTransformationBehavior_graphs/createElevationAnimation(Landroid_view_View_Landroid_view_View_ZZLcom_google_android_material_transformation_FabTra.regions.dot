digraph "CFG forcom.google.android.material.transformation.FabTransformationBehavior.createElevationAnimation(Landroid\/view\/View;Landroid\/view\/View;ZZLcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;Ljava\/util\/List;Ljava\/util\/List;)V" {
subgraph cluster_Region_1975752925 {
label = "R(3:1|(2:(1:4)|5)(1:9)|6) | DECL_VAR: android.animation.Animator animator\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|float float r0 = androidx.core.view.ViewCompat.getElevation(r7) \- androidx.core.view.ViewCompat.getElevation(r6)\l}"];
subgraph cluster_IfRegion_590485947 {
label = "IF [B:13:0x000b] THEN: R(2:(1:4)|5) ELSE: R(1:9)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000b|if (r8 != false) goto L3\l}"];
subgraph cluster_Region_1745337511 {
label = "R(2:(1:4)|5)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_5427982 {
label = "IF [B:14:0x000d] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x000d|if (r9 == false) goto L4\l}"];
subgraph cluster_Region_1604542472 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x000f|r7.setTranslationZ(\-r0)\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x0013|android.animation.ObjectAnimator r1 = android.animation.ObjectAnimator.ofFloat(r7, android.view.View.TRANSLATION_Z, 0.0f)\l}"];
}
subgraph cluster_Region_132198565 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x001f|android.animation.ObjectAnimator r1 = android.animation.ObjectAnimator.ofFloat(r7, android.view.View.TRANSLATION_Z, \-r0)\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x002a|PHI: r1 \l  PHI: (r1v3 'animator' android.animation.Animator) = (r1v2 'animator' android.animation.Animator), (r1v4 'animator' android.animation.Animator) binds: [B:17:0x001f, B:16:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.material.animation.MotionTiming com.google.android.material.animation.MotionTiming r2 = r10.timings.getTiming(\"elevation\")\lr2.apply(r1)\lr11.add(r1)\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0038}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.transformation.FabTransformationBehavior.createElevationAnimation((r5v0 'this' com.google.android.material.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r6v0 'dependency' android.view.View A[D('dependency' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'expanded' boolean A[D('expanded' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'currentlyAnimating' boolean A[D('currentlyAnimating' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec A[D('spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'animations' java.util.List\<android.animation.Animator\> A[D('animations' java.util.List\<android.animation.Animator\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'unusedListeners' java.util.List\<android.animation.Animator$AnimatorListener\> A[D('unusedListeners' java.util.List\<android.animation.Animator$AnimatorListener\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x000d \-\> B:16:0x0013, CROSS_EDGE: B:17:0x001f \-\> B:18:0x002a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Landroid\/view\/View;Landroid\/view\/View;ZZLcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;Ljava\/util\/List\<Landroid\/animation\/Animator;\>;Ljava\/util\/List\<Landroid\/animation\/Animator$AnimatorListener;\>;)V\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_10 -> Node_12;
Node_19 -> Node_11;
}

