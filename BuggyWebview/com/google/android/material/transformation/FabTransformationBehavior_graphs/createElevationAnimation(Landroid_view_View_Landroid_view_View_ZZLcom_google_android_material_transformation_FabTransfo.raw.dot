digraph "CFG forcom.google.android.material.transformation.FabTransformationBehavior.createElevationAnimation(Landroid\/view\/View;Landroid\/view\/View;ZZLcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;Ljava\/util\/List;Ljava\/util\/List;)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:float) = (r7 I:android.view.View A[D('child' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getElevation(android.view.View):float A[MD:(android.view.View):float (m)] (LINE:207)\l0x0004: INVOKE  (r1 I:float) = (r6 I:android.view.View A[D('dependency' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getElevation(android.view.View):float A[MD:(android.view.View):float (m)]\l0x0008: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:210)\l0x000a: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x000b|0x000b: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('expanded' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x001f \l}"];
Node_14 [shape=record,label="{14\:\ 0x000d|0x000d: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('currentlyAnimating' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0013  (LINE:211)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000f|0x000f: NEG  (r3 I:float) = (r0 I:float A[D('translationZ' float)])  (LINE:212)\l0x0010: INVOKE  (r7 I:android.view.View A[D('child' android.view.View)]), (r3 I:float) type: VIRTUAL call: android.view.View.setTranslationZ(float):void A[MD:(float):void (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|0x0013: SGET  (r3 I:android.util.Property) =  android.view.View.TRANSLATION_Z android.util.Property  (LINE:214)\l0x0015: NEW_ARRAY  (r2 I:float[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0017: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: APUT  (r2 I:??[int, float][]), (r1 I:??[int, short, byte, char]), (r4 I:??[int, float, short, byte, char]) \l0x001a: INVOKE  (r1 I:android.animation.ObjectAnimator) = (r7 I:java.lang.Object A[D('child' android.view.View)]), (r3 I:android.util.Property), (r2 I:float[]) type: STATIC call: android.animation.ObjectAnimator.ofFloat(java.lang.Object, android.util.Property, float[]):android.animation.ObjectAnimator A[MD:\<T\>:(T, android.util.Property\<T, java.lang.Float\>, float[]):android.animation.ObjectAnimator VARARG (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x002a|0x002a: IGET  (r2 I:com.google.android.material.animation.MotionSpec) = \l  (r10 I:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec A[D('spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec)])\l com.google.android.material.transformation.FabTransformationBehavior.FabTransformationSpec.timings com.google.android.material.animation.MotionSpec  (LINE:219)\l0x002c: CONST_STR  (r3 I:java.lang.String) =  \"elevation\" \l0x002e: INVOKE  (r2 I:com.google.android.material.animation.MotionTiming) = (r2 I:com.google.android.material.animation.MotionSpec), (r3 I:java.lang.String) type: VIRTUAL call: com.google.android.material.animation.MotionSpec.getTiming(java.lang.String):com.google.android.material.animation.MotionTiming A[MD:(java.lang.String):com.google.android.material.animation.MotionTiming (m)]\l0x0032: INVOKE  \l  (r2 I:com.google.android.material.animation.MotionTiming A[D('timing' com.google.android.material.animation.MotionTiming)])\l  (r1 I:android.animation.Animator A[D('animator' android.animation.Animator)])\l type: VIRTUAL call: com.google.android.material.animation.MotionTiming.apply(android.animation.Animator):void A[MD:(android.animation.Animator):void (m)] (LINE:220)\l0x0035: INVOKE  \l  (r11 I:java.util.List A[D('animations' java.util.List\<android.animation.Animator\>)])\l  (r1 I:java.lang.Object A[D('animator' android.animation.Animator)])\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:221)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0038|RETURN\l|0x0038: RETURN    (LINE:222)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x001f|0x001f: SGET  (r3 I:android.util.Property) =  android.view.View.TRANSLATION_Z android.util.Property  (LINE:216)\l0x0021: NEW_ARRAY  (r2 I:float[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0023: NEG  (r4 I:float) = (r0 I:float A[D('translationZ' float)]) \l0x0024: APUT  (r2 I:??[int, float][]), (r1 I:??[int, short, byte, char]), (r4 I:??[int, float, short, byte, char]) \l0x0026: INVOKE  (r1 I:android.animation.ObjectAnimator) = (r7 I:java.lang.Object A[D('child' android.view.View)]), (r3 I:android.util.Property), (r2 I:float[]) type: STATIC call: android.animation.ObjectAnimator.ofFloat(java.lang.Object, android.util.Property, float[]):android.animation.ObjectAnimator A[MD:\<T\>:(T, android.util.Property\<T, java.lang.Float\>, float[]):android.animation.ObjectAnimator VARARG (c)]\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.transformation.FabTransformationBehavior.createElevationAnimation((r5 'this' I:com.google.android.material.transformation.FabTransformationBehavior A[IMMUTABLE_TYPE, THIS]), (r6 I:android.view.View A[D('dependency' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[D('expanded' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('currentlyAnimating' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec A[D('spec' com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.util.List\<android.animation.Animator\> A[D('animations' java.util.List\<android.animation.Animator\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.util.List\<android.animation.Animator$AnimatorListener\> A[D('unusedListeners' java.util.List\<android.animation.Animator$AnimatorListener\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x000d \-\> B:16:0x0013, CROSS_EDGE: B:17:0x001f \-\> B:18:0x002a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x001f: r1 'animator' Landroid\/animation\/Animator;\l  0x0009\-0x0038: r0 'translationZ' F\l  0x002a\-0x0038: r1 'animator' Landroid\/animation\/Animator;\l  0x0032\-0x0038: r2 'timing' Lcom\/google\/android\/material\/animation\/MotionTiming;\l  \-1 \-0x0038: r6 'dependency' Landroid\/view\/View;\l  \-1 \-0x0038: r7 'child' Landroid\/view\/View;\l  \-1 \-0x0038: r8 'expanded' Z\l  \-1 \-0x0038: r9 'currentlyAnimating' Z\l  \-1 \-0x0038: r10 'spec' Lcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;\l  0x0000\-0x0038: r11 'animations' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroid\/animation\/Animator;\>;\l  0x0000\-0x0038: r12 'unusedListeners' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroid\/animation\/Animator$AnimatorListener;\>;\lSIGNATURE: (Landroid\/view\/View;Landroid\/view\/View;ZZLcom\/google\/android\/material\/transformation\/FabTransformationBehavior$FabTransformationSpec;Ljava\/util\/List\<Landroid\/animation\/Animator;\>;Ljava\/util\/List\<Landroid\/animation\/Animator$AnimatorListener;\>;)V\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
Node_17 -> Node_18;
}

