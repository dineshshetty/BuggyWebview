digraph "CFG forcom.google.android.material.transformation.FabTransformationScrimBehavior.onCreateExpandedStateChangeAnimation(Landroid\/view\/View;Landroid\/view\/View;ZZ)Landroid\/animation\/AnimatorSet;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:80)\l0x0002: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0005: NEW_INSTANCE  (r6 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:81)\l0x0007: INVOKE  (r6 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x000a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY])  (LINE:83)\l0x000b: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) \l0x000c: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('expanded' boolean)]) \l0x000d: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('isAnimating' boolean)]) \l0x000e: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('animations' java.util.List\<android.animation.Animator\>)]) \l0x000f: INVOKE  \l  (r1 I:com.google.android.material.transformation.FabTransformationScrimBehavior)\l  (r2 I:android.view.View)\l  (r3 I:boolean)\l  (r4 I:boolean)\l  (r5 I:java.util.List)\l  (r6 I:java.util.List A[D('listeners' java.util.List\<android.animation.Animator$AnimatorListener\>)])\l type: DIRECT call: com.google.android.material.transformation.FabTransformationScrimBehavior.createScrimAnimation(android.view.View, boolean, boolean, java.util.List, java.util.List):void A[MD:(android.view.View, boolean, boolean, java.util.List\<android.animation.Animator\>, java.util.List\<android.animation.Animator$AnimatorListener\>):void (m)]\l0x0012: NEW_INSTANCE  (r1 I:android.animation.AnimatorSet) =  android.animation.AnimatorSet  (LINE:85)\l0x0014: INVOKE  (r1 I:android.animation.AnimatorSet) type: DIRECT call: android.animation.AnimatorSet.\<init\>():void A[MD:():void (c)]\l0x0017: INVOKE  \l  (r1 I:android.animation.AnimatorSet A[D('set' android.animation.AnimatorSet)])\l  (r0 I:java.util.List A[D('animations' java.util.List\<android.animation.Animator\>)])\l type: STATIC call: com.google.android.material.animation.AnimatorSetCompat.playTogether(android.animation.AnimatorSet, java.util.List):void A[MD:(android.animation.AnimatorSet, java.util.List\<android.animation.Animator\>):void (m)] (LINE:86)\l0x001a: NEW_INSTANCE  (r2 I:com.google.android.material.transformation.FabTransformationScrimBehavior$1) =  com.google.android.material.transformation.FabTransformationScrimBehavior$1  (LINE:87)\l0x001c: INVOKE  \l  (r2 I:com.google.android.material.transformation.FabTransformationScrimBehavior$1)\l  (r7 I:com.google.android.material.transformation.FabTransformationScrimBehavior)\l  (r10 I:boolean A[D('expanded' boolean)])\l  (r9 I:android.view.View A[D('child' android.view.View)])\l type: DIRECT call: com.google.android.material.transformation.FabTransformationScrimBehavior.1.\<init\>(com.google.android.material.transformation.FabTransformationScrimBehavior, boolean, android.view.View):void A[MD:(com.google.android.material.transformation.FabTransformationScrimBehavior, boolean, android.view.View):void (m)]\l0x001f: INVOKE  \l  (r1 I:android.animation.AnimatorSet A[D('set' android.animation.AnimatorSet)])\l  (r2 I:android.animation.Animator$AnimatorListener)\l type: VIRTUAL call: android.animation.AnimatorSet.addListener(android.animation.Animator$AnimatorListener):void A[MD:(android.animation.Animator$AnimatorListener):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|RETURN\l|0x0022: RETURN  (r1 I:android.animation.AnimatorSet A[D('set' android.animation.AnimatorSet)])  (LINE:103)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected android.animation.AnimatorSet com.google.android.material.transformation.FabTransformationScrimBehavior.onCreateExpandedStateChangeAnimation((r7 'this' I:com.google.android.material.transformation.FabTransformationScrimBehavior A[IMMUTABLE_TYPE, THIS]), (r8 I:android.view.View A[D('dependency' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[D('expanded' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[D('isAnimating' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0022: r0 'animations' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroid\/animation\/Animator;\>;\l  0x0017\-0x0022: r1 'set' Landroid\/animation\/AnimatorSet;\l  0x000a\-0x0022: r6 'listeners' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroid\/animation\/Animator$AnimatorListener;\>;\l  \-1 \-0x0022: r8 'dependency' Landroid\/view\/View;\l  \-1 \-0x0022: r9 'child' Landroid\/view\/View;\l  \-1 \-0x0022: r10 'expanded' Z\l  \-1 \-0x0022: r11 'isAnimating' Z\lMETHOD_OVERRIDE: [com.google.android.material.transformation.ExpandableTransformationBehavior.onCreateExpandedStateChangeAnimation(android.view.View, android.view.View, boolean, boolean):android.animation.AnimatorSet]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

