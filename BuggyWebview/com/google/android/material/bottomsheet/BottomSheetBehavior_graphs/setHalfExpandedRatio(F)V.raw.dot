digraph "CFG forcom.google.android.material.bottomsheet.BottomSheetBehavior.setHalfExpandedRatio(F)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1027)\l0x0001: CMP_G  (r0 I:int) = (r3 I:float A[D('ratio' float)]), (r0 I:float) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0003|0x0003: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:23:0x0015 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|0x0005: CONST  (r0 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x0007: CMP_L  (r0 I:int) = (r3 I:float A[D('ratio' float)]), (r0 I:float) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:23:0x0015 \l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|0x000b: IPUT  \l  (r3 I:float A[D('ratio' float)])\l  (r2 I:com.google.android.material.bottomsheet.BottomSheetBehavior A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>)])\l com.google.android.material.bottomsheet.BottomSheetBehavior.halfExpandedRatio float  (LINE:1030)\l0x000d: IGET  (r0 I:java.lang.ref.WeakReference\<V extends android.view.View\>) = \l  (r2 I:com.google.android.material.bottomsheet.BottomSheetBehavior A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>)])\l com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef java.lang.ref.WeakReference  (LINE:1033)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:? \l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|0x0011: INVOKE  \l  (r2 I:com.google.android.material.bottomsheet.BottomSheetBehavior A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>)])\l type: DIRECT call: com.google.android.material.bottomsheet.BottomSheetBehavior.calculateHalfExpandedOffset():void A[MD:():void (m)] (LINE:1034)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|RETURN\lORIG_RETURN\l|0x0014: RETURN    (LINE:1036)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0014: RETURN   A[SYNTHETIC] (LINE:1036)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|0x0015: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:1028)\l0x0017: CONST_STR  (r1 I:java.lang.String) =  \"ratio must be a float value between 0 and 1\" \l0x0019: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x001c|0x001c: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.google.android.material.bottomsheet.BottomSheetBehavior.setHalfExpandedRatio((r2 'this' I:com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\> A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>), IMMUTABLE_TYPE, THIS]), (r3 I:float A[D('ratio' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x000f \-\> B:22:0x0014, CROSS_EDGE: B:24:0x001c \-\> B:14:?, CROSS_EDGE: B:16:0x0003 \-\> B:23:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x001c: r2 'this' Lcom\/google\/android\/material\/bottomsheet\/BottomSheetBehavior;, signature: Lcom\/google\/android\/material\/bottomsheet\/BottomSheetBehavior\<TV;\>;\l  \-1 \-0x001c: r3 'ratio' F\lTYPE_VARS: [V extends android.view.View]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_14;
Node_25 -> Node_14;
Node_23 -> Node_24;
Node_24 -> Node_14;
}

