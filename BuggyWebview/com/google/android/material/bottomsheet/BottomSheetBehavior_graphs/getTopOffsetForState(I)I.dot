digraph "CFG forcom.google.android.material.bottomsheet.BottomSheetBehavior.getTopOffsetForState(I)I" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|switch(r4) \{\l    case 3: goto L11;\l    case 4: goto L9;\l    case 5: goto L7;\l    case 6: goto L5;\l    default: goto L2;\l\}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0003|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Invalid state to get top offset: \")\lr1.append(r4)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0019|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x001a}"];
Node_19 [shape=record,label="{19\:\ 0x001c|RETURN\l|return r3.halfExpandedOffset\l}"];
Node_20 [shape=record,label="{20\:\ 0x001d}"];
Node_21 [shape=record,label="{21\:\ 0x001f|RETURN\l|return r3.parentHeight\l}"];
Node_22 [shape=record,label="{22\:\ 0x0020}"];
Node_23 [shape=record,label="{23\:\ 0x0022|RETURN\l|return r3.collapsedOffset\l}"];
Node_24 [shape=record,label="{24\:\ 0x0023}"];
Node_25 [shape=record,label="{25\:\ 0x0027|RETURN\l|return getExpandedOffset()\l}"];
MethodNode[shape=record,label="{private int com.google.android.material.bottomsheet.BottomSheetBehavior.getTopOffsetForState((r3v0 'this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\> A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>), IMMUTABLE_TYPE, THIS]), (r4v0 'state' int A[D('state' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x001c \-\> B:14:?, CROSS_EDGE: B:21:0x001f \-\> B:14:?, CROSS_EDGE: B:23:0x0022 \-\> B:14:?, CROSS_EDGE: B:25:0x0027 \-\> B:14:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V extends android.view.View]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18;
Node_15 -> Node_20;
Node_15 -> Node_22;
Node_15 -> Node_24;
Node_16 -> Node_17;
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_14;
Node_20 -> Node_21;
Node_21 -> Node_14;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

