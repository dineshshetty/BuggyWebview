digraph "CFG forcom.google.android.material.bottomsheet.BottomSheetBehavior.shouldHide(Landroid\/view\/View;F)Z" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = \l  (r6 I:com.google.android.material.bottomsheet.BottomSheetBehavior A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>)])\l com.google.android.material.bottomsheet.BottomSheetBehavior.skipCollapsed boolean  (LINE:1489)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0006 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0005|RETURN\l|0x0005: RETURN  (r1 I:boolean)  (LINE:1490)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|0x0006: INVOKE  (r0 I:boolean) = \l  (r6 I:com.google.android.material.bottomsheet.BottomSheetBehavior A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>)])\l type: VIRTUAL call: com.google.android.material.bottomsheet.BottomSheetBehavior.isHideableWhenDragging():boolean A[MD:():boolean (m)] (LINE:1492)\l0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x000e \l}"];
Node_24 [shape=record,label="{24\:\ 0x000d|RETURN\l|0x000d: RETURN  (r2 I:boolean)  (LINE:1493)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|0x000e: INVOKE  (r0 I:int) = (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)] (LINE:1495)\l0x0012: IGET  (r3 I:int) = \l  (r6 I:com.google.android.material.bottomsheet.BottomSheetBehavior A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>)])\l com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset int \l}"];
Node_26 [shape=record,label="{26\:\ 0x0014|0x0014: IF  (r0 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:28:0x0017 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|RETURN\l|0x0016: RETURN  (r2 I:boolean)  (LINE:1497)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|0x0017: INVOKE  (r0 I:int) = \l  (r6 I:com.google.android.material.bottomsheet.BottomSheetBehavior A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>)])\l type: DIRECT call: com.google.android.material.bottomsheet.BottomSheetBehavior.calculatePeekHeight():int A[MD:():int (m)] (LINE:1499)\l0x001b: INVOKE  (r3 I:int) = (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)] (LINE:1500)\l0x001f: CAST (r3 I:float) = (float) (r3 I:int) \l0x0020: IGET  (r4 I:float) = \l  (r6 I:com.google.android.material.bottomsheet.BottomSheetBehavior A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>)])\l com.google.android.material.bottomsheet.BottomSheetBehavior.hideFriction float \l0x0022: ARITH  (r4 I:float) = (r4 I:float) * (r8 I:float A[D('yvel' float)]) \l0x0024: ARITH  (r3 I:float) = (r3 I:float) + (r4 I:float) \l0x0025: IGET  (r4 I:int) = \l  (r6 I:com.google.android.material.bottomsheet.BottomSheetBehavior A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>)])\l com.google.android.material.bottomsheet.BottomSheetBehavior.collapsedOffset int  (LINE:1501)\l0x0027: CAST (r4 I:float) = (float) (r4 I:int) \l0x0028: ARITH  (r4 I:float) = (r3 I:float A[D('newTop' float)]) \- (r4 I:float) \l0x002a: INVOKE  (r4 I:float) = (r4 I:float) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x002e: CAST (r5 I:float) = (float) (r0 I:int A[D('peek' int)]) \l0x002f: ARITH  (r4 I:float) = (r4 I:float) \/ (r5 I:float) \l0x0030: CONST  (r5 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char]) \l0x0032: CMP_L  (r4 I:int) = (r4 I:float), (r5 I:float) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0034|0x0034: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:31:0x0037 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0037|RETURN\lORIG_RETURN\l|0x0037: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0038: RETURN  (r1 I:boolean) \l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0038: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{boolean com.google.android.material.bottomsheet.BottomSheetBehavior.shouldHide((r6 'this' I:com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\> A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>), IMMUTABLE_TYPE, THIS]), (r7 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:float A[D('yvel' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x000d \-\> B:18:?, CROSS_EDGE: B:27:0x0016 \-\> B:18:?, CROSS_EDGE: B:32:0x0038 \-\> B:18:?, CROSS_EDGE: B:29:0x0034 \-\> B:32:0x0038\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x0038: r0 'peek' I\l  0x0025\-0x0038: r3 'newTop' F\l  0x0000\-0x0038: r6 'this' Lcom\/google\/android\/material\/bottomsheet\/BottomSheetBehavior;, signature: Lcom\/google\/android\/material\/bottomsheet\/BottomSheetBehavior\<TV;\>;\l  \-1 \-0x0038: r7 'child' Landroid\/view\/View;\l  \-1 \-0x0038: r8 'yvel' F\lTYPE_VARS: [V extends android.view.View]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_18;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_18;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_18;
Node_28 -> Node_29;
Node_29 -> Node_31;
Node_29 -> Node_33[style=dashed];
Node_31 -> Node_18;
Node_33 -> Node_18;
}

