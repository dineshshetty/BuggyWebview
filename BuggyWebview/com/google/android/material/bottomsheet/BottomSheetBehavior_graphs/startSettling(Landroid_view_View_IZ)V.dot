digraph "CFG forcom.google.android.material.bottomsheet.BottomSheetBehavior.startSettling(Landroid\/view\/View;IZ)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|int r0 = getTopOffsetForState(r6)\landroidx.customview.widget.ViewDragHelper r1 = r4.viewDragHelper\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|if (r1 == null) goto L15\l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|if (r7 == false) goto L13\l}"];
Node_22 [shape=record,label="{22\:\ 0x000b}"];
Node_23 [shape=record,label="{23\:\ 0x0013|if (r1.settleCapturedViewAt(r5.getLeft(), r0) == false) goto L15\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|r1 = true\l}"];
Node_29 [shape=record,label="{29\:\ 0x0024|PHI: r1 \l  PHI: (r1v2 'settling' boolean) = (r1v1 'settling' boolean), (r1v4 'settling' boolean) binds: [B:28:0x0023, B:27:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L11\l}"];
Node_30 [shape=record,label="{30\:\ 0x0026|setStateInternal(2)\lupdateDrawableForTargetState(r6, true)\lr4.stateSettlingTracker.continueSettlingToState(r6)\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0033|setStateInternal(r6)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0036|RETURN\lORIG_RETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ 0x0016}"];
Node_26 [shape=record,label="{26\:\ 0x001f|if (r1.smoothSlideViewTo(r5, r5.getLeft(), r0) == false) goto L15\l}"];
Node_28 [shape=record,label="{28\:\ 0x0023|r1 = false\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.bottomsheet.BottomSheetBehavior.startSettling((r4v0 'this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\> A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>), IMMUTABLE_TYPE, THIS]), (r5v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'state' int A[D('state' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'isReleasingView' boolean A[D('isReleasingView' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0033 \-\> B:32:0x0036, CROSS_EDGE: B:27:0x0021 \-\> B:29:0x0024, CROSS_EDGE: B:26:0x001f \-\> B:27:0x0021, CROSS_EDGE: B:26:0x001f \-\> B:28:0x0023, CROSS_EDGE: B:20:0x0007 \-\> B:28:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: [V extends android.view.View]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_28;
Node_23 -> Node_27[style=dashed];
Node_27 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_33;
Node_33 -> Node_18;
Node_31 -> Node_32;
Node_32 -> Node_18;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_28 -> Node_29;
}

