digraph "CFG forcom.google.android.material.bottomsheet.BottomSheetBehavior.setBottomSheetCallback(Lcom\/google\/android\/material\/bottomsheet\/BottomSheetBehavior$BottomSheetCallback;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|android.util.Log.w(com.google.android.material.bottomsheet.BottomSheetBehavior.TAG, \"BottomSheetBehavior now supports multiple callbacks. `setBottomSheetCallback()` removes all existing callbacks, including ones set internally by library authors, which may result in unintended behavior. This may change in the future. Please use `addBottomSheetCallback()` and `removeBottomSheetCallback()` instead to set your own callbacks.\")\lr2.callbacks.clear()\l}"];
Node_10 [shape=record,label="{10\:\ 0x000c|if (r3 == null) goto L6\l}"];
Node_11 [shape=record,label="{11\:\ 0x000e|r2.callbacks.add(r3)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0013|RETURN\lORIG_RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.bottomsheet.BottomSheetBehavior.setBottomSheetCallback((r2v0 'this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\> A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>), IMMUTABLE_TYPE, THIS]), (r3v0 'callback' com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback A[D('callback' com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:10:0x000c \-\> B:12:0x0013\lTYPE_VARS: [V extends android.view.View]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

