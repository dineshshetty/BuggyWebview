digraph "CFG forcom.google.android.material.bottomsheet.BottomSheetBehavior.dispatchOnSlide(I)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.ref.WeakReference\<V extends android.view.View\>) = \l  (r4 I:com.google.android.material.bottomsheet.BottomSheetBehavior A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>)])\l com.google.android.material.bottomsheet.BottomSheetBehavior.viewRef java.lang.ref.WeakReference  (LINE:1860)\l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) type: VIRTUAL call: java.lang.ref.WeakReference.get():java.lang.Object A[MD:():T (c)]\l0x0006: CHECK_CAST (r0 I:android.view.View) = (android.view.View) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bottomSheet' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x002d  (LINE:1861)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|0x000a: IGET  (r1 I:java.util.ArrayList\<com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback\>) = \l  (r4 I:com.google.android.material.bottomsheet.BottomSheetBehavior A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>)])\l com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks java.util.ArrayList \l0x000c: INVOKE  (r1 I:boolean) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:? \l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|0x0012: INVOKE  (r1 I:float) = \l  (r4 I:com.google.android.material.bottomsheet.BottomSheetBehavior A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>)])\l  (r5 I:int A[D('top' int)])\l type: DIRECT call: com.google.android.material.bottomsheet.BottomSheetBehavior.calculateSlideOffsetWithTop(int):float A[MD:(int):float (m)] (LINE:1862)\l0x0016: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1863)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0017|LOOP_START\lLOOP:0: B:21:0x0017\-\>B:23:0x001f\l|0x0017: IGET  (r3 I:java.util.ArrayList\<com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback\>) = \l  (r4 I:com.google.android.material.bottomsheet.BottomSheetBehavior A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>)])\l com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks java.util.ArrayList \l0x0019: INVOKE  (r3 I:int) = (r3 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x001d|0x001d: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:25:0x002d \l}"];
Node_23 [shape=record,label="{23\:\ 0x001f|LOOP_END\lLOOP:0: B:21:0x0017\-\>B:23:0x001f\l|0x001f: IGET  (r3 I:java.util.ArrayList\<com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback\>) = \l  (r4 I:com.google.android.material.bottomsheet.BottomSheetBehavior A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>)])\l com.google.android.material.bottomsheet.BottomSheetBehavior.callbacks java.util.ArrayList  (LINE:1864)\l0x0021: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.ArrayList), (r2 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0025: CHECK_CAST (r3 I:com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback) = (com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback) (r3 I:??[OBJECT, ARRAY]) \l0x0027: INVOKE  \l  (r3 I:com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)\l  (r0 I:android.view.View A[D('bottomSheet' android.view.View)])\l  (r1 I:float A[D('slideOffset' float)])\l type: VIRTUAL call: com.google.android.material.bottomsheet.BottomSheetBehavior.BottomSheetCallback.onSlide(android.view.View, float):void A[MD:(android.view.View, float):void (m)]\l0x002a: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:1863)\l}"];
Node_25 [shape=record,label="{25\:\ 0x002d|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x002d: RETURN   A[SYNTHETIC] (LINE:1867)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|0x002d: RETURN   A[SYNTHETIC] (LINE:1867)\l}"];
Node_24 [shape=record,label="{24\:\ 0x002d|RETURN\lORIG_RETURN\l|0x002d: RETURN    (LINE:1867)\l}"];
MethodNode[shape=record,label="{void com.google.android.material.bottomsheet.BottomSheetBehavior.dispatchOnSlide((r4 'this' I:com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\> A[D('this' com.google.android.material.bottomsheet.BottomSheetBehavior\<V extends android.view.View\>), IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x001f \-\> B:21:0x0017, CROSS_EDGE: B:19:0x0010 \-\> B:24:0x002d, CROSS_EDGE: B:17:0x0008 \-\> B:24:0x002d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x002d: r1 'slideOffset' F\l  0x0017\-0x002d: r2 'i' I\l  0x0008\-0x002d: r0 'bottomSheet' Landroid\/view\/View;\l  0x0000\-0x002d: r4 'this' Lcom\/google\/android\/material\/bottomsheet\/BottomSheetBehavior;, signature: Lcom\/google\/android\/material\/bottomsheet\/BottomSheetBehavior\<TV;\>;\l  \-1 \-0x002d: r5 'top' I\lTYPE_VARS: [V extends android.view.View]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_26;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_21;
Node_25 -> Node_27;
Node_27 -> Node_15;
Node_26 -> Node_15;
Node_24 -> Node_15;
}

