digraph "CFG forcom.google.android.material.bottomsheet.BottomSheetDragHandleView.setBottomSheetBehavior(Lcom\/google\/android\/material\/bottomsheet\/BottomSheetBehavior;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|com.google.android.material.bottomsheet.BottomSheetBehavior\<?\> r0 = r2.bottomSheetBehavior\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r0 == null) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|r0.removeBottomSheetCallback(r2.bottomSheetCallback)\lr2.bottomSheetBehavior.setAccessibilityDelegateView(null)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|r2.bottomSheetBehavior = r3\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|if (r3 == null) goto L7\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|r3.setAccessibilityDelegateView(r2)\lonBottomSheetStateChanged(r2.bottomSheetBehavior.getState())\lr2.bottomSheetBehavior.addBottomSheetCallback(r2.bottomSheetCallback)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|updateInteractableState()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.bottomsheet.BottomSheetDragHandleView.setBottomSheetBehavior((r2v0 'this' com.google.android.material.bottomsheet.BottomSheetDragHandleView A[IMMUTABLE_TYPE, THIS]), (r3v0 'behavior' com.google.android.material.bottomsheet.BottomSheetBehavior\<?\> A[D('behavior' com.google.android.material.bottomsheet.BottomSheetBehavior\<?\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0011 \-\> B:8:0x0026, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Lcom\/google\/android\/material\/bottomsheet\/BottomSheetBehavior\<*\>;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

