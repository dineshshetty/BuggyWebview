digraph "CFG forcom.google.android.material.bottomsheet.BottomSheetDragHandleView.updateInteractableState()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|r1 = 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r2.accessibilityServiceEnabled == false) goto L12\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005}"];
Node_5 [shape=record,label="{5\:\ 0x0007|if (r2.bottomSheetBehavior == null) goto L12\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|r0 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x000c|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v1 boolean), (r0v6 boolean) binds: [B:7:0x000b, B:6:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|r2.interactable = r0\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|if (r2.bottomSheetBehavior == null) goto L8\l}"];
Node_11 [shape=record,label="{11\:\ 0x0014|r1 = 2\l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:9:0x0011, B:11:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|androidx.core.view.ViewCompat.setImportantForAccessibility(r2, r1)\lsetClickable(r2.interactable)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|r0 = false\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.bottomsheet.BottomSheetDragHandleView.updateInteractableState((r2v0 'this' com.google.android.material.bottomsheet.BottomSheetDragHandleView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0011 \-\> B:12:0x0015, CROSS_EDGE: B:7:0x000b \-\> B:8:0x000c, CROSS_EDGE: B:3:0x0003 \-\> B:7:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_7 -> Node_8;
}

