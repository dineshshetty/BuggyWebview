digraph "CFG forcom.google.android.material.bottomsheet.BottomSheetDragHandleView.updateInteractableState()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r2 I:com.google.android.material.bottomsheet.BottomSheetDragHandleView) com.google.android.material.bottomsheet.BottomSheetDragHandleView.accessibilityServiceEnabled boolean  (LINE:167)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IGET  (r0 I:com.google.android.material.bottomsheet.BottomSheetBehavior\<?\>) = (r2 I:com.google.android.material.bottomsheet.BottomSheetDragHandleView) com.google.android.material.bottomsheet.BottomSheetDragHandleView.bottomSheetBehavior com.google.android.material.bottomsheet.BottomSheetBehavior \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000b \l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x000c|0x000c: IPUT  (r0 I:boolean), (r2 I:com.google.android.material.bottomsheet.BottomSheetDragHandleView) com.google.android.material.bottomsheet.BottomSheetDragHandleView.interactable boolean \l0x000f: IGET  (r0 I:com.google.android.material.bottomsheet.BottomSheetBehavior\<?\>) = (r2 I:com.google.android.material.bottomsheet.BottomSheetDragHandleView) com.google.android.material.bottomsheet.BottomSheetDragHandleView.bottomSheetBehavior com.google.android.material.bottomsheet.BottomSheetBehavior  (LINE:170)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0014 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0014|0x0014: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:172)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|0x0015: INVOKE  (r2 I:android.view.View), (r1 I:int) type: STATIC call: androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View, int):void A[MD:(android.view.View, int):void (m)] (LINE:168)\l0x0018: IGET  (r0 I:boolean) = (r2 I:com.google.android.material.bottomsheet.BottomSheetDragHandleView) com.google.android.material.bottomsheet.BottomSheetDragHandleView.interactable boolean  (LINE:173)\l0x001a: INVOKE  (r2 I:com.google.android.material.bottomsheet.BottomSheetDragHandleView), (r0 I:boolean) type: VIRTUAL call: com.google.android.material.bottomsheet.BottomSheetDragHandleView.setClickable(boolean):void A[MD:(boolean):void (s)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|RETURN\l|0x001d: RETURN    (LINE:174)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|0x000b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private void com.google.android.material.bottomsheet.BottomSheetDragHandleView.updateInteractableState((r2 'this' I:com.google.android.material.bottomsheet.BottomSheetDragHandleView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0011 \-\> B:12:0x0015, CROSS_EDGE: B:7:0x000b \-\> B:8:0x000c, CROSS_EDGE: B:3:0x0003 \-\> B:7:0x000b\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_7 -> Node_8;
}

