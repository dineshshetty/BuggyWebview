digraph "CFG forcom.google.android.material.bottomsheet.BottomSheetDragHandleView.updateInteractableState()V" {
subgraph cluster_Region_270288572 {
label = "R(2:6|9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x000c|PHI: r0 \l  PHI: (r0v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r2.interactable = r2.accessibilityServiceEnabled && r2.bottomSheetBehavior != null\l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|PHI: r1 \l  PHI: (r1v1 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|androidx.core.view.ViewCompat.setImportantForAccessibility(r2, r2.bottomSheetBehavior == null ? 2 : 1)\lsetClickable(r2.interactable)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0003}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0005}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0007|REMOVE\lADDED_TO_REGION\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0009}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0011}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0014}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x001d}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000b}"];
MethodNode[shape=record,label="{private void com.google.android.material.bottomsheet.BottomSheetDragHandleView.updateInteractableState((r2v0 'this' com.google.android.material.bottomsheet.BottomSheetDragHandleView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0011 \-\> B:12:0x0015, CROSS_EDGE: B:7:0x000b \-\> B:8:0x000c, CROSS_EDGE: B:3:0x0003 \-\> B:7:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_8 -> Node_9;
Node_12 -> Node_13;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_9 -> Node_11;
Node_9 -> Node_12;
Node_11 -> Node_12;
Node_13 -> Node_1;
Node_7 -> Node_8;
}

