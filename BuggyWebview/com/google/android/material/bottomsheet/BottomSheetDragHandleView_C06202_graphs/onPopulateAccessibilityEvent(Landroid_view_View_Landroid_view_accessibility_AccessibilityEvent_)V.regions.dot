digraph "CFG forcom.google.android.material.bottomsheet.BottomSheetDragHandleView.2.onPopulateAccessibilityEvent(Landroid\/view\/View;Landroid\/view\/accessibility\/AccessibilityEvent;)V" {
subgraph cluster_Region_1503400788 {
label = "R(2:1|(1:(1:3)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|super.onPopulateAccessibilityEvent(r3, r4)\l}"];
subgraph cluster_Region_1081037007 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1940092792 {
label = "IF [B:3:0x0008] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r4.getEventType() == 1) goto L3\l}"];
subgraph cluster_Region_656304242 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|com.google.android.material.bottomsheet.BottomSheetDragHandleView.this.expandOrCollapseBottomSheetIfPossible()\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000f|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.bottomsheet.BottomSheetDragHandleView.2.onPopulateAccessibilityEvent((r2v0 'this' com.google.android.material.bottomsheet.BottomSheetDragHandleView$2 A[IMMUTABLE_TYPE, THIS]), (r3v0 'host' android.view.View A[D('host' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'event' android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x0008 \-\> B:5:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.core.view.AccessibilityDelegateCompat.onPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent):void]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_0 -> Node_2;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

