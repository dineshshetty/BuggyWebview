digraph "CFG forcom.google.android.material.bottomsheet.BottomSheetDialog.EdgeToEdgeCallback.\<init\>(Landroid\/view\/View;Landroidx\/core\/view\/WindowInsetsCompat;)V" {
subgraph cluster_Region_1320049933 {
label = "R(3:1|(1:3)(1:14)|(1:5)(1:(1:10)(1:12))) | DECL_VAR: android.content.res.ColorStateList backgroundTint\l";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0000|r3.insetsCompat = r5\lcom.google.android.material.shape.MaterialShapeDrawable com.google.android.material.shape.MaterialShapeDrawable r0 = com.google.android.material.bottomsheet.BottomSheetBehavior.from(r4).getMaterialShapeDrawable()\l}"];
subgraph cluster_IfRegion_1138518893 {
label = "IF [B:18:0x000d] THEN: R(1:3) ELSE: R(1:14)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000d|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_2007762364 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x000f|android.content.res.ColorStateList r1 = r0.getFillColor()\l}"];
}
subgraph cluster_Region_1112561288 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0014|android.content.res.ColorStateList r1 = androidx.core.view.ViewCompat.getBackgroundTintList(r4)\l}"];
}
}
subgraph cluster_IfRegion_1113699520 {
label = "IF [B:21:0x0018] THEN: R(1:5) ELSE: R(1:(1:10)(1:12))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0018|PHI: r1 \l  PHI: (r1v1 'backgroundTint' android.content.res.ColorStateList) = (r1v0 'backgroundTint' android.content.res.ColorStateList), (r1v2 'backgroundTint' android.content.res.ColorStateList) binds: [B:20:0x0014, B:19:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != null) goto L5\l}"];
subgraph cluster_Region_594972161 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x001a|r3.lightBottomSheet = java.lang.Boolean.valueOf(com.google.android.material.color.MaterialColors.isColorLight(r1.getDefaultColor()))\l}"];
}
subgraph cluster_Region_263268343 {
label = "R(1:(1:10)(1:12)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1434576424 {
label = "IF [B:24:0x002f] THEN: R(1:10) ELSE: R(1:12) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x002f|if ((r4.getBackground() instanceof android.graphics.drawable.ColorDrawable) != false) goto L10\l}"];
subgraph cluster_Region_436834284 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0031|r3.lightBottomSheet = java.lang.Boolean.valueOf(com.google.android.material.color.MaterialColors.isColorLight(((android.graphics.drawable.ColorDrawable) r4.getBackground()).getColor()))\l}"];
}
subgraph cluster_Region_219683882 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0046|r3.lightBottomSheet = null\l}"];
}
}
}
}
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ ?|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0029}"];
Node_29 [shape=record,color=red,label="{29\:\ ?|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0049|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.bottomsheet.BottomSheetDialog.EdgeToEdgeCallback.\<init\>((r3v0 'this' com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback A[IMMUTABLE_TYPE, THIS]), (r4v0 'bottomSheet' android.view.View A[D('bottomSheet' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'insetsCompat' androidx.core.view.WindowInsetsCompat A[D('insetsCompat' androidx.core.view.WindowInsetsCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0031 \-\> B:27:0x0049, CROSS_EDGE: B:26:0x0046 \-\> B:27:0x0049, CROSS_EDGE: B:20:0x0014 \-\> B:21:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_15 -> Node_17;
Node_28 -> Node_16;
Node_23 -> Node_24;
Node_29 -> Node_16;
Node_27 -> Node_16;
}

