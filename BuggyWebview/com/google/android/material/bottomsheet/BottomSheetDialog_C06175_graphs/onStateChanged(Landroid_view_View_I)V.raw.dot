digraph "CFG forcom.google.android.material.bottomsheet.BottomSheetDialog.5.onStateChanged(Landroid\/view\/View;I)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char])  (LINE:408)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0001|0x0001: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newState' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0003|0x0003: IGET  (r0 I:com.google.android.material.bottomsheet.BottomSheetDialog) = (r1 I:com.google.android.material.bottomsheet.BottomSheetDialog$5) com.google.android.material.bottomsheet.BottomSheetDialog.5.this$0 com.google.android.material.bottomsheet.BottomSheetDialog  (LINE:409)\l0x0005: INVOKE  (r0 I:com.google.android.material.bottomsheet.BottomSheetDialog) type: VIRTUAL call: com.google.android.material.bottomsheet.BottomSheetDialog.cancel():void A[MD:():void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|RETURN\lORIG_RETURN\l|0x0008: RETURN    (LINE:411)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0008: RETURN   A[SYNTHETIC] (LINE:411)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.bottomsheet.BottomSheetDialog.5.onStateChanged((r1 'this' I:com.google.android.material.bottomsheet.BottomSheetDialog$5 A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.View A[D('bottomSheet' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('newState' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0001 \-\> B:12:0x0008\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r2 'bottomSheet' Landroid\/view\/View;\l  \-1 \-0x0008: r3 'newState' I\lMETHOD_OVERRIDE: [com.google.android.material.bottomsheet.BottomSheetBehavior.BottomSheetCallback.onStateChanged(android.view.View, int):void]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

