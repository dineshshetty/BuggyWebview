digraph "CFG forcom.google.android.material.bottomsheet.BottomSheetDragHandleView$$ExternalSyntheticLambda0.perform(Landroid\/view\/View;Landroidx\/core\/view\/accessibility\/AccessibilityViewCommand$CommandArguments;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.bottomsheet.BottomSheetDragHandleView) = (r1 I:com.google.android.material.bottomsheet.BottomSheetDragHandleView$$ExternalSyntheticLambda0) com.google.android.material.bottomsheet.BottomSheetDragHandleView$$ExternalSyntheticLambda0.f$0 com.google.android.material.bottomsheet.BottomSheetDragHandleView \l0x0002: INVOKE  (r2 I:boolean) = \l  (r0 I:com.google.android.material.bottomsheet.BottomSheetDragHandleView)\l  (r2 I:android.view.View)\l  (r3 I:androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments)\l type: VIRTUAL call: com.google.android.material.bottomsheet.BottomSheetDragHandleView.lambda$onBottomSheetStateChanged$0$com\-google\-android\-material\-bottomsheet\-BottomSheetDragHandleView(android.view.View, androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments):boolean A[MD:(android.view.View, androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments):boolean (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|RETURN\l|0x0006: RETURN  (r2 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final boolean com.google.android.material.bottomsheet.BottomSheetDragHandleView$$ExternalSyntheticLambda0.perform((r1 'this' I:com.google.android.material.bottomsheet.BottomSheetDragHandleView$$ExternalSyntheticLambda0 A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_OVERRIDE: [androidx.core.view.accessibility.AccessibilityViewCommand.perform(android.view.View, androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

