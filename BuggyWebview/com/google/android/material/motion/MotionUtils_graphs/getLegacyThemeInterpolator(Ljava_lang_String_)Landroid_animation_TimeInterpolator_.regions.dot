digraph "CFG forcom.google.android.material.motion.MotionUtils.getLegacyThemeInterpolator(Ljava\/lang\/String;)Landroid\/animation\/TimeInterpolator;" {
subgraph cluster_Region_1377385041 {
label = "R(1:(2:3|(2:(2:8|9)|(2:5|6)))(1:(2:12|13)(2:14|15)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_934288763 {
label = "IF [B:19:0x0006] THEN: R(2:3|(2:(2:8|9)|(2:5|6))) ELSE: R(1:(2:12|13)(2:14|15))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0006|if (isLegacyEasingType(r7, com.google.android.material.motion.MotionUtils.EASING_TYPE_CUBIC_BEZIER) != false) goto L3\l}"];
subgraph cluster_Region_82910021 {
label = "R(2:3|(2:(2:8|9)|(2:5|6)))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0008|java.lang.String java.lang.String r0 = getLegacyEasingContent(r7, com.google.android.material.motion.MotionUtils.EASING_TYPE_CUBIC_BEZIER)\ljava.lang.String[] java.lang.String[] r1 = r0.split(\",\")\l}"];
subgraph cluster_Region_43523785 {
label = "R(2:(2:8|9)|(2:5|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_606613007 {
label = "IF [B:21:0x0014] THEN: R(2:8|9) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0014|if (r1.length != 4) goto L8\l}"];
subgraph cluster_Region_1572956784 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x002f}"];
Node_25 [shape=record,label="{25\:\ 0x0046|throw new java.lang.IllegalArgumentException(\"Motion easing theme attribute must have 4 control points if using bezier curve format; instead got: \" + r1.length)\l}"];
}
}
subgraph cluster_Region_2021987784 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0016|float float r2 = getLegacyControlPoint(r1, 0)\lfloat float r3 = getLegacyControlPoint(r1, 1)\lfloat float r4 = getLegacyControlPoint(r1, 2)\lfloat float r5 = getLegacyControlPoint(r1, 3)\l}"];
Node_23 [shape=record,label="{23\:\ 0x002e|RETURN\l|return androidx.core.view.animation.PathInterpolatorCompat.create(r2, r3, r4, r5)\l}"];
}
}
}
subgraph cluster_Region_721062573 {
label = "R(1:(2:12|13)(2:14|15)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_833287697 {
label = "IF [B:27:0x004d] THEN: R(2:12|13) ELSE: R(2:14|15) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x004d|if (isLegacyEasingType(r7, com.google.android.material.motion.MotionUtils.EASING_TYPE_PATH) != false) goto L12\l}"];
subgraph cluster_Region_1812540677 {
label = "R(2:12|13)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x004f|java.lang.String java.lang.String r0 = getLegacyEasingContent(r7, com.google.android.material.motion.MotionUtils.EASING_TYPE_PATH)\l}"];
Node_29 [shape=record,label="{29\:\ 0x005b|RETURN\l|return androidx.core.view.animation.PathInterpolatorCompat.create(androidx.core.graphics.PathParser.createPathFromPathData(r0))\l}"];
}
subgraph cluster_Region_113671834 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x005c}"];
Node_31 [shape=record,label="{31\:\ 0x0072|throw new java.lang.IllegalArgumentException(\"Invalid motion easing type: \" + r7)\l}"];
}
}
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0000}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0047}"];
MethodNode[shape=record,label="{private static android.animation.TimeInterpolator com.google.android.material.motion.MotionUtils.getLegacyThemeInterpolator((r7v0 'easingString' java.lang.String A[D('easingString' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0046 \-\> B:17:?, CROSS_EDGE: B:29:0x005b \-\> B:17:?, CROSS_EDGE: B:31:0x0072 \-\> B:17:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_19 -> Node_20;
Node_19 -> Node_26[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_17;
Node_22 -> Node_23;
Node_23 -> Node_17;
Node_27 -> Node_28;
Node_27 -> Node_30[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_17;
Node_30 -> Node_31;
Node_31 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_26 -> Node_27;
}

