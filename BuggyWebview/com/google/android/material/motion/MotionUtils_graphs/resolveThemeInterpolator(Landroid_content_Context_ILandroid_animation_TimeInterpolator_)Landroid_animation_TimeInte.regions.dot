digraph "CFG forcom.google.android.material.motion.MotionUtils.resolveThemeInterpolator(Landroid\/content\/Context;ILandroid\/animation\/TimeInterpolator;)Landroid\/animation\/TimeInterpolator;" {
subgraph cluster_Region_1281566309 {
label = "R(2:1|(2:(1:3)|(1:(2:(1:14)|(2:7|(2:(1:10)|(1:12)))))))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0000|android.util.TypedValue android.util.TypedValue r0 = new android.util.TypedValue()\l}"];
subgraph cluster_Region_1548181559 {
label = "R(2:(1:3)|(1:(2:(1:14)|(2:7|(2:(1:10)|(1:12))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_300407074 {
label = "IF [B:18:0x000e] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000e|if (r3.getTheme().resolveAttribute(r4, r0, true) == false) goto L3\l}"];
subgraph cluster_Region_1774249867 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0010|RETURN\l|return r5\l}"];
}
}
subgraph cluster_Region_2131364048 {
label = "R(1:(2:(1:14)|(2:7|(2:(1:10)|(1:12)))))";
node [shape=record,color=blue];
subgraph cluster_Region_491507525 {
label = "R(2:(1:14)|(2:7|(2:(1:10)|(1:12))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_677555571 {
label = "IF [B:21:0x0014] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0014|if (r0.type != 3) goto L13\l}"];
subgraph cluster_Region_2062176771 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0035|throw new java.lang.IllegalArgumentException(\"Motion easing theme attribute must be an @interpolator resource for ?attr\/motionEasing*Interpolator attributes or a string for ?attr\/motionEasing* attributes.\")\l}"];
}
}
subgraph cluster_Region_1989177397 {
label = "R(2:7|(2:(1:10)|(1:12)))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0016|java.lang.String java.lang.String r1 = java.lang.String.valueOf(r0.string)\l}"];
subgraph cluster_Region_343412330 {
label = "R(2:(1:10)|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_211079941 {
label = "IF [B:23:0x0020] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0020|if (isLegacyEasingAttribute(r1) != false) goto L9\l}"];
subgraph cluster_Region_832630481 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0026|RETURN\l|return getLegacyThemeInterpolator(r1)\l}"];
}
}
subgraph cluster_Region_588587148 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x002d|RETURN\l|return android.view.animation.AnimationUtils.loadInterpolator(r3, r0.resourceId)\l}"];
}
}
}
}
}
}
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0011}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0022}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0027}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x002e}"];
MethodNode[shape=record,label="{public static android.animation.TimeInterpolator com.google.android.material.motion.MotionUtils.resolveThemeInterpolator((r3v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'attrResId' int A[D('attrResId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'defaultInterpolator' android.animation.TimeInterpolator A[D('defaultInterpolator' android.animation.TimeInterpolator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0026 \-\> B:16:?, CROSS_EDGE: B:27:0x002d \-\> B:16:?, CROSS_EDGE: B:29:0x0035 \-\> B:16:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_16;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_28;
Node_29 -> Node_16;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_26[style=dashed];
Node_25 -> Node_16;
Node_27 -> Node_16;
Node_15 -> Node_17;
Node_20 -> Node_21;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_28 -> Node_29;
}

