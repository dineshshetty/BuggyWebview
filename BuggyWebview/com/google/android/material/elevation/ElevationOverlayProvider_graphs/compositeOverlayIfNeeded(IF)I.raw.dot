digraph "CFG forcom.google.android.material.elevation.ElevationOverlayProvider.compositeOverlayIfNeeded(IF)I" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r1 I:com.google.android.material.elevation.ElevationOverlayProvider) com.google.android.material.elevation.ElevationOverlayProvider.elevationOverlayEnabled boolean  (LINE:109)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000f \l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|0x0004: INVOKE  (r0 I:boolean) = (r1 I:com.google.android.material.elevation.ElevationOverlayProvider), (r2 I:int A[D('backgroundColor' int)]) type: DIRECT call: com.google.android.material.elevation.ElevationOverlayProvider.isThemeSurfaceColor(int):boolean A[MD:(int):boolean (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000f \l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|0x000a: INVOKE  (r0 I:int) = \l  (r1 I:com.google.android.material.elevation.ElevationOverlayProvider)\l  (r2 I:int A[D('backgroundColor' int)])\l  (r3 I:float A[D('elevation' float)])\l type: VIRTUAL call: com.google.android.material.elevation.ElevationOverlayProvider.compositeOverlay(int, float):int A[MD:(int, float):int (m)] (LINE:110)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|RETURN\l|0x000f: RETURN  (r2 I:int A[D('backgroundColor' int)])  (LINE:112)\l}"];
MethodNode[shape=record,label="{public int com.google.android.material.elevation.ElevationOverlayProvider.compositeOverlayIfNeeded((r1 'this' I:com.google.android.material.elevation.ElevationOverlayProvider A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('backgroundColor' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:float A[D('elevation' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000f \-\> B:10:?, CROSS_EDGE: B:12:0x0002 \-\> B:17:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000f: r2 'backgroundColor' I\l  \-1 \-0x000f: r3 'elevation' F\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_10;
Node_17 -> Node_10;
}

