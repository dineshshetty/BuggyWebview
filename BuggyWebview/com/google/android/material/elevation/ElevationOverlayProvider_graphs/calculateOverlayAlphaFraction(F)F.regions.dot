digraph "CFG forcom.google.android.material.elevation.ElevationOverlayProvider.calculateOverlayAlphaFraction(F)F" {
subgraph cluster_Region_206110690 {
label = "R(2:1|(2:(1:8)|(2:5|6)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|float float r0 = r4.displayDensity\l}"];
subgraph cluster_Region_1031170828 {
label = "R(2:(1:8)|(2:5|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1315338662 {
label = "IF [B:13:0x0005, B:15:0x0009] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0005|if (r0 \<= 0.0f) goto L8\l}"];
Node_15 [shape=record,label="{15\:\ 0x0009|ADDED_TO_REGION\l|if (r5 \<= 0.0f) goto L8\l}"];
subgraph cluster_Region_2108655449 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0025|RETURN\l|return 0.0f\l}"];
}
}
subgraph cluster_Region_1191322409 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000c|float float r0 = r5 \/ r0\lfloat float r2 = ((((float) java.lang.Math.log1p(r0)) * com.google.android.material.elevation.ElevationOverlayProvider.FORMULA_MULTIPLIER) + com.google.android.material.elevation.ElevationOverlayProvider.FORMULA_OFFSET) \/ 100.0f\l}"];
Node_18 [shape=record,label="{18\:\ 0x0024|RETURN\l|return java.lang.Math.min(r2, 1.0f)\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0007}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public float com.google.android.material.elevation.ElevationOverlayProvider.calculateOverlayAlphaFraction((r4v0 'this' com.google.android.material.elevation.ElevationOverlayProvider A[IMMUTABLE_TYPE, THIS]), (r5v0 'elevation' float A[D('elevation' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0025 \-\> B:11:?, CROSS_EDGE: B:13:0x0005 \-\> B:19:0x0025\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_15 -> Node_17[style=dashed];
Node_15 -> Node_19;
Node_19 -> Node_11;
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_10 -> Node_12;
Node_14 -> Node_15;
}

