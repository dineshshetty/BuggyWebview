digraph "CFG forcom.google.android.material.canvas.CanvasCompat.saveLayerAlpha(Landroid\/graphics\/Canvas;FFFFI)I" {
subgraph cluster_Region_206489003 {
label = "R(1:(2:(1:4)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_601279026 {
label = "R(2:(1:4)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1811226210 {
label = "IF [B:11:0x0004] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \> 21) goto L3\l}"];
subgraph cluster_Region_1971571193 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000a|RETURN\l|return r8.saveLayerAlpha(r9, r10, r11, r12, r13)\l}"];
}
}
subgraph cluster_Region_261765503 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0017|RETURN\l|return r8.saveLayerAlpha(r9, r10, r11, r12, r13, 31)\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0006}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000b}"];
MethodNode[shape=record,label="{public static int com.google.android.material.canvas.CanvasCompat.saveLayerAlpha((r8v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'left' float A[D('left' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'top' float A[D('top' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'right' float A[D('right' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'bottom' float A[D('bottom' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'alpha' int A[D('alpha' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0017 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_11 -> Node_12;
Node_11 -> Node_14[style=dashed];
Node_13 -> Node_9;
Node_15 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

