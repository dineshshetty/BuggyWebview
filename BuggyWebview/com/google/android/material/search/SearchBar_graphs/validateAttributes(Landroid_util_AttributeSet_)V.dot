digraph "CFG forcom.google.android.material.search.SearchBar.validateAttributes(Landroid\/util\/AttributeSet;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|if (r3 != null) goto L4\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0003}"];
Node_18 [shape=record,label="{18\:\ 0x000b|if (r3.getAttributeValue(com.google.android.material.search.SearchBar.NAMESPACE_APP, \"title\") != null) goto L11\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d}"];
Node_20 [shape=record,label="{20\:\ 0x0013|if (r3.getAttributeValue(com.google.android.material.search.SearchBar.NAMESPACE_APP, \"subtitle\") != null) goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|RETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016}"];
Node_23 [shape=record,label="{23\:\ 0x001d|throw new java.lang.UnsupportedOperationException(\"SearchBar does not support subtitle. Use hint or text instead.\")\l}"];
Node_24 [shape=record,label="{24\:\ 0x001e}"];
Node_25 [shape=record,label="{25\:\ 0x0025|throw new java.lang.UnsupportedOperationException(\"SearchBar does not support title. Use hint or text instead.\")\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.search.SearchBar.validateAttributes((r2v0 'this' com.google.android.material.search.SearchBar A[IMMUTABLE_TYPE, THIS]), (r3v0 'attributeSet' android.util.AttributeSet A[D('attributeSet' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0015 \-\> B:14:?, CROSS_EDGE: B:23:0x001d \-\> B:14:?, CROSS_EDGE: B:25:0x0025 \-\> B:14:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_14;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_14;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

