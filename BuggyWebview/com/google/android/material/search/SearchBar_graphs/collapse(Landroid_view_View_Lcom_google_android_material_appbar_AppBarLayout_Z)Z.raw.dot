digraph "CFG forcom.google.android.material.search.SearchBar.collapse(Landroid\/view\/View;Lcom\/google\/android\/material\/appbar\/AppBarLayout;Z)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r2 I:android.view.View A[D('expandedView' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)] (LINE:768)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000c \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: INVOKE  (r0 I:boolean) = (r1 I:com.google.android.material.search.SearchBar) type: VIRTUAL call: com.google.android.material.search.SearchBar.isCollapsing():boolean A[MD:():boolean (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0012 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|0x0012: IGET  (r0 I:com.google.android.material.search.SearchBarAnimationHelper) = (r1 I:com.google.android.material.search.SearchBar) com.google.android.material.search.SearchBar.searchBarAnimationHelper com.google.android.material.search.SearchBarAnimationHelper  (LINE:769)\l0x0014: INVOKE  \l  (r0 I:com.google.android.material.search.SearchBarAnimationHelper)\l  (r1 I:com.google.android.material.search.SearchBar)\l  (r2 I:android.view.View A[D('expandedView' android.view.View)])\l  (r3 I:com.google.android.material.appbar.AppBarLayout A[D('appBarLayout' com.google.android.material.appbar.AppBarLayout)])\l  (r4 I:boolean A[D('skipAnimation' boolean)])\l type: VIRTUAL call: com.google.android.material.search.SearchBarAnimationHelper.startCollapseAnimation(com.google.android.material.search.SearchBar, android.view.View, com.google.android.material.appbar.AppBarLayout, boolean):void A[MD:(com.google.android.material.search.SearchBar, android.view.View, com.google.android.material.appbar.AppBarLayout, boolean):void (m)]\l0x0017: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:771)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:boolean) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|0x000c: INVOKE  (r0 I:boolean) = (r1 I:com.google.android.material.search.SearchBar) type: VIRTUAL call: com.google.android.material.search.SearchBar.isExpanding():boolean A[MD:():boolean (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0019 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0019|RETURN\l|0x0019: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:773)\l0x001a: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.search.SearchBar.collapse((r1 'this' I:com.google.android.material.search.SearchBar A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.View A[D('expandedView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.google.android.material.appbar.AppBarLayout A[D('appBarLayout' com.google.android.material.appbar.AppBarLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('skipAnimation' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x001a \-\> B:13:?, CROSS_EDGE: B:17:0x000a \-\> B:20:0x0012, CROSS_EDGE: B:15:0x0004 \-\> B:18:0x000c\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001a: r2 'expandedView' Landroid\/view\/View;\l  \-1 \-0x001a: r3 'appBarLayout' Lcom\/google\/android\/material\/appbar\/AppBarLayout;\l  \-1 \-0x001a: r4 'skipAnimation' Z\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_22 -> Node_13;
}

