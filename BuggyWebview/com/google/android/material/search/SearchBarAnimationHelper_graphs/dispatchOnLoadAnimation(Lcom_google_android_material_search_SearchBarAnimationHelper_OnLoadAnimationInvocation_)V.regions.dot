digraph "CFG forcom.google.android.material.search.SearchBarAnimationHelper.dispatchOnLoadAnimation(Lcom\/google\/android\/material\/search\/SearchBarAnimationHelper$OnLoadAnimationInvocation;)V" {
subgraph cluster_Region_417690527 {
label = "R(2:1|(1:4))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0000|java.util.Iterator r0 = r2.onLoadAnimationCallbacks.iterator()\l\l}"];
subgraph cluster_LoopRegion_1035792426 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x000a|com.google.android.material.search.SearchBar$OnLoadAnimationCallback \lif (r0.hasNext() != false) goto L4\l}"];
subgraph cluster_Region_148597534 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x000c|LOOP_END\lLOOP:0: B:19:0x0006\-\>B:21:0x000c\l|com.google.android.material.search.SearchBar$OnLoadAnimationCallback r1 = r0.next()\lr3.invoke(r1)\l}"];
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0006|LOOP_START\lLOOP:0: B:19:0x0006\-\>B:21:0x000c\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0016|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0016}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.search.SearchBarAnimationHelper.dispatchOnLoadAnimation((r2v0 'this' com.google.android.material.search.SearchBarAnimationHelper A[IMMUTABLE_TYPE, THIS]), (r3v0 'invocation' com.google.android.material.search.SearchBarAnimationHelper$OnLoadAnimationInvocation A[D('invocation' com.google.android.material.search.SearchBarAnimationHelper$OnLoadAnimationInvocation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x000c \-\> B:19:0x0006\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_18 -> Node_19;
Node_20 -> Node_21;
Node_20 -> Node_23[style=dashed];
Node_21 -> Node_19;
Node_16 -> Node_18;
Node_19 -> Node_20;
Node_23 -> Node_22;
Node_22 -> Node_17;
}

