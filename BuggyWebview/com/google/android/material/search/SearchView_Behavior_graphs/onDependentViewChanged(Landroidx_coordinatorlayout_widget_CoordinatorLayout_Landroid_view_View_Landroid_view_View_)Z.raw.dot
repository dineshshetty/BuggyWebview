digraph "CFG forcom.google.android.material.search.SearchView.Behavior.onDependentViewChanged(Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;Landroid\/view\/View;Landroid\/view\/View;)Z" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CHECK_CAST (r2 I:com.google.android.material.search.SearchView) = (com.google.android.material.search.SearchView) (r2 I:??[OBJECT, ARRAY])  (LINE:887)\l0x0002: INVOKE  (r1 I:boolean) = \l  (r0 I:com.google.android.material.search.SearchView$Behavior)\l  (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout)\l  (r2 I:com.google.android.material.search.SearchView)\l  (r3 I:android.view.View)\l type: VIRTUAL call: com.google.android.material.search.SearchView.Behavior.onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.search.SearchView, android.view.View):boolean A[MD:(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.search.SearchView, android.view.View):boolean (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|RETURN\l|0x0006: RETURN  (r1 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ boolean com.google.android.material.search.SearchView.Behavior.onDependentViewChanged((r0 'this' I:com.google.android.material.search.SearchView$Behavior A[IMMUTABLE_TYPE, THIS]), (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:com.google.android.material.search.SearchView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_GENERATE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [androidx.coordinatorlayout.widget.CoordinatorLayout.Behavior.onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout, V extends android.view.View, android.view.View):boolean]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_9;
}

