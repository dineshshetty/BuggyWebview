digraph "CFG forcom.google.android.material.search.SearchViewAnimationHelper.getDividerAnimator(Z)Landroid\/animation\/Animator;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.internal.TouchObserverFrameLayout) = (r7 I:com.google.android.material.search.SearchViewAnimationHelper) com.google.android.material.search.SearchViewAnimationHelper.contentContainer com.google.android.material.internal.TouchObserverFrameLayout  (LINE:510)\l0x0002: INVOKE  (r0 I:int) = (r0 I:com.google.android.material.internal.TouchObserverFrameLayout) type: VIRTUAL call: com.google.android.material.internal.TouchObserverFrameLayout.getHeight():int A[MD:():int (s)] (LINE:511)\l0x0006: CAST (r0 I:float) = (float) (r0 I:int) \l0x0007: CONST  (r1 I:??[int, float, short, byte, char]) = (1028443344(0x3d4cccd0, float:0.050000012) ??[int, float, short, byte, char]) \l0x000a: ARITH  (r0 I:float) = (r0 I:float) * (r1 I:float) \l0x000c: CONST  (r1 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x000e: ARITH  (r0 I:float) = (r0 I:float) \/ (r1 I:float) \l0x000f: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:513)\l0x0010: NEW_ARRAY  (r1 I:float[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0012: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: APUT  \l  (r1 I:??[int, float][])\l  (r2 I:??[int, short, byte, char])\l  (r0 I:??[int, float, short, byte, char] A[D('dividerTranslationY' float)])\l \l0x0015: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0016: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0017: APUT  (r1 I:??[int, float][]), (r4 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l0x0019: INVOKE  (r1 I:android.animation.ValueAnimator) = (r1 I:float[]) type: STATIC call: android.animation.ValueAnimator.ofFloat(float[]):android.animation.ValueAnimator A[MD:(float[]):android.animation.ValueAnimator VARARG (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('show' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0023  (LINE:515)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: CONST  (r5 I:??[long, double]) = (300(0x12c, double:1.48E\-321) ??[long, double]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|0x0025: INVOKE  (r1 I:android.animation.ValueAnimator A[D('animatorDivider' android.animation.ValueAnimator)]), (r5 I:long) type: VIRTUAL call: android.animation.ValueAnimator.setDuration(long):android.animation.ValueAnimator A[MD:(long):android.animation.ValueAnimator (c)] (LINE:514)\l0x0028: SGET  (r3 I:android.animation.TimeInterpolator) =  com.google.android.material.animation.AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR android.animation.TimeInterpolator  (LINE:516)\l0x002a: INVOKE  (r3 I:android.animation.TimeInterpolator) = (r8 I:boolean A[D('show' boolean)]), (r3 I:android.animation.TimeInterpolator) type: STATIC call: com.google.android.material.internal.ReversableAnimatedValueInterpolator.of(boolean, android.animation.TimeInterpolator):android.animation.TimeInterpolator A[MD:(boolean, android.animation.TimeInterpolator):android.animation.TimeInterpolator (m)] (LINE:517)\l0x002e: INVOKE  \l  (r1 I:android.animation.ValueAnimator A[D('animatorDivider' android.animation.ValueAnimator)])\l  (r3 I:android.animation.TimeInterpolator)\l type: VIRTUAL call: android.animation.ValueAnimator.setInterpolator(android.animation.TimeInterpolator):void A[MD:(android.animation.TimeInterpolator):void (c)] (LINE:516)\l0x0031: NEW_ARRAY  (r3 I:android.view.View[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: android.view.View[]  (LINE:518)\l0x0033: IGET  (r4 I:android.view.View) = (r7 I:com.google.android.material.search.SearchViewAnimationHelper) com.google.android.material.search.SearchViewAnimationHelper.divider android.view.View \l0x0035: APUT  (r3 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) \l0x0037: INVOKE  (r2 I:com.google.android.material.internal.MultiViewUpdateListener) = (r3 I:android.view.View[]) type: STATIC call: com.google.android.material.internal.MultiViewUpdateListener.translationYListener(android.view.View[]):com.google.android.material.internal.MultiViewUpdateListener A[MD:(android.view.View[]):com.google.android.material.internal.MultiViewUpdateListener VARARG (m)]\l0x003b: INVOKE  \l  (r1 I:android.animation.ValueAnimator A[D('animatorDivider' android.animation.ValueAnimator)])\l  (r2 I:android.animation.ValueAnimator$AnimatorUpdateListener)\l type: VIRTUAL call: android.animation.ValueAnimator.addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener):void A[MD:(android.animation.ValueAnimator$AnimatorUpdateListener):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|RETURN\l|0x003e: RETURN  (r1 I:android.animation.Animator A[D('animatorDivider' android.animation.ValueAnimator)])  (LINE:519)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: CONST  (r5 I:??[long, double]) = (250(0xfa, double:1.235E\-321) ??[long, double]) \l}"];
MethodNode[shape=record,label="{private android.animation.Animator com.google.android.material.search.SearchViewAnimationHelper.getDividerAnimator((r7 'this' I:com.google.android.material.search.SearchViewAnimationHelper A[IMMUTABLE_TYPE, THIS]), (r8 I:boolean A[D('show' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0023 \-\> B:14:0x0025\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x003e: r0 'dividerTranslationY' F\l  0x001d\-0x003e: r1 'animatorDivider' Landroid\/animation\/ValueAnimator;\l  \-1 \-0x003e: r8 'show' Z\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

