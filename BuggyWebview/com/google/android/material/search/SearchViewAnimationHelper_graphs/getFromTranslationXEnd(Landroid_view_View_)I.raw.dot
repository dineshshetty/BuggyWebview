digraph "CFG forcom.google.android.material.search.SearchViewAnimationHelper.getFromTranslationXEnd(Landroid\/view\/View;)I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0001|0x0001: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r4 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:559)\l0x0005: CHECK_CAST (r0 I:android.view.ViewGroup$MarginLayoutParams) = (android.view.ViewGroup$MarginLayoutParams) (r0 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r0 I:int) = (r0 I:android.view.ViewGroup$MarginLayoutParams) type: STATIC call: androidx.core.view.MarginLayoutParamsCompat.getMarginEnd(android.view.ViewGroup$MarginLayoutParams):int A[MD:(android.view.ViewGroup$MarginLayoutParams):int (m)]\l0x000b: IGET  (r1 I:com.google.android.material.search.SearchBar) = (r3 I:com.google.android.material.search.SearchViewAnimationHelper) com.google.android.material.search.SearchViewAnimationHelper.searchBar com.google.android.material.search.SearchBar  (LINE:560)\l0x000d: INVOKE  (r1 I:boolean) = (r1 I:android.view.View) type: STATIC call: com.google.android.material.internal.ViewUtils.isLayoutRtl(android.view.View):boolean A[MD:(android.view.View):boolean (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0013|0x0013: IGET  (r1 I:com.google.android.material.search.SearchBar) = (r3 I:com.google.android.material.search.SearchViewAnimationHelper) com.google.android.material.search.SearchViewAnimationHelper.searchBar com.google.android.material.search.SearchBar  (LINE:561)\l0x0015: INVOKE  (r1 I:int) = (r1 I:com.google.android.material.search.SearchBar) type: VIRTUAL call: com.google.android.material.search.SearchBar.getLeft():int A[MD:():int (s)]\l0x0019: ARITH  (r1 I:int) = (r1 I:int) \- (r0 I:int A[D('marginEnd' int)]) \l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0029: RETURN  (r1 I:int) A[SYNTHETIC] (LINE:560)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|0x001b: IGET  (r1 I:com.google.android.material.search.SearchBar) = (r3 I:com.google.android.material.search.SearchViewAnimationHelper) com.google.android.material.search.SearchViewAnimationHelper.searchBar com.google.android.material.search.SearchBar  (LINE:562)\l0x001d: INVOKE  (r1 I:int) = (r1 I:com.google.android.material.search.SearchBar) type: VIRTUAL call: com.google.android.material.search.SearchBar.getRight():int A[MD:():int (s)]\l0x0021: IGET  (r2 I:com.google.android.material.search.SearchView) = (r3 I:com.google.android.material.search.SearchViewAnimationHelper) com.google.android.material.search.SearchViewAnimationHelper.searchView com.google.android.material.search.SearchView \l0x0023: INVOKE  (r2 I:int) = (r2 I:com.google.android.material.search.SearchView) type: VIRTUAL call: com.google.android.material.search.SearchView.getWidth():int A[MD:():int (s)]\l0x0027: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0028: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int A[D('marginEnd' int)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|RETURN\lORIG_RETURN\l|0x0029: RETURN  (r1 I:int)  (LINE:560)\l}"];
MethodNode[shape=record,label="{private int com.google.android.material.search.SearchViewAnimationHelper.getFromTranslationXEnd((r3 'this' I:com.google.android.material.search.SearchViewAnimationHelper A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001b \-\> B:14:0x0029\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0029: r0 'marginEnd' I\l  \-1 \-0x0029: r4 'view' Landroid\/view\/View;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

