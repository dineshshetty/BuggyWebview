digraph "CFG forcom.google.android.material.search.SearchViewAnimationHelper.getContentAlphaAnimator(Z)Landroid\/animation\/Animator;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:497)\l0x0001: NEW_ARRAY  (r1 I:float[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0003: FILL_ARRAY  (r1 I:??[]), data: 0x003e: FILL_ARRAY_DATA  , data: [0, 1065353216] \l0x0006: INVOKE  (r1 I:android.animation.ValueAnimator) = (r1 I:float[]) type: STATIC call: android.animation.ValueAnimator.ofFloat(float[]):android.animation.ValueAnimator A[MD:(float[]):android.animation.ValueAnimator VARARG (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000b|0x000b: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('show' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0010  (LINE:499)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000d|0x000d: CONST  (r2 I:??[long, double]) = (150(0x96, double:7.4E\-322) ??[long, double]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|0x0012: INVOKE  (r1 I:android.animation.ValueAnimator A[D('animatorAlpha' android.animation.ValueAnimator)]), (r2 I:long) type: VIRTUAL call: android.animation.ValueAnimator.setDuration(long):android.animation.ValueAnimator A[MD:(long):android.animation.ValueAnimator (c)] (LINE:498)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0016|0x0016: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('show' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x001b  (LINE:501)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0018|0x0018: CONST  (r2 I:??[long, double]) = (75 ??[long, double]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x001d|0x001d: INVOKE  (r1 I:android.animation.ValueAnimator A[D('animatorAlpha' android.animation.ValueAnimator)]), (r2 I:long) type: VIRTUAL call: android.animation.ValueAnimator.setStartDelay(long):void A[MD:(long):void (c)] (LINE:500)\l0x0020: SGET  (r2 I:android.animation.TimeInterpolator) =  com.google.android.material.animation.AnimationUtils.LINEAR_INTERPOLATOR android.animation.TimeInterpolator  (LINE:502)\l0x0022: INVOKE  (r2 I:android.animation.TimeInterpolator) = (r5 I:boolean A[D('show' boolean)]), (r2 I:android.animation.TimeInterpolator) type: STATIC call: com.google.android.material.internal.ReversableAnimatedValueInterpolator.of(boolean, android.animation.TimeInterpolator):android.animation.TimeInterpolator A[MD:(boolean, android.animation.TimeInterpolator):android.animation.TimeInterpolator (m)] (LINE:503)\l0x0026: INVOKE  \l  (r1 I:android.animation.ValueAnimator A[D('animatorAlpha' android.animation.ValueAnimator)])\l  (r2 I:android.animation.TimeInterpolator)\l type: VIRTUAL call: android.animation.ValueAnimator.setInterpolator(android.animation.TimeInterpolator):void A[MD:(android.animation.TimeInterpolator):void (c)] (LINE:502)\l0x0029: NEW_ARRAY  (r0 I:android.view.View[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: android.view.View[]  (LINE:504)\l0x002b: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002c: IGET  (r3 I:android.view.View) = (r4 I:com.google.android.material.search.SearchViewAnimationHelper) com.google.android.material.search.SearchViewAnimationHelper.divider android.view.View \l0x002e: APUT  (r0 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) \l0x0030: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0031: IGET  (r3 I:com.google.android.material.internal.TouchObserverFrameLayout) = (r4 I:com.google.android.material.search.SearchViewAnimationHelper) com.google.android.material.search.SearchViewAnimationHelper.contentContainer com.google.android.material.internal.TouchObserverFrameLayout \l0x0033: APUT  (r0 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) \l0x0035: INVOKE  (r0 I:com.google.android.material.internal.MultiViewUpdateListener) = (r0 I:android.view.View[]) type: STATIC call: com.google.android.material.internal.MultiViewUpdateListener.alphaListener(android.view.View[]):com.google.android.material.internal.MultiViewUpdateListener A[MD:(android.view.View[]):com.google.android.material.internal.MultiViewUpdateListener VARARG (m)] (LINE:505)\l0x0039: INVOKE  \l  (r1 I:android.animation.ValueAnimator A[D('animatorAlpha' android.animation.ValueAnimator)])\l  (r0 I:android.animation.ValueAnimator$AnimatorUpdateListener)\l type: VIRTUAL call: android.animation.ValueAnimator.addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener):void A[MD:(android.animation.ValueAnimator$AnimatorUpdateListener):void (c)] (LINE:504)\l}"];
Node_23 [shape=record,label="{23\:\ 0x003c|RETURN\l|0x003c: RETURN  (r1 I:android.animation.Animator A[D('animatorAlpha' android.animation.ValueAnimator)])  (LINE:506)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x001b|0x001b: CONST  (r2 I:??[long, double]) = (0 ??[long, double]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0010|0x0010: CONST  (r2 I:??[long, double]) = (83 ??[long, double]) \l}"];
MethodNode[shape=record,label="{private android.animation.Animator com.google.android.material.search.SearchViewAnimationHelper.getContentAlphaAnimator((r4 'this' I:com.google.android.material.search.SearchViewAnimationHelper A[IMMUTABLE_TYPE, THIS]), (r5 I:boolean A[D('show' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001b \-\> B:22:0x001d, CROSS_EDGE: B:17:0x0010 \-\> B:18:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x0045: r1 'animatorAlpha' Landroid\/animation\/ValueAnimator;\l  \-1 \-0x0045: r5 'show' Z\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_22;
Node_17 -> Node_18;
}

