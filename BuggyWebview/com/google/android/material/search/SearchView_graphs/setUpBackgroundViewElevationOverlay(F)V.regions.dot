digraph "CFG forcom.google.android.material.search.SearchView.setUpBackgroundViewElevationOverlay(F)V" {
subgraph cluster_Region_1227141168 {
label = "R(2:1|(2:(1:8)|(1:5)))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0000|com.google.android.material.elevation.ElevationOverlayProvider com.google.android.material.elevation.ElevationOverlayProvider r0 = r2.elevationOverlayProvider\l}"];
subgraph cluster_Region_1539469350 {
label = "R(2:(1:8)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_930506415 {
label = "IF [B:25:0x0002, B:27:0x0006] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0002|if (r0 == null) goto L9\l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|ADDED_TO_REGION\l|if (r2.backgroundView == null) goto L8\l}"];
subgraph cluster_Region_412224378 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_1418075473 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0009|int int r0 = r0.compositeOverlayWithThemeSurfaceColorIfNeeded(r3)\lr2.backgroundView.setBackgroundColor(r0)\l}"];
}
}
}
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0004}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0013}"];
Node_23 [shape=record,color=red,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0014|RETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.search.SearchView.setUpBackgroundViewElevationOverlay((r2v0 'this' com.google.android.material.search.SearchView A[IMMUTABLE_TYPE, THIS]), (r3v0 'elevation' float A[D('elevation' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0014 \-\> B:23:?, CROSS_EDGE: B:25:0x0002 \-\> B:31:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_22;Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_27 -> Node_29[style=dashed];
Node_27 -> Node_32;
Node_32 -> Node_23;
Node_29 -> Node_30;
Node_22 -> Node_24;
Node_26 -> Node_27;
Node_30 -> Node_23;
Node_31 -> Node_23;
}

