digraph "CFG forcom.google.android.material.search.SearchView.updateSoftInputMode()V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.Window) = (r2 I:com.google.android.material.search.SearchView) type: DIRECT call: com.google.android.material.search.SearchView.getActivityWindow():android.view.Window A[MD:():android.view.Window (m)] (LINE:678)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('window' android.view.Window)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:?  (LINE:679)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: INVOKE  (r1 I:android.view.WindowManager$LayoutParams) = (r0 I:android.view.Window A[D('window' android.view.Window)]) type: VIRTUAL call: android.view.Window.getAttributes():android.view.WindowManager$LayoutParams A[MD:():android.view.WindowManager$LayoutParams (c)] (LINE:680)\l0x000a: IGET  (r1 I:int) = (r1 I:android.view.WindowManager$LayoutParams) android.view.WindowManager.LayoutParams.softInputMode int \l0x000c: IPUT  (r1 I:int), (r2 I:com.google.android.material.search.SearchView) com.google.android.material.search.SearchView.softInputMode int \l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|RETURN\lORIG_RETURN\l|0x000e: RETURN    (LINE:682)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|0x000e: RETURN   A[SYNTHETIC] (LINE:682)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.search.SearchView.updateSoftInputMode((r2 'this' I:com.google.android.material.search.SearchView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0004 \-\> B:19:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x000e: r0 'window' Landroid\/view\/Window;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_15;
Node_20 -> Node_15;
}

