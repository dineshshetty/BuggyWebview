digraph "CFG forcom.google.android.material.search.SearchView.updateChildImportantForAccessibility(Landroid\/view\/ViewGroup;Z)V" {
Node_60 [shape=record,label="{60\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_62 [shape=record,label="{62\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:855)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0001|LOOP_START\lLOOP:0: B:63:0x0001\-\>B:81:0x0054\l|0x0001: INVOKE  (r1 I:int) = (r5 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.getChildCount():int A[MD:():int (c)]\l}"];
Node_64 [shape=record,label="{64\:\ 0x0005|0x0005: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:83:0x0057 \l}"];
Node_65 [shape=record,label="{65\:\ 0x0007|0x0007: INVOKE  (r1 I:android.view.View) = (r5 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup)]), (r0 I:int A[D('i' int)]) type: VIRTUAL call: android.view.ViewGroup.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:856)\l}"];
Node_66 [shape=record,label="{66\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('child' android.view.View)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x000e  (LINE:857)\l}"];
Node_68 [shape=record,label="{68\:\ 0x000e|0x000e: IGET  (r2 I:com.google.android.material.internal.ClippableRoundedCornerLayout) = (r4 I:com.google.android.material.search.SearchView) com.google.android.material.search.SearchView.rootView com.google.android.material.internal.ClippableRoundedCornerLayout  (LINE:861)\l0x0010: INVOKE  (r2 I:int) = (r2 I:com.google.android.material.internal.ClippableRoundedCornerLayout) type: VIRTUAL call: com.google.android.material.internal.ClippableRoundedCornerLayout.getId():int A[MD:():int (s)]\l0x0014: INVOKE  (r2 I:android.view.View) = (r1 I:android.view.View A[D('child' android.view.View)]), (r2 I:int) type: VIRTUAL call: android.view.View.findViewById(int):android.view.View A[MD:\<T extends android.view.View\>:(int):T extends android.view.View (c)]\l}"];
Node_69 [shape=record,label="{69\:\ 0x0018|0x0018: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x0021 \l}"];
Node_70 [shape=record,label="{70\:\ 0x001a|0x001a: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('child' android.view.View)])  (LINE:863)\l0x001b: CHECK_CAST (r2 I:android.view.ViewGroup) = (android.view.ViewGroup) (r2 I:??[OBJECT, ARRAY]) \l0x001d: INVOKE  \l  (r4 I:com.google.android.material.search.SearchView)\l  (r2 I:android.view.ViewGroup)\l  (r6 I:boolean A[D('isSearchViewModal' boolean)])\l type: DIRECT call: com.google.android.material.search.SearchView.updateChildImportantForAccessibility(android.view.ViewGroup, boolean):void A[MD:(android.view.ViewGroup, boolean):void (m)]\l}"];
Node_85 [shape=record,label="{85\:\ 0x0054|SYNTHETIC\l}"];
Node_81 [shape=record,label="{81\:\ 0x0054|LOOP_END\lLOOP:0: B:63:0x0001\-\>B:81:0x0054\l|0x0054: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:855)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0021|0x0021: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isSearchViewModal' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:77:0x003d  (LINE:867)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0023|0x0023: IGET  (r2 I:java.util.Map\<android.view.View, java.lang.Integer\>) = (r4 I:com.google.android.material.search.SearchView) com.google.android.material.search.SearchView.childImportantForAccessibilityMap java.util.Map  (LINE:868)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0025|0x0025: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:86:0x0054 \l}"];
Node_74 [shape=record,label="{74\:\ 0x0027|0x0027: INVOKE  (r2 I:boolean) = (r2 I:java.util.Map), (r1 I:java.lang.Object A[D('child' android.view.View)]) type: INTERFACE call: java.util.Map.containsKey(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:869)\l}"];
Node_75 [shape=record,label="{75\:\ 0x002b|0x002b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x0054 \l}"];
Node_76 [shape=record,label="{76\:\ 0x002d|0x002d: IGET  (r2 I:java.util.Map\<android.view.View, java.lang.Integer\>) = (r4 I:com.google.android.material.search.SearchView) com.google.android.material.search.SearchView.childImportantForAccessibilityMap java.util.Map  (LINE:871)\l0x002f: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.Map), (r1 I:java.lang.Object A[D('child' android.view.View)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:872)\l0x0033: CHECK_CAST (r2 I:java.lang.Integer) = (java.lang.Integer) (r2 I:??[OBJECT, ARRAY]) \l0x0035: INVOKE  (r2 I:int) = (r2 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x0039: INVOKE  (r1 I:android.view.View A[D('child' android.view.View)]), (r2 I:int) type: STATIC call: androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View, int):void A[MD:(android.view.View, int):void (m)] (LINE:871)\l}"];
Node_88 [shape=record,label="{88\:\ 0x0054|SYNTHETIC\l}"];
Node_87 [shape=record,label="{87\:\ 0x0054|SYNTHETIC\l}"];
Node_86 [shape=record,label="{86\:\ 0x0054|SYNTHETIC\l}"];
Node_77 [shape=record,label="{77\:\ 0x003d|0x003d: SGET  (r2 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:876)\l0x003f: CONST  (r3 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_78 [shape=record,label="{78\:\ 0x0041|0x0041: IF  (r2 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:80:0x0050 \l}"];
Node_79 [shape=record,label="{79\:\ 0x0043|0x0043: IGET  (r2 I:java.util.Map\<android.view.View, java.lang.Integer\>) = (r4 I:com.google.android.material.search.SearchView) com.google.android.material.search.SearchView.childImportantForAccessibilityMap java.util.Map  (LINE:877)\l0x0045: INVOKE  (r3 I:int) = (r1 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getImportantForAccessibility():int A[MD:():int (c)]\l0x0049: INVOKE  (r3 I:java.lang.Integer) = (r3 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x004d: INVOKE  (r2 I:java.util.Map), (r1 I:java.lang.Object A[D('child' android.view.View)]), (r3 I:java.lang.Object) type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_80 [shape=record,label="{80\:\ 0x0050|0x0050: CONST  (r2 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:880)\l0x0051: INVOKE  (r1 I:android.view.View A[D('child' android.view.View)]), (r2 I:int) type: STATIC call: androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l}"];
Node_84 [shape=record,label="{84\:\ 0x0054|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x0054|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x0057|SYNTHETIC\l}"];
Node_82 [shape=record,label="{82\:\ 0x0057|RETURN\l|0x0057: RETURN    (LINE:884)\l}"];
Node_61 [shape=record,label="{61\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.search.SearchView.updateChildImportantForAccessibility((r4 'this' I:com.google.android.material.search.SearchView A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('isSearchViewModal' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:81:0x0054 \-\> B:63:0x0001, CROSS_EDGE: B:76:0x002d \-\> B:81:0x0054, CROSS_EDGE: B:75:0x002b \-\> B:81:0x0054, CROSS_EDGE: B:73:0x0025 \-\> B:81:0x0054, CROSS_EDGE: B:80:0x0050 \-\> B:81:0x0054, CROSS_EDGE: B:78:0x0041 \-\> B:80:0x0050, CROSS_EDGE: B:66:0x000b \-\> B:81:0x0054\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0054: r1 'child' Landroid\/view\/View;\l  0x0001\-0x0057: r0 'i' I\l  \-1 \-0x0057: r5 'parent' Landroid\/view\/ViewGroup;\l  \-1 \-0x0057: r6 'isSearchViewModal' Z\l}"];
MethodNode -> Node_60;Node_60 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_83;
Node_65 -> Node_66;
Node_66 -> Node_68;
Node_66 -> Node_89[style=dashed];
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_71;
Node_70 -> Node_85;
Node_85 -> Node_81;
Node_81 -> Node_63;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_77;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_86;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_87;
Node_76 -> Node_88;
Node_88 -> Node_81;
Node_87 -> Node_81;
Node_86 -> Node_81;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_80;
Node_79 -> Node_80;
Node_80 -> Node_84;
Node_84 -> Node_81;
Node_89 -> Node_81;
Node_83 -> Node_82;
Node_82 -> Node_61;
}

