digraph "CFG forcom.google.android.material.search.SearchView.updateChildImportantForAccessibility(Landroid\/view\/ViewGroup;Z)V" {
Node_60 [shape=record,label="{60\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_62 [shape=record,label="{62\:\ 0x0000|r0 = 0\l}"];
Node_63 [shape=record,label="{63\:\ 0x0001|LOOP_START\lLOOP:0: B:63:0x0001\-\>B:81:0x0054\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:62:0x0000, B:81:0x0054] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_64 [shape=record,label="{64\:\ 0x0005|if (r0 \>= r5.getChildCount()) goto L26\l}"];
Node_65 [shape=record,label="{65\:\ 0x0007|android.view.View r1 = r5.getChildAt(r0)\l}"];
Node_66 [shape=record,label="{66\:\ 0x000b|if (r1 != r4) goto L6\l}"];
Node_68 [shape=record,label="{68\:\ 0x000e}"];
Node_69 [shape=record,label="{69\:\ 0x0018|if (r1.findViewById(r4.rootView.getId()) == null) goto L11\l}"];
Node_70 [shape=record,label="{70\:\ 0x001a|updateChildImportantForAccessibility((android.view.ViewGroup) r1, r6)\l}"];
Node_85 [shape=record,label="{85\:\ 0x0054|SYNTHETIC\l}"];
Node_81 [shape=record,label="{81\:\ 0x0054|LOOP_END\lLOOP:0: B:63:0x0001\-\>B:81:0x0054\l|int r0 = r0 + 1\l}"];
Node_71 [shape=record,label="{71\:\ 0x0021|if (r6 != false) goto L20\l}"];
Node_72 [shape=record,label="{72\:\ 0x0023|java.util.Map\<android.view.View, java.lang.Integer\> r2 = r4.childImportantForAccessibilityMap\l}"];
Node_73 [shape=record,label="{73\:\ 0x0025|if (r2 == null) goto L19\l}"];
Node_74 [shape=record,label="{74\:\ 0x0027}"];
Node_75 [shape=record,label="{75\:\ 0x002b|if (r2.containsKey(r1) == false) goto L18\l}"];
Node_76 [shape=record,label="{76\:\ 0x002d|androidx.core.view.ViewCompat.setImportantForAccessibility(r1, r4.childImportantForAccessibilityMap.get(r1).intValue())\l}"];
Node_88 [shape=record,label="{88\:\ 0x0054|SYNTHETIC\l}"];
Node_87 [shape=record,label="{87\:\ 0x0054|SYNTHETIC\l}"];
Node_86 [shape=record,label="{86\:\ 0x0054|SYNTHETIC\l}"];
Node_77 [shape=record,label="{77\:\ 0x003d}"];
Node_78 [shape=record,label="{78\:\ 0x0041|if (android.os.Build.VERSION.SDK_INT \< 16) goto L23\l}"];
Node_79 [shape=record,label="{79\:\ 0x0043|r4.childImportantForAccessibilityMap.put(r1, java.lang.Integer.valueOf(r1.getImportantForAccessibility()))\l}"];
Node_80 [shape=record,label="{80\:\ 0x0050|androidx.core.view.ViewCompat.setImportantForAccessibility(r1, 4)\l}"];
Node_84 [shape=record,label="{84\:\ 0x0054|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x0054|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x0057|SYNTHETIC\l}"];
Node_82 [shape=record,label="{82\:\ 0x0057|RETURN\l|return\l}"];
Node_61 [shape=record,label="{61\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.search.SearchView.updateChildImportantForAccessibility((r4v0 'this' com.google.android.material.search.SearchView A[IMMUTABLE_TYPE, THIS]), (r5v0 'parent' android.view.ViewGroup A[D('parent' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'isSearchViewModal' boolean A[D('isSearchViewModal' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:81:0x0054 \-\> B:63:0x0001, CROSS_EDGE: B:76:0x002d \-\> B:81:0x0054, CROSS_EDGE: B:75:0x002b \-\> B:81:0x0054, CROSS_EDGE: B:73:0x0025 \-\> B:81:0x0054, CROSS_EDGE: B:80:0x0050 \-\> B:81:0x0054, CROSS_EDGE: B:78:0x0041 \-\> B:80:0x0050, CROSS_EDGE: B:66:0x000b \-\> B:81:0x0054\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_60;Node_60 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_83;
Node_65 -> Node_66;
Node_66 -> Node_68;
Node_66 -> Node_89[style=dashed];
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_71;
Node_70 -> Node_85;
Node_85 -> Node_81;
Node_81 -> Node_63;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_77;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_86;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_87;
Node_76 -> Node_88;
Node_88 -> Node_81;
Node_87 -> Node_81;
Node_86 -> Node_81;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_80;
Node_79 -> Node_80;
Node_80 -> Node_84;
Node_84 -> Node_81;
Node_89 -> Node_81;
Node_83 -> Node_82;
Node_82 -> Node_61;
}

