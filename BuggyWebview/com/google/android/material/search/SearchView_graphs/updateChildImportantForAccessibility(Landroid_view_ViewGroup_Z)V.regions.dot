digraph "CFG forcom.google.android.material.search.SearchView.updateChildImportantForAccessibility(Landroid\/view\/ViewGroup;Z)V" {
subgraph cluster_Region_2053729343 {
label = "R(2:1|(3:4|(1:(1:8)(1:(2:12|(1:16))(2:(1:22)|23)))(0)|10))";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x0000|int r0 = 0\l}"];
subgraph cluster_LoopRegion_497217846 {
label = "LOOP:0: (3:4|(1:(1:8)(1:(2:12|(1:16))(2:(1:22)|23)))(0)|10)";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x0005|if (r0 \< r5.getChildCount()) goto L4\l}"];
subgraph cluster_Region_1677778995 {
label = "R(3:4|(1:(1:8)(1:(2:12|(1:16))(2:(1:22)|23)))(0)|10)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x0007|android.view.View android.view.View r1 = r5.getChildAt(r0)\l}"];
subgraph cluster_IfRegion_1713569985 {
label = "IF [B:66:0x000b] THEN: R(1:(1:8)(1:(2:12|(1:16))(2:(1:22)|23))) ELSE: R(0)";
node [shape=record,color=blue];
Node_66 [shape=record,label="{66\:\ 0x000b|if (r1 != r4) goto L6\l}"];
subgraph cluster_Region_702911985 {
label = "R(1:(1:8)(1:(2:12|(1:16))(2:(1:22)|23)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1469743278 {
label = "IF [B:69:0x0018] THEN: R(1:8) ELSE: R(1:(2:12|(1:16))(2:(1:22)|23))";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x0018|if (r1.findViewById(r4.rootView.getId()) != null) goto L8\l}"];
subgraph cluster_Region_1564205098 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x001a|updateChildImportantForAccessibility((android.view.ViewGroup) r1, r6)\l}"];
}
subgraph cluster_Region_1745480974 {
label = "R(1:(2:12|(1:16))(2:(1:22)|23)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1755401399 {
label = "IF [B:71:0x0021] THEN: R(2:12|(1:16)) ELSE: R(2:(1:22)|23) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x0021|if (r6 == false) goto L12\l}"];
subgraph cluster_Region_857417763 {
label = "R(2:12|(1:16))";
node [shape=record,color=blue];
Node_72 [shape=record,label="{72\:\ 0x0023|java.util.Map\<android.view.View, java.lang.Integer\> java.util.Map\<android.view.View, java.lang.Integer\> r2 = r4.childImportantForAccessibilityMap\l}"];
subgraph cluster_IfRegion_1054442182 {
label = "IF [B:73:0x0025, B:75:0x002b] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x0025|if (r2 != null) goto L14\l}"];
Node_75 [shape=record,label="{75\:\ 0x002b|ADDED_TO_REGION\l|if (r2.containsKey(r1) != false) goto L16\l}"];
subgraph cluster_Region_1073916116 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x002d|androidx.core.view.ViewCompat.setImportantForAccessibility(r1, r4.childImportantForAccessibilityMap.get(r1).intValue())\l}"];
}
}
}
subgraph cluster_Region_1093033331 {
label = "R(2:(1:22)|23)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1840725672 {
label = "IF [B:78:0x0041] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x0041|if (android.os.Build.VERSION.SDK_INT \>= 16) goto L22\l}"];
subgraph cluster_Region_1126096778 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x0043|r4.childImportantForAccessibilityMap.put(r1, java.lang.Integer.valueOf(r1.getImportantForAccessibility()))\l}"];
}
}
Node_80 [shape=record,label="{80\:\ 0x0050|androidx.core.view.ViewCompat.setImportantForAccessibility(r1, 4)\l}"];
}
}
}
}
}
subgraph cluster_Region_1752720626 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_81 [shape=record,label="{81\:\ 0x0054|LOOP_END\lLOOP:0: B:63:0x0001\-\>B:81:0x0054\l|r0++\l}"];
}
}
}
Node_60 [shape=record,color=red,label="{60\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0001|LOOP_START\lLOOP:0: B:63:0x0001\-\>B:81:0x0054\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:62:0x0000, B:81:0x0054] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x000e}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x0054|SYNTHETIC\l}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x0027}"];
Node_88 [shape=record,color=red,label="{88\:\ 0x0054|SYNTHETIC\l}"];
Node_87 [shape=record,color=red,label="{87\:\ 0x0054|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_86 [shape=record,color=red,label="{86\:\ 0x0054|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_77 [shape=record,color=red,label="{77\:\ 0x003d}"];
Node_84 [shape=record,color=red,label="{84\:\ 0x0054|SYNTHETIC\l}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x0054|SYNTHETIC\l}"];
Node_83 [shape=record,color=red,label="{83\:\ 0x0057|SYNTHETIC\l}"];
Node_82 [shape=record,color=red,label="{82\:\ 0x0057}"];
Node_61 [shape=record,color=red,label="{61\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.search.SearchView.updateChildImportantForAccessibility((r4v0 'this' com.google.android.material.search.SearchView A[IMMUTABLE_TYPE, THIS]), (r5v0 'parent' android.view.ViewGroup A[D('parent' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'isSearchViewModal' boolean A[D('isSearchViewModal' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:81:0x0054 \-\> B:63:0x0001, CROSS_EDGE: B:76:0x002d \-\> B:81:0x0054, CROSS_EDGE: B:75:0x002b \-\> B:81:0x0054, CROSS_EDGE: B:73:0x0025 \-\> B:81:0x0054, CROSS_EDGE: B:80:0x0050 \-\> B:81:0x0054, CROSS_EDGE: B:78:0x0041 \-\> B:80:0x0050, CROSS_EDGE: B:66:0x000b \-\> B:81:0x0054\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_60;Node_62 -> Node_63;
Node_64 -> Node_65;
Node_64 -> Node_83[style=dashed];
Node_65 -> Node_66;
Node_66 -> Node_68;
Node_66 -> Node_89[style=dashed];
Node_69 -> Node_70;
Node_69 -> Node_71[style=dashed];
Node_70 -> Node_85;
Node_71 -> Node_72;
Node_71 -> Node_77[style=dashed];
Node_72 -> Node_73;
Node_73 -> Node_74;
Node_73 -> Node_86[style=dashed];
Node_75 -> Node_76;
Node_75 -> Node_87[style=dashed];
Node_76 -> Node_88;
Node_78 -> Node_79;
Node_78 -> Node_80[style=dashed];
Node_79 -> Node_80;
Node_80 -> Node_84;
Node_81 -> Node_63;
Node_60 -> Node_62;
Node_63 -> Node_64;
Node_68 -> Node_69;
Node_85 -> Node_81;
Node_74 -> Node_75;
Node_88 -> Node_81;
Node_87 -> Node_81;
Node_86 -> Node_81;
Node_77 -> Node_78;
Node_84 -> Node_81;
Node_89 -> Node_81;
Node_83 -> Node_82;
Node_82 -> Node_61;
}

