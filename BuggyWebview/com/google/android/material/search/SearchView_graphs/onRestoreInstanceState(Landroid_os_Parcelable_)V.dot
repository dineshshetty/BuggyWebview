digraph "CFG forcom.google.android.material.search.SearchView.onRestoreInstanceState(Landroid\/os\/Parcelable;)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000}"];
Node_27 [shape=record,label="{27\:\ 0x0002|if ((r3 instanceof com.google.android.material.search.SearchView.SavedState) != false) goto L6\l}"];
Node_28 [shape=record,label="{28\:\ 0x0004|super.onRestoreInstanceState(r3)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0007|RETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0008|com.google.android.material.search.SearchView$SavedState r0 = (com.google.android.material.search.SearchView.SavedState) r3\lsuper.onRestoreInstanceState(r0.getSuperState())\lsetText(r0.text)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0019|if (r0.visibility != 0) goto L11\l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|r1 = true\l}"];
Node_34 [shape=record,label="{34\:\ 0x001e|PHI: r1 \l  PHI: (r1v4 boolean) = (r1v3 boolean), (r1v5 boolean) binds: [B:33:0x001d, B:32:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|setVisible(r1)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0021|RETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ 0x001d|r1 = false\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.search.SearchView.onRestoreInstanceState((r2v0 'this' com.google.android.material.search.SearchView A[IMMUTABLE_TYPE, THIS]), (r3v0 'state' android.os.Parcelable A[D('state' android.os.Parcelable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:35:0x0021 \-\> B:25:?, CROSS_EDGE: B:33:0x001d \-\> B:34:0x001e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onRestoreInstanceState(android.os.Parcelable):void\}]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_25;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_25;
Node_33 -> Node_34;
}

