digraph "CFG forcom.google.android.material.search.SearchView.setModalForAccessibility(Z)V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.View) = (r3 I:com.google.android.material.search.SearchView) type: VIRTUAL call: com.google.android.material.search.SearchView.getRootView():android.view.View A[MD:():android.view.View (s)] (LINE:829)\l0x0004: CHECK_CAST (r0 I:android.view.ViewGroup) = (android.view.ViewGroup) (r0 I:??[OBJECT, ARRAY]) \l0x0006: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:831)\l0x0008: CONST  (r2 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|0x000a: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:28:0x0019 \l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|0x000c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isSearchViewModal' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0019 \l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|0x000e: NEW_INSTANCE  (r1 I:java.util.HashMap) =  java.util.HashMap  (LINE:832)\l0x0010: INVOKE  (r2 I:int) = (r0 I:android.view.ViewGroup A[D('rootView' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.getChildCount():int A[MD:():int (c)]\l0x0014: INVOKE  (r1 I:java.util.HashMap), (r2 I:int) type: DIRECT call: java.util.HashMap.\<init\>(int):void A[MD:(int):void (c)]\l0x0017: IPUT  (r1 I:java.util.Map\<android.view.View, java.lang.Integer\>), (r3 I:com.google.android.material.search.SearchView) com.google.android.material.search.SearchView.childImportantForAccessibilityMap java.util.Map \l}"];
Node_28 [shape=record,label="{28\:\ 0x0019|0x0019: INVOKE  \l  (r3 I:com.google.android.material.search.SearchView)\l  (r0 I:android.view.ViewGroup A[D('rootView' android.view.ViewGroup)])\l  (r4 I:boolean A[D('isSearchViewModal' boolean)])\l type: DIRECT call: com.google.android.material.search.SearchView.updateChildImportantForAccessibility(android.view.ViewGroup, boolean):void A[MD:(android.view.ViewGroup, boolean):void (m)] (LINE:834)\l}"];
Node_29 [shape=record,label="{29\:\ 0x001c|0x001c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isSearchViewModal' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:?  (LINE:836)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001e|0x001e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:838)\l0x001f: IPUT  (r1 I:java.util.Map\<android.view.View, java.lang.Integer\>), (r3 I:com.google.android.material.search.SearchView) com.google.android.material.search.SearchView.childImportantForAccessibilityMap java.util.Map \l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|RETURN\lORIG_RETURN\l|0x0021: RETURN    (LINE:840)\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|0x0021: RETURN   A[SYNTHETIC] (LINE:840)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.search.SearchView.setModalForAccessibility((r3 'this' I:com.google.android.material.search.SearchView A[IMMUTABLE_TYPE, THIS]), (r4 I:boolean A[D('isSearchViewModal' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x001c \-\> B:31:0x0021, CROSS_EDGE: B:26:0x000c \-\> B:28:0x0019, CROSS_EDGE: B:25:0x000a \-\> B:28:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0021: r0 'rootView' Landroid\/view\/ViewGroup;\l  \-1 \-0x0021: r4 'isSearchViewModal' Z\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_23;
Node_32 -> Node_23;
}

