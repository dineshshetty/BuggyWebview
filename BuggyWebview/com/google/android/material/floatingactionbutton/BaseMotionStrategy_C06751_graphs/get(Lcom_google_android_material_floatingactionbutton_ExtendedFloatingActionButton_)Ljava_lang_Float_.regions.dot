digraph "CFG forcom.google.android.material.floatingactionbutton.BaseMotionStrategy.1.get(Lcom\/google\/android\/material\/floatingactionbutton\/ExtendedFloatingActionButton;)Ljava\/lang\/Float;" {
subgraph cluster_Region_253456378 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|int int r0 = android.graphics.Color.alpha(r6.originalTextCsl.getColorForState(r6.getDrawableState(), com.google.android.material.floatingactionbutton.BaseMotionStrategy.this.fab.originalTextCsl.getDefaultColor()))\lfloat float r1 = android.graphics.Color.alpha(r6.getCurrentTextColor()) \/ 255.0f\l}"];
Node_3 [shape=record,label="{3\:\ 0x0034|RETURN\l|return java.lang.Float.valueOf(com.google.android.material.animation.AnimationUtils.lerp(0.0f, 1.0f, r1 \/ r0))\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.Float com.google.android.material.floatingactionbutton.BaseMotionStrategy.1.get((r5v0 'this' com.google.android.material.floatingactionbutton.BaseMotionStrategy$1 A[IMMUTABLE_TYPE, THIS]), (r6v0 'object' com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton A[D('object' com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lRENAME_REASON:avoid collision after fix types in other method\lREPLACED_BY: com.google.android.material.floatingactionbutton.BaseMotionStrategy.1.get(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton):java.lang.Float\lBRIDGED_BY: com.google.android.material.floatingactionbutton.BaseMotionStrategy.1.get(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton):java.lang.Float\lJadxCommentsAttr\{\l DEBUG: \l \-\> Method merged with bridge method\}\lMETHOD_OVERRIDE: [ClspMth\{android.util.Property.get(T):V\}]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_1;
Node_0 -> Node_2;
}

