digraph "CFG forcom.google.android.material.floatingactionbutton.FloatingActionButtonImpl.calculateImageMatrixFromScale(FLandroid\/graphics\/Matrix;)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|r8.reset()\landroid.graphics.drawable.Drawable r0 = r6.view.getDrawable()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0009|if (r0 == null) goto L9\l}"];
Node_14 [shape=record,label="{14\:\ 0x000b}"];
Node_15 [shape=record,label="{15\:\ 0x000d|if (r6.maxImageSize == 0) goto L8\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|android.graphics.RectF r1 = r6.tmpRectF1\landroid.graphics.RectF r2 = r6.tmpRectF2\lr1.set(0.0f, 0.0f, (float) r0.getIntrinsicWidth(), (float) r0.getIntrinsicHeight())\lint r3 = r6.maxImageSize\lr2.set(0.0f, 0.0f, (float) r3, (float) r3)\lr8.setRectToRect(r1, r2, android.graphics.Matrix.ScaleToFit.CENTER)\lint r3 = r6.maxImageSize\lr8.postScale(r7, r7, ((float) r3) \/ 2.0f, ((float) r3) \/ 2.0f)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|RETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.floatingactionbutton.FloatingActionButtonImpl.calculateImageMatrixFromScale((r6v0 'this' com.google.android.material.floatingactionbutton.FloatingActionButtonImpl A[IMMUTABLE_TYPE, THIS]), (r7v0 'scale' float A[D('scale' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'matrix' android.graphics.Matrix A[D('matrix' android.graphics.Matrix), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000d \-\> B:17:0x0038, CROSS_EDGE: B:13:0x0009 \-\> B:17:0x0038\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

