digraph "CFG forcom.google.android.material.floatingactionbutton.FloatingActionButtonImpl.5.evaluate(FLjava\/lang\/Float;Ljava\/lang\/Float;)Ljava\/lang\/Float;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|float r0 = r2.floatEvaluator.evaluate(r3, r4, r5).floatValue()\l}"];
Node_11 [shape=record,label="{11\:\ 0x000f|if ((r0 \> 0.1f ? 1 : (r0 == 0.1f ? 0 : \-1)) \>= 0) goto L7\l}"];
Node_12 [shape=record,label="{12\:\ 0x0011|r1 = 0.0f\l}"];
Node_14 [shape=record,label="{14\:\ 0x0014|PHI: r1 \l  PHI: (r1v3 float) = (r1v2 float), (r1v5 float) binds: [B:13:0x0013, B:12:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0018|RETURN\l|return java.lang.Float.valueOf(r1)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0013|r1 = r0\l}"];
MethodNode[shape=record,label="{public java.lang.Float com.google.android.material.floatingactionbutton.FloatingActionButtonImpl.5.evaluate((r2v0 'this' com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5 A[IMMUTABLE_TYPE, THIS]), (r3v0 'fraction' float A[D('fraction' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'startValue' java.lang.Float A[D('startValue' java.lang.Float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'endValue' java.lang.Float A[D('endValue' java.lang.Float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0013 \-\> B:14:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lREPLACED_BY: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl.5.evaluate(float, java.lang.Float, java.lang.Float):java.lang.Float\lBRIDGED_BY: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl.5.evaluate(float, java.lang.Float, java.lang.Float):java.lang.Float\lMETHOD_OVERRIDE: [ClspMth\{android.animation.TypeEvaluator.evaluate(float, T, T):T\}]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

