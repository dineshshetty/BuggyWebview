digraph "CFG forcom.google.android.material.card.MaterialCardViewHelper.updateInsetForeground(Landroid\/graphics\/drawable\/Drawable;)V" {
subgraph cluster_Region_541095451 {
label = "R(1:(1:5)(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_159829677 {
label = "IF [B:13:0x0004, B:15:0x000e] THEN: R(1:5) ELSE: R(1:8)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 23) goto L3\l}"];
Node_15 [shape=record,label="{15\:\ 0x000e|ADDED_TO_REGION\l|if ((r2.materialCardView.getForeground() instanceof android.graphics.drawable.InsetDrawable) != false) goto L5\l}"];
subgraph cluster_Region_374471139 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0010|((android.graphics.drawable.InsetDrawable) r2.materialCardView.getForeground()).setDrawable(r3)\l}"];
}
subgraph cluster_Region_275166179 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x001c|r2.materialCardView.setForeground(insetDrawable(r3))\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0006}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0025|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.card.MaterialCardViewHelper.updateInsetForeground((r2v0 'this' com.google.android.material.card.MaterialCardViewHelper A[IMMUTABLE_TYPE, THIS]), (r3v0 'insetForeground' android.graphics.drawable.Drawable A[D('insetForeground' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x001c \-\> B:18:0x0025, CROSS_EDGE: B:13:0x0004 \-\> B:17:0x001c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

