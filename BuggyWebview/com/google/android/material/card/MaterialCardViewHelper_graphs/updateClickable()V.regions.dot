digraph "CFG forcom.google.android.material.card.MaterialCardViewHelper.updateClickable()V" {
subgraph cluster_Region_669266437 {
label = "R(4:1|2|4|(1:(1:6)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0000|android.graphics.drawable.Drawable android.graphics.drawable.Drawable r0 = r2.fgDrawable\l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|android.graphics.drawable.Drawable r1 = r2.materialCardView.isClickable() ? getClickableForeground() : r2.foregroundContentDrawable\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|PHI: r1 \l  PHI: (r1v3 android.graphics.drawable.Drawable) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r2.fgDrawable = r1\l}"];
subgraph cluster_Region_1468933666 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1034890724 {
label = "IF [B:18:0x0014] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0014|if (r0 != r1) goto L6\l}"];
subgraph cluster_Region_1896183044 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0016|updateInsetForeground(r1)\l}"];
}
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000b}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0019|ORIG_RETURN\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0010}"];
MethodNode[shape=record,label="{public void com.google.android.material.card.MaterialCardViewHelper.updateClickable((r2v0 'this' com.google.android.material.card.MaterialCardViewHelper A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0014 \-\> B:20:0x0019, CROSS_EDGE: B:16:0x0010 \-\> B:17:0x0012\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_21[style=dashed];
Node_19 -> Node_20;
Node_11 -> Node_13;
Node_15 -> Node_17;
Node_20 -> Node_12;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

