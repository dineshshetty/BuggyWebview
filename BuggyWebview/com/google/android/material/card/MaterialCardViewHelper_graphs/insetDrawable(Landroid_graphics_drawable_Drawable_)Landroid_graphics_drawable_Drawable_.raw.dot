digraph "CFG forcom.google.android.material.card.MaterialCardViewHelper.insetDrawable(Landroid\/graphics\/drawable\/Drawable;)Landroid\/graphics\/drawable\/Drawable;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:575)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:576)\l0x0002: SGET  (r2 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:577)\l0x0004: CONST  (r3 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: IF  (r2 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:17:0x000a \l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isPreLollipop' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0015  (LINE:578)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|0x000d: IGET  (r3 I:com.google.android.material.card.MaterialCardView) = (r11 I:com.google.android.material.card.MaterialCardViewHelper) com.google.android.material.card.MaterialCardViewHelper.materialCardView com.google.android.material.card.MaterialCardView \l0x000f: INVOKE  (r3 I:boolean) = (r3 I:com.google.android.material.card.MaterialCardView) type: VIRTUAL call: com.google.android.material.card.MaterialCardView.getUseCompatPadding():boolean A[MD:():boolean (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|0x0013: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0029 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0029|0x0029: NEW_INSTANCE  (r10 I:com.google.android.material.card.MaterialCardViewHelper$1) =  com.google.android.material.card.MaterialCardViewHelper$1  (LINE:583)\l0x002b: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l0x002c: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY]) \l0x002d: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('originalDrawable' android.graphics.drawable.Drawable)]) \l0x002e: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('insetHorizontal' int)]) \l0x002f: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('insetVertical' int)]) \l0x0030: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('insetHorizontal' int)]) \l0x0031: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('insetVertical' int)]) \l0x0032: INVOKE  \l  (r3 I:com.google.android.material.card.MaterialCardViewHelper$1)\l  (r4 I:com.google.android.material.card.MaterialCardViewHelper)\l  (r5 I:android.graphics.drawable.Drawable)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:int)\l type: DIRECT call: com.google.android.material.card.MaterialCardViewHelper.1.\<init\>(com.google.android.material.card.MaterialCardViewHelper, android.graphics.drawable.Drawable, int, int, int, int):void A[MD:(com.google.android.material.card.MaterialCardViewHelper, android.graphics.drawable.Drawable, int, int, int, int):void (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0035|RETURN\l|0x0035: RETURN  (r10 I:android.graphics.drawable.Drawable) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|0x0015: INVOKE  (r3 I:float) = (r11 I:com.google.android.material.card.MaterialCardViewHelper) type: DIRECT call: com.google.android.material.card.MaterialCardViewHelper.calculateVerticalBackgroundPadding():float A[MD:():float (m)] (LINE:580)\l0x0019: CAST (r3 I:double) = (double) (r3 I:float) \l0x001a: INVOKE  (r3 I:double) = (r3 I:double) type: STATIC call: java.lang.Math.ceil(double):double A[MD:(double):double (c)]\l0x001e: CAST (r0 I:int A[D('insetVertical' int)]) = (int) (r3 I:double) \l0x001f: INVOKE  (r3 I:float) = (r11 I:com.google.android.material.card.MaterialCardViewHelper) type: DIRECT call: com.google.android.material.card.MaterialCardViewHelper.calculateHorizontalBackgroundPadding():float A[MD:():float (m)] (LINE:581)\l0x0023: CAST (r3 I:double) = (double) (r3 I:float) \l0x0024: INVOKE  (r3 I:double) = (r3 I:double) type: STATIC call: java.lang.Math.ceil(double):double A[MD:(double):double (c)]\l0x0028: CAST (r1 I:int A[D('insetHorizontal' int)]) = (int) (r3 I:double) \l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private android.graphics.drawable.Drawable com.google.android.material.card.MaterialCardViewHelper.insetDrawable((r11 'this' I:com.google.android.material.card.MaterialCardViewHelper A[IMMUTABLE_TYPE, THIS]), (r12 I:android.graphics.drawable.Drawable A[D('originalDrawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0013 \-\> B:22:0x0029, CROSS_EDGE: B:18:0x000b \-\> B:21:0x0015, CROSS_EDGE: B:17:0x000a \-\> B:18:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0035: r0 'insetVertical' I\l  0x0002\-0x0035: r1 'insetHorizontal' I\l  0x000b\-0x0035: r2 'isPreLollipop' Z\l  \-1 \-0x0035: r12 'originalDrawable' Landroid\/graphics\/drawable\/Drawable;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_22;
Node_17 -> Node_18;
}

