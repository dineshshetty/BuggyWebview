digraph "CFG forcom.google.android.material.card.MaterialCardViewHelper.updateContentPadding()V" {
subgraph cluster_Region_952323593 {
label = "R(2:2|8)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0005|boolean r0 = shouldAddCornerPaddingInsideCardBackground() \|\| shouldAddCornerPaddingOutsideCardBackground()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|PHI: r1 \l  PHI: (r1v1 float A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r1 = (int) ((r0 ? calculateActualCornerPadding() : 0.0f) \- getParentCardViewCalculatedCornerPadding())\lr7.materialCardView.setAncestorContentPadding(r7.userContentPadding.left + r1, r7.userContentPadding.top + r1, r7.userContentPadding.right + r1, r7.userContentPadding.bottom + r1)\l}"];
}
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0001}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0007}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000b|REMOVE\lADDED_TO_REGION\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000e}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0011|PHI: r0 \l  PHI: (r0v2 'includeCornerPadding' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0013}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0038}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0018}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0010}"];
MethodNode[shape=record,label="{public void com.google.android.material.card.MaterialCardViewHelper.updateContentPadding((r7v0 'this' com.google.android.material.card.MaterialCardViewHelper A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0018 \-\> B:26:0x0019, CROSS_EDGE: B:22:0x0010 \-\> B:23:0x0011, CROSS_EDGE: B:17:0x0005 \-\> B:22:0x0010\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_17 -> Node_18;
Node_17 -> Node_22;
Node_26 -> Node_27;
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_27 -> Node_15;
Node_25 -> Node_26;
Node_22 -> Node_23;
}

