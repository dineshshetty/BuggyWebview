digraph "CFG forcom.google.android.material.navigation.NavigationBarItemView.ActiveIndicatorTransform.calculateAlpha(FF)F" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000}"];
Node_15 [shape=record,label="{15\:\ 0x0003|if ((r6 \> 0.0f ? 1 : (r6 == 0.0f ? 0 : \-1)) != 0) goto L11\l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|r1 = 0.8f\l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|PHI: r1 \l  PHI: (r1v2 'startAlphaFraction' float) = (r1v1 'startAlphaFraction' float), (r1v3 'startAlphaFraction' float) binds: [B:17:0x0009, B:16:0x0005] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|if ((r6 \> 0.0f ? 1 : (r6 == 0.0f ? 0 : \-1)) != 0) goto L10\l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|r3 = 1.0f\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|PHI: r3 \l  PHI: (r3v2 'endAlphaFraction' float) = (r3v1 'endAlphaFraction' float), (r3v3 'endAlphaFraction' float) binds: [B:21:0x0013, B:20:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x001a|RETURN\l|return com.google.android.material.animation.AnimationUtils.lerp(0.0f, 1.0f, r1, r3, r5)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|r3 = 0.2f\l}"];
Node_17 [shape=record,label="{17\:\ 0x0009|r1 = 0.0f\l}"];
MethodNode[shape=record,label="{protected float com.google.android.material.navigation.NavigationBarItemView.ActiveIndicatorTransform.calculateAlpha((r4v0 'this' com.google.android.material.navigation.NavigationBarItemView$ActiveIndicatorTransform A[IMMUTABLE_TYPE, THIS]), (r5v0 'progress' float A[D('progress' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'targetValue' float A[D('targetValue' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0013 \-\> B:22:0x0016, CROSS_EDGE: B:17:0x0009 \-\> B:18:0x000a\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_22;
Node_17 -> Node_18;
}

