digraph "CFG forcom.google.android.material.navigation.NavigationBarMenuView.getOrCreateBadge(I)Lcom\/google\/android\/material\/badge\/BadgeDrawable;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|validateMenuItemId(r3)\lcom.google.android.material.badge.BadgeDrawable r0 = r2.badgeDrawables.get(r3)\l}"];
Node_12 [shape=record,label="{12\:\ 0x000b|if (r0 != null) goto L4\l}"];
Node_13 [shape=record,label="{13\:\ 0x000d|com.google.android.material.badge.BadgeDrawable r0 = com.google.android.material.badge.BadgeDrawable.create(getContext())\lr2.badgeDrawables.put(r3, r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x001a|PHI: r0 \l  PHI: (r0v3 'badgeDrawable' com.google.android.material.badge.BadgeDrawable) = (r0v2 'badgeDrawable' com.google.android.material.badge.BadgeDrawable), (r0v4 'badgeDrawable' com.google.android.material.badge.BadgeDrawable) binds: [B:12:0x000b, B:13:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.material.navigation.NavigationBarItemView r1 = findItemView(r3)\l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|if (r1 == null) goto L7\l}"];
Node_16 [shape=record,label="{16\:\ 0x0020|r1.setBadge(r0)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0023|RETURN\l|return r0\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public com.google.android.material.badge.BadgeDrawable com.google.android.material.navigation.NavigationBarMenuView.getOrCreateBadge((r2v0 'this' com.google.android.material.navigation.NavigationBarMenuView A[IMMUTABLE_TYPE, THIS]), (r3v0 'menuItemId' int A[D('menuItemId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x001e \-\> B:17:0x0023, CROSS_EDGE: B:12:0x000b \-\> B:14:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_10;
}

