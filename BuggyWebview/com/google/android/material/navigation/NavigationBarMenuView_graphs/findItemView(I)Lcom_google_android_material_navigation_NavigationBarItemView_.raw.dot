digraph "CFG forcom.google.android.material.navigation.NavigationBarMenuView.findItemView(I)Lcom\/google\/android\/material\/navigation\/NavigationBarItemView;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: INVOKE  (r5 I:com.google.android.material.navigation.NavigationBarMenuView), (r6 I:int A[D('menuItemId' int)]) type: DIRECT call: com.google.android.material.navigation.NavigationBarMenuView.validateMenuItemId(int):void A[MD:(int):void (m)] (LINE:906)\l0x0003: IGET  (r0 I:com.google.android.material.navigation.NavigationBarItemView[]) = (r5 I:com.google.android.material.navigation.NavigationBarMenuView) com.google.android.material.navigation.NavigationBarMenuView.buttons com.google.android.material.navigation.NavigationBarItemView[]  (LINE:907)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0017 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[])  (LINE:908)\l0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|LOOP_START\lLOOP:0: B:20:0x0009\-\>B:24:0x0014\l|0x0009: IF  (r2 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:28:0x0017 \l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|0x000b: AGET  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]) \l0x000d: INVOKE  (r4 I:int) = \l  (r3 I:com.google.android.material.navigation.NavigationBarItemView A[D('itemView' com.google.android.material.navigation.NavigationBarItemView)])\l type: VIRTUAL call: com.google.android.material.navigation.NavigationBarItemView.getId():int A[MD:():int (s)] (LINE:909)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('menuItemId' int)])  \-\> B:24:0x0014 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0014|LOOP_END\lLOOP:0: B:20:0x0009\-\>B:24:0x0014\l|0x0014: ARITH  (r2 I:int) = (r2 I:int) + (1 int)  (LINE:908)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0013|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0013|RETURN\l|0x0013: RETURN  \l  (r3 I:com.google.android.material.navigation.NavigationBarItemView A[D('itemView' com.google.android.material.navigation.NavigationBarItemView)])\l  (LINE:910)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x0017: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:914)\l0x0018: RETURN  (r0 I:com.google.android.material.navigation.NavigationBarItemView) A[SYNTHETIC]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|RETURN\lORIG_RETURN\l|0x0017: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:914)\l0x0018: RETURN  (r0 I:com.google.android.material.navigation.NavigationBarItemView) \l}"];
MethodNode[shape=record,label="{public com.google.android.material.navigation.NavigationBarItemView com.google.android.material.navigation.NavigationBarMenuView.findItemView((r5 'this' I:com.google.android.material.navigation.NavigationBarMenuView A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('menuItemId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x0014 \-\> B:20:0x0009, CROSS_EDGE: B:26:0x0018 \-\> B:16:?, CROSS_EDGE: B:18:0x0005 \-\> B:25:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x0014: r3 'itemView' Lcom\/google\/android\/material\/navigation\/NavigationBarItemView;\l  \-1 \-0x0018: r6 'menuItemId' I\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_21 -> Node_22;
Node_22 -> Node_24;
Node_22 -> Node_27[style=dashed];
Node_24 -> Node_20;
Node_27 -> Node_23;
Node_23 -> Node_16;
Node_28 -> Node_29;
Node_29 -> Node_16;
Node_25 -> Node_16;
}

