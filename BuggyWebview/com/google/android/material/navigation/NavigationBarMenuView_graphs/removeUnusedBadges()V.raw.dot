digraph "CFG forcom.google.android.material.navigation.NavigationBarMenuView.removeUnusedBadges()V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.util.HashSet) =  java.util.HashSet  (LINE:890)\l0x0002: INVOKE  (r0 I:java.util.HashSet) type: DIRECT call: java.util.HashSet.\<init\>():void A[MD:():void (c)]\l0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:892)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|LOOP_START\lLOOP:0: B:21:0x0006\-\>B:23:0x000e\l|0x0006: IGET  (r2 I:androidx.appcompat.view.menu.MenuBuilder) = (r4 I:com.google.android.material.navigation.NavigationBarMenuView) com.google.android.material.navigation.NavigationBarMenuView.menu androidx.appcompat.view.menu.MenuBuilder \l0x0008: INVOKE  (r2 I:int) = (r2 I:androidx.appcompat.view.menu.MenuBuilder) type: VIRTUAL call: androidx.appcompat.view.menu.MenuBuilder.size():int A[MD:():int (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:32:0x0022 \l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|LOOP_END\lLOOP:0: B:21:0x0006\-\>B:23:0x000e\l|0x000e: IGET  (r2 I:androidx.appcompat.view.menu.MenuBuilder) = (r4 I:com.google.android.material.navigation.NavigationBarMenuView) com.google.android.material.navigation.NavigationBarMenuView.menu androidx.appcompat.view.menu.MenuBuilder  (LINE:893)\l0x0010: INVOKE  (r2 I:android.view.MenuItem) = (r2 I:androidx.appcompat.view.menu.MenuBuilder), (r1 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.view.menu.MenuBuilder.getItem(int):android.view.MenuItem A[MD:(int):android.view.MenuItem (m)]\l0x0014: INVOKE  (r2 I:int) = (r2 I:android.view.MenuItem) type: INTERFACE call: android.view.MenuItem.getItemId():int A[MD:():int (c)]\l0x0018: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x001c: INVOKE  (r0 I:java.util.HashSet A[D('activeKeys' java.util.HashSet\<java.lang.Integer\>)]), (r2 I:java.lang.Object) type: VIRTUAL call: java.util.HashSet.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x001f: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:892)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0022|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0022|0x0022: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:896)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0023|LOOP_START\lLOOP:1: B:25:0x0023\-\>B:30:0x0040\l|0x0023: IGET  (r2 I:android.util.SparseArray\<com.google.android.material.badge.BadgeDrawable\>) = (r4 I:com.google.android.material.navigation.NavigationBarMenuView) com.google.android.material.navigation.NavigationBarMenuView.badgeDrawables android.util.SparseArray \l0x0025: INVOKE  (r2 I:int) = (r2 I:android.util.SparseArray) type: VIRTUAL call: android.util.SparseArray.size():int A[MD:():int (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0029|0x0029: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:33:0x0043 \l}"];
Node_27 [shape=record,label="{27\:\ 0x002b|0x002b: IGET  (r2 I:android.util.SparseArray\<com.google.android.material.badge.BadgeDrawable\>) = (r4 I:com.google.android.material.navigation.NavigationBarMenuView) com.google.android.material.navigation.NavigationBarMenuView.badgeDrawables android.util.SparseArray  (LINE:897)\l0x002d: INVOKE  (r2 I:int) = (r2 I:android.util.SparseArray), (r1 I:int A[D('i' int)]) type: VIRTUAL call: android.util.SparseArray.keyAt(int):int A[MD:(int):int (c)]\l0x0031: INVOKE  (r3 I:java.lang.Integer) = (r2 I:int A[D('key' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:898)\l0x0035: INVOKE  (r3 I:boolean) = (r0 I:java.util.HashSet A[D('activeKeys' java.util.HashSet\<java.lang.Integer\>)]), (r3 I:java.lang.Object) type: VIRTUAL call: java.util.HashSet.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0039|0x0039: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0040 \l}"];
Node_29 [shape=record,label="{29\:\ 0x003b|0x003b: IGET  (r3 I:android.util.SparseArray\<com.google.android.material.badge.BadgeDrawable\>) = (r4 I:com.google.android.material.navigation.NavigationBarMenuView) com.google.android.material.navigation.NavigationBarMenuView.badgeDrawables android.util.SparseArray  (LINE:899)\l0x003d: INVOKE  (r3 I:android.util.SparseArray), (r2 I:int A[D('key' int)]) type: VIRTUAL call: android.util.SparseArray.delete(int):void A[MD:(int):void (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0040|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0040|LOOP_END\lLOOP:1: B:25:0x0023\-\>B:30:0x0040\l|0x0040: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:896)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0040|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0043|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0043|RETURN\l|0x0043: RETURN    (LINE:902)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.navigation.NavigationBarMenuView.removeUnusedBadges((r4 'this' I:com.google.android.material.navigation.NavigationBarMenuView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x000e \-\> B:21:0x0006, BACK_EDGE: B:30:0x0040 \-\> B:25:0x0023, CROSS_EDGE: B:28:0x0039 \-\> B:30:0x0040\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0022: r1 'i' I\l  0x0031\-0x0040: r2 'key' I\l  0x0023\-0x0043: r1 'i' I\l  0x0005\-0x0043: r0 'activeKeys' Ljava\/util\/HashSet;, signature: Ljava\/util\/HashSet\<Ljava\/lang\/Integer;\>;\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_32;
Node_23 -> Node_21;
Node_32 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_33;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_35;
Node_29 -> Node_34;
Node_34 -> Node_30;
Node_30 -> Node_25;
Node_35 -> Node_30;
Node_33 -> Node_31;
Node_31 -> Node_19;
}

