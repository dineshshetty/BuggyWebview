digraph "CFG forcom.google.android.material.navigation.NavigationBarItemView.1.onLayoutChange(Landroid\/view\/View;IIIIIIII)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000}"];
Node_10 [shape=record,label="{10\:\ 0x000a|if (com.google.android.material.navigation.NavigationBarItemView.this.icon.getVisibility() != 0) goto L6\l}"];
Node_11 [shape=record,label="{11\:\ 0x000c|com.google.android.material.navigation.NavigationBarItemView r0 = com.google.android.material.navigation.NavigationBarItemView.this\lr0.tryUpdateBadgeBounds(r0.icon)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|RETURN\lORIG_RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.navigation.NavigationBarItemView.1.onLayoutChange((r2v0 'this' com.google.android.material.navigation.NavigationBarItemView$1 A[IMMUTABLE_TYPE, THIS]), (r3v0 'v' android.view.View A[D('v' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'left' int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'top' int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'right' int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'bottom' int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'oldLeft' int A[D('oldLeft' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'oldTop' int A[D('oldTop' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'oldRight' int A[D('oldRight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'oldBottom' int A[D('oldBottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x000a \-\> B:12:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.OnLayoutChangeListener.onLayoutChange(android.view.View, int, int, int, int, int, int, int, int):void\}]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

