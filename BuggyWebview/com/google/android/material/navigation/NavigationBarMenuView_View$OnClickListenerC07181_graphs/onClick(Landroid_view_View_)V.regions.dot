digraph "CFG forcom.google.android.material.navigation.NavigationBarMenuView.1.onClick(Landroid\/view\/View;)V" {
subgraph cluster_Region_1303050434 {
label = "R(2:1|(1:(1:3)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|com.google.android.material.navigation.NavigationBarItemView com.google.android.material.navigation.NavigationBarItemView r0 = (com.google.android.material.navigation.NavigationBarItemView) r6\landroidx.appcompat.view.menu.MenuItemImpl android.view.MenuItem r1 = r0.getItemData()\l}"];
subgraph cluster_Region_158131077 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1194215375 {
label = "IF [B:10:0x0018] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0018|if (com.google.android.material.navigation.NavigationBarMenuView.this.menu.performItemAction(r1, com.google.android.material.navigation.NavigationBarMenuView.this.presenter, 0) == false) goto L3\l}"];
subgraph cluster_Region_2041577061 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001a|r1.setChecked(true)\l}"];
}
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001e|ORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.navigation.NavigationBarMenuView.1.onClick((r5v0 'this' com.google.android.material.navigation.NavigationBarMenuView$1 A[IMMUTABLE_TYPE, THIS]), (r6v0 'v' android.view.View A[D('v' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x0018 \-\> B:12:0x001e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.OnClickListener.onClick(android.view.View):void\}]\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_7 -> Node_9;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

