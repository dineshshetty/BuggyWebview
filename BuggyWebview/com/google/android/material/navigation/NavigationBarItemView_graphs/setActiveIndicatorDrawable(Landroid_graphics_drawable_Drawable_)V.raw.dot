digraph "CFG forcom.google.android.material.navigation.NavigationBarItemView.setActiveIndicatorDrawable(Landroid\/graphics\/drawable\/Drawable;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:android.view.View) = (r1 I:com.google.android.material.navigation.NavigationBarItemView) com.google.android.material.navigation.NavigationBarItemView.activeIndicatorView android.view.View  (LINE:869)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0005 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|RETURN\l|0x0004: RETURN    (LINE:870)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|0x0005: INVOKE  \l  (r0 I:android.view.View)\l  (r2 I:android.graphics.drawable.Drawable A[D('activeIndicatorDrawable' android.graphics.drawable.Drawable)])\l type: VIRTUAL call: android.view.View.setBackgroundDrawable(android.graphics.drawable.Drawable):void A[MD:(android.graphics.drawable.Drawable):void (c)] (LINE:873)\l0x0008: INVOKE  (r1 I:com.google.android.material.navigation.NavigationBarItemView) type: DIRECT call: com.google.android.material.navigation.NavigationBarItemView.refreshItemBackground():void A[MD:():void (m)] (LINE:874)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000b|RETURN\l|0x000b: RETURN    (LINE:875)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.navigation.NavigationBarItemView.setActiveIndicatorDrawable((r1 'this' I:com.google.android.material.navigation.NavigationBarItemView A[IMMUTABLE_TYPE, THIS]), (r2 I:android.graphics.drawable.Drawable A[D('activeIndicatorDrawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000b \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000b: r2 'activeIndicatorDrawable' Landroid\/graphics\/drawable\/Drawable;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

