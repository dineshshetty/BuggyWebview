digraph "CFG forcom.google.android.material.navigation.NavigationBarItemView.getItemVisiblePosition()I" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.ViewParent) = (r6 I:com.google.android.material.navigation.NavigationBarItemView) type: VIRTUAL call: com.google.android.material.navigation.NavigationBarItemView.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (s)] (LINE:525)\l0x0004: CHECK_CAST (r0 I:android.view.ViewGroup) = (android.view.ViewGroup) (r0 I:??[OBJECT, ARRAY]) \l0x0006: INVOKE  (r1 I:int) = (r0 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup)]), (r6 I:android.view.View) type: VIRTUAL call: android.view.ViewGroup.indexOfChild(android.view.View):int A[MD:(android.view.View):int (c)] (LINE:526)\l0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:527)\l0x000b: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:528)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|LOOP_START\lLOOP:0: B:18:0x000c\-\>B:24:0x001e\l|0x000c: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('index' int)])  \-\> B:26:0x0021 \l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|0x000e: INVOKE  (r4 I:android.view.View) = (r0 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup)]), (r3 I:int A[D('i' int)]) type: VIRTUAL call: android.view.ViewGroup.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:529)\l0x0012: INSTANCE_OF  (r5 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) com.google.android.material.navigation.NavigationBarItemView  (LINE:530)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|0x0014: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x001e \l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|0x0016: INVOKE  (r5 I:int) = (r4 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x001a|0x001a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x001e \l}"];
Node_23 [shape=record,label="{23\:\ 0x001c|0x001c: ARITH  (r2 I:int) = (r2 I:int A[D('visiblePosition' int)]) + (1 int)  (LINE:531)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x001e|LOOP_END\lLOOP:0: B:18:0x000c\-\>B:24:0x001e\l|0x001e: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:528)\l}"];
Node_29 [shape=record,label="{29\:\ 0x001e|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x001e|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0021|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|RETURN\l|0x0021: RETURN  (r2 I:int A[D('visiblePosition' int)])  (LINE:534)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private int com.google.android.material.navigation.NavigationBarItemView.getItemVisiblePosition((r6 'this' I:com.google.android.material.navigation.NavigationBarItemView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x001e \-\> B:18:0x000c, CROSS_EDGE: B:22:0x001a \-\> B:24:0x001e, CROSS_EDGE: B:20:0x0014 \-\> B:24:0x001e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x001e: r4 'child' Landroid\/view\/View;\l  0x000c\-0x0021: r3 'i' I\l  0x0006\-0x0021: r0 'parent' Landroid\/view\/ViewGroup;\l  0x000a\-0x0021: r1 'index' I\l  0x000b\-0x0021: r2 'visiblePosition' I\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_29;
Node_23 -> Node_27;
Node_27 -> Node_24;
Node_24 -> Node_18;
Node_29 -> Node_24;
Node_28 -> Node_24;
Node_26 -> Node_25;
Node_25 -> Node_16;
}

