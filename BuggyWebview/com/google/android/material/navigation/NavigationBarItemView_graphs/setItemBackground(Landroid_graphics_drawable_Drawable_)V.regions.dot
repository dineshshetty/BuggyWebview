digraph "CFG forcom.google.android.material.navigation.NavigationBarItemView.setItemBackground(Landroid\/graphics\/drawable\/Drawable;)V" {
subgraph cluster_Region_2014532202 {
label = "R(2:(1:4)|5)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1712524550 {
label = "IF [B:10:0x0000, B:12:0x0006] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|if (r2 != null) goto L2\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|ADDED_TO_REGION\l|if (r2.getConstantState() != null) goto L4\l}"];
subgraph cluster_Region_1522017879 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0008|android.graphics.drawable.Drawable r2 = r2.getConstantState().newDrawable().mutate()\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0014|PHI: r2 \l  PHI: (r2v1 'background' android.graphics.drawable.Drawable) = (r2v0 'background' android.graphics.drawable.Drawable), (r2v0 'background' android.graphics.drawable.Drawable), (r2v2 'background' android.graphics.drawable.Drawable) binds: [B:10:0x0000, B:12:0x0006, B:13:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|r1.itemBackground = r2\lrefreshItemBackground()\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0002}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0019}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.navigation.NavigationBarItemView.setItemBackground((r1v0 'this' com.google.android.material.navigation.NavigationBarItemView A[IMMUTABLE_TYPE, THIS]), (r2v0 'background' android.graphics.drawable.Drawable A[D('background' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0006 \-\> B:14:0x0014, CROSS_EDGE: B:10:0x0000 \-\> B:14:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_10 -> Node_14[style=dashed];
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_8 -> Node_10;
Node_11 -> Node_12;
Node_15 -> Node_9;
}

