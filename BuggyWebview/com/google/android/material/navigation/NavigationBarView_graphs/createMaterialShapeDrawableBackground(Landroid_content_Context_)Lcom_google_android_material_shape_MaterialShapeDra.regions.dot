digraph "CFG forcom.google.android.material.navigation.NavigationBarView.createMaterialShapeDrawableBackground(Landroid\/content\/Context;)Lcom\/google\/android\/material\/shape\/MaterialShapeDrawable;" {
subgraph cluster_Region_376120848 {
label = "R(4:1|(1:3)|4|5)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|com.google.android.material.shape.MaterialShapeDrawable com.google.android.material.shape.MaterialShapeDrawable r0 = new com.google.android.material.shape.MaterialShapeDrawable()\landroid.graphics.drawable.Drawable android.graphics.drawable.Drawable r1 = getBackground()\l}"];
subgraph cluster_IfRegion_350076606 {
label = "IF [B:10:0x000b] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x000b|if ((r1 instanceof android.graphics.drawable.ColorDrawable) != false) goto L3\l}"];
subgraph cluster_Region_790127484 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000d|r0.setFillColor(android.content.res.ColorStateList.valueOf(((android.graphics.drawable.ColorDrawable) r1).getColor()))\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x001b|r0.initializeElevationOverlay(r4)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|RETURN\l|return r0\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private com.google.android.material.shape.MaterialShapeDrawable com.google.android.material.navigation.NavigationBarView.createMaterialShapeDrawableBackground((r3v0 'this' com.google.android.material.navigation.NavigationBarView A[IMMUTABLE_TYPE, THIS]), (r4v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x000b \-\> B:12:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
Node_7 -> Node_9;
}

