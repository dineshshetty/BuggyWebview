digraph "CFG forcom.google.android.material.navigation.NavigationView.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r4 I:int A[D('widthSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)] (LINE:482)\l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: SWITCH  (r0 I:??)\l case \-2147483648: goto B:7:0x0012\l case 0: goto B:6:0x000b\l case 1073741824: goto B:8:0x0022\l default: goto B:8:0x0022 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: IGET  (r0 I:int) = (r3 I:com.google.android.material.navigation.NavigationView) com.google.android.material.navigation.NavigationView.maxWidth int  (LINE:492)\l0x000d: INVOKE  (r4 I:int A[D('widthSpec' int)]) = (r0 I:int), (r1 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0013: INVOKE  (r0 I:int) = (r4 I:int A[D('widthSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:489)\l0x0017: IGET  (r2 I:int) = (r3 I:com.google.android.material.navigation.NavigationView) com.google.android.material.navigation.NavigationView.maxWidth int \l0x0019: INVOKE  (r0 I:int) = (r0 I:int), (r2 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x001d: INVOKE  (r4 I:int A[D('widthSpec' int)]) = (r0 I:int), (r1 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)] (LINE:488)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: INVOKE  \l  (r3 I:com.google.android.material.internal.ScrimInsetsFrameLayout)\l  (r4 I:int A[D('widthSpec' int)])\l  (r5 I:int A[D('heightSpec' int)])\l type: SUPER call: com.google.android.material.internal.ScrimInsetsFrameLayout.onMeasure(int, int):void A[MD:(int, int):void (c)] (LINE:496)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|RETURN\l|0x0025: RETURN    (LINE:497)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.navigation.NavigationView.onMeasure((r3 'this' I:com.google.android.material.navigation.NavigationView A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('widthSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('heightSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:7:0x0012 \-\> B:8:0x0022, CROSS_EDGE: B:3:0x0006 \-\> B:8:0x0022\lDebug Info:\l  \-1 \-0x0033: r4 'widthSpec' I\l  \-1 \-0x0033: r5 'heightSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_6;
Node_3 -> Node_7;
Node_3 -> Node_8;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

