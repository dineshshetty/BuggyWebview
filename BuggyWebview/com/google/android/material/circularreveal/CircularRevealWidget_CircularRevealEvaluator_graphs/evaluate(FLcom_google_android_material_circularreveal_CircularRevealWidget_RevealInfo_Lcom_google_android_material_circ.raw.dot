digraph "CFG forcom.google.android.material.circularreveal.CircularRevealWidget.CircularRevealEvaluator.evaluate(FLcom\/google\/android\/material\/circularreveal\/CircularRevealWidget$RevealInfo;Lcom\/google\/android\/material\/circularreveal\/CircularRevealWidget$RevealInfo;)Lcom\/google\/android\/material\/circularreveal\/CircularRevealWidget$RevealInfo;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) = (r5 I:com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator) com.google.android.material.circularreveal.CircularRevealWidget.CircularRevealEvaluator.revealInfo com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo  (LINE:216)\l0x0002: IGET  (r1 I:float) = \l  (r7 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo A[D('startValue' com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)])\l com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.centerX float \l0x0004: IGET  (r2 I:float) = \l  (r8 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo A[D('endValue' com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)])\l com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.centerX float \l0x0006: INVOKE  (r1 I:float) = (r1 I:float), (r2 I:float), (r6 I:float A[D('fraction' float)]) type: STATIC call: com.google.android.material.math.MathUtils.lerp(float, float, float):float A[MD:(float, float, float):float (m)] (LINE:217)\l0x000a: IGET  (r2 I:float) = \l  (r7 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo A[D('startValue' com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)])\l com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.centerY float \l0x000c: IGET  (r3 I:float) = \l  (r8 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo A[D('endValue' com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)])\l com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.centerY float \l0x000e: INVOKE  (r2 I:float) = (r2 I:float), (r3 I:float), (r6 I:float A[D('fraction' float)]) type: STATIC call: com.google.android.material.math.MathUtils.lerp(float, float, float):float A[MD:(float, float, float):float (m)] (LINE:218)\l0x0012: IGET  (r3 I:float) = \l  (r7 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo A[D('startValue' com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)])\l com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.radius float \l0x0014: IGET  (r4 I:float) = \l  (r8 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo A[D('endValue' com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)])\l com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.radius float \l0x0016: INVOKE  (r3 I:float) = (r3 I:float), (r4 I:float), (r6 I:float A[D('fraction' float)]) type: STATIC call: com.google.android.material.math.MathUtils.lerp(float, float, float):float A[MD:(float, float, float):float (m)] (LINE:219)\l0x001a: INVOKE  \l  (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)\l  (r1 I:float)\l  (r2 I:float)\l  (r3 I:float)\l type: VIRTUAL call: com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.set(float, float, float):void A[MD:(float, float, float):void (m)] (LINE:216)\l0x001d: IGET  (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) = (r5 I:com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator) com.google.android.material.circularreveal.CircularRevealWidget.CircularRevealEvaluator.revealInfo com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo  (LINE:220)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|RETURN\l|0x001f: RETURN  (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo com.google.android.material.circularreveal.CircularRevealWidget.CircularRevealEvaluator.evaluate((r5 'this' I:com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator A[IMMUTABLE_TYPE, THIS]), (r6 I:float A[D('fraction' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo A[D('startValue' com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo A[D('endValue' com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001f: r6 'fraction' F\l  \-1 \-0x001f: r7 'startValue' Lcom\/google\/android\/material\/circularreveal\/CircularRevealWidget$RevealInfo;\l  \-1 \-0x001f: r8 'endValue' Lcom\/google\/android\/material\/circularreveal\/CircularRevealWidget$RevealInfo;\lREPLACED_BY: com.google.android.material.circularreveal.CircularRevealWidget.CircularRevealEvaluator.evaluate(float, com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo, com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo):com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo\lBRIDGED_BY: com.google.android.material.circularreveal.CircularRevealWidget.CircularRevealEvaluator.evaluate(float, com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo, com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo):com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo\lMETHOD_OVERRIDE: [ClspMth\{android.animation.TypeEvaluator.evaluate(float, T, T):T\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

