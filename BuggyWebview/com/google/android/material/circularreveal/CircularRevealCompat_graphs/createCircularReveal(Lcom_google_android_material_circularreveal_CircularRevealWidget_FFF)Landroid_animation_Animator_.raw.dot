digraph "CFG forcom.google.android.material.circularreveal.CircularRevealCompat.createCircularReveal(Lcom\/google\/android\/material\/circularreveal\/CircularRevealWidget;FFF)Landroid\/animation\/Animator;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: SGET  (r0 I:android.util.Property\<com.google.android.material.circularreveal.CircularRevealWidget, com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo\>) =  com.google.android.material.circularreveal.CircularRevealWidget.CircularRevealProperty.CIRCULAR_REVEAL android.util.Property  (LINE:57)\l0x0002: SGET  (r1 I:android.animation.TypeEvaluator\<com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo\>) =  com.google.android.material.circularreveal.CircularRevealWidget.CircularRevealEvaluator.CIRCULAR_REVEAL android.animation.TypeEvaluator \l0x0004: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0005: NEW_ARRAY  (r3 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo[] \l0x0007: NEW_INSTANCE  (r4 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) =  com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo \l0x0009: INVOKE  \l  (r4 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)\l  (r9 I:float A[D('centerX' float)])\l  (r10 I:float A[D('centerY' float)])\l  (r11 I:float A[D('endRadius' float)])\l type: DIRECT call: com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.\<init\>(float, float, float):void A[MD:(float, float, float):void (m)]\l0x000c: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: APUT  (r3 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) \l0x000f: INVOKE  (r0 I:android.animation.ObjectAnimator) = \l  (r8 I:java.lang.Object A[D('view' com.google.android.material.circularreveal.CircularRevealWidget)])\l  (r0 I:android.util.Property)\l  (r1 I:android.animation.TypeEvaluator)\l  (r3 I:java.lang.Object[])\l type: STATIC call: android.animation.ObjectAnimator.ofObject(java.lang.Object, android.util.Property, android.animation.TypeEvaluator, java.lang.Object[]):android.animation.ObjectAnimator A[MD:\<T, V\>:(T, android.util.Property\<T, V\>, android.animation.TypeEvaluator\<V\>, V[]):android.animation.ObjectAnimator VARARG (c)] (LINE:58)\l0x0013: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:63)\l0x0015: CONST  (r3 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0017|0x0017: IF  (r1 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:21:0x0042 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0019|0x0019: INVOKE  (r1 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) = \l  (r8 I:com.google.android.material.circularreveal.CircularRevealWidget A[D('view' com.google.android.material.circularreveal.CircularRevealWidget)])\l type: INTERFACE call: com.google.android.material.circularreveal.CircularRevealWidget.getRevealInfo():com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo A[MD:():com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo (m)] (LINE:66)\l}"];
Node_16 [shape=record,label="{16\:\ 0x001d|0x001d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('revealInfo' com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x003a  (LINE:67)\l}"];
Node_17 [shape=record,label="{17\:\ 0x001f|0x001f: IGET  (r3 I:float) = \l  (r1 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo A[D('revealInfo' com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)])\l com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.radius float  (LINE:71)\l0x0021: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('view' com.google.android.material.circularreveal.CircularRevealWidget)])  (LINE:72)\l0x0022: CHECK_CAST (r4 I:android.view.View) = (android.view.View) (r4 I:??[OBJECT, ARRAY]) \l0x0024: CAST (r6 I:int) = (int) (r9 I:float A[D('centerX' float)]) \l0x0025: CAST (r7 I:int) = (int) (r10 I:float A[D('centerY' float)]) \l0x0026: INVOKE  (r4 I:android.animation.Animator) = \l  (r4 I:android.view.View)\l  (r6 I:int)\l  (r7 I:int)\l  (r3 I:float A[D('startRadius' float)])\l  (r11 I:float A[D('endRadius' float)])\l type: STATIC call: android.view.ViewAnimationUtils.createCircularReveal(android.view.View, int, int, float, float):android.animation.Animator A[MD:(android.view.View, int, int, float, float):android.animation.Animator (c)] (LINE:73)\l0x002a: NEW_INSTANCE  (r6 I:android.animation.AnimatorSet) =  android.animation.AnimatorSet  (LINE:75)\l0x002c: INVOKE  (r6 I:android.animation.AnimatorSet) type: DIRECT call: android.animation.AnimatorSet.\<init\>():void A[MD:():void (c)]\l0x002f: CONST  (r7 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:76)\l0x0030: NEW_ARRAY  (r7 I:android.animation.Animator[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: android.animation.Animator[] \l0x0032: APUT  \l  (r7 I:??[OBJECT, ARRAY][])\l  (r5 I:??[int, short, byte, char])\l  (r0 I:??[OBJECT, ARRAY] A[D('revealInfoAnimator' android.animation.Animator)])\l \l0x0034: APUT  \l  (r7 I:??[OBJECT, ARRAY][])\l  (r2 I:??[int, short, byte, char])\l  (r4 I:??[OBJECT, ARRAY] A[D('circularRevealAnimator' android.animation.Animator)])\l \l0x0036: INVOKE  (r6 I:android.animation.AnimatorSet A[D('set' android.animation.AnimatorSet)]), (r7 I:android.animation.Animator[]) type: VIRTUAL call: android.animation.AnimatorSet.playTogether(android.animation.Animator[]):void A[MD:(android.animation.Animator[]):void VARARG (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0039|RETURN\l|0x0039: RETURN  (r6 I:android.animation.Animator A[D('set' android.animation.AnimatorSet)])  (LINE:77)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x003a|0x003a: NEW_INSTANCE  (r2 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:68)\l0x003c: CONST_STR  (r3 I:java.lang.String) =  \"Caller must set a non\-null RevealInfo before calling this.\" \l0x003e: INVOKE  (r2 I:java.lang.IllegalStateException), (r3 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|0x0041: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|RETURN\l|0x0042: RETURN  (r0 I:android.animation.Animator A[D('revealInfoAnimator' android.animation.Animator)])  (LINE:79)\l}"];
MethodNode[shape=record,label="{public static android.animation.Animator com.google.android.material.circularreveal.CircularRevealCompat.createCircularReveal((r8 I:com.google.android.material.circularreveal.CircularRevealWidget A[D('view' com.google.android.material.circularreveal.CircularRevealWidget), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:float A[D('centerX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:float A[D('centerY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:float A[D('endRadius' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0041 \-\> B:12:?, CROSS_EDGE: B:21:0x0042 \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x003a: r3 'startRadius' F\l  0x002a\-0x003a: r4 'circularRevealAnimator' Landroid\/animation\/Animator;\l  0x002f\-0x003a: r6 'set' Landroid\/animation\/AnimatorSet;\l  0x001d\-0x0042: r1 'revealInfo' Lcom\/google\/android\/material\/circularreveal\/CircularRevealWidget$RevealInfo;\l  0x0013\-0x0042: r0 'revealInfoAnimator' Landroid\/animation\/Animator;\l  \-1 \-0x0042: r8 'view' Lcom\/google\/android\/material\/circularreveal\/CircularRevealWidget;\l  \-1 \-0x0042: r9 'centerX' F\l  \-1 \-0x0042: r10 'centerY' F\l  \-1 \-0x0042: r11 'endRadius' F\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_21 -> Node_12;
}

