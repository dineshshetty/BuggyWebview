digraph "CFG forcom.google.android.material.circularreveal.CircularRevealHelper.draw(Landroid\/graphics\/Canvas;)V" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) type: DIRECT call: com.google.android.material.circularreveal.CircularRevealHelper.shouldDrawCircularReveal():boolean A[MD:():boolean (m)] (LINE:264)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x009c \l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|0x0006: SGET  (r0 I:int) =  com.google.android.material.circularreveal.CircularRevealHelper.STRATEGY int  (LINE:265)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0008|0x0008: SWITCH  (r0 I:??)\l case 0: goto B:38:0x0073\l case 1: goto B:34:0x0045\l case 2: goto B:31:0x0022\l default: goto B:29:0x000b \l}"];
Node_29 [shape=record,label="{29\:\ 0x000b|0x000b: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:291)\l0x000d: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000f: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0012: CONST_STR  (r3 I:java.lang.String) =  \"Unsupported strategy \" \l0x0014: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0017: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x001a: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x001e: INVOKE  (r1 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0021|0x0021: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|0x0022: IGET  (r0 I:com.google.android.material.circularreveal.CircularRevealHelper$Delegate) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.delegate com.google.android.material.circularreveal.CircularRevealHelper$Delegate  (LINE:267)\l0x0024: INVOKE  \l  (r0 I:com.google.android.material.circularreveal.CircularRevealHelper$Delegate)\l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: INTERFACE call: com.google.android.material.circularreveal.CircularRevealHelper.Delegate.actualDraw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (m)]\l0x0027: INVOKE  (r0 I:boolean) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) type: DIRECT call: com.google.android.material.circularreveal.CircularRevealHelper.shouldDrawScrim():boolean A[MD:():boolean (m)] (LINE:268)\l}"];
Node_32 [shape=record,label="{32\:\ 0x002b|0x002b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x00bd \l}"];
Node_33 [shape=record,label="{33\:\ 0x002d|0x002d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:269)\l0x002e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002f: IGET  (r0 I:android.view.View) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.view android.view.View \l0x0031: INVOKE  (r0 I:int) = (r0 I:android.view.View) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)]\l0x0035: CAST (r4 I:float) = (float) (r0 I:int) \l0x0036: IGET  (r0 I:android.view.View) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.view android.view.View \l0x0038: INVOKE  (r0 I:int) = (r0 I:android.view.View) type: VIRTUAL call: android.view.View.getHeight():int A[MD:():int (c)]\l0x003c: CAST (r5 I:float) = (float) (r0 I:int) \l0x003d: IGET  (r6 I:android.graphics.Paint) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.scrimPaint android.graphics.Paint \l0x003f: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x0040: INVOKE  (r1 I:android.graphics.Canvas), (r2 I:float), (r3 I:float), (r4 I:float), (r5 I:float), (r6 I:android.graphics.Paint) type: VIRTUAL call: android.graphics.Canvas.drawRect(float, float, float, float, android.graphics.Paint):void A[MD:(float, float, float, float, android.graphics.Paint):void (c)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x00bd|0x00bd: INVOKE  \l  (r8 I:com.google.android.material.circularreveal.CircularRevealHelper)\l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: DIRECT call: com.google.android.material.circularreveal.CircularRevealHelper.drawOverlayDrawable(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (m)] (LINE:300)\l}"];
Node_45 [shape=record,label="{45\:\ 0x00c0|RETURN\l|0x00c0: RETURN    (LINE:301)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0045|0x0045: INVOKE  (r0 I:int) = (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:273)\l0x0049: IGET  (r1 I:android.graphics.Path) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.revealPath android.graphics.Path  (LINE:274)\l0x004b: INVOKE  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r1 I:android.graphics.Path) type: VIRTUAL call: android.graphics.Canvas.clipPath(android.graphics.Path):boolean A[MD:(android.graphics.Path):boolean (c)]\l0x004e: IGET  (r1 I:com.google.android.material.circularreveal.CircularRevealHelper$Delegate) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.delegate com.google.android.material.circularreveal.CircularRevealHelper$Delegate  (LINE:276)\l0x0050: INVOKE  \l  (r1 I:com.google.android.material.circularreveal.CircularRevealHelper$Delegate)\l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: INTERFACE call: com.google.android.material.circularreveal.CircularRevealHelper.Delegate.actualDraw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (m)]\l0x0053: INVOKE  (r1 I:boolean) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) type: DIRECT call: com.google.android.material.circularreveal.CircularRevealHelper.shouldDrawScrim():boolean A[MD:():boolean (m)] (LINE:277)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0057|0x0057: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x006f \l}"];
Node_36 [shape=record,label="{36\:\ 0x0059|0x0059: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:278)\l0x005a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x005b: IGET  (r1 I:android.view.View) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.view android.view.View \l0x005d: INVOKE  (r1 I:int) = (r1 I:android.view.View) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)]\l0x0061: CAST (r5 I:float) = (float) (r1 I:int) \l0x0062: IGET  (r1 I:android.view.View) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.view android.view.View \l0x0064: INVOKE  (r1 I:int) = (r1 I:android.view.View) type: VIRTUAL call: android.view.View.getHeight():int A[MD:():int (c)]\l0x0068: CAST (r6 I:float) = (float) (r1 I:int) \l0x0069: IGET  (r7 I:android.graphics.Paint) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.scrimPaint android.graphics.Paint \l0x006b: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x006c: INVOKE  (r2 I:android.graphics.Canvas), (r3 I:float), (r4 I:float), (r5 I:float), (r6 I:float), (r7 I:android.graphics.Paint) type: VIRTUAL call: android.graphics.Canvas.drawRect(float, float, float, float, android.graphics.Paint):void A[MD:(float, float, float, float, android.graphics.Paint):void (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x006f|0x006f: INVOKE  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r0 I:int A[D('count' int)]) type: VIRTUAL call: android.graphics.Canvas.restoreToCount(int):void A[MD:(int):void (c)] (LINE:281)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0073|0x0073: IGET  (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo A[D('count' int)]) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.revealInfo com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo  (LINE:284)\l0x0075: IGET  (r0 I:float) = (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.centerX float \l0x0077: IGET  (r1 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.revealInfo com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo \l0x0079: IGET  (r1 I:float) = (r1 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.centerY float \l0x007b: IGET  (r2 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.revealInfo com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo \l0x007d: IGET  (r2 I:float) = (r2 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.radius float \l0x007f: IGET  (r3 I:android.graphics.Paint) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.revealPaint android.graphics.Paint \l0x0081: INVOKE  \l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:float)\l  (r1 I:float)\l  (r2 I:float)\l  (r3 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawCircle(float, float, float, android.graphics.Paint):void A[MD:(float, float, float, android.graphics.Paint):void (c)]\l0x0084: INVOKE  (r0 I:boolean) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) type: DIRECT call: com.google.android.material.circularreveal.CircularRevealHelper.shouldDrawScrim():boolean A[MD:():boolean (m)] (LINE:285)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0088|0x0088: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x00bd \l}"];
Node_40 [shape=record,label="{40\:\ 0x008a|0x008a: IGET  (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.revealInfo com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo  (LINE:286)\l0x008c: IGET  (r0 I:float) = (r0 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.centerX float \l0x008e: IGET  (r1 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.revealInfo com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo \l0x0090: IGET  (r1 I:float) = (r1 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.centerY float \l0x0092: IGET  (r2 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.revealInfo com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo \l0x0094: IGET  (r2 I:float) = (r2 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.radius float \l0x0096: IGET  (r3 I:android.graphics.Paint) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.scrimPaint android.graphics.Paint \l0x0098: INVOKE  \l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:float)\l  (r1 I:float)\l  (r2 I:float)\l  (r3 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawCircle(float, float, float, android.graphics.Paint):void A[MD:(float, float, float, android.graphics.Paint):void (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x009c|0x009c: IGET  (r0 I:com.google.android.material.circularreveal.CircularRevealHelper$Delegate) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.delegate com.google.android.material.circularreveal.CircularRevealHelper$Delegate  (LINE:294)\l0x009e: INVOKE  \l  (r0 I:com.google.android.material.circularreveal.CircularRevealHelper$Delegate)\l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: INTERFACE call: com.google.android.material.circularreveal.CircularRevealHelper.Delegate.actualDraw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (m)]\l0x00a1: INVOKE  (r0 I:boolean) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) type: DIRECT call: com.google.android.material.circularreveal.CircularRevealHelper.shouldDrawScrim():boolean A[MD:():boolean (m)] (LINE:295)\l}"];
Node_42 [shape=record,label="{42\:\ 0x00a5|0x00a5: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x00bd \l}"];
Node_43 [shape=record,label="{43\:\ 0x00a7|0x00a7: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:296)\l0x00a8: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00a9: IGET  (r0 I:android.view.View) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.view android.view.View \l0x00ab: INVOKE  (r0 I:int) = (r0 I:android.view.View) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)]\l0x00af: CAST (r4 I:float) = (float) (r0 I:int) \l0x00b0: IGET  (r0 I:android.view.View) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.view android.view.View \l0x00b2: INVOKE  (r0 I:int) = (r0 I:android.view.View) type: VIRTUAL call: android.view.View.getHeight():int A[MD:():int (c)]\l0x00b6: CAST (r5 I:float) = (float) (r0 I:int) \l0x00b7: IGET  (r6 I:android.graphics.Paint) = (r8 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.scrimPaint android.graphics.Paint \l0x00b9: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x00ba: INVOKE  (r1 I:android.graphics.Canvas), (r2 I:float), (r3 I:float), (r4 I:float), (r5 I:float), (r6 I:android.graphics.Paint) type: VIRTUAL call: android.graphics.Canvas.drawRect(float, float, float, float, android.graphics.Paint):void A[MD:(float, float, float, float, android.graphics.Paint):void (c)]\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.circularreveal.CircularRevealHelper.draw((r8 'this' I:com.google.android.material.circularreveal.CircularRevealHelper A[IMMUTABLE_TYPE, THIS]), (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:45:0x00c0 \-\> B:24:?, CROSS_EDGE: B:32:0x002b \-\> B:44:0x00bd, CROSS_EDGE: B:37:0x006f \-\> B:44:0x00bd, CROSS_EDGE: B:35:0x0057 \-\> B:37:0x006f, CROSS_EDGE: B:40:0x008a \-\> B:44:0x00bd, CROSS_EDGE: B:39:0x0088 \-\> B:44:0x00bd, CROSS_EDGE: B:43:0x00a7 \-\> B:44:0x00bd, CROSS_EDGE: B:42:0x00a5 \-\> B:44:0x00bd\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0049\-0x0073: r0 'count' I\l  \-1 \-0x00cb: r9 'canvas' Landroid\/graphics\/Canvas;\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_41;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_31;
Node_28 -> Node_34;
Node_28 -> Node_38;
Node_29 -> Node_30;
Node_30 -> Node_24;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_44;
Node_33 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_24;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_44;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_44;
Node_40 -> Node_44;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44;
}

