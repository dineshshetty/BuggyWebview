digraph "CFG forcom.google.android.material.circularreveal.CircularRevealHelper.drawOverlayDrawable(Landroid\/graphics\/Canvas;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r5 I:com.google.android.material.circularreveal.CircularRevealHelper) type: DIRECT call: com.google.android.material.circularreveal.CircularRevealHelper.shouldDrawOverlayDrawable():boolean A[MD:():boolean (m)] (LINE:304)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|0x0006: IGET  (r0 I:android.graphics.drawable.Drawable) = (r5 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.overlayDrawable android.graphics.drawable.Drawable  (LINE:305)\l0x0008: INVOKE  (r0 I:android.graphics.Rect) = (r0 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (c)]\l0x000c: IGET  (r1 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) = (r5 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.revealInfo com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo  (LINE:306)\l0x000e: IGET  (r1 I:float) = (r1 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.centerX float \l0x0010: INVOKE  (r2 I:int) = (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.width():int A[MD:():int (c)]\l0x0014: CAST (r2 I:float) = (float) (r2 I:int) \l0x0015: CONST  (r3 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0017: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l0x0018: ARITH  (r1 I:float) = (r1 I:float) \- (r2 I:float) \l0x0019: IGET  (r2 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) = (r5 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.revealInfo com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo  (LINE:307)\l0x001b: IGET  (r2 I:float) = (r2 I:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo.centerY float \l0x001d: INVOKE  (r4 I:int) = (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.height():int A[MD:():int (c)]\l0x0021: CAST (r4 I:float) = (float) (r4 I:int) \l0x0022: ARITH  (r4 I:float) = (r4 I:float) \/ (r3 I:float) \l0x0023: ARITH  (r2 I:float) = (r2 I:float) \- (r4 I:float) \l0x0024: INVOKE  \l  (r6 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r1 I:float A[D('translationX' float)])\l  (r2 I:float A[D('translationY' float)])\l type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)] (LINE:309)\l0x0027: IGET  (r3 I:android.graphics.drawable.Drawable) = (r5 I:com.google.android.material.circularreveal.CircularRevealHelper) com.google.android.material.circularreveal.CircularRevealHelper.overlayDrawable android.graphics.drawable.Drawable  (LINE:310)\l0x0029: INVOKE  (r3 I:android.graphics.drawable.Drawable), (r6 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)]\l0x002c: NEG  (r3 I:float) = (r1 I:float A[D('translationX' float)])  (LINE:311)\l0x002d: NEG  (r4 I:float) = (r2 I:float A[D('translationY' float)]) \l0x002e: INVOKE  (r6 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r3 I:float), (r4 I:float) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|RETURN\lORIG_RETURN\l|0x0031: RETURN    (LINE:313)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0031: RETURN   A[SYNTHETIC] (LINE:313)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.circularreveal.CircularRevealHelper.drawOverlayDrawable((r5 'this' I:com.google.android.material.circularreveal.CircularRevealHelper A[IMMUTABLE_TYPE, THIS]), (r6 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0004 \-\> B:12:0x0031\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x0031: r0 'bounds' Landroid\/graphics\/Rect;\l  0x0019\-0x0031: r1 'translationX' F\l  0x0024\-0x0031: r2 'translationY' F\l  \-1 \-0x0031: r6 'canvas' Landroid\/graphics\/Canvas;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

