digraph "CFG forcom.google.android.material.circularreveal.CircularRevealHelper.setRevealInfo(Lcom\/google\/android\/material\/circularreveal\/CircularRevealWidget$RevealInfo;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|if (r4 != null) goto L6\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|r3.revealInfo = null\l}"];
Node_24 [shape=record,label="{24\:\ 0x002b|invalidateRevealInfo()\l}"];
Node_25 [shape=record,label="{25\:\ 0x002e|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo r0 = r3.revealInfo\l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|if (r0 != null) goto L12\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|r3.revealInfo = new com.google.android.material.circularreveal.CircularRevealWidget.RevealInfo(r4)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0015}"];
Node_22 [shape=record,label="{22\:\ 0x0022|if (com.google.android.material.math.MathUtils.geq(r4.radius, getDistanceToFurthestCorner(r4), 1.0E\-4f) == false) goto L3\l}"];
Node_23 [shape=record,label="{23\:\ 0x0024|r3.revealInfo.radius = Float.MAX_VALUE\l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|r0.set(r4)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.circularreveal.CircularRevealHelper.setRevealInfo((r3v0 'this' com.google.android.material.circularreveal.CircularRevealHelper A[IMMUTABLE_TYPE, THIS]), (r4v0 'revealInfo' com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo A[D('revealInfo' com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0024 \-\> B:24:0x002b, CROSS_EDGE: B:22:0x0022 \-\> B:24:0x002b, CROSS_EDGE: B:20:0x0012 \-\> B:21:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_20 -> Node_21;
}

