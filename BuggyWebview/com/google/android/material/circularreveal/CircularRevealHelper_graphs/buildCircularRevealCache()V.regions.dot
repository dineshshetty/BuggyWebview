digraph "CFG forcom.google.android.material.circularreveal.CircularRevealHelper.buildCircularRevealCache()V" {
subgraph cluster_Region_2090931414 {
label = "R(1:(1:(4:3|(1:9)|(1:11)|12)))";
node [shape=record,color=blue];
subgraph cluster_Region_1401022210 {
label = "R(1:(4:3|(1:9)|(1:11)|12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_218314741 {
label = "IF [B:19:0x0002] THEN: R(4:3|(1:9)|(1:11)|12) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0002|if (com.google.android.material.circularreveal.CircularRevealHelper.STRATEGY == 0) goto L3\l}"];
subgraph cluster_Region_1475747041 {
label = "R(4:3|(1:9)|(1:11)|12)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0004|r7.buildingCircularRevealCache = true\lr7.hasCircularRevealCache = false\lr7.view.buildDrawingCache()\landroid.graphics.Bitmap android.graphics.Bitmap r2 = r7.view.getDrawingCache()\l}"];
subgraph cluster_IfRegion_1333507365 {
label = "IF [B:21:0x0015, B:23:0x001d, B:25:0x0025] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0015|if (r2 == null) goto L5\l}"];
Node_23 [shape=record,label="{23\:\ 0x001d|ADDED_TO_REGION\l|if (r7.view.getWidth() != 0) goto L7\l}"];
Node_25 [shape=record,label="{25\:\ 0x0025|ADDED_TO_REGION\l|if (r7.view.getHeight() != 0) goto L9\l}"];
subgraph cluster_Region_1957670633 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0027|android.graphics.Bitmap r2 = android.graphics.Bitmap.createBitmap(r7.view.getWidth(), r7.view.getHeight(), android.graphics.Bitmap.Config.ARGB_8888)\landroid.graphics.Canvas android.graphics.Canvas r3 = new android.graphics.Canvas(r2)\lr7.view.draw(r3)\l}"];
}
}
subgraph cluster_IfRegion_549439323 {
label = "IF [B:27:0x0043] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0043|PHI: r2 \l  PHI: (r2v3 'bitmap' android.graphics.Bitmap) = (r2v2 'bitmap' android.graphics.Bitmap), (r2v2 'bitmap' android.graphics.Bitmap), (r2v2 'bitmap' android.graphics.Bitmap), (r2v4 'bitmap' android.graphics.Bitmap) binds: [B:21:0x0015, B:23:0x001d, B:25:0x0025, B:26:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 != null) goto L11\l}"];
subgraph cluster_Region_1196021433 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0045|r7.revealPaint.setShader(new android.graphics.BitmapShader(r2, android.graphics.Shader.TileMode.CLAMP, android.graphics.Shader.TileMode.CLAMP))\l}"];
}
}
Node_29 [shape=record,label="{29\:\ 0x0053|r7.buildingCircularRevealCache = false\lr7.hasCircularRevealCache = true\l}"];
}
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0000}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0017}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x001f}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0057|ORIG_RETURN\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,color=red,label="{31\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.circularreveal.CircularRevealHelper.buildCircularRevealCache((r7v0 'this' com.google.android.material.circularreveal.CircularRevealHelper A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0043 \-\> B:29:0x0053, CROSS_EDGE: B:25:0x0025 \-\> B:27:0x0043, CROSS_EDGE: B:23:0x001d \-\> B:27:0x0043, CROSS_EDGE: B:21:0x0015 \-\> B:27:0x0043, CROSS_EDGE: B:19:0x0002 \-\> B:30:0x0057\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_19 -> Node_20;
Node_19 -> Node_31[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_27[style=dashed];
Node_23 -> Node_24;
Node_23 -> Node_27[style=dashed];
Node_25 -> Node_26;
Node_25 -> Node_27[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_30 -> Node_17;
Node_31 -> Node_17;
}

