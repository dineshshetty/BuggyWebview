digraph "CFG forcom.google.android.material.resources.MaterialResources.getUnscaledTextSize(Landroid\/content\/Context;II)I" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|if (r6 != 0) goto L4\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|RETURN\l|return r7\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|android.content.res.TypedArray r0 = r5.obtainStyledAttributes(r6, com.google.android.material.C0571R.styleable.TextAppearance)\landroid.util.TypedValue r1 = new android.util.TypedValue()\lboolean r2 = r0.getValue(com.google.android.material.C0571R.styleable.TextAppearance_android_textSize, r1)\lr0.recycle()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|if (r2 != false) goto L7\l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|RETURN\l|return r7\l}"];
Node_20 [shape=record,label="{20\:\ 0x001a}"];
Node_21 [shape=record,label="{21\:\ 0x001f|if (getComplexUnit(r1) != 2) goto L11\l}"];
Node_22 [shape=record,label="{22\:\ 0x0021}"];
Node_23 [shape=record,label="{23\:\ 0x0037|RETURN\l|return java.lang.Math.round(android.util.TypedValue.complexToFloat(r1.data) * r5.getResources().getDisplayMetrics().density)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0038}"];
Node_25 [shape=record,label="{25\:\ 0x0046|RETURN\l|return android.util.TypedValue.complexToDimensionPixelSize(r1.data, r5.getResources().getDisplayMetrics())\l}"];
MethodNode[shape=record,label="{public static int com.google.android.material.resources.MaterialResources.getUnscaledTextSize((r5v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'textAppearance' int A[D('textAppearance' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'defValue' int A[D('defValue' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0019 \-\> B:14:?, CROSS_EDGE: B:23:0x0037 \-\> B:14:?, CROSS_EDGE: B:25:0x0046 \-\> B:14:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_14;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_14;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

