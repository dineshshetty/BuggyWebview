digraph "CFG forcom.google.android.material.resources.MaterialResources.getUnscaledTextSize(Landroid\/content\/Context;II)I" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('textAppearance' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0003  (LINE:211)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|RETURN\l|0x0002: RETURN  (r7 I:int A[D('defValue' int)])  (LINE:212)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|0x0003: SGET  (r0 I:int[]) =  com.google.android.material.R.styleable.TextAppearance int[]  (LINE:215)\l0x0005: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r5 I:android.content.Context A[D('context' android.content.Context)])\l  (r6 I:int A[D('textAppearance' int)])\l  (r0 I:int[])\l type: VIRTUAL call: android.content.Context.obtainStyledAttributes(int, int[]):android.content.res.TypedArray A[MD:(int, int[]):android.content.res.TypedArray throws android.content.res.Resources$NotFoundException (c)]\l0x0009: NEW_INSTANCE  (r1 I:android.util.TypedValue) =  android.util.TypedValue  (LINE:216)\l0x000b: INVOKE  (r1 I:android.util.TypedValue) type: DIRECT call: android.util.TypedValue.\<init\>():void A[MD:():void (c)]\l0x000e: SGET  (r2 I:int) =  com.google.android.material.R.styleable.TextAppearance_android_textSize int  (LINE:217)\l0x0010: INVOKE  (r2 I:boolean) = \l  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)])\l  (r2 I:int)\l  (r1 I:android.util.TypedValue A[D('v' android.util.TypedValue)])\l type: VIRTUAL call: android.content.res.TypedArray.getValue(int, android.util.TypedValue):boolean A[MD:(int, android.util.TypedValue):boolean (c)]\l0x0014: INVOKE  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:218)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|0x0017: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('available' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x001a  (LINE:220)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|RETURN\l|0x0019: RETURN  (r7 I:int A[D('defValue' int)])  (LINE:221)\l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|0x001a: INVOKE  (r3 I:int) = (r1 I:android.util.TypedValue A[D('v' android.util.TypedValue)]) type: STATIC call: com.google.android.material.resources.MaterialResources.getComplexUnit(android.util.TypedValue):int A[MD:(android.util.TypedValue):int (m)] (LINE:226)\l0x001e: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x001f|0x001f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0038 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0021|0x0021: IGET  (r3 I:int) = (r1 I:android.util.TypedValue A[D('v' android.util.TypedValue)]) android.util.TypedValue.data int  (LINE:229)\l0x0023: INVOKE  (r3 I:float) = (r3 I:int) type: STATIC call: android.util.TypedValue.complexToFloat(int):float A[MD:(int):float (c)] (LINE:230)\l0x0027: INVOKE  (r4 I:android.content.res.Resources) = (r5 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)]\l0x002b: INVOKE  (r4 I:android.util.DisplayMetrics) = (r4 I:android.content.res.Resources) type: VIRTUAL call: android.content.res.Resources.getDisplayMetrics():android.util.DisplayMetrics A[MD:():android.util.DisplayMetrics (c)]\l0x002f: IGET  (r4 I:float) = (r4 I:android.util.DisplayMetrics) android.util.DisplayMetrics.density float \l0x0031: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x0033: INVOKE  (r3 I:int) = (r3 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)] (LINE:229)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0037|RETURN\l|0x0037: RETURN  (r3 I:int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0038|0x0038: IGET  (r3 I:int) = (r1 I:android.util.TypedValue A[D('v' android.util.TypedValue)]) android.util.TypedValue.data int  (LINE:234)\l0x003a: INVOKE  (r4 I:android.content.res.Resources) = (r5 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)] (LINE:235)\l0x003e: INVOKE  (r4 I:android.util.DisplayMetrics) = (r4 I:android.content.res.Resources) type: VIRTUAL call: android.content.res.Resources.getDisplayMetrics():android.util.DisplayMetrics A[MD:():android.util.DisplayMetrics (c)]\l0x0042: INVOKE  (r3 I:int) = (r3 I:int), (r4 I:android.util.DisplayMetrics) type: STATIC call: android.util.TypedValue.complexToDimensionPixelSize(int, android.util.DisplayMetrics):int A[MD:(int, android.util.DisplayMetrics):int (c)] (LINE:234)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0046|RETURN\l|0x0046: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{public static int com.google.android.material.resources.MaterialResources.getUnscaledTextSize((r5 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('textAppearance' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('defValue' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0019 \-\> B:14:?, CROSS_EDGE: B:23:0x0037 \-\> B:14:?, CROSS_EDGE: B:25:0x0046 \-\> B:14:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0046: r0 'a' Landroid\/content\/res\/TypedArray;\l  0x000e\-0x0046: r1 'v' Landroid\/util\/TypedValue;\l  0x0014\-0x0046: r2 'available' Z\l  \-1 \-0x0046: r5 'context' Landroid\/content\/Context;\l  \-1 \-0x0046: r6 'textAppearance' I\l  \-1 \-0x0046: r7 'defValue' I\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_14;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_14;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

