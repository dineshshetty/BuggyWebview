digraph "CFG forcom.google.android.material.resources.MaterialAttributes.resolveDimension(Landroid\/content\/Context;II)I" {
subgraph cluster_Region_908602687 {
label = "R(2:1|(2:(1:9)|(1:6)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0000|android.util.TypedValue android.util.TypedValue r0 = resolve(r3, r4)\l}"];
subgraph cluster_Region_1217548100 {
label = "R(2:(1:9)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1230469805 {
label = "IF [B:14:0x0004, B:16:0x0009] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0004|if (r0 == null) goto L8\l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|ADDED_TO_REGION\l|if (r0.type != 5) goto L8\l}"];
subgraph cluster_Region_1241034542 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0023|RETURN\l|return (int) r3.getResources().getDimension(r5)\l}"];
}
}
subgraph cluster_Region_15318433 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0019|RETURN\l|return (int) r0.getDimension(r3.getResources().getDisplayMetrics())\l}"];
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0006}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x000c}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x001a}"];
MethodNode[shape=record,label="{public static int com.google.android.material.resources.MaterialAttributes.resolveDimension((r3v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'attributeResId' int A[D('attributeResId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'defaultDimenResId' int A[D('defaultDimenResId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0023 \-\> B:12:?, CROSS_EDGE: B:14:0x0004 \-\> B:20:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_16 -> Node_18[style=dashed];
Node_16 -> Node_20;
Node_21 -> Node_12;
Node_19 -> Node_12;
Node_11 -> Node_13;
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_20 -> Node_21;
}

