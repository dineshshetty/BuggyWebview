digraph "CFG forcom.google.android.material.resources.MaterialAttributes.resolveInteger(Landroid\/content\/Context;II)I" {
subgraph cluster_Region_2105515530 {
label = "R(2:1|(2:(1:6)|(1:9)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|android.util.TypedValue android.util.TypedValue r0 = resolve(r3, r4)\l}"];
subgraph cluster_Region_456147858 {
label = "R(2:(1:6)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_748455888 {
label = "IF [B:13:0x0004, B:15:0x000a] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0004|if (r0 != null) goto L3\l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|ADDED_TO_REGION\l|if (r0.type == 16) goto L5\l}"];
subgraph cluster_Region_195826465 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return r0.data\l}"];
}
}
subgraph cluster_Region_653220501 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0010|RETURN\lORIG_RETURN\l|return r5\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0006}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000c}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x000f}"];
MethodNode[shape=record,label="{public static int com.google.android.material.resources.MaterialAttributes.resolveInteger((r3v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'attributeResId' int A[D('attributeResId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'defaultValue' int A[D('defaultValue' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000f \-\> B:18:0x0010, CROSS_EDGE: B:13:0x0004 \-\> B:17:0x000f\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_19 -> Node_11;
Node_18 -> Node_11;
Node_10 -> Node_12;
Node_14 -> Node_15;
Node_16 -> Node_19;
Node_17 -> Node_18;
}

