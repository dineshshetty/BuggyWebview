digraph "CFG forcom.google.android.material.snackbar.Snackbar.getDuration()I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r4 I:com.google.android.material.snackbar.BaseTransientBottomBar) type: SUPER call: com.google.android.material.snackbar.BaseTransientBottomBar.getDuration():int A[MD:():int (m)] (LINE:363)\l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (\-2 ??[int, float, short, byte, char])  (LINE:364)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('userSetDuration' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0008 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:int)  (LINE:365)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: SGET  (r2 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:368)\l0x000a: CONST  (r3 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IF  (r2 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:13:0x0020 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IGET  (r1 I:boolean) = (r4 I:com.google.android.material.snackbar.Snackbar) com.google.android.material.snackbar.Snackbar.hasAction boolean  (LINE:369)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0014 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: CONST  (r1 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|0x0015: IGET  (r2 I:android.view.accessibility.AccessibilityManager) = (r4 I:com.google.android.material.snackbar.Snackbar) com.google.android.material.snackbar.Snackbar.accessibilityManager android.view.accessibility.AccessibilityManager  (LINE:370)\l0x0017: ARITH  (r3 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char] A[D('controlsFlag' int)]) \| (1 ??[boolean, int, float, short, byte, char]) \l0x0019: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) \| (2 ??[int, float, short, byte, char]) \l0x001b: INVOKE  (r2 I:int) = (r2 I:android.view.accessibility.AccessibilityManager), (r0 I:int A[D('userSetDuration' int)]), (r3 I:int) type: VIRTUAL call: android.view.accessibility.AccessibilityManager.getRecommendedTimeoutMillis(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|RETURN\l|0x001f: RETURN  (r2 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|0x0020: IGET  (r2 I:boolean) = (r4 I:com.google.android.material.snackbar.Snackbar) com.google.android.material.snackbar.Snackbar.hasAction boolean  (LINE:375)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0022|0x0022: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x002d \l}"];
Node_15 [shape=record,label="{15\:\ 0x0024|0x0024: IGET  (r2 I:android.view.accessibility.AccessibilityManager) = (r4 I:com.google.android.material.snackbar.Snackbar) com.google.android.material.snackbar.Snackbar.accessibilityManager android.view.accessibility.AccessibilityManager \l0x0026: INVOKE  (r2 I:boolean) = (r2 I:android.view.accessibility.AccessibilityManager) type: VIRTUAL call: android.view.accessibility.AccessibilityManager.isTouchExplorationEnabled():boolean A[MD:():boolean (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x002a|0x002a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x002d \l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|0x002e: RETURN  (r1 I:int) A[SYNTHETIC] (LINE:375)\l}"];
Node_18 [shape=record,label="{18\:\ 0x002d|0x002d: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('userSetDuration' int)])  (LINE:377)\l}"];
Node_19 [shape=record,label="{19\:\ 0x002e|RETURN\lORIG_RETURN\l|0x002e: RETURN  (r1 I:int)  (LINE:375)\l}"];
MethodNode[shape=record,label="{public int com.google.android.material.snackbar.Snackbar.getDuration((r4 'this' I:com.google.android.material.snackbar.Snackbar A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x001f \-\> B:1:?, CROSS_EDGE: B:10:0x0014 \-\> B:11:0x0015, CROSS_EDGE: B:19:0x002e \-\> B:1:?, CROSS_EDGE: B:16:0x002a \-\> B:19:0x002e, CROSS_EDGE: B:14:0x0022 \-\> B:18:0x002d\lDebug Info:\l  0x0015\-0x0020: r1 'controlsFlag' I\l  0x0004\-0x002e: r0 'userSetDuration' I\lMETHOD_OVERRIDE: [com.google.android.material.snackbar.BaseTransientBottomBar.getDuration():int]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_20[style=dashed];
Node_20 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_1;
}

