digraph "CFG forcom.google.android.material.snackbar.Snackbar.setAction(Ljava\/lang\/CharSequence;Landroid\/view\/View$OnClickListener;)Lcom\/google\/android\/material\/snackbar\/Snackbar;" {
subgraph cluster_Region_1191666726 {
label = "R(3:1|(1:7)(1:4)|5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|android.widget.Button android.widget.TextView r0 = getActionView()\l}"];
subgraph cluster_IfRegion_783927600 {
label = "IF [B:3:0x0009, B:4:0x000b] THEN: R(1:7) ELSE: R(1:4)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|if (android.text.TextUtils.isEmpty(r4) != false) goto L7\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|ADDED_TO_REGION\l|if (r5 == null) goto L7\l}"];
subgraph cluster_Region_890528237 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0020|r0.setVisibility(8)\lr0.setOnClickListener(null)\lr3.hasAction = false\l}"];
}
subgraph cluster_Region_1762161240 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000e|r3.hasAction = true\lr0.setVisibility(0)\lr0.setText(r4)\lr0.setOnClickListener(new com.google.android.material.snackbar.Snackbar$$ExternalSyntheticLambda0())\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x002b|RETURN\l|return r3\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public com.google.android.material.snackbar.Snackbar com.google.android.material.snackbar.Snackbar.setAction((r3v0 'this' com.google.android.material.snackbar.Snackbar A[IMMUTABLE_TYPE, THIS]), (r4v0 'text' java.lang.CharSequence A[D('text' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'listener' android.view.View$OnClickListener A[D('listener' android.view.View$OnClickListener), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0020 \-\> B:8:0x002b, CROSS_EDGE: B:3:0x0009 \-\> B:7:0x0020\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_6[style=dashed];
Node_4 -> Node_7;
Node_7 -> Node_8;
Node_6 -> Node_8;
Node_8 -> Node_1;
Node_0 -> Node_2;
}

