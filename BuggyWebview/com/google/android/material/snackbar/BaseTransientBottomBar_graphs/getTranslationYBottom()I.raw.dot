digraph "CFG forcom.google.android.material.snackbar.BaseTransientBottomBar.getTranslationYBottom()I" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout) = \l  (r3 I:com.google.android.material.snackbar.BaseTransientBottomBar A[D('this' com.google.android.material.snackbar.BaseTransientBottomBar\<B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>\>)])\l com.google.android.material.snackbar.BaseTransientBottomBar.view com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout  (LINE:1079)\l0x0002: INVOKE  (r0 I:int) = (r0 I:com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout) type: VIRTUAL call: com.google.android.material.snackbar.BaseTransientBottomBar.SnackbarBaseLayout.getHeight():int A[MD:():int (s)]\l0x0006: IGET  (r1 I:com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout) = \l  (r3 I:com.google.android.material.snackbar.BaseTransientBottomBar A[D('this' com.google.android.material.snackbar.BaseTransientBottomBar\<B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>\>)])\l com.google.android.material.snackbar.BaseTransientBottomBar.view com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout  (LINE:1080)\l0x0008: INVOKE  (r1 I:android.view.ViewGroup$LayoutParams) = (r1 I:com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout) type: VIRTUAL call: com.google.android.material.snackbar.BaseTransientBottomBar.SnackbarBaseLayout.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (s)]\l0x000c: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('layoutParams' android.view.ViewGroup$LayoutParams)]) android.view.ViewGroup$MarginLayoutParams  (LINE:1081)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0010|0x0010: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('layoutParams' android.view.ViewGroup$LayoutParams)])  (LINE:1082)\l0x0011: CHECK_CAST (r2 I:android.view.ViewGroup$MarginLayoutParams) = (android.view.ViewGroup$MarginLayoutParams) (r2 I:??[OBJECT, ARRAY]) \l0x0013: IGET  (r2 I:int) = (r2 I:android.view.ViewGroup$MarginLayoutParams) android.view.ViewGroup.MarginLayoutParams.bottomMargin int \l0x0015: ARITH  (r0 I:int) = (r0 I:int A[D('translationY' int)]) + (r2 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|RETURN\lORIG_RETURN\l|0x0016: RETURN  (r0 I:int A[D('translationY' int)])  (LINE:1084)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0016: RETURN  (r0 I:int A[D('translationY' int)]) A[SYNTHETIC] (LINE:1084)\l}"];
MethodNode[shape=record,label="{private int com.google.android.material.snackbar.BaseTransientBottomBar.getTranslationYBottom((r3 'this' I:com.google.android.material.snackbar.BaseTransientBottomBar\<B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>\> A[D('this' com.google.android.material.snackbar.BaseTransientBottomBar\<B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x000e \-\> B:12:0x0016\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0016: r0 'translationY' I\l  0x000c\-0x0016: r1 'layoutParams' Landroid\/view\/ViewGroup$LayoutParams;\l  0x0000\-0x0016: r3 'this' Lcom\/google\/android\/material\/snackbar\/BaseTransientBottomBar;, signature: Lcom\/google\/android\/material\/snackbar\/BaseTransientBottomBar\<TB;\>;\lTYPE_VARS: [B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

