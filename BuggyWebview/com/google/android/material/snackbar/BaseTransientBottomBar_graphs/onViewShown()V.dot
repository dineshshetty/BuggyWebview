digraph "CFG forcom.google.android.material.snackbar.BaseTransientBottomBar.onViewShown()V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|com.google.android.material.snackbar.SnackbarManager.getInstance().onShown(r3.managerCallback)\ljava.util.List\<com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback\<B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>\>\> r0 = r3.callbacks\l}"];
Node_13 [shape=record,label="{13\:\ 0x000b|if (r0 == null) goto L9\l}"];
Node_14 [shape=record,label="{14\:\ 0x000d|int r0 = r0.size()\lint r1 = r0 + (\-1)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0013|LOOP_START\lLOOP:0: B:15:0x0013\-\>B:16:0x0015\lPHI: r1 \l  PHI: (r1v2 'i' int) = (r1v1 'i' int), (r1v3 'i' int) binds: [B:14:0x000d, B:16:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \< 0) goto L6\l}"];
Node_16 [shape=record,label="{16\:\ 0x0015|LOOP_END\lLOOP:0: B:15:0x0013\-\>B:16:0x0015\l|r3.callbacks.get(r1).onShown(r3)\lint r1 = r1 + (\-1)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0023|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0023|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{void com.google.android.material.snackbar.BaseTransientBottomBar.onViewShown((r3v0 'this' com.google.android.material.snackbar.BaseTransientBottomBar\<B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>\> A[D('this' com.google.android.material.snackbar.BaseTransientBottomBar\<B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:16:0x0015 \-\> B:15:0x0013, CROSS_EDGE: B:13:0x000b \-\> B:17:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: [B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_15;
Node_18 -> Node_19;
Node_19 -> Node_11;
Node_17 -> Node_11;
}

