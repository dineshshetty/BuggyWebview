digraph "CFG forcom.google.android.material.snackbar.BaseTransientBottomBar.hideView(I)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = \l  (r1 I:com.google.android.material.snackbar.BaseTransientBottomBar A[D('this' com.google.android.material.snackbar.BaseTransientBottomBar\<B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>\>)])\l type: VIRTUAL call: com.google.android.material.snackbar.BaseTransientBottomBar.shouldAnimate():boolean A[MD:():boolean (m)] (LINE:1088)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0012 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: IGET  (r0 I:com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout) = \l  (r1 I:com.google.android.material.snackbar.BaseTransientBottomBar A[D('this' com.google.android.material.snackbar.BaseTransientBottomBar\<B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>\>)])\l com.google.android.material.snackbar.BaseTransientBottomBar.view com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout \l0x0008: INVOKE  (r0 I:int) = (r0 I:com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout) type: VIRTUAL call: com.google.android.material.snackbar.BaseTransientBottomBar.SnackbarBaseLayout.getVisibility():int A[MD:():int (s)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0012 \l}"];
Node_16 [shape=record,label="{16\:\ 0x000e|0x000e: INVOKE  \l  (r1 I:com.google.android.material.snackbar.BaseTransientBottomBar A[D('this' com.google.android.material.snackbar.BaseTransientBottomBar\<B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>\>)])\l  (r2 I:int A[D('event' int)])\l type: DIRECT call: com.google.android.material.snackbar.BaseTransientBottomBar.animateViewOut(int):void A[MD:(int):void (m)] (LINE:1089)\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0015: RETURN   A[SYNTHETIC] (LINE:1094)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|0x0012: INVOKE  \l  (r1 I:com.google.android.material.snackbar.BaseTransientBottomBar A[D('this' com.google.android.material.snackbar.BaseTransientBottomBar\<B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>\>)])\l  (r2 I:int A[D('event' int)])\l type: VIRTUAL call: com.google.android.material.snackbar.BaseTransientBottomBar.onViewHidden(int):void A[MD:(int):void (m)] (LINE:1092)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0015|RETURN\lORIG_RETURN\l|0x0015: RETURN    (LINE:1094)\l}"];
MethodNode[shape=record,label="{final void com.google.android.material.snackbar.BaseTransientBottomBar.hideView((r1 'this' I:com.google.android.material.snackbar.BaseTransientBottomBar\<B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>\> A[D('this' com.google.android.material.snackbar.BaseTransientBottomBar\<B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>\>), IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('event' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0012 \-\> B:18:0x0015, CROSS_EDGE: B:13:0x0004 \-\> B:17:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0015: r1 'this' Lcom\/google\/android\/material\/snackbar\/BaseTransientBottomBar;, signature: Lcom\/google\/android\/material\/snackbar\/BaseTransientBottomBar\<TB;\>;\l  \-1 \-0x0015: r2 'event' I\lTYPE_VARS: [B extends com.google.android.material.snackbar.BaseTransientBottomBar\<B\>]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_19;
Node_19 -> Node_11;
Node_17 -> Node_18;
Node_18 -> Node_11;
}

