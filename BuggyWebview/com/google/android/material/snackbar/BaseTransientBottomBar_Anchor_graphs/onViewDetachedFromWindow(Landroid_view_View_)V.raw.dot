digraph "CFG forcom.google.android.material.snackbar.BaseTransientBottomBar.Anchor.onViewDetachedFromWindow(Landroid\/view\/View;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r1 I:com.google.android.material.snackbar.BaseTransientBottomBar$Anchor) type: DIRECT call: com.google.android.material.snackbar.BaseTransientBottomBar.Anchor.unanchorIfNoTransientBottomBar():boolean A[MD:():boolean (m)] (LINE:1485)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0007 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|RETURN\l|0x0006: RETURN    (LINE:1486)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0007|0x0007: INVOKE  \l  (r2 I:android.view.View A[D('anchorView' android.view.View)])\l  (r1 I:android.view.ViewTreeObserver$OnGlobalLayoutListener)\l type: STATIC call: com.google.android.material.internal.ViewUtils.removeOnGlobalLayoutListener(android.view.View, android.view.ViewTreeObserver$OnGlobalLayoutListener):void A[MD:(android.view.View, android.view.ViewTreeObserver$OnGlobalLayoutListener):void (m)] (LINE:1488)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:1489)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.snackbar.BaseTransientBottomBar.Anchor.onViewDetachedFromWindow((r1 'this' I:com.google.android.material.snackbar.BaseTransientBottomBar$Anchor A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.View A[D('anchorView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x000a \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000a: r2 'anchorView' Landroid\/view\/View;\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.OnAttachStateChangeListener.onViewDetachedFromWindow(android.view.View):void\}]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

