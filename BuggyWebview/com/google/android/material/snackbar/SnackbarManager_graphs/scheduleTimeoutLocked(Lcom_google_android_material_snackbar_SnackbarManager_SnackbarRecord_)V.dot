digraph "CFG forcom.google.android.material.snackbar.SnackbarManager.scheduleTimeoutLocked(Lcom\/google\/android\/material\/snackbar\/SnackbarManager$SnackbarRecord;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0003|if (r6.duration != (\-2)) goto L5\l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|r0 = com.google.android.material.snackbar.SnackbarManager.LONG_DURATION_MS\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|if (r6.duration \<= 0) goto L10\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|int r0 = r6.duration\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|PHI: r0 \l  PHI: (r0v3 'durationMs' int) = (r0v1 'durationMs' int), (r0v2 'durationMs' int), (r0v4 'durationMs' int) binds: [B:22:0x0012, B:23:0x0014, B:20:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|r5.handler.removeCallbacksAndMessages(r6)\landroid.os.Handler r1 = r5.handler\lr1.sendMessageDelayed(android.os.Message.obtain(r1, 0, r6), (long) r0)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0026|RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ 0x000f}"];
Node_22 [shape=record,label="{22\:\ 0x0012|if (r6.duration != (\-1)) goto L8\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|r0 = com.google.android.material.snackbar.SnackbarManager.SHORT_DURATION_MS\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.snackbar.SnackbarManager.scheduleTimeoutLocked((r5v0 'this' com.google.android.material.snackbar.SnackbarManager A[IMMUTABLE_TYPE, THIS]), (r6v0 'r' com.google.android.material.snackbar.SnackbarManager$SnackbarRecord A[D('r' com.google.android.material.snackbar.SnackbarManager$SnackbarRecord), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0026 \-\> B:14:?, CROSS_EDGE: B:23:0x0014 \-\> B:24:0x0016, CROSS_EDGE: B:22:0x0012 \-\> B:24:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
}

