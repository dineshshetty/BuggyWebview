digraph "CFG forcom.google.android.material.snackbar.SnackbarManager.onDismissed(Lcom\/google\/android\/material\/snackbar\/SnackbarManager$Callback;)V" {
subgraph cluster_Region_408062204 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0000}"];
subgraph cluster_SynchronizedRegion_1869506636 {
label = "Synchronized:R(2:2|(1:(2:6|(1:8))))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0002}"];
subgraph cluster_Region_1590861671 {
label = "R(1:(2:6|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1615928834 {
label = "IF [B:21:0x0007] THEN: R(2:6|(1:8)) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0007|if (isCurrentSnackbarLocked(r3) != false) goto L6\l}"];
subgraph cluster_Region_1825079196 {
label = "R(2:6|(1:8))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0009|TryCatch #0 \{, blocks: (B:20:0x0003, B:22:0x0009, B:24:0x0010, B:25:0x0013), top: B:30:0x0003 \}\lCatch: all \-\> 0x0015\l|r2.currentSnackbar = null     \/\/ Catch: java.lang.Throwable \-\> L15\l}"];
subgraph cluster_IfRegion_1886934593 {
label = "IF [B:23:0x000e] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000e|if (r2.nextSnackbar != null) goto L8\l}"];
subgraph cluster_Region_983287438 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0010|TryCatch #0 \{, blocks: (B:20:0x0003, B:22:0x0009, B:24:0x0010, B:25:0x0013), top: B:30:0x0003 \}\lCatch: all \-\> 0x0015\l|showNextSnackbarLocked()     \/\/ Catch: java.lang.Throwable \-\> L15\l}"];
}
}
}
}
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{, blocks: (B:20:0x0003, B:22:0x0009, B:24:0x0010, B:25:0x0013), top: B:30:0x0003 \}\lCatch: all \-\> 0x0015\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0013|DONT_GENERATE\lTryCatch #0 \{, blocks: (B:20:0x0003, B:22:0x0009, B:24:0x0010, B:25:0x0013), top: B:30:0x0003 \}\lCatch: all \-\> 0x0015\l|monitor\-exit()     \/\/ Catch: java.lang.Throwable \-\> L15\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0014}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,color=red,label="{31\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0015|REMOVE\lExcHandler: all \-\> 0x0015\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0016|TRY_LEAVE\lREMOVE\lCatch: all \-\> 0x0015\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0017|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.snackbar.SnackbarManager.onDismissed((r2v0 'this' com.google.android.material.snackbar.SnackbarManager A[IMMUTABLE_TYPE, THIS]), (r3v0 'callback' com.google.android.material.snackbar.SnackbarManager$Callback A[D('callback' com.google.android.material.snackbar.SnackbarManager$Callback), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0017 \-\> B:17:?, CROSS_EDGE: B:23:0x000e \-\> B:25:0x0013, CROSS_EDGE: B:21:0x0007 \-\> B:25:0x0013, CROSS_EDGE: B:30:0x0003 \-\> B:27:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_18 -> Node_19;
Node_19 -> Node_30;
Node_21 -> Node_22;
Node_21 -> Node_25[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_25;
Node_16 -> Node_18;
Node_30 -> Node_20;
Node_30 -> Node_27;
Node_20 -> Node_21;
Node_25 -> Node_26;
Node_25 -> Node_31;
Node_26 -> Node_17;
Node_31 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_17;
}

