digraph "CFG forcom.google.android.material.snackbar.SnackbarManager.isNextSnackbarLocked(Lcom\/google\/android\/material\/snackbar\/SnackbarManager$Callback;)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) = (r1 I:com.google.android.material.snackbar.SnackbarManager) com.google.android.material.snackbar.SnackbarManager.nextSnackbar com.google.android.material.snackbar.SnackbarManager$SnackbarRecord  (LINE:220)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000c \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: INVOKE  (r0 I:boolean) = \l  (r0 I:com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)\l  (r2 I:com.google.android.material.snackbar.SnackbarManager$Callback A[D('callback' com.google.android.material.snackbar.SnackbarManager$Callback)])\l type: VIRTUAL call: com.google.android.material.snackbar.SnackbarManager.SnackbarRecord.isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback):boolean A[MD:(com.google.android.material.snackbar.SnackbarManager$Callback):boolean (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000c \l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|SYNTHETIC\lRETURN\l|0x000a: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000d: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|RETURN\lORIG_RETURN\l|0x000c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean com.google.android.material.snackbar.SnackbarManager.isNextSnackbarLocked((r1 'this' I:com.google.android.material.snackbar.SnackbarManager A[IMMUTABLE_TYPE, THIS]), (r2 I:com.google.android.material.snackbar.SnackbarManager$Callback A[D('callback' com.google.android.material.snackbar.SnackbarManager$Callback), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000c \-\> B:18:0x000d, CROSS_EDGE: B:13:0x0002 \-\> B:17:0x000c\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000d: r2 'callback' Lcom\/google\/android\/material\/snackbar\/SnackbarManager$Callback;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

