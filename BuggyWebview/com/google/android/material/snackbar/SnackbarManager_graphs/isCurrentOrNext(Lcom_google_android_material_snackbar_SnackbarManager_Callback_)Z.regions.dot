digraph "CFG forcom.google.android.material.snackbar.SnackbarManager.isCurrentOrNext(Lcom\/google\/android\/material\/snackbar\/SnackbarManager$Callback;)Z" {
subgraph cluster_Region_1574220002 {
label = "R(2:2|11) | DECL_VAR: boolean null\l";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_293992200 {
label = "Synchronized:R(2:2|(1:5))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0002}"];
subgraph cluster_Region_953969803 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0007|r1 = isCurrentSnackbarLocked(r3) \|\| isNextSnackbarLocked(r3)\l}"];
}
}
Node_30 [shape=record,label="{30\:\ 0x0014|RETURN\l|return r1\l}"];
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0000}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{, blocks: (B:22:0x0003, B:24:0x0009, B:29:0x0013), top: B:34:0x0003 \}\lCatch: all \-\> 0x0015\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0009|TryCatch #0 \{, blocks: (B:22:0x0003, B:24:0x0009, B:29:0x0013), top: B:34:0x0003 \}\lCatch: all \-\> 0x0015\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x000d|REMOVE\lADDED_TO_REGION\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x000f|ADDED_TO_REGION\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0010}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0013|DONT_GENERATE\lTryCatch #0 \{, blocks: (B:22:0x0003, B:24:0x0009, B:29:0x0013), top: B:34:0x0003 \}\lCatch: all \-\> 0x0015\lPHI: r1 \l  PHI: (r1v3 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|monitor\-exit()     \/\/ Catch: java.lang.Throwable \-\> L15\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0012|ADDED_TO_REGION\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0015|REMOVE\lExcHandler: all \-\> 0x0015\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0016|TRY_LEAVE\lREMOVE\lCatch: all \-\> 0x0015\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0017|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.snackbar.SnackbarManager.isCurrentOrNext((r2v0 'this' com.google.android.material.snackbar.SnackbarManager A[IMMUTABLE_TYPE, THIS]), (r3v0 'callback' com.google.android.material.snackbar.SnackbarManager$Callback A[D('callback' com.google.android.material.snackbar.SnackbarManager$Callback), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0017 \-\> B:19:?, CROSS_EDGE: B:27:0x0010 \-\> B:29:0x0013, CROSS_EDGE: B:23:0x0007 \-\> B:28:0x0012, CROSS_EDGE: B:34:0x0003 \-\> B:31:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_21 -> Node_34;
Node_23 -> Node_24;
Node_23 -> Node_28;
Node_30 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_34 -> Node_22;
Node_34 -> Node_31;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_35;
Node_35 -> Node_31;
Node_28 -> Node_29;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_19;
}

