digraph "CFG forcom.google.android.material.snackbar.Snackbar.SnackbarLayout.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  \l  (r7 I:com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout)\l  (r8 I:int A[D('widthMeasureSpec' int)])\l  (r9 I:int A[D('heightMeasureSpec' int)])\l type: SUPER call: com.google.android.material.snackbar.BaseTransientBottomBar.SnackbarBaseLayout.onMeasure(int, int):void A[MD:(int, int):void (m)] (LINE:513)\l0x0003: INVOKE  (r0 I:int) = (r7 I:com.google.android.material.snackbar.Snackbar$SnackbarLayout) type: VIRTUAL call: com.google.android.material.snackbar.Snackbar.SnackbarLayout.getChildCount():int A[MD:():int (s)] (LINE:518)\l0x0007: INVOKE  (r1 I:int) = (r7 I:com.google.android.material.snackbar.Snackbar$SnackbarLayout) type: VIRTUAL call: com.google.android.material.snackbar.Snackbar.SnackbarLayout.getMeasuredWidth():int A[MD:():int (s)] (LINE:519)\l0x000b: INVOKE  (r2 I:int) = (r7 I:com.google.android.material.snackbar.Snackbar$SnackbarLayout) type: VIRTUAL call: com.google.android.material.snackbar.Snackbar.SnackbarLayout.getPaddingLeft():int A[MD:():int (s)]\l0x000f: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0010: INVOKE  (r2 I:int) = (r7 I:com.google.android.material.snackbar.Snackbar$SnackbarLayout) type: VIRTUAL call: com.google.android.material.snackbar.Snackbar.SnackbarLayout.getPaddingRight():int A[MD:():int (s)]\l0x0014: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0015: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:520)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|LOOP_START\lLOOP:0: B:3:0x0016\-\>B:7:0x0037\l|0x0016: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:9:0x003a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: INVOKE  (r3 I:android.view.View) = (r7 I:com.google.android.material.snackbar.Snackbar$SnackbarLayout), (r2 I:int A[D('i' int)]) type: VIRTUAL call: com.google.android.material.snackbar.Snackbar.SnackbarLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:521)\l0x001c: INVOKE  (r4 I:android.view.ViewGroup$LayoutParams) = (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:522)\l0x0020: IGET  (r4 I:int) = (r4 I:android.view.ViewGroup$LayoutParams) android.view.ViewGroup.LayoutParams.width int \l0x0022: CONST  (r5 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0037 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: CONST  (r4 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:524)\l0x0028: INVOKE  (r5 I:int) = (r1 I:int A[D('availableWidth' int)]), (r4 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x002c: INVOKE  (r6 I:int) = (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:525)\l0x0030: INVOKE  (r4 I:int) = (r6 I:int), (r4 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x0034: INVOKE  (r3 I:android.view.View A[D('child' android.view.View)]), (r5 I:int), (r4 I:int) type: VIRTUAL call: android.view.View.measure(int, int):void A[MD:(int, int):void (c)] (LINE:523)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|LOOP_END\lLOOP:0: B:3:0x0016\-\>B:7:0x0037\l|0x0037: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:520)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|RETURN\l|0x003a: RETURN    (LINE:528)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.snackbar.Snackbar.SnackbarLayout.onMeasure((r7 'this' I:com.google.android.material.snackbar.Snackbar$SnackbarLayout A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:7:0x0037 \-\> B:3:0x0016, CROSS_EDGE: B:5:0x0023 \-\> B:7:0x0037\lDebug Info:\l  0x001c\-0x0037: r3 'child' Landroid\/view\/View;\l  0x0016\-0x003a: r2 'i' I\l  0x0007\-0x003a: r0 'childCount' I\l  0x0015\-0x003a: r1 'availableWidth' I\l  \-1 \-0x003a: r8 'widthMeasureSpec' I\l  \-1 \-0x003a: r9 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_10;
Node_10 -> Node_7;
Node_7 -> Node_3;
Node_11 -> Node_7;
Node_9 -> Node_8;
Node_8 -> Node_1;
}

