digraph "CFG forcom.google.android.material.snackbar.SnackbarContentLayout.updateTopBottomPadding(Landroid\/view\/View;II)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000}"];
Node_11 [shape=record,label="{11\:\ 0x0004|if (androidx.core.view.ViewCompat.isPaddingRelative(r2) == false) goto L6\l}"];
Node_12 [shape=record,label="{12\:\ 0x0007|androidx.core.view.ViewCompat.setPaddingRelative(r2, androidx.core.view.ViewCompat.getPaddingStart(r2), r3, androidx.core.view.ViewCompat.getPaddingEnd(r2), r4)\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0013|r2.setPadding(r2.getPaddingLeft(), r3, r2.getPaddingRight(), r4)\l}"];
Node_14 [shape=record,label="{14\:\ 0x001e|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{private static void com.google.android.material.snackbar.SnackbarContentLayout.updateTopBottomPadding((r2v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'topPadding' int A[D('topPadding' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'bottomPadding' int A[D('bottomPadding' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0013 \-\> B:14:0x001e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

