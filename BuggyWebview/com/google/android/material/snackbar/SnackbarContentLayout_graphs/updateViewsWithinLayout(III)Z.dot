digraph "CFG forcom.google.android.material.snackbar.SnackbarContentLayout.updateViewsWithinLayout(III)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|r0 = false\l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|if (r3 == getOrientation()) goto L4\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|setOrientation(r3)\lr0 = true\l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|PHI: r0 \l  PHI: (r0v1 'changed' boolean) = (r0v0 'changed' boolean), (r0v3 'changed' boolean) binds: [B:15:0x0005, B:16:0x0007] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|if (r2.messageView.getPaddingTop() != r4) goto L10\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013}"];
Node_20 [shape=record,label="{20\:\ 0x0019|if (r2.messageView.getPaddingBottom() == r5) goto L8\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x001b|updateTopBottomPadding(r2.messageView, r4, r5)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0021|RETURN\lORIG_RETURN\l|return true\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.material.snackbar.SnackbarContentLayout.updateViewsWithinLayout((r2v0 'this' com.google.android.material.snackbar.SnackbarContentLayout A[IMMUTABLE_TYPE, THIS]), (r3v0 'orientation' int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'messagePadTop' int A[D('messagePadTop' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'messagePadBottom' int A[D('messagePadBottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0019 \-\> B:22:0x0021, CROSS_EDGE: B:18:0x0011 \-\> B:21:0x001b, CROSS_EDGE: B:15:0x0005 \-\> B:17:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_22;
Node_22 -> Node_13;
}

