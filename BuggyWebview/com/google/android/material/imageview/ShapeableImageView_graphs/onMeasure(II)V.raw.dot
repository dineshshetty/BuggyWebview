digraph "CFG forcom.google.android.material.imageview.ShapeableImageView.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  \l  (r4 I:androidx.appcompat.widget.AppCompatImageView)\l  (r5 I:int A[D('widthMeasureSpec' int)])\l  (r6 I:int A[D('heightMeasureSpec' int)])\l type: SUPER call: androidx.appcompat.widget.AppCompatImageView.onMeasure(int, int):void A[MD:(int, int):void (c)] (LINE:157)\l0x0003: IGET  (r0 I:boolean) = (r4 I:com.google.android.material.imageview.ShapeableImageView) com.google.android.material.imageview.ShapeableImageView.hasAdjustedPaddingAfterLayoutDirectionResolved boolean  (LINE:158)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0008 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|RETURN\l|0x0007: RETURN    (LINE:159)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:162)\l0x000a: CONST  (r1 I:??[int, float, short, byte, char]) = (19 ??[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IF  (r0 I:??[int, byte, short, char]) \<= (r1 I:??[int, byte, short, char])  \-\> B:10:0x0015 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: INVOKE  (r0 I:boolean) = (r4 I:com.google.android.material.imageview.ShapeableImageView) type: VIRTUAL call: com.google.android.material.imageview.ShapeableImageView.isLayoutDirectionResolved():boolean A[MD:():boolean (s)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0015 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|RETURN\l|0x0014: RETURN    (LINE:163)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|0x0015: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:166)\l0x0016: IPUT  (r0 I:boolean), (r4 I:com.google.android.material.imageview.ShapeableImageView) com.google.android.material.imageview.ShapeableImageView.hasAdjustedPaddingAfterLayoutDirectionResolved boolean \l0x0018: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:170)\l0x001a: CONST  (r1 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:19:0x003f \l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|0x001e: INVOKE  (r0 I:boolean) = (r4 I:com.google.android.material.imageview.ShapeableImageView) type: VIRTUAL call: com.google.android.material.imageview.ShapeableImageView.isPaddingRelative():boolean A[MD:():boolean (s)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|0x0022: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x002b \l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|0x0024: INVOKE  (r0 I:boolean) = (r4 I:com.google.android.material.imageview.ShapeableImageView) type: DIRECT call: com.google.android.material.imageview.ShapeableImageView.isContentPaddingRelative():boolean A[MD:():boolean (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0028|0x0028: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x003f \l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|0x002b: INVOKE  (r0 I:int) = (r4 I:androidx.appcompat.widget.AppCompatImageView) type: SUPER call: androidx.appcompat.widget.AppCompatImageView.getPaddingStart():int A[MD:():int (s)] (LINE:172)\l0x002f: INVOKE  (r1 I:int) = (r4 I:androidx.appcompat.widget.AppCompatImageView) type: SUPER call: androidx.appcompat.widget.AppCompatImageView.getPaddingTop():int A[MD:():int (s)] (LINE:173)\l0x0033: INVOKE  (r2 I:int) = (r4 I:androidx.appcompat.widget.AppCompatImageView) type: SUPER call: androidx.appcompat.widget.AppCompatImageView.getPaddingEnd():int A[MD:():int (s)] (LINE:174)\l0x0037: INVOKE  (r3 I:int) = (r4 I:androidx.appcompat.widget.AppCompatImageView) type: SUPER call: androidx.appcompat.widget.AppCompatImageView.getPaddingBottom():int A[MD:():int (s)] (LINE:175)\l0x003b: INVOKE  (r4 I:com.google.android.material.imageview.ShapeableImageView), (r0 I:int), (r1 I:int), (r2 I:int), (r3 I:int) type: VIRTUAL call: com.google.android.material.imageview.ShapeableImageView.setPaddingRelative(int, int, int, int):void A[MD:(int, int, int, int):void (m)] (LINE:171)\l}"];
Node_18 [shape=record,label="{18\:\ 0x003e|RETURN\l|0x003e: RETURN    (LINE:176)\l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|0x0040: INVOKE  (r0 I:int) = (r4 I:androidx.appcompat.widget.AppCompatImageView) type: SUPER call: androidx.appcompat.widget.AppCompatImageView.getPaddingLeft():int A[MD:():int (s)] (LINE:180)\l0x0044: INVOKE  (r1 I:int) = (r4 I:androidx.appcompat.widget.AppCompatImageView) type: SUPER call: androidx.appcompat.widget.AppCompatImageView.getPaddingTop():int A[MD:():int (s)] (LINE:181)\l0x0048: INVOKE  (r2 I:int) = (r4 I:androidx.appcompat.widget.AppCompatImageView) type: SUPER call: androidx.appcompat.widget.AppCompatImageView.getPaddingRight():int A[MD:():int (s)] (LINE:182)\l0x004c: INVOKE  (r3 I:int) = (r4 I:androidx.appcompat.widget.AppCompatImageView) type: SUPER call: androidx.appcompat.widget.AppCompatImageView.getPaddingBottom():int A[MD:():int (s)] (LINE:183)\l0x0050: INVOKE  (r4 I:com.google.android.material.imageview.ShapeableImageView), (r0 I:int), (r1 I:int), (r2 I:int), (r3 I:int) type: VIRTUAL call: com.google.android.material.imageview.ShapeableImageView.setPadding(int, int, int, int):void A[MD:(int, int, int, int):void (m)] (LINE:179)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0053|RETURN\l|0x0053: RETURN    (LINE:184)\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.imageview.ShapeableImageView.onMeasure((r4 'this' I:com.google.android.material.imageview.ShapeableImageView A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:9:0x0014 \-\> B:1:?, CROSS_EDGE: B:18:0x003e \-\> B:1:?, CROSS_EDGE: B:20:0x0053 \-\> B:1:?, CROSS_EDGE: B:13:0x0022 \-\> B:17:0x002b, CROSS_EDGE: B:11:0x001c \-\> B:19:0x003f, CROSS_EDGE: B:6:0x000c \-\> B:10:0x0015\lDebug Info:\l  \-1 \-0x0053: r5 'widthMeasureSpec' I\l  \-1 \-0x0053: r6 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_17[style=dashed];
Node_15 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_19 -> Node_20;
Node_20 -> Node_1;
}

