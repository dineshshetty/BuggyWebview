digraph "CFG forcom.google.android.material.imageview.ShapeableImageView.setContentPadding(IIII)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char])  (LINE:209)\l0x0002: IPUT  (r0 I:int), (r5 I:com.google.android.material.imageview.ShapeableImageView) com.google.android.material.imageview.ShapeableImageView.startContentPadding int \l0x0004: IPUT  (r0 I:int), (r5 I:com.google.android.material.imageview.ShapeableImageView) com.google.android.material.imageview.ShapeableImageView.endContentPadding int  (LINE:210)\l0x0007: INVOKE  (r0 I:int) = (r5 I:androidx.appcompat.widget.AppCompatImageView) type: SUPER call: androidx.appcompat.widget.AppCompatImageView.getPaddingLeft():int A[MD:():int (s)] (LINE:215)\l0x000b: IGET  (r1 I:int) = (r5 I:com.google.android.material.imageview.ShapeableImageView) com.google.android.material.imageview.ShapeableImageView.leftContentPadding int \l0x000d: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x000e: ARITH  (r0 I:int) = (r0 I:int) + (r6 I:int A[D('left' int)]) \l0x000f: INVOKE  (r1 I:int) = (r5 I:androidx.appcompat.widget.AppCompatImageView) type: SUPER call: androidx.appcompat.widget.AppCompatImageView.getPaddingTop():int A[MD:():int (s)] (LINE:216)\l0x0013: IGET  (r2 I:int) = (r5 I:com.google.android.material.imageview.ShapeableImageView) com.google.android.material.imageview.ShapeableImageView.topContentPadding int \l0x0015: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0016: ARITH  (r1 I:int) = (r1 I:int) + (r7 I:int A[D('top' int)]) \l0x0017: INVOKE  (r2 I:int) = (r5 I:androidx.appcompat.widget.AppCompatImageView) type: SUPER call: androidx.appcompat.widget.AppCompatImageView.getPaddingRight():int A[MD:():int (s)] (LINE:217)\l0x001b: IGET  (r3 I:int) = (r5 I:com.google.android.material.imageview.ShapeableImageView) com.google.android.material.imageview.ShapeableImageView.rightContentPadding int \l0x001d: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x001e: ARITH  (r2 I:int) = (r2 I:int) + (r8 I:int A[D('right' int)]) \l0x001f: INVOKE  (r3 I:int) = (r5 I:androidx.appcompat.widget.AppCompatImageView) type: SUPER call: androidx.appcompat.widget.AppCompatImageView.getPaddingBottom():int A[MD:():int (s)] (LINE:218)\l0x0023: IGET  (r4 I:int) = (r5 I:com.google.android.material.imageview.ShapeableImageView) com.google.android.material.imageview.ShapeableImageView.bottomContentPadding int \l0x0025: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) \l0x0026: ARITH  (r3 I:int) = (r3 I:int) + (r9 I:int A[D('bottom' int)]) \l0x0027: INVOKE  (r5 I:androidx.appcompat.widget.AppCompatImageView), (r0 I:int), (r1 I:int), (r2 I:int), (r3 I:int) type: SUPER call: androidx.appcompat.widget.AppCompatImageView.setPadding(int, int, int, int):void A[MD:(int, int, int, int):void (s)] (LINE:214)\l0x002a: IPUT  (r6 I:int A[D('left' int)]), (r5 I:com.google.android.material.imageview.ShapeableImageView) com.google.android.material.imageview.ShapeableImageView.leftContentPadding int  (LINE:220)\l0x002c: IPUT  (r7 I:int A[D('top' int)]), (r5 I:com.google.android.material.imageview.ShapeableImageView) com.google.android.material.imageview.ShapeableImageView.topContentPadding int  (LINE:221)\l0x002e: IPUT  (r8 I:int A[D('right' int)]), (r5 I:com.google.android.material.imageview.ShapeableImageView) com.google.android.material.imageview.ShapeableImageView.rightContentPadding int  (LINE:222)\l0x0030: IPUT  (r9 I:int A[D('bottom' int)]), (r5 I:com.google.android.material.imageview.ShapeableImageView) com.google.android.material.imageview.ShapeableImageView.bottomContentPadding int  (LINE:223)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0032|RETURN\l|0x0032: RETURN    (LINE:224)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.imageview.ShapeableImageView.setContentPadding((r5 'this' I:com.google.android.material.imageview.ShapeableImageView A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0032: r6 'left' I\l  \-1 \-0x0032: r7 'top' I\l  \-1 \-0x0032: r8 'right' I\l  \-1 \-0x0032: r9 'bottom' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

