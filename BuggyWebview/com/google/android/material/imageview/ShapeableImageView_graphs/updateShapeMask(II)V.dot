digraph "CFG forcom.google.android.material.imageview.ShapeableImageView.updateShapeMask(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|r5.destination.set((float) getPaddingLeft(), (float) getPaddingTop(), (float) (r6 \- getPaddingRight()), (float) (r7 \- getPaddingBottom()))\lr5.pathProvider.calculatePath(r5.shapeAppearanceModel, 1.0f, r5.destination, r5.path)\lr5.maskPath.rewind()\lr5.maskPath.addPath(r5.path)\lr5.maskRect.set(0.0f, 0.0f, (float) r6, (float) r7)\lr5.maskPath.addRect(r5.maskRect, android.graphics.Path.Direction.CCW)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0047|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.imageview.ShapeableImageView.updateShapeMask((r5v0 'this' com.google.android.material.imageview.ShapeableImageView A[IMMUTABLE_TYPE, THIS]), (r6v0 'width' int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'height' int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

