digraph "CFG forcom.google.android.material.imageview.ShapeableImageView.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|super.onMeasure(r5, r6)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r4.hasAdjustedPaddingAfterLayoutDirectionResolved == false) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008}"];
Node_6 [shape=record,label="{6\:\ 0x000c|if (android.os.Build.VERSION.SDK_INT \<= 19) goto L10\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e}"];
Node_8 [shape=record,label="{8\:\ 0x0012|if (isLayoutDirectionResolved() != false) goto L10\l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|r4.hasAdjustedPaddingAfterLayoutDirectionResolved = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|if (android.os.Build.VERSION.SDK_INT \< 21) goto L18\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e}"];
Node_13 [shape=record,label="{13\:\ 0x0022|if (isPaddingRelative() != false) goto L16\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024}"];
Node_15 [shape=record,label="{15\:\ 0x0028|if (isContentPaddingRelative() == false) goto L18\l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|setPaddingRelative(super.getPaddingStart(), super.getPaddingTop(), super.getPaddingEnd(), super.getPaddingBottom())\l}"];
Node_18 [shape=record,label="{18\:\ 0x003e|RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|setPadding(super.getPaddingLeft(), super.getPaddingTop(), super.getPaddingRight(), super.getPaddingBottom())\l}"];
Node_20 [shape=record,label="{20\:\ 0x0053|RETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.imageview.ShapeableImageView.onMeasure((r4v0 'this' com.google.android.material.imageview.ShapeableImageView A[IMMUTABLE_TYPE, THIS]), (r5v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:9:0x0014 \-\> B:1:?, CROSS_EDGE: B:18:0x003e \-\> B:1:?, CROSS_EDGE: B:20:0x0053 \-\> B:1:?, CROSS_EDGE: B:13:0x0022 \-\> B:17:0x002b, CROSS_EDGE: B:11:0x001c \-\> B:19:0x003f, CROSS_EDGE: B:6:0x000c \-\> B:10:0x0015\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_17[style=dashed];
Node_15 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_19 -> Node_20;
Node_20 -> Node_1;
}

