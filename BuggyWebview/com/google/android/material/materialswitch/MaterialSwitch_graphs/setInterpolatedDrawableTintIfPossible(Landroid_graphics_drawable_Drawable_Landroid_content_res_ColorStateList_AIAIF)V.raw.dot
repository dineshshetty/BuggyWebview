digraph "CFG forcom.google.android.material.materialswitch.MaterialSwitch.setInterpolatedDrawableTintIfPossible(Landroid\/graphics\/drawable\/Drawable;Landroid\/content\/res\/ColorStateList;[I[IF)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawable' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017  (LINE:454)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tint' android.content.res.ColorStateList)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0005 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|0x0006: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:461)\l0x0007: INVOKE  (r1 I:int) = \l  (r3 I:android.content.res.ColorStateList A[D('tint' android.content.res.ColorStateList)])\l  (r4 I:int[] A[D('stateUnchecked' int[])])\l  (r0 I:int)\l type: VIRTUAL call: android.content.res.ColorStateList.getColorForState(int[], int):int A[MD:(int[], int):int (c)]\l0x000b: INVOKE  (r0 I:int) = \l  (r3 I:android.content.res.ColorStateList A[D('tint' android.content.res.ColorStateList)])\l  (r5 I:int[] A[D('stateChecked' int[])])\l  (r0 I:int)\l type: VIRTUAL call: android.content.res.ColorStateList.getColorForState(int[], int):int A[MD:(int[], int):int (c)] (LINE:462)\l0x000f: INVOKE  (r0 I:int) = (r1 I:int), (r0 I:int), (r6 I:float A[D('thumbPosition' float)]) type: STATIC call: androidx.core.graphics.ColorUtils.blendARGB(int, int, float):int A[MD:(int, int, float):int (m)] (LINE:460)\l0x0013: INVOKE  (r2 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]), (r0 I:int) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setTint(android.graphics.drawable.Drawable, int):void A[MD:(android.graphics.drawable.Drawable, int):void (m)] (LINE:458)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|RETURN\l|0x0016: RETURN    (LINE:464)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|0x0017: RETURN   A[SYNTHETIC] (LINE:455)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|RETURN\lORIG_RETURN\l|0x0017: RETURN    (LINE:455)\l}"];
MethodNode[shape=record,label="{private static void com.google.android.material.materialswitch.MaterialSwitch.setInterpolatedDrawableTintIfPossible((r2 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.content.res.ColorStateList A[D('tint' android.content.res.ColorStateList), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int[] A[D('stateUnchecked' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int[] A[D('stateChecked' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[D('thumbPosition' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0017 \-\> B:1:?, CROSS_EDGE: B:2:0x0000 \-\> B:7:0x0017\lDebug Info:\l  \-1 \-0x0017: r2 'drawable' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x0017: r3 'tint' Landroid\/content\/res\/ColorStateList;\l  \-1 \-0x0017: r4 'stateUnchecked' [I\l  \-1 \-0x0017: r5 'stateChecked' [I\l  \-1 \-0x0017: r6 'thumbPosition' F\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_5;
Node_3 -> Node_8[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_8 -> Node_1;
Node_7 -> Node_1;
}

