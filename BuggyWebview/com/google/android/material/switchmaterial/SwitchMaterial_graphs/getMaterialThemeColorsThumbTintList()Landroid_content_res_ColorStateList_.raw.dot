digraph "CFG forcom.google.android.material.switchmaterial.SwitchMaterial.getMaterialThemeColorsThumbTintList()Landroid\/content\/res\/ColorStateList;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:android.content.res.ColorStateList) = (r8 I:com.google.android.material.switchmaterial.SwitchMaterial) com.google.android.material.switchmaterial.SwitchMaterial.materialThemeColorsThumbTintList android.content.res.ColorStateList  (LINE:121)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0052 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: SGET  (r0 I:int) =  com.google.android.material.R.attr.colorSurface int  (LINE:122)\l0x0006: INVOKE  (r0 I:int) = (r8 I:android.view.View), (r0 I:int) type: STATIC call: com.google.android.material.color.MaterialColors.getColor(android.view.View, int):int A[MD:(android.view.View, int):int (m)]\l0x000a: SGET  (r1 I:int) =  com.google.android.material.R.attr.colorControlActivated int  (LINE:123)\l0x000c: INVOKE  (r1 I:int) = (r8 I:android.view.View), (r1 I:int) type: STATIC call: com.google.android.material.color.MaterialColors.getColor(android.view.View, int):int A[MD:(android.view.View, int):int (m)]\l0x0010: INVOKE  (r2 I:android.content.res.Resources) = (r8 I:com.google.android.material.switchmaterial.SwitchMaterial) type: VIRTUAL call: com.google.android.material.switchmaterial.SwitchMaterial.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (s)] (LINE:124)\l0x0014: SGET  (r3 I:int) =  com.google.android.material.R.dimen.mtrl_switch_thumb_elevation int \l0x0016: INVOKE  (r2 I:float) = (r2 I:android.content.res.Resources), (r3 I:int) type: VIRTUAL call: android.content.res.Resources.getDimension(int):float A[MD:(int):float throws android.content.res.Resources$NotFoundException (c)]\l0x001a: IGET  (r3 I:com.google.android.material.elevation.ElevationOverlayProvider) = (r8 I:com.google.android.material.switchmaterial.SwitchMaterial) com.google.android.material.switchmaterial.SwitchMaterial.elevationOverlayProvider com.google.android.material.elevation.ElevationOverlayProvider  (LINE:125)\l0x001c: INVOKE  (r3 I:boolean) = (r3 I:com.google.android.material.elevation.ElevationOverlayProvider) type: VIRTUAL call: com.google.android.material.elevation.ElevationOverlayProvider.isThemeElevationOverlayEnabled():boolean A[MD:():boolean (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0027 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: INVOKE  (r3 I:float) = (r8 I:android.view.View) type: STATIC call: com.google.android.material.internal.ViewUtils.getParentAbsoluteElevation(android.view.View):float A[MD:(android.view.View):float (m)] (LINE:126)\l0x0026: ARITH  (r2 I:float) = (r2 I:float A[D('thumbElevation' float)]) + (r3 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: IGET  (r3 I:com.google.android.material.elevation.ElevationOverlayProvider) = (r8 I:com.google.android.material.switchmaterial.SwitchMaterial) com.google.android.material.switchmaterial.SwitchMaterial.elevationOverlayProvider com.google.android.material.elevation.ElevationOverlayProvider  (LINE:128)\l0x0029: INVOKE  (r3 I:int) = \l  (r3 I:com.google.android.material.elevation.ElevationOverlayProvider)\l  (r0 I:int A[D('colorSurface' int)])\l  (r2 I:float A[D('thumbElevation' float)])\l type: VIRTUAL call: com.google.android.material.elevation.ElevationOverlayProvider.compositeOverlayIfNeeded(int, float):int A[MD:(int, float):int (m)] (LINE:129)\l0x002d: SGET  (r4 I:int[][]) =  com.google.android.material.switchmaterial.SwitchMaterial.ENABLED_CHECKED_STATES int[][]  (LINE:131)\l0x002f: ARRAY_LENGTH  (r5 I:int) = (r4 I:??[]) \l0x0030: NEW_ARRAY  (r5 I:int[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0032: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:132)\l0x0033: CONST  (r7 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x0035: INVOKE  (r7 I:int) = (r0 I:int A[D('colorSurface' int)]), (r1 I:int A[D('colorControlActivated' int)]), (r7 I:float) type: STATIC call: com.google.android.material.color.MaterialColors.layer(int, int, float):int A[MD:(int, int, float):int (m)] (LINE:133)\l0x0039: APUT  \l  (r5 I:??[int, float][] A[D('switchThumbColorsList' int[])])\l  (r6 I:??[int, short, byte, char])\l  (r7 I:??[int, float, short, byte, char])\l \l0x003b: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:134)\l0x003c: APUT  \l  (r5 I:??[int, float][] A[D('switchThumbColorsList' int[])])\l  (r6 I:??[int, short, byte, char])\l  (r3 I:??[int, float, short, byte, char] A[D('colorThumbOff' int)])\l \l0x003e: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:135)\l0x003f: CONST  (r7 I:??[int, float, short, byte, char]) = (1052938076(0x3ec28f5c, float:0.38) ??[int, float, short, byte, char]) \l0x0042: INVOKE  (r7 I:int) = (r0 I:int A[D('colorSurface' int)]), (r1 I:int A[D('colorControlActivated' int)]), (r7 I:float) type: STATIC call: com.google.android.material.color.MaterialColors.layer(int, int, float):int A[MD:(int, int, float):int (m)] (LINE:136)\l0x0046: APUT  \l  (r5 I:??[int, float][] A[D('switchThumbColorsList' int[])])\l  (r6 I:??[int, short, byte, char])\l  (r7 I:??[int, float, short, byte, char])\l \l0x0048: CONST  (r6 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:137)\l0x0049: APUT  \l  (r5 I:??[int, float][] A[D('switchThumbColorsList' int[])])\l  (r6 I:??[int, short, byte, char])\l  (r3 I:??[int, float, short, byte, char] A[D('colorThumbOff' int)])\l \l0x004b: NEW_INSTANCE  (r6 I:android.content.res.ColorStateList) =  android.content.res.ColorStateList  (LINE:138)\l0x004d: INVOKE  (r6 I:android.content.res.ColorStateList), (r4 I:int[][]), (r5 I:int[] A[D('switchThumbColorsList' int[])]) type: DIRECT call: android.content.res.ColorStateList.\<init\>(int[][], int[]):void A[MD:(int[][], int[]):void (c)]\l0x0050: IPUT  (r6 I:android.content.res.ColorStateList), (r8 I:com.google.android.material.switchmaterial.SwitchMaterial) com.google.android.material.switchmaterial.SwitchMaterial.materialThemeColorsThumbTintList android.content.res.ColorStateList \l}"];
Node_8 [shape=record,label="{8\:\ 0x0052|0x0052: IGET  (r0 I:android.content.res.ColorStateList A[D('colorSurface' int)]) = (r8 I:com.google.android.material.switchmaterial.SwitchMaterial) com.google.android.material.switchmaterial.SwitchMaterial.materialThemeColorsThumbTintList android.content.res.ColorStateList  (LINE:141)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0054|RETURN\l|0x0054: RETURN  (r0 I:android.content.res.ColorStateList) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private android.content.res.ColorStateList com.google.android.material.switchmaterial.SwitchMaterial.getMaterialThemeColorsThumbTintList((r8 'this' I:com.google.android.material.switchmaterial.SwitchMaterial A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0020 \-\> B:7:0x0027, CROSS_EDGE: B:3:0x0002 \-\> B:8:0x0052\lDebug Info:\l  0x000a\-0x0052: r0 'colorSurface' I\l  0x0010\-0x0052: r1 'colorControlActivated' I\l  0x001a\-0x0052: r2 'thumbElevation' F\l  0x002d\-0x0052: r3 'colorThumbOff' I\l  0x0032\-0x0052: r5 'switchThumbColorsList' [I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

