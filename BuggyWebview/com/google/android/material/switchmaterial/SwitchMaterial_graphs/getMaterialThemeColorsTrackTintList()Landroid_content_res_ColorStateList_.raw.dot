digraph "CFG forcom.google.android.material.switchmaterial.SwitchMaterial.getMaterialThemeColorsTrackTintList()Landroid\/content\/res\/ColorStateList;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:android.content.res.ColorStateList) = (r8 I:com.google.android.material.switchmaterial.SwitchMaterial) com.google.android.material.switchmaterial.SwitchMaterial.materialThemeColorsTrackTintList android.content.res.ColorStateList  (LINE:145)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0047 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: SGET  (r0 I:int[][]) =  com.google.android.material.switchmaterial.SwitchMaterial.ENABLED_CHECKED_STATES int[][]  (LINE:146)\l0x0006: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[]) \l0x0007: NEW_ARRAY  (r1 I:int[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0009: SGET  (r2 I:int) =  com.google.android.material.R.attr.colorSurface int  (LINE:147)\l0x000b: INVOKE  (r2 I:int) = (r8 I:android.view.View), (r2 I:int) type: STATIC call: com.google.android.material.color.MaterialColors.getColor(android.view.View, int):int A[MD:(android.view.View, int):int (m)]\l0x000f: SGET  (r3 I:int) =  com.google.android.material.R.attr.colorControlActivated int  (LINE:148)\l0x0011: INVOKE  (r3 I:int) = (r8 I:android.view.View), (r3 I:int) type: STATIC call: com.google.android.material.color.MaterialColors.getColor(android.view.View, int):int A[MD:(android.view.View, int):int (m)]\l0x0015: SGET  (r4 I:int) =  com.google.android.material.R.attr.colorOnSurface int  (LINE:149)\l0x0017: INVOKE  (r4 I:int) = (r8 I:android.view.View), (r4 I:int) type: STATIC call: com.google.android.material.color.MaterialColors.getColor(android.view.View, int):int A[MD:(android.view.View, int):int (m)]\l0x001b: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:150)\l0x001c: CONST  (r6 I:??[int, float, short, byte, char]) = (1057635697(0x3f0a3d71, float:0.54) ??[int, float, short, byte, char]) \l0x001f: INVOKE  (r6 I:int) = (r2 I:int A[D('colorSurface' int)]), (r3 I:int A[D('colorControlActivated' int)]), (r6 I:float) type: STATIC call: com.google.android.material.color.MaterialColors.layer(int, int, float):int A[MD:(int, int, float):int (m)] (LINE:151)\l0x0023: APUT  \l  (r1 I:??[int, float][] A[D('switchTrackColorsList' int[])])\l  (r5 I:??[int, short, byte, char])\l  (r6 I:??[int, float, short, byte, char])\l \l0x0025: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:152)\l0x0026: CONST  (r6 I:??[int, float, short, byte, char]) = (1050924810(0x3ea3d70a, float:0.32) ??[int, float, short, byte, char]) \l0x0029: INVOKE  (r6 I:int) = (r2 I:int A[D('colorSurface' int)]), (r4 I:int A[D('colorOnSurface' int)]), (r6 I:float) type: STATIC call: com.google.android.material.color.MaterialColors.layer(int, int, float):int A[MD:(int, int, float):int (m)] (LINE:153)\l0x002d: APUT  \l  (r1 I:??[int, float][] A[D('switchTrackColorsList' int[])])\l  (r5 I:??[int, short, byte, char])\l  (r6 I:??[int, float, short, byte, char])\l \l0x002f: CONST  (r5 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:154)\l0x0030: CONST  (r6 I:??[int, float, short, byte, char]) = (1039516303(0x3df5c28f, float:0.12) ??[int, float, short, byte, char])  (LINE:155)\l0x0033: INVOKE  (r7 I:int) = (r2 I:int A[D('colorSurface' int)]), (r3 I:int A[D('colorControlActivated' int)]), (r6 I:float) type: STATIC call: com.google.android.material.color.MaterialColors.layer(int, int, float):int A[MD:(int, int, float):int (m)]\l0x0037: APUT  \l  (r1 I:??[int, float][] A[D('switchTrackColorsList' int[])])\l  (r5 I:??[int, short, byte, char])\l  (r7 I:??[int, float, short, byte, char])\l \l0x0039: CONST  (r5 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:157)\l0x003a: INVOKE  (r6 I:int) = (r2 I:int A[D('colorSurface' int)]), (r4 I:int A[D('colorOnSurface' int)]), (r6 I:float) type: STATIC call: com.google.android.material.color.MaterialColors.layer(int, int, float):int A[MD:(int, int, float):int (m)] (LINE:158)\l0x003e: APUT  \l  (r1 I:??[int, float][] A[D('switchTrackColorsList' int[])])\l  (r5 I:??[int, short, byte, char])\l  (r6 I:??[int, float, short, byte, char])\l \l0x0040: NEW_INSTANCE  (r5 I:android.content.res.ColorStateList) =  android.content.res.ColorStateList  (LINE:159)\l0x0042: INVOKE  (r5 I:android.content.res.ColorStateList), (r0 I:int[][]), (r1 I:int[] A[D('switchTrackColorsList' int[])]) type: DIRECT call: android.content.res.ColorStateList.\<init\>(int[][], int[]):void A[MD:(int[][], int[]):void (c)]\l0x0045: IPUT  (r5 I:android.content.res.ColorStateList), (r8 I:com.google.android.material.switchmaterial.SwitchMaterial) com.google.android.material.switchmaterial.SwitchMaterial.materialThemeColorsTrackTintList android.content.res.ColorStateList \l}"];
Node_5 [shape=record,label="{5\:\ 0x0047|0x0047: IGET  (r0 I:android.content.res.ColorStateList) = (r8 I:com.google.android.material.switchmaterial.SwitchMaterial) com.google.android.material.switchmaterial.SwitchMaterial.materialThemeColorsTrackTintList android.content.res.ColorStateList  (LINE:162)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0049|RETURN\l|0x0049: RETURN  (r0 I:android.content.res.ColorStateList) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private android.content.res.ColorStateList com.google.android.material.switchmaterial.SwitchMaterial.getMaterialThemeColorsTrackTintList((r8 'this' I:com.google.android.material.switchmaterial.SwitchMaterial A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x0002 \-\> B:5:0x0047\lDebug Info:\l  0x0009\-0x0047: r1 'switchTrackColorsList' [I\l  0x000f\-0x0047: r2 'colorSurface' I\l  0x0015\-0x0047: r3 'colorControlActivated' I\l  0x001b\-0x0047: r4 'colorOnSurface' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

