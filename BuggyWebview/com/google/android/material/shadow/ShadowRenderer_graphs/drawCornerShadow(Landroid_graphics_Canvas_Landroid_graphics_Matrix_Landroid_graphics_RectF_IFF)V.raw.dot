digraph "CFG forcom.google.android.material.shadow.ShadowRenderer.drawCornerShadow(Landroid\/graphics\/Canvas;Landroid\/graphics\/Matrix;Landroid\/graphics\/RectF;IFF)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r24 I:??[OBJECT, ARRAY])  (LINE:130)\l0x0002: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r25 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x0004: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r27 I:??[OBJECT, ARRAY] A[D('bounds' android.graphics.RectF)]) \l0x0006: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r28 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('elevation' int)]) \l0x0008: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r30 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('sweepAngle' float)]) \l0x000a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: CMP_G  (r4 I:int) = (r10 I:float), (r1 I:float) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|0x000f: IF  (r4 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:23:0x0013 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0014|0x0014: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: IGET  (r12 I:android.graphics.Path) = (r0 I:com.google.android.material.shadow.ShadowRenderer) com.google.android.material.shadow.ShadowRenderer.scratch android.graphics.Path  (LINE:132)\l0x0017: CONST  (r4 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:134)\l0x0018: CONST  (r5 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0019|0x0019: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawShadowInsideBounds' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x002e \l}"];
Node_26 [shape=record,label="{26\:\ 0x001b|0x001b: SGET  (r6 I:int[]) =  com.google.android.material.shadow.ShadowRenderer.cornerColors int[]  (LINE:135)\l0x001d: APUT  (r6 I:??[int, float][]), (r3 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l0x001f: IGET  (r3 I:int) = (r0 I:com.google.android.material.shadow.ShadowRenderer) com.google.android.material.shadow.ShadowRenderer.shadowEndColor int  (LINE:136)\l0x0021: APUT  (r6 I:??[int, float][]), (r2 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l0x0023: IGET  (r3 I:int) = (r0 I:com.google.android.material.shadow.ShadowRenderer) com.google.android.material.shadow.ShadowRenderer.shadowMiddleColor int  (LINE:137)\l0x0025: APUT  (r6 I:??[int, float][]), (r5 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l0x0027: IGET  (r3 I:int) = (r0 I:com.google.android.material.shadow.ShadowRenderer) com.google.android.material.shadow.ShadowRenderer.shadowStartColor int  (LINE:138)\l0x0029: APUT  (r6 I:??[int, float][]), (r4 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l0x002b: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r29 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startAngle' float)]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x005b|0x005b: INVOKE  (r3 I:float) = (r27 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.RectF.width():float A[MD:():float (c)] (LINE:153)\l0x005f: CONST  (r4 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0061: ARITH  (r21 I:float) = (r3 I:float) \/ (r4 I:float) \l0x0063: CMP_G  (r1 I:int) = (r21 I:float A[D('radius' float)]), (r1 I:float)  (LINE:155)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0065|0x0065: IF  (r1 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:31:0x0068 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0067|RETURN\l|0x0067: RETURN    (LINE:156)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0068|0x0068: CAST (r1 I:float) = (float) (r9 I:int)  (LINE:159)\l0x0069: ARITH  (r1 I:float) = (r1 I:float) \/ (r21 I:float A[D('radius' float)]) \l0x006b: CONST  (r3 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x006d: ARITH  (r22 I:float) = (r3 I:float) \- (r1 I:float) \l0x006f: ARITH  (r1 I:float) = (r3 I:float) \- (r22 I:float A[D('startRatio' float)])  (LINE:160)\l0x0071: ARITH  (r1 I:float) = (r1 I:float) \/ (r4 I:float) \l0x0072: ARITH  (r23 I:float) = (r22 I:float A[D('startRatio' float)]) + (r1 I:float) \l0x0074: SGET  (r19 I:float[]) =  com.google.android.material.shadow.ShadowRenderer.cornerPositions float[]  (LINE:161)\l0x0076: APUT  \l  (r19 I:??[int, float][])\l  (r2 I:??[int, short, byte, char])\l  (r22 I:??[int, float, short, byte, char] A[D('startRatio' float)])\l \l0x0078: APUT  \l  (r19 I:??[int, float][])\l  (r5 I:??[int, short, byte, char])\l  (r23 I:??[int, float, short, byte, char] A[D('midRatio' float)])\l  (LINE:162)\l0x007a: NEW_INSTANCE  (r1 I:android.graphics.RadialGradient) =  android.graphics.RadialGradient  (LINE:163)\l0x007c: INVOKE  (r15 I:float) = (r27 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.RectF.centerX():float A[MD:():float (c)] (LINE:165)\l0x0080: INVOKE  (r16 I:float) = (r27 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.RectF.centerY():float A[MD:():float (c)] (LINE:166)\l0x0084: SGET  (r18 I:int[]) =  com.google.android.material.shadow.ShadowRenderer.cornerColors int[] \l0x0086: SGET  (r20 I:android.graphics.Shader$TileMode) =  android.graphics.Shader.TileMode.CLAMP android.graphics.Shader$TileMode \l0x0088: MOVE  (r14 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0089: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('radius' float)]) \l0x008b: INVOKE  \l  (r14 I:android.graphics.RadialGradient)\l  (r15 I:float)\l  (r16 I:float)\l  (r17 I:float)\l  (r18 I:int[])\l  (r19 I:float[])\l  (r20 I:android.graphics.Shader$TileMode)\l type: DIRECT call: android.graphics.RadialGradient.\<init\>(float, float, float, int[], float[], android.graphics.Shader$TileMode):void A[MD:(float, float, float, int[], float[], android.graphics.Shader$TileMode):void (c)]\l0x008e: IGET  (r1 I:android.graphics.Paint) = (r0 I:com.google.android.material.shadow.ShadowRenderer) com.google.android.material.shadow.ShadowRenderer.cornerShadowPaint android.graphics.Paint  (LINE:171)\l0x0090: INVOKE  (r1 I:android.graphics.Paint), (r14 I:android.graphics.Shader A[D('shader' android.graphics.RadialGradient)]) type: VIRTUAL call: android.graphics.Paint.setShader(android.graphics.Shader):android.graphics.Shader A[MD:(android.graphics.Shader):android.graphics.Shader (c)]\l0x0093: INVOKE  (r25 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:172)\l0x0096: INVOKE  \l  (r25 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r26 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l type: VIRTUAL call: android.graphics.Canvas.concat(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)] (LINE:173)\l0x0099: INVOKE  (r1 I:float) = (r27 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.RectF.height():float A[MD:():float (c)] (LINE:174)\l0x009d: INVOKE  (r2 I:float) = (r27 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.RectF.width():float A[MD:():float (c)]\l0x00a1: ARITH  (r1 I:float) = (r1 I:float) \/ (r2 I:float) \l0x00a2: INVOKE  (r7 I:android.graphics.Canvas), (r3 I:float), (r1 I:float) type: VIRTUAL call: android.graphics.Canvas.scale(float, float):void A[MD:(float, float):void (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x00a5|0x00a5: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawShadowInsideBounds' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x00b1  (LINE:176)\l}"];
Node_33 [shape=record,label="{33\:\ 0x00a7|0x00a7: SGET  (r1 I:android.graphics.Region$Op) =  android.graphics.Region.Op.DIFFERENCE android.graphics.Region$Op  (LINE:177)\l0x00a9: INVOKE  \l  (r7 I:android.graphics.Canvas)\l  (r12 I:android.graphics.Path A[D('arcBounds' android.graphics.Path)])\l  (r1 I:android.graphics.Region$Op)\l type: VIRTUAL call: android.graphics.Canvas.clipPath(android.graphics.Path, android.graphics.Region$Op):boolean A[MD:(android.graphics.Path, android.graphics.Region$Op):boolean (c)]\l0x00ac: IGET  (r1 I:android.graphics.Paint) = (r0 I:com.google.android.material.shadow.ShadowRenderer) com.google.android.material.shadow.ShadowRenderer.transparentPaint android.graphics.Paint  (LINE:179)\l0x00ae: INVOKE  \l  (r7 I:android.graphics.Canvas)\l  (r12 I:android.graphics.Path A[D('arcBounds' android.graphics.Path)])\l  (r1 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawPath(android.graphics.Path, android.graphics.Paint):void A[MD:(android.graphics.Path, android.graphics.Paint):void (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x00b1|0x00b1: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:182)\l0x00b2: IGET  (r6 I:android.graphics.Paint) = (r0 I:com.google.android.material.shadow.ShadowRenderer) com.google.android.material.shadow.ShadowRenderer.cornerShadowPaint android.graphics.Paint \l0x00b4: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r25 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x00b6: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r27 I:??[OBJECT, ARRAY] A[D('bounds' android.graphics.RectF)]) \l0x00b8: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r29 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startAngle' float)]) \l0x00ba: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r30 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('sweepAngle' float)]) \l0x00bc: INVOKE  \l  (r1 I:android.graphics.Canvas)\l  (r2 I:android.graphics.RectF)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:boolean)\l  (r6 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawArc(android.graphics.RectF, float, float, boolean, android.graphics.Paint):void A[MD:(android.graphics.RectF, float, float, boolean, android.graphics.Paint):void (c)]\l0x00bf: INVOKE  (r25 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.restore():void A[MD:():void (c)] (LINE:183)\l}"];
Node_35 [shape=record,label="{35\:\ 0x00c2|RETURN\l|0x00c2: RETURN    (LINE:184)\l}"];
Node_27 [shape=record,label="{27\:\ 0x002e|0x002e: INVOKE  (r12 I:android.graphics.Path A[D('arcBounds' android.graphics.Path)]) type: VIRTUAL call: android.graphics.Path.rewind():void A[MD:():void (c)] (LINE:141)\l0x0031: INVOKE  (r6 I:float) = (r27 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.RectF.centerX():float A[MD:():float (c)] (LINE:142)\l0x0035: INVOKE  (r13 I:float) = (r27 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.RectF.centerY():float A[MD:():float (c)]\l0x0039: INVOKE  (r12 I:android.graphics.Path A[D('arcBounds' android.graphics.Path)]), (r6 I:float), (r13 I:float) type: VIRTUAL call: android.graphics.Path.moveTo(float, float):void A[MD:(float, float):void (c)]\l0x003c: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r29 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startAngle' float)])  (LINE:143)\l0x003e: INVOKE  \l  (r12 I:android.graphics.Path A[D('arcBounds' android.graphics.Path)])\l  (r8 I:android.graphics.RectF)\l  (r13 I:float)\l  (r10 I:float)\l type: VIRTUAL call: android.graphics.Path.arcTo(android.graphics.RectF, float, float):void A[MD:(android.graphics.RectF, float, float):void (c)]\l0x0041: INVOKE  (r12 I:android.graphics.Path A[D('arcBounds' android.graphics.Path)]) type: VIRTUAL call: android.graphics.Path.close():void A[MD:():void (c)] (LINE:144)\l0x0044: NEG  (r6 I:int) = (r9 I:int)  (LINE:146)\l0x0045: CAST (r6 I:float) = (float) (r6 I:int) \l0x0046: NEG  (r14 I:int) = (r9 I:int) \l0x0047: CAST (r14 I:float) = (float) (r14 I:int) \l0x0048: INVOKE  (r8 I:android.graphics.RectF), (r6 I:float), (r14 I:float) type: VIRTUAL call: android.graphics.RectF.inset(float, float):void A[MD:(float, float):void (c)]\l0x004b: SGET  (r6 I:int[]) =  com.google.android.material.shadow.ShadowRenderer.cornerColors int[]  (LINE:147)\l0x004d: APUT  (r6 I:??[int, float][]), (r3 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l0x004f: IGET  (r3 I:int) = (r0 I:com.google.android.material.shadow.ShadowRenderer) com.google.android.material.shadow.ShadowRenderer.shadowStartColor int  (LINE:148)\l0x0051: APUT  (r6 I:??[int, float][]), (r2 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l0x0053: IGET  (r3 I:int) = (r0 I:com.google.android.material.shadow.ShadowRenderer) com.google.android.material.shadow.ShadowRenderer.shadowMiddleColor int  (LINE:149)\l0x0055: APUT  (r6 I:??[int, float][]), (r5 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l0x0057: IGET  (r3 I:int) = (r0 I:com.google.android.material.shadow.ShadowRenderer) com.google.android.material.shadow.ShadowRenderer.shadowEndColor int  (LINE:150)\l0x0059: APUT  (r6 I:??[int, float][]), (r4 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0013|0x0013: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void com.google.android.material.shadow.ShadowRenderer.drawCornerShadow((r24 'this' I:com.google.android.material.shadow.ShadowRenderer A[IMMUTABLE_TYPE, THIS]), (r25 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:android.graphics.RectF A[D('bounds' android.graphics.RectF), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:int A[D('elevation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:float A[D('startAngle' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30 I:float A[D('sweepAngle' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x00c2 \-\> B:19:?, CROSS_EDGE: B:32:0x00a5 \-\> B:34:0x00b1, CROSS_EDGE: B:27:0x002e \-\> B:28:0x005b, CROSS_EDGE: B:23:0x0013 \-\> B:24:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x00c2: r11 'drawShadowInsideBounds' Z\l  0x0017\-0x00c2: r12 'arcBounds' Landroid\/graphics\/Path;\l  0x008e\-0x00c2: r14 'shader' Landroid\/graphics\/RadialGradient;\l  0x0063\-0x00c2: r21 'radius' F\l  0x006f\-0x00c2: r22 'startRatio' F\l  0x0074\-0x00c2: r23 'midRatio' F\l  \-1 \-0x00c2: r25 'canvas' Landroid\/graphics\/Canvas;\l  \-1 \-0x00c2: r26 'matrix' Landroid\/graphics\/Matrix;\l  \-1 \-0x00c2: r27 'bounds' Landroid\/graphics\/RectF;\l  \-1 \-0x00c2: r28 'elevation' I\l  \-1 \-0x00c2: r29 'startAngle' F\l  \-1 \-0x00c2: r30 'sweepAngle' F\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_19;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_19;
Node_27 -> Node_28;
Node_23 -> Node_24;
}

