digraph "CFG forcom.google.android.material.shadow.ShadowDrawableWrapper.setShadowSize(FF)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:126)\l0x0001: CMP_G  (r1 I:int) = (r3 I:float A[D('shadowSize' float)]), (r0 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r1 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:18:0x0043 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: CMP_G  (r0 I:int) = (r4 I:float A[D('maxShadowSize' float)]), (r0 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IF  (r0 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:18:0x0043 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: INVOKE  (r0 I:int) = (r3 I:float A[D('shadowSize' float)]) type: STATIC call: com.google.android.material.shadow.ShadowDrawableWrapper.toEven(float):int A[MD:(float):int (m)] (LINE:129)\l0x000d: CAST (r3 I:float A[D('shadowSize' float)]) = (float) (r0 I:int) \l0x000e: INVOKE  (r0 I:int) = (r4 I:float A[D('maxShadowSize' float)]) type: STATIC call: com.google.android.material.shadow.ShadowDrawableWrapper.toEven(float):int A[MD:(float):int (m)] (LINE:130)\l0x0012: CAST (r4 I:float A[D('maxShadowSize' float)]) = (float) (r0 I:int) \l0x0013: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:131)\l0x0014: CMP_L  (r1 I:int) = (r3 I:float A[D('shadowSize' float)]), (r4 I:float A[D('maxShadowSize' float)]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:11:0x001f \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('shadowSize' float)]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxShadowSize' float)])  (LINE:132)\l0x0019: IGET  (r1 I:boolean) = (r2 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.printedShadowClipWarning boolean  (LINE:133)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001f \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: IPUT  (r0 I:boolean), (r2 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.printedShadowClipWarning boolean  (LINE:134)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: IGET  (r1 I:float) = (r2 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.rawShadowSize float  (LINE:137)\l0x0021: CMP_L  (r1 I:int) = (r1 I:float), (r3 I:float A[D('shadowSize' float)]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|0x0023: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x002c \l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|0x0025: IGET  (r1 I:float) = (r2 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.rawMaxShadowSize float \l0x0027: CMP_L  (r1 I:int) = (r1 I:float), (r4 I:float A[D('maxShadowSize' float)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|0x0029: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x002c \l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|RETURN\l|0x002b: RETURN    (LINE:138)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x002c|0x002c: IPUT  (r3 I:float A[D('shadowSize' float)]), (r2 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.rawShadowSize float  (LINE:140)\l0x002e: IPUT  (r4 I:float A[D('maxShadowSize' float)]), (r2 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.rawMaxShadowSize float  (LINE:141)\l0x0030: CONST  (r1 I:??[int, float, short, byte, char]) = (1069547520(0x3fc00000, float:1.5) ??[int, float, short, byte, char])  (LINE:142)\l0x0032: ARITH  (r1 I:float) = (r1 I:float) * (r3 I:float A[D('shadowSize' float)]) \l0x0034: INVOKE  (r1 I:int) = (r1 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0038: CAST (r1 I:float) = (float) (r1 I:int) \l0x0039: IPUT  (r1 I:float), (r2 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.shadowSize float \l0x003b: IPUT  (r4 I:float A[D('maxShadowSize' float)]), (r2 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.maxShadowSize float  (LINE:143)\l0x003d: IPUT  (r0 I:boolean), (r2 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.dirty boolean  (LINE:144)\l0x003f: INVOKE  (r2 I:com.google.android.material.shadow.ShadowDrawableWrapper) type: VIRTUAL call: com.google.android.material.shadow.ShadowDrawableWrapper.invalidateSelf():void A[MD:():void (s)] (LINE:145)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|RETURN\l|0x0042: RETURN    (LINE:146)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|0x0043: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:127)\l0x0045: CONST_STR  (r1 I:java.lang.String) =  \"invalid shadow size\" \l0x0047: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|0x004a: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.google.android.material.shadow.ShadowDrawableWrapper.setShadowSize((r2 'this' I:com.google.android.material.shadow.ShadowDrawableWrapper A[IMMUTABLE_TYPE, THIS]), (r3 I:float A[D('shadowSize' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:float A[D('maxShadowSize' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0042 \-\> B:1:?, CROSS_EDGE: B:12:0x0023 \-\> B:16:0x002c, CROSS_EDGE: B:9:0x001b \-\> B:11:0x001f, CROSS_EDGE: B:7:0x0016 \-\> B:11:0x001f, CROSS_EDGE: B:19:0x004a \-\> B:1:?, CROSS_EDGE: B:3:0x0003 \-\> B:18:0x0043\lDebug Info:\l  \-1 \-0x004a: r3 'shadowSize' F\l  \-1 \-0x004a: r4 'maxShadowSize' F\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_1;
}

