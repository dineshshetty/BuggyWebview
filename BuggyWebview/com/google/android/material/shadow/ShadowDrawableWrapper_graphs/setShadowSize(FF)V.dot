digraph "CFG forcom.google.android.material.shadow.ShadowDrawableWrapper.setShadowSize(FF)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0003|if ((r3 \> 0.0f ? 1 : (r3 == 0.0f ? 0 : \-1)) \< 0) goto L18\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005}"];
Node_5 [shape=record,label="{5\:\ 0x0007|if ((r4 \> 0.0f ? 1 : (r4 == 0.0f ? 0 : \-1)) \< 0) goto L18\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|float r3 = (float) toEven(r3)\lfloat r4 = (float) toEven(r4)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|if ((r3 \> r4 ? 1 : (r3 == r4 ? 0 : \-1)) \<= 0) goto L10\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|r3 = r4\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|if (r2.printedShadowClipWarning != false) goto L10\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|r2.printedShadowClipWarning = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|PHI: r3 \l  PHI: (r3v2 'shadowSize' float) = (r3v1 'shadowSize' float), (r3v3 'shadowSize' float), (r3v3 'shadowSize' float) binds: [B:7:0x0016, B:9:0x001b, B:10:0x001d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|if ((r2.rawShadowSize \> r3 ? 1 : (r2.rawShadowSize == r3 ? 0 : \-1)) != 0) goto L16\l}"];
Node_13 [shape=record,label="{13\:\ 0x0025}"];
Node_14 [shape=record,label="{14\:\ 0x0029|if ((r2.rawMaxShadowSize \> r4 ? 1 : (r2.rawMaxShadowSize == r4 ? 0 : \-1)) != 0) goto L16\l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x002c|r2.rawShadowSize = r3\lr2.rawMaxShadowSize = r4\lr2.shadowSize = (float) java.lang.Math.round(com.google.android.material.shadow.ShadowDrawableWrapper.SHADOW_MULTIPLIER * r3)\lr2.maxShadowSize = r4\lr2.dirty = true\linvalidateSelf()\l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ 0x0043}"];
Node_19 [shape=record,label="{19\:\ 0x004a|throw new java.lang.IllegalArgumentException(\"invalid shadow size\")\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.shadow.ShadowDrawableWrapper.setShadowSize((r2v0 'this' com.google.android.material.shadow.ShadowDrawableWrapper A[IMMUTABLE_TYPE, THIS]), (r3v0 'shadowSize' float A[D('shadowSize' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'maxShadowSize' float A[D('maxShadowSize' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0042 \-\> B:1:?, CROSS_EDGE: B:12:0x0023 \-\> B:16:0x002c, CROSS_EDGE: B:9:0x001b \-\> B:11:0x001f, CROSS_EDGE: B:7:0x0016 \-\> B:11:0x001f, CROSS_EDGE: B:19:0x004a \-\> B:1:?, CROSS_EDGE: B:3:0x0003 \-\> B:18:0x0043\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_1;
}

