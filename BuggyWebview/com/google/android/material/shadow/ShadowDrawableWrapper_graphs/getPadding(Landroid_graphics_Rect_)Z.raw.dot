digraph "CFG forcom.google.android.material.shadow.ShadowDrawableWrapper.getPadding(Landroid\/graphics\/Rect;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:float) = (r4 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.rawMaxShadowSize float  (LINE:158)\l0x0002: IGET  (r1 I:float) = (r4 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.cornerRadius float \l0x0004: IGET  (r2 I:boolean) = (r4 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.addPaddingForCorners boolean \l0x0006: INVOKE  (r0 I:float) = (r0 I:float), (r1 I:float), (r2 I:boolean) type: STATIC call: com.google.android.material.shadow.ShadowDrawableWrapper.calculateVerticalPadding(float, float, boolean):float A[MD:(float, float, boolean):float (m)] (LINE:161)\l0x000a: CAST (r0 I:double) = (double) (r0 I:float) \l0x000b: INVOKE  (r0 I:double) = (r0 I:double) type: STATIC call: java.lang.Math.ceil(double):double A[MD:(double):double (c)] (LINE:160)\l0x000f: CAST (r0 I:int) = (int) (r0 I:double) \l0x0010: IGET  (r1 I:float) = (r4 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.rawMaxShadowSize float  (LINE:162)\l0x0012: IGET  (r2 I:float) = (r4 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.cornerRadius float \l0x0014: IGET  (r3 I:boolean) = (r4 I:com.google.android.material.shadow.ShadowDrawableWrapper) com.google.android.material.shadow.ShadowDrawableWrapper.addPaddingForCorners boolean \l0x0016: INVOKE  (r1 I:float) = (r1 I:float), (r2 I:float), (r3 I:boolean) type: STATIC call: com.google.android.material.shadow.ShadowDrawableWrapper.calculateHorizontalPadding(float, float, boolean):float A[MD:(float, float, boolean):float (m)] (LINE:165)\l0x001a: CAST (r1 I:double) = (double) (r1 I:float) \l0x001b: INVOKE  (r1 I:double) = (r1 I:double) type: STATIC call: java.lang.Math.ceil(double):double A[MD:(double):double (c)] (LINE:164)\l0x001f: CAST (r1 I:int) = (int) (r1 I:double) \l0x0020: INVOKE  \l  (r5 I:android.graphics.Rect A[D('padding' android.graphics.Rect)])\l  (r1 I:int A[D('hOffset' int)])\l  (r0 I:int A[D('vOffset' int)])\l  (r1 I:int A[D('hOffset' int)])\l  (r0 I:int A[D('vOffset' int)])\l type: VIRTUAL call: android.graphics.Rect.set(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:166)\l0x0023: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:167)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|RETURN\l|0x0024: RETURN  (r2 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.shadow.ShadowDrawableWrapper.getPadding((r4 'this' I:com.google.android.material.shadow.ShadowDrawableWrapper A[IMMUTABLE_TYPE, THIS]), (r5 I:android.graphics.Rect A[D('padding' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lDebug Info:\l  0x0010\-0x0024: r0 'vOffset' I\l  0x0020\-0x0024: r1 'hOffset' I\l  \-1 \-0x0024: r5 'padding' Landroid\/graphics\/Rect;\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

