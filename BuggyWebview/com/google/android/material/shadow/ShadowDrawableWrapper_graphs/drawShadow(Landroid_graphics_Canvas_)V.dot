digraph "CFG forcom.google.android.material.shadow.ShadowDrawableWrapper.drawShadow(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|int r8 = r25.save()\lr25.rotate(r24.rotation, r24.contentBounds.centerX(), r24.contentBounds.centerY())\lfloat r9 = (\-r24.cornerRadius) \- r24.shadowSize\lfloat r10 = r24.cornerRadius\lfloat r1 = r24.contentBounds.width() \- (r10 * 2.0f)\lr2 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0032|if ((r1 \> 0.0f ? 1 : (r1 == 0.0f ? 0 : \-1)) \<= 0) goto L25\l}"];
Node_4 [shape=record,label="{4\:\ 0x0034|r1 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x0037|PHI: r1 \l  PHI: (r1v8 boolean) = (r1v7 boolean), (r1v58 boolean) binds: [B:5:0x0036, B:4:0x0034] A[DONT_GENERATE, DONT_INLINE]\l|r12 = r1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0043|if (((r24.contentBounds.height() \- (r10 * 2.0f)) \> 0.0f ? 1 : ((r24.contentBounds.height() \- (r10 * 2.0f)) == 0.0f ? 0 : \-1)) \<= 0) goto L6\l}"];
Node_9 [shape=record,label="{9\:\ 0x0046|r2 = false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0047|PHI: r2 \l  PHI: (r2v5 boolean) = (r2v4 boolean), (r2v29 boolean) binds: [B:7:0x0043, B:9:0x0046] A[DONT_GENERATE, DONT_INLINE]\l|r13 = r2\lfloat r1 = r24.rawShadowSize\lfloat r14 = r1 \- (com.google.android.material.shadow.ShadowDrawableWrapper.SHADOW_TOP_SCALE * r1)\lfloat r15 = r1 \- (0.5f * r1)\lfloat r16 = r1 \- (r1 * 1.0f)\lfloat r5 = r10 \/ (r10 + r15)\lfloat r4 = r10 \/ (r10 + r14)\lfloat r3 = r10 \/ (r10 + r16)\lint r2 = r25.save()\lr25.translate(r24.contentBounds.left + r10, r24.contentBounds.top + r10)\lr25.scale(r5, r4)\lr25.drawPath(r24.cornerShadowPath, r24.cornerShadowPaint)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0083|if (r12 == false) goto L24\l}"];
Node_12 [shape=record,label="{12\:\ 0x0085|r25.scale(1.0f \/ r5, 1.0f)\lfloat r18 = r24.contentBounds.width() \- (r10 * 2.0f)\lr14 = r2\lr11 = r3\lr22 = r4\lr23 = r5\lr15 = 1.0f\lr25.drawRect(0.0f, r9, r18, \-r24.cornerRadius, r24.edgeShadowPaint)\l}"];
Node_14 [shape=record,label="{14\:\ 0x00c2|PHI: r11 r14 r15 r22 r23 \l  PHI: (r11v6 'shadowScaleBottom' float) = (r11v5 'shadowScaleBottom' float), (r11v8 'shadowScaleBottom' float) binds: [B:13:0x00b6, B:12:0x0085] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v2 'saved' int) = (r14v1 'saved' int), (r14v6 'saved' int) binds: [B:13:0x00b6, B:12:0x0085] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v2 'shadowOffsetHorizontal' float) = (r15v1 'shadowOffsetHorizontal' float), (r15v6 'shadowOffsetHorizontal' float) binds: [B:13:0x00b6, B:12:0x0085] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r22v1 'shadowScaleTop' float) = (r22v0 'shadowScaleTop' float), (r22v2 'shadowScaleTop' float) binds: [B:13:0x00b6, B:12:0x0085] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r23v1 'shadowScaleHorizontal' float) = (r23v0 'shadowScaleHorizontal' float), (r23v2 'shadowScaleHorizontal' float) binds: [B:13:0x00b6, B:12:0x0085] A[DONT_GENERATE, DONT_INLINE]\l|r25.restoreToCount(r14)\lint r14 = r25.save()\lr25.translate(r24.contentBounds.right \- r10, r24.contentBounds.bottom \- r10)\lr6 = r23\lr25.scale(r6, r11)\lr25.rotate(180.0f)\lr25.drawPath(r24.cornerShadowPath, r24.cornerShadowPaint)\l}"];
Node_15 [shape=record,label="{15\:\ 0x00e7|if (r12 == false) goto L23\l}"];
Node_16 [shape=record,label="{16\:\ 0x00e9|r25.scale(r15 \/ r6, r15)\lr15 = r6\lr25.drawRect(0.0f, r9, r24.contentBounds.width() \- (r10 * 2.0f), (\-r24.cornerRadius) + r24.shadowSize, r24.edgeShadowPaint)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0111|PHI: r15 \l  PHI: (r15v4 'shadowScaleHorizontal' float) = (r15v3 'shadowScaleHorizontal' float), (r15v5 'shadowScaleHorizontal' float) binds: [B:17:0x0110, B:16:0x00e9] A[DONT_GENERATE, DONT_INLINE]\l|r25.restoreToCount(r14)\lint r14 = r25.save()\lr25.translate(r24.contentBounds.left + r10, r24.contentBounds.bottom \- r10)\lr25.scale(r15, r11)\lr25.rotate(270.0f)\lr25.drawPath(r24.cornerShadowPath, r24.cornerShadowPaint)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0134|if (r13 == false) goto L16\l}"];
Node_20 [shape=record,label="{20\:\ 0x0136|r25.scale(1.0f \/ r11, 1.0f)\lr25.drawRect(0.0f, r9, r24.contentBounds.height() \- (r10 * 2.0f), \-r24.cornerRadius, r24.edgeShadowPaint)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0155|r25.restoreToCount(r14)\lint r14 = r25.save()\lr25.translate(r24.contentBounds.right \- r10, r24.contentBounds.top + r10)\lr6 = r22\lr25.scale(r15, r6)\lr25.rotate(90.0f)\lr25.drawPath(r24.cornerShadowPath, r24.cornerShadowPaint)\l}"];
Node_22 [shape=record,label="{22\:\ 0x017a|if (r13 == false) goto L22\l}"];
Node_23 [shape=record,label="{23\:\ 0x017c|r25.scale(1.0f \/ r6, 1.0f)\lr25.drawRect(0.0f, r9, r24.contentBounds.height() \- (2.0f * r10), \-r24.cornerRadius, r24.edgeShadowPaint)\l}"];
Node_25 [shape=record,label="{25\:\ 0x01a4|r25.restoreToCount(r14)\lr25.restoreToCount(r8)\l}"];
Node_26 [shape=record,label="{26\:\ 0x01aa|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x01a2}"];
Node_17 [shape=record,label="{17\:\ 0x0110|r15 = r6\l}"];
Node_13 [shape=record,label="{13\:\ 0x00b6|r11 = r3\lr22 = r4\lr23 = r5\lr15 = 1.0f\lr14 = r2\l}"];
Node_5 [shape=record,label="{5\:\ 0x0036|r1 = false\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.shadow.ShadowDrawableWrapper.drawShadow((r24v0 'this' com.google.android.material.shadow.ShadowDrawableWrapper A[IMMUTABLE_TYPE, THIS]), (r25v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x01a2 \-\> B:25:0x01a4, CROSS_EDGE: B:19:0x0134 \-\> B:21:0x0155, CROSS_EDGE: B:17:0x0110 \-\> B:18:0x0111, CROSS_EDGE: B:13:0x00b6 \-\> B:14:0x00c2, CROSS_EDGE: B:7:0x0043 \-\> B:10:0x0047, CROSS_EDGE: B:5:0x0036 \-\> B:6:0x0037\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_1;
Node_24 -> Node_25;
Node_17 -> Node_18;
Node_13 -> Node_14;
Node_5 -> Node_6;
}

