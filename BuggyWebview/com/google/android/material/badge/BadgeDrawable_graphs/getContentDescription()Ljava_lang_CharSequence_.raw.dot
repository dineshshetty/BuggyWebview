digraph "CFG forcom.google.android.material.badge.BadgeDrawable.getContentDescription()Ljava\/lang\/CharSequence;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r7 I:com.google.android.material.badge.BadgeDrawable) type: VIRTUAL call: com.google.android.material.badge.BadgeDrawable.isVisible():boolean A[MD:():boolean (c)] (LINE:646)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0008 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:java.lang.CharSequence)  (LINE:647)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0008|0x0008: INVOKE  (r0 I:boolean) = (r7 I:com.google.android.material.badge.BadgeDrawable) type: VIRTUAL call: com.google.android.material.badge.BadgeDrawable.hasNumber():boolean A[MD:():boolean (m)] (LINE:649)\l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0061 \l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|0x000e: IGET  (r0 I:com.google.android.material.badge.BadgeState) = (r7 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.state com.google.android.material.badge.BadgeState  (LINE:650)\l0x0010: INVOKE  (r0 I:int) = (r0 I:com.google.android.material.badge.BadgeState) type: VIRTUAL call: com.google.android.material.badge.BadgeState.getContentDescriptionQuantityStrings():int A[MD:():int (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0060 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|0x0016: IGET  (r0 I:java.lang.ref.WeakReference\<android.content.Context\>) = (r7 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.contextRef java.lang.ref.WeakReference  (LINE:651)\l0x0018: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) type: VIRTUAL call: java.lang.ref.WeakReference.get():java.lang.Object A[MD:():T (c)]\l0x001c: CHECK_CAST (r0 I:android.content.Context) = (android.content.Context) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x001e|0x001e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('context' android.content.Context)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0021  (LINE:652)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0020|RETURN\l|0x0020: RETURN  (r1 I:java.lang.CharSequence)  (LINE:653)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0021|0x0021: INVOKE  (r1 I:int) = (r7 I:com.google.android.material.badge.BadgeDrawable) type: VIRTUAL call: com.google.android.material.badge.BadgeDrawable.getNumber():int A[MD:():int (m)] (LINE:655)\l0x0025: IGET  (r2 I:int) = (r7 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.maxBadgeNumber int \l0x0027: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0028: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0029|0x0029: IF  (r1 I:??[int, byte, short, char]) \> (r2 I:??[int, byte, short, char])  \-\> B:37:0x004b \l}"];
Node_35 [shape=record,label="{35\:\ 0x002c|0x002c: INVOKE  (r1 I:android.content.res.Resources) = (r0 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)] (LINE:657)\l0x0030: IGET  (r2 I:com.google.android.material.badge.BadgeState) = (r7 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.state com.google.android.material.badge.BadgeState \l0x0032: INVOKE  (r2 I:int) = (r2 I:com.google.android.material.badge.BadgeState) type: VIRTUAL call: com.google.android.material.badge.BadgeState.getContentDescriptionQuantityStrings():int A[MD:():int (m)] (LINE:659)\l0x0036: INVOKE  (r5 I:int) = (r7 I:com.google.android.material.badge.BadgeDrawable) type: VIRTUAL call: com.google.android.material.badge.BadgeDrawable.getNumber():int A[MD:():int (m)]\l0x003a: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x003c: INVOKE  (r6 I:int) = (r7 I:com.google.android.material.badge.BadgeDrawable) type: VIRTUAL call: com.google.android.material.badge.BadgeDrawable.getNumber():int A[MD:():int (m)]\l0x0040: INVOKE  (r6 I:java.lang.Integer) = (r6 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0044: APUT  (r4 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY]) \l0x0046: INVOKE  (r1 I:java.lang.String) = (r1 I:android.content.res.Resources), (r2 I:int), (r5 I:int), (r4 I:java.lang.Object[]) type: VIRTUAL call: android.content.res.Resources.getQuantityString(int, int, java.lang.Object[]):java.lang.String A[MD:(int, int, java.lang.Object[]):java.lang.String VARARG throws android.content.res.Resources$NotFoundException (c)] (LINE:658)\l}"];
Node_36 [shape=record,label="{36\:\ 0x004a|RETURN\l|0x004a: RETURN  (r1 I:java.lang.CharSequence)  (LINE:656)\l}"];
Node_37 [shape=record,label="{37\:\ 0x004b|0x004b: IGET  (r1 I:com.google.android.material.badge.BadgeState) = (r7 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.state com.google.android.material.badge.BadgeState  (LINE:661)\l0x004d: INVOKE  (r1 I:int) = (r1 I:com.google.android.material.badge.BadgeState) type: VIRTUAL call: com.google.android.material.badge.BadgeState.getContentDescriptionExceedsMaxBadgeNumberStringResource():int A[MD:():int (m)] (LINE:662)\l0x0051: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0053: IGET  (r4 I:int) = (r7 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.maxBadgeNumber int \l0x0055: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0059: APUT  (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) \l0x005b: INVOKE  (r1 I:java.lang.String) = (r0 I:android.content.Context A[D('context' android.content.Context)]), (r1 I:int), (r2 I:java.lang.Object[]) type: VIRTUAL call: android.content.Context.getString(int, java.lang.Object[]):java.lang.String A[MD:(int, java.lang.Object[]):java.lang.String VARARG (c)] (LINE:661)\l}"];
Node_38 [shape=record,label="{38\:\ 0x005f|RETURN\l|0x005f: RETURN  (r1 I:java.lang.CharSequence) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0060|RETURN\l|0x0060: RETURN  (r1 I:java.lang.CharSequence)  (LINE:665)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0061|0x0061: IGET  (r0 I:com.google.android.material.badge.BadgeState) = (r7 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.state com.google.android.material.badge.BadgeState  (LINE:668)\l0x0063: INVOKE  (r0 I:java.lang.CharSequence) = (r0 I:com.google.android.material.badge.BadgeState) type: VIRTUAL call: com.google.android.material.badge.BadgeState.getContentDescriptionNumberless():java.lang.CharSequence A[MD:():java.lang.CharSequence (m)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0067|RETURN\l|0x0067: RETURN  (r0 I:java.lang.CharSequence) \l}"];
MethodNode[shape=record,label="{public java.lang.CharSequence com.google.android.material.badge.BadgeDrawable.getContentDescription((r7 'this' I:com.google.android.material.badge.BadgeDrawable A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x0020 \-\> B:22:?, CROSS_EDGE: B:36:0x004a \-\> B:22:?, CROSS_EDGE: B:38:0x005f \-\> B:22:?, CROSS_EDGE: B:39:0x0060 \-\> B:22:?, CROSS_EDGE: B:41:0x0067 \-\> B:22:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x0060: r0 'context' Landroid\/content\/Context;\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_22;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_40;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_39;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_22;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_37;
Node_35 -> Node_36;
Node_36 -> Node_22;
Node_37 -> Node_38;
Node_38 -> Node_22;
Node_39 -> Node_22;
Node_40 -> Node_41;
Node_41 -> Node_22;
}

