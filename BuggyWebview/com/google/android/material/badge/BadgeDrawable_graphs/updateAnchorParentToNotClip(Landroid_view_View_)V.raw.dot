digraph "CFG forcom.google.android.material.badge.BadgeDrawable.updateAnchorParentToNotClip(Landroid\/view\/View;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.ViewParent) = (r2 I:android.view.View A[D('anchorView' android.view.View)]) type: VIRTUAL call: android.view.View.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:380)\l0x0004: CHECK_CAST (r0 I:android.view.ViewGroup) = (android.view.ViewGroup) (r0 I:??[OBJECT, ARRAY]) \l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:381)\l0x0007: INVOKE  (r0 I:android.view.ViewGroup A[D('anchorViewParent' android.view.ViewGroup)]), (r1 I:boolean) type: VIRTUAL call: android.view.ViewGroup.setClipChildren(boolean):void A[MD:(boolean):void (c)]\l0x000a: INVOKE  (r0 I:android.view.ViewGroup A[D('anchorViewParent' android.view.ViewGroup)]), (r1 I:boolean) type: VIRTUAL call: android.view.ViewGroup.setClipToPadding(boolean):void A[MD:(boolean):void (c)] (LINE:382)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|RETURN\l|0x000d: RETURN    (LINE:383)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static void com.google.android.material.badge.BadgeDrawable.updateAnchorParentToNotClip((r2 I:android.view.View A[D('anchorView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x000d: r0 'anchorViewParent' Landroid\/view\/ViewGroup;\l  \-1 \-0x000d: r2 'anchorView' Landroid\/view\/View;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

