digraph "CFG forcom.google.android.material.badge.BadgeDrawable.onBadgeGravityUpdated()V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|java.lang.ref.WeakReference\<android.view.View\> r0 = r2.anchorViewRef\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|if (r0 == null) goto L13\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004}"];
Node_19 [shape=record,label="{19\:\ 0x0008|if (r0.get() == null) goto L12\l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|android.view.View r0 = r2.anchorViewRef.get()\ljava.lang.ref.WeakReference\<android.widget.FrameLayout\> r1 = r2.customBadgeParentRef\l}"];
Node_21 [shape=record,label="{21\:\ 0x0014|if (r1 == null) goto L11\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|android.widget.FrameLayout r1 = r1.get()\l}"];
Node_24 [shape=record,label="{24\:\ 0x001e|PHI: r1 \l  PHI: (r1v2 android.widget.FrameLayout) = (r1v1 android.widget.FrameLayout), (r1v4 android.widget.FrameLayout) binds: [B:23:0x001d, B:22:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|updateBadgeCoordinates(r0, r1)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|RETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x001d|r1 = null\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.badge.BadgeDrawable.onBadgeGravityUpdated((r2v0 'this' com.google.android.material.badge.BadgeDrawable A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x001d \-\> B:24:0x001e, CROSS_EDGE: B:19:0x0008 \-\> B:25:0x0021, CROSS_EDGE: B:17:0x0002 \-\> B:25:0x0021\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_23 -> Node_24;
Node_27 -> Node_15;
Node_26 -> Node_15;
}

