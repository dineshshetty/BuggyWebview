digraph "CFG forcom.google.android.material.badge.BadgeDrawable.draw(Landroid\/graphics\/Canvas;)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|android.graphics.Rect r0 = getBounds()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|if (r0.isEmpty() != false) goto L15\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a}"];
Node_22 [shape=record,label="{22\:\ 0x000e|if (getAlpha() == 0) goto L14\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010}"];
Node_24 [shape=record,label="{24\:\ 0x0014|if (isVisible() != false) goto L7\l}"];
Node_26 [shape=record,label="{26\:\ 0x0017|r2.shapeDrawable.draw(r3)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0020|if (hasNumber() == false) goto L12\l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|drawText(r3)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0025|RETURN\lORIG_RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ 0x0026|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.badge.BadgeDrawable.draw((r2v0 'this' com.google.android.material.badge.BadgeDrawable A[IMMUTABLE_TYPE, THIS]), (r3v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:27:0x0020 \-\> B:29:0x0025, CROSS_EDGE: B:30:0x0026 \-\> B:18:?, CROSS_EDGE: B:22:0x000e \-\> B:30:0x0026, CROSS_EDGE: B:20:0x0008 \-\> B:30:0x0026\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_30;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_32;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_33[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_18;
Node_31 -> Node_18;
Node_33 -> Node_18;
Node_32 -> Node_18;
Node_30 -> Node_18;
}

