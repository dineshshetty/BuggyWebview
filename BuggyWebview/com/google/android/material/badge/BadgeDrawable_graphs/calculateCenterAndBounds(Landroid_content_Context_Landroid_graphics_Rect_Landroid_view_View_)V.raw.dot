digraph "CFG forcom.google.android.material.badge.BadgeDrawable.calculateCenterAndBounds(Landroid\/content\/Context;Landroid\/graphics\/Rect;Landroid\/view\/View;)V" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r5 I:com.google.android.material.badge.BadgeDrawable) type: DIRECT call: com.google.android.material.badge.BadgeDrawable.getTotalVerticalOffsetForState():int A[MD:():int (m)] (LINE:894)\l0x0004: IGET  (r1 I:com.google.android.material.badge.BadgeState) = (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.state com.google.android.material.badge.BadgeState  (LINE:895)\l0x0006: INVOKE  (r1 I:int) = (r1 I:com.google.android.material.badge.BadgeState) type: VIRTUAL call: com.google.android.material.badge.BadgeState.getBadgeGravity():int A[MD:():int (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x000a|0x000a: SWITCH  (r1 I:??)\l case 8388691: goto B:37:0x0014\l case 8388692: goto B:36:0x000d\l case 8388693: goto B:37:0x0014\l default: goto B:36:0x000d \l}"];
Node_36 [shape=record,label="{36\:\ 0x000d|0x000d: IGET  (r1 I:int) = (r7 I:android.graphics.Rect A[D('anchorRect' android.graphics.Rect)]) android.graphics.Rect.top int  (LINE:903)\l0x000f: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int A[D('totalVerticalOffset' int)]) \l0x0010: CAST (r1 I:float) = (float) (r1 I:int) \l0x0011: IPUT  (r1 I:float), (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.badgeCenterY float \l}"];
Node_38 [shape=record,label="{38\:\ 0x001b|0x001b: INVOKE  (r1 I:int) = (r5 I:com.google.android.material.badge.BadgeDrawable) type: VIRTUAL call: com.google.android.material.badge.BadgeDrawable.getNumber():int A[MD:():int (m)] (LINE:907)\l0x001f: CONST  (r2 I:??[int, float, short, byte, char]) = (9 ??[int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0021|0x0021: IF  (r1 I:??[int, byte, short, char]) \> (r2 I:??[int, byte, short, char])  \-\> B:45:0x0039 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0023|0x0023: INVOKE  (r1 I:boolean) = (r5 I:com.google.android.material.badge.BadgeDrawable) type: VIRTUAL call: com.google.android.material.badge.BadgeDrawable.hasNumber():boolean A[MD:():boolean (m)] (LINE:908)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0027|0x0027: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x002e \l}"];
Node_42 [shape=record,label="{42\:\ 0x0029|0x0029: IGET  (r1 I:com.google.android.material.badge.BadgeState) = (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.state com.google.android.material.badge.BadgeState \l0x002b: IGET  (r1 I:float) = (r1 I:com.google.android.material.badge.BadgeState) com.google.android.material.badge.BadgeState.badgeRadius float \l}"];
Node_44 [shape=record,label="{44\:\ 0x0032|0x0032: IPUT  (r1 I:float), (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.cornerRadius float \l0x0034: IPUT  (r1 I:float), (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.halfBadgeHeight float  (LINE:909)\l0x0036: IPUT  (r1 I:float), (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.halfBadgeWidth float  (LINE:910)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0055|0x0056: INVOKE  (r1 I:android.content.res.Resources) = (r6 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)] (LINE:920)\l0x005a: INVOKE  (r2 I:boolean) = (r5 I:com.google.android.material.badge.BadgeDrawable) type: VIRTUAL call: com.google.android.material.badge.BadgeDrawable.hasNumber():boolean A[MD:():boolean (m)] (LINE:922)\l}"];
Node_47 [shape=record,label="{47\:\ 0x005e|0x005e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0063 \l}"];
Node_48 [shape=record,label="{48\:\ 0x0060|0x0060: SGET  (r2 I:int) =  com.google.android.material.R.dimen.mtrl_badge_text_horizontal_edge_offset int  (LINE:923)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0065|0x0065: INVOKE  (r1 I:int) = (r1 I:android.content.res.Resources), (r2 I:int) type: VIRTUAL call: android.content.res.Resources.getDimensionPixelSize(int):int A[MD:(int):int throws android.content.res.Resources$NotFoundException (c)] (LINE:921)\l0x0069: INVOKE  (r2 I:int) = (r5 I:com.google.android.material.badge.BadgeDrawable) type: DIRECT call: com.google.android.material.badge.BadgeDrawable.getTotalHorizontalOffsetForState():int A[MD:():int (m)] (LINE:926)\l0x006d: IGET  (r3 I:com.google.android.material.badge.BadgeState) = (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.state com.google.android.material.badge.BadgeState  (LINE:929)\l0x006f: INVOKE  (r3 I:int) = (r3 I:com.google.android.material.badge.BadgeState) type: VIRTUAL call: com.google.android.material.badge.BadgeState.getBadgeGravity():int A[MD:():int (m)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x0073|0x0073: SWITCH  (r3 I:??)\l case 8388659: goto B:55:0x0088\l case 8388691: goto B:55:0x0088\l default: goto B:52:0x0077 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0077|0x0077: INVOKE  (r3 I:int) = (r8 I:android.view.View A[D('anchorView' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:941)\l}"];
Node_53 [shape=record,label="{53\:\ 0x007b|0x007b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x00a7 \l}"];
Node_54 [shape=record,label="{54\:\ 0x007d|0x007d: IGET  (r3 I:int) = (r7 I:android.graphics.Rect A[D('anchorRect' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:942)\l0x007f: CAST (r3 I:float) = (float) (r3 I:int) \l0x0080: IGET  (r4 I:float) = (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.halfBadgeWidth float \l0x0082: ARITH  (r3 I:float) = (r3 I:float) + (r4 I:float) \l0x0083: CAST (r4 I:float) = (float) (r1 I:int A[D('inset' int)]) \l0x0084: ARITH  (r3 I:float) = (r3 I:float) \- (r4 I:float) \l0x0085: CAST (r4 I:float) = (float) (r2 I:int A[D('totalHorizontalOffset' int)]) \l0x0086: ARITH  (r3 I:float) = (r3 I:float) \- (r4 I:float) \l}"];
Node_61 [shape=record,label="{61\:\ 0x00b1|0x00b1: IPUT  (r3 I:float), (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.badgeCenterX float \l}"];
Node_62 [shape=record,label="{62\:\ 0x00b3|RETURN\lORIG_RETURN\l|0x00b3: RETURN    (LINE:946)\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_60 [shape=record,label="{60\:\ 0x00a7|0x00a7: IGET  (r3 I:int) = (r7 I:android.graphics.Rect A[D('anchorRect' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:943)\l0x00a9: CAST (r3 I:float) = (float) (r3 I:int) \l0x00aa: IGET  (r4 I:float) = (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.halfBadgeWidth float \l0x00ac: ARITH  (r3 I:float) = (r3 I:float) \- (r4 I:float) \l0x00ad: CAST (r4 I:float) = (float) (r1 I:int A[D('inset' int)]) \l0x00ae: ARITH  (r3 I:float) = (r3 I:float) + (r4 I:float) \l0x00af: CAST (r4 I:float) = (float) (r2 I:int A[D('totalHorizontalOffset' int)]) \l0x00b0: ARITH  (r3 I:float) = (r3 I:float) + (r4 I:float) \l}"];
Node_55 [shape=record,label="{55\:\ 0x0088|0x0089: INVOKE  (r3 I:int) = (r8 I:android.view.View A[D('anchorView' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:933)\l}"];
Node_56 [shape=record,label="{56\:\ 0x008d|0x008d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x009a \l}"];
Node_57 [shape=record,label="{57\:\ 0x008f|0x008f: IGET  (r3 I:int) = (r7 I:android.graphics.Rect A[D('anchorRect' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:934)\l0x0091: CAST (r3 I:float) = (float) (r3 I:int) \l0x0092: IGET  (r4 I:float) = (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.halfBadgeWidth float \l0x0094: ARITH  (r3 I:float) = (r3 I:float) \- (r4 I:float) \l0x0095: CAST (r4 I:float) = (float) (r1 I:int A[D('inset' int)]) \l0x0096: ARITH  (r3 I:float) = (r3 I:float) + (r4 I:float) \l0x0097: CAST (r4 I:float) = (float) (r2 I:int A[D('totalHorizontalOffset' int)]) \l0x0098: ARITH  (r3 I:float) = (r3 I:float) + (r4 I:float) \l}"];
Node_59 [shape=record,label="{59\:\ 0x00a4|0x00a4: IPUT  (r3 I:float), (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.badgeCenterX float \l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lRETURN\l|0x00b3: RETURN   A[SYNTHETIC] (LINE:946)\l}"];
Node_58 [shape=record,label="{58\:\ 0x009a|0x009a: IGET  (r3 I:int) = (r7 I:android.graphics.Rect A[D('anchorRect' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:935)\l0x009c: CAST (r3 I:float) = (float) (r3 I:int) \l0x009d: IGET  (r4 I:float) = (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.halfBadgeWidth float \l0x009f: ARITH  (r3 I:float) = (r3 I:float) + (r4 I:float) \l0x00a0: CAST (r4 I:float) = (float) (r1 I:int A[D('inset' int)]) \l0x00a1: ARITH  (r3 I:float) = (r3 I:float) \- (r4 I:float) \l0x00a2: CAST (r4 I:float) = (float) (r2 I:int A[D('totalHorizontalOffset' int)]) \l0x00a3: ARITH  (r3 I:float) = (r3 I:float) \- (r4 I:float) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0063|0x0063: SGET  (r2 I:int) =  com.google.android.material.R.dimen.mtrl_badge_horizontal_edge_offset int  (LINE:924)\l}"];
Node_43 [shape=record,label="{43\:\ 0x002e|0x002e: IGET  (r1 I:com.google.android.material.badge.BadgeState) = (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.state com.google.android.material.badge.BadgeState \l0x0030: IGET  (r1 I:float) = (r1 I:com.google.android.material.badge.BadgeState) com.google.android.material.badge.BadgeState.badgeWithTextRadius float \l}"];
Node_45 [shape=record,label="{45\:\ 0x0039|0x0039: IGET  (r1 I:com.google.android.material.badge.BadgeState) = (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.state com.google.android.material.badge.BadgeState  (LINE:912)\l0x003b: IGET  (r1 I:float) = (r1 I:com.google.android.material.badge.BadgeState) com.google.android.material.badge.BadgeState.badgeWithTextRadius float \l0x003d: IPUT  (r1 I:float), (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.cornerRadius float \l0x003f: IPUT  (r1 I:float), (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.halfBadgeHeight float  (LINE:913)\l0x0041: INVOKE  (r1 I:java.lang.String) = (r5 I:com.google.android.material.badge.BadgeDrawable) type: DIRECT call: com.google.android.material.badge.BadgeDrawable.getBadgeText():java.lang.String A[MD:():java.lang.String (m)] (LINE:914)\l0x0045: IGET  (r2 I:com.google.android.material.internal.TextDrawableHelper) = (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.textDrawableHelper com.google.android.material.internal.TextDrawableHelper  (LINE:915)\l0x0047: INVOKE  (r2 I:float) = \l  (r2 I:com.google.android.material.internal.TextDrawableHelper)\l  (r1 I:java.lang.String A[D('badgeText' java.lang.String)])\l type: VIRTUAL call: com.google.android.material.internal.TextDrawableHelper.getTextWidth(java.lang.String):float A[MD:(java.lang.String):float (m)]\l0x004b: CONST  (r3 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x004d: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l0x004e: IGET  (r3 I:com.google.android.material.badge.BadgeState) = (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.state com.google.android.material.badge.BadgeState \l0x0050: IGET  (r3 I:float) = (r3 I:com.google.android.material.badge.BadgeState) com.google.android.material.badge.BadgeState.badgeWidePadding float \l0x0052: ARITH  (r2 I:float) = (r2 I:float) + (r3 I:float) \l0x0053: IPUT  (r2 I:float), (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.halfBadgeWidth float \l}"];
Node_37 [shape=record,label="{37\:\ 0x0014|0x0014: IGET  (r1 I:int) = (r7 I:android.graphics.Rect A[D('anchorRect' android.graphics.Rect)]) android.graphics.Rect.bottom int  (LINE:898)\l0x0016: ARITH  (r1 I:int) = (r1 I:int) \- (r0 I:int A[D('totalVerticalOffset' int)]) \l0x0017: CAST (r1 I:float) = (float) (r1 I:int) \l0x0018: IPUT  (r1 I:float), (r5 I:com.google.android.material.badge.BadgeDrawable) com.google.android.material.badge.BadgeDrawable.badgeCenterY float \l}"];
MethodNode[shape=record,label="{private void com.google.android.material.badge.BadgeDrawable.calculateCenterAndBounds((r5 'this' I:com.google.android.material.badge.BadgeDrawable A[IMMUTABLE_TYPE, THIS]), (r6 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.graphics.Rect A[D('anchorRect' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.view.View A[D('anchorView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:60:0x00a7 \-\> B:61:0x00b1, CROSS_EDGE: B:59:0x00a4 \-\> B:62:0x00b3, CROSS_EDGE: B:58:0x009a \-\> B:59:0x00a4, CROSS_EDGE: B:49:0x0063 \-\> B:50:0x0065, CROSS_EDGE: B:43:0x002e \-\> B:44:0x0032, CROSS_EDGE: B:45:0x0039 \-\> B:46:0x0055, CROSS_EDGE: B:37:0x0014 \-\> B:38:0x001b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0045\-0x0055: r1 'badgeText' Ljava\/lang\/String;\l  0x0004\-0x00c7: r0 'totalVerticalOffset' I\l  0x0069\-0x00c7: r1 'inset' I\l  0x006d\-0x00c7: r2 'totalHorizontalOffset' I\l  \-1 \-0x00c7: r6 'context' Landroid\/content\/Context;\l  \-1 \-0x00c7: r7 'anchorRect' Landroid\/graphics\/Rect;\l  \-1 \-0x00c7: r8 'anchorView' Landroid\/view\/View;\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_37;
Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_45;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_44;
Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_51 -> Node_55;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_60;
Node_54 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_33;
Node_60 -> Node_61;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_59;
Node_59 -> Node_63;
Node_63 -> Node_33;
Node_58 -> Node_59;
Node_49 -> Node_50;
Node_43 -> Node_44;
Node_45 -> Node_46;
Node_37 -> Node_38;
}

