digraph "CFG forcom.google.android.material.badge.BadgeDrawable.onVisibilityUpdated()V" {
subgraph cluster_Region_1304528787 {
label = "R(2:1|(1:(1:6)))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|boolean boolean r0 = r2.state.isVisible()\lsetVisible(r0, false)\l}"];
subgraph cluster_Region_1132642725 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_161331605 {
label = "IF [B:15:0x000c, B:17:0x0012, B:18:0x0014] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x000c|if (com.google.android.material.badge.BadgeUtils.USE_COMPAT_PARENT != false) goto L3\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|ADDED_TO_REGION\l|if (getCustomBadgeParent() != null) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x0014|ADDED_TO_REGION\l|if (r0 == false) goto L6\l}"];
subgraph cluster_Region_1268363292 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0016|((android.view.ViewGroup) getCustomBadgeParent().getParent()).invalidate()\l}"];
}
}
}
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000e}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0023|ORIG_RETURN\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ ?|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.badge.BadgeDrawable.onVisibilityUpdated((r2v0 'this' com.google.android.material.badge.BadgeDrawable A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0014 \-\> B:20:0x0023, CROSS_EDGE: B:17:0x0012 \-\> B:20:0x0023, CROSS_EDGE: B:15:0x000c \-\> B:20:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_21[style=dashed];
Node_17 -> Node_18;
Node_17 -> Node_22[style=dashed];
Node_18 -> Node_19;
Node_18 -> Node_23[style=dashed];
Node_19 -> Node_20;
Node_12 -> Node_14;
Node_16 -> Node_17;
Node_20 -> Node_13;
Node_23 -> Node_13;
Node_22 -> Node_13;
Node_21 -> Node_13;
}

