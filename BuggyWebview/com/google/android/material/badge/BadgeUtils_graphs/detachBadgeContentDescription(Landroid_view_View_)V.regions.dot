digraph "CFG forcom.google.android.material.badge.BadgeUtils.detachBadgeContentDescription(Landroid\/view\/View;)V" {
subgraph cluster_Region_260694581 {
label = "R(1:(1:5)(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_895517777 {
label = "IF [B:13:0x0004, B:15:0x000a] THEN: R(1:5) ELSE: R(1:8)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 29) goto L3\l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|ADDED_TO_REGION\l|if (androidx.core.view.ViewCompat.hasAccessibilityDelegate(r2) != false) goto L5\l}"];
subgraph cluster_Region_1871892086 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x000c|androidx.core.view.ViewCompat.setAccessibilityDelegate(r2, new com.google.android.material.badge.BadgeUtils.C05894(r2.getAccessibilityDelegate()))\l}"];
}
subgraph cluster_Region_883126523 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0019|androidx.core.view.ViewCompat.setAccessibilityDelegate(r2, null)\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0006}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x001d|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private static void com.google.android.material.badge.BadgeUtils.detachBadgeContentDescription((r2v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0019 \-\> B:18:0x001d, CROSS_EDGE: B:13:0x0004 \-\> B:17:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

