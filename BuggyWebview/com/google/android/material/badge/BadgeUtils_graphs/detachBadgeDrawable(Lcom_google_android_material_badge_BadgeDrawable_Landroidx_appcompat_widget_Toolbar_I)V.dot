digraph "CFG forcom.google.android.material.badge.BadgeUtils.detachBadgeDrawable(Lcom\/google\/android\/material\/badge\/BadgeDrawable;Landroidx\/appcompat\/widget\/Toolbar;I)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|if (r3 != null) goto L4\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0003|androidx.appcompat.view.menu.ActionMenuItemView r0 = com.google.android.material.internal.ToolbarUtils.getActionMenuItemView(r4, r5)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|if (r0 == null) goto L8\l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|removeToolbarOffset(r3)\ldetachBadgeDrawable(r3, r0)\ldetachBadgeContentDescription(r0)\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ 0x0013|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Trying to remove badge from a null menuItemView: \")\lr1.append(r5)\landroid.util.Log.w(com.google.android.material.badge.BadgeUtils.LOG_TAG, r1.toString())\l}"];
Node_18 [shape=record,label="{18\:\ 0x0029|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void com.google.android.material.badge.BadgeUtils.detachBadgeDrawable((r3v0 'badgeDrawable' com.google.android.material.badge.BadgeDrawable A[D('badgeDrawable' com.google.android.material.badge.BadgeDrawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'toolbar' androidx.appcompat.widget.Toolbar A[D('toolbar' androidx.appcompat.widget.Toolbar), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'menuItemId' int A[D('menuItemId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0029 \-\> B:11:?, CROSS_EDGE: B:17:0x0013 \-\> B:18:0x0029\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_19;
Node_19 -> Node_11;
Node_17 -> Node_18;
Node_18 -> Node_11;
}

