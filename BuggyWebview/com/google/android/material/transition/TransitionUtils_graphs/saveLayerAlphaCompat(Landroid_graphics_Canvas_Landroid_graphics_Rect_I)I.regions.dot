digraph "CFG forcom.google.android.material.transition.TransitionUtils.saveLayerAlphaCompat(Landroid\/graphics\/Canvas;Landroid\/graphics\/Rect;I)I" {
subgraph cluster_Region_2010063085 {
label = "R(2:1|(2:(1:4)|(1:7)))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0000|android.graphics.RectF android.graphics.RectF r0 = com.google.android.material.transition.TransitionUtils.transformAlphaRectF\lr0.set(r9)\l}"];
subgraph cluster_Region_2109298512 {
label = "R(2:(1:4)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_797763330 {
label = "IF [B:19:0x0009] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0009|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L3\l}"];
subgraph cluster_Region_387112595 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x000f|RETURN\l|return r8.saveLayerAlpha(r0, r10)\l}"];
}
}
subgraph cluster_Region_1303146803 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0020|RETURN\l|return r8.saveLayerAlpha(r0.left, r0.top, r0.right, r0.bottom, r10, 31)\l}"];
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000b}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0010}"];
MethodNode[shape=record,label="{private static int com.google.android.material.transition.TransitionUtils.saveLayerAlphaCompat((r8v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'bounds' android.graphics.Rect A[D('bounds' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'alpha' int A[D('alpha' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0020 \-\> B:17:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_22[style=dashed];
Node_21 -> Node_17;
Node_23 -> Node_17;
Node_16 -> Node_18;
Node_20 -> Node_21;
Node_22 -> Node_23;
}

