digraph "CFG forcom.google.android.material.transition.TransitionUtils.saveLayerAlphaCompat(Landroid\/graphics\/Canvas;Landroid\/graphics\/Rect;I)I" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: SGET  (r0 I:android.graphics.RectF) =  com.google.android.material.transition.TransitionUtils.transformAlphaRectF android.graphics.RectF  (LINE:319)\l0x0002: INVOKE  (r0 I:android.graphics.RectF), (r9 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.RectF.set(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (c)]\l0x0005: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:320)\l0x0007: CONST  (r2 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|0x0009: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:22:0x0010 \l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|0x000b: INVOKE  (r0 I:int) = \l  (r8 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.RectF)\l  (r10 I:int A[D('alpha' int)])\l type: VIRTUAL call: android.graphics.Canvas.saveLayerAlpha(android.graphics.RectF, int):int A[MD:(android.graphics.RectF, int):int (c)] (LINE:321)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:int) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|0x0010: IGET  (r2 I:float) = (r0 I:android.graphics.RectF) android.graphics.RectF.left float  (LINE:323)\l0x0012: IGET  (r3 I:float) = (r0 I:android.graphics.RectF) android.graphics.RectF.top float \l0x0014: IGET  (r4 I:float) = (r0 I:android.graphics.RectF) android.graphics.RectF.right float \l0x0016: IGET  (r5 I:float) = (r0 I:android.graphics.RectF) android.graphics.RectF.bottom float \l0x0018: CONST  (r7 I:??[int, float, short, byte, char]) = (31 ??[int, float, short, byte, char]) \l0x001a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x001b: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('alpha' int)]) \l0x001c: INVOKE  (r0 I:int) = (r1 I:android.graphics.Canvas), (r2 I:float), (r3 I:float), (r4 I:float), (r5 I:float), (r6 I:int), (r7 I:int) type: VIRTUAL call: android.graphics.Canvas.saveLayerAlpha(float, float, float, float, int, int):int A[MD:(float, float, float, float, int, int):int (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0020|RETURN\l|0x0020: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private static int com.google.android.material.transition.TransitionUtils.saveLayerAlphaCompat((r8 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.graphics.Rect A[D('bounds' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('alpha' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0020 \-\> B:17:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0020: r8 'canvas' Landroid\/graphics\/Canvas;\l  \-1 \-0x0020: r9 'bounds' Landroid\/graphics\/Rect;\l  \-1 \-0x0020: r10 'alpha' I\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_22 -> Node_23;
Node_23 -> Node_17;
}

