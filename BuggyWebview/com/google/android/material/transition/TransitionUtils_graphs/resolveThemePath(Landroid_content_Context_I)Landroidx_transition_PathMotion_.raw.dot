digraph "CFG forcom.google.android.material.transition.TransitionUtils.resolveThemePath(Landroid\/content\/Context;I)Landroidx\/transition\/PathMotion;" {
Node_42 [shape=record,label="{42\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:android.util.TypedValue) =  android.util.TypedValue  (LINE:99)\l0x0002: INVOKE  (r0 I:android.util.TypedValue) type: DIRECT call: android.util.TypedValue.\<init\>():void A[MD:():void (c)]\l0x0005: INVOKE  (r1 I:android.content.res.Resources$Theme) = (r5 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getTheme():android.content.res.Resources$Theme A[MD:():android.content.res.Resources$Theme (c)] (LINE:100)\l0x0009: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000a: INVOKE  (r1 I:boolean) = \l  (r1 I:android.content.res.Resources$Theme)\l  (r6 I:int A[D('attrResId' int)])\l  (r0 I:android.util.TypedValue A[D('pathValue' android.util.TypedValue)])\l  (r2 I:boolean)\l type: VIRTUAL call: android.content.res.Resources.Theme.resolveAttribute(int, android.util.TypedValue, boolean):boolean A[MD:(int, android.util.TypedValue, boolean):boolean (c)]\l0x000e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x0058 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0011|0x0011: IGET  (r1 I:int) = (r0 I:android.util.TypedValue A[D('pathValue' android.util.TypedValue)]) android.util.TypedValue.type int  (LINE:101)\l0x0013: CONST  (r4 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0015|0x0015: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x003b \l}"];
Node_48 [shape=record,label="{48\:\ 0x0017|0x0017: IGET  (r1 I:int) = (r0 I:android.util.TypedValue A[D('pathValue' android.util.TypedValue)]) android.util.TypedValue.data int  (LINE:102)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0019|0x0019: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pathInt' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x001c  (LINE:103)\l}"];
Node_50 [shape=record,label="{50\:\ 0x001b|RETURN\l|0x001b: RETURN  (r3 I:androidx.transition.PathMotion)  (LINE:105)\l}"];
Node_43 [shape=record,label="{43\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ 0x001c|0x001c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pathInt' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0024  (LINE:106)\l}"];
Node_52 [shape=record,label="{52\:\ 0x001e|0x001e: NEW_INSTANCE  (r2 I:com.google.android.material.transition.MaterialArcMotion) =  com.google.android.material.transition.MaterialArcMotion  (LINE:107)\l0x0020: INVOKE  (r2 I:com.google.android.material.transition.MaterialArcMotion) type: DIRECT call: com.google.android.material.transition.MaterialArcMotion.\<init\>():void A[MD:():void (m)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0023|RETURN\l|0x0023: RETURN  (r2 I:androidx.transition.PathMotion) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0024|0x0024: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:109)\l0x0026: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0028: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x002b: CONST_STR  (r4 I:java.lang.String) =  \"Invalid motion path type: \" \l0x002d: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0030: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:int A[D('pathInt' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0033: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0037: INVOKE  (r2 I:java.lang.IllegalArgumentException), (r3 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x003a|0x003a: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_56 [shape=record,label="{56\:\ 0x003b|0x003b: IGET  (r1 I:int A[D('pathInt' int)]) = (r0 I:android.util.TypedValue A[D('pathValue' android.util.TypedValue)]) android.util.TypedValue.type int  (LINE:111)\l0x003d: CONST  (r2 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x003e|0x003e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0050 \l}"];
Node_58 [shape=record,label="{58\:\ 0x0040|0x0040: IGET  (r1 I:java.lang.CharSequence) = (r0 I:android.util.TypedValue A[D('pathValue' android.util.TypedValue)]) android.util.TypedValue.string java.lang.CharSequence  (LINE:112)\l0x0042: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) type: STATIC call: java.lang.String.valueOf(java.lang.Object):java.lang.String A[MD:(java.lang.Object):java.lang.String (c)]\l0x0046: NEW_INSTANCE  (r2 I:androidx.transition.PatternPathMotion) =  androidx.transition.PatternPathMotion  (LINE:113)\l0x0048: INVOKE  (r3 I:android.graphics.Path) = (r1 I:java.lang.String A[D('pathString' java.lang.String)]) type: STATIC call: androidx.core.graphics.PathParser.createPathFromPathData(java.lang.String):android.graphics.Path A[MD:(java.lang.String):android.graphics.Path (m)]\l0x004c: INVOKE  (r2 I:androidx.transition.PatternPathMotion), (r3 I:android.graphics.Path) type: DIRECT call: androidx.transition.PatternPathMotion.\<init\>(android.graphics.Path):void A[MD:(android.graphics.Path):void (m)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x004f|RETURN\l|0x004f: RETURN  (r2 I:androidx.transition.PathMotion) \l}"];
Node_60 [shape=record,label="{60\:\ 0x0050|0x0050: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException A[D('pathString' java.lang.String)]) =  java.lang.IllegalArgumentException  (LINE:115)\l0x0052: CONST_STR  (r2 I:java.lang.String) =  \"Motion path theme attribute must either be an enum value or path data string\" \l0x0054: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_61 [shape=record,label="{61\:\ 0x0057|0x0057: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_62 [shape=record,label="{62\:\ 0x0058|RETURN\l|0x0058: RETURN  (r3 I:androidx.transition.PathMotion)  (LINE:119)\l}"];
MethodNode[shape=record,label="{static androidx.transition.PathMotion com.google.android.material.transition.TransitionUtils.resolveThemePath((r5 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('attrResId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:53:0x0023 \-\> B:43:?, CROSS_EDGE: B:55:0x003a \-\> B:43:?, CROSS_EDGE: B:59:0x004f \-\> B:43:?, CROSS_EDGE: B:61:0x0057 \-\> B:43:?, CROSS_EDGE: B:62:0x0058 \-\> B:43:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0019\-0x003b: r1 'pathInt' I\l  0x0046\-0x0050: r1 'pathString' Ljava\/lang\/String;\l  0x0005\-0x0058: r0 'pathValue' Landroid\/util\/TypedValue;\l  \-1 \-0x0058: r5 'context' Landroid\/content\/Context;\l  \-1 \-0x0058: r6 'attrResId' I\l}"];
MethodNode -> Node_42;Node_42 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_62;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_56;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_43;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_54;
Node_52 -> Node_53;
Node_53 -> Node_43;
Node_54 -> Node_55;
Node_55 -> Node_43;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_60;
Node_58 -> Node_59;
Node_59 -> Node_43;
Node_60 -> Node_61;
Node_61 -> Node_43;
Node_62 -> Node_43;
}

