digraph "CFG forcom.google.android.material.transition.ScaleProvider.createDisappear(Landroid\/view\/ViewGroup;Landroid\/view\/View;)Landroid\/animation\/Animator;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r2 I:com.google.android.material.transition.ScaleProvider) com.google.android.material.transition.ScaleProvider.scaleOnDisappear boolean  (LINE:160)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0006 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|RETURN\l|0x0004: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:161)\l0x0005: RETURN  (r0 I:android.animation.Animator) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: IGET  (r0 I:boolean) = (r2 I:com.google.android.material.transition.ScaleProvider) com.google.android.material.transition.ScaleProvider.growing boolean  (LINE:164)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0013 \l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|0x000a: IGET  (r0 I:float) = (r2 I:com.google.android.material.transition.ScaleProvider) com.google.android.material.transition.ScaleProvider.outgoingStartScale float  (LINE:165)\l0x000c: IGET  (r1 I:float) = (r2 I:com.google.android.material.transition.ScaleProvider) com.google.android.material.transition.ScaleProvider.outgoingEndScale float \l0x000e: INVOKE  (r0 I:android.animation.Animator) = (r4 I:android.view.View A[D('view' android.view.View)]), (r0 I:float), (r1 I:float) type: STATIC call: com.google.android.material.transition.ScaleProvider.createScaleAnimator(android.view.View, float, float):android.animation.Animator A[MD:(android.view.View, float, float):android.animation.Animator (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0012|RETURN\l|0x0012: RETURN  (r0 I:android.animation.Animator) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0013|0x0013: IGET  (r0 I:float) = (r2 I:com.google.android.material.transition.ScaleProvider) com.google.android.material.transition.ScaleProvider.incomingEndScale float  (LINE:167)\l0x0015: IGET  (r1 I:float) = (r2 I:com.google.android.material.transition.ScaleProvider) com.google.android.material.transition.ScaleProvider.incomingStartScale float \l0x0017: INVOKE  (r0 I:android.animation.Animator) = (r4 I:android.view.View A[D('view' android.view.View)]), (r0 I:float), (r1 I:float) type: STATIC call: com.google.android.material.transition.ScaleProvider.createScaleAnimator(android.view.View, float, float):android.animation.Animator A[MD:(android.view.View, float, float):android.animation.Animator (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x001b|RETURN\l|0x001b: RETURN  (r0 I:android.animation.Animator) \l}"];
MethodNode[shape=record,label="{public android.animation.Animator com.google.android.material.transition.ScaleProvider.createDisappear((r2 'this' I:com.google.android.material.transition.ScaleProvider A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0012 \-\> B:13:?, CROSS_EDGE: B:23:0x001b \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001b: r3 'sceneRoot' Landroid\/view\/ViewGroup;\l  \-1 \-0x001b: r4 'view' Landroid\/view\/View;\lMETHOD_OVERRIDE: [com.google.android.material.transition.VisibilityAnimatorProvider.createDisappear(android.view.ViewGroup, android.view.View):android.animation.Animator]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

