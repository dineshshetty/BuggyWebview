digraph "CFG forcom.google.android.material.transition.MaterialContainerTransform.buildThresholdsGroup(Z)Lcom\/google\/android\/material\/transition\/MaterialContainerTransform$ProgressThresholdsGroup;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|androidx.transition.PathMotion r0 = getPathMotion()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|if ((r0 instanceof androidx.transition.ArcMotion) != false) goto L8\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008}"];
Node_16 [shape=record,label="{16\:\ 0x000a|if ((r0 instanceof com.google.android.material.transition.MaterialArcMotion) == false) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d}"];
Node_19 [shape=record,label="{19\:\ 0x0015|RETURN\l|return getThresholdsOrDefault(r4, com.google.android.material.transition.MaterialContainerTransform.DEFAULT_ENTER_THRESHOLDS, com.google.android.material.transition.MaterialContainerTransform.DEFAULT_RETURN_THRESHOLDS)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016}"];
Node_21 [shape=record,label="{21\:\ 0x001e|RETURN\l|return getThresholdsOrDefault(r4, com.google.android.material.transition.MaterialContainerTransform.DEFAULT_ENTER_THRESHOLDS_ARC, com.google.android.material.transition.MaterialContainerTransform.DEFAULT_RETURN_THRESHOLDS_ARC)\l}"];
MethodNode[shape=record,label="{private com.google.android.material.transition.MaterialContainerTransform$ProgressThresholdsGroup com.google.android.material.transition.MaterialContainerTransform.buildThresholdsGroup((r3v0 'this' com.google.android.material.transition.MaterialContainerTransform A[IMMUTABLE_TYPE, THIS]), (r4v0 'entering' boolean A[D('entering' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001e \-\> B:12:?, CROSS_EDGE: B:14:0x0006 \-\> B:20:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_20[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

