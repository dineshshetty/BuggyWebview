digraph "CFG forcom.google.android.material.transition.MaterialContainerTransform.calculateDrawableBounds(Landroid\/view\/View;Landroid\/view\/View;FF)Landroid\/graphics\/RectF;" {
subgraph cluster_Region_320702851 {
label = "R(1:(2:(2:2|3)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1973818412 {
label = "R(2:(2:2|3)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1445327566 {
label = "IF [B:9:0x0000] THEN: R(2:2|3) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|if (r5 != null) goto L2\l}"];
subgraph cluster_Region_1508249137 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0002|android.graphics.RectF android.graphics.RectF r0 = com.google.android.material.transition.TransitionUtils.getLocationOnScreen(r5)\lr0.offset(r6, r7)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0009|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_834963486 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x001a|RETURN\l|return new android.graphics.RectF(0.0f, 0.0f, r4.getWidth(), r4.getHeight())\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x000a}"];
MethodNode[shape=record,label="{private static android.graphics.RectF com.google.android.material.transition.MaterialContainerTransform.calculateDrawableBounds((r4v0 'drawingView' android.view.View A[D('drawingView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'boundingView' android.view.View A[D('boundingView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'offsetX' float A[D('offsetX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'offsetY' float A[D('offsetY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001a \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_9 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_8;
Node_13 -> Node_8;
Node_7 -> Node_9;
Node_12 -> Node_13;
}

