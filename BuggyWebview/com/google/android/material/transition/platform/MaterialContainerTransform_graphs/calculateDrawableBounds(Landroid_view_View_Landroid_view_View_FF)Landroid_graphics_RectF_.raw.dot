digraph "CFG forcom.google.android.material.transition.platform.MaterialContainerTransform.calculateDrawableBounds(Landroid\/view\/View;Landroid\/view\/View;FF)Landroid\/graphics\/RectF;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('boundingView' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x000a  (LINE:1030)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: INVOKE  (r0 I:android.graphics.RectF) = (r5 I:android.view.View A[D('boundingView' android.view.View)]) type: STATIC call: com.google.android.material.transition.platform.TransitionUtils.getLocationOnScreen(android.view.View):android.graphics.RectF A[MD:(android.view.View):android.graphics.RectF (m)] (LINE:1031)\l0x0006: INVOKE  \l  (r0 I:android.graphics.RectF A[D('drawableBounds' android.graphics.RectF)])\l  (r6 I:float A[D('offsetX' float)])\l  (r7 I:float A[D('offsetY' float)])\l type: VIRTUAL call: android.graphics.RectF.offset(float, float):void A[MD:(float, float):void (c)] (LINE:1032)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0009|RETURN\l|0x0009: RETURN  (r0 I:android.graphics.RectF A[D('drawableBounds' android.graphics.RectF)])  (LINE:1033)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x000a|0x000a: NEW_INSTANCE  (r0 I:android.graphics.RectF A[D('drawableBounds' android.graphics.RectF)]) =  android.graphics.RectF  (LINE:1035)\l0x000c: INVOKE  (r1 I:int) = (r4 I:android.view.View A[D('drawingView' android.view.View)]) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)]\l0x0010: CAST (r1 I:float) = (float) (r1 I:int) \l0x0011: INVOKE  (r2 I:int) = (r4 I:android.view.View A[D('drawingView' android.view.View)]) type: VIRTUAL call: android.view.View.getHeight():int A[MD:():int (c)]\l0x0015: CAST (r2 I:float) = (float) (r2 I:int) \l0x0016: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: INVOKE  (r0 I:android.graphics.RectF), (r3 I:float), (r3 I:float), (r1 I:float), (r2 I:float) type: DIRECT call: android.graphics.RectF.\<init\>(float, float, float, float):void A[MD:(float, float, float, float):void (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001a|RETURN\l|0x001a: RETURN  (r0 I:android.graphics.RectF) \l}"];
MethodNode[shape=record,label="{private static android.graphics.RectF com.google.android.material.transition.platform.MaterialContainerTransform.calculateDrawableBounds((r4 I:android.view.View A[D('drawingView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.view.View A[D('boundingView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[D('offsetX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:float A[D('offsetY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001a \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x000a: r0 'drawableBounds' Landroid\/graphics\/RectF;\l  \-1 \-0x001a: r4 'drawingView' Landroid\/view\/View;\l  \-1 \-0x001a: r5 'boundingView' Landroid\/view\/View;\l  \-1 \-0x001a: r6 'offsetX' F\l  \-1 \-0x001a: r7 'offsetY' F\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

