digraph "CFG forcom.google.android.material.transition.platform.ScaleProvider.createScaleAnimator(Landroid\/view\/View;FF)Landroid\/animation\/Animator;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:float) = (r9 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getScaleX():float A[MD:():float (c)] (LINE:177)\l0x0004: INVOKE  (r1 I:float) = (r9 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getScaleY():float A[MD:():float (c)] (LINE:178)\l0x0008: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:179)\l0x0009: NEW_ARRAY  (r3 I:android.animation.PropertyValuesHolder[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: android.animation.PropertyValuesHolder[] \l0x000b: SGET  (r4 I:android.util.Property) =  android.view.View.SCALE_X android.util.Property \l0x000d: NEW_ARRAY  (r5 I:float[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x000f: ARITH  (r6 I:float) = (r0 I:float A[D('originalScaleX' float)]) * (r10 I:float A[D('startScale' float)]) \l0x0011: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: APUT  (r5 I:??[int, float][]), (r7 I:??[int, short, byte, char]), (r6 I:??[int, float, short, byte, char]) \l0x0014: ARITH  (r6 I:float) = (r0 I:float A[D('originalScaleX' float)]) * (r11 I:float A[D('endScale' float)]) \l0x0016: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0017: APUT  (r5 I:??[int, float][]), (r8 I:??[int, short, byte, char]), (r6 I:??[int, float, short, byte, char]) \l0x0019: INVOKE  (r4 I:android.animation.PropertyValuesHolder) = (r4 I:android.util.Property), (r5 I:float[]) type: STATIC call: android.animation.PropertyValuesHolder.ofFloat(android.util.Property, float[]):android.animation.PropertyValuesHolder A[MD:(android.util.Property\<?, java.lang.Float\>, float[]):android.animation.PropertyValuesHolder VARARG (c)] (LINE:182)\l0x001d: APUT  (r3 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) \l0x001f: SGET  (r4 I:android.util.Property) =  android.view.View.SCALE_Y android.util.Property \l0x0021: NEW_ARRAY  (r2 I:float[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0023: ARITH  (r5 I:float) = (r1 I:float A[D('originalScaleY' float)]) * (r10 I:float A[D('startScale' float)]) \l0x0025: APUT  (r2 I:??[int, float][]), (r7 I:??[int, short, byte, char]), (r5 I:??[int, float, short, byte, char]) \l0x0027: ARITH  (r5 I:float) = (r1 I:float A[D('originalScaleY' float)]) * (r11 I:float A[D('endScale' float)]) \l0x0029: APUT  (r2 I:??[int, float][]), (r8 I:??[int, short, byte, char]), (r5 I:??[int, float, short, byte, char]) \l0x002b: INVOKE  (r2 I:android.animation.PropertyValuesHolder) = (r4 I:android.util.Property), (r2 I:float[]) type: STATIC call: android.animation.PropertyValuesHolder.ofFloat(android.util.Property, float[]):android.animation.PropertyValuesHolder A[MD:(android.util.Property\<?, java.lang.Float\>, float[]):android.animation.PropertyValuesHolder VARARG (c)] (LINE:184)\l0x002f: APUT  (r3 I:??[OBJECT, ARRAY][]), (r8 I:??[int, short, byte, char]), (r2 I:??[OBJECT, ARRAY]) \l0x0031: INVOKE  (r2 I:android.animation.ObjectAnimator) = (r9 I:java.lang.Object A[D('view' android.view.View)]), (r3 I:android.animation.PropertyValuesHolder[]) type: STATIC call: android.animation.ObjectAnimator.ofPropertyValuesHolder(java.lang.Object, android.animation.PropertyValuesHolder[]):android.animation.ObjectAnimator A[MD:(java.lang.Object, android.animation.PropertyValuesHolder[]):android.animation.ObjectAnimator VARARG (c)] (LINE:180)\l0x0035: NEW_INSTANCE  (r3 I:com.google.android.material.transition.platform.ScaleProvider$1) =  com.google.android.material.transition.platform.ScaleProvider$1  (LINE:186)\l0x0037: INVOKE  \l  (r3 I:com.google.android.material.transition.platform.ScaleProvider$1)\l  (r9 I:android.view.View A[D('view' android.view.View)])\l  (r0 I:float A[D('originalScaleX' float)])\l  (r1 I:float A[D('originalScaleY' float)])\l type: DIRECT call: com.google.android.material.transition.platform.ScaleProvider.1.\<init\>(android.view.View, float, float):void A[MD:(android.view.View, float, float):void (m)]\l0x003a: INVOKE  \l  (r2 I:android.animation.ObjectAnimator A[D('animator' android.animation.ObjectAnimator)])\l  (r3 I:android.animation.Animator$AnimatorListener)\l type: VIRTUAL call: android.animation.ObjectAnimator.addListener(android.animation.Animator$AnimatorListener):void A[MD:(android.animation.Animator$AnimatorListener):void (s)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|RETURN\l|0x003d: RETURN  (r2 I:android.animation.Animator A[D('animator' android.animation.ObjectAnimator)])  (LINE:194)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static android.animation.Animator com.google.android.material.transition.platform.ScaleProvider.createScaleAnimator((r9 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:float A[D('startScale' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:float A[D('endScale' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x003d: r0 'originalScaleX' F\l  0x0008\-0x003d: r1 'originalScaleY' F\l  0x0035\-0x003d: r2 'animator' Landroid\/animation\/ObjectAnimator;\l  \-1 \-0x003d: r9 'view' Landroid\/view\/View;\l  \-1 \-0x003d: r10 'startScale' F\l  \-1 \-0x003d: r11 'endScale' F\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

