digraph "CFG forcom.google.android.material.transition.platform.MaterialVisibility.onAppear(Landroid\/view\/ViewGroup;Landroid\/view\/View;Landroid\/transition\/TransitionValues;Landroid\/transition\/TransitionValues;)Landroid\/animation\/Animator;" {
subgraph cluster_Region_1574950325 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0005|RETURN\l|return createAnimator(r2, r3, true)\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public android.animation.Animator com.google.android.material.transition.platform.MaterialVisibility.onAppear((r1v0 'this' com.google.android.material.transition.platform.MaterialVisibility\<P extends com.google.android.material.transition.platform.VisibilityAnimatorProvider\> A[D('this' com.google.android.material.transition.platform.MaterialVisibility\<P extends com.google.android.material.transition.platform.VisibilityAnimatorProvider\>), IMMUTABLE_TYPE, THIS]), (r2v0 'sceneRoot' android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'startValues' android.transition.TransitionValues A[D('startValues' android.transition.TransitionValues), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'endValues' android.transition.TransitionValues A[D('endValues' android.transition.TransitionValues), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [P extends com.google.android.material.transition.platform.VisibilityAnimatorProvider]\lMETHOD_OVERRIDE: [ClspMth\{android.transition.Visibility.onAppear(android.view.ViewGroup, android.view.View, android.transition.TransitionValues, android.transition.TransitionValues):android.animation.Animator\}]\l}"];
MethodNode -> Node_4;Node_7 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
}

