digraph "CFG forcom.google.android.material.transition.platform.MaterialVisibility.addAnimatorIfNeeded(Ljava\/util\/List;Lcom\/google\/android\/material\/transition\/platform\/VisibilityAnimatorProvider;Landroid\/view\/ViewGroup;Landroid\/view\/View;Z)V" {
subgraph cluster_Region_1707244423 {
label = "R(1:(2:(1:2)|(2:(1:5)(1:10)|(1:(1:7))))) | DECL_VAR: android.animation.Animator animator\l";
node [shape=record,color=blue];
subgraph cluster_Region_2109012485 {
label = "R(2:(1:2)|(2:(1:5)(1:10)|(1:(1:7))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1173329003 {
label = "IF [B:14:0x0000] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|if (r2 == null) goto L2\l}"];
subgraph cluster_Region_83312618 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0002|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1914663600 {
label = "R(2:(1:5)(1:10)|(1:(1:7)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_681691684 {
label = "IF [B:16:0x0003] THEN: R(1:5) ELSE: R(1:10)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0003|if (r5 != false) goto L5\l}"];
subgraph cluster_Region_1353118886 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0005|android.animation.Animator r0 = r2.createAppear(r3, r4)\l}"];
}
subgraph cluster_Region_947974522 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000a|android.animation.Animator r0 = r2.createDisappear(r3, r4)\l}"];
}
}
subgraph cluster_Region_299130775 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_752953896 {
label = "IF [B:20:0x000f] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x000f|PHI: r0 \l  PHI: (r0v1 'animator' android.animation.Animator) = (r0v0 'animator' android.animation.Animator), (r0v2 'animator' android.animation.Animator) binds: [B:18:0x000a, B:17:0x0005] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != null) goto L7\l}"];
subgraph cluster_Region_635586550 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0011|r1.add(r0)\l}"];
}
}
}
}
}
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0014|ORIG_RETURN\l}"];
Node_23 [shape=record,color=red,label="{23\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void com.google.android.material.transition.platform.MaterialVisibility.addAnimatorIfNeeded((r1v0 'animators' java.util.List\<android.animation.Animator\> A[D('animators' java.util.List\<android.animation.Animator\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'animatorProvider' com.google.android.material.transition.platform.VisibilityAnimatorProvider A[D('animatorProvider' com.google.android.material.transition.platform.VisibilityAnimatorProvider), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'sceneRoot' android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'appearing' boolean A[D('appearing' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0014 \-\> B:13:?, CROSS_EDGE: B:20:0x000f \-\> B:22:0x0014, CROSS_EDGE: B:18:0x000a \-\> B:20:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: [P extends com.google.android.material.transition.platform.VisibilityAnimatorProvider]\lSIGNATURE: (Ljava\/util\/List\<Landroid\/animation\/Animator;\>;Lcom\/google\/android\/material\/transition\/platform\/VisibilityAnimatorProvider;Landroid\/view\/ViewGroup;Landroid\/view\/View;Z)V\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_13;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_23[style=dashed];
Node_21 -> Node_22;
Node_12 -> Node_14;
Node_22 -> Node_13;
Node_23 -> Node_13;
}

