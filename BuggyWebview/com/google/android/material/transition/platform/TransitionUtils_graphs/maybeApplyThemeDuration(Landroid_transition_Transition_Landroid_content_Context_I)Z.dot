digraph "CFG forcom.google.android.material.transition.platform.TransitionUtils.maybeApplyThemeDuration(Landroid\/transition\/Transition;Landroid\/content\/Context;I)Z" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|if (r7 == 0) goto L11\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002}"];
Node_17 [shape=record,label="{17\:\ 0x000a|if ((r5.getDuration() \> (\-1) ? 1 : (r5.getDuration() == (\-1) ? 0 : \-1)) != 0) goto L10\l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|int r1 = com.google.android.material.motion.MotionUtils.resolveThemeDuration(r6, r7, \-1)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|if (r1 == (\-1)) goto L9\l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|r5.setDuration((long) r1)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|RETURN\l|return true\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_22 [shape=record,label="{22\:\ 0x0019|RETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static boolean com.google.android.material.transition.platform.TransitionUtils.maybeApplyThemeDuration((r5v0 'transition' android.transition.Transition A[D('transition' android.transition.Transition), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'attrResId' int A[D('attrResId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x001a \-\> B:14:?, CROSS_EDGE: B:17:0x000a \-\> B:22:0x0019, CROSS_EDGE: B:15:0x0000 \-\> B:22:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_14;
Node_22 -> Node_14;
}

