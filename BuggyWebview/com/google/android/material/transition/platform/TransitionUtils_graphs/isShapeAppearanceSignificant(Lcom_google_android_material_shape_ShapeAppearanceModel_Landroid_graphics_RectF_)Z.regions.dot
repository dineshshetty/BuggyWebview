digraph "CFG forcom.google.android.material.transition.platform.TransitionUtils.isShapeAppearanceSignificant(Lcom\/google\/android\/material\/shape\/ShapeAppearanceModel;Landroid\/graphics\/RectF;)Z" {
subgraph cluster_Region_749942475 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000b|RETURN\l|return (r2.getTopLeftCornerSize().getCornerSize(r3) == 0.0f && r2.getTopRightCornerSize().getCornerSize(r3) == 0.0f && r2.getBottomRightCornerSize().getCornerSize(r3) == 0.0f && r2.getBottomLeftCornerSize().getCornerSize(r3) == 0.0f) ? false : true\l}"];
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0000}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000d}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0017|REMOVE\lADDED_TO_REGION\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0019}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0023|REMOVE\lADDED_TO_REGION\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0025}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x002f|REMOVE\lADDED_TO_REGION\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0032|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0034|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.material.transition.platform.TransitionUtils.isShapeAppearanceSignificant((r2v0 'shapeAppearanceModel' com.google.android.material.shape.ShapeAppearanceModel A[D('shapeAppearanceModel' com.google.android.material.shape.ShapeAppearanceModel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'bounds' android.graphics.RectF A[D('bounds' android.graphics.RectF), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0034 \-\> B:28:0x0035, CROSS_EDGE: B:22:0x0023 \-\> B:27:0x0034, CROSS_EDGE: B:20:0x0017 \-\> B:27:0x0034, CROSS_EDGE: B:18:0x000b \-\> B:27:0x0034\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_18 -> Node_19;
Node_18 -> Node_27;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_27;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_27;
Node_26 -> Node_16;
Node_27 -> Node_16;
}

