digraph "CFG forcom.google.android.material.transition.platform.SlideDistanceProvider.setSlideDistance(I)V" {
subgraph cluster_Region_411929742 {
label = "R(1:(2:(1:6)|(1:2)))";
node [shape=record,color=blue];
subgraph cluster_Region_54091705 {
label = "R(2:(1:6)|(1:2))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_282461412 {
label = "IF [B:9:0x0000] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|if (r3 \< 0) goto L5\l}"];
subgraph cluster_Region_366997950 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000c|throw new java.lang.IllegalArgumentException(\"Slide distance must be positive. If attempting to reverse the direction of the slide, use setSlideEdge(int) instead.\")\l}"];
}
}
subgraph cluster_Region_1640167031 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0002|r2.slideDistance = r3\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0004}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0005}"];
MethodNode[shape=record,label="{public void com.google.android.material.transition.platform.SlideDistanceProvider.setSlideDistance((r2v0 'this' com.google.android.material.transition.platform.SlideDistanceProvider A[IMMUTABLE_TYPE, THIS]), (r3v0 'slideDistance' int A[D('slideDistance' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000c \-\> B:8:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_7;Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_13 -> Node_8;
Node_10 -> Node_11;
Node_7 -> Node_9;
Node_11 -> Node_8;
Node_12 -> Node_13;
}

