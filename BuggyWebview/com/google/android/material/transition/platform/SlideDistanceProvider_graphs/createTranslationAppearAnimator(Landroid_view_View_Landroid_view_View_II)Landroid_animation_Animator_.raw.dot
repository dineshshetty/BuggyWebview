digraph "CFG forcom.google.android.material.transition.platform.SlideDistanceProvider.createTranslationAppearAnimator(Landroid\/view\/View;Landroid\/view\/View;II)Landroid\/animation\/Animator;" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: INVOKE  (r0 I:float) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getTranslationX():float A[MD:():float (c)] (LINE:134)\l0x0004: INVOKE  (r1 I:float) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getTranslationY():float A[MD:():float (c)] (LINE:135)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0008|0x0008: SWITCH  (r7 I:?? A[D('slideEdge' int)])\l case 3: goto B:50:0x005d\l case 5: goto B:48:0x0055\l case 48: goto B:46:0x004d\l case 80: goto B:44:0x0046\l case 8388611: goto B:38:0x0034\l case 8388613: goto B:32:0x0022\l default: goto B:30:0x000b  (LINE:136)\l}"];
Node_30 [shape=record,label="{30\:\ 0x000b|0x000b: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:158)\l0x000d: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000f: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0012: CONST_STR  (r4 I:java.lang.String) =  \"Invalid slide direction: \" \l0x0014: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0017: INVOKE  (r3 I:java.lang.StringBuilder), (r7 I:int A[D('slideEdge' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x001a: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x001e: INVOKE  (r2 I:java.lang.IllegalArgumentException), (r3 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|0x0021: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0022|0x0023: INVOKE  (r2 I:boolean) = (r5 I:android.view.View A[D('sceneRoot' android.view.View)]) type: STATIC call: com.google.android.material.transition.platform.SlideDistanceProvider.isRtl(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:154)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0027|0x0027: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x002d \l}"];
Node_34 [shape=record,label="{34\:\ 0x0029|0x0029: CAST (r2 I:float) = (float) (r8 I:int A[D('slideDistance' int)]) \l0x002a: ARITH  (r2 I:float) = (r0 I:float A[D('originalX' float)]) \- (r2 I:float) \l}"];
Node_36 [shape=record,label="{36\:\ 0x002f|0x002f: INVOKE  (r2 I:android.animation.Animator) = \l  (r6 I:android.view.View A[D('view' android.view.View)])\l  (r2 I:float)\l  (r0 I:float A[D('originalX' float)])\l  (r0 I:float A[D('originalX' float)])\l type: STATIC call: com.google.android.material.transition.platform.SlideDistanceProvider.createTranslationXAnimator(android.view.View, float, float, float):android.animation.Animator A[MD:(android.view.View, float, float, float):android.animation.Animator (m)] (LINE:152)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0033|RETURN\l|0x0033: RETURN  (r2 I:android.animation.Animator) \l}"];
Node_35 [shape=record,label="{35\:\ 0x002d|0x002d: CAST (r2 I:float) = (float) (r8 I:int A[D('slideDistance' int)]) \l0x002e: ARITH  (r2 I:float) = (r2 I:float) + (r0 I:float A[D('originalX' float)]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0034|0x0035: INVOKE  (r2 I:boolean) = (r5 I:android.view.View A[D('sceneRoot' android.view.View)]) type: STATIC call: com.google.android.material.transition.platform.SlideDistanceProvider.isRtl(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:148)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0039|0x0039: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x003e \l}"];
Node_40 [shape=record,label="{40\:\ 0x003b|0x003b: CAST (r2 I:float) = (float) (r8 I:int A[D('slideDistance' int)]) \l0x003c: ARITH  (r2 I:float) = (r2 I:float) + (r0 I:float A[D('originalX' float)]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0041|0x0041: INVOKE  (r2 I:android.animation.Animator) = \l  (r6 I:android.view.View A[D('view' android.view.View)])\l  (r2 I:float)\l  (r0 I:float A[D('originalX' float)])\l  (r0 I:float A[D('originalX' float)])\l type: STATIC call: com.google.android.material.transition.platform.SlideDistanceProvider.createTranslationXAnimator(android.view.View, float, float, float):android.animation.Animator A[MD:(android.view.View, float, float, float):android.animation.Animator (m)] (LINE:146)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0045|RETURN\l|0x0045: RETURN  (r2 I:android.animation.Animator) \l}"];
Node_41 [shape=record,label="{41\:\ 0x003e|0x003e: CAST (r2 I:float) = (float) (r8 I:int A[D('slideDistance' int)]) \l0x003f: ARITH  (r2 I:float) = (r0 I:float A[D('originalX' float)]) \- (r2 I:float) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0046|0x0046: CAST (r2 I:float) = (float) (r8 I:int A[D('slideDistance' int)])  (LINE:144)\l0x0047: ARITH  (r2 I:float) = (r2 I:float) + (r1 I:float A[D('originalY' float)]) \l0x0048: INVOKE  (r2 I:android.animation.Animator) = \l  (r6 I:android.view.View A[D('view' android.view.View)])\l  (r2 I:float)\l  (r1 I:float A[D('originalY' float)])\l  (r1 I:float A[D('originalY' float)])\l type: STATIC call: com.google.android.material.transition.platform.SlideDistanceProvider.createTranslationYAnimator(android.view.View, float, float, float):android.animation.Animator A[MD:(android.view.View, float, float, float):android.animation.Animator (m)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x004c|RETURN\l|0x004c: RETURN  (r2 I:android.animation.Animator) \l}"];
Node_46 [shape=record,label="{46\:\ 0x004d|0x004d: CAST (r2 I:float) = (float) (r8 I:int A[D('slideDistance' int)])  (LINE:140)\l0x004e: ARITH  (r2 I:float) = (r1 I:float A[D('originalY' float)]) \- (r2 I:float) \l0x0050: INVOKE  (r2 I:android.animation.Animator) = \l  (r6 I:android.view.View A[D('view' android.view.View)])\l  (r2 I:float)\l  (r1 I:float A[D('originalY' float)])\l  (r1 I:float A[D('originalY' float)])\l type: STATIC call: com.google.android.material.transition.platform.SlideDistanceProvider.createTranslationYAnimator(android.view.View, float, float, float):android.animation.Animator A[MD:(android.view.View, float, float, float):android.animation.Animator (m)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0054|RETURN\l|0x0054: RETURN  (r2 I:android.animation.Animator) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0055|0x0055: CAST (r2 I:float) = (float) (r8 I:int A[D('slideDistance' int)])  (LINE:142)\l0x0056: ARITH  (r2 I:float) = (r0 I:float A[D('originalX' float)]) \- (r2 I:float) \l0x0058: INVOKE  (r2 I:android.animation.Animator) = \l  (r6 I:android.view.View A[D('view' android.view.View)])\l  (r2 I:float)\l  (r0 I:float A[D('originalX' float)])\l  (r0 I:float A[D('originalX' float)])\l type: STATIC call: com.google.android.material.transition.platform.SlideDistanceProvider.createTranslationXAnimator(android.view.View, float, float, float):android.animation.Animator A[MD:(android.view.View, float, float, float):android.animation.Animator (m)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x005c|RETURN\l|0x005c: RETURN  (r2 I:android.animation.Animator) \l}"];
Node_50 [shape=record,label="{50\:\ 0x005d|0x005d: CAST (r2 I:float) = (float) (r8 I:int A[D('slideDistance' int)])  (LINE:138)\l0x005e: ARITH  (r2 I:float) = (r2 I:float) + (r0 I:float A[D('originalX' float)]) \l0x005f: INVOKE  (r2 I:android.animation.Animator) = \l  (r6 I:android.view.View A[D('view' android.view.View)])\l  (r2 I:float)\l  (r0 I:float A[D('originalX' float)])\l  (r0 I:float A[D('originalX' float)])\l type: STATIC call: com.google.android.material.transition.platform.SlideDistanceProvider.createTranslationXAnimator(android.view.View, float, float, float):android.animation.Animator A[MD:(android.view.View, float, float, float):android.animation.Animator (m)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x0063|RETURN\l|0x0063: RETURN  (r2 I:android.animation.Animator) \l}"];
MethodNode[shape=record,label="{private static android.animation.Animator com.google.android.material.transition.platform.SlideDistanceProvider.createTranslationAppearAnimator((r5 I:android.view.View A[D('sceneRoot' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('slideEdge' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('slideDistance' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x0033 \-\> B:27:?, CROSS_EDGE: B:35:0x002d \-\> B:36:0x002f, CROSS_EDGE: B:43:0x0045 \-\> B:27:?, CROSS_EDGE: B:41:0x003e \-\> B:42:0x0041, CROSS_EDGE: B:45:0x004c \-\> B:27:?, CROSS_EDGE: B:47:0x0054 \-\> B:27:?, CROSS_EDGE: B:49:0x005c \-\> B:27:?, CROSS_EDGE: B:51:0x0063 \-\> B:27:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x007d: r0 'originalX' F\l  0x0008\-0x007d: r1 'originalY' F\l  \-1 \-0x007d: r5 'sceneRoot' Landroid\/view\/View;\l  \-1 \-0x007d: r6 'view' Landroid\/view\/View;\l  \-1 \-0x007d: r7 'slideEdge' I\l  \-1 \-0x007d: r8 'slideDistance' I\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_32;
Node_29 -> Node_38;
Node_29 -> Node_44;
Node_29 -> Node_46;
Node_29 -> Node_48;
Node_29 -> Node_50;
Node_30 -> Node_31;
Node_31 -> Node_27;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_27;
Node_35 -> Node_36;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_27;
Node_41 -> Node_42;
Node_44 -> Node_45;
Node_45 -> Node_27;
Node_46 -> Node_47;
Node_47 -> Node_27;
Node_48 -> Node_49;
Node_49 -> Node_27;
Node_50 -> Node_51;
Node_51 -> Node_27;
}

