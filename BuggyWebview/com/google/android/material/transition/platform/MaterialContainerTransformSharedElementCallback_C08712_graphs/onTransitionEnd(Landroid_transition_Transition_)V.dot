digraph "CFG forcom.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback.2.onTransitionEnd(Landroid\/transition\/Transition;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback.capturedSharedElement == null) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|android.view.View r0 = (android.view.View) com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback.capturedSharedElement.get()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r0 == null) goto L6\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|r0.setAlpha(1.0f)\ljava.lang.ref.WeakReference r0 = com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback.capturedSharedElement = null\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|r2.finish()\lr2.overridePendingTransition(0, 0)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback.2.onTransitionEnd((r2v0 'this' com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$2 A[IMMUTABLE_TYPE, THIS]), (r3v0 'transition' android.transition.Transition A[D('transition' android.transition.Transition), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:5:0x0010 \-\> B:7:0x001b, CROSS_EDGE: B:3:0x0004 \-\> B:7:0x001b\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.transition.Transition.TransitionListener.onTransitionEnd(android.transition.Transition):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_1;
}

