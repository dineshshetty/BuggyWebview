digraph "CFG forcom.google.android.material.appbar.HeaderBehavior.fling(Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;Landroid\/view\/View;IIF)Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY] A[D('this' com.google.android.material.appbar.HeaderBehavior\<V extends android.view.View\>)])  (LINE:202)\l0x0001: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY] A[D('layout' V extends android.view.View)]) \l0x0002: IGET  (r2 I:java.lang.Runnable) = (r0 I:com.google.android.material.appbar.HeaderBehavior) com.google.android.material.appbar.HeaderBehavior.flingRunnable java.lang.Runnable \l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x000c \l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: INVOKE  (r15 I:android.view.View A[D('layout' V extends android.view.View)]), (r2 I:java.lang.Runnable) type: VIRTUAL call: android.view.View.removeCallbacks(java.lang.Runnable):boolean A[MD:(java.lang.Runnable):boolean (c)] (LINE:203)\l0x0009: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:204)\l0x000a: IPUT  (r2 I:java.lang.Runnable), (r0 I:com.google.android.material.appbar.HeaderBehavior) com.google.android.material.appbar.HeaderBehavior.flingRunnable java.lang.Runnable \l}"];
Node_19 [shape=record,label="{19\:\ 0x000c|0x000c: IGET  (r2 I:android.widget.OverScroller) = (r0 I:com.google.android.material.appbar.HeaderBehavior) com.google.android.material.appbar.HeaderBehavior.scroller android.widget.OverScroller  (LINE:207)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x001b \l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|0x0010: NEW_INSTANCE  (r2 I:android.widget.OverScroller) =  android.widget.OverScroller  (LINE:208)\l0x0012: INVOKE  (r3 I:android.content.Context) = (r15 I:android.view.View A[D('layout' V extends android.view.View)]) type: VIRTUAL call: android.view.View.getContext():android.content.Context A[MD:():android.content.Context (c)]\l0x0016: INVOKE  (r2 I:android.widget.OverScroller), (r3 I:android.content.Context) type: DIRECT call: android.widget.OverScroller.\<init\>(android.content.Context):void A[MD:(android.content.Context):void (c)]\l0x0019: IPUT  (r2 I:android.widget.OverScroller), (r0 I:com.google.android.material.appbar.HeaderBehavior) com.google.android.material.appbar.HeaderBehavior.scroller android.widget.OverScroller \l}"];
Node_22 [shape=record,label="{22\:\ 0x001b|0x001b: IGET  (r4 I:android.widget.OverScroller) = (r0 I:com.google.android.material.appbar.HeaderBehavior) com.google.android.material.appbar.HeaderBehavior.scroller android.widget.OverScroller  (LINE:211)\l0x001d: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001e: INVOKE  (r6 I:int) = \l  (r13 I:com.google.android.material.appbar.HeaderBehavior A[D('this' com.google.android.material.appbar.HeaderBehavior\<V extends android.view.View\>)])\l type: VIRTUAL call: com.google.android.material.appbar.HeaderBehavior.getTopAndBottomOffset():int A[MD:():int (m)] (LINE:213)\l0x0022: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0023: INVOKE  (r8 I:int) = (r18 I:float A[D('velocityY' float)]) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)] (LINE:215)\l0x0027: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0028: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0029: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('minOffset' int)])  (LINE:211)\l0x002b: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxOffset' int)]) \l0x002d: INVOKE  \l  (r4 I:android.widget.OverScroller)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l type: VIRTUAL call: android.widget.OverScroller.fling(int, int, int, int, int, int, int, int):void A[MD:(int, int, int, int, int, int, int, int):void (c)]\l0x0030: IGET  (r2 I:android.widget.OverScroller) = (r0 I:com.google.android.material.appbar.HeaderBehavior) com.google.android.material.appbar.HeaderBehavior.scroller android.widget.OverScroller  (LINE:221)\l0x0032: INVOKE  (r2 I:boolean) = (r2 I:android.widget.OverScroller) type: VIRTUAL call: android.widget.OverScroller.computeScrollOffset():boolean A[MD:():boolean (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0036|0x0036: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0045 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0038|0x0038: NEW_INSTANCE  (r2 I:com.google.android.material.appbar.HeaderBehavior$FlingRunnable) =  com.google.android.material.appbar.HeaderBehavior$FlingRunnable  (LINE:222)\l0x003a: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY] A[D('coordinatorLayout' androidx.coordinatorlayout.widget.CoordinatorLayout)]) \l0x003b: INVOKE  \l  (r2 I:com.google.android.material.appbar.HeaderBehavior$FlingRunnable)\l  (r13 I:com.google.android.material.appbar.HeaderBehavior A[D('this' com.google.android.material.appbar.HeaderBehavior\<V extends android.view.View\>)])\l  (r14 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('coordinatorLayout' androidx.coordinatorlayout.widget.CoordinatorLayout)])\l  (r15 I:android.view.View A[D('layout' V extends android.view.View)])\l type: DIRECT call: com.google.android.material.appbar.HeaderBehavior.FlingRunnable.\<init\>(com.google.android.material.appbar.HeaderBehavior, androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View):void A[MD:(com.google.android.material.appbar.HeaderBehavior, androidx.coordinatorlayout.widget.CoordinatorLayout, V extends android.view.View):void (m)]\l0x003e: IPUT  (r2 I:java.lang.Runnable), (r0 I:com.google.android.material.appbar.HeaderBehavior) com.google.android.material.appbar.HeaderBehavior.flingRunnable java.lang.Runnable \l0x0040: INVOKE  (r15 I:android.view.View A[D('layout' V extends android.view.View)]), (r2 I:java.lang.Runnable) type: STATIC call: androidx.core.view.ViewCompat.postOnAnimation(android.view.View, java.lang.Runnable):void A[MD:(android.view.View, java.lang.Runnable):void (m)] (LINE:223)\l0x0043: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:224)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0044|RETURN\l|0x0044: RETURN  (r2 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0045|0x0045: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY] A[D('coordinatorLayout' androidx.coordinatorlayout.widget.CoordinatorLayout)])  (LINE:226)\l0x0046: INVOKE  \l  (r13 I:com.google.android.material.appbar.HeaderBehavior A[D('this' com.google.android.material.appbar.HeaderBehavior\<V extends android.view.View\>)])\l  (r14 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('coordinatorLayout' androidx.coordinatorlayout.widget.CoordinatorLayout)])\l  (r15 I:android.view.View A[D('layout' V extends android.view.View)])\l type: VIRTUAL call: com.google.android.material.appbar.HeaderBehavior.onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View):void A[MD:(androidx.coordinatorlayout.widget.CoordinatorLayout, V extends android.view.View):void (m)]\l0x0049: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:227)\l}"];
Node_27 [shape=record,label="{27\:\ 0x004a|RETURN\l|0x004a: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{final boolean com.google.android.material.appbar.HeaderBehavior.fling((r13 'this' I:com.google.android.material.appbar.HeaderBehavior\<V extends android.view.View\> A[D('this' com.google.android.material.appbar.HeaderBehavior\<V extends android.view.View\>), IMMUTABLE_TYPE, THIS]), (r14 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('coordinatorLayout' androidx.coordinatorlayout.widget.CoordinatorLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:V extends android.view.View A[D('layout' V extends android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:int A[D('minOffset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[D('maxOffset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:float A[D('velocityY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x004a \-\> B:15:?, CROSS_EDGE: B:20:0x000e \-\> B:22:0x001b, CROSS_EDGE: B:17:0x0004 \-\> B:19:0x000c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x004a: r13 'this' Lcom\/google\/android\/material\/appbar\/HeaderBehavior;, signature: Lcom\/google\/android\/material\/appbar\/HeaderBehavior\<TV;\>;\l  \-1 \-0x004a: r14 'coordinatorLayout' Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;\l  0x0000\-0x004a: r15 'layout' Landroid\/view\/View;, signature: TV;\l  \-1 \-0x004a: r16 'minOffset' I\l  \-1 \-0x004a: r17 'maxOffset' I\l  \-1 \-0x004a: r18 'velocityY' F\lTYPE_VARS: [V extends android.view.View]\lSIGNATURE: (Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;TV;IIF)Z\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

