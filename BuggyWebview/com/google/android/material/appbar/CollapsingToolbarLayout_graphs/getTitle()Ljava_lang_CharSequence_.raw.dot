digraph "CFG forcom.google.android.material.appbar.CollapsingToolbarLayout.getTitle()Ljava\/lang\/CharSequence;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r1 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.collapsingTitleEnabled boolean  (LINE:770)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: IGET  (r0 I:com.google.android.material.internal.CollapsingTextHelper) = (r1 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.collapsingTextHelper com.google.android.material.internal.CollapsingTextHelper \l0x0006: INVOKE  (r0 I:java.lang.CharSequence) = (r0 I:com.google.android.material.internal.CollapsingTextHelper) type: VIRTUAL call: com.google.android.material.internal.CollapsingTextHelper.getText():java.lang.CharSequence A[MD:():java.lang.CharSequence (m)]\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|0x000c: RETURN  (r0 I:java.lang.CharSequence) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|RETURN\lORIG_RETURN\l|0x000b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: RETURN  (r0 I:java.lang.CharSequence) \l}"];
MethodNode[shape=record,label="{public java.lang.CharSequence com.google.android.material.appbar.CollapsingToolbarLayout.getTitle((r1 'this' I:com.google.android.material.appbar.CollapsingToolbarLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000b \-\> B:6:0x000c\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_1;
}

