digraph "CFG forcom.google.android.material.appbar.CollapsingToolbarLayout.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) type: DIRECT call: com.google.android.material.appbar.CollapsingToolbarLayout.ensureToolbar():void A[MD:():void (m)] (LINE:573)\l0x0003: INVOKE  (r11 I:android.widget.FrameLayout), (r12 I:int A[D('widthMeasureSpec' int)]), (r13 I:int A[D('heightMeasureSpec' int)]) type: SUPER call: android.widget.FrameLayout.onMeasure(int, int):void A[MD:(int, int):void (c)] (LINE:574)\l0x0006: INVOKE  (r0 I:int) = (r13 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)] (LINE:576)\l0x000a: IGET  (r1 I:androidx.core.view.WindowInsetsCompat) = (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.lastInsets androidx.core.view.WindowInsetsCompat  (LINE:577)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0013 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: INVOKE  (r1 I:int) = (r1 I:androidx.core.view.WindowInsetsCompat) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.getSystemWindowInsetTop():int A[MD:():int (m)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: CONST  (r2 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:578)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mode' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IGET  (r3 I:boolean) = (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.forceApplySystemWindowInsetTop boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002c \l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|0x002c: IGET  (r3 I:boolean A[D('newHeight' int)]) = (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.extraMultilineHeightEnabled boolean  (LINE:587)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0071 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|0x0030: IGET  (r3 I:com.google.android.material.internal.CollapsingTextHelper) = (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.collapsingTextHelper com.google.android.material.internal.CollapsingTextHelper \l0x0032: INVOKE  (r3 I:int) = (r3 I:com.google.android.material.internal.CollapsingTextHelper) type: VIRTUAL call: com.google.android.material.internal.CollapsingTextHelper.getMaxLines():int A[MD:():int (m)]\l0x0036: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|0x0037: IF  (r3 I:??[int, byte, short, char]) \<= (r4 I:??[int, byte, short, char])  \-\> B:19:0x0071 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|0x0039: INVOKE  (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) type: DIRECT call: com.google.android.material.appbar.CollapsingToolbarLayout.updateTitleFromToolbarIfNeeded():void A[MD:():void (m)] (LINE:589)\l0x003c: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:590)\l0x003d: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x003e: INVOKE  (r8 I:int) = (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) type: VIRTUAL call: com.google.android.material.appbar.CollapsingToolbarLayout.getMeasuredWidth():int A[MD:():int (s)]\l0x0042: INVOKE  (r9 I:int) = (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) type: VIRTUAL call: com.google.android.material.appbar.CollapsingToolbarLayout.getMeasuredHeight():int A[MD:():int (s)]\l0x0046: CONST  (r10 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0047: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY]) \l0x0048: INVOKE  \l  (r5 I:com.google.android.material.appbar.CollapsingToolbarLayout)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:boolean)\l type: DIRECT call: com.google.android.material.appbar.CollapsingToolbarLayout.updateTextBounds(int, int, int, int, boolean):void A[MD:(int, int, int, int, boolean):void (m)]\l0x004b: IGET  (r3 I:com.google.android.material.internal.CollapsingTextHelper) = (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.collapsingTextHelper com.google.android.material.internal.CollapsingTextHelper  (LINE:592)\l0x004d: INVOKE  (r3 I:int) = (r3 I:com.google.android.material.internal.CollapsingTextHelper) type: VIRTUAL call: com.google.android.material.internal.CollapsingTextHelper.getExpandedLineCount():int A[MD:():int (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0051|0x0051: IF  (r3 I:??[int, byte, short, char] A[D('lineCount' int)]) \<= (r4 I:??[int, byte, short, char])  \-\> B:19:0x0071  (LINE:593)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|0x0053: IGET  (r4 I:com.google.android.material.internal.CollapsingTextHelper) = (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.collapsingTextHelper com.google.android.material.internal.CollapsingTextHelper  (LINE:595)\l0x0055: INVOKE  (r4 I:float) = (r4 I:com.google.android.material.internal.CollapsingTextHelper) type: VIRTUAL call: com.google.android.material.internal.CollapsingTextHelper.getExpandedTextFullHeight():float A[MD:():float (m)]\l0x0059: INVOKE  (r4 I:int) = (r4 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x005d: ARITH  (r5 I:int) = (r3 I:int A[D('lineCount' int)]) + (\-1 int)  (LINE:596)\l0x005f: ARITH  (r5 I:int) = (r5 I:int) * (r4 I:int A[D('expandedTextHeight' int)]) \l0x0061: IPUT  (r5 I:int), (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.extraMultilineHeight int \l0x0063: INVOKE  (r5 I:int) = (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) type: VIRTUAL call: com.google.android.material.appbar.CollapsingToolbarLayout.getMeasuredHeight():int A[MD:():int (s)] (LINE:597)\l0x0067: IGET  (r6 I:int) = (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.extraMultilineHeight int \l0x0069: ARITH  (r5 I:int) = (r5 I:int) + (r6 I:int) \l0x006a: INVOKE  (r13 I:int A[D('heightMeasureSpec' int)]) = (r5 I:int A[D('newHeight' int)]), (r2 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)] (LINE:598)\l0x006e: INVOKE  (r11 I:android.widget.FrameLayout), (r12 I:int A[D('widthMeasureSpec' int)]), (r13 I:int A[D('heightMeasureSpec' int)]) type: SUPER call: android.widget.FrameLayout.onMeasure(int, int):void A[MD:(int, int):void (c)] (LINE:599)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0071|0x0071: IGET  (r2 I:android.view.ViewGroup) = (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.toolbar android.view.ViewGroup  (LINE:604)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0073|0x0073: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:? \l}"];
Node_21 [shape=record,label="{21\:\ 0x0075|0x0075: IGET  (r3 I:android.view.View) = (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.toolbarDirectChild android.view.View  (LINE:605)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0077|0x0077: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0084 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0079|0x0079: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x007c \l}"];
Node_25 [shape=record,label="{25\:\ 0x007c|0x007c: INVOKE  (r2 I:int) = (r3 I:android.view.View) type: STATIC call: com.google.android.material.appbar.CollapsingToolbarLayout.getHeightWithMargins(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:608)\l0x0080: INVOKE  (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout), (r2 I:int) type: VIRTUAL call: com.google.android.material.appbar.CollapsingToolbarLayout.setMinimumHeight(int):void A[MD:(int):void (s)]\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x008b: RETURN   A[SYNTHETIC] (LINE:611)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0084|0x0084: INVOKE  (r2 I:int) = (r2 I:android.view.View) type: STATIC call: com.google.android.material.appbar.CollapsingToolbarLayout.getHeightWithMargins(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:606)\l0x0088: INVOKE  (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout), (r2 I:int) type: VIRTUAL call: com.google.android.material.appbar.CollapsingToolbarLayout.setMinimumHeight(int):void A[MD:(int):void (s)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x008b|RETURN\lORIG_RETURN\l|0x008b: RETURN    (LINE:611)\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|0x008b: RETURN   A[SYNTHETIC] (LINE:611)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: IF  (r1 I:??[int, byte, short, char] A[D('topInset' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:12:0x002c \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: IPUT  (r1 I:int A[D('topInset' int)]), (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.topInsetApplied int  (LINE:581)\l0x0020: INVOKE  (r3 I:int) = (r11 I:com.google.android.material.appbar.CollapsingToolbarLayout) type: VIRTUAL call: com.google.android.material.appbar.CollapsingToolbarLayout.getMeasuredHeight():int A[MD:():int (s)] (LINE:582)\l0x0024: ARITH  (r3 I:int) = (r3 I:int) + (r1 I:int A[D('topInset' int)]) \l0x0025: INVOKE  (r13 I:int A[D('heightMeasureSpec' int)]) = (r3 I:int A[D('newHeight' int)]), (r2 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)] (LINE:583)\l0x0029: INVOKE  (r11 I:android.widget.FrameLayout), (r12 I:int A[D('widthMeasureSpec' int)]), (r13 I:int A[D('heightMeasureSpec' int)]) type: SUPER call: android.widget.FrameLayout.onMeasure(int, int):void A[MD:(int, int):void (c)] (LINE:584)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.appbar.CollapsingToolbarLayout.onMeasure((r11 'this' I:com.google.android.material.appbar.CollapsingToolbarLayout A[IMMUTABLE_TYPE, THIS]), (r12 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:26:0x0084 \-\> B:27:0x008b, CROSS_EDGE: B:22:0x0077 \-\> B:26:0x0084, CROSS_EDGE: B:20:0x0073 \-\> B:27:0x008b, CROSS_EDGE: B:17:0x0051 \-\> B:19:0x0071, CROSS_EDGE: B:15:0x0037 \-\> B:19:0x0071, CROSS_EDGE: B:13:0x002e \-\> B:19:0x0071, CROSS_EDGE: B:10:0x001c \-\> B:12:0x002c, CROSS_EDGE: B:9:0x001a \-\> B:12:0x002c, CROSS_EDGE: B:7:0x0016 \-\> B:10:0x001c, CROSS_EDGE: B:5:0x0013 \-\> B:6:0x0014\lDebug Info:\l  0x0025\-0x002c: r3 'newHeight' I\l  0x0051\-0x0071: r3 'lineCount' I\l  0x005d\-0x0071: r4 'expandedTextHeight' I\l  0x006a\-0x0071: r5 'newHeight' I\l  0x000a\-0x008b: r0 'mode' I\l  0x0014\-0x008b: r1 'topInset' I\l  \-1 \-0x008b: r12 'widthMeasureSpec' I\l  \-1 \-0x008b: r13 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_25;
Node_23 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_29 -> Node_1;
Node_26 -> Node_27;
Node_27 -> Node_1;
Node_28 -> Node_1;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_5 -> Node_6;
}

