digraph "CFG forcom.google.android.material.appbar.CollapsingToolbarLayout.setScrimsShown(ZZ)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r2.scrimsAreShown == r3) goto L14\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|r0 = 255\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|if (r4 == false) goto L11\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|if (r3 == false) goto L6\l}"];
Node_8 [shape=record,label="{8\:\ 0x000c|r0 = 0\l}"];
Node_9 [shape=record,label="{9\:\ 0x000d|PHI: r0 \l  PHI: (r0v4 int) = (r0v1 int), (r0v5 int) binds: [B:6:0x0009, B:8:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|animateScrim(r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|r2.scrimsAreShown = r3\l}"];
Node_15 [shape=record,label="{15\:\ 0x001a|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0011|if (r3 == false) goto L12\l}"];
Node_12 [shape=record,label="{12\:\ 0x0014|r0 = 0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0015|PHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int) binds: [B:10:0x0011, B:12:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|setScrimAlpha(r0)\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.appbar.CollapsingToolbarLayout.setScrimsShown((r2v0 'this' com.google.android.material.appbar.CollapsingToolbarLayout A[IMMUTABLE_TYPE, THIS]), (r3v0 'shown' boolean A[D('shown' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'animate' boolean A[D('animate' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0009 \-\> B:9:0x000d, CROSS_EDGE: B:13:0x0015 \-\> B:14:0x0018, CROSS_EDGE: B:10:0x0011 \-\> B:13:0x0015, CROSS_EDGE: B:3:0x0002 \-\> B:15:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_16;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_8;
Node_6 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_10 -> Node_12;
Node_10 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_16 -> Node_1;
}

