digraph "CFG forcom.google.android.material.appbar.CollapsingToolbarLayout.getScrimVisibleHeightTrigger()I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.scrimVisibleHeightTrigger int  (LINE:1540)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:6:0x000b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: IGET  (r1 I:int) = (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.topInsetApplied int  (LINE:1542)\l0x0006: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0007: IGET  (r1 I:int) = (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.extraMultilineHeight int \l0x0009: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: IGET  (r0 I:androidx.core.view.WindowInsetsCompat) = (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.lastInsets androidx.core.view.WindowInsetsCompat  (LINE:1546)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0014 \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: INVOKE  (r0 I:int) = (r0 I:androidx.core.view.WindowInsetsCompat) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.getSystemWindowInsetTop():int A[MD:():int (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|0x0015: INVOKE  (r1 I:int) = (r4 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.getMinimumHeight(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:1548)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|0x0019: IF  (r1 I:??[int, byte, short, char] A[D('minHeight' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:14:0x0027  (LINE:1549)\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|0x001b: ARITH  (r2 I:int) = (r1 I:int A[D('minHeight' int)]) * (2 int)  (LINE:1551)\l0x001d: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int A[D('insetTop' int)]) \l0x001e: INVOKE  (r3 I:int) = (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout) type: VIRTUAL call: com.google.android.material.appbar.CollapsingToolbarLayout.getHeight():int A[MD:():int (s)]\l0x0022: INVOKE  (r2 I:int) = (r2 I:int), (r3 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|RETURN\l|0x0026: RETURN  (r2 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|0x0027: INVOKE  (r2 I:int) = (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout) type: VIRTUAL call: com.google.android.material.appbar.CollapsingToolbarLayout.getHeight():int A[MD:():int (s)] (LINE:1556)\l0x002b: ARITH  (r2 I:int) = (r2 I:int) \/ (3 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|RETURN\l|0x002d: RETURN  (r2 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|0x0014: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public int com.google.android.material.appbar.CollapsingToolbarLayout.getScrimVisibleHeightTrigger((r4 'this' I:com.google.android.material.appbar.CollapsingToolbarLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0026 \-\> B:1:?, CROSS_EDGE: B:15:0x002d \-\> B:1:?, CROSS_EDGE: B:9:0x0014 \-\> B:10:0x0015\lDebug Info:\l  0x0015\-0x002d: r0 'insetTop' I\l  0x0019\-0x002d: r1 'minHeight' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_9 -> Node_10;
}

