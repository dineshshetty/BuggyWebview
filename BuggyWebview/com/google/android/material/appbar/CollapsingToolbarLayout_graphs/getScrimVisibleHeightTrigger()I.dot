digraph "CFG forcom.google.android.material.appbar.CollapsingToolbarLayout.getScrimVisibleHeightTrigger()I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|int r0 = r4.scrimVisibleHeightTrigger\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r0 \< 0) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004}"];
Node_5 [shape=record,label="{5\:\ 0x000a|RETURN\l|return (r0 + r4.topInsetApplied) + r4.extraMultilineHeight\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|androidx.core.view.WindowInsetsCompat r0 = r4.lastInsets\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|if (r0 == null) goto L15\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|int r0 = r0.getSystemWindowInsetTop()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|PHI: r0 \l  PHI: (r0v3 'insetTop' int) = (r0v2 'insetTop' int), (r0v4 'insetTop' int) binds: [B:9:0x0014, B:8:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|int r1 = androidx.core.view.ViewCompat.getMinimumHeight(r4)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|if (r1 \<= 0) goto L13\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b}"];
Node_13 [shape=record,label="{13\:\ 0x0026|RETURN\l|return java.lang.Math.min((r1 * 2) + r0, getHeight())\l}"];
Node_14 [shape=record,label="{14\:\ 0x0027}"];
Node_15 [shape=record,label="{15\:\ 0x002d|RETURN\l|return getHeight() \/ 3\l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|r0 = 0\l}"];
MethodNode[shape=record,label="{public int com.google.android.material.appbar.CollapsingToolbarLayout.getScrimVisibleHeightTrigger((r4v0 'this' com.google.android.material.appbar.CollapsingToolbarLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0026 \-\> B:1:?, CROSS_EDGE: B:15:0x002d \-\> B:1:?, CROSS_EDGE: B:9:0x0014 \-\> B:10:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_9 -> Node_10;
}

