digraph "CFG forcom.google.android.material.appbar.CollapsingToolbarLayout.drawChild(Landroid\/graphics\/Canvas;Landroid\/view\/View;J)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:450)\l0x0001: IGET  (r1 I:android.graphics.drawable.Drawable) = (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.contentScrim android.graphics.drawable.Drawable  (LINE:451)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IGET  (r1 I:int) = (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.scrimAlpha int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:9:0x002d \l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: INVOKE  (r1 I:boolean) = \l  (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout)\l  (r6 I:android.view.View A[D('child' android.view.View)])\l type: DIRECT call: com.google.android.material.appbar.CollapsingToolbarLayout.isToolbarChild(android.view.View):boolean A[MD:(android.view.View):boolean (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002d \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: IGET  (r1 I:android.graphics.drawable.Drawable) = (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.contentScrim android.graphics.drawable.Drawable  (LINE:452)\l0x0011: INVOKE  (r2 I:int) = (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout) type: VIRTUAL call: com.google.android.material.appbar.CollapsingToolbarLayout.getWidth():int A[MD:():int (s)]\l0x0015: INVOKE  (r3 I:int) = (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout) type: VIRTUAL call: com.google.android.material.appbar.CollapsingToolbarLayout.getHeight():int A[MD:():int (s)]\l0x0019: INVOKE  \l  (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout)\l  (r1 I:android.graphics.drawable.Drawable)\l  (r6 I:android.view.View A[D('child' android.view.View)])\l  (r2 I:int)\l  (r3 I:int)\l type: DIRECT call: com.google.android.material.appbar.CollapsingToolbarLayout.updateContentScrimBounds(android.graphics.drawable.Drawable, android.view.View, int, int):void A[MD:(android.graphics.drawable.Drawable, android.view.View, int, int):void (m)]\l0x001c: IGET  (r1 I:android.graphics.drawable.Drawable) = (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.contentScrim android.graphics.drawable.Drawable  (LINE:453)\l0x001e: INVOKE  (r1 I:android.graphics.drawable.Drawable) = (r1 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.mutate():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (c)]\l0x0022: IGET  (r2 I:int) = (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.scrimAlpha int \l0x0024: INVOKE  (r1 I:android.graphics.drawable.Drawable), (r2 I:int) type: VIRTUAL call: android.graphics.drawable.Drawable.setAlpha(int):void A[MD:(int):void (c)]\l0x0027: IGET  (r1 I:android.graphics.drawable.Drawable) = (r4 I:com.google.android.material.appbar.CollapsingToolbarLayout) com.google.android.material.appbar.CollapsingToolbarLayout.contentScrim android.graphics.drawable.Drawable  (LINE:454)\l0x0029: INVOKE  (r1 I:android.graphics.drawable.Drawable), (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)]\l0x002c: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('invalidated' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:455)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: INVOKE  (r1 I:boolean) = \l  (r4 I:android.widget.FrameLayout)\l  (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r6 I:android.view.View A[D('child' android.view.View)])\l  (r7 I:long A[D('drawingTime' long)])\l type: SUPER call: android.widget.FrameLayout.drawChild(android.graphics.Canvas, android.view.View, long):boolean A[MD:(android.graphics.Canvas, android.view.View, long):boolean (c)] (LINE:457)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0038 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('invalidated' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0036 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|SYNTHETIC\lRETURN\l|0x0036: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0039: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|RETURN\lORIG_RETURN\l|0x0038: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0039: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{protected boolean com.google.android.material.appbar.CollapsingToolbarLayout.drawChild((r4 'this' I:com.google.android.material.appbar.CollapsingToolbarLayout A[IMMUTABLE_TYPE, THIS]), (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:long A[D('drawingTime' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:14:0x0038 \-\> B:15:0x0039, CROSS_EDGE: B:10:0x0031 \-\> B:14:0x0038, CROSS_EDGE: B:7:0x000d \-\> B:9:0x002d, CROSS_EDGE: B:5:0x0007 \-\> B:9:0x002d, CROSS_EDGE: B:3:0x0003 \-\> B:9:0x002d\lDebug Info:\l  0x0001\-0x0039: r0 'invalidated' Z\l  \-1 \-0x0039: r5 'canvas' Landroid\/graphics\/Canvas;\l  \-1 \-0x0039: r6 'child' Landroid\/view\/View;\l  \-1 \-0x0039: r7 'drawingTime' J\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewGroup.drawChild(android.graphics.Canvas, android.view.View, long):boolean\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_13;
Node_11 -> Node_14[style=dashed];
Node_13 -> Node_1;
Node_14 -> Node_1;
}

