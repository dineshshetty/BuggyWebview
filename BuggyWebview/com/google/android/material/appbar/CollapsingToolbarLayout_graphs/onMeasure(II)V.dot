digraph "CFG forcom.google.android.material.appbar.CollapsingToolbarLayout.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|ensureToolbar()\lsuper.onMeasure(r12, r13)\lint r0 = android.view.View.MeasureSpec.getMode(r13)\landroidx.core.view.WindowInsetsCompat r1 = r11.lastInsets\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r1 == null) goto L28\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|int r1 = r1.getSystemWindowInsetTop()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|PHI: r1 \l  PHI: (r1v2 'topInset' int) = (r1v1 'topInset' int), (r1v3 'topInset' int) binds: [B:5:0x0013, B:4:0x000e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|if (r0 == 0) goto L26\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018}"];
Node_9 [shape=record,label="{9\:\ 0x001a|if (r11.forceApplySystemWindowInsetTop == false) goto L8\l}"];
Node_12 [shape=record,label="{12\:\ 0x002c}"];
Node_13 [shape=record,label="{13\:\ 0x002e|if (r11.extraMultilineHeightEnabled == false) goto L15\l}"];
Node_14 [shape=record,label="{14\:\ 0x0030}"];
Node_15 [shape=record,label="{15\:\ 0x0037|if (r11.collapsingTextHelper.getMaxLines() \<= 1) goto L15\l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|updateTitleFromToolbarIfNeeded()\lupdateTextBounds(0, 0, getMeasuredWidth(), getMeasuredHeight(), true)\lint r3 = r11.collapsingTextHelper.getExpandedLineCount()\l}"];
Node_17 [shape=record,label="{17\:\ 0x0051|if (r3 \<= 1) goto L15\l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|int r4 = java.lang.Math.round(r11.collapsingTextHelper.getExpandedTextFullHeight())\lr11.extraMultilineHeight = (r3 + (\-1)) * r4\lint r5 = getMeasuredHeight() + r11.extraMultilineHeight\lsuper.onMeasure(r12, android.view.View.MeasureSpec.makeMeasureSpec(r5, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY))\l}"];
Node_19 [shape=record,label="{19\:\ 0x0071|android.view.ViewGroup r2 = r11.toolbar\l}"];
Node_20 [shape=record,label="{20\:\ 0x0073|if (r2 == null) goto L25\l}"];
Node_21 [shape=record,label="{21\:\ 0x0075|android.view.View r3 = r11.toolbarDirectChild\l}"];
Node_22 [shape=record,label="{22\:\ 0x0077|if (r3 == null) goto L23\l}"];
Node_23 [shape=record,label="{23\:\ 0x0079|if (r3 != r11) goto L20\l}"];
Node_25 [shape=record,label="{25\:\ 0x007c|setMinimumHeight(getHeightWithMargins(r3))\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0084|setMinimumHeight(getHeightWithMargins(r2))\l}"];
Node_27 [shape=record,label="{27\:\ 0x008b|RETURN\lORIG_RETURN\l|return\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|if (r1 \<= 0) goto L8\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|r11.topInsetApplied = r1\lint r3 = getMeasuredHeight() + r1\lsuper.onMeasure(r12, android.view.View.MeasureSpec.makeMeasureSpec(r3, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY))\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|r1 = 0\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.appbar.CollapsingToolbarLayout.onMeasure((r11v0 'this' com.google.android.material.appbar.CollapsingToolbarLayout A[IMMUTABLE_TYPE, THIS]), (r12v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:26:0x0084 \-\> B:27:0x008b, CROSS_EDGE: B:22:0x0077 \-\> B:26:0x0084, CROSS_EDGE: B:20:0x0073 \-\> B:27:0x008b, CROSS_EDGE: B:17:0x0051 \-\> B:19:0x0071, CROSS_EDGE: B:15:0x0037 \-\> B:19:0x0071, CROSS_EDGE: B:13:0x002e \-\> B:19:0x0071, CROSS_EDGE: B:10:0x001c \-\> B:12:0x002c, CROSS_EDGE: B:9:0x001a \-\> B:12:0x002c, CROSS_EDGE: B:7:0x0016 \-\> B:10:0x001c, CROSS_EDGE: B:5:0x0013 \-\> B:6:0x0014\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_25;
Node_23 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_29 -> Node_1;
Node_26 -> Node_27;
Node_27 -> Node_1;
Node_28 -> Node_1;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_5 -> Node_6;
}

