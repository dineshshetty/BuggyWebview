digraph "CFG forcom.google.android.material.appbar.CollapsingToolbarLayout.updateScrimVisibility()V" {
subgraph cluster_Region_26840474 {
label = "R(1:(1:(1:10)))";
node [shape=record,color=blue];
subgraph cluster_Region_703066513 {
label = "R(1:(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1316829163 {
label = "IF [B:3:0x0002, B:5:0x0006] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r2.contentScrim != null) goto L7\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|ADDED_TO_REGION\l|if (r2.statusBarScrim != null) goto L7\l}"];
subgraph cluster_Region_1201072516 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0018|PHI: r0 \l  PHI: (r0v4 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|setScrimsShown(getHeight() + r2.currentOffset \< getScrimVisibleHeightTrigger())\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0004}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0008}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0013}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0015}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001b|ORIG_RETURN\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0017}"];
MethodNode[shape=record,label="{final void com.google.android.material.appbar.CollapsingToolbarLayout.updateScrimVisibility((r2v0 'this' com.google.android.material.appbar.CollapsingToolbarLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0017 \-\> B:10:0x0018, CROSS_EDGE: B:5:0x0006 \-\> B:11:0x001b, CROSS_EDGE: B:3:0x0002 \-\> B:6:0x0008\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_5 -> Node_6;
Node_5 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_12 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_11 -> Node_1;
Node_9 -> Node_10;
}

