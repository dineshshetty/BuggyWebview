digraph "CFG forcom.google.android.material.appbar.CollapsingToolbarLayout.disableLiftOnScrollIfNeeded(Lcom\/google\/android\/material\/appbar\/AppBarLayout;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r1 I:com.google.android.material.appbar.CollapsingToolbarLayout) type: DIRECT call: com.google.android.material.appbar.CollapsingToolbarLayout.isTitleCollapseFadeMode():boolean A[MD:():boolean (m)] (LINE:475)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:476)\l0x0007: INVOKE  \l  (r2 I:com.google.android.material.appbar.AppBarLayout A[D('appBarLayout' com.google.android.material.appbar.AppBarLayout)])\l  (r0 I:boolean)\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.setLiftOnScroll(boolean):void A[MD:(boolean):void (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|RETURN\lORIG_RETURN\l|0x000a: RETURN    (LINE:478)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|0x000a: RETURN   A[SYNTHETIC] (LINE:478)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.appbar.CollapsingToolbarLayout.disableLiftOnScrollIfNeeded((r1 'this' I:com.google.android.material.appbar.CollapsingToolbarLayout A[IMMUTABLE_TYPE, THIS]), (r2 I:com.google.android.material.appbar.AppBarLayout A[D('appBarLayout' com.google.android.material.appbar.AppBarLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x0004 \-\> B:5:0x000a\lDebug Info:\l  \-1 \-0x000a: r2 'appBarLayout' Lcom\/google\/android\/material\/appbar\/AppBarLayout;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

