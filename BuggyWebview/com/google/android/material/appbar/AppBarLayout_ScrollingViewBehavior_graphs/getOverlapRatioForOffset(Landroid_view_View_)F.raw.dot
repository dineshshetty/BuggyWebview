digraph "CFG forcom.google.android.material.appbar.AppBarLayout.ScrollingViewBehavior.getOverlapRatioForOffset(Landroid\/view\/View;)F" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r9 I:??[OBJECT, ARRAY] A[D('header' android.view.View)]) com.google.android.material.appbar.AppBarLayout  (LINE:2456)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0026 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|0x0005: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('header' android.view.View)])  (LINE:2457)\l0x0006: CHECK_CAST (r0 I:com.google.android.material.appbar.AppBarLayout) = (com.google.android.material.appbar.AppBarLayout) (r0 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  (r2 I:int) = (r0 I:com.google.android.material.appbar.AppBarLayout A[D('abl' com.google.android.material.appbar.AppBarLayout)]) type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.getTotalScrollRange():int A[MD:():int (m)] (LINE:2458)\l0x000c: INVOKE  (r3 I:int) = (r0 I:com.google.android.material.appbar.AppBarLayout A[D('abl' com.google.android.material.appbar.AppBarLayout)]) type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.getDownNestedPreScrollRange():int A[MD:():int (m)] (LINE:2459)\l0x0010: INVOKE  (r4 I:int) = (r0 I:com.google.android.material.appbar.AppBarLayout A[D('abl' com.google.android.material.appbar.AppBarLayout)]) type: STATIC call: com.google.android.material.appbar.AppBarLayout.ScrollingViewBehavior.getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout):int A[MD:(com.google.android.material.appbar.AppBarLayout):int (m)] (LINE:2460)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|0x0014: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('preScrollDown' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x001b  (LINE:2462)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|0x0016: ARITH  (r5 I:int) = (r2 I:int A[D('totalScrollRange' int)]) + (r4 I:int A[D('offset' int)]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|0x0018: IF  (r5 I:??[int, byte, short, char]) \> (r3 I:??[int, byte, short, char] A[D('preScrollDown' int)])  \-\> B:23:0x001b \l}"];
Node_22 [shape=record,label="{22\:\ 0x001a|RETURN\l|0x001a: RETURN  (r1 I:float)  (LINE:2464)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x001b|0x001b: ARITH  (r5 I:int) = (r2 I:int A[D('totalScrollRange' int)]) \- (r3 I:int A[D('preScrollDown' int)])  (LINE:2466)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001d|0x001d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('availScrollRange' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0026  (LINE:2467)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001f|0x001f: CONST  (r1 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:2469)\l0x0021: CAST (r6 I:float) = (float) (r4 I:int A[D('offset' int)]) \l0x0022: CAST (r7 I:float) = (float) (r5 I:int A[D('availScrollRange' int)]) \l0x0023: ARITH  (r6 I:float) = (r6 I:float) \/ (r7 I:float) \l0x0024: ARITH  (r6 I:float) = (r6 I:float) + (r1 I:float) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0025|RETURN\l|0x0025: RETURN  (r6 I:float) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0026|RETURN\l|0x0026: RETURN  (r1 I:float)  (LINE:2473)\l}"];
MethodNode[shape=record,label="{float com.google.android.material.appbar.AppBarLayout.ScrollingViewBehavior.getOverlapRatioForOffset((r8 'this' I:com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior A[IMMUTABLE_TYPE, THIS]), (r9 I:android.view.View A[D('header' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0025 \-\> B:15:?, CROSS_EDGE: B:27:0x0026 \-\> B:15:?, CROSS_EDGE: B:19:0x0014 \-\> B:23:0x001b, CROSS_EDGE: B:17:0x0003 \-\> B:27:0x0026\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x0026: r0 'abl' Lcom\/google\/android\/material\/appbar\/AppBarLayout;\l  0x000c\-0x0026: r2 'totalScrollRange' I\l  0x0010\-0x0026: r3 'preScrollDown' I\l  0x0014\-0x0026: r4 'offset' I\l  0x001d\-0x0026: r5 'availScrollRange' I\l  \-1 \-0x0026: r9 'header' Landroid\/view\/View;\lMETHOD_OVERRIDE: [com.google.android.material.appbar.HeaderScrollingViewBehavior.getOverlapRatioForOffset(android.view.View):float]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_27;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_15;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_15;
}

