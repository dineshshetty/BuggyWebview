digraph "CFG forcom.google.android.material.appbar.AppBarLayout.ScrollingViewBehavior.offsetChildAsNeeded(Landroid\/view\/View;Landroid\/view\/View;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0001|0x0001: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r6 I:android.view.View A[D('dependency' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:2440)\l0x0005: CHECK_CAST (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) (r0 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) = (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.getBehavior():androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior A[MD:():androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior (m)]\l0x000b: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('behavior' androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)]) com.google.android.material.appbar.AppBarLayout$BaseBehavior  (LINE:2441)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x000f|0x000f: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('behavior' androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)])  (LINE:2444)\l0x0010: CHECK_CAST (r1 I:com.google.android.material.appbar.AppBarLayout$BaseBehavior) = (com.google.android.material.appbar.AppBarLayout$BaseBehavior) (r1 I:??[OBJECT, ARRAY]) \l0x0013: INVOKE  (r2 I:int) = (r6 I:android.view.View A[D('dependency' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)] (LINE:2447)\l0x0017: INVOKE  (r3 I:int) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x001b: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x001c: INVOKE  (r3 I:int) = \l  (r1 I:com.google.android.material.appbar.AppBarLayout$BaseBehavior A[D('ablBehavior' com.google.android.material.appbar.AppBarLayout$BaseBehavior)])\l type: STATIC call: com.google.android.material.appbar.AppBarLayout.BaseBehavior.access$100(com.google.android.material.appbar.AppBarLayout$BaseBehavior):int A[MD:(com.google.android.material.appbar.AppBarLayout$BaseBehavior):int (m)] (LINE:2448)\l0x0020: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0021: INVOKE  (r3 I:int) = (r4 I:com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior) type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.ScrollingViewBehavior.getVerticalLayoutGap():int A[MD:():int (m)] (LINE:2449)\l0x0025: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0026: INVOKE  (r3 I:int) = \l  (r4 I:com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior)\l  (r6 I:android.view.View A[D('dependency' android.view.View)])\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.ScrollingViewBehavior.getOverlapPixelsForOffset(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:2450)\l0x002a: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x002b: INVOKE  (r5 I:android.view.View A[D('child' android.view.View)]), (r2 I:int) type: STATIC call: androidx.core.view.ViewCompat.offsetTopAndBottom(android.view.View, int):void A[MD:(android.view.View, int):void (m)] (LINE:2445)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|RETURN\lORIG_RETURN\l|0x002e: RETURN    (LINE:2452)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x002e: RETURN   A[SYNTHETIC] (LINE:2452)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.appbar.AppBarLayout.ScrollingViewBehavior.offsetChildAsNeeded((r4 'this' I:com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.view.View A[D('dependency' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x000d \-\> B:12:0x002e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x002e: r1 'ablBehavior' Lcom\/google\/android\/material\/appbar\/AppBarLayout$BaseBehavior;\l  0x000b\-0x002e: r0 'behavior' Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout$Behavior;\l  \-1 \-0x002e: r5 'child' Landroid\/view\/View;\l  \-1 \-0x002e: r6 'dependency' Landroid\/view\/View;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

