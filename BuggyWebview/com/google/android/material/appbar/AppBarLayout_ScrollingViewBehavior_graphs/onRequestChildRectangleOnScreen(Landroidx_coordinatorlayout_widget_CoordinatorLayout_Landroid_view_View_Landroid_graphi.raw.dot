digraph "CFG forcom.google.android.material.appbar.AppBarLayout.ScrollingViewBehavior.onRequestChildRectangleOnScreen(Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;Landroid\/view\/View;Landroid\/graphics\/Rect;Z)Z" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: INVOKE  (r0 I:java.util.List) = \l  (r6 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('parent' androidx.coordinatorlayout.widget.CoordinatorLayout)])\l  (r7 I:android.view.View A[D('child' android.view.View)])\l type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getDependencies(android.view.View):java.util.List A[MD:(android.view.View):java.util.List\<android.view.View\> (m)] (LINE:2420)\l0x0004: INVOKE  (r0 I:com.google.android.material.appbar.AppBarLayout) = (r5 I:com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior), (r0 I:java.util.List) type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.ScrollingViewBehavior.findFirstDependency(java.util.List):com.google.android.material.appbar.AppBarLayout A[MD:(java.util.List\<android.view.View\>):com.google.android.material.appbar.AppBarLayout (m)]\l0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2421)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('header' com.google.android.material.appbar.AppBarLayout)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0030 \l}"];
Node_13 [shape=record,label="{13\:\ 0x000b|0x000b: INVOKE  (r2 I:int) = (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:2423)\l0x000f: INVOKE  (r3 I:int) = (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0013: INVOKE  (r8 I:android.graphics.Rect A[D('rectangle' android.graphics.Rect)]), (r2 I:int), (r3 I:int) type: VIRTUAL call: android.graphics.Rect.offset(int, int):void A[MD:(int, int):void (c)]\l0x0016: IGET  (r2 I:android.graphics.Rect) = (r5 I:com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior) com.google.android.material.appbar.AppBarLayout.ScrollingViewBehavior.tempRect1 android.graphics.Rect  (LINE:2425)\l0x0018: INVOKE  (r3 I:int) = \l  (r6 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('parent' androidx.coordinatorlayout.widget.CoordinatorLayout)])\l type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getWidth():int A[MD:():int (s)] (LINE:2426)\l0x001c: INVOKE  (r4 I:int) = \l  (r6 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('parent' androidx.coordinatorlayout.widget.CoordinatorLayout)])\l type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getHeight():int A[MD:():int (s)]\l0x0020: INVOKE  (r2 I:android.graphics.Rect A[D('parentRect' android.graphics.Rect)]), (r1 I:int), (r1 I:int), (r3 I:int), (r4 I:int) type: VIRTUAL call: android.graphics.Rect.set(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x0023: INVOKE  (r3 I:boolean) = \l  (r2 I:android.graphics.Rect A[D('parentRect' android.graphics.Rect)])\l  (r8 I:android.graphics.Rect A[D('rectangle' android.graphics.Rect)])\l type: VIRTUAL call: android.graphics.Rect.contains(android.graphics.Rect):boolean A[MD:(android.graphics.Rect):boolean (c)] (LINE:2428)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|0x0027: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0030 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|0x0029: ARITH  (r3 I:??[int, boolean]) = (r9 I:??[int, boolean, short, byte, char] A[D('immediate' boolean)]) ^ (1 ??[boolean, int, float, short, byte, char])  (LINE:2431)\l0x002b: INVOKE  \l  (r0 I:com.google.android.material.appbar.AppBarLayout A[D('header' com.google.android.material.appbar.AppBarLayout)])\l  (r1 I:boolean)\l  (r3 I:boolean)\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.setExpanded(boolean, boolean):void A[MD:(boolean, boolean):void (m)]\l0x002e: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:2432)\l}"];
Node_16 [shape=record,label="{16\:\ 0x002f|RETURN\l|0x002f: RETURN  (r1 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0030|RETURN\l|0x0030: RETURN  (r1 I:boolean)  (LINE:2435)\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.appbar.AppBarLayout.ScrollingViewBehavior.onRequestChildRectangleOnScreen((r5 'this' I:com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior A[IMMUTABLE_TYPE, THIS]), (r6 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('parent' androidx.coordinatorlayout.widget.CoordinatorLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.graphics.Rect A[D('rectangle' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('immediate' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0030 \-\> B:10:?, CROSS_EDGE: B:12:0x0009 \-\> B:17:0x0030\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0018\-0x0030: r2 'parentRect' Landroid\/graphics\/Rect;\l  0x0008\-0x0030: r0 'header' Lcom\/google\/android\/material\/appbar\/AppBarLayout;\l  \-1 \-0x0030: r6 'parent' Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;\l  \-1 \-0x0030: r7 'child' Landroid\/view\/View;\l  \-1 \-0x0030: r8 'rectangle' Landroid\/graphics\/Rect;\l  \-1 \-0x0030: r9 'immediate' Z\lMETHOD_OVERRIDE: [androidx.coordinatorlayout.widget.CoordinatorLayout.Behavior.onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout, V extends android.view.View, android.graphics.Rect, boolean):boolean]\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_10;
Node_17 -> Node_10;
}

