digraph "CFG forcom.google.android.material.appbar.ViewUtilsLollipop.setStateListAnimatorFromAttrs(Landroid\/view\/View;Landroid\/util\/AttributeSet;II)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INVOKE  (r6 I:android.content.Context) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getContext():android.content.Context A[MD:():android.content.Context (c)] (LINE:44)\l0x0004: SGET  (r2 I:int[]) =  com.google.android.material.appbar.ViewUtilsLollipop.STATE_LIST_ANIM_ATTRS int[]  (LINE:45)\l0x0006: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: NEW_ARRAY  (r5 I:int[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)])  (LINE:46)\l0x000a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('attrs' android.util.AttributeSet)]) \l0x000b: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('defStyleAttr' int)]) \l0x000c: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('defStyleRes' int)]) \l0x000d: INVOKE  (r0 I:android.content.res.TypedArray) = (r0 I:android.content.Context), (r1 I:android.util.AttributeSet), (r2 I:int[]), (r3 I:int), (r4 I:int), (r5 I:int[]) type: STATIC call: com.google.android.material.internal.ThemeEnforcement.obtainStyledAttributes(android.content.Context, android.util.AttributeSet, int[], int, int, int[]):android.content.res.TypedArray A[MD:(android.content.Context, android.util.AttributeSet, int[], int, int, int[]):android.content.res.TypedArray VARARG (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_16 [shape=record,label="{16\:\ 0x0011|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0028, blocks: (B:16:0x0011, B:18:0x0018), top: B:24:0x0011 \}\lCatch: all \-\> 0x0028\l|0x0011: INVOKE  (r1 I:boolean) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r7 I:int) type: VIRTUAL call: android.content.res.TypedArray.hasValue(int):boolean A[Catch: all \-\> 0x0028, MD:(int):boolean (c), TRY_ENTER] (LINE:49)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|0x0015: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0023 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0018|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0028, blocks: (B:16:0x0011, B:18:0x0018), top: B:24:0x0011 \}\lCatch: all \-\> 0x0028\l|0x0018: INVOKE  (r1 I:int) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r7 I:int), (r7 I:int) type: VIRTUAL call: android.content.res.TypedArray.getResourceId(int, int):int A[Catch: all \-\> 0x0028, MD:(int, int):int (c)] (LINE:51)\l0x001c: INVOKE  (r1 I:android.animation.StateListAnimator) = (r6 I:android.content.Context A[D('context' android.content.Context)]), (r1 I:int) type: STATIC call: android.animation.AnimatorInflater.loadStateListAnimator(android.content.Context, int):android.animation.StateListAnimator A[Catch: all \-\> 0x0028, MD:(android.content.Context, int):android.animation.StateListAnimator throws android.content.res.Resources$NotFoundException (c)]\l0x0020: INVOKE  \l  (r8 I:android.view.View A[D('view' android.view.View)])\l  (r1 I:android.animation.StateListAnimator A[D('sla' android.animation.StateListAnimator)])\l type: VIRTUAL call: android.view.View.setStateListAnimator(android.animation.StateListAnimator):void A[Catch: all \-\> 0x0028, MD:(android.animation.StateListAnimator):void (c), TRY_LEAVE] (LINE:52)\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x0023|0x0023: INVOKE  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:55)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0027|RETURN\l|0x0027: RETURN    (LINE:57)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0028|ExcHandler: all \-\> 0x0028\l|0x0028: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0028] (LINE:55)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0029|0x0029: INVOKE  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x002c|0x002c: THROW  (r1 I:java.lang.Throwable)  (LINE:56)\l}"];
MethodNode[shape=record,label="{public static void com.google.android.material.appbar.ViewUtilsLollipop.setStateListAnimatorFromAttrs((r8 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('defStyleAttr' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('defStyleRes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x002c \-\> B:14:?, CROSS_EDGE: B:17:0x0015 \-\> B:19:0x0023, CROSS_EDGE: B:24:0x0011 \-\> B:21:0x0028\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0020\-0x0023: r1 'sla' Landroid\/animation\/StateListAnimator;\l  0x0011\-0x002c: r0 'a' Landroid\/content\/res\/TypedArray;\l  0x0004\-0x002c: r6 'context' Landroid\/content\/Context;\l  \-1 \-0x002c: r8 'view' Landroid\/view\/View;\l  \-1 \-0x002c: r9 'attrs' Landroid\/util\/AttributeSet;\l  \-1 \-0x002c: r10 'defStyleAttr' I\l  \-1 \-0x002c: r11 'defStyleRes' I\lTryCatch #0 \{all \-\> 0x0028, blocks: (B:16:0x0011, B:18:0x0018), top: B:24:0x0011 \}\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_24;
Node_24 -> Node_16;
Node_24 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_18 -> Node_25;
Node_25 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_14;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_14;
}

