digraph "CFG forcom.google.android.material.appbar.AppBarLayout.BaseBehavior.snapToChildIfNeeded(Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;Lcom\/google\/android\/material\/appbar\/AppBarLayout;)V" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = \l  (r13 I:com.google.android.material.appbar.AppBarLayout A[D('abl' T extends com.google.android.material.appbar.AppBarLayout)])\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.getTopInset():int A[MD:():int (m)] (LINE:1674)\l0x0004: INVOKE  (r1 I:int) = \l  (r13 I:com.google.android.material.appbar.AppBarLayout A[D('abl' T extends com.google.android.material.appbar.AppBarLayout)])\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.getPaddingTop():int A[MD:():int (s)]\l0x0008: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0009: INVOKE  (r1 I:int) = \l  (r11 I:com.google.android.material.appbar.AppBarLayout$BaseBehavior A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>)])\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.BaseBehavior.getTopBottomOffsetForScrollingSibling():int A[MD:():int (m)] (LINE:1678)\l0x000d: ARITH  (r1 I:int) = (r1 I:int) \- (r0 I:int A[D('topInset' int)]) \l0x000e: INVOKE  (r2 I:int) = \l  (r11 I:com.google.android.material.appbar.AppBarLayout$BaseBehavior A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>)])\l  (r13 I:com.google.android.material.appbar.AppBarLayout A[D('abl' T extends com.google.android.material.appbar.AppBarLayout)])\l  (r1 I:int A[D('offset' int)])\l type: DIRECT call: com.google.android.material.appbar.AppBarLayout.BaseBehavior.getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout, int):int A[MD:(T extends com.google.android.material.appbar.AppBarLayout, int):int (m)] (LINE:1679)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0012|0x0012: IF  (r2 I:??[int, byte, short, char] A[D('offsetChildIndex' int)]) \< (0 ??[int, byte, short, char])  \-\> B:56:?  (LINE:1680)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0014|0x0014: INVOKE  (r3 I:android.view.View) = \l  (r13 I:com.google.android.material.appbar.AppBarLayout A[D('abl' T extends com.google.android.material.appbar.AppBarLayout)])\l  (r2 I:int A[D('offsetChildIndex' int)])\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:1681)\l0x0018: INVOKE  (r4 I:android.view.ViewGroup$LayoutParams) = (r3 I:android.view.View A[D('offsetChild' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1682)\l0x001c: CHECK_CAST (r4 I:com.google.android.material.appbar.AppBarLayout$LayoutParams) = (com.google.android.material.appbar.AppBarLayout$LayoutParams) (r4 I:??[OBJECT, ARRAY]) \l0x001e: INVOKE  (r5 I:int) = \l  (r4 I:com.google.android.material.appbar.AppBarLayout$LayoutParams A[D('lp' com.google.android.material.appbar.AppBarLayout$LayoutParams)])\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.LayoutParams.getScrollFlags():int A[MD:():int (m)] (LINE:1683)\l0x0022: ARITH  (r6 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char] A[D('flags' int)]) & (17 ??[int, float, short, byte, char])  (LINE:1685)\l0x0024: CONST  (r7 I:??[int, float, short, byte, char]) = (17 ??[int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0026|0x0026: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:? \l}"];
Node_35 [shape=record,label="{35\:\ 0x0028|0x0028: INVOKE  (r6 I:int) = (r3 I:android.view.View A[D('offsetChild' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)] (LINE:1687)\l0x002c: NEG  (r6 I:int) = (r6 I:int) \l0x002d: INVOKE  (r7 I:int) = (r3 I:android.view.View A[D('offsetChild' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)] (LINE:1688)\l0x0031: NEG  (r7 I:int) = (r7 I:int) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0032|0x0032: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('offsetChildIndex' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0045  (LINE:1692)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0034|0x0034: INVOKE  (r8 I:boolean) = (r13 I:android.view.View A[D('abl' T extends com.google.android.material.appbar.AppBarLayout)]) type: STATIC call: androidx.core.view.ViewCompat.getFitsSystemWindows(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1693)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0038|0x0038: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0045 \l}"];
Node_39 [shape=record,label="{39\:\ 0x003a|0x003a: INVOKE  (r8 I:boolean) = (r3 I:android.view.View A[D('offsetChild' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getFitsSystemWindows(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1694)\l}"];
Node_40 [shape=record,label="{40\:\ 0x003e|0x003e: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0045 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0040|0x0040: INVOKE  (r8 I:int) = \l  (r13 I:com.google.android.material.appbar.AppBarLayout A[D('abl' T extends com.google.android.material.appbar.AppBarLayout)])\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.getTopInset():int A[MD:():int (m)] (LINE:1695)\l0x0044: ARITH  (r6 I:int) = (r6 I:int A[D('snapTop' int)]) \- (r8 I:int) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0045|0x0045: CONST  (r8 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:1698)\l0x0046: INVOKE  (r8 I:boolean) = (r5 I:int A[D('flags' int)]), (r8 I:int) type: STATIC call: com.google.android.material.appbar.AppBarLayout.BaseBehavior.checkFlag(int, int):boolean A[MD:(int, int):boolean (m)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x004a|0x004a: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0052 \l}"];
Node_44 [shape=record,label="{44\:\ 0x004c|0x004c: INVOKE  (r8 I:int) = (r3 I:android.view.View A[D('offsetChild' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getMinimumHeight(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:1700)\l0x0050: ARITH  (r7 I:int) = (r7 I:int A[D('snapBottom' int)]) + (r8 I:int) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0063|0x0063: CONST  (r8 I:??[int, float, short, byte, char] A[D('seam' int)]) = (32 ??[int, float, short, byte, char])  (LINE:1713)\l0x0065: INVOKE  (r8 I:boolean) = (r5 I:int A[D('flags' int)]), (r8 I:int) type: STATIC call: com.google.android.material.appbar.AppBarLayout.BaseBehavior.checkFlag(int, int):boolean A[MD:(int, int):boolean (m)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0069|0x0069: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0071 \l}"];
Node_53 [shape=record,label="{53\:\ 0x006b|0x006b: IGET  (r8 I:int) = \l  (r4 I:com.google.android.material.appbar.AppBarLayout$LayoutParams A[D('lp' com.google.android.material.appbar.AppBarLayout$LayoutParams)])\l com.google.android.material.appbar.AppBarLayout.LayoutParams.topMargin int  (LINE:1715)\l0x006d: ARITH  (r6 I:int) = (r6 I:int A[D('snapTop' int)]) + (r8 I:int) \l0x006e: IGET  (r8 I:int) = \l  (r4 I:com.google.android.material.appbar.AppBarLayout$LayoutParams A[D('lp' com.google.android.material.appbar.AppBarLayout$LayoutParams)])\l com.google.android.material.appbar.AppBarLayout.LayoutParams.bottomMargin int  (LINE:1716)\l0x0070: ARITH  (r7 I:int) = (r7 I:int A[D('snapBottom' int)]) \- (r8 I:int) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0071|0x0071: INVOKE  (r8 I:int) = \l  (r11 I:com.google.android.material.appbar.AppBarLayout$BaseBehavior A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>)])\l  (r1 I:int A[D('offset' int)])\l  (r7 I:int A[D('snapBottom' int)])\l  (r6 I:int A[D('snapTop' int)])\l type: DIRECT call: com.google.android.material.appbar.AppBarLayout.BaseBehavior.calculateSnapOffset(int, int, int):int A[MD:(int, int, int):int (m)] (LINE:1721)\l0x0075: ARITH  (r8 I:int) = (r8 I:int) + (r0 I:int A[D('topInset' int)]) \l0x0077: INVOKE  (r9 I:int) = \l  (r13 I:com.google.android.material.appbar.AppBarLayout A[D('abl' T extends com.google.android.material.appbar.AppBarLayout)])\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.getTotalScrollRange():int A[MD:():int (m)] (LINE:1723)\l0x007b: NEG  (r9 I:int) = (r9 I:int) \l0x007c: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x007d: INVOKE  (r9 I:int) = (r8 I:int A[D('newOffset' int)]), (r9 I:int), (r10 I:int) type: STATIC call: androidx.core.math.MathUtils.clamp(int, int, int):int A[MD:(int, int, int):int (m)]\l0x0081: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0082: INVOKE  \l  (r11 I:com.google.android.material.appbar.AppBarLayout$BaseBehavior A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>)])\l  (r12 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('coordinatorLayout' androidx.coordinatorlayout.widget.CoordinatorLayout)])\l  (r13 I:com.google.android.material.appbar.AppBarLayout A[D('abl' T extends com.google.android.material.appbar.AppBarLayout)])\l  (r9 I:int)\l  (r10 I:float)\l type: DIRECT call: com.google.android.material.appbar.AppBarLayout.BaseBehavior.animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, int, float):void A[MD:(androidx.coordinatorlayout.widget.CoordinatorLayout, T extends com.google.android.material.appbar.AppBarLayout, int, float):void (m)] (LINE:1722)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0085|RETURN\lORIG_RETURN\l|0x0085: RETURN    (LINE:1726)\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0052|0x0052: CONST  (r8 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char])  (LINE:1701)\l0x0053: INVOKE  (r8 I:boolean) = (r5 I:int A[D('flags' int)]), (r8 I:int) type: STATIC call: com.google.android.material.appbar.AppBarLayout.BaseBehavior.checkFlag(int, int):boolean A[MD:(int, int):boolean (m)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0057|0x0057: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0063 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0059|0x0059: INVOKE  (r8 I:int) = (r3 I:android.view.View A[D('offsetChild' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getMinimumHeight(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:1705)\l0x005d: ARITH  (r8 I:int) = (r8 I:int) + (r7 I:int A[D('snapBottom' int)]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x005e|0x005e: IF  (r1 I:??[int, byte, short, char] A[D('offset' int)]) \>= (r8 I:??[int, byte, short, char] A[D('seam' int)])  \-\> B:50:0x0062  (LINE:1706)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0060|0x0060: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('snapTop' int)]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('seam' int)])  (LINE:1707)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0062|0x0062: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('snapBottom' int)]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('seam' int)])  (LINE:1709)\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|0x0085: RETURN   A[SYNTHETIC] (LINE:1726)\l}"];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lRETURN\l|0x0085: RETURN   A[SYNTHETIC] (LINE:1726)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.appbar.AppBarLayout.BaseBehavior.snapToChildIfNeeded((r11 'this' I:com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\> A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>), IMMUTABLE_TYPE, THIS]), (r12 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('coordinatorLayout' androidx.coordinatorlayout.widget.CoordinatorLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:T extends com.google.android.material.appbar.AppBarLayout A[D('abl' T extends com.google.android.material.appbar.AppBarLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:52:0x0069 \-\> B:54:0x0071, CROSS_EDGE: B:49:0x0060 \-\> B:51:0x0063, CROSS_EDGE: B:50:0x0062 \-\> B:51:0x0063, CROSS_EDGE: B:46:0x0057 \-\> B:51:0x0063, CROSS_EDGE: B:40:0x003e \-\> B:42:0x0045, CROSS_EDGE: B:38:0x0038 \-\> B:42:0x0045, CROSS_EDGE: B:36:0x0032 \-\> B:42:0x0045, CROSS_EDGE: B:34:0x0026 \-\> B:55:0x0085, CROSS_EDGE: B:32:0x0012 \-\> B:55:0x0085\lINLINE_NOT_NEEDED\lDebug Info:\l  0x005e\-0x0063: r8 'seam' I\l  0x0018\-0x0085: r3 'offsetChild' Landroid\/view\/View;\l  0x001e\-0x0085: r4 'lp' Lcom\/google\/android\/material\/appbar\/AppBarLayout$LayoutParams;\l  0x0022\-0x0085: r5 'flags' I\l  0x002d\-0x0085: r6 'snapTop' I\l  0x0032\-0x0085: r7 'snapBottom' I\l  0x0076\-0x0085: r8 'newOffset' I\l  0x0009\-0x0085: r0 'topInset' I\l  0x000e\-0x0085: r1 'offset' I\l  0x0012\-0x0085: r2 'offsetChildIndex' I\l  0x0000\-0x0085: r11 'this' Lcom\/google\/android\/material\/appbar\/AppBarLayout$BaseBehavior;, signature: Lcom\/google\/android\/material\/appbar\/AppBarLayout$BaseBehavior\<TT;\>;\l  \-1 \-0x0085: r12 'coordinatorLayout' Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;\l  0x0000\-0x0085: r13 'abl' Lcom\/google\/android\/material\/appbar\/AppBarLayout;, signature: TT;\lTYPE_VARS: [T extends com.google.android.material.appbar.AppBarLayout]\lSIGNATURE: (Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;TT;)V\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_56;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_57;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_42;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_30;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_51;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_57 -> Node_30;
Node_56 -> Node_30;
}

