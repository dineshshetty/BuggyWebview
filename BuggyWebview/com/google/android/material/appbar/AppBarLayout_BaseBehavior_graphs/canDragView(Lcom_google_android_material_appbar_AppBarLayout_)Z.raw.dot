digraph "CFG forcom.google.android.material.appbar.AppBarLayout.BaseBehavior.canDragView(Lcom\/google\/android\/material\/appbar\/AppBarLayout;)Z" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback) = \l  (r3 I:com.google.android.material.appbar.AppBarLayout$BaseBehavior A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>)])\l com.google.android.material.appbar.AppBarLayout.BaseBehavior.onDragCallback com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback  (LINE:2017)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0009 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|0x0004: INVOKE  (r0 I:boolean) = \l  (r0 I:com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback)\l  (r4 I:com.google.android.material.appbar.AppBarLayout A[D('view' T extends com.google.android.material.appbar.AppBarLayout)])\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.BaseBehavior.BaseDragCallback.canDrag(com.google.android.material.appbar.AppBarLayout):boolean A[MD:(T extends com.google.android.material.appbar.AppBarLayout):boolean (m)] (LINE:2019)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:boolean) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0009|0x0009: IGET  (r0 I:java.lang.ref.WeakReference\<android.view.View\>) = \l  (r3 I:com.google.android.material.appbar.AppBarLayout$BaseBehavior A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>)])\l com.google.android.material.appbar.AppBarLayout.BaseBehavior.lastNestedScrollingChildRef java.lang.ref.WeakReference  (LINE:2023)\l0x000b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0026 \l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|0x000e: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) type: VIRTUAL call: java.lang.ref.WeakReference.get():java.lang.Object A[MD:():T (c)] (LINE:2025)\l0x0012: CHECK_CAST (r0 I:android.view.View) = (android.view.View) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('scrollingView' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0024  (LINE:2026)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0016|0x0016: INVOKE  (r2 I:boolean) = (r0 I:android.view.View A[D('scrollingView' android.view.View)]) type: VIRTUAL call: android.view.View.isShown():boolean A[MD:():boolean (c)] (LINE:2027)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|0x001a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0024 \l}"];
Node_31 [shape=record,label="{31\:\ 0x001c|0x001c: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x001d: INVOKE  (r2 I:boolean) = (r0 I:android.view.View A[D('scrollingView' android.view.View)]), (r2 I:int) type: VIRTUAL call: android.view.View.canScrollVertically(int):boolean A[MD:(int):boolean (c)] (LINE:2028)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0021|0x0021: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0024 \l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x0025: RETURN  (r1 I:boolean) A[SYNTHETIC] (LINE:2026)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0024|RETURN\lORIG_RETURN\l|0x0024: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0025: RETURN  (r1 I:boolean)  (LINE:2026)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0026|RETURN\l|0x0026: RETURN  (r1 I:boolean)  (LINE:2031)\l}"];
MethodNode[shape=record,label="{boolean com.google.android.material.appbar.AppBarLayout.BaseBehavior.canDragView((r3 'this' I:com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\> A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>), IMMUTABLE_TYPE, THIS]), (r4 I:T extends com.google.android.material.appbar.AppBarLayout A[D('view' T extends com.google.android.material.appbar.AppBarLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0025 \-\> B:20:?, CROSS_EDGE: B:32:0x0021 \-\> B:35:0x0025, CROSS_EDGE: B:30:0x001a \-\> B:34:0x0024, CROSS_EDGE: B:28:0x0014 \-\> B:34:0x0024, CROSS_EDGE: B:36:0x0026 \-\> B:20:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x0026: r0 'scrollingView' Landroid\/view\/View;\l  0x0000\-0x0026: r3 'this' Lcom\/google\/android\/material\/appbar\/AppBarLayout$BaseBehavior;, signature: Lcom\/google\/android\/material\/appbar\/AppBarLayout$BaseBehavior\<TT;\>;\l  0x0000\-0x0026: r4 'view' Lcom\/google\/android\/material\/appbar\/AppBarLayout;, signature: TT;\lTYPE_VARS: [T extends com.google.android.material.appbar.AppBarLayout]\lSIGNATURE: (TT;)Z\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_20;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_36;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_34;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_34;
Node_32 -> Node_37[style=dashed];
Node_37 -> Node_20;
Node_34 -> Node_20;
Node_36 -> Node_20;
}

