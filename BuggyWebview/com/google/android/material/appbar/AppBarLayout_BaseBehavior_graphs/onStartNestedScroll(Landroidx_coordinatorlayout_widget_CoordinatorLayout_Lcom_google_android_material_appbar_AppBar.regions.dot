digraph "CFG forcom.google.android.material.appbar.AppBarLayout.BaseBehavior.onStartNestedScroll(Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;Lcom\/google\/android\/material\/appbar\/AppBarLayout;Landroid\/view\/View;Landroid\/view\/View;II)Z" {
subgraph cluster_Region_1586776570 {
label = "R(4:2|(1:11)|12|13) | DECL_VAR: android.animation.ValueAnimator null\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0002|boolean r0 = (r7 & 2) != 0 && (r4.isLiftOnScroll() \|\| canScrollChildren(r3, r4, r5))\l}"];
subgraph cluster_IfRegion_516649060 {
label = "IF [B:26:0x0013, B:28:0x0017] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0013|PHI: r0 \l  PHI: (r0v2 'started' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != false) goto L9\l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|ADDED_TO_REGION\l|if ((r1 = r2.offsetAnimator) != null) goto L11\l}"];
subgraph cluster_Region_1620679403 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0019|r1.cancel()\l}"];
}
}
Node_30 [shape=record,label="{30\:\ 0x001c|r2.lastNestedScrollingChildRef = null\lr2.lastStartedType = r8\l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|RETURN\l|return r0\l}"];
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0000}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0004}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0008|REMOVE\lADDED_TO_REGION\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x000a}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x000e|REMOVE\lADDED_TO_REGION\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0010}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0015}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0012}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.appbar.AppBarLayout.BaseBehavior.onStartNestedScroll((r2v0 'this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\> A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>), IMMUTABLE_TYPE, THIS]), (r3v0 'parent' androidx.coordinatorlayout.widget.CoordinatorLayout A[D('parent' androidx.coordinatorlayout.widget.CoordinatorLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'child' T extends com.google.android.material.appbar.AppBarLayout A[D('child' T extends com.google.android.material.appbar.AppBarLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'directTargetChild' android.view.View A[D('directTargetChild' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'target' android.view.View A[D('target' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'nestedScrollAxes' int A[D('nestedScrollAxes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'type' int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0017 \-\> B:30:0x001c, CROSS_EDGE: B:26:0x0013 \-\> B:30:0x001c, CROSS_EDGE: B:25:0x0012 \-\> B:26:0x0013, CROSS_EDGE: B:21:0x0008 \-\> B:24:0x0010, CROSS_EDGE: B:19:0x0002 \-\> B:25:0x0012\lINLINE_NOT_NEEDED\lTYPE_VARS: [T extends com.google.android.material.appbar.AppBarLayout]\lSIGNATURE: (Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;TT;Landroid\/view\/View;Landroid\/view\/View;II)Z\lMETHOD_OVERRIDE: [com.google.android.material.appbar.AppBarLayout.BaseBehavior.onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout, T extends com.google.android.material.appbar.AppBarLayout, android.view.View, android.view.View, int, int):boolean]\l}"];
MethodNode -> Node_16;Node_19 -> Node_20;
Node_19 -> Node_25;
Node_26 -> Node_27;
Node_26 -> Node_30[style=dashed];
Node_28 -> Node_29;
Node_28 -> Node_30[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_27 -> Node_28;
Node_25 -> Node_26;
}

