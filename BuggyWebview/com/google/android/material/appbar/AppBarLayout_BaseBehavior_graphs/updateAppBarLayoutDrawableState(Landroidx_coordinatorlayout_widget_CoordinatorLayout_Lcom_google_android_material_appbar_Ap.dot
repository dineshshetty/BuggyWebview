digraph "CFG forcom.google.android.material.appbar.AppBarLayout.BaseBehavior.updateAppBarLayoutDrawableState(Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;Lcom\/google\/android\/material\/appbar\/AppBarLayout;IIZ)V" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|android.view.View r0 = getAppBarChildOnOffset(r12, r13)\lr1 = false\l}"];
Node_35 [shape=record,label="{35\:\ 0x0005|if (r0 == null) goto L19\l}"];
Node_36 [shape=record,label="{36\:\ 0x0007|com.google.android.material.appbar.AppBarLayout$LayoutParams r2 = (com.google.android.material.appbar.AppBarLayout.LayoutParams) r0.getLayoutParams()\lint r3 = r2.getScrollFlags()\l}"];
Node_37 [shape=record,label="{37\:\ 0x0013|if ((r3 & 1) == 0) goto L19\l}"];
Node_38 [shape=record,label="{38\:\ 0x0015|int r4 = androidx.core.view.ViewCompat.getMinimumHeight(r0)\lr5 = false\l}"];
Node_39 [shape=record,label="{39\:\ 0x001b|if (r14 \<= 0) goto L13\l}"];
Node_40 [shape=record,label="{40\:\ 0x001d}"];
Node_41 [shape=record,label="{41\:\ 0x001f|if ((r3 & 12) == 0) goto L13\l}"];
Node_42 [shape=record,label="{42\:\ 0x0021}"];
Node_43 [shape=record,label="{43\:\ 0x002c|if ((\-r13) \< ((r0.getBottom() \- r4) \- r12.getTopInset())) goto L12\l}"];
Node_44 [shape=record,label="{44\:\ 0x002e|r5 = true\l}"];
Node_45 [shape=record,label="{45\:\ 0x002f|PHI: r5 \l  PHI: (r5v3 boolean) = (r5v0 boolean), (r5v4 boolean) binds: [B:43:0x002c, B:44:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r5\l}"];
Node_46 [shape=record,label="{46\:\ 0x0031}"];
Node_47 [shape=record,label="{47\:\ 0x0033|if ((r3 & 2) == 0) goto L19\l}"];
Node_48 [shape=record,label="{48\:\ 0x0035}"];
Node_49 [shape=record,label="{49\:\ 0x0040|if ((\-r13) \< ((r0.getBottom() \- r4) \- r12.getTopInset())) goto L18\l}"];
Node_50 [shape=record,label="{50\:\ 0x0042|r5 = true\l}"];
Node_51 [shape=record,label="{51\:\ 0x0043|PHI: r5 \l  PHI: (r5v1 boolean) = (r5v0 boolean), (r5v2 boolean) binds: [B:49:0x0040, B:50:0x0042] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r5\l}"];
Node_52 [shape=record,label="{52\:\ 0x0044|PHI: r1 \l  PHI: (r1v1 'lifted' boolean) = (r1v0 'lifted' boolean), (r1v0 'lifted' boolean), (r1v0 'lifted' boolean), (r1v4 'lifted' boolean), (r1v5 'lifted' boolean) binds: [B:35:0x0005, B:37:0x0013, B:47:0x0033, B:51:0x0043, B:45:0x002f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0048|if (r12.isLiftOnScroll() == false) goto L22\l}"];
Node_54 [shape=record,label="{54\:\ 0x004a|boolean r1 = r12.shouldLift(findFirstScrollingChild(r11))\l}"];
Node_55 [shape=record,label="{55\:\ 0x0052|PHI: r1 \l  PHI: (r1v2 'lifted' boolean) = (r1v1 'lifted' boolean), (r1v3 'lifted' boolean) binds: [B:53:0x0048, B:54:0x004a] A[DONT_GENERATE, DONT_INLINE]\l|boolean r2 = r12.setLiftedState(r1)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0056|if (r15 != false) goto L30\l}"];
Node_57 [shape=record,label="{57\:\ 0x0058|if (r2 == false) goto L29\l}"];
Node_58 [shape=record,label="{58\:\ 0x005a}"];
Node_59 [shape=record,label="{59\:\ 0x005e|if (shouldJumpElevationState(r11, r12) == false) goto L27\l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_62 [shape=record,label="{62\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_60 [shape=record,label="{60\:\ 0x0060|r12.jumpDrawablesToCurrentState()\l}"];
Node_61 [shape=record,label="{61\:\ 0x0063|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.appbar.AppBarLayout.BaseBehavior.updateAppBarLayoutDrawableState((r10v0 'this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\> A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>), IMMUTABLE_TYPE, THIS]), (r11v0 'parent' androidx.coordinatorlayout.widget.CoordinatorLayout A[D('parent' androidx.coordinatorlayout.widget.CoordinatorLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'layout' T extends com.google.android.material.appbar.AppBarLayout A[D('layout' T extends com.google.android.material.appbar.AppBarLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'offset' int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'direction' int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'forceJump' boolean A[D('forceJump' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:59:0x005e \-\> B:61:0x0063, CROSS_EDGE: B:57:0x0058 \-\> B:61:0x0063, CROSS_EDGE: B:56:0x0056 \-\> B:60:0x0060, CROSS_EDGE: B:53:0x0048 \-\> B:55:0x0052, CROSS_EDGE: B:43:0x002c \-\> B:45:0x002f, CROSS_EDGE: B:51:0x0043 \-\> B:52:0x0044, CROSS_EDGE: B:49:0x0040 \-\> B:51:0x0043, CROSS_EDGE: B:47:0x0033 \-\> B:52:0x0044, CROSS_EDGE: B:39:0x001b \-\> B:46:0x0031, CROSS_EDGE: B:37:0x0013 \-\> B:52:0x0044, CROSS_EDGE: B:35:0x0005 \-\> B:52:0x0044\lINLINE_NOT_NEEDED\lTYPE_VARS: [T extends com.google.android.material.appbar.AppBarLayout]\lSIGNATURE: (Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;TT;IIZ)V\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_52;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_52;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_46;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_46;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_45;
Node_45 -> Node_52;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_52;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_60;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_62;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_63;
Node_63 -> Node_33;
Node_62 -> Node_33;
Node_60 -> Node_61;
Node_61 -> Node_33;
}

