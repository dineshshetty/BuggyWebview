digraph "CFG forcom.google.android.material.appbar.AppBarLayout.BaseBehavior.canDragView(Landroid\/view\/View;)Z" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CHECK_CAST (r1 I:com.google.android.material.appbar.AppBarLayout) = (com.google.android.material.appbar.AppBarLayout) (r1 I:??[OBJECT, ARRAY])  (LINE:1446)\l0x0002: INVOKE  (r1 I:boolean) = \l  (r0 I:com.google.android.material.appbar.AppBarLayout$BaseBehavior A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>)])\l  (r1 I:com.google.android.material.appbar.AppBarLayout)\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.BaseBehavior.canDragView(com.google.android.material.appbar.AppBarLayout):boolean A[MD:(T extends com.google.android.material.appbar.AppBarLayout):boolean (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0006|RETURN\l|0x0006: RETURN  (r1 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{\/* bridge *\/ \/* synthetic *\/ boolean com.google.android.material.appbar.AppBarLayout.BaseBehavior.canDragView((r0 'this' I:com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\> A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>), IMMUTABLE_TYPE, THIS]), (r1 I:android.view.View A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0006: r0 'this' Lcom\/google\/android\/material\/appbar\/AppBarLayout$BaseBehavior;, signature: Lcom\/google\/android\/material\/appbar\/AppBarLayout$BaseBehavior\<TT;\>;\lTYPE_VARS: [T extends com.google.android.material.appbar.AppBarLayout]\lMETHOD_OVERRIDE: [com.google.android.material.appbar.HeaderBehavior.canDragView(V extends android.view.View):boolean]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

