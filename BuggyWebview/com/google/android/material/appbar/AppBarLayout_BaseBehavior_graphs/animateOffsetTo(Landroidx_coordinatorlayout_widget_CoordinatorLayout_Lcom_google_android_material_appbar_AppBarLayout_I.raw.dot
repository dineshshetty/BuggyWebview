digraph "CFG forcom.google.android.material.appbar.AppBarLayout.BaseBehavior.animateOffsetTo(Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;Lcom\/google\/android\/material\/appbar\/AppBarLayout;IF)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = \l  (r4 I:com.google.android.material.appbar.AppBarLayout$BaseBehavior A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>)])\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.BaseBehavior.getTopBottomOffsetForScrollingSibling():int A[MD:():int (m)] (LINE:1606)\l0x0004: ARITH  (r0 I:int) = (r0 I:int) \- (r7 I:int A[D('offset' int)]) \l0x0005: INVOKE  (r0 I:int) = (r0 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l0x0009: INVOKE  (r8 I:float A[D('velocity' float)]) = (r8 I:float A[D('velocity' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)] (LINE:1609)\l0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1610)\l0x000e: CMP_L  (r1 I:int) = (r8 I:float A[D('velocity' float)]), (r1 I:float) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0010|0x0010: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:13:0x001f \l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|0x0012: CONST  (r1 I:??[int, float, short, byte, char]) = (1148846080(0x447a0000, float:1000.0) ??[int, float, short, byte, char])  (LINE:1611)\l0x0014: CAST (r2 I:float) = (float) (r0 I:int A[D('distance' int)]) \l0x0015: ARITH  (r2 I:float) = (r2 I:float) \/ (r8 I:float A[D('velocity' float)]) \l0x0016: ARITH  (r2 I:float) = (r2 I:float) * (r1 I:float) \l0x0018: INVOKE  (r1 I:int) = (r2 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x001c: ARITH  (r1 I:int) = (r1 I:int) * (3 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|0x002f: INVOKE  \l  (r4 I:com.google.android.material.appbar.AppBarLayout$BaseBehavior A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>)])\l  (r5 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('coordinatorLayout' androidx.coordinatorlayout.widget.CoordinatorLayout)])\l  (r6 I:com.google.android.material.appbar.AppBarLayout A[D('child' T extends com.google.android.material.appbar.AppBarLayout)])\l  (r7 I:int A[D('offset' int)])\l  (r1 I:int A[D('duration' int)])\l type: DIRECT call: com.google.android.material.appbar.AppBarLayout.BaseBehavior.animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout, com.google.android.material.appbar.AppBarLayout, int, int):void A[MD:(androidx.coordinatorlayout.widget.CoordinatorLayout, T extends com.google.android.material.appbar.AppBarLayout, int, int):void (m)] (LINE:1617)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0032|RETURN\l|0x0032: RETURN    (LINE:1618)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|0x001f: CAST (r1 I:float A[D('duration' int)]) = (float) (r0 I:int A[D('distance' int)])  (LINE:1613)\l0x0020: INVOKE  (r2 I:int) = \l  (r6 I:com.google.android.material.appbar.AppBarLayout A[D('child' T extends com.google.android.material.appbar.AppBarLayout)])\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.getHeight():int A[MD:():int (s)]\l0x0024: CAST (r2 I:float) = (float) (r2 I:int) \l0x0025: ARITH  (r1 I:float) = (r1 I:float) \/ (r2 I:float) \l0x0026: CONST  (r2 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:1614)\l0x0028: ARITH  (r2 I:float) = (r2 I:float) + (r1 I:float A[D('distanceRatio' float)]) \l0x0029: CONST  (r3 I:??[int, float, short, byte, char]) = (1125515264(0x43160000, float:150.0) ??[int, float, short, byte, char]) \l0x002b: ARITH  (r2 I:float) = (r2 I:float) * (r3 I:float) \l0x002d: CAST (r2 I:int) = (int) (r2 I:float) \l0x002e: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('distanceRatio' float)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private void com.google.android.material.appbar.AppBarLayout.BaseBehavior.animateOffsetTo((r4 'this' I:com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\> A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>), IMMUTABLE_TYPE, THIS]), (r5 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('coordinatorLayout' androidx.coordinatorlayout.widget.CoordinatorLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:T extends com.google.android.material.appbar.AppBarLayout A[D('child' T extends com.google.android.material.appbar.AppBarLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:float A[D('velocity' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001f \-\> B:14:0x002f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x001f: r1 'duration' I\l  0x0026\-0x002f: r1 'distanceRatio' F\l  0x0009\-0x0032: r0 'distance' I\l  0x002f\-0x0032: r1 'duration' I\l  0x0000\-0x0032: r4 'this' Lcom\/google\/android\/material\/appbar\/AppBarLayout$BaseBehavior;, signature: Lcom\/google\/android\/material\/appbar\/AppBarLayout$BaseBehavior\<TT;\>;\l  \-1 \-0x0032: r5 'coordinatorLayout' Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;\l  0x0000\-0x0032: r6 'child' Lcom\/google\/android\/material\/appbar\/AppBarLayout;, signature: TT;\l  \-1 \-0x0032: r7 'offset' I\l  \-1 \-0x0032: r8 'velocity' F\lTYPE_VARS: [T extends com.google.android.material.appbar.AppBarLayout]\lSIGNATURE: (Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;TT;IF)V\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

