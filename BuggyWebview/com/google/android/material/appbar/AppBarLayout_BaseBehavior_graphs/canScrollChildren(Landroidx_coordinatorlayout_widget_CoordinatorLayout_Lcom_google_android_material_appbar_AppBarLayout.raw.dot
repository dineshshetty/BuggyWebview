digraph "CFG forcom.google.android.material.appbar.AppBarLayout.BaseBehavior.canScrollChildren(Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;Lcom\/google\/android\/material\/appbar\/AppBarLayout;Landroid\/view\/View;)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = \l  (r4 I:com.google.android.material.appbar.AppBarLayout A[D('child' T extends com.google.android.material.appbar.AppBarLayout)])\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.hasScrollableChildren():boolean A[MD:():boolean (m)] (LINE:1514)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0017 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: INVOKE  (r0 I:int) = \l  (r3 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('parent' androidx.coordinatorlayout.widget.CoordinatorLayout)])\l type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getHeight():int A[MD:():int (s)] (LINE:1515)\l0x000a: INVOKE  (r1 I:int) = (r5 I:android.view.View A[D('directTargetChild' android.view.View)]) type: VIRTUAL call: android.view.View.getHeight():int A[MD:():int (c)]\l0x000e: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x000f: INVOKE  (r1 I:int) = \l  (r4 I:com.google.android.material.appbar.AppBarLayout A[D('child' T extends com.google.android.material.appbar.AppBarLayout)])\l type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.getHeight():int A[MD:():int (s)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0013|0x0013: IF  (r0 I:??[int, byte, short, char]) \> (r1 I:??[int, byte, short, char])  \-\> B:17:0x0017 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0015|SYNTHETIC\lRETURN\l|0x0015: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0018: RETURN  (r0 I:boolean) A[SYNTHETIC] (LINE:1514)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|RETURN\lORIG_RETURN\l|0x0017: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: RETURN  (r0 I:boolean)  (LINE:1514)\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.material.appbar.AppBarLayout.BaseBehavior.canScrollChildren((r2 'this' I:com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\> A[D('this' com.google.android.material.appbar.AppBarLayout$BaseBehavior\<T extends com.google.android.material.appbar.AppBarLayout\>), IMMUTABLE_TYPE, THIS]), (r3 I:androidx.coordinatorlayout.widget.CoordinatorLayout A[D('parent' androidx.coordinatorlayout.widget.CoordinatorLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:T extends com.google.android.material.appbar.AppBarLayout A[D('child' T extends com.google.android.material.appbar.AppBarLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.view.View A[D('directTargetChild' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0017 \-\> B:18:0x0018, CROSS_EDGE: B:13:0x0004 \-\> B:17:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0018: r2 'this' Lcom\/google\/android\/material\/appbar\/AppBarLayout$BaseBehavior;, signature: Lcom\/google\/android\/material\/appbar\/AppBarLayout$BaseBehavior\<TT;\>;\l  \-1 \-0x0018: r3 'parent' Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;\l  0x0000\-0x0018: r4 'child' Lcom\/google\/android\/material\/appbar\/AppBarLayout;, signature: TT;\l  \-1 \-0x0018: r5 'directTargetChild' Landroid\/view\/View;\lTYPE_VARS: [T extends com.google.android.material.appbar.AppBarLayout]\lSIGNATURE: (Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;TT;Landroid\/view\/View;)Z\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

