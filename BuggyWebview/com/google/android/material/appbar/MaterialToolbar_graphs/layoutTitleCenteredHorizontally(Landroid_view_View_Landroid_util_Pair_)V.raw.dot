digraph "CFG forcom.google.android.material.appbar.MaterialToolbar.layoutTitleCenteredHorizontally(Landroid\/view\/View;Landroid\/util\/Pair;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r9 I:com.google.android.material.appbar.MaterialToolbar) type: VIRTUAL call: com.google.android.material.appbar.MaterialToolbar.getMeasuredWidth():int A[MD:():int (s)] (LINE:185)\l0x0004: INVOKE  (r1 I:int) = (r10 I:android.view.View A[D('titleView' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:186)\l0x0008: ARITH  (r2 I:int) = (r0 I:int A[D('width' int)]) \/ (2 int)  (LINE:188)\l0x000a: ARITH  (r3 I:int) = (r1 I:int A[D('titleWidth' int)]) \/ (2 int) \l0x000c: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x000d: ARITH  (r3 I:int) = (r2 I:int A[D('titleLeft' int)]) + (r1 I:int A[D('titleWidth' int)])  (LINE:189)\l0x000f: IGET  (r4 I:java.lang.Object) = (r11 I:android.util.Pair A[D('titleBoundLimits' android.util.Pair\<java.lang.Integer, java.lang.Integer\>)]) android.util.Pair.first java.lang.Object  (LINE:191)\l0x0011: CHECK_CAST (r4 I:java.lang.Integer) = (java.lang.Integer) (r4 I:??[OBJECT, ARRAY]) \l0x0013: INVOKE  (r4 I:int) = (r4 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x0017: ARITH  (r4 I:int) = (r4 I:int) \- (r2 I:int A[D('titleLeft' int)]) \l0x0018: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: INVOKE  (r4 I:int) = (r4 I:int), (r5 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x001d: IGET  (r6 I:java.lang.Object) = (r11 I:android.util.Pair A[D('titleBoundLimits' android.util.Pair\<java.lang.Integer, java.lang.Integer\>)]) android.util.Pair.second java.lang.Object  (LINE:192)\l0x001f: CHECK_CAST (r6 I:java.lang.Integer) = (java.lang.Integer) (r6 I:??[OBJECT, ARRAY]) \l0x0021: INVOKE  (r6 I:int) = (r6 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x0025: ARITH  (r6 I:int) = (r3 I:int A[D('titleRight' int)]) \- (r6 I:int) \l0x0027: INVOKE  (r5 I:int) = (r6 I:int), (r5 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x002b: INVOKE  (r6 I:int) = (r4 I:int A[D('leftOverlap' int)]), (r5 I:int A[D('rightOverlap' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:193)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: IF  (r6 I:??[int, byte, short, char] A[D('overlap' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:12:0x0042  (LINE:195)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: ARITH  (r2 I:int) = (r2 I:int A[D('titleLeft' int)]) + (r6 I:int A[D('overlap' int)])  (LINE:196)\l0x0032: ARITH  (r3 I:int) = (r3 I:int A[D('titleRight' int)]) \- (r6 I:int A[D('overlap' int)])  (LINE:197)\l0x0033: ARITH  (r1 I:int A[D('titleWidth' int)]) = (r3 I:int A[D('titleRight' int)]) \- (r2 I:int A[D('titleLeft' int)])  (LINE:198)\l0x0035: CONST  (r7 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:199)\l0x0037: INVOKE  (r7 I:int) = (r1 I:int A[D('titleWidth' int)]), (r7 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)] (LINE:200)\l0x003b: INVOKE  (r8 I:int) = (r10 I:android.view.View A[D('titleView' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeightAndState():int A[MD:():int (c)] (LINE:201)\l0x003f: INVOKE  (r10 I:android.view.View A[D('titleView' android.view.View)]), (r7 I:int), (r8 I:int) type: VIRTUAL call: android.view.View.measure(int, int):void A[MD:(int, int):void (c)] (LINE:199)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|0x0042: INVOKE  (r7 I:int) = (r10 I:android.view.View A[D('titleView' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)] (LINE:204)\l0x0046: INVOKE  (r8 I:int) = (r10 I:android.view.View A[D('titleView' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)]\l0x004a: INVOKE  \l  (r10 I:android.view.View A[D('titleView' android.view.View)])\l  (r2 I:int A[D('titleLeft' int)])\l  (r7 I:int)\l  (r3 I:int A[D('titleRight' int)])\l  (r8 I:int)\l type: VIRTUAL call: android.view.View.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x004d|RETURN\l|0x004d: RETURN    (LINE:205)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.appbar.MaterialToolbar.layoutTitleCenteredHorizontally((r9 'this' I:com.google.android.material.appbar.MaterialToolbar A[IMMUTABLE_TYPE, THIS]), (r10 I:android.view.View A[D('titleView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.util.Pair\<java.lang.Integer, java.lang.Integer\> A[D('titleBoundLimits' android.util.Pair\<java.lang.Integer, java.lang.Integer\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x002f \-\> B:12:0x0042\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x004d: r0 'width' I\l  0x0008\-0x004d: r1 'titleWidth' I\l  0x000d\-0x004d: r2 'titleLeft' I\l  0x000f\-0x004d: r3 'titleRight' I\l  0x001d\-0x004d: r4 'leftOverlap' I\l  0x002b\-0x004d: r5 'rightOverlap' I\l  0x002f\-0x004d: r6 'overlap' I\l  \-1 \-0x004d: r10 'titleView' Landroid\/view\/View;\l  0x0000\-0x004d: r11 'titleBoundLimits' Landroid\/util\/Pair;, signature: Landroid\/util\/Pair\<Ljava\/lang\/Integer;Ljava\/lang\/Integer;\>;\lSIGNATURE: (Landroid\/view\/View;Landroid\/util\/Pair\<Ljava\/lang\/Integer;Ljava\/lang\/Integer;\>;)V\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

