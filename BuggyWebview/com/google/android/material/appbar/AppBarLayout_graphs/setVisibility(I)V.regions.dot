digraph "CFG forcom.google.android.material.appbar.AppBarLayout.setVisibility(I)V" {
subgraph cluster_Region_2041949894 {
label = "R(4:1|2|4|(1:(1:6)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0000|super.setVisibility(r4)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|boolean r1 = r4 == 0\l}"];
Node_17 [shape=record,label="{17\:\ 0x0009|PHI: r1 \l  PHI: (r1v1 'visible' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|android.graphics.drawable.Drawable android.graphics.drawable.Drawable r2 = r3.statusBarForeground\l}"];
subgraph cluster_Region_1819154529 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_129124654 {
label = "IF [B:18:0x000b] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000b|if (r2 != null) goto L6\l}"];
subgraph cluster_Region_1935675568 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x000d|r2.setVisible(r1, false)\l}"];
}
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0006}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0010|ORIG_RETURN\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0008}"];
MethodNode[shape=record,label="{public void com.google.android.material.appbar.AppBarLayout.setVisibility((r3v0 'this' com.google.android.material.appbar.AppBarLayout A[IMMUTABLE_TYPE, THIS]), (r4v0 'visibility' int A[D('visibility' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:18:0x000b \-\> B:20:0x0010, CROSS_EDGE: B:16:0x0008 \-\> B:17:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.setVisibility(int):void\}]\l}"];
MethodNode -> Node_11;Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_21[style=dashed];
Node_19 -> Node_20;
Node_11 -> Node_13;
Node_15 -> Node_17;
Node_20 -> Node_12;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

