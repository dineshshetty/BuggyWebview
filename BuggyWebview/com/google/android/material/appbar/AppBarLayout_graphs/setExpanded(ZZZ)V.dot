digraph "CFG forcom.google.android.material.appbar.AppBarLayout.setExpanded(ZZZ)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0001|if (r4 == false) goto L13\l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|r0 = 1\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|PHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v4 int) binds: [B:18:0x0005, B:17:0x0003] A[DONT_GENERATE, DONT_INLINE]\l|r1 = 0\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|if (r5 == false) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|r2 = 4\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:22:0x000b, B:21:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|r0 = r0 \| r2\l}"];
Node_24 [shape=record,label="{24\:\ 0x000d|if (r6 == false) goto L9\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|r1 = 8\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:24:0x000d, B:25:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|r3.pendingAction = r0 \| r1\lrequestLayout()\l}"];
Node_27 [shape=record,label="{27\:\ 0x0017|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x000b|r2 = 0\l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|r0 = 2\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.appbar.AppBarLayout.setExpanded((r3v0 'this' com.google.android.material.appbar.AppBarLayout A[IMMUTABLE_TYPE, THIS]), (r4v0 'expanded' boolean A[D('expanded' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'animate' boolean A[D('animate' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'force' boolean A[D('force' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x000d \-\> B:26:0x0011, CROSS_EDGE: B:22:0x000b \-\> B:23:0x000c, CROSS_EDGE: B:18:0x0005 \-\> B:19:0x0006\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_15;
Node_22 -> Node_23;
Node_18 -> Node_19;
}

