digraph "CFG forcom.google.android.material.appbar.AppBarLayout.removeOnOffsetChangedListener(Lcom\/google\/android\/material\/appbar\/AppBarLayout$BaseOnOffsetChangedListener;)V" {
subgraph cluster_Region_1778105218 {
label = "R(2:1|(1:(1:4)))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|java.util.List\<com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener\> java.util.List\<com.google.android.material.appbar.AppBarLayout.BaseOnOffsetChangedListener\> r0 = r1.listeners\l}"];
subgraph cluster_Region_308204520 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_817657809 {
label = "IF [B:12:0x0002, B:13:0x0004] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0002|if (r0 != null) goto L3\l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|ADDED_TO_REGION\l|if (r2 != null) goto L4\l}"];
subgraph cluster_Region_152448808 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0006|r0.remove(r2)\l}"];
}
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0009|ORIG_RETURN\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.appbar.AppBarLayout.removeOnOffsetChangedListener((r1v0 'this' com.google.android.material.appbar.AppBarLayout A[IMMUTABLE_TYPE, THIS]), (r2v0 'listener' com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener A[D('listener' com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0004 \-\> B:15:0x0009, CROSS_EDGE: B:12:0x0002 \-\> B:15:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_16[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_14 -> Node_15;
Node_9 -> Node_11;
Node_15 -> Node_10;
Node_17 -> Node_10;
Node_16 -> Node_10;
}

