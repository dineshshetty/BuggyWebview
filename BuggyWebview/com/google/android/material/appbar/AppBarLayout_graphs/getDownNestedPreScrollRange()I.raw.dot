digraph "CFG forcom.google.android.material.appbar.AppBarLayout.getDownNestedPreScrollRange()I" {
Node_35 [shape=record,label="{35\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r8 I:com.google.android.material.appbar.AppBarLayout) com.google.android.material.appbar.AppBarLayout.downPreScrollRange int  (LINE:788)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0006 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0005|RETURN\l|0x0005: RETURN  (r0 I:int)  (LINE:790)\l}"];
Node_36 [shape=record,label="{36\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0006|0x0006: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:793)\l0x0007: INVOKE  (r1 I:int) = (r8 I:com.google.android.material.appbar.AppBarLayout) type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.getChildCount():int A[MD:():int (s)] (LINE:794)\l0x000b: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l}"];
Node_41 [shape=record,label="{41\:\ 0x000d|LOOP_START\lLOOP:0: B:41:0x000d\-\>B:62:0x0060\l|0x000d: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:65:0x0063 \l}"];
Node_42 [shape=record,label="{42\:\ 0x000f|0x000f: INVOKE  (r2 I:android.view.View) = (r8 I:com.google.android.material.appbar.AppBarLayout), (r1 I:int A[D('i' int)]) type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:795)\l0x0013: INVOKE  (r3 I:int) = (r2 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)] (LINE:796)\l0x0017: CONST  (r4 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0019|0x0019: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x001c \l}"];
Node_45 [shape=record,label="{45\:\ 0x001c|0x001c: INVOKE  (r3 I:android.view.ViewGroup$LayoutParams) = (r2 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:800)\l0x0020: CHECK_CAST (r3 I:com.google.android.material.appbar.AppBarLayout$LayoutParams) = (com.google.android.material.appbar.AppBarLayout$LayoutParams) (r3 I:??[OBJECT, ARRAY]) \l0x0022: INVOKE  (r4 I:int) = (r2 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:801)\l0x0026: IGET  (r5 I:int) = \l  (r3 I:com.google.android.material.appbar.AppBarLayout$LayoutParams A[D('lp' com.google.android.material.appbar.AppBarLayout$LayoutParams)])\l com.google.android.material.appbar.AppBarLayout.LayoutParams.scrollFlags int  (LINE:802)\l0x0028: ARITH  (r6 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char] A[D('flags' int)]) & (5 ??[int, float, short, byte, char])  (LINE:804)\l0x002a: CONST  (r7 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x002b|0x002b: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x005d \l}"];
Node_47 [shape=record,label="{47\:\ 0x002d|0x002d: IGET  (r6 I:int) = \l  (r3 I:com.google.android.material.appbar.AppBarLayout$LayoutParams A[D('lp' com.google.android.material.appbar.AppBarLayout$LayoutParams)])\l com.google.android.material.appbar.AppBarLayout.LayoutParams.topMargin int  (LINE:806)\l0x002f: IGET  (r7 I:int) = \l  (r3 I:com.google.android.material.appbar.AppBarLayout$LayoutParams A[D('lp' com.google.android.material.appbar.AppBarLayout$LayoutParams)])\l com.google.android.material.appbar.AppBarLayout.LayoutParams.bottomMargin int \l0x0031: ARITH  (r6 I:int) = (r6 I:int) + (r7 I:int) \l0x0032: ARITH  (r7 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char] A[D('flags' int)]) & (8 ??[int, float, short, byte, char])  (LINE:808)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0034|0x0034: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x003c \l}"];
Node_49 [shape=record,label="{49\:\ 0x0036|0x0036: INVOKE  (r7 I:int) = (r2 I:android.view.View A[D('child' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getMinimumHeight(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:810)\l0x003a: ARITH  (r6 I:int) = (r6 I:int A[D('childRange' int)]) + (r7 I:int) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0049|0x0049: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x005b  (LINE:818)\l}"];
Node_55 [shape=record,label="{55\:\ 0x004b|0x004b: INVOKE  (r7 I:boolean) = (r2 I:android.view.View A[D('child' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getFitsSystemWindows(android.view.View):boolean A[MD:(android.view.View):boolean (m)]\l}"];
Node_56 [shape=record,label="{56\:\ 0x004f|0x004f: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x005b \l}"];
Node_57 [shape=record,label="{57\:\ 0x0051|0x0051: INVOKE  (r7 I:int) = (r8 I:com.google.android.material.appbar.AppBarLayout) type: VIRTUAL call: com.google.android.material.appbar.AppBarLayout.getTopInset():int A[MD:():int (m)] (LINE:821)\l0x0055: ARITH  (r7 I:int) = (r4 I:int A[D('childHeight' int)]) \- (r7 I:int) \l0x0057: INVOKE  (r6 I:int A[D('childRange' int)]) = (r6 I:int A[D('childRange' int)]), (r7 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x005b|0x005b: ARITH  (r0 I:int) = (r0 I:int A[D('range' int)]) + (r6 I:int A[D('childRange' int)])  (LINE:823)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0060|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0060|LOOP_END\lLOOP:0: B:41:0x000d\-\>B:62:0x0060\l|0x0060: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (\-1 int)  (LINE:794)\l}"];
Node_50 [shape=record,label="{50\:\ 0x003c|0x003c: ARITH  (r7 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char] A[D('flags' int)]) & (2 ??[int, float, short, byte, char])  (LINE:811)\l}"];
Node_51 [shape=record,label="{51\:\ 0x003e|0x003e: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0048 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0040|0x0040: INVOKE  (r7 I:int) = (r2 I:android.view.View A[D('child' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getMinimumHeight(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:813)\l0x0044: ARITH  (r7 I:int) = (r4 I:int A[D('childHeight' int)]) \- (r7 I:int) \l0x0046: ARITH  (r6 I:int) = (r6 I:int A[D('childRange' int)]) + (r7 I:int) \l}"];
Node_53 [shape=record,label="{53\:\ 0x0048|0x0048: ARITH  (r6 I:int) = (r6 I:int A[D('childRange' int)]) + (r4 I:int A[D('childHeight' int)])  (LINE:816)\l}"];
Node_60 [shape=record,label="{60\:\ 0x005d|0x005d: IF  (r0 I:??[int, byte, short, char] A[D('range' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:69:0x0060 \l}"];
Node_66 [shape=record,label="{66\:\ 0x0063|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x0063|0x0063: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:830)\l0x0064: INVOKE  (r1 I:int) = (r1 I:int), (r0 I:int A[D('range' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0068: IPUT  (r1 I:int), (r8 I:com.google.android.material.appbar.AppBarLayout) com.google.android.material.appbar.AppBarLayout.downPreScrollRange int \l}"];
Node_64 [shape=record,label="{64\:\ 0x006a|RETURN\l|0x006a: RETURN  (r1 I:int) \l}"];
Node_69 [shape=record,label="{69\:\ 0x0060|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x0060|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x0063|SYNTHETIC\l}"];
MethodNode[shape=record,label="{int com.google.android.material.appbar.AppBarLayout.getDownNestedPreScrollRange((r8 'this' I:com.google.android.material.appbar.AppBarLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:62:0x0060 \-\> B:41:0x000d, CROSS_EDGE: B:56:0x004f \-\> B:58:0x005b, CROSS_EDGE: B:54:0x0049 \-\> B:58:0x005b, CROSS_EDGE: B:52:0x0040 \-\> B:54:0x0049, CROSS_EDGE: B:53:0x0048 \-\> B:54:0x0049, CROSS_EDGE: B:60:0x005d \-\> B:62:0x0060, CROSS_EDGE: B:64:0x006a \-\> B:36:?, CROSS_EDGE: B:43:0x0019 \-\> B:62:0x0060, CROSS_EDGE: B:41:0x000d \-\> B:63:0x0063\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0032\-0x005c: r6 'childRange' I\l  0x0013\-0x0060: r2 'child' Landroid\/view\/View;\l  0x0022\-0x0060: r3 'lp' Lcom\/google\/android\/material\/appbar\/AppBarLayout$LayoutParams;\l  0x0026\-0x0060: r4 'childHeight' I\l  0x0028\-0x0060: r5 'flags' I\l  0x000d\-0x0063: r1 'i' I\l  0x0007\-0x006a: r0 'range' I\l}"];
MethodNode -> Node_35;Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_36;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_65;
Node_42 -> Node_43;
Node_43 -> Node_45;
Node_43 -> Node_67[style=dashed];
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_60;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_58;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_58;
Node_58 -> Node_68;
Node_68 -> Node_62;
Node_62 -> Node_41;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_60 -> Node_66[style=dashed];
Node_60 -> Node_69;
Node_66 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_36;
Node_69 -> Node_62;
Node_67 -> Node_62;
Node_65 -> Node_63;
}

