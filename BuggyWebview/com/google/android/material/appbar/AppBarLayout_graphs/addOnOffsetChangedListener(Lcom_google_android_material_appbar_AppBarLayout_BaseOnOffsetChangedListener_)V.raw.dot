digraph "CFG forcom.google.android.material.appbar.AppBarLayout.addOnOffsetChangedListener(Lcom\/google\/android\/material\/appbar\/AppBarLayout$BaseOnOffsetChangedListener;)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IGET  (r0 I:java.util.List\<com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener\>) = (r1 I:com.google.android.material.appbar.AppBarLayout) com.google.android.material.appbar.AppBarLayout.listeners java.util.List  (LINE:364)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000b \l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:365)\l0x0006: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0009: IPUT  \l  (r0 I:java.util.List\<com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener\>)\l  (r1 I:com.google.android.material.appbar.AppBarLayout)\l com.google.android.material.appbar.AppBarLayout.listeners java.util.List \l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('listener' com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:?  (LINE:367)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|0x000d: IGET  (r0 I:java.util.List\<com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener\>) = (r1 I:com.google.android.material.appbar.AppBarLayout) com.google.android.material.appbar.AppBarLayout.listeners java.util.List \l0x000f: INVOKE  (r0 I:boolean) = \l  (r0 I:java.util.List)\l  (r2 I:java.lang.Object A[D('listener' com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)])\l type: INTERFACE call: java.util.List.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:? \l}"];
Node_20 [shape=record,label="{20\:\ 0x0015|0x0015: IGET  (r0 I:java.util.List\<com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener\>) = (r1 I:com.google.android.material.appbar.AppBarLayout) com.google.android.material.appbar.AppBarLayout.listeners java.util.List  (LINE:368)\l0x0017: INVOKE  \l  (r0 I:java.util.List)\l  (r2 I:java.lang.Object A[D('listener' com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)])\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001a|RETURN\lORIG_RETURN\l|0x001a: RETURN    (LINE:370)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x001a: RETURN   A[SYNTHETIC] (LINE:370)\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|0x001a: RETURN   A[SYNTHETIC] (LINE:370)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.appbar.AppBarLayout.addOnOffsetChangedListener((r1 'this' I:com.google.android.material.appbar.AppBarLayout A[IMMUTABLE_TYPE, THIS]), (r2 I:com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener A[D('listener' com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0013 \-\> B:21:0x001a, CROSS_EDGE: B:17:0x000b \-\> B:21:0x001a, CROSS_EDGE: B:15:0x0002 \-\> B:17:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001a: r2 'listener' Lcom\/google\/android\/material\/appbar\/AppBarLayout$BaseOnOffsetChangedListener;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_23 -> Node_13;
Node_22 -> Node_13;
}

