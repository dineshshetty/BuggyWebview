digraph "CFG forcom.google.android.material.color.DynamicColors.isDynamicColorAvailable()Z" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:360)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (31 ??[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0005|0x0005: IF  (r0 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:23:0x0008 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:boolean)  (LINE:361)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0008|0x0008: INVOKE  (r0 I:boolean) =  type: STATIC call: androidx.core.os.BuildCompat.isAtLeastT():boolean A[MD:():boolean (m)] (LINE:363)\l0x000c: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0010 \l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|RETURN\l|0x000f: RETURN  (r2 I:boolean)  (LINE:364)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0010|0x0010: SGET  (r0 I:java.util.Map\<java.lang.String, com.google.android.material.color.DynamicColors$DeviceSupportCondition\>) =  com.google.android.material.color.DynamicColors.DYNAMIC_COLOR_SUPPORTED_MANUFACTURERS java.util.Map  (LINE:366)\l0x0012: SGET  (r3 I:java.lang.String) =  android.os.Build.MANUFACTURER java.lang.String \l0x0014: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String) type: VIRTUAL call: java.lang.String.toLowerCase():java.lang.String A[MD:():java.lang.String (c)] (LINE:367)\l0x0018: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r3 I:java.lang.Object) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x001c: CHECK_CAST (r0 I:com.google.android.material.color.DynamicColors$DeviceSupportCondition) = (com.google.android.material.color.DynamicColors$DeviceSupportCondition) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|0x001e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('deviceSupportCondition' com.google.android.material.color.DynamicColors$DeviceSupportCondition)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x002f  (LINE:368)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0020|0x0020: SGET  (r3 I:java.util.Map\<java.lang.String, com.google.android.material.color.DynamicColors$DeviceSupportCondition\>) =  com.google.android.material.color.DynamicColors.DYNAMIC_COLOR_SUPPORTED_BRANDS java.util.Map  (LINE:369)\l0x0022: SGET  (r4 I:java.lang.String) =  android.os.Build.BRAND java.lang.String \l0x0024: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String) type: VIRTUAL call: java.lang.String.toLowerCase():java.lang.String A[MD:():java.lang.String (c)]\l0x0028: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.Map), (r4 I:java.lang.Object) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x002c: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('deviceSupportCondition' com.google.android.material.color.DynamicColors$DeviceSupportCondition)]) = (r3 I:??[OBJECT, ARRAY]) \l0x002d: CHECK_CAST (r0 I:com.google.android.material.color.DynamicColors$DeviceSupportCondition) = (com.google.android.material.color.DynamicColors$DeviceSupportCondition) (r0 I:??[OBJECT, ARRAY] A[D('deviceSupportCondition' com.google.android.material.color.DynamicColors$DeviceSupportCondition)]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x002f|0x002f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('deviceSupportCondition' com.google.android.material.color.DynamicColors$DeviceSupportCondition)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:?  (LINE:371)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0031|0x0031: INVOKE  (r3 I:boolean) = \l  (r0 I:com.google.android.material.color.DynamicColors$DeviceSupportCondition A[D('deviceSupportCondition' com.google.android.material.color.DynamicColors$DeviceSupportCondition)])\l type: INTERFACE call: com.google.android.material.color.DynamicColors.DeviceSupportCondition.isSupported():boolean A[MD:():boolean (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0035|0x0035: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:? \l}"];
Node_32 [shape=record,label="{32\:\ 0x0037|RETURN\lORIG_RETURN\l|0x0037: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0038: RETURN  (r1 I:boolean) \l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0038: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|0x0038: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public static boolean com.google.android.material.color.DynamicColors.isDynamicColorAvailable()  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x000f \-\> B:19:?, CROSS_EDGE: B:33:0x0038 \-\> B:19:?, CROSS_EDGE: B:31:0x0035 \-\> B:33:0x0038, CROSS_EDGE: B:29:0x002f \-\> B:33:0x0038, CROSS_EDGE: B:27:0x001e \-\> B:29:0x002f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x0038: r0 'deviceSupportCondition' Lcom\/google\/android\/material\/color\/DynamicColors$DeviceSupportCondition;\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_19;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_19;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_34;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_19;
Node_35 -> Node_19;
Node_34 -> Node_19;
}

