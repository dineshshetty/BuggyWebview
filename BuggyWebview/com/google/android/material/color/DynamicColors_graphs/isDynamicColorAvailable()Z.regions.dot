digraph "CFG forcom.google.android.material.color.DynamicColors.isDynamicColorAvailable()Z" {
subgraph cluster_Region_1255489125 {
label = "R(1:(2:(1:3)|(1:(2:(1:7)|(3:8|(1:10)|11)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1106073706 {
label = "R(2:(1:3)|(1:(2:(1:7)|(3:8|(1:10)|11))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1886588701 {
label = "IF [B:21:0x0005] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0005|if (android.os.Build.VERSION.SDK_INT \< 31) goto L3\l}"];
subgraph cluster_Region_851878383 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0007|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1359185860 {
label = "R(1:(2:(1:7)|(3:8|(1:10)|11)))";
node [shape=record,color=blue];
subgraph cluster_Region_2055646086 {
label = "R(2:(1:7)|(3:8|(1:10)|11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_317020204 {
label = "IF [B:24:0x000d] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x000d|if (androidx.core.p003os.BuildCompat.isAtLeastT() == true) goto L7\l}"];
subgraph cluster_Region_363551302 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x000f|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_157228809 {
label = "R(3:8|(1:10)|11)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0010|com.google.android.material.color.DynamicColors$DeviceSupportCondition com.google.android.material.color.DynamicColors.DeviceSupportCondition r0 = com.google.android.material.color.DynamicColors.DYNAMIC_COLOR_SUPPORTED_MANUFACTURERS.get(android.os.Build.MANUFACTURER.toLowerCase())\l}"];
subgraph cluster_IfRegion_1079671580 {
label = "IF [B:27:0x001e] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x001e|if (r0 == null) goto L10\l}"];
subgraph cluster_Region_1022555888 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0020|com.google.android.material.color.DynamicColors$DeviceSupportCondition r0 = com.google.android.material.color.DynamicColors.DYNAMIC_COLOR_SUPPORTED_BRANDS.get(android.os.Build.BRAND.toLowerCase())\l}"];
}
}
Node_29 [shape=record,label="{29\:\ 0x002f|RETURN\lPHI: r0 \l  PHI: (r0v5 'deviceSupportCondition' com.google.android.material.color.DynamicColors$DeviceSupportCondition) = (r0v4 'deviceSupportCondition' com.google.android.material.color.DynamicColors$DeviceSupportCondition), (r0v7 'deviceSupportCondition' com.google.android.material.color.DynamicColors$DeviceSupportCondition) binds: [B:27:0x001e, B:28:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|return r0 != null && r0.isSupported()\l}"];
}
}
}
}
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0000}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0008}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0031}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0035|REMOVE\lADDED_TO_REGION\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0037|ORIG_RETURN\l}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public static boolean com.google.android.material.color.DynamicColors.isDynamicColorAvailable()  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x000f \-\> B:19:?, CROSS_EDGE: B:33:0x0038 \-\> B:19:?, CROSS_EDGE: B:31:0x0035 \-\> B:33:0x0038, CROSS_EDGE: B:29:0x002f \-\> B:33:0x0038, CROSS_EDGE: B:27:0x001e \-\> B:29:0x002f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_19;
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_19;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_34;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_23 -> Node_24;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_35;
Node_32 -> Node_19;
Node_35 -> Node_19;
Node_34 -> Node_19;
}

