digraph "CFG forcom.google.android.material.color.DynamicColors.DynamicColorsActivityLifecycleCallbacks.onActivityPreCreated(Landroid\/app\/Activity;Landroid\/os\/Bundle;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.color.DynamicColorsOptions) = (r1 I:com.google.android.material.color.DynamicColors$DynamicColorsActivityLifecycleCallbacks) com.google.android.material.color.DynamicColors.DynamicColorsActivityLifecycleCallbacks.dynamicColorsOptions com.google.android.material.color.DynamicColorsOptions  (LINE:410)\l0x0002: INVOKE  \l  (r2 I:android.app.Activity A[D('activity' android.app.Activity)])\l  (r0 I:com.google.android.material.color.DynamicColorsOptions)\l type: STATIC call: com.google.android.material.color.DynamicColors.applyToActivityIfAvailable(android.app.Activity, com.google.android.material.color.DynamicColorsOptions):void A[MD:(android.app.Activity, com.google.android.material.color.DynamicColorsOptions):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0005|RETURN\l|0x0005: RETURN    (LINE:411)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.color.DynamicColors.DynamicColorsActivityLifecycleCallbacks.onActivityPreCreated((r1 'this' I:com.google.android.material.color.DynamicColors$DynamicColorsActivityLifecycleCallbacks A[IMMUTABLE_TYPE, THIS]), (r2 I:android.app.Activity A[D('activity' android.app.Activity), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.os.Bundle A[D('savedInstanceState' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0005: r2 'activity' Landroid\/app\/Activity;\l  \-1 \-0x0005: r3 'savedInstanceState' Landroid\/os\/Bundle;\lMETHOD_OVERRIDE: [ClspMth\{android.app.Application.ActivityLifecycleCallbacks.onActivityPreCreated(android.app.Activity, android.os.Bundle):void\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

