digraph "CFG forcom.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.writeTo(Ljava\/io\/ByteArrayOutputStream;)V" {
Node_35 [shape=record,label="{35\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.color.ColorResourcesTableCreator$ResChunkHeader) = (r4 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.header com.google.android.material.color.ColorResourcesTableCreator$ResChunkHeader  (LINE:266)\l0x0002: INVOKE  \l  (r0 I:com.google.android.material.color.ColorResourcesTableCreator$ResChunkHeader)\l  (r5 I:java.io.ByteArrayOutputStream A[D('outputStream' java.io.ByteArrayOutputStream)])\l type: VIRTUAL call: com.google.android.material.color.ColorResourcesTableCreator.ResChunkHeader.writeTo(java.io.ByteArrayOutputStream):void A[MD:(java.io.ByteArrayOutputStream):void throws java.io.IOException (m)]\l0x0005: IGET  (r0 I:int) = (r4 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.stringCount int  (LINE:267)\l0x0007: INVOKE  (r0 I:byte[]) = (r0 I:int) type: STATIC call: com.google.android.material.color.ColorResourcesTableCreator.access$500(int):byte[] A[MD:(int):byte[] (m)]\l0x000b: INVOKE  (r5 I:java.io.ByteArrayOutputStream A[D('outputStream' java.io.ByteArrayOutputStream)]), (r0 I:byte[]) type: VIRTUAL call: java.io.ByteArrayOutputStream.write(byte[]):void A[MD:(byte[]):void throws java.io.IOException (c)]\l0x000e: IGET  (r0 I:int) = (r4 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.styledSpanCount int  (LINE:268)\l0x0010: INVOKE  (r0 I:byte[]) = (r0 I:int) type: STATIC call: com.google.android.material.color.ColorResourcesTableCreator.access$500(int):byte[] A[MD:(int):byte[] (m)]\l0x0014: INVOKE  (r5 I:java.io.ByteArrayOutputStream A[D('outputStream' java.io.ByteArrayOutputStream)]), (r0 I:byte[]) type: VIRTUAL call: java.io.ByteArrayOutputStream.write(byte[]):void A[MD:(byte[]):void throws java.io.IOException (c)]\l0x0017: IGET  (r0 I:boolean) = (r4 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.utf8Encode boolean  (LINE:269)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0019|0x0019: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x001e \l}"];
Node_39 [shape=record,label="{39\:\ 0x001b|0x001b: CONST  (r0 I:??[int, float, short, byte, char]) = (256(0x100, float:3.59E\-43) ??[int, float, short, byte, char]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x001f|0x001f: INVOKE  (r0 I:byte[]) = (r0 I:int) type: STATIC call: com.google.android.material.color.ColorResourcesTableCreator.access$500(int):byte[] A[MD:(int):byte[] (m)]\l0x0023: INVOKE  (r5 I:java.io.ByteArrayOutputStream A[D('outputStream' java.io.ByteArrayOutputStream)]), (r0 I:byte[]) type: VIRTUAL call: java.io.ByteArrayOutputStream.write(byte[]):void A[MD:(byte[]):void throws java.io.IOException (c)]\l0x0026: IGET  (r0 I:int) = (r4 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.stringsStart int  (LINE:270)\l0x0028: INVOKE  (r0 I:byte[]) = (r0 I:int) type: STATIC call: com.google.android.material.color.ColorResourcesTableCreator.access$500(int):byte[] A[MD:(int):byte[] (m)]\l0x002c: INVOKE  (r5 I:java.io.ByteArrayOutputStream A[D('outputStream' java.io.ByteArrayOutputStream)]), (r0 I:byte[]) type: VIRTUAL call: java.io.ByteArrayOutputStream.write(byte[]):void A[MD:(byte[]):void throws java.io.IOException (c)]\l0x002f: IGET  (r0 I:int) = (r4 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.styledSpansStart int  (LINE:271)\l0x0031: INVOKE  (r0 I:byte[]) = (r0 I:int) type: STATIC call: com.google.android.material.color.ColorResourcesTableCreator.access$500(int):byte[] A[MD:(int):byte[] (m)]\l0x0035: INVOKE  (r5 I:java.io.ByteArrayOutputStream A[D('outputStream' java.io.ByteArrayOutputStream)]), (r0 I:byte[]) type: VIRTUAL call: java.io.ByteArrayOutputStream.write(byte[]):void A[MD:(byte[]):void throws java.io.IOException (c)]\l0x0038: IGET  (r0 I:java.util.List\<java.lang.Integer\>) = (r4 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.stringIndex java.util.List  (LINE:272)\l0x003a: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x003e|LOOP_START\lLOOP:0: B:42:0x003e\-\>B:44:0x0044\l|0x003e: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0042|0x0042: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x0056 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0044|LOOP_END\lLOOP:0: B:42:0x003e\-\>B:44:0x0044\l|0x0044: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0048: CHECK_CAST (r1 I:java.lang.Integer) = (java.lang.Integer) (r1 I:??[OBJECT, ARRAY]) \l0x004a: INVOKE  (r2 I:int) = (r1 I:java.lang.Integer A[D('index' java.lang.Integer)]) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)] (LINE:273)\l0x004e: INVOKE  (r2 I:byte[]) = (r2 I:int) type: STATIC call: com.google.android.material.color.ColorResourcesTableCreator.access$500(int):byte[] A[MD:(int):byte[] (m)]\l0x0052: INVOKE  (r5 I:java.io.ByteArrayOutputStream A[D('outputStream' java.io.ByteArrayOutputStream)]), (r2 I:byte[]) type: VIRTUAL call: java.io.ByteArrayOutputStream.write(byte[]):void A[MD:(byte[]):void throws java.io.IOException (c)]\l}"];
Node_65 [shape=record,label="{65\:\ 0x0056|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0056|0x0056: IGET  (r0 I:java.util.List\<java.lang.Integer\>) = (r4 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.styledSpanIndex java.util.List  (LINE:275)\l0x0058: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x005c|LOOP_START\lLOOP:1: B:46:0x005c\-\>B:48:0x0062\l|0x005c: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0060|0x0060: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x0074 \l}"];
Node_48 [shape=record,label="{48\:\ 0x0062|LOOP_END\lLOOP:1: B:46:0x005c\-\>B:48:0x0062\l|0x0062: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0066: CHECK_CAST (r1 I:java.lang.Integer) = (java.lang.Integer) (r1 I:??[OBJECT, ARRAY]) \l0x0068: INVOKE  (r2 I:int) = (r1 I:java.lang.Integer A[D('index' java.lang.Integer)]) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)] (LINE:276)\l0x006c: INVOKE  (r2 I:byte[]) = (r2 I:int) type: STATIC call: com.google.android.material.color.ColorResourcesTableCreator.access$500(int):byte[] A[MD:(int):byte[] (m)]\l0x0070: INVOKE  (r5 I:java.io.ByteArrayOutputStream A[D('outputStream' java.io.ByteArrayOutputStream)]), (r2 I:byte[]) type: VIRTUAL call: java.io.ByteArrayOutputStream.write(byte[]):void A[MD:(byte[]):void throws java.io.IOException (c)]\l}"];
Node_66 [shape=record,label="{66\:\ 0x0074|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0074|0x0074: IGET  (r0 I:java.util.List\<byte[]\>) = (r4 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.strings java.util.List  (LINE:278)\l0x0076: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_50 [shape=record,label="{50\:\ 0x007a|LOOP_START\lLOOP:2: B:50:0x007a\-\>B:52:0x0080\l|0x007a: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x007e|0x007e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x008a \l}"];
Node_52 [shape=record,label="{52\:\ 0x0080|LOOP_END\lLOOP:2: B:50:0x007a\-\>B:52:0x0080\l|0x0080: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0084: CHECK_CAST (r1 I:byte[]) = (byte[]) (r1 I:??[OBJECT, ARRAY]) \l0x0086: INVOKE  \l  (r5 I:java.io.ByteArrayOutputStream A[D('outputStream' java.io.ByteArrayOutputStream)])\l  (r1 I:byte[] A[D('string' byte[])])\l type: VIRTUAL call: java.io.ByteArrayOutputStream.write(byte[]):void A[MD:(byte[]):void throws java.io.IOException (c)] (LINE:279)\l}"];
Node_67 [shape=record,label="{67\:\ 0x008a|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x008a|0x008a: IGET  (r0 I:int) = (r4 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.stringsPaddingSize int  (LINE:281)\l}"];
Node_54 [shape=record,label="{54\:\ 0x008c|0x008c: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:56:0x0093 \l}"];
Node_55 [shape=record,label="{55\:\ 0x008e|0x008e: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[]  (LINE:282)\l0x0090: INVOKE  (r5 I:java.io.ByteArrayOutputStream A[D('outputStream' java.io.ByteArrayOutputStream)]), (r0 I:byte[]) type: VIRTUAL call: java.io.ByteArrayOutputStream.write(byte[]):void A[MD:(byte[]):void throws java.io.IOException (c)]\l}"];
Node_56 [shape=record,label="{56\:\ 0x0093|0x0093: IGET  (r0 I:java.util.List\<java.util.List\<com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan\>\>) = (r4 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.styledSpans java.util.List  (LINE:284)\l0x0095: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0099|LOOP_START\lLOOP:3: B:57:0x0099\-\>B:63:0x00b9\l|0x0099: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x009d|0x009d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x00c2 \l}"];
Node_59 [shape=record,label="{59\:\ 0x009f|0x009f: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x00a3: CHECK_CAST (r1 I:java.util.List) = (java.util.List) (r1 I:??[OBJECT, ARRAY]) \l0x00a5: INVOKE  (r2 I:java.util.Iterator) = \l  (r1 I:java.util.List A[D('styledSpanList' java.util.List\<com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan\>)])\l type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:285)\l}"];
Node_60 [shape=record,label="{60\:\ 0x00a9|LOOP_START\lLOOP:4: B:60:0x00a9\-\>B:62:0x00af\l|0x00a9: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_61 [shape=record,label="{61\:\ 0x00ad|0x00ad: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x00b9 \l}"];
Node_62 [shape=record,label="{62\:\ 0x00af|LOOP_END\lLOOP:4: B:60:0x00a9\-\>B:62:0x00af\l|0x00af: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x00b3: CHECK_CAST (r3 I:com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan) = (com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan) (r3 I:??[OBJECT, ARRAY]) \l0x00b5: INVOKE  \l  (r3 I:com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan A[D('styledSpan' com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan)])\l  (r5 I:java.io.ByteArrayOutputStream A[D('outputStream' java.io.ByteArrayOutputStream)])\l type: VIRTUAL call: com.google.android.material.color.ColorResourcesTableCreator.StringStyledSpan.writeTo(java.io.ByteArrayOutputStream):void A[MD:(java.io.ByteArrayOutputStream):void throws java.io.IOException (m)] (LINE:286)\l}"];
Node_69 [shape=record,label="{69\:\ 0x00b9|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x00b9|LOOP_END\lLOOP:3: B:57:0x0099\-\>B:63:0x00b9\l|0x00b9: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:288)\l0x00ba: INVOKE  (r2 I:byte[]) = (r2 I:int) type: STATIC call: com.google.android.material.color.ColorResourcesTableCreator.access$500(int):byte[] A[MD:(int):byte[] (m)]\l0x00be: INVOKE  (r5 I:java.io.ByteArrayOutputStream A[D('outputStream' java.io.ByteArrayOutputStream)]), (r2 I:byte[]) type: VIRTUAL call: java.io.ByteArrayOutputStream.write(byte[]):void A[MD:(byte[]):void throws java.io.IOException (c)]\l}"];
Node_68 [shape=record,label="{68\:\ 0x00c2|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x00c2|RETURN\l|0x00c2: RETURN    (LINE:290)\l}"];
Node_36 [shape=record,label="{36\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x001e|0x001e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{void com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.writeTo((r4 'this' I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk A[IMMUTABLE_TYPE, THIS]), (r5 I:java.io.ByteArrayOutputStream A[D('outputStream' java.io.ByteArrayOutputStream), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:44:0x0044 \-\> B:42:0x003e, BACK_EDGE: B:48:0x0062 \-\> B:46:0x005c, BACK_EDGE: B:52:0x0080 \-\> B:50:0x007a, BACK_EDGE: B:62:0x00af \-\> B:60:0x00a9, BACK_EDGE: B:63:0x00b9 \-\> B:57:0x0099, CROSS_EDGE: B:54:0x008c \-\> B:56:0x0093, CROSS_EDGE: B:40:0x001e \-\> B:41:0x001f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x004a\-0x0055: r1 'index' Ljava\/lang\/Integer;\l  0x0068\-0x0073: r1 'index' Ljava\/lang\/Integer;\l  0x0086\-0x0089: r1 'string' [B\l  0x00b5\-0x00b8: r3 'styledSpan' Lcom\/google\/android\/material\/color\/ColorResourcesTableCreator$StringStyledSpan;\l  0x00a5\-0x00c1: r1 'styledSpanList' Ljava\/util\/List;, signature: Ljava\/util\/List\<Lcom\/google\/android\/material\/color\/ColorResourcesTableCreator$StringStyledSpan;\>;\l  \-1 \-0x00c2: r5 'outputStream' Ljava\/io\/ByteArrayOutputStream;\lEXCEPTIONS:[Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_35;Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_65;
Node_44 -> Node_42;
Node_65 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_66;
Node_48 -> Node_46;
Node_66 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_67;
Node_52 -> Node_50;
Node_67 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_68;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_69;
Node_62 -> Node_60;
Node_69 -> Node_63;
Node_63 -> Node_57;
Node_68 -> Node_64;
Node_64 -> Node_36;
Node_40 -> Node_41;
}

