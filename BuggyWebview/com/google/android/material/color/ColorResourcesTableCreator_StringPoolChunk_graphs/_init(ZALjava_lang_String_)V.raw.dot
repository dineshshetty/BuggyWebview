digraph "CFG forcom.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.\<init\>(Z[Ljava\/lang\/String;)V" {
Node_35 [shape=record,label="{35\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0000|0x0000: INVOKE  (r10 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:219)\l0x0003: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:206)\l0x0005: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0008: IPUT  \l  (r0 I:java.util.List\<java.lang.Integer\>)\l  (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk)\l com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.stringIndex java.util.List \l0x000a: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:207)\l0x000c: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x000f: IPUT  \l  (r0 I:java.util.List\<java.lang.Integer\>)\l  (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk)\l com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.styledSpanIndex java.util.List \l0x0011: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:208)\l0x0013: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0016: IPUT  (r0 I:java.util.List\<byte[]\>), (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.strings java.util.List \l0x0018: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:209)\l0x001a: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x001d: IPUT  \l  (r0 I:java.util.List\<java.util.List\<com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan\>\>)\l  (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk)\l com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.styledSpans java.util.List \l0x001f: IPUT  \l  (r11 I:boolean A[D('utf8' boolean)])\l  (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk)\l com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.utf8Encode boolean  (LINE:220)\l0x0021: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:221)\l0x0022: ARRAY_LENGTH  (r1 I:int) = (r12 I:??[] A[D('rawStrings' java.lang.String[])])  (LINE:222)\l0x0023: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0024: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0025|LOOP_START\lLOOP:0: B:38:0x0025\-\>B:39:0x0027\l|0x0025: IF  (r3 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:67:0x0051 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0027|LOOP_END\lLOOP:0: B:38:0x0025\-\>B:39:0x0027\l|0x0027: AGET  (r4 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY][] A[D('rawStrings' java.lang.String[])]), (r3 I:??[int, short, byte, char]) \l0x0029: INVOKE  (r5 I:android.util.Pair) = \l  (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk)\l  (r4 I:java.lang.String A[D('string' java.lang.String)])\l type: DIRECT call: com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.processString(java.lang.String):android.util.Pair A[MD:(java.lang.String):android.util.Pair\<byte[], java.util.List\<com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan\>\> (m)] (LINE:223)\l0x002d: IGET  (r6 I:java.util.List\<java.lang.Integer\>) = (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.stringIndex java.util.List  (LINE:224)\l0x002f: INVOKE  (r7 I:java.lang.Integer) = (r0 I:int A[D('stringOffset' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0033: INVOKE  (r6 I:java.util.List), (r7 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0036: IGET  (r6 I:java.lang.Object) = \l  (r5 I:android.util.Pair A[D('processedString' android.util.Pair\<byte[], java.util.List\<com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan\>\>)])\l android.util.Pair.first java.lang.Object  (LINE:225)\l0x0038: CHECK_CAST (r6 I:byte[]) = (byte[]) (r6 I:??[OBJECT, ARRAY]) \l0x003a: ARRAY_LENGTH  (r6 I:int) = (r6 I:??[]) \l0x003b: ARITH  (r0 I:int) = (r0 I:int A[D('stringOffset' int)]) + (r6 I:int) \l0x003c: IGET  (r6 I:java.util.List\<byte[]\>) = (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.strings java.util.List  (LINE:226)\l0x003e: IGET  (r7 I:java.lang.Object) = \l  (r5 I:android.util.Pair A[D('processedString' android.util.Pair\<byte[], java.util.List\<com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan\>\>)])\l android.util.Pair.first java.lang.Object \l0x0040: CHECK_CAST (r7 I:byte[]) = (byte[]) (r7 I:??[OBJECT, ARRAY]) \l0x0042: INVOKE  (r6 I:java.util.List), (r7 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0045: IGET  (r6 I:java.util.List\<java.util.List\<com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan\>\>) = (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.styledSpans java.util.List  (LINE:227)\l0x0047: IGET  (r7 I:java.lang.Object) = \l  (r5 I:android.util.Pair A[D('processedString' android.util.Pair\<byte[], java.util.List\<com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan\>\>)])\l android.util.Pair.second java.lang.Object \l0x0049: CHECK_CAST (r7 I:java.util.List) = (java.util.List) (r7 I:??[OBJECT, ARRAY]) \l0x004b: INVOKE  (r6 I:java.util.List), (r7 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x004e: ARITH  (r3 I:int) = (r3 I:int) + (1 int)  (LINE:222)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0051|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0051|0x0051: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:229)\l0x0052: IGET  (r3 I:java.util.List\<java.util.List\<com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan\>\>) = (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.styledSpans java.util.List  (LINE:230)\l0x0054: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.List) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0058|LOOP_START\lLOOP:1: B:41:0x0058\-\>B:47:0x008d\l|0x0058: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x005c|0x005c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x00a0 \l}"];
Node_43 [shape=record,label="{43\:\ 0x005e|0x005e: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0062: CHECK_CAST (r4 I:java.util.List) = (java.util.List) (r4 I:??[OBJECT, ARRAY]) \l0x0064: INVOKE  (r5 I:java.util.Iterator) = \l  (r4 I:java.util.List A[D('styledSpanList' java.util.List\<com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan\>)])\l type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:231)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0068|LOOP_START\lLOOP:2: B:44:0x0068\-\>B:46:0x006e\l|0x0068: INVOKE  (r6 I:boolean) = (r5 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x006c|0x006c: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x008d \l}"];
Node_46 [shape=record,label="{46\:\ 0x006e|LOOP_END\lLOOP:2: B:44:0x0068\-\>B:46:0x006e\l|0x006e: INVOKE  (r6 I:java.lang.Object) = (r5 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0072: CHECK_CAST (r6 I:com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan) = (com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan) (r6 I:??[OBJECT, ARRAY]) \l0x0074: IGET  (r7 I:java.util.List\<java.lang.Integer\>) = (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.stringIndex java.util.List  (LINE:232)\l0x0076: INVOKE  (r8 I:java.lang.Integer) = (r0 I:int A[D('stringOffset' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x007a: INVOKE  (r7 I:java.util.List), (r8 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x007d: INVOKE  (r7 I:byte[]) = \l  (r6 I:com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan A[D('styledSpan' com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan)])\l type: STATIC call: com.google.android.material.color.ColorResourcesTableCreator.StringStyledSpan.access$700(com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan):byte[] A[MD:(com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan):byte[] (m)] (LINE:233)\l0x0081: ARRAY_LENGTH  (r7 I:int) = (r7 I:??[]) \l0x0082: ARITH  (r0 I:int) = (r0 I:int A[D('stringOffset' int)]) + (r7 I:int) \l0x0083: IGET  (r7 I:java.util.List\<byte[]\>) = (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.strings java.util.List  (LINE:234)\l0x0085: INVOKE  (r8 I:byte[]) = \l  (r6 I:com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan A[D('styledSpan' com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan)])\l type: STATIC call: com.google.android.material.color.ColorResourcesTableCreator.StringStyledSpan.access$700(com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan):byte[] A[MD:(com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan):byte[] (m)]\l0x0089: INVOKE  (r7 I:java.util.List), (r8 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_69 [shape=record,label="{69\:\ 0x008d|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x008d|LOOP_END\lLOOP:1: B:41:0x0058\-\>B:47:0x008d\l|0x008d: IGET  (r5 I:java.util.List\<java.lang.Integer\>) = (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.styledSpanIndex java.util.List  (LINE:236)\l0x008f: INVOKE  (r6 I:java.lang.Integer) = (r1 I:int A[D('styledSpanOffset' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0093: INVOKE  (r5 I:java.util.List), (r6 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0096: INVOKE  (r5 I:int) = \l  (r4 I:java.util.List A[D('styledSpanList' java.util.List\<com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan\>)])\l type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:238)\l0x009a: ARITH  (r5 I:int) = (r5 I:int) * (12 int) \l0x009c: ARITH  (r5 I:int) = (r5 I:int) + (4 int) \l0x009e: ARITH  (r1 I:int) = (r1 I:int A[D('styledSpanOffset' int)]) + (r5 I:int) \l}"];
Node_68 [shape=record,label="{68\:\ 0x00a0|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x00a0|0x00a0: ARITH  (r3 I:int) = (r0 I:int A[D('stringOffset' int)]) % (4 int)  (LINE:242)\l}"];
Node_49 [shape=record,label="{49\:\ 0x00a2|0x00a2: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('stringOffsetResidue' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x00a6  (LINE:243)\l}"];
Node_50 [shape=record,label="{50\:\ 0x00a4|0x00a4: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x00a8|0x00a8: IPUT  (r4 I:int), (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.stringsPaddingSize int \l0x00aa: IGET  (r5 I:java.util.List\<byte[]\>) = (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.strings java.util.List  (LINE:244)\l0x00ac: INVOKE  (r5 I:int) = (r5 I:java.util.List) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l0x00b0: IPUT  (r5 I:int), (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.stringCount int \l0x00b2: IGET  (r6 I:java.util.List\<byte[]\>) = (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.strings java.util.List  (LINE:245)\l0x00b4: INVOKE  (r6 I:int) = (r6 I:java.util.List) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l0x00b8: ARRAY_LENGTH  (r7 I:int) = (r12 I:??[] A[D('rawStrings' java.lang.String[])]) \l0x00b9: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x00ba: IPUT  (r6 I:int), (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.styledSpanCount int \l0x00bc: IGET  (r6 I:java.util.List\<byte[]\>) = (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.strings java.util.List  (LINE:247)\l0x00be: INVOKE  (r6 I:int) = (r6 I:java.util.List) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l0x00c2: ARRAY_LENGTH  (r7 I:int) = (r12 I:??[] A[D('rawStrings' java.lang.String[])]) \l0x00c3: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x00c4: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x00c5|0x00c5: IF  (r6 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:55:0x00c9 \l}"];
Node_54 [shape=record,label="{54\:\ 0x00c7|0x00c7: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x00ca|0x00ca: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasStyledSpans' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x00d6  (LINE:248)\l}"];
Node_57 [shape=record,label="{57\:\ 0x00cc|0x00cc: IGET  (r8 I:java.util.List\<java.lang.Integer\>) = (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.styledSpanIndex java.util.List  (LINE:250)\l0x00ce: INVOKE  (r8 I:java.util.List) type: INTERFACE call: java.util.List.clear():void A[MD:():void (c)]\l0x00d1: IGET  (r8 I:java.util.List\<java.util.List\<com.google.android.material.color.ColorResourcesTableCreator$StringStyledSpan\>\>) = (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.styledSpans java.util.List  (LINE:251)\l0x00d3: INVOKE  (r8 I:java.util.List) type: INTERFACE call: java.util.List.clear():void A[MD:():void (c)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x00d6|0x00d6: ARITH  (r5 I:int) = (r5 I:int) * (4 int)  (LINE:255)\l0x00d8: CONST  (r8 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l0x00da: ARITH  (r5 I:int) = (r5 I:int) + (r8 I:int) \l0x00db: IGET  (r9 I:java.util.List\<java.lang.Integer\>) = (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.styledSpanIndex java.util.List \l0x00dd: INVOKE  (r9 I:int) = (r9 I:java.util.List) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:258)\l0x00e1: ARITH  (r9 I:int) = (r9 I:int) * (4 int) \l0x00e3: ARITH  (r5 I:int) = (r5 I:int) + (r9 I:int) \l0x00e4: IPUT  (r5 I:int), (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.stringsStart int \l0x00e6: ARITH  (r4 I:int) = (r4 I:int) + (r0 I:int A[D('stringOffset' int)])  (LINE:259)\l}"];
Node_59 [shape=record,label="{59\:\ 0x00e7|0x00e7: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasStyledSpans' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x00ec  (LINE:260)\l}"];
Node_60 [shape=record,label="{60\:\ 0x00e9|0x00e9: ARITH  (r9 I:int) = (r5 I:int) + (r4 I:int A[D('stringsSize' int)]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x00ed|0x00ed: IPUT  (r9 I:int), (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.styledSpansStart int \l0x00ef: ARITH  (r5 I:int) = (r5 I:int) + (r4 I:int A[D('stringsSize' int)])  (LINE:261)\l}"];
Node_63 [shape=record,label="{63\:\ 0x00f0|0x00f0: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasStyledSpans' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x00f3 \l}"];
Node_64 [shape=record,label="{64\:\ 0x00f2|0x00f2: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('styledSpanOffset' int)]) \l}"];
Node_65 [shape=record,label="{65\:\ 0x00f3|0x00f3: ARITH  (r5 I:int) = (r5 I:int) + (r2 I:int) \l0x00f4: IPUT  (r5 I:int), (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk) com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.chunkSize int \l0x00f6: NEW_INSTANCE  (r2 I:com.google.android.material.color.ColorResourcesTableCreator$ResChunkHeader) =  com.google.android.material.color.ColorResourcesTableCreator$ResChunkHeader  (LINE:262)\l0x00f8: INVOKE  \l  (r2 I:com.google.android.material.color.ColorResourcesTableCreator$ResChunkHeader)\l  (r7 I:short)\l  (r8 I:short)\l  (r5 I:int)\l type: DIRECT call: com.google.android.material.color.ColorResourcesTableCreator.ResChunkHeader.\<init\>(short, short, int):void A[MD:(short, short, int):void (m)]\l0x00fb: IPUT  \l  (r2 I:com.google.android.material.color.ColorResourcesTableCreator$ResChunkHeader)\l  (r10 I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk)\l com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.header com.google.android.material.color.ColorResourcesTableCreator$ResChunkHeader \l}"];
Node_66 [shape=record,label="{66\:\ 0x00fd|RETURN\l|0x00fd: RETURN    (LINE:263)\l}"];
Node_36 [shape=record,label="{36\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_61 [shape=record,label="{61\:\ 0x00ec|0x00ec: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x00c9|0x00c9: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x00a6|0x00a6: ARITH  (r4 I:int) = (4 int) \- (r3 I:int A[D('stringOffsetResidue' int)]) \l}"];
MethodNode[shape=record,label="{void com.google.android.material.color.ColorResourcesTableCreator.StringPoolChunk.\<init\>((r10 'this' I:com.google.android.material.color.ColorResourcesTableCreator$StringPoolChunk A[IMMUTABLE_TYPE, THIS]), (r11 I:boolean A[D('utf8' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.lang.String[] A[D('rawStrings' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:39:0x0027 \-\> B:38:0x0025, BACK_EDGE: B:46:0x006e \-\> B:44:0x0068, BACK_EDGE: B:47:0x008d \-\> B:41:0x0058, CROSS_EDGE: B:63:0x00f0 \-\> B:65:0x00f3, CROSS_EDGE: B:61:0x00ec \-\> B:62:0x00ed, CROSS_EDGE: B:56:0x00ca \-\> B:58:0x00d6, CROSS_EDGE: B:55:0x00c9 \-\> B:56:0x00ca, CROSS_EDGE: B:51:0x00a6 \-\> B:52:0x00a8\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0029\-0x004e: r4 'string' Ljava\/lang\/String;\l  0x002d\-0x004e: r5 'processedString' Landroid\/util\/Pair;, signature: Landroid\/util\/Pair\<[BLjava\/util\/List\<Lcom\/google\/android\/material\/color\/ColorResourcesTableCreator$StringStyledSpan;\>;\>;\l  0x0074\-0x008c: r6 'styledSpan' Lcom\/google\/android\/material\/color\/ColorResourcesTableCreator$StringStyledSpan;\l  0x0064\-0x009f: r4 'styledSpanList' Ljava\/util\/List;, signature: Ljava\/util\/List\<Lcom\/google\/android\/material\/color\/ColorResourcesTableCreator$StringStyledSpan;\>;\l  0x0022\-0x00fd: r0 'stringOffset' I\l  0x0052\-0x00fd: r1 'styledSpanOffset' I\l  0x00a2\-0x00fd: r3 'stringOffsetResidue' I\l  0x00e7\-0x00fd: r4 'stringsSize' I\l  0x00ca\-0x00fd: r6 'hasStyledSpans' Z\l  \-1 \-0x00fd: r11 'utf8' Z\l  \-1 \-0x00fd: r12 'rawStrings' [Ljava\/lang\/String;\l}"];
MethodNode -> Node_35;Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_67;
Node_39 -> Node_38;
Node_67 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_68;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_69;
Node_46 -> Node_44;
Node_69 -> Node_47;
Node_47 -> Node_41;
Node_68 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_36;
Node_61 -> Node_62;
Node_55 -> Node_56;
Node_51 -> Node_52;
}

