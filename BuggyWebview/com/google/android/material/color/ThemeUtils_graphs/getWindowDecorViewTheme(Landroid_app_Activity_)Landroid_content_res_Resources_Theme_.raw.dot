digraph "CFG forcom.google.android.material.color.ThemeUtils.getWindowDecorViewTheme(Landroid\/app\/Activity;)Landroid\/content\/res\/Resources$Theme;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.Window) = (r4 I:android.app.Activity A[D('activity' android.app.Activity)]) type: VIRTUAL call: android.app.Activity.getWindow():android.view.Window A[MD:():android.view.Window (c)] (LINE:49)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('window' android.view.Window)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0017  (LINE:50)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: INVOKE  (r1 I:android.view.View) = (r0 I:android.view.Window A[D('window' android.view.Window)]) type: VIRTUAL call: android.view.Window.peekDecorView():android.view.View A[MD:():android.view.View (c)] (LINE:52)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('decorView' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:?  (LINE:53)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|0x000c: INVOKE  (r2 I:android.content.Context) = (r1 I:android.view.View A[D('decorView' android.view.View)]) type: VIRTUAL call: android.view.View.getContext():android.content.Context A[MD:():android.content.Context (c)] (LINE:54)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|0x0010: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('context' android.content.Context)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:?  (LINE:55)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|0x0012: INVOKE  (r3 I:android.content.res.Resources$Theme) = (r2 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getTheme():android.content.res.Resources$Theme A[MD:():android.content.res.Resources$Theme (c)] (LINE:56)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|RETURN\l|0x0016: RETURN  (r3 I:android.content.res.Resources$Theme) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0017: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('decorView' android.view.View)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:60)\l0x0018: RETURN  (r1 I:android.content.res.Resources$Theme) A[SYNTHETIC]\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|0x0017: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('decorView' android.view.View)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:60)\l0x0018: RETURN  (r1 I:android.content.res.Resources$Theme) A[SYNTHETIC]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|RETURN\lORIG_RETURN\l|0x0017: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('decorView' android.view.View)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:60)\l0x0018: RETURN  (r1 I:android.content.res.Resources$Theme) \l}"];
MethodNode[shape=record,label="{private static android.content.res.Resources$Theme com.google.android.material.color.ThemeUtils.getWindowDecorViewTheme((r4 I:android.app.Activity A[D('activity' android.app.Activity), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0018 \-\> B:15:?, CROSS_EDGE: B:19:0x000a \-\> B:24:0x0017, CROSS_EDGE: B:17:0x0004 \-\> B:24:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x0017: r1 'decorView' Landroid\/view\/View;\l  0x0010\-0x0017: r2 'context' Landroid\/content\/Context;\l  0x0004\-0x0018: r0 'window' Landroid\/view\/Window;\l  \-1 \-0x0018: r4 'activity' Landroid\/app\/Activity;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_26;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_15;
Node_27 -> Node_15;
Node_26 -> Node_15;
Node_24 -> Node_15;
}

