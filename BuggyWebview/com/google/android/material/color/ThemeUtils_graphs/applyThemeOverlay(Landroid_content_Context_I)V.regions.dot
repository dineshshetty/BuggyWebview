digraph "CFG forcom.google.android.material.color.ThemeUtils.applyThemeOverlay(Landroid\/content\/Context;I)V" {
subgraph cluster_Region_1208762740 {
label = "R(2:1|(1:(1:5))) | DECL_VAR: android.content.res.Resources$Theme windowDecorViewTheme\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|r2.getTheme().applyStyle(r3, true)\l}"];
subgraph cluster_Region_1944427220 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_603668512 {
label = "IF [B:13:0x000a, B:15:0x0013] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000a|if ((r2 instanceof android.app.Activity) != false) goto L3\l}"];
Node_15 [shape=record,label="{15\:\ 0x0013|ADDED_TO_REGION\l|if ((r0 = getWindowDecorViewTheme((android.app.Activity) r2)) != null) goto L5\l}"];
subgraph cluster_Region_355416931 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0015|r0.applyStyle(r3, true)\l}"];
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000c}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0018|ORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{public static void com.google.android.material.color.ThemeUtils.applyThemeOverlay((r2v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'theme' int A[D('theme' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0013 \-\> B:17:0x0018, CROSS_EDGE: B:13:0x000a \-\> B:17:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_18[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_19[style=dashed];
Node_16 -> Node_17;
Node_10 -> Node_12;
Node_14 -> Node_15;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

