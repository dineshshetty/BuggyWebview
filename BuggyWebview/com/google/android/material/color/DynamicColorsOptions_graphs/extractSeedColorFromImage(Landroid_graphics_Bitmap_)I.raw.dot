digraph "CFG forcom.google.android.material.color.DynamicColorsOptions.extractSeedColorFromImage(Landroid\/graphics\/Bitmap;)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r8 I:int) = (r11 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getWidth():int A[MD:():int (c)] (LINE:146)\l0x0004: INVOKE  (r9 I:int) = (r11 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getHeight():int A[MD:():int (c)] (LINE:147)\l0x0008: ARITH  (r0 I:int) = (r8 I:int A[D('width' int)]) * (r9 I:int A[D('height' int)])  (LINE:148)\l0x000a: NEW_ARRAY  (r10 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:149)\l0x000d: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('bitmap' android.graphics.Bitmap)]) \l0x0010: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('bitmapPixels' int[])]) \l0x0011: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('width' int)]) \l0x0012: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('width' int)]) \l0x0013: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('height' int)]) \l0x0014: INVOKE  (r0 I:android.graphics.Bitmap), (r1 I:int[]), (r2 I:int), (r3 I:int), (r4 I:int), (r5 I:int), (r6 I:int), (r7 I:int) type: VIRTUAL call: android.graphics.Bitmap.getPixels(int[], int, int, int, int, int, int):void A[MD:(int[], int, int, int, int, int, int):void (c)]\l0x0017: CONST  (r0 I:??[int, float, short, byte, char]) = (128(0x80, float:1.8E\-43) ??[int, float, short, byte, char])  (LINE:150)\l0x0019: INVOKE  (r0 I:java.util.Map) = (r10 I:int[] A[D('bitmapPixels' int[])]), (r0 I:int) type: STATIC call: com.google.android.material.color.utilities.QuantizerCelebi.quantize(int[], int):java.util.Map A[MD:(int[], int):java.util.Map\<java.lang.Integer, java.lang.Integer\> (m)]\l0x001d: INVOKE  (r0 I:java.util.List) = (r0 I:java.util.Map) type: STATIC call: com.google.android.material.color.utilities.Score.score(java.util.Map):java.util.List A[MD:(java.util.Map\<java.lang.Integer, java.lang.Integer\>):java.util.List\<java.lang.Integer\> (m)]\l0x0021: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0022: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0026: CHECK_CAST (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:??[OBJECT, ARRAY]) \l0x0028: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|RETURN\l|0x002c: RETURN  (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static int com.google.android.material.color.DynamicColorsOptions.extractSeedColorFromImage((r11 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  0x0004\-0x002c: r8 'width' I\l  0x0008\-0x002c: r9 'height' I\l  0x000c\-0x002c: r10 'bitmapPixels' [I\l  \-1 \-0x002c: r11 'bitmap' Landroid\/graphics\/Bitmap;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

