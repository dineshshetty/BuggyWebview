digraph "CFG forcom.google.android.material.color.utilities.QuantizerWu.createResult(I)Ljava\/util\/List;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|java.util.ArrayList r0 = new java.util.ArrayList\<\>()\lr1 = 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|LOOP_START\lLOOP:0: B:15:0x0006\-\>B:19:0x003f\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:14:0x0000, B:19:0x003f] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r10) goto L9\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|r2 = r9.cubes[r1]\lint r3 = volume(r2, r9.weights)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|if (r3 \<= 0) goto L8\l}"];
Node_18 [shape=record,label="{18\:\ 0x0014|int r4 = volume(r2, r9.momentsR) \/ r3\lint r5 = volume(r2, r9.momentsG) \/ r3\lint r6 = volume(r2, r9.momentsB) \/ r3\lr7 = (((\-16777216) \| ((r4 & 255) \<\< 16)) \| ((r5 & 255) \<\< 8)) \| (r6 & 255)\lr0.add(java.lang.Integer.valueOf(r7))\l}"];
Node_22 [shape=record,label="{22\:\ 0x003f|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|LOOP_END\lLOOP:0: B:15:0x0006\-\>B:19:0x003f\l|int r1 = r1 + 1\l}"];
Node_23 [shape=record,label="{23\:\ 0x003f|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0042|RETURN\l|return r0\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{java.util.List\<java.lang.Integer\> com.google.android.material.color.utilities.QuantizerWu.createResult((r9v0 'this' com.google.android.material.color.utilities.QuantizerWu A[IMMUTABLE_TYPE, THIS]), (r10v0 'colorCount' int A[D('colorCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x003f \-\> B:15:0x0006, CROSS_EDGE: B:17:0x0012 \-\> B:19:0x003f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (I)Ljava\/util\/List\<Ljava\/lang\/Integer;\>;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_22;
Node_22 -> Node_19;
Node_19 -> Node_15;
Node_23 -> Node_19;
Node_21 -> Node_20;
Node_20 -> Node_13;
}

