digraph "CFG forcom.google.android.material.color.utilities.QuantizerWu.constructHistogram(Ljava\/util\/Map;)V" {
subgraph cluster_Region_220245677 {
label = "R(2:1|(1:4))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|com.google.android.material.color.utilities.QuantizerWu r0 = r18\lr0.weights = new int[com.google.android.material.color.utilities.QuantizerWu.TOTAL_SIZE]\lr0.momentsR = new int[com.google.android.material.color.utilities.QuantizerWu.TOTAL_SIZE]\lr0.momentsG = new int[com.google.android.material.color.utilities.QuantizerWu.TOTAL_SIZE]\lr0.momentsB = new int[com.google.android.material.color.utilities.QuantizerWu.TOTAL_SIZE]\lr0.moments = new double[com.google.android.material.color.utilities.QuantizerWu.TOTAL_SIZE]\ljava.util.Iterator java.util.Iterator\<java.util.Map.Entry\<java.lang.Integer, java.lang.Integer\>\> r1 = r19.entrySet().iterator()\l}"];
subgraph cluster_LoopRegion_347013963 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0025|if (r1.hasNext() != false) goto L4\l}"];
subgraph cluster_Region_2031608091 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0027|LOOP_END\lLOOP:0: B:11:0x0021\-\>B:13:0x0027\l|java.util.Map$Entry java.util.Map.Entry\<java.lang.Integer, java.lang.Integer\> r2 = r1.next()\lint int r3 = r2.getKey().intValue()\lint int r4 = r2.getValue().intValue()\lint int r5 = com.google.android.material.color.utilities.ColorUtils.redFromArgb(r3)\lint int r6 = com.google.android.material.color.utilities.ColorUtils.greenFromArgb(r3)\lint int r7 = com.google.android.material.color.utilities.ColorUtils.blueFromArgb(r3)\lint int r9 = (r5 \>\> 3) + 1\lint int r10 = (r6 \>\> 3) + 1\lint int r11 = (r7 \>\> 3) + 1\lint int r12 = getIndex(r9, r10, r11)\lint[] int[] r13 = r0.weights\lr13[r12] = r13[r12] + r4\lint[] int[] r13 = r0.momentsR\lr13[r12] = r13[r12] + (r5 * r4)\lint[] int[] r13 = r0.momentsG\lr13[r12] = r13[r12] + (r6 * r4)\lint[] int[] r13 = r0.momentsB\lr13[r12] = r13[r12] + (r7 * r4)\ldouble[] double[] r13 = r0.moments\lr13[r12] = r13[r12] + (r4 * ((r5 * r5) + (r6 * r6) + (r7 * r7)))\lr0 = r18\lr1 = r1\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0021|LOOP_START\lLOOP:0: B:11:0x0021\-\>B:13:0x0027\lPHI: r0 r1 \l  PHI: (r0v1 com.google.android.material.color.utilities.QuantizerWu) = (r0v0 com.google.android.material.color.utilities.QuantizerWu), (r0v4 com.google.android.material.color.utilities.QuantizerWu) binds: [B:10:0x0000, B:13:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v4 java.util.Iterator\<java.util.Map$Entry\<java.lang.Integer, java.lang.Integer\>\>) = (r1v3 java.util.Iterator\<java.util.Map$Entry\<java.lang.Integer, java.lang.Integer\>\>), (r1v5 java.util.Iterator\<java.util.Map$Entry\<java.lang.Integer, java.lang.Integer\>\>) binds: [B:10:0x0000, B:13:0x0027] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x009b|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x009b}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void com.google.android.material.color.utilities.QuantizerWu.constructHistogram((r18v0 'this' com.google.android.material.color.utilities.QuantizerWu A[IMMUTABLE_TYPE, THIS]), (r19v0 'pixels' java.util.Map\<java.lang.Integer, java.lang.Integer\> A[D('pixels' java.util.Map\<java.lang.Integer, java.lang.Integer\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x0027 \-\> B:11:0x0021\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/util\/Map\<Ljava\/lang\/Integer;Ljava\/lang\/Integer;\>;)V\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_15[style=dashed];
Node_13 -> Node_11;
Node_8 -> Node_10;
Node_11 -> Node_12;
Node_15 -> Node_14;
Node_14 -> Node_9;
}

