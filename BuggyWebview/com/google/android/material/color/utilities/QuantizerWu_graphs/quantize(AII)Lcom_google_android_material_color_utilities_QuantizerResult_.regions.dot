digraph "CFG forcom.google.android.material.color.utilities.QuantizerWu.quantize([II)Lcom\/google\/android\/material\/color\/utilities\/QuantizerResult;" {
subgraph cluster_Region_1291938569 {
label = "R(3:1|(1:4)|7)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|com.google.android.material.color.utilities.QuantizerResult com.google.android.material.color.utilities.QuantizerResult r0 = new com.google.android.material.color.utilities.QuantizerMap().quantize(r9, r10)\lconstructHistogram(r0.colorToCount)\lcreateMoments()\lcom.google.android.material.color.utilities.QuantizerWu$CreateBoxesResult com.google.android.material.color.utilities.QuantizerWu.CreateBoxesResult r1 = createBoxes(r10)\ljava.util.List java.util.List\<java.lang.Integer\> r2 = createResult(r1.resultCount)\ljava.util.HashMap java.util.HashMap\<java.lang.Integer, java.lang.Integer\> r3 = new java.util.HashMap\<\>()\ljava.util.Iterator r4 = r2.iterator()\l\l}"];
subgraph cluster_LoopRegion_246494711 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0028|java.lang.Object \lif (r4.hasNext() != false) goto L4\l}"];
subgraph cluster_Region_1161112201 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002a|LOOP_END\lLOOP:0: B:12:0x0024\-\>B:14:0x002a\l|int int r5 = r5.intValue()\lr3.put(java.lang.Integer.valueOf(r5), 0)\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x0046|RETURN\l|return new com.google.android.material.color.utilities.QuantizerResult(r3)\l}"];
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0024|LOOP_START\lLOOP:0: B:12:0x0024\-\>B:14:0x002a\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0041|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0041}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public com.google.android.material.color.utilities.QuantizerResult com.google.android.material.color.utilities.QuantizerWu.quantize((r8v0 'this' com.google.android.material.color.utilities.QuantizerWu A[IMMUTABLE_TYPE, THIS]), (r9v0 'pixels' int[] A[D('pixels' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'colorCount' int A[D('colorCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x002a \-\> B:12:0x0024\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [com.google.android.material.color.utilities.Quantizer.quantize(int[], int):com.google.android.material.color.utilities.QuantizerResult]\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_14 -> Node_12;
Node_16 -> Node_10;
Node_9 -> Node_11;
Node_12 -> Node_13;
Node_17 -> Node_15;
Node_15 -> Node_16;
}

