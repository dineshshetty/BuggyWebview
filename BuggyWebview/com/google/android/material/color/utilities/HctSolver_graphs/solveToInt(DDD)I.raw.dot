digraph "CFG forcom.google.android.material.color.utilities.HctSolver.solveToInt(DDD)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[long, double]) = (4547007122018943789(0x3f1a36e2eb1c432d, double:1.0E\-4) ??[long, double])  (LINE:648)\l0x0005: CMP_G  (r2 I:int) = (r12 I:double A[D('chroma' double)]), (r0 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r2 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:14:0x0040 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: CMP_G  (r2 I:int) = (r14 I:double A[D('lstar' double)]), (r0 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r2 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:14:0x0040 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: CONST  (r0 I:??[long, double]) = (4636737284317761870(0x4058fffe5c91d14e, double:99.9999) ??[long, double]) \l0x0012: CMP_L  (r2 I:int) = (r14 I:double A[D('lstar' double)]), (r0 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:9:0x0017 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: INVOKE  (r10 I:double A[D('hueDegrees' double)]) = (r10 I:double A[D('hueDegrees' double)]) type: STATIC call: com.google.android.material.color.utilities.MathUtils.sanitizeDegreesDouble(double):double A[MD:(double):double (m)] (LINE:651)\l0x001b: CONST  (r0 I:??[long, double]) = (4640537203540230144(0x4066800000000000, double:180.0) ??[long, double])  (LINE:652)\l0x0020: ARITH  (r0 I:double) = (r10 I:double A[D('hueDegrees' double)]) \/ (r0 I:double) \l0x0022: CONST  (r2 I:??[long, double]) = (4614256656552045848(0x400921fb54442d18, double:3.141592653589793) ??[long, double]) \l0x0027: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x0029: INVOKE  (r2 I:double) = (r14 I:double A[D('lstar' double)]) type: STATIC call: com.google.android.material.color.utilities.ColorUtils.yFromLstar(double):double A[MD:(double):double (m)] (LINE:653)\l0x002d: MOVE  (r4 I:??[long, double]) = (r0 I:??[long, double] A[D('hueRadians' double)])  (LINE:654)\l0x002e: MOVE  (r6 I:??[long, double]) = (r12 I:??[long, double] A[D('chroma' double)]) \l0x002f: MOVE  (r8 I:??[long, double]) = (r2 I:??[long, double] A[D('y' double)]) \l0x0030: INVOKE  (r4 I:int) = (r4 I:double), (r6 I:double), (r8 I:double) type: STATIC call: com.google.android.material.color.utilities.HctSolver.findResultByJ(double, double, double):int A[MD:(double, double, double):int (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('exactAnswer' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0037  (LINE:655)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|RETURN\l|0x0036: RETURN  (r4 I:int A[D('exactAnswer' int)])  (LINE:656)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|0x0037: INVOKE  (r5 I:double[]) = (r2 I:double A[D('y' double)]), (r0 I:double A[D('hueRadians' double)]) type: STATIC call: com.google.android.material.color.utilities.HctSolver.bisectToLimit(double, double):double[] A[MD:(double, double):double[] (m)] (LINE:658)\l0x003b: INVOKE  (r6 I:int) = (r5 I:double[] A[D('linrgb' double[])]) type: STATIC call: com.google.android.material.color.utilities.ColorUtils.argbFromLinrgb(double[]):int A[MD:(double[]):int (m)] (LINE:659)\l}"];
Node_13 [shape=record,label="{13\:\ 0x003f|RETURN\l|0x003f: RETURN  (r6 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|0x0040: INVOKE  (r0 I:int) = (r14 I:double A[D('lstar' double)]) type: STATIC call: com.google.android.material.color.utilities.ColorUtils.argbFromLstar(double):int A[MD:(double):int (m)] (LINE:649)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|RETURN\l|0x0044: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public static int com.google.android.material.color.utilities.HctSolver.solveToInt((r10 I:double A[D('hueDegrees' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:double A[D('chroma' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:double A[D('lstar' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x003f \-\> B:1:?, CROSS_EDGE: B:15:0x0044 \-\> B:1:?, CROSS_EDGE: B:5:0x000b \-\> B:14:0x0040, CROSS_EDGE: B:3:0x0007 \-\> B:14:0x0040\lDebug Info:\l  0x0029\-0x0040: r0 'hueRadians' D\l  0x002d\-0x0040: r2 'y' D\l  0x0034\-0x0040: r4 'exactAnswer' I\l  0x003b\-0x0040: r5 'linrgb' [D\l  \-1 \-0x0044: r10 'hueDegrees' D\l  \-1 \-0x0044: r12 'chroma' D\l  \-1 \-0x0044: r14 'lstar' D\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_14[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_1;
}

