digraph "CFG forcom.google.android.material.color.utilities.HctSolver.areInCyclicOrder(DDD)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r0 I:double) = (r7 I:double A[D('b' double)]) \- (r5 I:double A[D('a' double)])  (LINE:370)\l0x0002: INVOKE  (r0 I:double) = (r0 I:double) type: STATIC call: com.google.android.material.color.utilities.HctSolver.sanitizeRadians(double):double A[MD:(double):double (m)]\l0x0006: ARITH  (r2 I:double) = (r9 I:double A[D('c' double)]) \- (r5 I:double A[D('a' double)])  (LINE:371)\l0x0008: INVOKE  (r2 I:double) = (r2 I:double) type: STATIC call: com.google.android.material.color.utilities.HctSolver.sanitizeRadians(double):double A[MD:(double):double (m)]\l0x000c: CMP_G  (r4 I:int) = (r0 I:double A[D('deltaAB' double)]), (r2 I:double A[D('deltaAC' double)])  (LINE:372)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r4 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|SYNTHETIC\lRETURN\l|0x0010: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0013: RETURN  (r4 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: RETURN  (r4 I:boolean) \l}"];
MethodNode[shape=record,label="{static boolean com.google.android.material.color.utilities.HctSolver.areInCyclicOrder((r5 I:double A[D('a' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:double A[D('b' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:double A[D('c' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0012 \-\> B:6:0x0013\lDebug Info:\l  0x0006\-0x0013: r0 'deltaAB' D\l  0x000c\-0x0013: r2 'deltaAC' D\l  \-1 \-0x0013: r5 'a' D\l  \-1 \-0x0013: r7 'b' D\l  \-1 \-0x0013: r9 'c' D\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_1;
}

