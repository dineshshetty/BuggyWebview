digraph "CFG forcom.google.android.material.color.utilities.HctSolver.areInCyclicOrder(DDD)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|double r0 = sanitizeRadians(r7 \- r5)\ldouble r2 = sanitizeRadians(r9 \- r5)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if ((r0 \> r2 ? 1 : (r0 == r2 ? 0 : \-1)) \>= 0) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|SYNTHETIC\lRETURN\l|return true\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|RETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{static boolean com.google.android.material.color.utilities.HctSolver.areInCyclicOrder((r5v0 'a' double A[D('a' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'b' double A[D('b' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'c' double A[D('c' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0012 \-\> B:6:0x0013\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_1;
}

