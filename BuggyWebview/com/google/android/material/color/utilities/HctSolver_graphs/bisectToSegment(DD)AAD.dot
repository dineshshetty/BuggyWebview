digraph "CFG forcom.google.android.material.color.utilities.HctSolver.bisectToSegment(DD)[[D" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|double[] r0 = new double[]\{\-1.0d, \-1.0d, \-1.0d\}\lr1 = r0\lr10 = 0.0d\lr12 = false\lr13 = true\lr14 = 0\lr8 = 0.0d\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|LOOP_START\lLOOP:0: B:3:0x0013\-\>B:18:0x0059\lPHI: r0 r1 r8 r10 r12 r13 r14 \l  PHI: (r0v2 'left' double[]) = (r0v1 'left' double[]), (r0v3 'left' double[]) binds: [B:2:0x0000, B:18:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'right' double[]) = (r1v0 'right' double[]), (r1v2 'right' double[]) binds: [B:2:0x0000, B:18:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v2 'leftHue' double) = (r8v1 'leftHue' double), (r8v3 'leftHue' double) binds: [B:2:0x0000, B:18:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 'rightHue' double) = (r10v0 'rightHue' double), (r10v2 'rightHue' double) binds: [B:2:0x0000, B:18:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 'initialized' boolean) = (r12v0 'initialized' boolean), (r12v2 'initialized' boolean) binds: [B:2:0x0000, B:18:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 'uncut' boolean) = (r13v0 'uncut' boolean), (r13v2 'uncut' boolean) binds: [B:2:0x0000, B:18:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v1 'n' int) = (r14v0 'n' int), (r14v2 'n' int) binds: [B:2:0x0000, B:18:0x0059] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|if (r14 \>= 12) goto L22\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|double[] r15 = nthVertex(r18, r14)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|if ((r15[0] \> 0.0d ? 1 : (r15[0] == 0.0d ? 0 : \-1)) \>= 0) goto L6\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|double r16 = hueOf(r15)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|if (r12 != false) goto L11\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|r0 = r15\lr1 = r15\lr10 = r16\lr12 = true\lr8 = r16\l}"];
Node_23 [shape=record,label="{23\:\ 0x0059|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0059|LOOP_END\lLOOP:0: B:3:0x0013\-\>B:18:0x0059\lPHI: r0 r1 r8 r10 r12 r13 \l  PHI: (r0v3 'left' double[]) = (r0v2 'left' double[]), (r0v4 'left' double[]), (r0v2 'left' double[]), (r0v2 'left' double[]), (r0v5 'left' double[]) binds: [B:26:0x0059, B:22:0x0059, B:25:0x0059, B:24:0x0059, B:23:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 'right' double[]) = (r1v1 'right' double[]), (r1v1 'right' double[]), (r1v3 'right' double[]), (r1v1 'right' double[]), (r1v4 'right' double[]) binds: [B:26:0x0059, B:22:0x0059, B:25:0x0059, B:24:0x0059, B:23:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v3 'leftHue' double) = (r8v2 'leftHue' double), (r8v4 'leftHue' double), (r8v2 'leftHue' double), (r8v2 'leftHue' double), (r8v6 'leftHue' double) binds: [B:26:0x0059, B:22:0x0059, B:25:0x0059, B:24:0x0059, B:23:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v2 'rightHue' double) = (r10v1 'rightHue' double), (r10v1 'rightHue' double), (r10v3 'rightHue' double), (r10v1 'rightHue' double), (r10v4 'rightHue' double) binds: [B:26:0x0059, B:22:0x0059, B:25:0x0059, B:24:0x0059, B:23:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v2 'initialized' boolean) = (r12v1 'initialized' boolean), (r12v1 'initialized' boolean), (r12v1 'initialized' boolean), (r12v1 'initialized' boolean), (r12v3 'initialized' boolean) binds: [B:26:0x0059, B:22:0x0059, B:25:0x0059, B:24:0x0059, B:23:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v2 'uncut' boolean) = (r13v1 'uncut' boolean), (r13v3 'uncut' boolean), (r13v3 'uncut' boolean), (r13v1 'uncut' boolean), (r13v1 'uncut' boolean) binds: [B:26:0x0059, B:22:0x0059, B:25:0x0059, B:24:0x0059, B:23:0x0059] A[DONT_GENERATE, DONT_INLINE]\l|int r14 = r14 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|if (r13 != false) goto L15\l}"];
Node_12 [shape=record,label="{12\:\ 0x003a}"];
Node_13 [shape=record,label="{13\:\ 0x0042|if (areInCyclicOrder(r8, r16, r10) == false) goto L14\l}"];
Node_24 [shape=record,label="{24\:\ 0x0059|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0044|r13 = false\l}"];
Node_15 [shape=record,label="{15\:\ 0x004e|if (areInCyclicOrder(r8, r20, r16) == false) goto L19\l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|r1 = r15\lr10 = r16\l}"];
Node_25 [shape=record,label="{25\:\ 0x0059|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0055|r0 = r15\lr8 = r16\l}"];
Node_22 [shape=record,label="{22\:\ 0x0059|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0059|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x005c|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x005c}"];
Node_20 [shape=record,label="{20\:\ 0x0064|RETURN\l|return new double[][]\{r0, r1\}\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static double[][] com.google.android.material.color.utilities.HctSolver.bisectToSegment((r18v0 'y' double A[D('y' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'targetHue' double A[D('targetHue' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:18:0x0059 \-\> B:3:0x0013, CROSS_EDGE: B:16:0x0050 \-\> B:18:0x0059, CROSS_EDGE: B:17:0x0055 \-\> B:18:0x0059, CROSS_EDGE: B:13:0x0042 \-\> B:18:0x0059, CROSS_EDGE: B:11:0x0038 \-\> B:14:0x0044, CROSS_EDGE: B:6:0x0024 \-\> B:18:0x0059\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_21;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_26[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_23;
Node_23 -> Node_18;
Node_18 -> Node_3;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_24;
Node_24 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_25;
Node_25 -> Node_18;
Node_17 -> Node_22;
Node_22 -> Node_18;
Node_26 -> Node_18;
Node_21 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_1;
}

