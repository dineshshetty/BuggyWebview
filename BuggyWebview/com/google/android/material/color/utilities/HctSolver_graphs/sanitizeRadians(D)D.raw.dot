digraph "CFG forcom.google.android.material.color.utilities.HctSolver.sanitizeRadians(D)D" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[long, double]) = (4627767455434157336(0x403921fb54442d18, double:25.132741228718345) ??[long, double])  (LINE:326)\l0x0005: ARITH  (r0 I:double) = (r0 I:double) + (r4 I:double A[D('angle' double)]) \l0x0006: CONST  (r2 I:??[long, double]) = (4618760256179416344(0x401921fb54442d18, double:6.283185307179586) ??[long, double]) \l0x000b: ARITH  (r0 I:double) = (r0 I:double) % (r2 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static double com.google.android.material.color.utilities.HctSolver.sanitizeRadians((r4 I:double A[D('angle' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x000c: r4 'angle' D\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

