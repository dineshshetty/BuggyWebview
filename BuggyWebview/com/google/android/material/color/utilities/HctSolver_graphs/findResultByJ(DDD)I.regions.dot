digraph "CFG forcom.google.android.material.color.utilities.HctSolver.findResultByJ(DDD)I" {
subgraph cluster_Region_1736167593 {
label = "R(3:1|(4:4|5|9|(2:(1:37)|(2:15|(2:(1:35)|(1:(2:(1:(2:(1:32)|(1:30)))|(1:21)))))))|42)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|double double r0 = java.lang.Math.sqrt(r70) * 11.0d\lcom.google.android.material.color.utilities.ViewingConditions com.google.android.material.color.utilities.ViewingConditions r4 = com.google.android.material.color.utilities.ViewingConditions.DEFAULT\ldouble double r5 = 1.0d \/ java.lang.Math.pow(1.64d \- java.lang.Math.pow(0.29d, r4.getN()), 0.73d)\ldouble double r11 = (java.lang.Math.cos(r66 + 2.0d) + 3.8d) * 0.25d\ldouble double r13 = 3846.153846153846d * r11 * r4.getNc() * r4.getNcb()\ldouble double r15 = java.lang.Math.sin(r66)\ldouble double r17 = java.lang.Math.cos(r66)\lint r9 = 0\l}"];
subgraph cluster_LoopRegion_753200603 {
label = "LOOP:0: (4:4|5|9|(2:(1:37)|(2:15|(2:(1:35)|(1:(2:(1:(2:(1:32)|(1:30)))|(1:21)))))))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x005e|if (r9 \< 5) goto L4\l}"];
subgraph cluster_Region_1744198916 {
label = "R(4:4|5|9|(2:(1:37)|(2:15|(2:(1:35)|(1:(2:(1:(2:(1:32)|(1:30)))|(1:21)))))))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0060|double double r2 = r0 \/ 100.0d\l}"];
Node_6 [shape=record,label="{6\:\ 0x0068|double r26 = (r68 == 0.0d \|\| r0 == 0.0d) ? 0.0d : r68 \/ java.lang.Math.sqrt(r2)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0078|PHI: r26 \l  PHI: (r26v1 'alpha' double) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|double r30 = r5\ldouble double r5 = java.lang.Math.pow(r26 * r5, 1.1111111111111112d)\ldouble r36 = r11\ldouble double r7 = r4.getAw() * java.lang.Math.pow(r2, (1.0d \/ r4.getC()) \/ r4.getZ())\ldouble double r10 = r7 \/ r4.getNbb()\ldouble double r32 = (((r10 + 0.305d) * 23.0d) * r5) \/ (((23.0d * r13) + ((r5 * 11.0d) * r17)) + ((108.0d * r5) * r15))\ldouble double r34 = r32 * r17\ldouble double r38 = r32 * r15\ldouble double r42 = (((r10 * 460.0d) + (451.0d * r34)) + (288.0d * r38)) \/ 1403.0d\ldouble double r46 = (((r10 * 460.0d) \- (891.0d * r34)) \- (261.0d * r38)) \/ 1403.0d\ldouble double r40 = (((460.0d * r10) \- (220.0d * r34)) \- (6300.0d * r38)) \/ 1403.0d\ldouble double r44 = inverseChromaticAdaptation(r42)\ldouble double r48 = inverseChromaticAdaptation(r46)\ldouble double r50 = inverseChromaticAdaptation(r40)\ldouble[] double[] r2 = com.google.android.material.color.utilities.MathUtils.matrixMultiply(new double[]\{r44, r48, r50\}, com.google.android.material.color.utilities.HctSolver.LINRGB_FROM_SCALED_DISCOUNT)\l}"];
subgraph cluster_Region_753072647 {
label = "R(2:(1:37)|(2:15|(2:(1:35)|(1:(2:(1:(2:(1:32)|(1:30)))|(1:21))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2128088849 {
label = "IF [B:13:0x0139, B:15:0x013f, B:17:0x0145] THEN: R(1:37) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0139|if (r2[0] \< 0.0d) goto L39\l}"];
Node_15 [shape=record,label="{15\:\ 0x013f|ADDED_TO_REGION\l|if (r2[1] \< 0.0d) goto L38\l}"];
Node_17 [shape=record,label="{17\:\ 0x0145|ADDED_TO_REGION\l|if (r2[2] \< 0.0d) goto L36\l}"];
subgraph cluster_Region_457523561 {
label = "R(1:37)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x01ae|RETURN\lADDED_TO_REGION\l|return 0\l}"];
}
}
subgraph cluster_Region_722695091 {
label = "R(2:15|(2:(1:35)|(1:(2:(1:(2:(1:32)|(1:30)))|(1:21)))))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0148|double[] double[] r3 = com.google.android.material.color.utilities.HctSolver.Y_FROM_LINRGB\ldouble r56 = r3[0]\ldouble r58 = r3[1]\ldouble r60 = r3[2]\ldouble double r62 = (r2[0] * r56) + (r2[1] * r58) + (r2[2] * r60)\l}"];
subgraph cluster_Region_603985801 {
label = "R(2:(1:35)|(1:(2:(1:(2:(1:32)|(1:30)))|(1:21))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_391451082 {
label = "IF [B:20:0x0162] THEN: R(1:35) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0162|if (r62 \<= 0.0d) goto L34\l}"];
subgraph cluster_Region_1644547971 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0164|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_1493971718 {
label = "R(1:(2:(1:(2:(1:32)|(1:30)))|(1:21)))";
node [shape=record,color=blue];
subgraph cluster_Region_1752399687 {
label = "R(2:(1:(2:(1:32)|(1:30)))|(1:21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_363040374 {
label = "IF [B:23:0x0166, B:25:0x0175] THEN: R(1:(2:(1:32)|(1:30))) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0166|if (r9 == 4) goto L33\l}"];
Node_25 [shape=record,label="{25\:\ 0x0175|ADDED_TO_REGION\l|if (java.lang.Math.abs(r62 \- r70) \< 0.002d) goto L22\l}"];
subgraph cluster_Region_1290506655 {
label = "R(1:(2:(1:32)|(1:30)))";
node [shape=record,color=blue];
subgraph cluster_Region_14562902 {
label = "R(2:(1:32)|(1:30))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_546490687 {
label = "IF [B:29:0x0199, B:31:0x019f, B:33:0x01a5] THEN: R(1:32) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0199|if (r2[0] \> 100.01d) goto L32\l}"];
Node_31 [shape=record,label="{31\:\ 0x019f|ADDED_TO_REGION\l|if (r2[1] \> 100.01d) goto L32\l}"];
Node_33 [shape=record,label="{33\:\ 0x01a5|ADDED_TO_REGION\l|if (r2[2] \> 100.01d) goto L32\l}"];
subgraph cluster_Region_947036488 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x01ad|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_701178725 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x01ac|RETURN\l|return com.google.android.material.color.utilities.ColorUtils.argbFromLinrgb(r2)\l}"];
}
}
}
}
subgraph cluster_Region_990511952 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0178|LOOP_END\lLOOP:0: B:3:0x005b\-\>B:27:0x0178\l|r0 \-= ((r62 \- r70) * r0) \/ (r62 * 2.0d)\lr9++\lr5 = r30\lr11 = r36\l}"];
}
}
}
}
}
}
}
}
Node_39 [shape=record,label="{39\:\ 0x01af|RETURN\l|return 0\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x005b|LOOP_START\lLOOP:0: B:3:0x005b\-\>B:27:0x0178\lPHI: r0 r5 r9 r11 \l  PHI: (r0v2 'j' double) = (r0v1 'j' double), (r0v3 'j' double) binds: [B:2:0x0000, B:27:0x0178] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v5 'tInnerCoeff' double) = (r5v4 'tInnerCoeff' double), (r5v8 'tInnerCoeff' double) binds: [B:2:0x0000, B:27:0x0178] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v2 'iterationRound' int) = (r9v1 'iterationRound' int), (r9v3 'iterationRound' int) binds: [B:2:0x0000, B:27:0x0178] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v4 'eHue' double) = (r11v3 'eHue' double), (r11v5 'eHue' double) binds: [B:2:0x0000, B:27:0x0178] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x006a}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x006c|REMOVE\lADDED_TO_REGION\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x006f}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x013b}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0141}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0165}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0168}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0190|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0190}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x019b}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x01a1}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x01a8}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0190|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0164|SYNTHETIC\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x01ae|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x01ae|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x01ae|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0076}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x01af|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static int com.google.android.material.color.utilities.HctSolver.findResultByJ((r66v0 'hueRadians' double A[D('hueRadians' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r68v0 'chroma' double A[D('chroma' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r70v0 'y' double A[D('y' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x0178 \-\> B:3:0x005b, CROSS_EDGE: B:36:0x01ac \-\> B:1:?, CROSS_EDGE: B:37:0x01ad \-\> B:1:?, CROSS_EDGE: B:31:0x019f \-\> B:37:0x01ad, CROSS_EDGE: B:29:0x0199 \-\> B:37:0x01ad, CROSS_EDGE: B:23:0x0166 \-\> B:28:0x0190, CROSS_EDGE: B:38:0x01ae \-\> B:1:?, CROSS_EDGE: B:15:0x013f \-\> B:38:0x01ae, CROSS_EDGE: B:13:0x0139 \-\> B:38:0x01ae, CROSS_EDGE: B:11:0x0076 \-\> B:12:0x0078, CROSS_EDGE: B:6:0x0068 \-\> B:11:0x0076, CROSS_EDGE: B:39:0x01af \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_45[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_44;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_46;
Node_17 -> Node_19[style=dashed];
Node_17 -> Node_41;
Node_38 -> Node_1;
Node_19 -> Node_20;
Node_20 -> Node_22[style=dashed];
Node_20 -> Node_40;
Node_21 -> Node_1;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_42;
Node_25 -> Node_27[style=dashed];
Node_25 -> Node_43;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_37;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_37;
Node_33 -> Node_35[style=dashed];
Node_33 -> Node_37;
Node_37 -> Node_1;
Node_36 -> Node_1;
Node_27 -> Node_3;
Node_39 -> Node_1;
Node_0 -> Node_2;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_11;
Node_10 -> Node_12;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_43 -> Node_28;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_35 -> Node_36;
Node_42 -> Node_28;
Node_40 -> Node_21;
Node_41 -> Node_38;
Node_46 -> Node_38;
Node_44 -> Node_38;
Node_11 -> Node_12;
Node_45 -> Node_39;
}

