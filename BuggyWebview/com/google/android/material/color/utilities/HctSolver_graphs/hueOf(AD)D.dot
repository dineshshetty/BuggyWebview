digraph "CFG forcom.google.android.material.color.utilities.HctSolver.hueOf([D)D" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|double[] r0 = com.google.android.material.color.utilities.MathUtils.matrixMultiply(r13, com.google.android.material.color.utilities.HctSolver.SCALED_DISCOUNT_FROM_LINRGB)\ldouble r1 = chromaticAdaptation(r0[0])\ldouble r3 = chromaticAdaptation(r0[1])\ldouble r5 = chromaticAdaptation(r0[2])\ldouble r9 = (((r1 * 11.0d) + ((\-12.0d) * r3)) + r5) \/ 11.0d\ldouble r7 = ((r1 + r3) \- (2.0d * r5)) \/ 9.0d\l}"];
Node_3 [shape=record,label="{3\:\ 0x0034|RETURN\l|return java.lang.Math.atan2(r7, r9)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static double com.google.android.material.color.utilities.HctSolver.hueOf((r13v0 'linrgb' double[] A[D('linrgb' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

