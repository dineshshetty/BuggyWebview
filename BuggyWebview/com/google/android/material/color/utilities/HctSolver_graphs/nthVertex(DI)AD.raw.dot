digraph "CFG forcom.google.android.material.color.utilities.HctSolver.nthVertex(DI)[D" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r27 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('n' int)])  (LINE:424)\l0x0002: SGET  (r1 I:double[]) =  com.google.android.material.color.utilities.HctSolver.Y_FROM_LINRGB double[] \l0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: AGET  (r3 I:??[long, double]) = (r1 I:??[long, double][]), (r2 I:??[int, short, byte, char]) \l0x0007: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:425)\l0x0008: AGET  (r6 I:??[long, double]) = (r1 I:??[long, double][]), (r5 I:??[int, short, byte, char]) \l0x000a: CONST  (r8 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:426)\l0x000b: AGET  (r9 I:??[long, double]) = (r1 I:??[long, double][]), (r8 I:??[int, short, byte, char]) \l0x000d: ARITH  (r1 I:int) = (r0 I:int) % (4 int)  (LINE:427)\l0x000f: CONST  (r11 I:??[long, double]) = (0 ??[long, double]) \l0x0011: CONST  (r13 I:??[long, double]) = (4636737291354636288(0x4059000000000000, double:100.0) ??[long, double]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IF  (r1 I:??[int, byte, short, char]) \> (r5 I:??[int, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: MOVE  (r15 I:??[long, double]) = (r11 I:??[long, double]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: ARITH  (r1 I:int) = (r0 I:int) % (2 int)  (LINE:428)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001d \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: MOVE  (r11 I:??[long, double]) = (r13 I:??[long, double]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: CONST  (r1 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:429)\l0x001f: CONST  (r13 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:18:0x0045 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: MOVE  (r17 I:??[long, double]) = (r15 I:??[long, double] A[D('coordA' double)])  (LINE:430)\l0x0024: MOVE  (r19 I:??[long, double]) = (r11 I:??[long, double] A[D('coordB' double)])  (LINE:431)\l0x0026: ARITH  (r21 I:double) = (r17 I:double A[D('g' double)]) * (r6 I:double A[D('kG' double)])  (LINE:432)\l0x0028: ARITH  (r21 I:double) = (r25 I:double A[D('y' double)]) \- (r21 I:double) \l0x002a: ARITH  (r23 I:double) = (r19 I:double A[D('b' double)]) * (r9 I:double A[D('kB' double)]) \l0x002c: ARITH  (r21 I:double) = (r21 I:double) \- (r23 I:double) \l0x002e: ARITH  (r21 I:double) = (r21 I:double) \/ (r3 I:double A[D('kR' double)]) \l0x0030: INVOKE  (r1 I:boolean) = (r21 I:double A[D('r' double)]) type: STATIC call: com.google.android.material.color.utilities.HctSolver.isBounded(double):boolean A[MD:(double):boolean (m)] (LINE:433)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|0x0034: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x003f \l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|0x0036: NEW_ARRAY  (r1 I:double[]) = (r13 I:int A[IMMUTABLE_TYPE]) type: double[]  (LINE:434)\l0x0038: APUT  (r1 I:??[long, double][]), (r2 I:??[int, short, byte, char]), (r21 I:??[long, double] A[D('r' double)]) \l0x003a: APUT  (r1 I:??[long, double][]), (r5 I:??[int, short, byte, char]), (r17 I:??[long, double] A[D('g' double)]) \l0x003c: APUT  (r1 I:??[long, double][]), (r8 I:??[int, short, byte, char]), (r19 I:??[long, double] A[D('b' double)]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|RETURN\l|0x003e: RETURN  (r1 I:double[]) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: NEW_ARRAY  (r1 I:double[]) = (r13 I:int A[IMMUTABLE_TYPE]) type: double[]  (LINE:436)\l0x0041: FILL_ARRAY  (r1 I:??[]), data: 0x0090: FILL_ARRAY_DATA  , data: [\-4616189618054758400, \-4616189618054758400, \-4616189618054758400] \l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|RETURN\l|0x0044: RETURN  (r1 I:double[]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0045|0x0045: CONST  (r1 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char])  (LINE:438)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0047|0x0047: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:26:0x006c \l}"];
Node_20 [shape=record,label="{20\:\ 0x0049|0x0049: MOVE  (r17 I:??[long, double]) = (r15 I:??[long, double] A[D('coordA' double)])  (LINE:439)\l0x004b: MOVE  (r19 I:??[long, double]) = (r11 I:??[long, double] A[D('coordB' double)])  (LINE:440)\l0x004d: ARITH  (r21 I:double) = (r19 I:double A[D('r' double)]) * (r3 I:double A[D('kR' double)])  (LINE:441)\l0x004f: ARITH  (r21 I:double) = (r25 I:double A[D('y' double)]) \- (r21 I:double) \l0x0051: ARITH  (r23 I:double) = (r17 I:double A[D('b' double)]) * (r9 I:double A[D('kB' double)]) \l0x0053: ARITH  (r21 I:double) = (r21 I:double) \- (r23 I:double) \l0x0055: ARITH  (r21 I:double) = (r21 I:double) \/ (r6 I:double A[D('kG' double)]) \l0x0057: INVOKE  (r1 I:boolean) = (r21 I:double A[D('g' double)]) type: STATIC call: com.google.android.material.color.utilities.HctSolver.isBounded(double):boolean A[MD:(double):boolean (m)] (LINE:442)\l}"];
Node_21 [shape=record,label="{21\:\ 0x005b|0x005b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0066 \l}"];
Node_22 [shape=record,label="{22\:\ 0x005d|0x005d: NEW_ARRAY  (r1 I:double[]) = (r13 I:int A[IMMUTABLE_TYPE]) type: double[]  (LINE:443)\l0x005f: APUT  (r1 I:??[long, double][]), (r2 I:??[int, short, byte, char]), (r19 I:??[long, double] A[D('r' double)]) \l0x0061: APUT  (r1 I:??[long, double][]), (r5 I:??[int, short, byte, char]), (r21 I:??[long, double] A[D('g' double)]) \l0x0063: APUT  (r1 I:??[long, double][]), (r8 I:??[int, short, byte, char]), (r17 I:??[long, double] A[D('b' double)]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0065|RETURN\l|0x0065: RETURN  (r1 I:double[]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0066|0x0066: NEW_ARRAY  (r1 I:double[]) = (r13 I:int A[IMMUTABLE_TYPE]) type: double[]  (LINE:445)\l0x0068: FILL_ARRAY  (r1 I:??[]), data: 0x00a0: FILL_ARRAY_DATA  , data: [\-4616189618054758400, \-4616189618054758400, \-4616189618054758400] \l}"];
Node_25 [shape=record,label="{25\:\ 0x006b|RETURN\l|0x006b: RETURN  (r1 I:double[]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x006c|0x006c: MOVE  (r17 I:??[long, double] A[D('b' double)]) = (r15 I:??[long, double] A[D('coordA' double)])  (LINE:448)\l0x006e: MOVE  (r19 I:??[long, double]) = (r11 I:??[long, double] A[D('coordB' double)])  (LINE:449)\l0x0070: ARITH  (r21 I:double) = (r17 I:double A[D('r' double)]) * (r3 I:double A[D('kR' double)])  (LINE:450)\l0x0072: ARITH  (r21 I:double) = (r25 I:double A[D('y' double)]) \- (r21 I:double) \l0x0074: ARITH  (r23 I:double) = (r19 I:double A[D('g' double)]) * (r6 I:double A[D('kG' double)]) \l0x0076: ARITH  (r21 I:double) = (r21 I:double) \- (r23 I:double) \l0x0078: ARITH  (r21 I:double) = (r21 I:double) \/ (r9 I:double A[D('kB' double)]) \l0x007a: INVOKE  (r1 I:boolean) = (r21 I:double A[D('b' double)]) type: STATIC call: com.google.android.material.color.utilities.HctSolver.isBounded(double):boolean A[MD:(double):boolean (m)] (LINE:451)\l}"];
Node_27 [shape=record,label="{27\:\ 0x007e|0x007e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0089 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0080|0x0080: NEW_ARRAY  (r1 I:double[]) = (r13 I:int A[IMMUTABLE_TYPE]) type: double[]  (LINE:452)\l0x0082: APUT  (r1 I:??[long, double][]), (r2 I:??[int, short, byte, char]), (r17 I:??[long, double] A[D('r' double)]) \l0x0084: APUT  (r1 I:??[long, double][]), (r5 I:??[int, short, byte, char]), (r19 I:??[long, double] A[D('g' double)]) \l0x0086: APUT  (r1 I:??[long, double][]), (r8 I:??[int, short, byte, char]), (r21 I:??[long, double] A[D('b' double)]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0088|RETURN\l|0x0088: RETURN  (r1 I:double[]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0089|0x0089: NEW_ARRAY  (r1 I:double[]) = (r13 I:int A[IMMUTABLE_TYPE]) type: double[]  (LINE:454)\l0x008b: FILL_ARRAY  (r1 I:??[]), data: 0x00b0: FILL_ARRAY_DATA  , data: [\-4616189618054758400, \-4616189618054758400, \-4616189618054758400] \l}"];
Node_31 [shape=record,label="{31\:\ 0x008e|RETURN\l|0x008e: RETURN  (r1 I:double[]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: MOVE  (r15 I:??[long, double]) = (r13 I:??[long, double]) \l}"];
MethodNode[shape=record,label="{static double[] com.google.android.material.color.utilities.HctSolver.nthVertex((r25 I:double A[D('y' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:int A[D('n' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0044 \-\> B:1:?, CROSS_EDGE: B:23:0x0065 \-\> B:1:?, CROSS_EDGE: B:25:0x006b \-\> B:1:?, CROSS_EDGE: B:29:0x0088 \-\> B:1:?, CROSS_EDGE: B:31:0x008e \-\> B:1:?, CROSS_EDGE: B:7:0x001a \-\> B:10:0x001e, CROSS_EDGE: B:5:0x0017 \-\> B:6:0x0018\lDebug Info:\l  0x0024\-0x0045: r17 'g' D\l  0x0026\-0x0045: r19 'b' D\l  0x0030\-0x0045: r21 'r' D\l  0x004b\-0x006c: r17 'b' D\l  0x004d\-0x006c: r19 'r' D\l  0x0057\-0x006c: r21 'g' D\l  0x0007\-0x00bf: r3 'kR' D\l  0x000a\-0x00bf: r6 'kG' D\l  0x000d\-0x00bf: r9 'kB' D\l  0x001e\-0x00bf: r11 'coordB' D\l  0x0018\-0x00bf: r15 'coordA' D\l  0x006e\-0x00bf: r17 'r' D\l  0x0070\-0x00bf: r19 'g' D\l  0x007a\-0x00bf: r21 'b' D\l  \-1 \-0x00bf: r25 'y' D\l  \-1 \-0x00bf: r27 'n' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_26;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_1;
Node_24 -> Node_25;
Node_25 -> Node_1;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_1;
Node_30 -> Node_31;
Node_31 -> Node_1;
Node_5 -> Node_6;
}

