digraph "CFG forcom.google.android.material.color.utilities.HctSolver.bisectToLimit(DD)[D" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:double[][]) = (r22 I:double A[D('y' double)]), (r24 I:double A[D('targetHue' double)]) type: STATIC call: com.google.android.material.color.utilities.HctSolver.bisectToSegment(double, double):double[][] A[MD:(double, double):double[][] (m)] (LINE:524)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:525)\l0x0005: AGET  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('segment' double[][])]), (r1 I:??[int, short, byte, char]) \l0x0007: INVOKE  (r2 I:double) = (r1 I:double[] A[D('left' double[])]) type: STATIC call: com.google.android.material.color.utilities.HctSolver.hueOf(double[]):double A[MD:(double[]):double (m)] (LINE:526)\l0x000b: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:527)\l0x000c: AGET  (r5 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('segment' double[][])]), (r4 I:??[int, short, byte, char]) \l0x000e: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:528)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|LOOP_START\lLOOP:0: B:3:0x000f\-\>B:22:0x0095\l|0x000f: CONST  (r7 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r6 I:??[int, byte, short, char] A[D('axis' int)]) \>= (r7 I:??[int, byte, short, char])  \-\> B:25:0x0099 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: AGET  (r7 I:??[long, double]) = (r1 I:??[long, double][] A[D('left' double[])]), (r6 I:??[int, short, byte, char] A[D('axis' int)])  (LINE:529)\l0x0014: AGET  (r9 I:??[long, double]) = (r5 I:??[long, double][] A[D('right' double[])]), (r6 I:??[int, short, byte, char] A[D('axis' int)]) \l0x0016: CMP_L  (r11 I:int) = (r7 I:double), (r9 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0095 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: CONST  (r7 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:530)\l0x001b: CONST  (r8 I:??[int, float, short, byte, char]) = (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char])  (LINE:531)\l0x001d: AGET  (r9 I:??[long, double]) = (r1 I:??[long, double][] A[D('left' double[])]), (r6 I:??[int, short, byte, char] A[D('axis' int)])  (LINE:532)\l0x001f: AGET  (r11 I:??[long, double]) = (r5 I:??[long, double][] A[D('right' double[])]), (r6 I:??[int, short, byte, char] A[D('axis' int)]) \l0x0021: CMP_G  (r13 I:int) = (r9 I:double), (r11 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IF  (r13 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:10:0x003a \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: AGET  (r9 I:??[long, double]) = (r1 I:??[long, double][] A[D('left' double[])]), (r6 I:??[int, short, byte, char] A[D('axis' int)])  (LINE:533)\l0x0027: INVOKE  (r9 I:double) = (r9 I:double) type: STATIC call: com.google.android.material.color.utilities.HctSolver.trueDelinearized(double):double A[MD:(double):double (m)]\l0x002b: INVOKE  (r7 I:int A[D('lPlane' int)]) = (r9 I:double) type: STATIC call: com.google.android.material.color.utilities.HctSolver.criticalPlaneBelow(double):int A[MD:(double):int (m)]\l0x002f: AGET  (r9 I:??[long, double]) = (r5 I:??[long, double][] A[D('right' double[])]), (r6 I:??[int, short, byte, char] A[D('axis' int)])  (LINE:534)\l0x0031: INVOKE  (r9 I:double) = (r9 I:double) type: STATIC call: com.google.android.material.color.utilities.HctSolver.trueDelinearized(double):double A[MD:(double):double (m)]\l0x0035: INVOKE  (r8 I:int A[D('rPlane' int)]) = (r9 I:double) type: STATIC call: com.google.android.material.color.utilities.HctSolver.criticalPlaneAbove(double):int A[MD:(double):int (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x004e|0x004e: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:539)\l0x004f: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lPlane' int)]) \l0x0050: MOVE  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('rPlane' int)]) \l0x0051: MOVE  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|LOOP_START\lLOOP:1: B:12:0x0052\-\>B:21:0x0092\l|0x0052: CONST  (r7 I:??[int, float, short, byte, char] A[D('lPlane' int)]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0054|0x0054: IF  (r15 I:??[int, byte, short, char] A[D('i' int)]) \>= (r7 I:??[int, byte, short, char])  \-\> B:27:0x0095 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0056|0x0056: ARITH  (r7 I:int) = (r14 I:int A[D('rPlane' int)]) \- (r13 I:int A[D('lPlane' int)])  (LINE:540)\l0x0058: INVOKE  (r7 I:int) = (r7 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x005c|0x005c: IF  (r7 I:??[int, byte, short, char]) \> (r4 I:??[int, byte, short, char])  \-\> B:17:0x005f \l}"];
Node_17 [shape=record,label="{17\:\ 0x005f|0x005f: ARITH  (r7 I:int) = (r13 I:int A[D('lPlane' int)]) + (r14 I:int A[D('rPlane' int)])  (LINE:543)\l0x0061: CAST (r7 I:double) = (double) (r7 I:int) \l0x0062: CONST  (r9 I:??[long, double]) = (4611686018427387904(0x4000000000000000, double:2.0) ??[long, double]) \l0x0064: ARITH  (r7 I:double) = (r7 I:double) \/ (r9 I:double) \l0x0065: INVOKE  (r7 I:double) = (r7 I:double) type: STATIC call: java.lang.Math.floor(double):double A[MD:(double):double (c)]\l0x0069: CAST (r11 I:int) = (int) (r7 I:double) \l0x006a: SGET  (r7 I:double[]) =  com.google.android.material.color.utilities.HctSolver.CRITICAL_PLANES double[]  (LINE:544)\l0x006c: AGET  (r9 I:??[long, double]) = (r7 I:??[long, double][]), (r11 I:??[int, short, byte, char] A[D('mPlane' int)]) \l0x006e: INVOKE  (r16 I:double[]) = \l  (r1 I:double[] A[D('left' double[])])\l  (r9 I:double A[D('midPlaneCoordinate' double)])\l  (r5 I:double[] A[D('right' double[])])\l  (r6 I:int A[D('axis' int)])\l type: STATIC call: com.google.android.material.color.utilities.HctSolver.setCoordinate(double[], double, double[], int):double[] A[MD:(double[], double, double[], int):double[] (m)] (LINE:545)\l0x0072: INVOKE  (r17 I:double) = (r16 I:double[] A[D('mid' double[])]) type: STATIC call: com.google.android.material.color.utilities.HctSolver.hueOf(double[]):double A[MD:(double[]):double (m)] (LINE:546)\l0x0076: MOVE  (r7 I:??[long, double]) = (r2 I:??[long, double] A[D('leftHue' double)])  (LINE:547)\l0x0077: MOVE  (r19 I:??[long, double]) = (r9 I:??[long, double] A[D('midPlaneCoordinate' double)]) \l0x0079: MOVE  (r9 I:??[long, double] A[D('midPlaneCoordinate' double)]) = (r24 I:??[long, double] A[D('targetHue' double)]) \l0x007b: MOVE  (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('mPlane' int)]) \l0x007d: MOVE  (r11 I:??[long, double] A[D('mPlane' int)]) = (r17 I:??[long, double] A[D('midHue' double)]) \l0x007f: INVOKE  (r7 I:boolean) = (r7 I:double), (r9 I:double), (r11 I:double) type: STATIC call: com.google.android.material.color.utilities.HctSolver.areInCyclicOrder(double, double, double):boolean A[MD:(double, double, double):boolean (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0083|0x0083: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x008b \l}"];
Node_19 [shape=record,label="{19\:\ 0x0085|0x0085: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('right' double[])]) = (r16 I:??[OBJECT, ARRAY] A[D('mid' double[])])  (LINE:548)\l0x0087: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('mPlane' int)])  (LINE:549)\l0x0089: MOVE  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('rPlane' int)]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0092|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0092|LOOP_END\lLOOP:1: B:12:0x0052\-\>B:21:0x0092\l|0x0092: ARITH  (r15 I:int) = (r15 I:int A[D('i' int)]) + (1 int)  (LINE:539)\l}"];
Node_20 [shape=record,label="{20\:\ 0x008b|0x008b: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('left' double[])]) = (r16 I:??[OBJECT, ARRAY] A[D('mid' double[])])  (LINE:551)\l0x008d: MOVE  (r2 I:??[long, double] A[D('leftHue' double)]) = (r17 I:??[long, double] A[D('midHue' double)])  (LINE:552)\l0x008f: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('mPlane' int)])  (LINE:553)\l0x0091: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lPlane' int)]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0092|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0095|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0095|LOOP_END\lLOOP:0: B:3:0x000f\-\>B:22:0x0095\l|0x0095: ARITH  (r6 I:int) = (r6 I:int A[D('axis' int)]) + (1 int)  (LINE:528)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0095|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|0x003a: AGET  (r9 I:??[long, double]) = (r1 I:??[long, double][] A[D('left' double[])]), (r6 I:??[int, short, byte, char] A[D('axis' int)])  (LINE:536)\l0x003c: INVOKE  (r9 I:double) = (r9 I:double) type: STATIC call: com.google.android.material.color.utilities.HctSolver.trueDelinearized(double):double A[MD:(double):double (m)]\l0x0040: INVOKE  (r7 I:int A[D('lPlane' int)]) = (r9 I:double) type: STATIC call: com.google.android.material.color.utilities.HctSolver.criticalPlaneAbove(double):int A[MD:(double):int (m)]\l0x0044: AGET  (r9 I:??[long, double]) = (r5 I:??[long, double][] A[D('right' double[])]), (r6 I:??[int, short, byte, char] A[D('axis' int)])  (LINE:537)\l0x0046: INVOKE  (r9 I:double) = (r9 I:double) type: STATIC call: com.google.android.material.color.utilities.HctSolver.trueDelinearized(double):double A[MD:(double):double (m)]\l0x004a: INVOKE  (r8 I:int A[D('rPlane' int)]) = (r9 I:double) type: STATIC call: com.google.android.material.color.utilities.HctSolver.criticalPlaneBelow(double):int A[MD:(double):int (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0095|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0099|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0099|0x0099: INVOKE  (r4 I:double[]) = (r1 I:double[] A[D('left' double[])]), (r5 I:double[] A[D('right' double[])]) type: STATIC call: com.google.android.material.color.utilities.HctSolver.midpoint(double[], double[]):double[] A[MD:(double[], double[]):double[] (m)] (LINE:559)\l}"];
Node_24 [shape=record,label="{24\:\ 0x009d|RETURN\l|0x009d: RETURN  (r4 I:double[]) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static double[] com.google.android.material.color.utilities.HctSolver.bisectToLimit((r22 I:double A[D('y' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:double A[D('targetHue' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0092 \-\> B:12:0x0052, CROSS_EDGE: B:20:0x008b \-\> B:21:0x0092, BACK_EDGE: B:22:0x0095 \-\> B:3:0x000f, CROSS_EDGE: B:13:0x0054 \-\> B:22:0x0095, CROSS_EDGE: B:10:0x003a \-\> B:11:0x004e, CROSS_EDGE: B:6:0x0018 \-\> B:22:0x0095\lDebug Info:\l  0x001b\-0x0052: r7 'lPlane' I\l  0x001d\-0x0052: r8 'rPlane' I\l  0x006e\-0x0079: r9 'midPlaneCoordinate' D\l  0x006a\-0x007d: r11 'mPlane' I\l  0x0052\-0x008a: r14 'rPlane' I\l  0x008a\-0x008b: r7 'rPlane' I\l  0x0072\-0x0092: r16 'mid' [D\l  0x0076\-0x0092: r17 'midHue' D\l  0x0079\-0x0092: r19 'midPlaneCoordinate' D\l  0x007d\-0x0092: r21 'mPlane' I\l  0x0052\-0x0095: r13 'lPlane' I\l  0x008b\-0x0095: r14 'rPlane' I\l  0x0052\-0x0095: r15 'i' I\l  0x000f\-0x0099: r6 'axis' I\l  0x0004\-0x009d: r0 'segment' [[D\l  0x0007\-0x009d: r1 'left' [D\l  0x000b\-0x009d: r2 'leftHue' D\l  0x000e\-0x009d: r5 'right' [D\l  \-1 \-0x009d: r22 'y' D\l  \-1 \-0x009d: r24 'targetHue' D\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_25;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_26;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_27;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_28[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_30;
Node_30 -> Node_21;
Node_21 -> Node_12;
Node_20 -> Node_29;
Node_29 -> Node_21;
Node_28 -> Node_22;
Node_22 -> Node_3;
Node_27 -> Node_22;
Node_10 -> Node_11;
Node_26 -> Node_22;
Node_25 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_1;
}

