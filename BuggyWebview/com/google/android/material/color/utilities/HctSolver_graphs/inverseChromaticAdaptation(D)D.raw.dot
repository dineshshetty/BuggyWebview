digraph "CFG forcom.google.android.material.color.utilities.HctSolver.inverseChromaticAdaptation(D)D" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:double) = (r8 I:double A[D('adapted' double)]) type: STATIC call: java.lang.Math.abs(double):double A[MD:(double):double (c)] (LINE:563)\l0x0004: CONST  (r2 I:??[long, double]) = (4628329633800288993(0x403b2147ae147ae1, double:27.13) ??[long, double])  (LINE:564)\l0x0009: ARITH  (r2 I:double) = (r2 I:double) * (r0 I:double A[D('adaptedAbs' double)]) \l0x000b: CONST  (r4 I:??[long, double]) = (4645744490609377280(0x4079000000000000, double:400.0) ??[long, double]) \l0x000d: ARITH  (r4 I:double) = (r4 I:double) \- (r0 I:double A[D('adaptedAbs' double)]) \l0x000e: ARITH  (r2 I:double) = (r2 I:double) \/ (r4 I:double) \l0x000f: CONST  (r4 I:??[long, double]) = (0 ??[long, double]) \l0x0011: INVOKE  (r2 I:double) = (r4 I:double), (r2 I:double) type: STATIC call: java.lang.Math.max(double, double):double A[MD:(double, double):double (c)]\l0x0015: INVOKE  (r4 I:int) = (r8 I:double A[D('adapted' double)]) type: STATIC call: com.google.android.material.color.utilities.MathUtils.signum(double):int A[MD:(double):int (m)] (LINE:565)\l0x0019: CAST (r4 I:double) = (double) (r4 I:int) \l0x001a: CONST  (r6 I:??[long, double]) = (4612543846927839427(0x40030c30c30c30c3, double:2.380952380952381) ??[long, double]) \l0x001f: INVOKE  (r6 I:double) = (r2 I:double A[D('base' double)]), (r6 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x0023: ARITH  (r4 I:double) = (r4 I:double) * (r6 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0025|RETURN\l|0x0025: RETURN  (r4 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static double com.google.android.material.color.utilities.HctSolver.inverseChromaticAdaptation((r8 I:double A[D('adapted' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  0x0004\-0x0025: r0 'adaptedAbs' D\l  0x0015\-0x0025: r2 'base' D\l  \-1 \-0x0025: r8 'adapted' D\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

