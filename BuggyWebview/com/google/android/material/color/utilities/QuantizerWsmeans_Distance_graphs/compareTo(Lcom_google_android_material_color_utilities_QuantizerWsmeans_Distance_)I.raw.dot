digraph "CFG forcom.google.android.material.color.utilities.QuantizerWsmeans.Distance.compareTo(Lcom\/google\/android\/material\/color\/utilities\/QuantizerWsmeans$Distance;)I" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:double) = (r3 I:com.google.android.material.color.utilities.QuantizerWsmeans$Distance) com.google.android.material.color.utilities.QuantizerWsmeans.Distance.distance double  (LINE:55)\l0x0002: INVOKE  (r0 I:java.lang.Double) = (r0 I:double) type: STATIC call: java.lang.Double.valueOf(double):java.lang.Double A[MD:(double):java.lang.Double (c)]\l0x0006: IGET  (r1 I:double) = \l  (r4 I:com.google.android.material.color.utilities.QuantizerWsmeans$Distance A[D('other' com.google.android.material.color.utilities.QuantizerWsmeans$Distance)])\l com.google.android.material.color.utilities.QuantizerWsmeans.Distance.distance double \l0x0008: INVOKE  (r1 I:java.lang.Double) = (r1 I:double) type: STATIC call: java.lang.Double.valueOf(double):java.lang.Double A[MD:(double):java.lang.Double (c)]\l0x000c: INVOKE  (r0 I:int) = (r0 I:java.lang.Double), (r1 I:java.lang.Double) type: VIRTUAL call: java.lang.Double.compareTo(java.lang.Double):int A[MD:(java.lang.Double):int (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int com.google.android.material.color.utilities.QuantizerWsmeans.Distance.compareTo((r3 'this' I:com.google.android.material.color.utilities.QuantizerWsmeans$Distance A[IMMUTABLE_TYPE, THIS]), (r4 I:com.google.android.material.color.utilities.QuantizerWsmeans$Distance A[D('other' com.google.android.material.color.utilities.QuantizerWsmeans$Distance), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0010: r4 'other' Lcom\/google\/android\/material\/color\/utilities\/QuantizerWsmeans$Distance;\lREPLACED_BY: com.google.android.material.color.utilities.QuantizerWsmeans.Distance.compareTo(com.google.android.material.color.utilities.QuantizerWsmeans$Distance):int\lBRIDGED_BY: com.google.android.material.color.utilities.QuantizerWsmeans.Distance.compareTo(com.google.android.material.color.utilities.QuantizerWsmeans$Distance):int\lMETHOD_OVERRIDE: [ClspMth\{java.lang.Comparable.compareTo(T):int\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

