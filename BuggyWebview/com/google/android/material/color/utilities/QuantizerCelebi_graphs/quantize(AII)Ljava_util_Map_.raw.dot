digraph "CFG forcom.google.android.material.color.utilities.QuantizerCelebi.quantize([II)Ljava\/util\/Map;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:com.google.android.material.color.utilities.QuantizerWu) =  com.google.android.material.color.utilities.QuantizerWu  (LINE:52)\l0x0002: INVOKE  (r0 I:com.google.android.material.color.utilities.QuantizerWu) type: DIRECT call: com.google.android.material.color.utilities.QuantizerWu.\<init\>():void A[MD:():void (m)]\l0x0005: INVOKE  (r1 I:com.google.android.material.color.utilities.QuantizerResult) = \l  (r0 I:com.google.android.material.color.utilities.QuantizerWu A[D('wu' com.google.android.material.color.utilities.QuantizerWu)])\l  (r9 I:int[] A[D('pixels' int[])])\l  (r10 I:int A[D('maxColors' int)])\l type: VIRTUAL call: com.google.android.material.color.utilities.QuantizerWu.quantize(int[], int):com.google.android.material.color.utilities.QuantizerResult A[MD:(int[], int):com.google.android.material.color.utilities.QuantizerResult (m)] (LINE:53)\l0x0009: IGET  (r2 I:java.util.Map\<java.lang.Integer, java.lang.Integer\>) = \l  (r1 I:com.google.android.material.color.utilities.QuantizerResult A[D('wuResult' com.google.android.material.color.utilities.QuantizerResult)])\l com.google.android.material.color.utilities.QuantizerResult.colorToCount java.util.Map  (LINE:55)\l0x000b: INVOKE  (r2 I:java.util.Set) = (r2 I:java.util.Map) type: INTERFACE call: java.util.Map.keySet():java.util.Set A[MD:():java.util.Set\<K\> (c)]\l0x000f: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:56)\l0x0010: INVOKE  (r4 I:int) = (r2 I:java.util.Set A[D('wuClustersAsObjects' java.util.Set\<java.lang.Integer\>)]) type: INTERFACE call: java.util.Set.size():int A[MD:():int (c)] (LINE:57)\l0x0014: NEW_ARRAY  (r4 I:int[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0016: INVOKE  (r5 I:java.util.Iterator) = (r2 I:java.util.Set A[D('wuClustersAsObjects' java.util.Set\<java.lang.Integer\>)]) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:58)\l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|LOOP_START\lLOOP:0: B:12:0x001a\-\>B:14:0x0020\l|0x001a: INVOKE  (r6 I:boolean) = (r5 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|0x001e: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0030 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|LOOP_END\lLOOP:0: B:12:0x001a\-\>B:14:0x0020\l|0x0020: INVOKE  (r6 I:java.lang.Object) = (r5 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0024: CHECK_CAST (r6 I:java.lang.Integer) = (java.lang.Integer) (r6 I:??[OBJECT, ARRAY]) \l0x0026: ARITH  (r7 I:int) = (r3 I:int A[D('index' int)]) + (1 int)  (LINE:59)\l0x0028: INVOKE  (r8 I:int) = (r6 I:java.lang.Integer A[D('argb' java.lang.Integer)]) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x002c: APUT  \l  (r4 I:??[int, float][] A[D('wuClusters' int[])])\l  (r3 I:??[int, short, byte, char])\l  (r8 I:??[int, float, short, byte, char])\l \l0x002e: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)])  (LINE:60)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0030|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0030|0x0030: INVOKE  (r5 I:java.util.Map) = (r9 I:int[] A[D('pixels' int[])]), (r4 I:int[] A[D('wuClusters' int[])]), (r10 I:int A[D('maxColors' int)]) type: STATIC call: com.google.android.material.color.utilities.QuantizerWsmeans.quantize(int[], int[], int):java.util.Map A[MD:(int[], int[], int):java.util.Map\<java.lang.Integer, java.lang.Integer\> (m)] (LINE:62)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|RETURN\l|0x0034: RETURN  (r5 I:java.util.Map\<java.lang.Integer, java.lang.Integer\>) \l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static java.util.Map\<java.lang.Integer, java.lang.Integer\> com.google.android.material.color.utilities.QuantizerCelebi.quantize((r9 I:int[] A[D('pixels' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('maxColors' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x0020 \-\> B:12:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0010\-0x0028: r3 'index' I\l  0x0026\-0x002e: r6 'argb' Ljava\/lang\/Integer;\l  0x0028\-0x0030: r7 'index' I\l  0x0005\-0x0034: r0 'wu' Lcom\/google\/android\/material\/color\/utilities\/QuantizerWu;\l  0x0009\-0x0034: r1 'wuResult' Lcom\/google\/android\/material\/color\/utilities\/QuantizerResult;\l  0x000f\-0x0034: r2 'wuClustersAsObjects' Ljava\/util\/Set;, signature: Ljava\/util\/Set\<Ljava\/lang\/Integer;\>;\l  0x0030\-0x0034: r3 'index' I\l  0x0016\-0x0034: r4 'wuClusters' [I\l  \-1 \-0x0034: r9 'pixels' [I\l  \-1 \-0x0034: r10 'maxColors' I\lSIGNATURE: ([II)Ljava\/util\/Map\<Ljava\/lang\/Integer;Ljava\/lang\/Integer;\>;\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_12;
Node_17 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_10;
}

