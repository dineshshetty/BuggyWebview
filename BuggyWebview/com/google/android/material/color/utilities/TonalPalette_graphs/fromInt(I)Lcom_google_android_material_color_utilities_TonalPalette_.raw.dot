digraph "CFG forcom.google.android.material.color.utilities.TonalPalette.fromInt(I)Lcom\/google\/android\/material\/color\/utilities\/TonalPalette;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:com.google.android.material.color.utilities.Hct) = (r5 I:int A[D('argb' int)]) type: STATIC call: com.google.android.material.color.utilities.Hct.fromInt(int):com.google.android.material.color.utilities.Hct A[MD:(int):com.google.android.material.color.utilities.Hct (m)] (LINE:44)\l0x0004: INVOKE  (r1 I:double) = (r0 I:com.google.android.material.color.utilities.Hct A[D('hct' com.google.android.material.color.utilities.Hct)]) type: VIRTUAL call: com.google.android.material.color.utilities.Hct.getHue():double A[MD:():double (m)] (LINE:45)\l0x0008: INVOKE  (r3 I:double) = (r0 I:com.google.android.material.color.utilities.Hct A[D('hct' com.google.android.material.color.utilities.Hct)]) type: VIRTUAL call: com.google.android.material.color.utilities.Hct.getChroma():double A[MD:():double (m)]\l0x000c: INVOKE  (r1 I:com.google.android.material.color.utilities.TonalPalette) = (r1 I:double), (r3 I:double) type: STATIC call: com.google.android.material.color.utilities.TonalPalette.fromHueAndChroma(double, double):com.google.android.material.color.utilities.TonalPalette A[MD:(double, double):com.google.android.material.color.utilities.TonalPalette (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|RETURN\l|0x0010: RETURN  (r1 I:com.google.android.material.color.utilities.TonalPalette) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final com.google.android.material.color.utilities.TonalPalette com.google.android.material.color.utilities.TonalPalette.fromInt((r5 I:int A[D('argb' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0010: r0 'hct' Lcom\/google\/android\/material\/color\/utilities\/Hct;\l  \-1 \-0x0010: r5 'argb' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

