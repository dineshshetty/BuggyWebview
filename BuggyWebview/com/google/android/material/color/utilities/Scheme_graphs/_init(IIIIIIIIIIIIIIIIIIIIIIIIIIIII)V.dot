digraph "CFG forcom.google.android.material.color.utilities.Scheme.\<init\>(IIIIIIIIIIIIIIIIIIIIIIIIIIIII)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|r16.primary = r17\lr16.onPrimary = r18\lr16.primaryContainer = r19\lr16.onPrimaryContainer = r20\lr16.secondary = r21\lr16.onSecondary = r22\lr16.secondaryContainer = r23\lr16.onSecondaryContainer = r24\lr16.tertiary = r25\lr16.onTertiary = r26\lr16.tertiaryContainer = r27\lr16.onTertiaryContainer = r28\lr16.error = r29\lr16.onError = r30\lr16.errorContainer = r31\lr16.onErrorContainer = r32\lr16.background = r33\lr16.onBackground = r34\lr16.surface = r35\lr16.onSurface = r36\lr16.surfaceVariant = r37\lr16.onSurfaceVariant = r38\lr16.outline = r39\lr16.outlineVariant = r40\lr16.shadow = r41\lr16.scrim = r42\lr16.inverseSurface = r43\lr16.inverseOnSurface = r44\lr16.inversePrimary = r45\l}"];
Node_7 [shape=record,label="{7\:\ 0x0079|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.color.utilities.Scheme.\<init\>((r16v0 'this' com.google.android.material.color.utilities.Scheme A[IMMUTABLE_TYPE, THIS]), (r17v0 'primary' int A[D('primary' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'onPrimary' int A[D('onPrimary' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'primaryContainer' int A[D('primaryContainer' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'onPrimaryContainer' int A[D('onPrimaryContainer' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'secondary' int A[D('secondary' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'onSecondary' int A[D('onSecondary' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'secondaryContainer' int A[D('secondaryContainer' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 'onSecondaryContainer' int A[D('onSecondaryContainer' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 'tertiary' int A[D('tertiary' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 'onTertiary' int A[D('onTertiary' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 'tertiaryContainer' int A[D('tertiaryContainer' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28v0 'onTertiaryContainer' int A[D('onTertiaryContainer' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29v0 'error' int A[D('error' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30v0 'onError' int A[D('onError' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31v0 'errorContainer' int A[D('errorContainer' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 'onErrorContainer' int A[D('onErrorContainer' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33v0 'background' int A[D('background' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34v0 'onBackground' int A[D('onBackground' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r35v0 'surface' int A[D('surface' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r36v0 'onSurface' int A[D('onSurface' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r37v0 'surfaceVariant' int A[D('surfaceVariant' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r38v0 'onSurfaceVariant' int A[D('onSurfaceVariant' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r39v0 'outline' int A[D('outline' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r40v0 'outlineVariant' int A[D('outlineVariant' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r41v0 'shadow' int A[D('shadow' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r42v0 'scrim' int A[D('scrim' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r43v0 'inverseSurface' int A[D('inverseSurface' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r44v0 'inverseOnSurface' int A[D('inverseOnSurface' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r45v0 'inversePrimary' int A[D('inversePrimary' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

