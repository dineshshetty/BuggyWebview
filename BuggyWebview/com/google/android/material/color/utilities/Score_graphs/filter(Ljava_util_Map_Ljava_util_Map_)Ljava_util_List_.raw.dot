digraph "CFG forcom.google.android.material.color.utilities.Score.filter(Ljava\/util\/Map;Ljava\/util\/Map;)Ljava\/util\/List;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:161)\l0x0002: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0005: INVOKE  (r1 I:java.util.Set) = \l  (r13 I:java.util.Map A[D('colorsToCam' java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:162)\l0x0009: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x000d|LOOP_START\lLOOP:0: B:26:0x000d\-\>B:41:0x000d\l|0x000d: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0011|0x0011: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x005c \l}"];
Node_28 [shape=record,label="{28\:\ 0x0013|0x0013: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0017: CHECK_CAST (r2 I:java.util.Map$Entry) = (java.util.Map$Entry) (r2 I:??[OBJECT, ARRAY]) \l0x0019: INVOKE  (r3 I:java.lang.Object) = \l  (r2 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)] (LINE:163)\l0x001d: CHECK_CAST (r3 I:java.lang.Integer) = (java.lang.Integer) (r3 I:??[OBJECT, ARRAY]) \l0x001f: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x0023: INVOKE  (r4 I:java.lang.Object) = \l  (r2 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)] (LINE:164)\l0x0027: CHECK_CAST (r4 I:com.google.android.material.color.utilities.Cam16) = (com.google.android.material.color.utilities.Cam16) (r4 I:??[OBJECT, ARRAY]) \l0x0029: INVOKE  (r5 I:java.lang.Integer) = (r3 I:int A[D('color' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:165)\l0x002d: INVOKE  (r5 I:java.lang.Object) = \l  (r12 I:java.util.Map A[D('colorsToExcitedProportion' java.util.Map\<java.lang.Integer, java.lang.Double\>)])\l  (r5 I:java.lang.Object)\l type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0031: CHECK_CAST (r5 I:java.lang.Double) = (java.lang.Double) (r5 I:??[OBJECT, ARRAY]) \l0x0033: INVOKE  (r5 I:double) = (r5 I:java.lang.Double) type: VIRTUAL call: java.lang.Double.doubleValue():double A[MD:():double (c)]\l0x0037: INVOKE  (r7 I:double) = (r4 I:com.google.android.material.color.utilities.Cam16 A[D('cam' com.google.android.material.color.utilities.Cam16)]) type: VIRTUAL call: com.google.android.material.color.utilities.Cam16.getChroma():double A[MD:():double (m)] (LINE:167)\l0x003b: CONST  (r9 I:??[long, double]) = (4624633867356078080(0x402e000000000000, double:15.0) ??[long, double]) \l0x003d: CMP_L  (r11 I:int) = (r7 I:double), (r9 I:double) \l}"];
Node_29 [shape=record,label="{29\:\ 0x003f|0x003f: IF  (r11 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:42:0x000d \l}"];
Node_38 [shape=record,label="{38\:\ 0x0041|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0041|0x0041: INVOKE  (r7 I:double) = (r3 I:int A[D('color' int)]) type: STATIC call: com.google.android.material.color.utilities.ColorUtils.lstarFromArgb(int):double A[MD:(int):double (m)] (LINE:168)\l0x0045: CONST  (r9 I:??[long, double]) = (4621819117588971520(0x4024000000000000, double:10.0) ??[long, double]) \l0x0047: CMP_L  (r11 I:int) = (r7 I:double), (r9 I:double) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0049|0x0049: IF  (r11 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:43:0x000d \l}"];
Node_39 [shape=record,label="{39\:\ 0x004b|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x004b|0x004b: CONST  (r7 I:??[long, double]) = (4576918229304087675(0x3f847ae147ae147b, double:0.01) ??[long, double]) \l0x0050: CMP_L  (r9 I:int) = (r5 I:double A[D('proportion' double)]), (r7 I:double) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0052|0x0052: IF  (r9 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:44:0x000d \l}"];
Node_40 [shape=record,label="{40\:\ 0x0054|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0054|0x0054: INVOKE  (r7 I:java.lang.Integer) = (r3 I:int A[D('color' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:170)\l0x0058: INVOKE  (r0 I:java.util.List A[D('filtered' java.util.List\<java.lang.Integer\>)]), (r7 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x000d|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x000d|LOOP_END\lSYNTHETIC\lLOOP:0: B:26:0x000d\-\>B:41:0x000d\l}"];
Node_44 [shape=record,label="{44\:\ 0x000d|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x000d|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x000d|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x005c|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x005c|RETURN\l|0x005c: RETURN  (r0 I:java.util.List\<java.lang.Integer\> A[D('filtered' java.util.List\<java.lang.Integer\>)])  (LINE:173)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static java.util.List\<java.lang.Integer\> com.google.android.material.color.utilities.Score.filter((r12 I:java.util.Map\<java.lang.Integer, java.lang.Double\> A[D('colorsToExcitedProportion' java.util.Map\<java.lang.Integer, java.lang.Double\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\> A[D('colorsToCam' java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x0054 \-\> B:26:0x000d, BACK_EDGE: B:33:0x0052 \-\> B:26:0x000d, BACK_EDGE: B:31:0x0049 \-\> B:26:0x000d, BACK_EDGE: B:29:0x003f \-\> B:26:0x000d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0019\-0x005b: r2 'entry' Ljava\/util\/Map$Entry;, signature: Ljava\/util\/Map$Entry\<Ljava\/lang\/Integer;Lcom\/google\/android\/material\/color\/utilities\/Cam16;\>;\l  0x0023\-0x005b: r3 'color' I\l  0x0029\-0x005b: r4 'cam' Lcom\/google\/android\/material\/color\/utilities\/Cam16;\l  0x0037\-0x005b: r5 'proportion' D\l  0x0005\-0x005c: r0 'filtered' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/lang\/Integer;\>;\l  0x0000\-0x005c: r12 'colorsToExcitedProportion' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Ljava\/lang\/Double;\>;\l  0x0000\-0x005c: r13 'colorsToCam' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Lcom\/google\/android\/material\/color\/utilities\/Cam16;\>;\lSIGNATURE: (Ljava\/util\/Map\<Ljava\/lang\/Integer;Ljava\/lang\/Double;\>;Ljava\/util\/Map\<Ljava\/lang\/Integer;Lcom\/google\/android\/material\/color\/utilities\/Cam16;\>;)Ljava\/util\/List\<Ljava\/lang\/Integer;\>;\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_37;
Node_28 -> Node_29;
Node_29 -> Node_38[style=dashed];
Node_29 -> Node_42;
Node_38 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_39[style=dashed];
Node_31 -> Node_43;
Node_39 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_40[style=dashed];
Node_33 -> Node_44;
Node_40 -> Node_34;
Node_34 -> Node_45;
Node_45 -> Node_41;
Node_41 -> Node_26;
Node_44 -> Node_41;
Node_43 -> Node_41;
Node_42 -> Node_41;
Node_37 -> Node_36;
Node_36 -> Node_24;
}

