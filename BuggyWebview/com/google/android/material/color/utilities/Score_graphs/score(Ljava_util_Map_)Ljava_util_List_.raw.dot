digraph "CFG forcom.google.android.material.color.utilities.Score.score(Ljava\/util\/Map;)Ljava\/util\/List;" {
Node_64 [shape=record,label="{64\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_66 [shape=record,label="{66\:\ 0x0000|0x0000: CONST  (r0 I:??[long, double]) = (0 ??[long, double])  (LINE:64)\l0x0002: INVOKE  (r2 I:java.util.Set) = (r23 I:java.util.Map A[D('colorsToPopulation' java.util.Map\<java.lang.Integer, java.lang.Integer\>)]) type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:65)\l0x0006: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_67 [shape=record,label="{67\:\ 0x000a|LOOP_START\lLOOP:0: B:67:0x000a\-\>B:69:0x0010\l|0x000a: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_68 [shape=record,label="{68\:\ 0x000e|0x000e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:112:0x0023 \l}"];
Node_69 [shape=record,label="{69\:\ 0x0010|LOOP_END\lLOOP:0: B:67:0x000a\-\>B:69:0x0010\l|0x0010: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0014: CHECK_CAST (r3 I:java.util.Map$Entry) = (java.util.Map$Entry) (r3 I:??[OBJECT, ARRAY]) \l0x0016: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.Integer, java.lang.Integer\>)]) type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)] (LINE:66)\l0x001a: CHECK_CAST (r4 I:java.lang.Integer) = (java.lang.Integer) (r4 I:??[OBJECT, ARRAY]) \l0x001c: INVOKE  (r4 I:int) = (r4 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x0020: CAST (r4 I:double) = (double) (r4 I:int) \l0x0021: ARITH  (r0 I:double) = (r0 I:double A[D('populationSum' double)]) + (r4 I:double) \l}"];
Node_112 [shape=record,label="{112\:\ 0x0023|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x0023|0x0023: NEW_INSTANCE  (r2 I:java.util.HashMap) =  java.util.HashMap  (LINE:72)\l0x0025: INVOKE  (r2 I:java.util.HashMap) type: DIRECT call: java.util.HashMap.\<init\>():void A[MD:():void (c)]\l0x0028: CONST  (r3 I:??[int, float, short, byte, char]) = (361(0x169, float:5.06E\-43) ??[int, float, short, byte, char])  (LINE:73)\l0x002a: NEW_ARRAY  (r3 I:double[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: double[] \l0x002c: INVOKE  (r4 I:java.util.Set) = (r23 I:java.util.Map A[D('colorsToPopulation' java.util.Map\<java.lang.Integer, java.lang.Integer\>)]) type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:74)\l0x0030: INVOKE  (r4 I:java.util.Iterator) = (r4 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_71 [shape=record,label="{71\:\ 0x0034|LOOP_START\lLOOP:1: B:71:0x0034\-\>B:73:0x003a\l|0x0034: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_72 [shape=record,label="{72\:\ 0x0038|0x0038: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:113:0x0071 \l}"];
Node_73 [shape=record,label="{73\:\ 0x003a|LOOP_END\lLOOP:1: B:71:0x0034\-\>B:73:0x003a\l|0x003a: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x003e: CHECK_CAST (r5 I:java.util.Map$Entry) = (java.util.Map$Entry) (r5 I:??[OBJECT, ARRAY]) \l0x0040: INVOKE  (r6 I:java.lang.Object) = (r5 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.Integer, java.lang.Integer\>)]) type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)] (LINE:75)\l0x0044: CHECK_CAST (r6 I:java.lang.Integer) = (java.lang.Integer) (r6 I:??[OBJECT, ARRAY]) \l0x0046: INVOKE  (r6 I:int) = (r6 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x004a: INVOKE  (r7 I:java.lang.Object) = (r5 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.Integer, java.lang.Integer\>)]) type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)] (LINE:76)\l0x004e: CHECK_CAST (r7 I:java.lang.Integer) = (java.lang.Integer) (r7 I:??[OBJECT, ARRAY]) \l0x0050: INVOKE  (r7 I:int) = (r7 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x0054: CAST (r7 I:double) = (double) (r7 I:int) \l0x0055: ARITH  (r9 I:double) = (r7 I:double A[D('population' double)]) \/ (r0 I:double A[D('populationSum' double)])  (LINE:77)\l0x0057: INVOKE  (r11 I:com.google.android.material.color.utilities.Cam16) = (r6 I:int A[D('color' int)]) type: STATIC call: com.google.android.material.color.utilities.Cam16.fromInt(int):com.google.android.material.color.utilities.Cam16 A[MD:(int):com.google.android.material.color.utilities.Cam16 (m)] (LINE:79)\l0x005b: INVOKE  (r12 I:java.lang.Integer) = (r6 I:int A[D('color' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:80)\l0x005f: INVOKE  \l  (r2 I:java.util.Map A[D('colorsToCam' java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l  (r12 I:java.lang.Object)\l  (r11 I:java.lang.Object A[D('cam' com.google.android.material.color.utilities.Cam16)])\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l0x0062: INVOKE  (r12 I:double) = (r11 I:com.google.android.material.color.utilities.Cam16 A[D('cam' com.google.android.material.color.utilities.Cam16)]) type: VIRTUAL call: com.google.android.material.color.utilities.Cam16.getHue():double A[MD:():double (m)] (LINE:82)\l0x0066: INVOKE  (r12 I:long) = (r12 I:double) type: STATIC call: java.lang.Math.round(double):long A[MD:(double):long (c)]\l0x006a: CAST (r13 I:int) = (int) (r12 I:long) \l0x006b: AGET  (r14 I:??[long, double]) = (r3 I:??[long, double][] A[D('hueProportions' double[])]), (r13 I:??[int, short, byte, char] A[D('hue' int)])  (LINE:83)\l0x006d: ARITH  (r14 I:double) = (r14 I:double) + (r9 I:double A[D('proportion' double)]) \l0x006e: APUT  \l  (r3 I:??[long, double][] A[D('hueProportions' double[])])\l  (r13 I:??[int, short, byte, char] A[D('hue' int)])\l  (r14 I:??[long, double])\l \l}"];
Node_113 [shape=record,label="{113\:\ 0x0071|SYNTHETIC\l}"];
Node_74 [shape=record,label="{74\:\ 0x0071|0x0071: NEW_INSTANCE  (r4 I:java.util.HashMap) =  java.util.HashMap  (LINE:88)\l0x0073: INVOKE  (r4 I:java.util.HashMap) type: DIRECT call: java.util.HashMap.\<init\>():void A[MD:():void (c)]\l0x0076: INVOKE  (r5 I:java.util.Set) = \l  (r2 I:java.util.Map A[D('colorsToCam' java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:89)\l0x007a: INVOKE  (r5 I:java.util.Iterator) = (r5 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_75 [shape=record,label="{75\:\ 0x007e|LOOP_START\lLOOP:2: B:75:0x007e\-\>B:81:0x00b5\l|0x007e: INVOKE  (r6 I:boolean) = (r5 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_76 [shape=record,label="{76\:\ 0x0082|0x0082: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:114:0x00c1 \l}"];
Node_77 [shape=record,label="{77\:\ 0x0084|0x0084: INVOKE  (r6 I:java.lang.Object) = (r5 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0088: CHECK_CAST (r6 I:java.util.Map$Entry) = (java.util.Map$Entry) (r6 I:??[OBJECT, ARRAY]) \l0x008a: INVOKE  (r7 I:java.lang.Object) = \l  (r6 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)] (LINE:90)\l0x008e: CHECK_CAST (r7 I:java.lang.Integer) = (java.lang.Integer) (r7 I:??[OBJECT, ARRAY]) \l0x0090: INVOKE  (r7 I:int) = (r7 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x0094: INVOKE  (r8 I:java.lang.Object) = \l  (r6 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)] (LINE:91)\l0x0098: CHECK_CAST (r8 I:com.google.android.material.color.utilities.Cam16) = (com.google.android.material.color.utilities.Cam16) (r8 I:??[OBJECT, ARRAY]) \l0x009a: INVOKE  (r9 I:double) = (r8 I:com.google.android.material.color.utilities.Cam16 A[D('cam' com.google.android.material.color.utilities.Cam16)]) type: VIRTUAL call: com.google.android.material.color.utilities.Cam16.getHue():double A[MD:():double (m)] (LINE:92)\l0x009e: INVOKE  (r9 I:long) = (r9 I:double) type: STATIC call: java.lang.Math.round(double):long A[MD:(double):long (c)]\l0x00a2: CAST (r10 I:int) = (int) (r9 I:long) \l0x00a3: CONST  (r11 I:??[long, double]) = (0 ??[long, double])  (LINE:94)\l0x00a5: ARITH  (r9 I:int) = (r10 I:int A[D('hue' int)]) + (\-15 int)  (LINE:95)\l}"];
Node_78 [shape=record,label="{78\:\ 0x00a7|LOOP_START\lLOOP:3: B:78:0x00a7\-\>B:80:0x00ab\l|0x00a7: ARITH  (r13 I:int) = (r10 I:int A[D('hue' int)]) + (15 int) \l}"];
Node_79 [shape=record,label="{79\:\ 0x00a9|0x00a9: IF  (r9 I:??[int, byte, short, char] A[D('j' int)]) \>= (r13 I:??[int, byte, short, char])  \-\> B:115:0x00b5 \l}"];
Node_80 [shape=record,label="{80\:\ 0x00ab|LOOP_END\lLOOP:3: B:78:0x00a7\-\>B:80:0x00ab\l|0x00ab: INVOKE  (r13 I:int) = (r9 I:int A[D('j' int)]) type: STATIC call: com.google.android.material.color.utilities.MathUtils.sanitizeDegreesInt(int):int A[MD:(int):int (m)] (LINE:96)\l0x00af: AGET  (r14 I:??[long, double]) = (r3 I:??[long, double][] A[D('hueProportions' double[])]), (r13 I:??[int, short, byte, char] A[D('neighborHue' int)])  (LINE:97)\l0x00b1: ARITH  (r11 I:double) = (r11 I:double A[D('excitedProportion' double)]) + (r14 I:double) \l0x00b2: ARITH  (r9 I:int) = (r9 I:int A[D('j' int)]) + (1 int)  (LINE:95)\l}"];
Node_115 [shape=record,label="{115\:\ 0x00b5|SYNTHETIC\l}"];
Node_81 [shape=record,label="{81\:\ 0x00b5|LOOP_END\lLOOP:2: B:75:0x007e\-\>B:81:0x00b5\l|0x00b5: INVOKE  (r9 I:java.lang.Integer) = (r7 I:int A[D('color' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:100)\l0x00b9: INVOKE  (r13 I:java.lang.Double) = (r11 I:double A[D('excitedProportion' double)]) type: STATIC call: java.lang.Double.valueOf(double):java.lang.Double A[MD:(double):java.lang.Double (c)]\l0x00bd: INVOKE  \l  (r4 I:java.util.Map A[D('colorsToExcitedProportion' java.util.Map\<java.lang.Integer, java.lang.Double\>)])\l  (r9 I:java.lang.Object)\l  (r13 I:java.lang.Object)\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_114 [shape=record,label="{114\:\ 0x00c1|SYNTHETIC\l}"];
Node_82 [shape=record,label="{82\:\ 0x00c1|0x00c1: NEW_INSTANCE  (r5 I:java.util.HashMap) =  java.util.HashMap  (LINE:104)\l0x00c3: INVOKE  (r5 I:java.util.HashMap) type: DIRECT call: java.util.HashMap.\<init\>():void A[MD:():void (c)]\l0x00c6: INVOKE  (r6 I:java.util.Set) = \l  (r2 I:java.util.Map A[D('colorsToCam' java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:105)\l0x00ca: INVOKE  (r6 I:java.util.Iterator) = (r6 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_83 [shape=record,label="{83\:\ 0x00ce|LOOP_START\lLOOP:4: B:83:0x00ce\-\>B:89:0x0118\l|0x00ce: INVOKE  (r7 I:boolean) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_84 [shape=record,label="{84\:\ 0x00d2|0x00d2: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:116:0x0132 \l}"];
Node_85 [shape=record,label="{85\:\ 0x00d4|0x00d4: INVOKE  (r7 I:java.lang.Object) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x00d8: CHECK_CAST (r7 I:java.util.Map$Entry) = (java.util.Map$Entry) (r7 I:??[OBJECT, ARRAY]) \l0x00da: INVOKE  (r8 I:java.lang.Object) = \l  (r7 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)] (LINE:106)\l0x00de: CHECK_CAST (r8 I:java.lang.Integer) = (java.lang.Integer) (r8 I:??[OBJECT, ARRAY]) \l0x00e0: INVOKE  (r8 I:int) = (r8 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x00e4: INVOKE  (r9 I:java.lang.Object) = \l  (r7 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)] (LINE:107)\l0x00e8: CHECK_CAST (r9 I:com.google.android.material.color.utilities.Cam16) = (com.google.android.material.color.utilities.Cam16) (r9 I:??[OBJECT, ARRAY]) \l0x00ea: INVOKE  (r10 I:java.lang.Integer) = (r8 I:int A[D('color' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:109)\l0x00ee: INVOKE  (r10 I:java.lang.Object) = \l  (r4 I:java.util.Map A[D('colorsToExcitedProportion' java.util.Map\<java.lang.Integer, java.lang.Double\>)])\l  (r10 I:java.lang.Object)\l type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x00f2: CHECK_CAST (r10 I:java.lang.Double) = (java.lang.Double) (r10 I:??[OBJECT, ARRAY]) \l0x00f4: INVOKE  (r10 I:double) = (r10 I:java.lang.Double) type: VIRTUAL call: java.lang.Double.doubleValue():double A[MD:():double (c)]\l0x00f8: CONST  (r12 I:??[long, double]) = (4636737291354636288(0x4059000000000000, double:100.0) ??[long, double])  (LINE:110)\l0x00fa: ARITH  (r12 I:double) = (r12 I:double) * (r10 I:double A[D('proportion' double)]) \l0x00fc: CONST  (r14 I:??[long, double]) = (4604480259023595110(0x3fe6666666666666, double:0.7) ??[long, double]) \l0x0101: ARITH  (r12 I:double) = (r12 I:double) * (r14 I:double) \l0x0103: INVOKE  (r14 I:double) = (r9 I:com.google.android.material.color.utilities.Cam16 A[D('cam' com.google.android.material.color.utilities.Cam16)]) type: VIRTUAL call: com.google.android.material.color.utilities.Cam16.getChroma():double A[MD:():double (m)] (LINE:113)\l0x0107: CONST  (r16 I:??[long, double]) = (4631952216750555136(0x4048000000000000, double:48.0) ??[long, double]) \l0x0109: CMP_G  (r18 I:int) = (r14 I:double), (r16 I:double) \l}"];
Node_86 [shape=record,label="{86\:\ 0x010b|0x010b: IF  (r18 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:88:0x0113 \l}"];
Node_87 [shape=record,label="{87\:\ 0x010d|0x010d: CONST  (r14 I:??[long, double]) = (4591870180066957722(0x3fb999999999999a, double:0.1) ??[long, double]) \l}"];
Node_118 [shape=record,label="{118\:\ 0x0118|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x0118|LOOP_END\lLOOP:4: B:83:0x00ce\-\>B:89:0x0118\l|0x0118: INVOKE  (r18 I:double) = (r9 I:com.google.android.material.color.utilities.Cam16 A[D('cam' com.google.android.material.color.utilities.Cam16)]) type: VIRTUAL call: com.google.android.material.color.utilities.Cam16.getChroma():double A[MD:():double (m)] (LINE:114)\l0x011c: ARITH  (r18 I:double) = (r18 I:double) \- (r16 I:double) \l0x011e: ARITH  (r18 I:double) = (r18 I:double) * (r14 I:double A[D('chromaWeight' double)]) \l0x0120: ARITH  (r16 I:double) = (r12 I:double A[D('proportionScore' double)]) + (r18 I:double A[D('chromaScore' double)])  (LINE:116)\l0x0122: MOVE  (r20 I:??[long, double]) = (r0 I:??[long, double] A[D('populationSum' double)])  (LINE:117)\l0x0124: INVOKE  (r0 I:java.lang.Integer) = (r8 I:int A[D('color' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0128: INVOKE  (r1 I:java.lang.Double) = (r16 I:double A[D('score' double)]) type: STATIC call: java.lang.Double.valueOf(double):java.lang.Double A[MD:(double):java.lang.Double (c)]\l0x012c: INVOKE  \l  (r5 I:java.util.Map A[D('colorsToScore' java.util.Map\<java.lang.Integer, java.lang.Double\>)])\l  (r0 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l0x012f: MOVE  (r0 I:??[long, double]) = (r20 I:??[long, double] A[D('populationSum' double)])  (LINE:118)\l}"];
Node_88 [shape=record,label="{88\:\ 0x0113|0x0113: CONST  (r14 I:??[long, double]) = (4599075939470750515(0x3fd3333333333333, double:0.3) ??[long, double]) \l}"];
Node_117 [shape=record,label="{117\:\ 0x0118|SYNTHETIC\l}"];
Node_116 [shape=record,label="{116\:\ 0x0132|SYNTHETIC\l}"];
Node_90 [shape=record,label="{90\:\ 0x0132|0x0132: MOVE  (r20 I:??[long, double] A[D('populationSum' double)]) = (r0 I:??[long, double] A[D('populationSum' double)])  (LINE:122)\l0x0134: INVOKE  (r0 I:java.util.List) = \l  (r4 I:java.util.Map A[D('colorsToExcitedProportion' java.util.Map\<java.lang.Integer, java.lang.Double\>)])\l  (r2 I:java.util.Map A[D('colorsToCam' java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l type: STATIC call: com.google.android.material.color.utilities.Score.filter(java.util.Map, java.util.Map):java.util.List A[MD:(java.util.Map\<java.lang.Integer, java.lang.Double\>, java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>):java.util.List\<java.lang.Integer\> (m)]\l0x0138: NEW_INSTANCE  (r1 I:java.util.HashMap) =  java.util.HashMap  (LINE:123)\l0x013a: INVOKE  (r1 I:java.util.HashMap) type: DIRECT call: java.util.HashMap.\<init\>():void A[MD:():void (c)]\l0x013d: INVOKE  (r6 I:java.util.Iterator) = (r0 I:java.util.List A[D('filteredColors' java.util.List\<java.lang.Integer\>)]) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:124)\l}"];
Node_91 [shape=record,label="{91\:\ 0x0141|LOOP_START\lLOOP:5: B:91:0x0141\-\>B:93:0x0147\l|0x0141: INVOKE  (r7 I:boolean) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_92 [shape=record,label="{92\:\ 0x0145|0x0145: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:119:0x0163 \l}"];
Node_93 [shape=record,label="{93\:\ 0x0147|LOOP_END\lLOOP:5: B:91:0x0141\-\>B:93:0x0147\l|0x0147: INVOKE  (r7 I:java.lang.Object) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x014b: CHECK_CAST (r7 I:java.lang.Integer) = (java.lang.Integer) (r7 I:??[OBJECT, ARRAY]) \l0x014d: INVOKE  (r7 I:int) = (r7 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x0151: INVOKE  (r8 I:java.lang.Integer) = (r7 I:int A[D('color' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:125)\l0x0155: INVOKE  (r9 I:java.lang.Integer) = (r7 I:int A[D('color' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0159: INVOKE  (r9 I:java.lang.Object) = (r5 I:java.util.Map A[D('colorsToScore' java.util.Map\<java.lang.Integer, java.lang.Double\>)]), (r9 I:java.lang.Object) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x015d: CHECK_CAST (r9 I:java.lang.Double) = (java.lang.Double) (r9 I:??[OBJECT, ARRAY]) \l0x015f: INVOKE  \l  (r1 I:java.util.Map A[D('filteredColorsToScore' java.util.Map\<java.lang.Integer, java.lang.Double\>)])\l  (r8 I:java.lang.Object)\l  (r9 I:java.lang.Object)\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_119 [shape=record,label="{119\:\ 0x0163|SYNTHETIC\l}"];
Node_94 [shape=record,label="{94\:\ 0x0163|0x0163: NEW_INSTANCE  (r6 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:130)\l0x0165: INVOKE  (r7 I:java.util.Set) = (r1 I:java.util.Map A[D('filteredColorsToScore' java.util.Map\<java.lang.Integer, java.lang.Double\>)]) type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)]\l0x0169: INVOKE  (r6 I:java.util.ArrayList), (r7 I:java.util.Collection) type: DIRECT call: java.util.ArrayList.\<init\>(java.util.Collection):void A[MD:(java.util.Collection\<? extends E\>):void (c)]\l0x016c: NEW_INSTANCE  (r7 I:com.google.android.material.color.utilities.Score$ScoredComparator) =  com.google.android.material.color.utilities.Score$ScoredComparator  (LINE:131)\l0x016e: INVOKE  (r7 I:com.google.android.material.color.utilities.Score$ScoredComparator) type: DIRECT call: com.google.android.material.color.utilities.Score.ScoredComparator.\<init\>():void A[MD:():void (m)]\l0x0171: INVOKE  \l  (r6 I:java.util.List A[D('entryList' java.util.List\<java.util.Map$Entry\<java.lang.Integer, java.lang.Double\>\>)])\l  (r7 I:java.util.Comparator)\l type: STATIC call: java.util.Collections.sort(java.util.List, java.util.Comparator):void A[MD:\<T\>:(java.util.List\<T\>, java.util.Comparator\<? super T\>):void (c)]\l0x0174: NEW_INSTANCE  (r7 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:132)\l0x0176: INVOKE  (r7 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0179: INVOKE  (r8 I:java.util.Iterator) = (r6 I:java.util.List A[D('entryList' java.util.List\<java.util.Map$Entry\<java.lang.Integer, java.lang.Double\>\>)]) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:133)\l}"];
Node_95 [shape=record,label="{95\:\ 0x017d|LOOP_START\lLOOP:6: B:95:0x017d\-\>B:123:0x017d\l|0x017d: INVOKE  (r9 I:boolean) = (r8 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_96 [shape=record,label="{96\:\ 0x0181|0x0181: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:121:0x01ff \l}"];
Node_97 [shape=record,label="{97\:\ 0x0183|0x0183: INVOKE  (r9 I:java.lang.Object) = (r8 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0187: CHECK_CAST (r9 I:java.util.Map$Entry) = (java.util.Map$Entry) (r9 I:??[OBJECT, ARRAY]) \l0x0189: INVOKE  (r10 I:java.lang.Object) = (r9 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.Integer, java.lang.Double\>)]) type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)] (LINE:134)\l0x018d: CHECK_CAST (r10 I:java.lang.Integer) = (java.lang.Integer) (r10 I:??[OBJECT, ARRAY]) \l0x018f: INVOKE  (r10 I:int) = (r10 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x0193: INVOKE  (r11 I:java.lang.Integer) = (r10 I:int A[D('color' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:135)\l0x0197: INVOKE  (r11 I:java.lang.Object) = \l  (r2 I:java.util.Map A[D('colorsToCam' java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l  (r11 I:java.lang.Object)\l type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x019b: CHECK_CAST (r11 I:com.google.android.material.color.utilities.Cam16) = (com.google.android.material.color.utilities.Cam16) (r11 I:??[OBJECT, ARRAY]) \l0x019d: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:136)\l0x019e: INVOKE  (r13 I:java.util.Iterator) = (r7 I:java.util.List A[D('colorsByScoreDescending' java.util.List\<java.lang.Integer\>)]) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:138)\l}"];
Node_98 [shape=record,label="{98\:\ 0x01a2|LOOP_START\lLOOP:7: B:98:0x01a2\-\>B:103:0x01d0\l|0x01a2: INVOKE  (r14 I:boolean) = (r13 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_99 [shape=record,label="{99\:\ 0x01a6|0x01a6: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:126:0x01d9 \l}"];
Node_100 [shape=record,label="{100\:\ 0x01a8|0x01a8: INVOKE  (r14 I:java.lang.Object) = (r13 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x01ac: CHECK_CAST (r14 I:java.lang.Integer) = (java.lang.Integer) (r14 I:??[OBJECT, ARRAY]) \l0x01ae: INVOKE  (r15 I:java.lang.Object) = \l  (r2 I:java.util.Map A[D('colorsToCam' java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l  (r14 I:java.lang.Object A[D('alreadyChosenColor' java.lang.Integer)])\l type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:139)\l0x01b2: CHECK_CAST (r15 I:com.google.android.material.color.utilities.Cam16) = (com.google.android.material.color.utilities.Cam16) (r15 I:??[OBJECT, ARRAY]) \l0x01b4: MOVE  (r16 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('filteredColors' java.util.List\<java.lang.Integer\>)])  (LINE:140)\l0x01b6: MOVE  (r17 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('filteredColorsToScore' java.util.Map\<java.lang.Integer, java.lang.Double\>)]) \l0x01b8: INVOKE  (r0 I:double) = (r11 I:com.google.android.material.color.utilities.Cam16 A[D('cam' com.google.android.material.color.utilities.Cam16)]) type: VIRTUAL call: com.google.android.material.color.utilities.Cam16.getHue():double A[MD:():double (m)]\l0x01bc: MOVE  (r18 I:??[OBJECT, ARRAY]) = \l  (r2 I:??[OBJECT, ARRAY] A[D('colorsToCam' java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l \l0x01be: MOVE  (r19 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('hueProportions' double[])]) \l0x01c0: INVOKE  (r2 I:double) = \l  (r15 I:com.google.android.material.color.utilities.Cam16 A[D('alreadyChosenCam' com.google.android.material.color.utilities.Cam16)])\l type: VIRTUAL call: com.google.android.material.color.utilities.Cam16.getHue():double A[MD:():double (m)]\l0x01c4: INVOKE  (r0 I:double) = (r0 I:double), (r2 I:double) type: STATIC call: com.google.android.material.color.utilities.MathUtils.differenceDegrees(double, double):double A[MD:(double, double):double (m)]\l0x01c8: CONST  (r2 I:??[long, double]) = (4624633867356078080(0x402e000000000000, double:15.0) ??[long, double]) \l0x01ca: CMP_G  (r22 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_101 [shape=record,label="{101\:\ 0x01cc|0x01cc: IF  (r22 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:103:0x01d0 \l}"];
Node_103 [shape=record,label="{103\:\ 0x01d0|LOOP_END\lLOOP:7: B:98:0x01a2\-\>B:103:0x01d0\l|0x01d0: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY] A[D('filteredColors' java.util.List\<java.lang.Integer\>)])  (LINE:144)\l0x01d2: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('filteredColorsToScore' java.util.Map\<java.lang.Integer, java.lang.Double\>)]) \l0x01d4: MOVE  (r2 I:??[OBJECT, ARRAY]) = \l  (r18 I:??[OBJECT, ARRAY] A[D('colorsToCam' java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l \l0x01d6: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY] A[D('hueProportions' double[])]) \l}"];
Node_127 [shape=record,label="{127\:\ 0x01ce|SYNTHETIC\l}"];
Node_102 [shape=record,label="{102\:\ 0x01ce|0x01ce: CONST  (r12 I:??[boolean, int, float, short, byte, char] A[D('duplicateHue' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:141)\l}"];
Node_105 [shape=record,label="{105\:\ 0x01e1|0x01e1: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('duplicateHue' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:120:0x01ec  (LINE:146)\l}"];
Node_120 [shape=record,label="{120\:\ 0x01ec|SYNTHETIC\l}"];
Node_107 [shape=record,label="{107\:\ 0x01ec|0x01ec: INVOKE  (r0 I:java.lang.Object) = (r9 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.Integer, java.lang.Double\>)]) type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)] (LINE:149)\l0x01f0: CHECK_CAST (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:??[OBJECT, ARRAY]) \l0x01f2: INVOKE  (r7 I:java.util.List A[D('colorsByScoreDescending' java.util.List\<java.lang.Integer\>)]), (r0 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x01f5: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY] A[D('filteredColors' java.util.List\<java.lang.Integer\>)])  (LINE:150)\l0x01f7: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('filteredColorsToScore' java.util.Map\<java.lang.Integer, java.lang.Double\>)]) \l0x01f9: MOVE  (r2 I:??[OBJECT, ARRAY]) = \l  (r18 I:??[OBJECT, ARRAY] A[D('colorsToCam' java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l \l0x01fb: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY] A[D('hueProportions' double[])]) \l}"];
Node_124 [shape=record,label="{124\:\ 0x017d|SYNTHETIC\l}"];
Node_123 [shape=record,label="{123\:\ 0x017d|LOOP_END\lSYNTHETIC\lLOOP:6: B:95:0x017d\-\>B:123:0x017d\l}"];
Node_122 [shape=record,label="{122\:\ 0x01e3|SYNTHETIC\l}"];
Node_106 [shape=record,label="{106\:\ 0x01e3|0x01e3: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY] A[D('filteredColors' java.util.List\<java.lang.Integer\>)])  (LINE:147)\l0x01e5: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('filteredColorsToScore' java.util.Map\<java.lang.Integer, java.lang.Double\>)]) \l0x01e7: MOVE  (r2 I:??[OBJECT, ARRAY]) = \l  (r18 I:??[OBJECT, ARRAY] A[D('colorsToCam' java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l \l0x01e9: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY] A[D('hueProportions' double[])]) \l}"];
Node_125 [shape=record,label="{125\:\ 0x017d|SYNTHETIC\l}"];
Node_126 [shape=record,label="{126\:\ 0x01d9|SYNTHETIC\l}"];
Node_104 [shape=record,label="{104\:\ 0x01d9|0x01d9: MOVE  (r16 I:??[OBJECT, ARRAY] A[D('filteredColors' java.util.List\<java.lang.Integer\>)]) = (r0 I:??[OBJECT, ARRAY] A[D('filteredColors' java.util.List\<java.lang.Integer\>)])  (LINE:138)\l0x01db: MOVE  (r17 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('filteredColorsToScore' java.util.Map\<java.lang.Integer, java.lang.Double\>)]) \l0x01dd: MOVE  (r18 I:??[OBJECT, ARRAY]) = \l  (r2 I:??[OBJECT, ARRAY] A[D('colorsToCam' java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l \l0x01df: MOVE  (r19 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('hueProportions' double[])]) \l}"];
Node_121 [shape=record,label="{121\:\ 0x01ff|SYNTHETIC\l}"];
Node_108 [shape=record,label="{108\:\ 0x01ff|0x01ff: MOVE  (r16 I:??[OBJECT, ARRAY] A[D('filteredColors' java.util.List\<java.lang.Integer\>)]) = (r0 I:??[OBJECT, ARRAY] A[D('filteredColors' java.util.List\<java.lang.Integer\>)])  (LINE:153)\l0x0201: MOVE  (r17 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('filteredColorsToScore' java.util.Map\<java.lang.Integer, java.lang.Double\>)]) \l0x0203: MOVE  (r18 I:??[OBJECT, ARRAY]) = \l  (r2 I:??[OBJECT, ARRAY] A[D('colorsToCam' java.util.Map\<java.lang.Integer, com.google.android.material.color.utilities.Cam16\>)])\l \l0x0205: MOVE  (r19 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('hueProportions' double[])]) \l0x0207: INVOKE  (r0 I:boolean) = (r7 I:java.util.List A[D('colorsByScoreDescending' java.util.List\<java.lang.Integer\>)]) type: INTERFACE call: java.util.List.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_109 [shape=record,label="{109\:\ 0x020b|0x020b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:111:0x0217 \l}"];
Node_110 [shape=record,label="{110\:\ 0x020d|0x020d: CONST  (r0 I:??[int, float, short, byte, char]) = (\-12417548(0xffffffffff4285f4, float:\-2.5856576E38) ??[int, float, short, byte, char])  (LINE:154)\l0x0210: INVOKE  (r0 I:java.lang.Integer) = (r0 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0214: INVOKE  (r7 I:java.util.List A[D('colorsByScoreDescending' java.util.List\<java.lang.Integer\>)]), (r0 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_111 [shape=record,label="{111\:\ 0x0217|RETURN\l|0x0217: RETURN  (r7 I:java.util.List\<java.lang.Integer\> A[D('colorsByScoreDescending' java.util.List\<java.lang.Integer\>)])  (LINE:156)\l}"];
Node_65 [shape=record,label="{65\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static java.util.List\<java.lang.Integer\> com.google.android.material.color.utilities.Score.score((r23 I:java.util.Map\<java.lang.Integer, java.lang.Integer\> A[D('colorsToPopulation' java.util.Map\<java.lang.Integer, java.lang.Integer\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:69:0x0010 \-\> B:67:0x000a, BACK_EDGE: B:73:0x003a \-\> B:71:0x0034, BACK_EDGE: B:80:0x00ab \-\> B:78:0x00a7, BACK_EDGE: B:81:0x00b5 \-\> B:75:0x007e, BACK_EDGE: B:89:0x0118 \-\> B:83:0x00ce, CROSS_EDGE: B:88:0x0113 \-\> B:89:0x0118, BACK_EDGE: B:93:0x0147 \-\> B:91:0x0141, BACK_EDGE: B:106:0x01e3 \-\> B:95:0x017d, BACK_EDGE: B:107:0x01ec \-\> B:95:0x017d, BACK_EDGE: B:103:0x01d0 \-\> B:98:0x01a2, CROSS_EDGE: B:104:0x01d9 \-\> B:105:0x01e1, CROSS_EDGE: B:109:0x020b \-\> B:111:0x0217\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0022: r3 'entry' Ljava\/util\/Map$Entry;, signature: Ljava\/util\/Map$Entry\<Ljava\/lang\/Integer;Ljava\/lang\/Integer;\>;\l  0x0040\-0x0070: r5 'entry' Ljava\/util\/Map$Entry;, signature: Ljava\/util\/Map$Entry\<Ljava\/lang\/Integer;Ljava\/lang\/Integer;\>;\l  0x004a\-0x0070: r6 'color' I\l  0x0055\-0x0070: r7 'population' D\l  0x0057\-0x0070: r9 'proportion' D\l  0x005b\-0x0070: r11 'cam' Lcom\/google\/android\/material\/color\/utilities\/Cam16;\l  0x006b\-0x0070: r13 'hue' I\l  0x00af\-0x00b2: r13 'neighborHue' I\l  0x00a7\-0x00b5: r9 'j' I\l  0x008a\-0x00c0: r6 'entry' Ljava\/util\/Map$Entry;, signature: Ljava\/util\/Map$Entry\<Ljava\/lang\/Integer;Lcom\/google\/android\/material\/color\/utilities\/Cam16;\>;\l  0x0094\-0x00c0: r7 'color' I\l  0x009a\-0x00c0: r8 'cam' Lcom\/google\/android\/material\/color\/utilities\/Cam16;\l  0x00a3\-0x00c0: r10 'hue' I\l  0x00a5\-0x00c0: r11 'excitedProportion' D\l  0x0002\-0x0124: r0 'populationSum' D\l  0x00da\-0x012f: r7 'entry' Ljava\/util\/Map$Entry;, signature: Ljava\/util\/Map$Entry\<Ljava\/lang\/Integer;Lcom\/google\/android\/material\/color\/utilities\/Cam16;\>;\l  0x00e4\-0x012f: r8 'color' I\l  0x00ea\-0x012f: r9 'cam' Lcom\/google\/android\/material\/color\/utilities\/Cam16;\l  0x00f8\-0x012f: r10 'proportion' D\l  0x0103\-0x012f: r12 'proportionScore' D\l  0x0118\-0x012f: r14 'chromaWeight' D\l  0x0122\-0x012f: r16 'score' D\l  0x0120\-0x012f: r18 'chromaScore' D\l  0x0124\-0x0132: r20 'populationSum' D\l  0x0132\-0x0134: r0 'populationSum' D\l  0x0151\-0x0162: r7 'color' I\l  0x0138\-0x01b8: r0 'filteredColors' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/lang\/Integer;\>;\l  0x013d\-0x01b8: r1 'filteredColorsToScore' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Ljava\/lang\/Double;\>;\l  0x0028\-0x01c0: r2 'colorsToCam' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Lcom\/google\/android\/material\/color\/utilities\/Cam16;\>;\l  0x002c\-0x01c0: r3 'hueProportions' [D\l  0x01ae\-0x01d0: r14 'alreadyChosenColor' Ljava\/lang\/Integer;\l  0x01b4\-0x01d0: r15 'alreadyChosenCam' Lcom\/google\/android\/material\/color\/utilities\/Cam16;\l  0x01b8\-0x01d9: r16 'filteredColors' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/lang\/Integer;\>;\l  0x01b8\-0x01d9: r17 'filteredColorsToScore' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Ljava\/lang\/Double;\>;\l  0x01c0\-0x01d9: r18 'colorsToCam' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Lcom\/google\/android\/material\/color\/utilities\/Cam16;\>;\l  0x01c0\-0x01d9: r19 'hueProportions' [D\l  0x01d9\-0x01e1: r0 'filteredColors' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/lang\/Integer;\>;\l  0x01d9\-0x01e1: r1 'filteredColorsToScore' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Ljava\/lang\/Double;\>;\l  0x01d9\-0x01e1: r2 'colorsToCam' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Lcom\/google\/android\/material\/color\/utilities\/Cam16;\>;\l  0x01d9\-0x01e1: r3 'hueProportions' [D\l  0x0189\-0x01f5: r9 'entry' Ljava\/util\/Map$Entry;, signature: Ljava\/util\/Map$Entry\<Ljava\/lang\/Integer;Ljava\/lang\/Double;\>;\l  0x0193\-0x01f5: r10 'color' I\l  0x019d\-0x01f5: r11 'cam' Lcom\/google\/android\/material\/color\/utilities\/Cam16;\l  0x019e\-0x01f5: r12 'duplicateHue' Z\l  0x01e1\-0x01ff: r16 'filteredColors' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/lang\/Integer;\>;\l  0x01e1\-0x01ff: r17 'filteredColorsToScore' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Ljava\/lang\/Double;\>;\l  0x01e1\-0x01ff: r18 'colorsToCam' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Lcom\/google\/android\/material\/color\/utilities\/Cam16;\>;\l  0x01e1\-0x01ff: r19 'hueProportions' [D\l  0x01ff\-0x0207: r0 'filteredColors' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/lang\/Integer;\>;\l  0x01ff\-0x0207: r1 'filteredColorsToScore' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Ljava\/lang\/Double;\>;\l  0x01ff\-0x0207: r2 'colorsToCam' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Lcom\/google\/android\/material\/color\/utilities\/Cam16;\>;\l  0x01ff\-0x0207: r3 'hueProportions' [D\l  0x0076\-0x0217: r4 'colorsToExcitedProportion' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Ljava\/lang\/Double;\>;\l  0x00c6\-0x0217: r5 'colorsToScore' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Ljava\/lang\/Double;\>;\l  0x016c\-0x0217: r6 'entryList' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/util\/Map$Entry\<Ljava\/lang\/Integer;Ljava\/lang\/Double;\>;\>;\l  0x0179\-0x0217: r7 'colorsByScoreDescending' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/lang\/Integer;\>;\l  0x0207\-0x0217: r16 'filteredColors' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/lang\/Integer;\>;\l  0x0207\-0x0217: r17 'filteredColorsToScore' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Ljava\/lang\/Double;\>;\l  0x0207\-0x0217: r18 'colorsToCam' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Lcom\/google\/android\/material\/color\/utilities\/Cam16;\>;\l  0x0207\-0x0217: r19 'hueProportions' [D\l  0x0134\-0x0217: r20 'populationSum' D\l  0x0000\-0x0217: r23 'colorsToPopulation' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/Integer;Ljava\/lang\/Integer;\>;\lSIGNATURE: (Ljava\/util\/Map\<Ljava\/lang\/Integer;Ljava\/lang\/Integer;\>;)Ljava\/util\/List\<Ljava\/lang\/Integer;\>;\l}"];
MethodNode -> Node_64;Node_64 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_112;
Node_69 -> Node_67;
Node_112 -> Node_70;
Node_70 -> Node_71;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_113;
Node_73 -> Node_71;
Node_113 -> Node_74;
Node_74 -> Node_75;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_114;
Node_77 -> Node_78;
Node_78 -> Node_79;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_115;
Node_80 -> Node_78;
Node_115 -> Node_81;
Node_81 -> Node_75;
Node_114 -> Node_82;
Node_82 -> Node_83;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_116;
Node_85 -> Node_86;
Node_86 -> Node_87[style=dashed];
Node_86 -> Node_88;
Node_87 -> Node_118;
Node_118 -> Node_89;
Node_89 -> Node_83;
Node_88 -> Node_117;
Node_117 -> Node_89;
Node_116 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_92;
Node_92 -> Node_93[style=dashed];
Node_92 -> Node_119;
Node_93 -> Node_91;
Node_119 -> Node_94;
Node_94 -> Node_95;
Node_95 -> Node_96;
Node_96 -> Node_97[style=dashed];
Node_96 -> Node_121;
Node_97 -> Node_98;
Node_98 -> Node_99;
Node_99 -> Node_100[style=dashed];
Node_99 -> Node_126;
Node_100 -> Node_101;
Node_101 -> Node_103;
Node_101 -> Node_127[style=dashed];
Node_103 -> Node_98;
Node_127 -> Node_102;
Node_102 -> Node_105;
Node_105 -> Node_120;
Node_105 -> Node_122[style=dashed];
Node_120 -> Node_107;
Node_107 -> Node_124;
Node_124 -> Node_123;
Node_123 -> Node_95;
Node_122 -> Node_106;
Node_106 -> Node_125;
Node_125 -> Node_123;
Node_126 -> Node_104;
Node_104 -> Node_105;
Node_121 -> Node_108;
Node_108 -> Node_109;
Node_109 -> Node_110[style=dashed];
Node_109 -> Node_111;
Node_110 -> Node_111;
Node_111 -> Node_65;
}

