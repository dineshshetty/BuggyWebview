digraph "CFG forcom.google.android.material.color.utilities.ViewingConditions.make([DDDDZ)Lcom\/google\/android\/material\/color\/utilities\/ViewingConditions;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|double[][] r2 = com.google.android.material.color.utilities.Cam16.XYZ_TO_CAM16RGB\ldouble r5 = ((r59[0] * r2[0][0]) + (r59[1] * r2[0][1])) + (r59[2] * r2[0][2])\ldouble r9 = ((r59[0] * r2[1][0]) + (r59[1] * r2[1][1])) + (r59[2] * r2[1][2])\ldouble r11 = ((r59[0] * r2[2][0]) + (r59[1] * r2[2][1])) + (r59[2] * r2[2][2])\ldouble r15 = (r64 \/ 10.0d) + 0.8d\l}"];
Node_15 [shape=record,label="{15\:\ 0x0069|if ((r15 \> 0.9d ? 1 : (r15 == 0.9d ? 0 : \-1)) \< 0) goto L11\l}"];
Node_16 [shape=record,label="{16\:\ 0x006b|r28 = com.google.android.material.color.utilities.MathUtils.lerp(0.59d, 0.69d, (r15 \- 0.9d) * 10.0d)\l}"];
Node_18 [shape=record,label="{18\:\ 0x009a|PHI: r28 \l  PHI: (r28v1 'c' double) = (r28v0 'c' double), (r28v2 'c' double) binds: [B:17:0x0080, B:16:0x006b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x009d|if (r66 == false) goto L10\l}"];
Node_20 [shape=record,label="{20\:\ 0x009f|r34 = 1.0d\l}"];
Node_22 [shape=record,label="{22\:\ 0x00bc|PHI: r34 \l  PHI: (r34v1 'd' double) = (r34v0 'd' double), (r34v2 'd' double) binds: [B:21:0x00a2, B:20:0x009f] A[DONT_GENERATE, DONT_INLINE]\l|double r7 = com.google.android.material.color.utilities.MathUtils.clampDouble(0.0d, 1.0d, r34)\ldouble[] r13 = new double[]\{(((100.0d \/ r5) * r7) + 1.0d) \- r7, (((100.0d \/ r9) * r7) + 1.0d) \- r7, (((100.0d \/ r11) * r7) + 1.0d) \- r7\}\ldouble r39 = 1.0d \/ ((r60 * 5.0d) + 1.0d)\ldouble r41 = ((r39 * r39) * r39) * r39\ldouble r43 = 1.0d \- r41\ldouble r4 = (r41 * r60) + (((0.1d * r43) * r43) * java.lang.Math.cbrt(5.0d * r60))\ldouble r6 = com.google.android.material.color.utilities.ColorUtils.yFromLstar(r62) \/ r59[1]\ldouble r49 = java.lang.Math.sqrt(r6) + 1.48d\ldouble r8 = 0.725d \/ java.lang.Math.pow(r6, 0.2d)\ldouble[] r14 = new double[]\{java.lang.Math.pow(((r13[0] * r4) * r5) \/ 100.0d, 0.42d), java.lang.Math.pow(((r13[1] * r4) * r9) \/ 100.0d, 0.42d), java.lang.Math.pow(((r13[2] * r4) * r11) \/ 100.0d, 0.42d)\}\ldouble[] r11 = new double[]\{(r14[0] * 400.0d) \/ (r14[0] + 27.13d), (r14[1] * 400.0d) \/ (r14[1] + 27.13d), (r14[2] * 400.0d) \/ (r14[2] + 27.13d)\}\ldouble r12 = (((r11[0] * 2.0d) + r11[1]) + (r11[2] * 0.05d)) * r8\l}"];
Node_23 [shape=record,label="{23\:\ 0x01e2|RETURN\l|return new com.google.android.material.color.utilities.ViewingConditions(r6, r12, r8, r8, r28, r15, r13, r4, java.lang.Math.pow(r4, 0.25d), r49)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x00a2|r34 = (1.0d \- (java.lang.Math.exp(((\-r60) \- 42.0d) \/ 92.0d) * 0.2777777777777778d)) * r15\l}"];
Node_17 [shape=record,label="{17\:\ 0x0080|r28 = com.google.android.material.color.utilities.MathUtils.lerp(0.525d, 0.59d, 10.0d * (r15 \- 0.8d))\l}"];
MethodNode[shape=record,label="{static com.google.android.material.color.utilities.ViewingConditions com.google.android.material.color.utilities.ViewingConditions.make((r59v0 'whitePoint' double[] A[D('whitePoint' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r60v0 'adaptingLuminance' double A[D('adaptingLuminance' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r62v0 'backgroundLstar' double A[D('backgroundLstar' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r64v0 'surround' double A[D('surround' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r66v0 'discountingIlluminant' boolean A[D('discountingIlluminant' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x00a2 \-\> B:22:0x00bc, CROSS_EDGE: B:17:0x0080 \-\> B:18:0x009a\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_22;
Node_17 -> Node_18;
}

