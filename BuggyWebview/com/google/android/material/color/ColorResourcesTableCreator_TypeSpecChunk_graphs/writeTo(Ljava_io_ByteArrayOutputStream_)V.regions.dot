digraph "CFG forcom.google.android.material.color.ColorResourcesTableCreator.TypeSpecChunk.writeTo(Ljava\/io\/ByteArrayOutputStream;)V" {
subgraph cluster_Region_313371879 {
label = "R(3:1|(1:3)|5) | DECL_VAR: int[] null\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|r5.header.writeTo(r6)\lint r2 = 0\lr6.write(new byte[]\{com.google.android.material.color.ColorResourcesTableCreator.typeIdColor, 0, 0, 0\})\lr6.write(com.google.android.material.color.ColorResourcesTableCreator.intToByteArray(r5.entryCount))\l\l}"];
subgraph cluster_LoopRegion_1053942836 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0027|LOOP_START\lLOOP:0: B:11:0x0027\-\>B:12:0x0029\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:10:0x0000, B:12:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< r1) goto L3\l}"];
subgraph cluster_Region_886139617 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0029|LOOP_END\lLOOP:0: B:11:0x0027\-\>B:12:0x0029\l|r3 = r0[r2]\lr6.write(com.google.android.material.color.ColorResourcesTableCreator.intToByteArray(r3))\lr2++\l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x0035|r5.typeChunk.writeTo(r6)\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0035|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x003a}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void com.google.android.material.color.ColorResourcesTableCreator.TypeSpecChunk.writeTo((r5v0 'this' com.google.android.material.color.ColorResourcesTableCreator$TypeSpecChunk A[IMMUTABLE_TYPE, THIS]), (r6v0 'outputStream' java.io.ByteArrayOutputStream A[D('outputStream' java.io.ByteArrayOutputStream), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x0029 \-\> B:11:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_15[style=dashed];
Node_12 -> Node_11;
Node_13 -> Node_14;
Node_8 -> Node_10;
Node_15 -> Node_13;
Node_14 -> Node_9;
}

