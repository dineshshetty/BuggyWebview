digraph "CFG forcom.google.android.material.animation.DrawableAlphaProperty.get(Landroid\/graphics\/drawable\/Drawable;)Ljava\/lang\/Integer;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:48)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (19 ??[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:18:0x000f \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: INVOKE  (r0 I:int) = (r3 I:android.graphics.drawable.Drawable A[D('object' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getAlpha():int A[MD:():int (c)] (LINE:49)\l0x000a: INVOKE  (r0 I:java.lang.Integer) = (r0 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:java.lang.Integer) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|0x000f: IGET  (r0 I:java.util.WeakHashMap\<android.graphics.drawable.Drawable, java.lang.Integer\>) = (r2 I:com.google.android.material.animation.DrawableAlphaProperty) com.google.android.material.animation.DrawableAlphaProperty.alphaCache java.util.WeakHashMap  (LINE:51)\l0x0011: INVOKE  (r0 I:boolean) = (r0 I:java.util.WeakHashMap), (r3 I:java.lang.Object A[D('object' android.graphics.drawable.Drawable)]) type: VIRTUAL call: java.util.WeakHashMap.containsKey(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0015|0x0015: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0020 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0017|0x0017: IGET  (r0 I:java.util.WeakHashMap\<android.graphics.drawable.Drawable, java.lang.Integer\>) = (r2 I:com.google.android.material.animation.DrawableAlphaProperty) com.google.android.material.animation.DrawableAlphaProperty.alphaCache java.util.WeakHashMap  (LINE:52)\l0x0019: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.WeakHashMap), (r3 I:java.lang.Object A[D('object' android.graphics.drawable.Drawable)]) type: VIRTUAL call: java.util.WeakHashMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x001d: CHECK_CAST (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x001f|RETURN\l|0x001f: RETURN  (r0 I:java.lang.Integer) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0020|0x0020: CONST  (r0 I:??[int, float, short, byte, char]) = (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char])  (LINE:54)\l0x0022: INVOKE  (r0 I:java.lang.Integer) = (r0 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|RETURN\l|0x0026: RETURN  (r0 I:java.lang.Integer) \l}"];
MethodNode[shape=record,label="{public java.lang.Integer com.google.android.material.animation.DrawableAlphaProperty.get((r2 'this' I:com.google.android.material.animation.DrawableAlphaProperty A[IMMUTABLE_TYPE, THIS]), (r3 I:android.graphics.drawable.Drawable A[D('object' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001f \-\> B:13:?, CROSS_EDGE: B:23:0x0026 \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0026: r3 'object' Landroid\/graphics\/drawable\/Drawable;\lREPLACED_BY: com.google.android.material.animation.DrawableAlphaProperty.get(android.graphics.drawable.Drawable):java.lang.Integer\lBRIDGED_BY: com.google.android.material.animation.DrawableAlphaProperty.get(android.graphics.drawable.Drawable):java.lang.Integer\lMETHOD_OVERRIDE: [ClspMth\{android.util.Property.get(T):V\}]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

