digraph "CFG forcom.google.android.material.animation.ArgbEvaluatorCompat.evaluate(FLjava\/lang\/Integer;Ljava\/lang\/Integer;)Ljava\/lang\/Integer;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r20 I:java.lang.Integer A[D('startValue' java.lang.Integer)]) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)] (LINE:58)\l0x0004: ARITH  (r1 I:int) = (r0 I:int A[D('startInt' int)]) \>\> (24 int)  (LINE:59)\l0x0006: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0008: CAST (r1 I:float) = (float) (r1 I:int) \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char]) \l0x000b: ARITH  (r1 I:float) = (r1 I:float) \/ (r2 I:float) \l0x000c: ARITH  (r3 I:int) = (r0 I:int A[D('startInt' int)]) \>\> (16 int)  (LINE:60)\l0x000e: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0010: CAST (r3 I:float) = (float) (r3 I:int) \l0x0011: ARITH  (r3 I:float) = (r3 I:float) \/ (r2 I:float) \l0x0012: ARITH  (r4 I:int) = (r0 I:int A[D('startInt' int)]) \>\> (8 int)  (LINE:61)\l0x0014: ARITH  (r4 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0016: CAST (r4 I:float) = (float) (r4 I:int) \l0x0017: ARITH  (r4 I:float) = (r4 I:float) \/ (r2 I:float) \l0x0018: ARITH  (r5 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('startInt' int)]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char])  (LINE:62)\l0x001a: CAST (r5 I:float) = (float) (r5 I:int) \l0x001b: ARITH  (r5 I:float) = (r5 I:float) \/ (r2 I:float) \l0x001c: INVOKE  (r6 I:int) = (r21 I:java.lang.Integer A[D('endValue' java.lang.Integer)]) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)] (LINE:64)\l0x0020: ARITH  (r7 I:int) = (r6 I:int A[D('endInt' int)]) \>\> (24 int)  (LINE:65)\l0x0022: ARITH  (r7 I:??[int, boolean]) = (r7 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0024: CAST (r7 I:float) = (float) (r7 I:int) \l0x0025: ARITH  (r7 I:float) = (r7 I:float) \/ (r2 I:float) \l0x0026: ARITH  (r8 I:int) = (r6 I:int A[D('endInt' int)]) \>\> (16 int)  (LINE:66)\l0x0028: ARITH  (r8 I:??[int, boolean]) = (r8 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x002a: CAST (r8 I:float) = (float) (r8 I:int) \l0x002b: ARITH  (r8 I:float) = (r8 I:float) \/ (r2 I:float) \l0x002c: ARITH  (r9 I:int) = (r6 I:int A[D('endInt' int)]) \>\> (8 int)  (LINE:67)\l0x002e: ARITH  (r9 I:??[int, boolean]) = (r9 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0030: CAST (r9 I:float) = (float) (r9 I:int) \l0x0031: ARITH  (r9 I:float) = (r9 I:float) \/ (r2 I:float) \l0x0032: ARITH  (r10 I:??[int, boolean]) = (r6 I:??[int, boolean, short, byte, char] A[D('endInt' int)]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char])  (LINE:68)\l0x0034: CAST (r10 I:float) = (float) (r10 I:int) \l0x0035: ARITH  (r10 I:float) = (r10 I:float) \/ (r2 I:float) \l0x0036: CAST (r11 I:double) = (double) (r3 I:float A[D('startR' float)])  (LINE:71)\l0x0037: CONST  (r13 I:??[long, double]) = (4612136378390124954(0x400199999999999a, double:2.2) ??[long, double]) \l0x003c: INVOKE  (r11 I:double) = (r11 I:double), (r13 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x0040: CAST (r3 I:float A[D('startR' float)]) = (float) (r11 I:double) \l0x0041: CAST (r11 I:double) = (double) (r4 I:float A[D('startG' float)])  (LINE:72)\l0x0042: INVOKE  (r11 I:double) = (r11 I:double), (r13 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x0046: CAST (r4 I:float A[D('startG' float)]) = (float) (r11 I:double) \l0x0047: CAST (r11 I:double) = (double) (r5 I:float A[D('startB' float)])  (LINE:73)\l0x0048: INVOKE  (r11 I:double) = (r11 I:double), (r13 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x004c: CAST (r5 I:float A[D('startB' float)]) = (float) (r11 I:double) \l0x004d: CAST (r11 I:double) = (double) (r8 I:float A[D('endR' float)])  (LINE:75)\l0x004e: INVOKE  (r11 I:double) = (r11 I:double), (r13 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x0052: CAST (r8 I:float A[D('endR' float)]) = (float) (r11 I:double) \l0x0053: CAST (r11 I:double) = (double) (r9 I:float A[D('endG' float)])  (LINE:76)\l0x0054: INVOKE  (r11 I:double) = (r11 I:double), (r13 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x0058: CAST (r9 I:float A[D('endG' float)]) = (float) (r11 I:double) \l0x0059: CAST (r11 I:double) = (double) (r10 I:float A[D('endB' float)])  (LINE:77)\l0x005a: INVOKE  (r11 I:double) = (r11 I:double), (r13 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x005e: CAST (r10 I:float A[D('endB' float)]) = (float) (r11 I:double) \l0x005f: ARITH  (r11 I:float) = (r7 I:float A[D('endA' float)]) \- (r1 I:float A[D('startA' float)])  (LINE:80)\l0x0061: ARITH  (r11 I:float) = (r11 I:float) * (r19 I:float A[D('fraction' float)]) \l0x0063: ARITH  (r11 I:float) = (r11 I:float) + (r1 I:float A[D('startA' float)]) \l0x0064: ARITH  (r12 I:float) = (r8 I:float A[D('endR' float)]) \- (r3 I:float A[D('startR' float)])  (LINE:81)\l0x0066: ARITH  (r12 I:float) = (r12 I:float) * (r19 I:float A[D('fraction' float)]) \l0x0068: ARITH  (r12 I:float) = (r12 I:float) + (r3 I:float A[D('startR' float)]) \l0x0069: ARITH  (r13 I:float) = (r9 I:float A[D('endG' float)]) \- (r4 I:float A[D('startG' float)])  (LINE:82)\l0x006b: ARITH  (r13 I:float) = (r13 I:float) * (r19 I:float A[D('fraction' float)]) \l0x006d: ARITH  (r13 I:float) = (r13 I:float) + (r4 I:float A[D('startG' float)]) \l0x006e: ARITH  (r14 I:float) = (r10 I:float A[D('endB' float)]) \- (r5 I:float A[D('startB' float)])  (LINE:83)\l0x0070: ARITH  (r14 I:float) = (r14 I:float) * (r19 I:float A[D('fraction' float)]) \l0x0072: ARITH  (r14 I:float) = (r14 I:float) + (r5 I:float A[D('startB' float)]) \l0x0073: ARITH  (r11 I:float) = (r11 I:float A[D('a' float)]) * (r2 I:float)  (LINE:86)\l0x0075: MOVE  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startR' float)])  (LINE:87)\l0x0076: CAST (r2 I:double) = (double) (r12 I:float A[D('r' float)]) \l0x0077: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startInt' int)]) \l0x0079: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startA' float)]) \l0x007b: CONST  (r0 I:??[long, double] A[D('startInt' int)]) = (4601859982876761367(0x3fdd1745d1745d17, double:0.45454545454545453) ??[long, double]) \l0x0080: INVOKE  (r2 I:double) = (r2 I:double), (r0 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x0084: CAST (r2 I:float) = (float) (r2 I:double) \l0x0085: CONST  (r3 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char]) \l0x0087: ARITH  (r2 I:float) = (r2 I:float) * (r3 I:float) \l0x0089: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('r' float)]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startG' float)])  (LINE:88)\l0x008a: CAST (r3 I:double) = (double) (r13 I:float A[D('g' float)]) \l0x008b: INVOKE  (r3 I:double) = (r3 I:double), (r0 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x008f: CAST (r3 I:float) = (float) (r3 I:double) \l0x0090: CONST  (r4 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char]) \l0x0092: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x0094: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('g' float)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startB' float)])  (LINE:89)\l0x0095: CAST (r4 I:double) = (double) (r14 I:float A[D('b' float)]) \l0x0096: INVOKE  (r0 I:double) = (r4 I:double), (r0 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x009a: CAST (r0 I:float) = (float) (r0 I:double) \l0x009b: CONST  (r1 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char]) \l0x009d: ARITH  (r0 I:float) = (r0 I:float) * (r1 I:float) \l0x009f: INVOKE  (r1 I:int) = (r11 I:float A[D('a' float)]) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)] (LINE:91)\l0x00a3: ARITH  (r1 I:int) = (r1 I:int) \<\< (24 int) \l0x00a5: INVOKE  (r4 I:int) = (r2 I:float A[D('r' float)]) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x00a9: ARITH  (r4 I:int) = (r4 I:int) \<\< (16 int) \l0x00ab: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) \| (r4 I:??[int, boolean, short, byte, char]) \l0x00ac: INVOKE  (r4 I:int) = (r3 I:float A[D('g' float)]) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x00b0: ARITH  (r4 I:int) = (r4 I:int) \<\< (8 int) \l0x00b2: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) \| (r4 I:??[int, boolean, short, byte, char]) \l0x00b3: INVOKE  (r4 I:int) = (r0 I:float A[D('b' float)]) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x00b7: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) \| (r4 I:??[int, boolean, short, byte, char]) \l0x00b8: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x00bc|RETURN\l|0x00bc: RETURN  (r1 I:java.lang.Integer) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.Integer com.google.android.material.animation.ArgbEvaluatorCompat.evaluate((r18 'this' I:com.google.android.material.animation.ArgbEvaluatorCompat A[IMMUTABLE_TYPE, THIS]), (r19 I:float A[D('fraction' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:java.lang.Integer A[D('startValue' java.lang.Integer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:java.lang.Integer A[D('endValue' java.lang.Integer), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0076: r3 'startR' F\l  0x0004\-0x007b: r0 'startInt' I\l  0x000c\-0x007b: r1 'startA' F\l  0x0069\-0x0089: r12 'r' F\l  0x0018\-0x008a: r4 'startG' F\l  0x006e\-0x0094: r13 'g' F\l  0x001c\-0x0095: r5 'startB' F\l  0x0073\-0x009f: r14 'b' F\l  0x009f\-0x00bc: r0 'b' F\l  0x0089\-0x00bc: r2 'r' F\l  0x0094\-0x00bc: r3 'g' F\l  0x0020\-0x00bc: r6 'endInt' I\l  0x0026\-0x00bc: r7 'endA' F\l  0x002c\-0x00bc: r8 'endR' F\l  0x0032\-0x00bc: r9 'endG' F\l  0x0036\-0x00bc: r10 'endB' F\l  0x0064\-0x00bc: r11 'a' F\l  0x008a\-0x00bc: r12 'startG' F\l  0x0095\-0x00bc: r13 'startB' F\l  0x0076\-0x00bc: r15 'startR' F\l  0x007b\-0x00bc: r16 'startInt' I\l  0x007b\-0x00bc: r17 'startA' F\l  \-1 \-0x00bc: r19 'fraction' F\l  \-1 \-0x00bc: r20 'startValue' Ljava\/lang\/Integer;\l  \-1 \-0x00bc: r21 'endValue' Ljava\/lang\/Integer;\lREPLACED_BY: com.google.android.material.animation.ArgbEvaluatorCompat.evaluate(float, java.lang.Integer, java.lang.Integer):java.lang.Integer\lBRIDGED_BY: com.google.android.material.animation.ArgbEvaluatorCompat.evaluate(float, java.lang.Integer, java.lang.Integer):java.lang.Integer\lMETHOD_OVERRIDE: [ClspMth\{android.animation.TypeEvaluator.evaluate(float, T, T):T\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

