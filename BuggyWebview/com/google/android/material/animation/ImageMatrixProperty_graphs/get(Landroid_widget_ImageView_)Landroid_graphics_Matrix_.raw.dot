digraph "CFG forcom.google.android.material.animation.ImageMatrixProperty.get(Landroid\/widget\/ImageView;)Landroid\/graphics\/Matrix;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.Matrix) = (r2 I:com.google.android.material.animation.ImageMatrixProperty) com.google.android.material.animation.ImageMatrixProperty.matrix android.graphics.Matrix  (LINE:42)\l0x0002: INVOKE  (r1 I:android.graphics.Matrix) = (r3 I:android.widget.ImageView A[D('object' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getImageMatrix():android.graphics.Matrix A[MD:():android.graphics.Matrix (c)]\l0x0006: INVOKE  (r0 I:android.graphics.Matrix), (r1 I:android.graphics.Matrix) type: VIRTUAL call: android.graphics.Matrix.set(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)]\l0x0009: IGET  (r0 I:android.graphics.Matrix) = (r2 I:com.google.android.material.animation.ImageMatrixProperty) com.google.android.material.animation.ImageMatrixProperty.matrix android.graphics.Matrix  (LINE:43)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|RETURN\l|0x000b: RETURN  (r0 I:android.graphics.Matrix) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public android.graphics.Matrix com.google.android.material.animation.ImageMatrixProperty.get((r2 'this' I:com.google.android.material.animation.ImageMatrixProperty A[IMMUTABLE_TYPE, THIS]), (r3 I:android.widget.ImageView A[D('object' android.widget.ImageView), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000b: r3 'object' Landroid\/widget\/ImageView;\lREPLACED_BY: com.google.android.material.animation.ImageMatrixProperty.get(android.widget.ImageView):android.graphics.Matrix\lBRIDGED_BY: com.google.android.material.animation.ImageMatrixProperty.get(android.widget.ImageView):android.graphics.Matrix\lMETHOD_OVERRIDE: [ClspMth\{android.util.Property.get(T):V\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

