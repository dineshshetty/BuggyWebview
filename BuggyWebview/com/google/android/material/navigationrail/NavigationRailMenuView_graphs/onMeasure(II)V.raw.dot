digraph "CFG forcom.google.android.material.navigationrail.NavigationRailMenuView.onMeasure(II)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r7 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:55)\l0x0004: INVOKE  (r1 I:androidx.appcompat.view.menu.MenuBuilder) = (r5 I:com.google.android.material.navigationrail.NavigationRailMenuView) type: VIRTUAL call: com.google.android.material.navigationrail.NavigationRailMenuView.getMenu():androidx.appcompat.view.menu.MenuBuilder A[MD:():androidx.appcompat.view.menu.MenuBuilder (m)] (LINE:56)\l0x0008: INVOKE  (r1 I:java.util.ArrayList) = (r1 I:androidx.appcompat.view.menu.MenuBuilder) type: VIRTUAL call: androidx.appcompat.view.menu.MenuBuilder.getVisibleItems():java.util.ArrayList A[MD:():java.util.ArrayList\<androidx.appcompat.view.menu.MenuItemImpl\> (m)]\l0x000c: INVOKE  (r1 I:int) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0010: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:59)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0011|0x0011: IF  (r1 I:??[int, byte, short, char] A[D('visibleCount' int)]) \<= (r2 I:??[int, byte, short, char])  \-\> B:17:0x0022 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0013|0x0013: INVOKE  (r2 I:int) = (r5 I:com.google.android.material.navigationrail.NavigationRailMenuView) type: VIRTUAL call: com.google.android.material.navigationrail.NavigationRailMenuView.getLabelVisibilityMode():int A[MD:():int (m)]\l0x0017: INVOKE  (r2 I:boolean) = \l  (r5 I:com.google.android.material.navigationrail.NavigationRailMenuView)\l  (r2 I:int)\l  (r1 I:int A[D('visibleCount' int)])\l type: VIRTUAL call: com.google.android.material.navigationrail.NavigationRailMenuView.isShifting(int, int):boolean A[MD:(int, int):boolean (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001b|0x001b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0022 \l}"];
Node_16 [shape=record,label="{16\:\ 0x001d|0x001d: INVOKE  (r2 I:int) = \l  (r5 I:com.google.android.material.navigationrail.NavigationRailMenuView)\l  (r6 I:int A[D('widthMeasureSpec' int)])\l  (r0 I:int A[D('maxHeight' int)])\l  (r1 I:int A[D('visibleCount' int)])\l type: DIRECT call: com.google.android.material.navigationrail.NavigationRailMenuView.measureShiftingChildHeights(int, int, int):int A[MD:(int, int, int):int (m)] (LINE:60)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0027|0x0028: INVOKE  (r3 I:int) = (r6 I:int A[D('widthMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:67)\l0x002c: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002d: INVOKE  (r4 I:int) = (r2 I:int A[D('measuredHeight' int)]), (r7 I:int A[D('heightMeasureSpec' int)]), (r4 I:int) type: STATIC call: android.view.View.resolveSizeAndState(int, int, int):int A[MD:(int, int, int):int (c)] (LINE:68)\l0x0031: INVOKE  (r5 I:com.google.android.material.navigationrail.NavigationRailMenuView), (r3 I:int), (r4 I:int) type: VIRTUAL call: com.google.android.material.navigationrail.NavigationRailMenuView.setMeasuredDimension(int, int):void A[MD:(int, int):void (s)] (LINE:66)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0034|RETURN\l|0x0034: RETURN    (LINE:69)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0022|0x0022: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('measuredHeight' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:62)\l0x0023: INVOKE  (r2 I:int) = \l  (r5 I:com.google.android.material.navigationrail.NavigationRailMenuView)\l  (r6 I:int A[D('widthMeasureSpec' int)])\l  (r0 I:int A[D('maxHeight' int)])\l  (r1 I:int A[D('visibleCount' int)])\l  (r2 I:android.view.View)\l type: DIRECT call: com.google.android.material.navigationrail.NavigationRailMenuView.measureSharedChildHeights(int, int, int, android.view.View):int A[MD:(int, int, int, android.view.View):int (m)]\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.navigationrail.NavigationRailMenuView.onMeasure((r5 'this' I:com.google.android.material.navigationrail.NavigationRailMenuView A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:17:0x0022 \-\> B:18:0x0027, CROSS_EDGE: B:13:0x0011 \-\> B:17:0x0022\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x0022: r2 'measuredHeight' I\l  0x0004\-0x0034: r0 'maxHeight' I\l  0x0010\-0x0034: r1 'visibleCount' I\l  0x0027\-0x0034: r2 'measuredHeight' I\l  \-1 \-0x0034: r6 'widthMeasureSpec' I\l  \-1 \-0x0034: r7 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
Node_17 -> Node_18;
}

