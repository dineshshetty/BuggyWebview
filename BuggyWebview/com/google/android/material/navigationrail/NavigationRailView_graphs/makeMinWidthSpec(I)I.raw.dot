digraph "CFG forcom.google.android.material.navigationrail.NavigationRailView.makeMinWidthSpec(I)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r4 I:com.google.android.material.navigationrail.NavigationRailView) type: VIRTUAL call: com.google.android.material.navigationrail.NavigationRailView.getSuggestedMinimumWidth():int A[MD:():int (s)] (LINE:350)\l0x0004: INVOKE  (r1 I:int) = (r5 I:int A[D('measureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)] (LINE:351)\l0x0008: CONST  (r2 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0026 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r0 I:??[int, byte, short, char] A[D('minWidth' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:7:0x0026 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: INVOKE  (r1 I:int) = (r4 I:com.google.android.material.navigationrail.NavigationRailView) type: VIRTUAL call: com.google.android.material.navigationrail.NavigationRailView.getPaddingLeft():int A[MD:():int (s)] (LINE:352)\l0x0012: INVOKE  (r3 I:int) = (r4 I:com.google.android.material.navigationrail.NavigationRailView) type: VIRTUAL call: com.google.android.material.navigationrail.NavigationRailView.getPaddingRight():int A[MD:():int (s)]\l0x0016: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int) \l0x0017: ARITH  (r0 I:int) = (r0 I:int A[D('minWidth' int)]) + (r1 I:int) \l0x0019: INVOKE  (r1 I:int) = (r5 I:int A[D('measureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:355)\l0x001d: INVOKE  (r1 I:int) = (r1 I:int), (r0 I:int A[D('minWidth' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0021: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)] (LINE:354)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|RETURN\l|0x0025: RETURN  (r1 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|RETURN\l|0x0026: RETURN  (r5 I:int A[D('measureSpec' int)])  (LINE:358)\l}"];
MethodNode[shape=record,label="{private int com.google.android.material.navigationrail.NavigationRailView.makeMinWidthSpec((r4 'this' I:com.google.android.material.navigationrail.NavigationRailView A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('measureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0026 \-\> B:1:?, CROSS_EDGE: B:3:0x000a \-\> B:7:0x0026\lDebug Info:\l  0x0004\-0x0026: r0 'minWidth' I\l  \-1 \-0x0026: r5 'measureSpec' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_7 -> Node_1;
}

