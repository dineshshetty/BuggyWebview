digraph "CFG forcom.google.android.material.navigationrail.NavigationRailView.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r4 I:com.google.android.material.navigationrail.NavigationRailView), (r5 I:int A[D('widthMeasureSpec' int)]) type: DIRECT call: com.google.android.material.navigationrail.NavigationRailView.makeMinWidthSpec(int):int A[MD:(int):int (m)] (LINE:209)\l0x0004: INVOKE  \l  (r4 I:com.google.android.material.navigation.NavigationBarView)\l  (r0 I:int A[D('minWidthSpec' int)])\l  (r6 I:int A[D('heightMeasureSpec' int)])\l type: SUPER call: com.google.android.material.navigation.NavigationBarView.onMeasure(int, int):void A[MD:(int, int):void (c)] (LINE:210)\l0x0007: INVOKE  (r1 I:boolean) = (r4 I:com.google.android.material.navigationrail.NavigationRailView) type: DIRECT call: com.google.android.material.navigationrail.NavigationRailView.isHeaderViewVisible():boolean A[MD:():boolean (m)] (LINE:212)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r1 I:int) = (r4 I:com.google.android.material.navigationrail.NavigationRailView) type: VIRTUAL call: com.google.android.material.navigationrail.NavigationRailView.getMeasuredHeight():int A[MD:():int (s)] (LINE:213)\l0x0011: IGET  (r2 I:android.view.View) = (r4 I:com.google.android.material.navigationrail.NavigationRailView) com.google.android.material.navigationrail.NavigationRailView.headerView android.view.View \l0x0013: INVOKE  (r2 I:int) = (r2 I:android.view.View) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)]\l0x0017: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0018: IGET  (r2 I:int) = (r4 I:com.google.android.material.navigationrail.NavigationRailView) com.google.android.material.navigationrail.NavigationRailView.topMargin int \l0x001a: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x001b: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char])  (LINE:214)\l0x001d: INVOKE  (r2 I:int) = (r1 I:int A[D('maxMenuHeight' int)]), (r2 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x0021: INVOKE  (r3 I:com.google.android.material.navigationrail.NavigationRailMenuView) = (r4 I:com.google.android.material.navigationrail.NavigationRailView) type: DIRECT call: com.google.android.material.navigationrail.NavigationRailView.getNavigationRailMenuView():com.google.android.material.navigationrail.NavigationRailMenuView A[MD:():com.google.android.material.navigationrail.NavigationRailMenuView (m)] (LINE:215)\l0x0025: INVOKE  \l  (r4 I:com.google.android.material.navigationrail.NavigationRailView)\l  (r3 I:android.view.View)\l  (r0 I:int A[D('minWidthSpec' int)])\l  (r2 I:int A[D('menuHeightSpec' int)])\l type: VIRTUAL call: com.google.android.material.navigationrail.NavigationRailView.measureChild(android.view.View, int, int):void A[MD:(android.view.View, int, int):void (s)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|RETURN\lORIG_RETURN\l|0x0028: RETURN    (LINE:217)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN   A[SYNTHETIC] (LINE:217)\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.navigationrail.NavigationRailView.onMeasure((r4 'this' I:com.google.android.material.navigationrail.NavigationRailView A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:3:0x000b \-\> B:5:0x0028\lDebug Info:\l  0x001b\-0x0028: r1 'maxMenuHeight' I\l  0x0021\-0x0028: r2 'menuHeightSpec' I\l  0x0004\-0x0028: r0 'minWidthSpec' I\l  \-1 \-0x0028: r5 'widthMeasureSpec' I\l  \-1 \-0x0028: r6 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

