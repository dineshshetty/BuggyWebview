digraph "CFG forcom.google.android.material.navigationrail.NavigationRailView.addHeaderView(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:android.content.Context) = (r2 I:com.google.android.material.navigationrail.NavigationRailView) type: VIRTUAL call: com.google.android.material.navigationrail.NavigationRailView.getContext():android.content.Context A[MD:():android.content.Context (s)] (LINE:255)\l0x0004: INVOKE  (r0 I:android.view.LayoutInflater) = (r0 I:android.content.Context) type: STATIC call: android.view.LayoutInflater.from(android.content.Context):android.view.LayoutInflater A[MD:(android.content.Context):android.view.LayoutInflater (c)]\l0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: INVOKE  (r0 I:android.view.View) = (r0 I:android.view.LayoutInflater), (r3 I:int A[D('layoutRes' int)]), (r2 I:android.view.ViewGroup), (r1 I:boolean) type: VIRTUAL call: android.view.LayoutInflater.inflate(int, android.view.ViewGroup, boolean):android.view.View A[MD:(int, android.view.ViewGroup, boolean):android.view.View (c)]\l0x000d: INVOKE  (r2 I:com.google.android.material.navigationrail.NavigationRailView), (r0 I:android.view.View) type: VIRTUAL call: com.google.android.material.navigationrail.NavigationRailView.addHeaderView(android.view.View):void A[MD:(android.view.View):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|RETURN\l|0x0010: RETURN    (LINE:256)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.navigationrail.NavigationRailView.addHeaderView((r2 'this' I:com.google.android.material.navigationrail.NavigationRailView A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('layoutRes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0010: r3 'layoutRes' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

