digraph "CFG forcom.google.android.material.navigationrail.NavigationRailView.onLayout(ZIIII)V" {
subgraph cluster_Region_2114311882 {
label = "R(3:1|(2:3|(1:5))(1:(1:13))|(1:(1:7)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|super.onLayout(r7, r8, r9, r10, r11)\lcom.google.android.material.navigationrail.NavigationRailMenuView com.google.android.material.navigationrail.NavigationRailMenuView r0 = getNavigationRailMenuView()\lint r1 = 0\l}"];
subgraph cluster_IfRegion_880892807 {
label = "IF [B:3:0x000c] THEN: R(2:3|(1:5)) ELSE: R(1:(1:13))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|if (isHeaderViewVisible() != false) goto L3\l}"];
subgraph cluster_Region_1050045467 {
label = "R(2:3|(1:5))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|int int r2 = r6.headerView.getBottom() + r6.topMargin\lint int r3 = r0.getTop()\l}"];
subgraph cluster_IfRegion_1655178300 {
label = "IF [B:5:0x001b] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001b|if (r3 \< r2) goto L5\l}"];
subgraph cluster_Region_1591406860 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001d|int r1 = r2 \- r3\l}"];
}
}
}
subgraph cluster_Region_33466409 {
label = "R(1:(1:13)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1467974277 {
label = "IF [B:8:0x0024] THEN: R(1:13) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0024|if (r0.isTopGravity() != false) goto L13\l}"];
subgraph cluster_Region_1394715079 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0026|int r1 = r6.topMargin\l}"];
}
}
}
}
subgraph cluster_Region_2078406 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1964649464 {
label = "IF [B:11:0x002a] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002a|PHI: r1 \l  PHI: (r1v2 'offsetY' int) = (r1v0 'offsetY' int), (r1v1 'offsetY' int), (r1v0 'offsetY' int), (r1v3 'offsetY' int) binds: [B:8:0x0024, B:9:0x0026, B:5:0x001b, B:6:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \> 0) goto L7\l}"];
subgraph cluster_Region_54697187 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002d|r0.layout(r0.getLeft(), r0.getTop() + r1, r0.getRight(), r0.getBottom() + r1)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0042|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0020}"];
MethodNode[shape=record,label="{protected void com.google.android.material.navigationrail.NavigationRailView.onLayout((r6v0 'this' com.google.android.material.navigationrail.NavigationRailView A[IMMUTABLE_TYPE, THIS]), (r7v0 'changed' boolean A[D('changed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'left' int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'top' int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'right' int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'bottom' int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:11:0x002a \-\> B:13:0x0042, CROSS_EDGE: B:5:0x001b \-\> B:11:0x002a, CROSS_EDGE: B:9:0x0026 \-\> B:11:0x002a, CROSS_EDGE: B:8:0x0024 \-\> B:11:0x002a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onLayout(boolean, int, int, int, int):void\}]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_11[style=dashed];
Node_6 -> Node_11;
Node_8 -> Node_9;
Node_8 -> Node_11[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14[style=dashed];
Node_12 -> Node_13;
Node_0 -> Node_2;
Node_13 -> Node_1;
Node_14 -> Node_1;
Node_7 -> Node_8;
}

