digraph "CFG forcom.google.android.material.navigationrail.NavigationRailItemView.onMeasure(II)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  \l  (r4 I:com.google.android.material.navigation.NavigationBarItemView)\l  (r5 I:int A[D('widthMeasureSpec' int)])\l  (r6 I:int A[D('heightMeasureSpec' int)])\l type: SUPER call: com.google.android.material.navigation.NavigationBarItemView.onMeasure(int, int):void A[MD:(int, int):void (c)] (LINE:40)\l0x0003: INVOKE  (r0 I:int) = (r6 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)] (LINE:42)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0009|0x0009: INVOKE  (r0 I:int) = (r6 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:43)\l0x000d: INVOKE  (r1 I:int) = (r4 I:com.google.android.material.navigationrail.NavigationRailItemView) type: VIRTUAL call: com.google.android.material.navigationrail.NavigationRailItemView.getMeasuredHeight():int A[MD:():int (s)] (LINE:44)\l0x0011: INVOKE  (r2 I:int) = (r1 I:int A[D('measuredHeight' int)]), (r0 I:int A[D('preferredHeight' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:45)\l0x0015: INVOKE  (r3 I:int) = (r4 I:com.google.android.material.navigationrail.NavigationRailItemView) type: VIRTUAL call: com.google.android.material.navigationrail.NavigationRailItemView.getMeasuredWidthAndState():int A[MD:():int (s)] (LINE:48)\l0x0019: INVOKE  (r4 I:com.google.android.material.navigationrail.NavigationRailItemView), (r3 I:int), (r2 I:int A[D('bestHeight' int)]) type: VIRTUAL call: com.google.android.material.navigationrail.NavigationRailItemView.setMeasuredDimension(int, int):void A[MD:(int, int):void (s)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|RETURN\lORIG_RETURN\l|0x001c: RETURN    (LINE:50)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x001c: RETURN   A[SYNTHETIC] (LINE:50)\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.navigationrail.NavigationRailItemView.onMeasure((r4 'this' I:com.google.android.material.navigationrail.NavigationRailItemView A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x0007 \-\> B:12:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x001c: r0 'preferredHeight' I\l  0x0011\-0x001c: r1 'measuredHeight' I\l  0x0015\-0x001c: r2 'bestHeight' I\l  \-1 \-0x001c: r5 'widthMeasureSpec' I\l  \-1 \-0x001c: r6 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

