digraph "CFG forcom.google.android.material.datepicker.YearGridAdapter.onCreateViewHolder(Landroid\/view\/ViewGroup;I)Lcom\/google\/android\/material\/datepicker\/YearGridAdapter$ViewHolder;" {
subgraph cluster_Region_585753421 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0001|android.widget.TextView android.widget.TextView r0 = (android.widget.TextView) android.view.LayoutInflater.from(r4.getContext()).inflate(com.google.android.material.C0571R.layout.mtrl_calendar_year, r4, false)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|RETURN\l|return new com.google.android.material.datepicker.YearGridAdapter.ViewHolder(r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public com.google.android.material.datepicker.YearGridAdapter$ViewHolder com.google.android.material.datepicker.YearGridAdapter.onCreateViewHolder((r3v0 'this' com.google.android.material.datepicker.YearGridAdapter A[IMMUTABLE_TYPE, THIS]), (r4v0 'viewGroup' android.view.ViewGroup A[D('viewGroup' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'viewType' int A[D('viewType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lRENAME_REASON:avoid collision after fix types in other method\lREPLACED_BY: com.google.android.material.datepicker.YearGridAdapter.onCreateViewHolder(android.view.ViewGroup, int):com.google.android.material.datepicker.YearGridAdapter$ViewHolder\lBRIDGED_BY: com.google.android.material.datepicker.YearGridAdapter.onCreateViewHolder(android.view.ViewGroup, int):com.google.android.material.datepicker.YearGridAdapter$ViewHolder\lJadxCommentsAttr\{\l DEBUG: \l \-\> Method merged with bridge method\}\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.RecyclerView.Adapter.onCreateViewHolder(android.view.ViewGroup, int):VH extends androidx.recyclerview.widget.RecyclerView$ViewHolder]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_1;
Node_0 -> Node_2;
}

