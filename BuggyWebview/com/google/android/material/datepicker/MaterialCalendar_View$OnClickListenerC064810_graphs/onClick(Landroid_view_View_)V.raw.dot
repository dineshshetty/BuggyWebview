digraph "CFG forcom.google.android.material.datepicker.MaterialCalendar.10.onClick(Landroid\/view\/View;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.datepicker.MaterialCalendar) = \l  (r4 I:com.google.android.material.datepicker.MaterialCalendar$10 A[D('this' com.google.android.material.datepicker.MaterialCalendar$10)])\l com.google.android.material.datepicker.MaterialCalendar.10.this$0 com.google.android.material.datepicker.MaterialCalendar  (LINE:480)\l0x0002: INVOKE  (r0 I:androidx.recyclerview.widget.LinearLayoutManager) = (r0 I:com.google.android.material.datepicker.MaterialCalendar) type: VIRTUAL call: com.google.android.material.datepicker.MaterialCalendar.getLayoutManager():androidx.recyclerview.widget.LinearLayoutManager A[MD:():androidx.recyclerview.widget.LinearLayoutManager (m)]\l0x0006: INVOKE  (r0 I:int) = (r0 I:androidx.recyclerview.widget.LinearLayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.LinearLayoutManager.findLastVisibleItemPosition():int A[MD:():int (m)]\l0x000a: ARITH  (r1 I:int) = (r0 I:int A[D('currentItem' int)]) + (\-1 int)  (LINE:481)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000c|0x000c: IF  (r1 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x000e|0x000e: IGET  (r1 I:com.google.android.material.datepicker.MaterialCalendar) = \l  (r4 I:com.google.android.material.datepicker.MaterialCalendar$10 A[D('this' com.google.android.material.datepicker.MaterialCalendar$10)])\l com.google.android.material.datepicker.MaterialCalendar.10.this$0 com.google.android.material.datepicker.MaterialCalendar  (LINE:482)\l0x0010: IGET  (r2 I:com.google.android.material.datepicker.MonthsPagerAdapter) = \l  (r4 I:com.google.android.material.datepicker.MaterialCalendar$10 A[D('this' com.google.android.material.datepicker.MaterialCalendar$10)])\l com.google.android.material.datepicker.MaterialCalendar.10.val$monthsPagerAdapter com.google.android.material.datepicker.MonthsPagerAdapter \l0x0012: ARITH  (r3 I:int) = (r0 I:int A[D('currentItem' int)]) + (\-1 int) \l0x0014: INVOKE  (r2 I:com.google.android.material.datepicker.Month) = (r2 I:com.google.android.material.datepicker.MonthsPagerAdapter), (r3 I:int) type: VIRTUAL call: com.google.android.material.datepicker.MonthsPagerAdapter.getPageMonth(int):com.google.android.material.datepicker.Month A[MD:(int):com.google.android.material.datepicker.Month (m)]\l0x0018: INVOKE  (r1 I:com.google.android.material.datepicker.MaterialCalendar), (r2 I:com.google.android.material.datepicker.Month) type: VIRTUAL call: com.google.android.material.datepicker.MaterialCalendar.setCurrentMonth(com.google.android.material.datepicker.Month):void A[MD:(com.google.android.material.datepicker.Month):void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|RETURN\lORIG_RETURN\l|0x001b: RETURN    (LINE:484)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x001b: RETURN   A[SYNTHETIC] (LINE:484)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.datepicker.MaterialCalendar.10.onClick((r4 'this' I:com.google.android.material.datepicker.MaterialCalendar$10 A[D('this' com.google.android.material.datepicker.MaterialCalendar$10), IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x000c \-\> B:12:0x001b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x001b: r0 'currentItem' I\l  0x0000\-0x001b: r4 'this' Lcom\/google\/android\/material\/datepicker\/MaterialCalendar$10;, signature: Lcom\/google\/android\/material\/datepicker\/MaterialCalendar$10;\l  \-1 \-0x001b: r5 'view' Landroid\/view\/View;\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.OnClickListener.onClick(android.view.View):void\}]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

