digraph "CFG forcom.google.android.material.datepicker.RangeDateSelector.getDefaultThemeResId(Landroid\/content\/Context;)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:android.content.res.Resources) = (r7 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)] (LINE:126)\l0x0004: INVOKE  (r1 I:android.util.DisplayMetrics) = (r0 I:android.content.res.Resources A[D('res' android.content.res.Resources)]) type: VIRTUAL call: android.content.res.Resources.getDisplayMetrics():android.util.DisplayMetrics A[MD:():android.util.DisplayMetrics (c)] (LINE:127)\l0x0008: SGET  (r2 I:int) =  com.google.android.material.R.dimen.mtrl_calendar_maximum_default_fullscreen_minor_axis int  (LINE:128)\l0x000a: INVOKE  (r2 I:int) = (r0 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r2 I:int) type: VIRTUAL call: android.content.res.Resources.getDimensionPixelSize(int):int A[MD:(int):int throws android.content.res.Resources$NotFoundException (c)] (LINE:129)\l0x000e: IGET  (r3 I:int) = (r1 I:android.util.DisplayMetrics A[D('display' android.util.DisplayMetrics)]) android.util.DisplayMetrics.widthPixels int  (LINE:130)\l0x0010: IGET  (r4 I:int) = (r1 I:android.util.DisplayMetrics A[D('display' android.util.DisplayMetrics)]) android.util.DisplayMetrics.heightPixels int \l0x0012: INVOKE  (r3 I:int) = (r3 I:int), (r4 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r3 I:??[int, byte, short, char] A[D('minorAxisPx' int)]) \<= (r2 I:??[int, byte, short, char] A[D('maximumDefaultFullscreenMinorAxis' int)])  \-\> B:5:0x001b  (LINE:132)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: SGET  (r4 I:int) =  com.google.android.material.R.attr.materialCalendarTheme int  (LINE:133)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001e: CONST_CLASS  (r5 I:java.lang.Class\<com.google.android.material.datepicker.MaterialDatePicker\>) =  com.google.android.material.datepicker.MaterialDatePicker.class  (LINE:135)\l0x0020: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getCanonicalName():java.lang.String A[MD:():java.lang.String (c)] (LINE:136)\l0x0024: INVOKE  (r5 I:int) = \l  (r7 I:android.content.Context A[D('context' android.content.Context)])\l  (r4 I:int A[D('defaultThemeAttr' int)])\l  (r5 I:java.lang.String)\l type: STATIC call: com.google.android.material.resources.MaterialAttributes.resolveOrThrow(android.content.Context, int, java.lang.String):int A[MD:(android.content.Context, int, java.lang.String):int (m)] (LINE:135)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|RETURN\l|0x0028: RETURN  (r5 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: SGET  (r4 I:int) =  com.google.android.material.R.attr.materialCalendarFullscreenTheme int  (LINE:134)\l}"];
MethodNode[shape=record,label="{public int com.google.android.material.datepicker.RangeDateSelector.getDefaultThemeResId((r6 'this' I:com.google.android.material.datepicker.RangeDateSelector A[IMMUTABLE_TYPE, THIS]), (r7 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x001b \-\> B:6:0x001d\lDebug Info:\l  0x0004\-0x0028: r0 'res' Landroid\/content\/res\/Resources;\l  0x0008\-0x0028: r1 'display' Landroid\/util\/DisplayMetrics;\l  0x000e\-0x0028: r2 'maximumDefaultFullscreenMinorAxis' I\l  0x0016\-0x0028: r3 'minorAxisPx' I\l  0x001e\-0x0028: r4 'defaultThemeAttr' I\l  \-1 \-0x0028: r7 'context' Landroid\/content\/Context;\lMETHOD_OVERRIDE: [com.google.android.material.datepicker.DateSelector.getDefaultThemeResId(android.content.Context):int]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
}

