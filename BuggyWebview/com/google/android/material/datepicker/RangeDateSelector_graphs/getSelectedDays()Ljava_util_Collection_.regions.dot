digraph "CFG forcom.google.android.material.datepicker.RangeDateSelector.getSelectedDays()Ljava\/util\/Collection;" {
subgraph cluster_Region_1155005175 {
label = "R(5:1|(1:3)|4|(1:6)|7)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|java.util.ArrayList java.util.ArrayList\<java.lang.Long\> r0 = new java.util.ArrayList\<\>()\ljava.lang.Long java.lang.Long r1 = r2.selectedStartItem\l}"];
subgraph cluster_IfRegion_402906241 {
label = "IF [B:3:0x0007] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r1 != null) goto L3\l}"];
subgraph cluster_Region_1547945516 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|r0.add(r1)\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x000c|java.lang.Long java.lang.Long r1 = r2.selectedEndItem\l}"];
subgraph cluster_IfRegion_1668844852 {
label = "IF [B:6:0x000e] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000e|if (r1 != null) goto L6\l}"];
subgraph cluster_Region_818040580 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0010|r0.add(r1)\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0013|RETURN\l|return r0\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.util.Collection\<java.lang.Long\> com.google.android.material.datepicker.RangeDateSelector.getSelectedDays((r2v0 'this' com.google.android.material.datepicker.RangeDateSelector A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x000e \-\> B:8:0x0013, CROSS_EDGE: B:3:0x0007 \-\> B:5:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ()Ljava\/util\/Collection\<Ljava\/lang\/Long;\>;\lMETHOD_OVERRIDE: [com.google.android.material.datepicker.DateSelector.getSelectedDays():java.util.Collection\<java.lang.Long\>]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_0 -> Node_2;
}

