digraph "CFG forcom.google.android.material.datepicker.Month.monthsUntil(Lcom\/google\/android\/material\/datepicker\/Month;)I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:java.util.Calendar) = (r3 I:com.google.android.material.datepicker.Month) com.google.android.material.datepicker.Month.firstOfMonth java.util.Calendar  (LINE:148)\l0x0002: INSTANCE_OF  (r0 I:boolean) = (r0 I:??[OBJECT, ARRAY]) java.util.GregorianCalendar \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0014 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: IGET  (r0 I:int) = (r4 I:com.google.android.material.datepicker.Month A[D('other' com.google.android.material.datepicker.Month)]) com.google.android.material.datepicker.Month.year int  (LINE:149)\l0x0008: IGET  (r1 I:int) = (r3 I:com.google.android.material.datepicker.Month) com.google.android.material.datepicker.Month.year int \l0x000a: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x000b: ARITH  (r0 I:int) = (r0 I:int) * (12 int) \l0x000d: IGET  (r1 I:int) = (r4 I:com.google.android.material.datepicker.Month A[D('other' com.google.android.material.datepicker.Month)]) com.google.android.material.datepicker.Month.month int \l0x000f: IGET  (r2 I:int) = (r3 I:com.google.android.material.datepicker.Month) com.google.android.material.datepicker.Month.month int \l0x0011: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0012: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:151)\l0x0016: CONST_STR  (r1 I:java.lang.String) =  \"Only Gregorian calendars are supported.\" \l0x0018: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001b|0x001b: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int com.google.android.material.datepicker.Month.monthsUntil((r3 'this' I:com.google.android.material.datepicker.Month A[IMMUTABLE_TYPE, THIS]), (r4 I:com.google.android.material.datepicker.Month A[D('other' com.google.android.material.datepicker.Month), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x001b \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001b: r4 'other' Lcom\/google\/android\/material\/datepicker\/Month;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

