digraph "CFG forcom.google.android.material.datepicker.Month.daysFromStartOfWeekToFirstOfMonth(I)I" {
subgraph cluster_Region_921244280 {
label = "R(2:4|(2:(1:7)|(1:9)))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0011|PHI: r1 \l  PHI: (r1v3 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r0 = r2.firstOfMonth.get(7) \- (r3 \> 0 ? r3 : r2.firstOfMonth.getFirstDayOfWeek())\l}"];
subgraph cluster_Region_558392554 {
label = "R(2:(1:7)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_42394216 {
label = "IF [B:18:0x0012] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0012|if (r0 \< 0) goto L6\l}"];
subgraph cluster_Region_810086335 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0017|RETURN\lORIG_RETURN\l|return r0 + r2.daysInWeek\l}"];
}
}
subgraph cluster_Region_2094380106 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0007}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0009}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0014}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000b}"];
MethodNode[shape=record,label="{public int com.google.android.material.datepicker.Month.daysFromStartOfWeekToFirstOfMonth((r2v0 'this' com.google.android.material.datepicker.Month A[IMMUTABLE_TYPE, THIS]), (r3v0 'firstDayOfWeek' int A[D('firstDayOfWeek' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0012 \-\> B:20:0x0017, CROSS_EDGE: B:16:0x000b \-\> B:17:0x0011\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_21[style=dashed];
Node_20 -> Node_12;
Node_21 -> Node_12;
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_19 -> Node_20;
Node_16 -> Node_17;
}

