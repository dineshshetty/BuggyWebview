digraph "CFG forcom.google.android.material.datepicker.MonthsPagerAdapter.onCreateViewHolder(Landroid\/view\/ViewGroup;I)Lcom\/google\/android\/material\/datepicker\/MonthsPagerAdapter$ViewHolder;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0001|0x0001: INVOKE  (r0 I:android.content.Context) = (r5 I:android.view.ViewGroup A[D('viewGroup' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.getContext():android.content.Context A[MD:():android.content.Context (c)] (LINE:97)\l0x0005: INVOKE  (r0 I:android.view.LayoutInflater) = (r0 I:android.content.Context) type: STATIC call: android.view.LayoutInflater.from(android.content.Context):android.view.LayoutInflater A[MD:(android.content.Context):android.view.LayoutInflater (c)]\l0x0009: SGET  (r1 I:int) =  com.google.android.material.R.layout.mtrl_calendar_month_labeled int \l0x000b: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:98)\l0x000c: INVOKE  (r0 I:android.view.View) = \l  (r0 I:android.view.LayoutInflater)\l  (r1 I:int)\l  (r5 I:android.view.ViewGroup A[D('viewGroup' android.view.ViewGroup)])\l  (r2 I:boolean)\l type: VIRTUAL call: android.view.LayoutInflater.inflate(int, android.view.ViewGroup, boolean):android.view.View A[MD:(int, android.view.ViewGroup, boolean):android.view.View (c)]\l0x0010: CHECK_CAST (r0 I:android.widget.LinearLayout) = (android.widget.LinearLayout) (r0 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r1 I:android.content.Context) = (r5 I:android.view.ViewGroup A[D('viewGroup' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.getContext():android.content.Context A[MD:():android.content.Context (c)] (LINE:100)\l0x0016: INVOKE  (r1 I:boolean) = (r1 I:android.content.Context) type: STATIC call: com.google.android.material.datepicker.MaterialDatePicker.isFullscreen(android.content.Context):boolean A[MD:(android.content.Context):boolean (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002e \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: NEW_INSTANCE  (r1 I:androidx.recyclerview.widget.RecyclerView$LayoutParams) =  androidx.recyclerview.widget.RecyclerView$LayoutParams  (LINE:101)\l0x001e: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x001f: IGET  (r3 I:int) = (r4 I:com.google.android.material.datepicker.MonthsPagerAdapter) com.google.android.material.datepicker.MonthsPagerAdapter.itemHeight int \l0x0021: INVOKE  (r1 I:androidx.recyclerview.widget.RecyclerView$LayoutParams), (r2 I:int), (r3 I:int) type: DIRECT call: androidx.recyclerview.widget.RecyclerView.LayoutParams.\<init\>(int, int):void A[MD:(int, int):void (m)]\l0x0024: INVOKE  \l  (r0 I:android.widget.LinearLayout A[D('container' android.widget.LinearLayout)])\l  (r1 I:android.view.ViewGroup$LayoutParams)\l type: VIRTUAL call: android.widget.LinearLayout.setLayoutParams(android.view.ViewGroup$LayoutParams):void A[MD:(android.view.ViewGroup$LayoutParams):void (s)]\l0x0027: NEW_INSTANCE  (r1 I:com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder) =  com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder  (LINE:102)\l0x0029: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x002a: INVOKE  \l  (r1 I:com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder)\l  (r0 I:android.widget.LinearLayout A[D('container' android.widget.LinearLayout)])\l  (r2 I:boolean)\l type: DIRECT call: com.google.android.material.datepicker.MonthsPagerAdapter.ViewHolder.\<init\>(android.widget.LinearLayout, boolean):void A[MD:(android.widget.LinearLayout, boolean):void (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|RETURN\l|0x002d: RETURN  (r1 I:com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: NEW_INSTANCE  (r1 I:com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder) =  com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder  (LINE:104)\l0x0030: INVOKE  \l  (r1 I:com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder)\l  (r0 I:android.widget.LinearLayout A[D('container' android.widget.LinearLayout)])\l  (r2 I:boolean)\l type: DIRECT call: com.google.android.material.datepicker.MonthsPagerAdapter.ViewHolder.\<init\>(android.widget.LinearLayout, boolean):void A[MD:(android.widget.LinearLayout, boolean):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|RETURN\l|0x0033: RETURN  (r1 I:com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder) \l}"];
MethodNode[shape=record,label="{public com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder com.google.android.material.datepicker.MonthsPagerAdapter.onCreateViewHolder((r4 'this' I:com.google.android.material.datepicker.MonthsPagerAdapter A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.ViewGroup A[D('viewGroup' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('viewType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.RecyclerView.Adapter.onCreateViewHolder(android.view.ViewGroup, int):VH extends androidx.recyclerview.widget.RecyclerView$ViewHolder]\lCROSS_EDGE: B:7:0x0033 \-\> B:1:?\lDebug Info:\l  0x0012\-0x0033: r0 'container' Landroid\/widget\/LinearLayout;\l  \-1 \-0x0033: r5 'viewGroup' Landroid\/view\/ViewGroup;\l  \-1 \-0x0033: r6 'viewType' I\lBRIDGED_BY: com.google.android.material.datepicker.MonthsPagerAdapter.onCreateViewHolder(android.view.ViewGroup, int):com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder\lRENAME_REASON:avoid collision after fix types in other method\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

