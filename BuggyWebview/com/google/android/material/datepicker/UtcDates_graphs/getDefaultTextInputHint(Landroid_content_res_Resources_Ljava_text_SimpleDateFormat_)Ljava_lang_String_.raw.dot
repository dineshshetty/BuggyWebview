digraph "CFG forcom.google.android.material.datepicker.UtcDates.getDefaultTextInputHint(Landroid\/content\/res\/Resources;Ljava\/text\/SimpleDateFormat;)Ljava\/lang\/String;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.String) = (r8 I:java.text.SimpleDateFormat A[D('format' java.text.SimpleDateFormat)]) type: VIRTUAL call: java.text.SimpleDateFormat.toPattern():java.lang.String A[MD:():java.lang.String (c)] (LINE:162)\l0x0004: SGET  (r1 I:int) =  com.google.android.material.R.string.mtrl_picker_text_input_year_abbr int  (LINE:163)\l0x0006: INVOKE  (r1 I:java.lang.String) = (r7 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r1 I:int) type: VIRTUAL call: android.content.res.Resources.getString(int):java.lang.String A[MD:(int):java.lang.String throws android.content.res.Resources$NotFoundException (c)]\l0x000a: SGET  (r2 I:int) =  com.google.android.material.R.string.mtrl_picker_text_input_month_abbr int  (LINE:164)\l0x000c: INVOKE  (r2 I:java.lang.String) = (r7 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r2 I:int) type: VIRTUAL call: android.content.res.Resources.getString(int):java.lang.String A[MD:(int):java.lang.String throws android.content.res.Resources$NotFoundException (c)]\l0x0010: SGET  (r3 I:int) =  com.google.android.material.R.string.mtrl_picker_text_input_day_abbr int  (LINE:165)\l0x0012: INVOKE  (r3 I:java.lang.String) = (r7 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r3 I:int) type: VIRTUAL call: android.content.res.Resources.getString(int):java.lang.String A[MD:(int):java.lang.String throws android.content.res.Resources$NotFoundException (c)]\l0x0016: CONST_STR  (r4 I:java.lang.String) =  \"[^y]\"  (LINE:169)\l0x0018: CONST_STR  (r5 I:java.lang.String) =  \"\" \l0x001a: INVOKE  (r4 I:java.lang.String) = (r0 I:java.lang.String A[D('formatHint' java.lang.String)]), (r4 I:java.lang.String), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.String.replaceAll(java.lang.String, java.lang.String):java.lang.String A[MD:(java.lang.String, java.lang.String):java.lang.String (c)]\l0x001e: INVOKE  (r4 I:int) = (r4 I:java.lang.String) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)]\l0x0022: CONST_STR  (r5 I:java.lang.String) =  \"y\" \l0x0024: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002d \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: CONST_STR  (r4 I:java.lang.String) =  \"yyyy\"  (LINE:170)\l0x0029: INVOKE  (r0 I:java.lang.String A[D('formatHint' java.lang.String)]) = \l  (r0 I:java.lang.String A[D('formatHint' java.lang.String)])\l  (r5 I:java.lang.CharSequence)\l  (r4 I:java.lang.CharSequence)\l type: VIRTUAL call: java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence):java.lang.String A[MD:(java.lang.CharSequence, java.lang.CharSequence):java.lang.String (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: CONST_STR  (r4 I:java.lang.String) =  \"d\"  (LINE:173)\l0x002f: INVOKE  (r4 I:java.lang.String) = \l  (r0 I:java.lang.String A[D('formatHint' java.lang.String)])\l  (r4 I:java.lang.CharSequence)\l  (r3 I:java.lang.CharSequence A[D('dayChar' java.lang.String)])\l type: VIRTUAL call: java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence):java.lang.String A[MD:(java.lang.CharSequence, java.lang.CharSequence):java.lang.String (c)]\l0x0033: CONST_STR  (r6 I:java.lang.String) =  \"M\" \l0x0035: INVOKE  (r4 I:java.lang.String) = \l  (r4 I:java.lang.String)\l  (r6 I:java.lang.CharSequence)\l  (r2 I:java.lang.CharSequence A[D('monthChar' java.lang.String)])\l type: VIRTUAL call: java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence):java.lang.String A[MD:(java.lang.CharSequence, java.lang.CharSequence):java.lang.String (c)]\l0x0039: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String), (r5 I:java.lang.CharSequence), (r1 I:java.lang.CharSequence A[D('yearChar' java.lang.String)]) type: VIRTUAL call: java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence):java.lang.String A[MD:(java.lang.CharSequence, java.lang.CharSequence):java.lang.String (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|RETURN\l|0x003d: RETURN  (r4 I:java.lang.String) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static java.lang.String com.google.android.material.datepicker.UtcDates.getDefaultTextInputHint((r7 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.text.SimpleDateFormat A[D('format' java.text.SimpleDateFormat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0025 \-\> B:12:0x002d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x003d: r0 'formatHint' Ljava\/lang\/String;\l  0x000a\-0x003d: r1 'yearChar' Ljava\/lang\/String;\l  0x0010\-0x003d: r2 'monthChar' Ljava\/lang\/String;\l  0x0016\-0x003d: r3 'dayChar' Ljava\/lang\/String;\l  \-1 \-0x003d: r7 'res' Landroid\/content\/res\/Resources;\l  \-1 \-0x003d: r8 'format' Ljava\/text\/SimpleDateFormat;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

