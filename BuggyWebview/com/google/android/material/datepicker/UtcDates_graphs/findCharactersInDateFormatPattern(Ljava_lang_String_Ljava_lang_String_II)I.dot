digraph "CFG forcom.google.android.material.datepicker.UtcDates.findCharactersInDateFormatPattern(Ljava\/lang\/String;Ljava\/lang\/String;II)I" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|r0 = r6\l}"];
Node_29 [shape=record,label="{29\:\ 0x0001|LOOP_START\lLOOP:0: B:29:0x0001\-\>B:43:0x002d\lPHI: r0 \l  PHI: (r0v1 'position' int) = (r0v0 'position' int), (r0v3 'position' int) binds: [B:28:0x0000, B:43:0x002d] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \< 0) goto L25\l}"];
Node_30 [shape=record,label="{30\:\ 0x0003}"];
Node_31 [shape=record,label="{31\:\ 0x0007|if (r0 \>= r3.length()) goto L24\l}"];
Node_32 [shape=record,label="{32\:\ 0x0009}"];
Node_33 [shape=record,label="{33\:\ 0x0012|if (r4.indexOf(r3.charAt(r0)) != (\-1)) goto L21\l}"];
Node_34 [shape=record,label="{34\:\ 0x0014}"];
Node_35 [shape=record,label="{35\:\ 0x001a|if (r3.charAt(r0) != ''') goto L20\l}"];
Node_36 [shape=record,label="{36\:\ 0x001c|int r0 = r0 + r5\l}"];
Node_37 [shape=record,label="{37\:\ 0x001d|LOOP_START\lLOOP:1: B:37:0x001d\-\>B:42:0x002b\lPHI: r0 \l  PHI: (r0v5 'position' int) = (r0v4 'position' int), (r0v6 'position' int) binds: [B:36:0x001c, B:42:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \< 0) goto L19\l}"];
Node_38 [shape=record,label="{38\:\ 0x001f}"];
Node_39 [shape=record,label="{39\:\ 0x0023|if (r0 \>= r3.length()) goto L18\l}"];
Node_40 [shape=record,label="{40\:\ 0x0025}"];
Node_41 [shape=record,label="{41\:\ 0x0029|if (r3.charAt(r0) == ''') goto L16\l}"];
Node_42 [shape=record,label="{42\:\ 0x002b|LOOP_END\lLOOP:1: B:37:0x001d\-\>B:42:0x002b\l|int r0 = r0 + r5\l}"];
Node_51 [shape=record,label="{51\:\ 0x002d|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x002d|LOOP_END\lLOOP:0: B:29:0x0001\-\>B:43:0x002d\lPHI: r0 \l  PHI: (r0v2 'position' int) = (r0v1 'position' int), (r0v5 'position' int), (r0v5 'position' int), (r0v5 'position' int) binds: [B:48:0x002d, B:49:0x002d, B:50:0x002d, B:51:0x002d] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = r0 + r5\l}"];
Node_50 [shape=record,label="{50\:\ 0x002d|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x002d|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x002d|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x002f|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x002f|RETURN\l|return r0\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x002f|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x002f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static int com.google.android.material.datepicker.UtcDates.findCharactersInDateFormatPattern((r3v0 'pattern' java.lang.String A[D('pattern' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'characterSequence' java.lang.String A[D('characterSequence' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'increment' int A[D('increment' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'initialPosition' int A[D('initialPosition' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:42:0x002b \-\> B:37:0x001d, BACK_EDGE: B:43:0x002d \-\> B:29:0x0001, CROSS_EDGE: B:39:0x0023 \-\> B:43:0x002d, CROSS_EDGE: B:37:0x001d \-\> B:43:0x002d, CROSS_EDGE: B:35:0x001a \-\> B:43:0x002d, CROSS_EDGE: B:31:0x0007 \-\> B:44:0x002f, CROSS_EDGE: B:29:0x0001 \-\> B:44:0x002f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_45;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_46;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_47;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_48;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_49;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_50;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_51;
Node_42 -> Node_37;
Node_51 -> Node_43;
Node_43 -> Node_29;
Node_50 -> Node_43;
Node_49 -> Node_43;
Node_48 -> Node_43;
Node_47 -> Node_44;
Node_44 -> Node_27;
Node_46 -> Node_44;
Node_45 -> Node_44;
}

