digraph "CFG forcom.google.android.material.datepicker.SingleDateSelector.setSelection(Ljava\/lang\/Long;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('selection' java.lang.Long)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0004  (LINE:67)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IPUT  (r0 I:java.lang.Long), (r2 I:com.google.android.material.datepicker.SingleDateSelector) com.google.android.material.datepicker.SingleDateSelector.selectedItem java.lang.Long \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|RETURN\l|0x0012: RETURN    (LINE:68)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: INVOKE  (r0 I:long) = (r3 I:java.lang.Long A[D('selection' java.lang.Long)]) type: VIRTUAL call: java.lang.Long.longValue():long A[MD:():long (c)]\l0x0008: INVOKE  (r0 I:long) = (r0 I:long) type: STATIC call: com.google.android.material.datepicker.UtcDates.canonicalYearMonthDay(long):long A[MD:(long):long (m)]\l0x000c: INVOKE  (r0 I:java.lang.Long) = (r0 I:long) type: STATIC call: java.lang.Long.valueOf(long):java.lang.Long A[MD:(long):java.lang.Long (c)]\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.datepicker.SingleDateSelector.setSelection((r2 'this' I:com.google.android.material.datepicker.SingleDateSelector A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Long A[D('selection' java.lang.Long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:4:0x0004 \-\> B:5:0x0010\lDebug Info:\l  \-1 \-0x0012: r3 'selection' Ljava\/lang\/Long;\lBRIDGED_BY: com.google.android.material.datepicker.SingleDateSelector.setSelection(java.lang.Long):void\lRENAME_REASON:avoid collision after fix types in other method\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_4 -> Node_5;
}

