digraph "CFG forcom.google.android.material.datepicker.SingleDateSelector.getSelectedDays()Ljava\/util\/Collection;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:84)\l0x0002: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0005: IGET  (r1 I:java.lang.Long) = (r2 I:com.google.android.material.datepicker.SingleDateSelector) com.google.android.material.datepicker.SingleDateSelector.selectedItem java.lang.Long  (LINE:85)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: INVOKE  (r0 I:java.util.ArrayList A[D('selections' java.util.ArrayList\<java.lang.Long\>)]), (r1 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:86)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:java.util.Collection\<java.lang.Long\> A[D('selections' java.util.ArrayList\<java.lang.Long\>)])  (LINE:88)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.util.Collection\<java.lang.Long\> com.google.android.material.datepicker.SingleDateSelector.getSelectedDays((r2 'this' I:com.google.android.material.datepicker.SingleDateSelector A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x0007 \-\> B:5:0x000c\lDebug Info:\l  0x0005\-0x000c: r0 'selections' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Ljava\/lang\/Long;\>;\lSIGNATURE: ()Ljava\/util\/Collection\<Ljava\/lang\/Long;\>;\lMETHOD_OVERRIDE: [com.google.android.material.datepicker.DateSelector.getSelectedDays():java.util.Collection\<java.lang.Long\>]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_1;
}

