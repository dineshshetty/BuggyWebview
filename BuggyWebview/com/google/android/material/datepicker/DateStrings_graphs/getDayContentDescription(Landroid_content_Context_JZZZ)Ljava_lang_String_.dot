digraph "CFG forcom.google.android.material.datepicker.DateStrings.getDayContentDescription(Landroid\/content\/Context;JZZZ)Ljava\/lang\/String;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|java.lang.String r0 = getOptionalYearMonthDayOfWeekDay(r6)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|if (r8 == false) goto L4\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|java.lang.String r0 = java.lang.String.format(r5.getString(com.google.android.material.C0571R.string.mtrl_picker_today_description), new java.lang.Object[]\{r0\})\l}"];
Node_17 [shape=record,label="{17\:\ 0x0016|PHI: r0 \l  PHI: (r0v1 'dayContentDescription' java.lang.String) = (r0v0 'dayContentDescription' java.lang.String), (r0v2 'dayContentDescription' java.lang.String) binds: [B:15:0x0006, B:16:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 == false) goto L8\l}"];
Node_18 [shape=record,label="{18\:\ 0x0018}"];
Node_19 [shape=record,label="{19\:\ 0x0026|RETURN\l|return java.lang.String.format(r5.getString(com.google.android.material.C0571R.string.mtrl_picker_start_date_description), new java.lang.Object[]\{r0\})\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0027|if (r10 == false) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x0029}"];
Node_22 [shape=record,label="{22\:\ 0x0037|RETURN\l|return java.lang.String.format(r5.getString(com.google.android.material.C0571R.string.mtrl_picker_end_date_description), new java.lang.Object[]\{r0\})\l}"];
Node_23 [shape=record,label="{23\:\ 0x0038|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public static java.lang.String com.google.android.material.datepicker.DateStrings.getDayContentDescription((r5v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'dayInMillis' long A[D('dayInMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'isToday' boolean A[D('isToday' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'isStartOfRange' boolean A[D('isStartOfRange' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'isEndOfRange' boolean A[D('isEndOfRange' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0037 \-\> B:13:?, CROSS_EDGE: B:23:0x0038 \-\> B:13:?, CROSS_EDGE: B:15:0x0006 \-\> B:17:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_13;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_13;
Node_23 -> Node_13;
}

