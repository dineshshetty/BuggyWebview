digraph "CFG forcom.google.android.material.datepicker.DateStrings.getYearContentDescription(Landroid\/content\/Context;I)Ljava\/lang\/String;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:java.util.Calendar) =  type: STATIC call: com.google.android.material.datepicker.UtcDates.getTodayCalendar():java.util.Calendar A[MD:():java.util.Calendar (m)] (LINE:245)\l0x0004: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0005: INVOKE  (r0 I:int) = (r0 I:java.util.Calendar), (r1 I:int) type: VIRTUAL call: java.util.Calendar.get(int):int A[MD:(int):int (c)]\l0x0009: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('year' int)])  \-\> B:14:0x001f \l}"];
Node_12 [shape=record,label="{12\:\ 0x000c|0x000c: SGET  (r0 I:int) =  com.google.android.material.R.string.mtrl_picker_navigate_to_current_year_description int  (LINE:246)\l0x000e: INVOKE  (r0 I:java.lang.String) = (r4 I:android.content.Context A[D('context' android.content.Context)]), (r0 I:int) type: VIRTUAL call: android.content.Context.getString(int):java.lang.String A[MD:(int):java.lang.String (c)] (LINE:247)\l0x0012: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0014: INVOKE  (r3 I:java.lang.Integer) = (r5 I:int A[D('year' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0018: APUT  (r1 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) \l0x001a: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String), (r1 I:java.lang.Object[]) type: STATIC call: java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String A[MD:(java.lang.String, java.lang.Object[]):java.lang.String VARARG (c)] (LINE:246)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|RETURN\l|0x001e: RETURN  (r0 I:java.lang.String) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|0x001f: SGET  (r0 I:int) =  com.google.android.material.R.string.mtrl_picker_navigate_to_year_description int  (LINE:249)\l0x0021: INVOKE  (r0 I:java.lang.String) = (r4 I:android.content.Context A[D('context' android.content.Context)]), (r0 I:int) type: VIRTUAL call: android.content.Context.getString(int):java.lang.String A[MD:(int):java.lang.String (c)] (LINE:250)\l0x0025: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0027: INVOKE  (r3 I:java.lang.Integer) = (r5 I:int A[D('year' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x002b: APUT  (r1 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) \l0x002d: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String), (r1 I:java.lang.Object[]) type: STATIC call: java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String A[MD:(java.lang.String, java.lang.Object[]):java.lang.String VARARG (c)] (LINE:249)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|RETURN\l|0x0031: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static java.lang.String com.google.android.material.datepicker.DateStrings.getYearContentDescription((r4 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('year' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0031 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0031: r4 'context' Landroid\/content\/Context;\l  \-1 \-0x0031: r5 'year' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

