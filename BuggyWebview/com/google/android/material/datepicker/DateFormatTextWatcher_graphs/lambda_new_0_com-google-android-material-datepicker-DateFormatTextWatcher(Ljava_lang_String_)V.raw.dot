digraph "CFG forcom.google.android.material.datepicker.DateFormatTextWatcher.lambda$new$0$com\-google\-android\-material\-datepicker\-DateFormatTextWatcher(Ljava\/lang\/String;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.textfield.TextInputLayout) = (r11 I:com.google.android.material.datepicker.DateFormatTextWatcher) com.google.android.material.datepicker.DateFormatTextWatcher.textInputLayout com.google.android.material.textfield.TextInputLayout  (LINE:56)\l0x0002: IGET  (r1 I:java.text.DateFormat) = (r11 I:com.google.android.material.datepicker.DateFormatTextWatcher) com.google.android.material.datepicker.DateFormatTextWatcher.dateFormat java.text.DateFormat  (LINE:57)\l0x0004: INVOKE  (r2 I:android.content.Context) = \l  (r0 I:com.google.android.material.textfield.TextInputLayout A[D('textLayout' com.google.android.material.textfield.TextInputLayout)])\l type: VIRTUAL call: com.google.android.material.textfield.TextInputLayout.getContext():android.content.Context A[MD:():android.content.Context (s)] (LINE:58)\l0x0008: SGET  (r3 I:int) =  com.google.android.material.R.string.mtrl_picker_invalid_format int  (LINE:59)\l0x000a: INVOKE  (r3 I:java.lang.String) = (r2 I:android.content.Context A[D('context' android.content.Context)]), (r3 I:int) type: VIRTUAL call: android.content.Context.getString(int):java.lang.String A[MD:(int):java.lang.String (c)]\l0x000e: SGET  (r4 I:int) =  com.google.android.material.R.string.mtrl_picker_invalid_format_use int  (LINE:60)\l0x0010: INVOKE  (r4 I:java.lang.String) = (r2 I:android.content.Context A[D('context' android.content.Context)]), (r4 I:int) type: VIRTUAL call: android.content.Context.getString(int):java.lang.String A[MD:(int):java.lang.String (c)] (LINE:62)\l0x0014: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0015: NEW_ARRAY  (r6 I:java.lang.Object[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0017: INVOKE  (r7 I:java.lang.String) = \l  (r11 I:com.google.android.material.datepicker.DateFormatTextWatcher)\l  (r12 I:java.lang.String A[D('formatHint' java.lang.String)])\l type: DIRECT call: com.google.android.material.datepicker.DateFormatTextWatcher.sanitizeDateString(java.lang.String):java.lang.String A[MD:(java.lang.String):java.lang.String (m)] (LINE:63)\l0x001b: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001c: APUT  (r6 I:??[OBJECT, ARRAY][]), (r8 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) \l0x001e: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String), (r6 I:java.lang.Object[]) type: STATIC call: java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String A[MD:(java.lang.String, java.lang.Object[]):java.lang.String VARARG (c)] (LINE:61)\l0x0022: SGET  (r6 I:int) =  com.google.android.material.R.string.mtrl_picker_invalid_format_example int  (LINE:64)\l0x0024: INVOKE  (r6 I:java.lang.String) = (r2 I:android.content.Context A[D('context' android.content.Context)]), (r6 I:int) type: VIRTUAL call: android.content.Context.getString(int):java.lang.String A[MD:(int):java.lang.String (c)] (LINE:66)\l0x0028: NEW_ARRAY  (r5 I:java.lang.Object[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x002a: NEW_INSTANCE  (r7 I:java.util.Date) =  java.util.Date \l0x002c: INVOKE  (r9 I:java.util.Calendar) =  type: STATIC call: com.google.android.material.datepicker.UtcDates.getTodayCalendar():java.util.Calendar A[MD:():java.util.Calendar (m)] (LINE:68)\l0x0030: INVOKE  (r9 I:long) = (r9 I:java.util.Calendar) type: VIRTUAL call: java.util.Calendar.getTimeInMillis():long A[MD:():long (c)]\l0x0034: INVOKE  (r7 I:java.util.Date), (r9 I:long) type: DIRECT call: java.util.Date.\<init\>(long):void A[MD:(long):void (c)]\l0x0037: INVOKE  (r7 I:java.lang.String) = (r1 I:java.text.DateFormat A[D('df' java.text.DateFormat)]), (r7 I:java.util.Date) type: VIRTUAL call: java.text.DateFormat.format(java.util.Date):java.lang.String A[MD:(java.util.Date):java.lang.String (c)]\l0x003b: INVOKE  (r7 I:java.lang.String) = (r11 I:com.google.android.material.datepicker.DateFormatTextWatcher), (r7 I:java.lang.String) type: DIRECT call: com.google.android.material.datepicker.DateFormatTextWatcher.sanitizeDateString(java.lang.String):java.lang.String A[MD:(java.lang.String):java.lang.String (m)] (LINE:67)\l0x003f: APUT  (r5 I:??[OBJECT, ARRAY][]), (r8 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) \l0x0041: INVOKE  (r5 I:java.lang.String) = (r6 I:java.lang.String), (r5 I:java.lang.Object[]) type: STATIC call: java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String A[MD:(java.lang.String, java.lang.Object[]):java.lang.String VARARG (c)] (LINE:65)\l0x0045: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:69)\l0x0047: INVOKE  (r6 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x004a: INVOKE  (r6 I:java.lang.StringBuilder), (r3 I:java.lang.String A[D('invalidFormat' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004d: CONST_STR  (r7 I:java.lang.String) =  \"n\" \l0x004f: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0052: INVOKE  (r6 I:java.lang.StringBuilder), (r4 I:java.lang.String A[D('useLine' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0055: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0058: INVOKE  (r6 I:java.lang.StringBuilder), (r5 I:java.lang.String A[D('exampleLine' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x005b: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x005f: INVOKE  \l  (r0 I:com.google.android.material.textfield.TextInputLayout A[D('textLayout' com.google.android.material.textfield.TextInputLayout)])\l  (r6 I:java.lang.CharSequence)\l type: VIRTUAL call: com.google.android.material.textfield.TextInputLayout.setError(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (m)]\l0x0062: INVOKE  (r11 I:com.google.android.material.datepicker.DateFormatTextWatcher) type: VIRTUAL call: com.google.android.material.datepicker.DateFormatTextWatcher.onInvalidDate():void A[MD:():void (m)] (LINE:70)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0065|RETURN\l|0x0065: RETURN    (LINE:71)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* synthetic *\/ void com.google.android.material.datepicker.DateFormatTextWatcher.lambda$new$0$com\-google\-android\-material\-datepicker\-DateFormatTextWatcher((r11 'this' I:com.google.android.material.datepicker.DateFormatTextWatcher A[IMMUTABLE_TYPE, THIS]), (r12 I:java.lang.String A[D('formatHint' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x0065: r0 'textLayout' Lcom\/google\/android\/material\/textfield\/TextInputLayout;\l  0x0004\-0x0065: r1 'df' Ljava\/text\/DateFormat;\l  0x0008\-0x0065: r2 'context' Landroid\/content\/Context;\l  0x000e\-0x0065: r3 'invalidFormat' Ljava\/lang\/String;\l  0x0022\-0x0065: r4 'useLine' Ljava\/lang\/String;\l  0x0045\-0x0065: r5 'exampleLine' Ljava\/lang\/String;\l  \-1 \-0x0065: r12 'formatHint' Ljava\/lang\/String;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

