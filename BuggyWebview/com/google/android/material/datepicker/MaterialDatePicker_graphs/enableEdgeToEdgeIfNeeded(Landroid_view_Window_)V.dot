digraph "CFG forcom.google.android.material.datepicker.MaterialDatePicker.enableEdgeToEdgeIfNeeded(Landroid\/view\/Window;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000}"];
Node_10 [shape=record,label="{10\:\ 0x0002|if (r5.edgeToEdgeEnabled == false) goto L5\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|android.view.View r0 = requireView().findViewById(com.google.android.material.C0571R.C0574id.fullscreen_header)\lcom.google.android.material.internal.EdgeToEdgeUtils.applyEdgeToEdge(r6, true, com.google.android.material.internal.ViewUtils.getBackgroundColor(r0), null)\lint r1 = r0.getPaddingTop()\lint r2 = r0.getLayoutParams().height\landroidx.core.view.ViewCompat.setOnApplyWindowInsetsListener(r0, new com.google.android.material.datepicker.MaterialDatePicker.C06624())\lr5.edgeToEdgeEnabled = true\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.datepicker.MaterialDatePicker.enableEdgeToEdgeIfNeeded((r5v0 'this' com.google.android.material.datepicker.MaterialDatePicker\<S\> A[D('this' com.google.android.material.datepicker.MaterialDatePicker\<S\>), IMMUTABLE_TYPE, THIS]), (r6v0 'window' android.view.Window A[D('window' android.view.Window), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x002d \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [S]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

