digraph "CFG forcom.google.android.material.datepicker.MonthAdapter.isEndOfRange(J)Z" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|java.util.Iterator r0 = r5.dateSelector.getSelectedRanges().iterator()\l}"];
Node_23 [shape=record,label="{23\:\ 0x000a|LOOP_START\lLOOP:0: B:23:0x000a\-\>B:37:0x000a\l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|if (r0.hasNext() == false) goto L15\l}"];
Node_25 [shape=record,label="{25\:\ 0x0010|androidx.core.util.Pair r1 = r0.next()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0018|if (r1.second == null) goto L14\l}"];
Node_34 [shape=record,label="{34\:\ 0x001a|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x001a}"];
Node_28 [shape=record,label="{28\:\ 0x0024|if ((r1.second.longValue() \> r6 ? 1 : (r1.second.longValue() == r6 ? 0 : \-1)) != 0) goto L12\l}"];
Node_36 [shape=record,label="{36\:\ 0x0026|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0026|RETURN\l|return true\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x000a|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x000a|LOOP_END\lSYNTHETIC\lLOOP:0: B:23:0x000a\-\>B:37:0x000a\l}"];
Node_38 [shape=record,label="{38\:\ 0x000a|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0029|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0029|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{boolean com.google.android.material.datepicker.MonthAdapter.isEndOfRange((r5v0 'this' com.google.android.material.datepicker.MonthAdapter A[IMMUTABLE_TYPE, THIS]), (r6v0 'date' long A[D('date' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0024 \-\> B:23:0x000a, BACK_EDGE: B:26:0x0018 \-\> B:23:0x000a, CROSS_EDGE: B:33:0x002a \-\> B:21:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_35;
Node_25 -> Node_26;
Node_26 -> Node_34[style=dashed];
Node_26 -> Node_38;
Node_34 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_36[style=dashed];
Node_28 -> Node_39;
Node_36 -> Node_29;
Node_29 -> Node_21;
Node_39 -> Node_37;
Node_37 -> Node_23;
Node_38 -> Node_37;
Node_35 -> Node_32;
Node_32 -> Node_21;
}

