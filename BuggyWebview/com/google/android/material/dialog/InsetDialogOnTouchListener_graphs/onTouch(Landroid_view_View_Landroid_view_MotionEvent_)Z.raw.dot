digraph "CFG forcom.google.android.material.dialog.InsetDialogOnTouchListener.onTouch(Landroid\/view\/View;Landroid\/view\/MotionEvent;)Z" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (16908290(0x1020002, float:2.3877235E\-38) ??[int, float, short, byte, char])  (LINE:54)\l0x0003: INVOKE  (r0 I:android.view.View) = (r12 I:android.view.View A[D('view' android.view.View)]), (r0 I:int) type: VIRTUAL call: android.view.View.findViewById(int):android.view.View A[MD:\<T extends android.view.View\>:(int):T extends android.view.View (c)]\l0x0007: IGET  (r1 I:int) = (r11 I:com.google.android.material.dialog.InsetDialogOnTouchListener) com.google.android.material.dialog.InsetDialogOnTouchListener.leftInset int  (LINE:56)\l0x0009: INVOKE  (r2 I:int) = (r0 I:android.view.View A[D('insetView' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)]\l0x000d: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x000e: INVOKE  (r2 I:int) = (r0 I:android.view.View A[D('insetView' android.view.View)]) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)] (LINE:57)\l0x0012: ARITH  (r2 I:int) = (r2 I:int) + (r1 I:int A[D('insetLeft' int)]) \l0x0013: IGET  (r3 I:int) = (r11 I:com.google.android.material.dialog.InsetDialogOnTouchListener) com.google.android.material.dialog.InsetDialogOnTouchListener.topInset int  (LINE:58)\l0x0015: INVOKE  (r4 I:int) = (r0 I:android.view.View A[D('insetView' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0019: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x001a: INVOKE  (r4 I:int) = (r0 I:android.view.View A[D('insetView' android.view.View)]) type: VIRTUAL call: android.view.View.getHeight():int A[MD:():int (c)] (LINE:59)\l0x001e: ARITH  (r4 I:int) = (r4 I:int) + (r3 I:int A[D('insetTop' int)]) \l0x001f: NEW_INSTANCE  (r5 I:android.graphics.RectF) =  android.graphics.RectF  (LINE:61)\l0x0021: CAST (r6 I:float) = (float) (r1 I:int A[D('insetLeft' int)]) \l0x0022: CAST (r7 I:float) = (float) (r3 I:int A[D('insetTop' int)]) \l0x0023: CAST (r8 I:float) = (float) (r2 I:int A[D('insetRight' int)]) \l0x0024: CAST (r9 I:float) = (float) (r4 I:int A[D('insetBottom' int)]) \l0x0025: INVOKE  (r5 I:android.graphics.RectF), (r6 I:float), (r7 I:float), (r8 I:float), (r9 I:float) type: DIRECT call: android.graphics.RectF.\<init\>(float, float, float, float):void A[MD:(float, float, float, float):void (c)]\l0x0028: INVOKE  (r6 I:float) = (r13 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getX():float A[MD:():float (c)] (LINE:62)\l0x002c: INVOKE  (r7 I:float) = (r13 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getY():float A[MD:():float (c)]\l0x0030: INVOKE  (r6 I:boolean) = (r5 I:android.graphics.RectF A[D('dialogWindow' android.graphics.RectF)]), (r6 I:float), (r7 I:float) type: VIRTUAL call: android.graphics.RectF.contains(float, float):boolean A[MD:(float, float):boolean (c)]\l0x0034: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|0x0035: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0038 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0037|RETURN\l|0x0037: RETURN  (r7 I:boolean)  (LINE:63)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0038|0x0038: INVOKE  (r6 I:android.view.MotionEvent) = (r13 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: STATIC call: android.view.MotionEvent.obtain(android.view.MotionEvent):android.view.MotionEvent A[MD:(android.view.MotionEvent):android.view.MotionEvent (c)] (LINE:65)\l0x003c: INVOKE  (r8 I:int) = (r13 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getAction():int A[MD:():int (c)] (LINE:66)\l0x0040: CONST  (r9 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0041|0x0041: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0047 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0043|0x0043: CONST  (r8 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:67)\l0x0044: INVOKE  (r6 I:android.view.MotionEvent A[D('outsideEvent' android.view.MotionEvent)]), (r8 I:int) type: VIRTUAL call: android.view.MotionEvent.setAction(int):void A[MD:(int):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0047|0x0047: SGET  (r8 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:71)\l0x0049: CONST  (r10 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x004b|0x004b: IF  (r8 I:??[int, byte, short, char]) \>= (r10 I:??[int, byte, short, char])  \-\> B:24:0x005b \l}"];
Node_23 [shape=record,label="{23\:\ 0x004d|0x004d: INVOKE  (r6 I:android.view.MotionEvent A[D('outsideEvent' android.view.MotionEvent)]), (r7 I:int) type: VIRTUAL call: android.view.MotionEvent.setAction(int):void A[MD:(int):void (c)] (LINE:72)\l0x0050: IGET  (r7 I:int) = (r11 I:com.google.android.material.dialog.InsetDialogOnTouchListener) com.google.android.material.dialog.InsetDialogOnTouchListener.prePieSlop int  (LINE:73)\l0x0052: NEG  (r8 I:int) = (r7 I:int) \l0x0053: ARITH  (r8 I:int) = (r8 I:int) \- (r9 I:int) \l0x0054: CAST (r8 I:float) = (float) (r8 I:int) \l0x0055: NEG  (r7 I:int) = (r7 I:int) \l0x0056: ARITH  (r7 I:int) = (r7 I:int) \- (r9 I:int) \l0x0057: CAST (r7 I:float) = (float) (r7 I:int) \l0x0058: INVOKE  (r6 I:android.view.MotionEvent A[D('outsideEvent' android.view.MotionEvent)]), (r8 I:float), (r7 I:float) type: VIRTUAL call: android.view.MotionEvent.setLocation(float, float):void A[MD:(float, float):void (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x005b|0x005b: INVOKE  (r12 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.performClick():boolean A[MD:():boolean (c)] (LINE:75)\l0x005e: IGET  (r7 I:android.app.Dialog) = (r11 I:com.google.android.material.dialog.InsetDialogOnTouchListener) com.google.android.material.dialog.InsetDialogOnTouchListener.dialog android.app.Dialog  (LINE:76)\l0x0060: INVOKE  (r7 I:boolean) = (r7 I:android.app.Dialog), (r6 I:android.view.MotionEvent A[D('outsideEvent' android.view.MotionEvent)]) type: VIRTUAL call: android.app.Dialog.onTouchEvent(android.view.MotionEvent):boolean A[MD:(android.view.MotionEvent):boolean (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0064|RETURN\l|0x0064: RETURN  (r7 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.dialog.InsetDialogOnTouchListener.onTouch((r11 'this' I:com.google.android.material.dialog.InsetDialogOnTouchListener A[IMMUTABLE_TYPE, THIS]), (r12 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.view.MotionEvent A[D('event' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:25:0x0064 \-\> B:14:?, CROSS_EDGE: B:22:0x004b \-\> B:24:0x005b, CROSS_EDGE: B:19:0x0041 \-\> B:21:0x0047\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x0064: r0 'insetView' Landroid\/view\/View;\l  0x000e\-0x0064: r1 'insetLeft' I\l  0x0013\-0x0064: r2 'insetRight' I\l  0x001a\-0x0064: r3 'insetTop' I\l  0x001f\-0x0064: r4 'insetBottom' I\l  0x0028\-0x0064: r5 'dialogWindow' Landroid\/graphics\/RectF;\l  0x003c\-0x0064: r6 'outsideEvent' Landroid\/view\/MotionEvent;\l  \-1 \-0x0064: r12 'view' Landroid\/view\/View;\l  \-1 \-0x0064: r13 'event' Landroid\/view\/MotionEvent;\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.OnTouchListener.onTouch(android.view.View, android.view.MotionEvent):boolean\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

