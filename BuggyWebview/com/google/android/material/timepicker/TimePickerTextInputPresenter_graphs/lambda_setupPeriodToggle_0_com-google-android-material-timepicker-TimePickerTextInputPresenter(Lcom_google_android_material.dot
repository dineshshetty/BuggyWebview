digraph "CFG forcom.google.android.material.timepicker.TimePickerTextInputPresenter.lambda$setupPeriodToggle$0$com\-google\-android\-material\-timepicker\-TimePickerTextInputPresenter(Lcom\/google\/android\/material\/button\/MaterialButtonToggleGroup;IZ)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|if (r5 != false) goto L4\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0003}"];
Node_15 [shape=record,label="{15\:\ 0x0005|if (r4 != com.google.android.material.C0571R.C0574id.material_clock_period_pm_button) goto L9\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|r0 = 1\l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|PHI: r0 \l  PHI: (r0v2 'period' int) = (r0v1 'period' int), (r0v3 'period' int) binds: [B:17:0x0009, B:16:0x0007] A[DONT_GENERATE, DONT_INLINE]\l|r2.time.setPeriod(r0)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ 0x0009|r0 = 0\l}"];
MethodNode[shape=record,label="{public \/* synthetic *\/ void com.google.android.material.timepicker.TimePickerTextInputPresenter.lambda$setupPeriodToggle$0$com\-google\-android\-material\-timepicker\-TimePickerTextInputPresenter((r2v0 'this' com.google.android.material.timepicker.TimePickerTextInputPresenter A[IMMUTABLE_TYPE, THIS]), (r3v0 'group' com.google.android.material.button.MaterialButtonToggleGroup A[D('group' com.google.android.material.button.MaterialButtonToggleGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'checkedId' int A[D('checkedId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'isChecked' boolean A[D('isChecked' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000f \-\> B:11:?, CROSS_EDGE: B:17:0x0009 \-\> B:18:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
Node_17 -> Node_18;
}

