digraph "CFG forcom.google.android.material.timepicker.TimePickerTextInputPresenter.lambda$setupPeriodToggle$0$com\-google\-android\-material\-timepicker\-TimePickerTextInputPresenter(Lcom\/google\/android\/material\/button\/MaterialButtonToggleGroup;IZ)V" {
subgraph cluster_Region_1955932032 {
label = "R(1:(2:(1:2)|(2:5|7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1032691478 {
label = "R(2:(1:2)|(2:5|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1524217298 {
label = "IF [B:12:0x0000] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|if (r5 == false) goto L2\l}"];
subgraph cluster_Region_1355466178 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1587086603 {
label = "R(2:5|7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0005|int r0 = r4 == com.google.android.material.C0571R.C0574id.material_clock_period_pm_button ? 1 : 0\l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|PHI: r0 \l  PHI: (r0v2 'period' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r2.time.setPeriod(r0)\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0003}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0007}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000f}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0009}"];
MethodNode[shape=record,label="{public \/* synthetic *\/ void com.google.android.material.timepicker.TimePickerTextInputPresenter.lambda$setupPeriodToggle$0$com\-google\-android\-material\-timepicker\-TimePickerTextInputPresenter((r2v0 'this' com.google.android.material.timepicker.TimePickerTextInputPresenter A[IMMUTABLE_TYPE, THIS]), (r3v0 'group' com.google.android.material.button.MaterialButtonToggleGroup A[D('group' com.google.android.material.button.MaterialButtonToggleGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'checkedId' int A[D('checkedId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'isChecked' boolean A[D('isChecked' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000f \-\> B:11:?, CROSS_EDGE: B:17:0x0009 \-\> B:18:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_11;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_18 -> Node_19;
Node_10 -> Node_12;
Node_14 -> Node_15;
Node_16 -> Node_18;
Node_19 -> Node_11;
Node_17 -> Node_18;
}

