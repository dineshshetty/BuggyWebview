digraph "CFG forcom.google.android.material.timepicker.TimePickerClockPresenter.onActionUp(FZ)V" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|r7.broadcasting = true\lint r1 = r7.time.minute\lint r2 = r7.time.hour\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|if (r7.time.selection != 10) goto L14\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|r7.timePickerView.setHandRotation(r7.hourRotation, false)\landroid.view.accessibility.AccessibilityManager r3 = (android.view.accessibility.AccessibilityManager) androidx.core.content.ContextCompat.getSystemService(r7.timePickerView.getContext(), android.view.accessibility.AccessibilityManager.class)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0029|if (r3 == null) goto L13\l}"];
Node_25 [shape=record,label="{25\:\ 0x002b}"];
Node_26 [shape=record,label="{26\:\ 0x002f|if (r3.isTouchExplorationEnabled() == false) goto L13\l}"];
Node_27 [shape=record,label="{27\:\ 0x0031|r5 = true\l}"];
Node_29 [shape=record,label="{29\:\ 0x0034|PHI: r5 \l  PHI: (r5v10 'isExploreByTouchEnabled' boolean) = (r5v9 'isExploreByTouchEnabled' boolean), (r5v12 'isExploreByTouchEnabled' boolean) binds: [B:28:0x0033, B:27:0x0031] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 != false) goto L10\l}"];
Node_30 [shape=record,label="{30\:\ 0x0036|setSelection(12, true)\l}"];
Node_36 [shape=record,label="{36\:\ 0x005d|r7.broadcasting = false\lupdateTime()\lperformHapticFeedback(r2, r1)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0065|RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0033|r5 = false\l}"];
Node_32 [shape=record,label="{32\:\ 0x003c|int r0 = java.lang.Math.round(r8)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0040|if (r9 != false) goto L17\l}"];
Node_34 [shape=record,label="{34\:\ 0x0042|int r3 = (r0 + 15) \/ 30\lr7.time.setMinute(r3 * 5)\lr7.minuteRotation = (float) (r7.time.minute * 6)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0056|r7.timePickerView.setHandRotation(r7.minuteRotation, r9)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.timepicker.TimePickerClockPresenter.onActionUp((r7v0 'this' com.google.android.material.timepicker.TimePickerClockPresenter A[IMMUTABLE_TYPE, THIS]), (r8v0 'rotation' float A[D('rotation' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'moveInEventStream' boolean A[D('moveInEventStream' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0034 \-\> B:36:0x005d, CROSS_EDGE: B:28:0x0033 \-\> B:29:0x0034, CROSS_EDGE: B:24:0x0029 \-\> B:28:0x0033, CROSS_EDGE: B:35:0x0056 \-\> B:36:0x005d, CROSS_EDGE: B:33:0x0040 \-\> B:35:0x0056\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [com.google.android.material.timepicker.ClockHandView.OnActionUpListener.onActionUp(float, boolean):void]\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_32;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_36;
Node_30 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_28 -> Node_29;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
}

