digraph "CFG forcom.google.android.material.timepicker.TimePickerClockPresenter.onActionUp(FZ)V" {
subgraph cluster_Region_2065149888 {
label = "R(3:1|(3:3|4|(1:9))(3:14|(1:16)|17)|10)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0000|r7.broadcasting = true\lint int r1 = r7.time.minute\lint int r2 = r7.time.hour\l}"];
subgraph cluster_IfRegion_1927265664 {
label = "IF [B:22:0x0012] THEN: R(3:3|4|(1:9)) ELSE: R(3:14|(1:16)|17)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0012|if (r7.time.selection == 10) goto L3\l}"];
subgraph cluster_Region_470259823 {
label = "R(3:3|4|(1:9))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0014|r7.timePickerView.setHandRotation(r7.hourRotation, false)\landroid.view.accessibility.AccessibilityManager android.view.accessibility.AccessibilityManager r3 = (android.view.accessibility.AccessibilityManager) androidx.core.content.ContextCompat.getSystemService(r7.timePickerView.getContext(), android.view.accessibility.AccessibilityManager.class)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0029|boolean r5 = r3 != null && r3.isTouchExplorationEnabled()\l}"];
subgraph cluster_IfRegion_1512594816 {
label = "IF [B:29:0x0034] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0034|PHI: r5 \l  PHI: (r5v10 'isExploreByTouchEnabled' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 == false) goto L9\l}"];
subgraph cluster_Region_1633158002 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0036|setSelection(12, true)\l}"];
}
}
}
subgraph cluster_Region_487192346 {
label = "R(3:14|(1:16)|17)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x003c|int int r0 = java.lang.Math.round(r8)\l}"];
subgraph cluster_IfRegion_1206217979 {
label = "IF [B:33:0x0040] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0040|if (r9 == false) goto L16\l}"];
subgraph cluster_Region_870224851 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0042|int int r3 = (r0 + 15) \/ 30\lr7.time.setMinute(r3 * 5)\lr7.minuteRotation = r7.time.minute * 6\l}"];
}
}
Node_35 [shape=record,label="{35\:\ 0x0056|r7.timePickerView.setHandRotation(r7.minuteRotation, r9)\l}"];
}
}
Node_36 [shape=record,label="{36\:\ 0x005d|r7.broadcasting = false\lupdateTime()\lperformHapticFeedback(r2, r1)\l}"];
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x002b}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x002f|REMOVE\lADDED_TO_REGION\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0031}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0065}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0033}"];
MethodNode[shape=record,label="{public void com.google.android.material.timepicker.TimePickerClockPresenter.onActionUp((r7v0 'this' com.google.android.material.timepicker.TimePickerClockPresenter A[IMMUTABLE_TYPE, THIS]), (r8v0 'rotation' float A[D('rotation' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'moveInEventStream' boolean A[D('moveInEventStream' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0034 \-\> B:36:0x005d, CROSS_EDGE: B:28:0x0033 \-\> B:29:0x0034, CROSS_EDGE: B:24:0x0029 \-\> B:28:0x0033, CROSS_EDGE: B:35:0x0056 \-\> B:36:0x005d, CROSS_EDGE: B:33:0x0040 \-\> B:35:0x0056\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [com.google.android.material.timepicker.ClockHandView.OnActionUpListener.onActionUp(float, boolean):void]\l}"];
MethodNode -> Node_19;Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_32[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_28;
Node_29 -> Node_30;
Node_29 -> Node_36[style=dashed];
Node_30 -> Node_36;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_35[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_19 -> Node_21;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_37 -> Node_20;
Node_28 -> Node_29;
}

