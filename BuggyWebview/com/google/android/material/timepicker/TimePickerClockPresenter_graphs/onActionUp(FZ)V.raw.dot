digraph "CFG forcom.google.android.material.timepicker.TimePickerClockPresenter.onActionUp(FZ)V" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:212)\l0x0001: IPUT  (r0 I:boolean), (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter) com.google.android.material.timepicker.TimePickerClockPresenter.broadcasting boolean \l0x0003: IGET  (r1 I:com.google.android.material.timepicker.TimeModel) = (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter) com.google.android.material.timepicker.TimePickerClockPresenter.time com.google.android.material.timepicker.TimeModel  (LINE:213)\l0x0005: IGET  (r1 I:int) = (r1 I:com.google.android.material.timepicker.TimeModel) com.google.android.material.timepicker.TimeModel.minute int \l0x0007: IGET  (r2 I:com.google.android.material.timepicker.TimeModel) = (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter) com.google.android.material.timepicker.TimePickerClockPresenter.time com.google.android.material.timepicker.TimeModel  (LINE:214)\l0x0009: IGET  (r2 I:int) = (r2 I:com.google.android.material.timepicker.TimeModel) com.google.android.material.timepicker.TimeModel.hour int \l0x000b: IGET  (r3 I:com.google.android.material.timepicker.TimeModel) = (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter) com.google.android.material.timepicker.TimePickerClockPresenter.time com.google.android.material.timepicker.TimeModel  (LINE:215)\l0x000d: IGET  (r3 I:int) = (r3 I:com.google.android.material.timepicker.TimeModel) com.google.android.material.timepicker.TimeModel.selection int \l0x000f: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: CONST  (r5 I:??[int, float, short, byte, char]) = (10 ??[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|0x0012: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x003c \l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|0x0014: IGET  (r3 I:com.google.android.material.timepicker.TimePickerView) = (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter) com.google.android.material.timepicker.TimePickerClockPresenter.timePickerView com.google.android.material.timepicker.TimePickerView  (LINE:218)\l0x0016: IGET  (r5 I:float) = (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter) com.google.android.material.timepicker.TimePickerClockPresenter.hourRotation float \l0x0018: INVOKE  (r3 I:com.google.android.material.timepicker.TimePickerView), (r5 I:float), (r4 I:boolean) type: VIRTUAL call: com.google.android.material.timepicker.TimePickerView.setHandRotation(float, boolean):void A[MD:(float, boolean):void (m)]\l0x001b: IGET  (r3 I:com.google.android.material.timepicker.TimePickerView) = (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter) com.google.android.material.timepicker.TimePickerClockPresenter.timePickerView com.google.android.material.timepicker.TimePickerView  (LINE:221)\l0x001d: INVOKE  (r3 I:android.content.Context) = (r3 I:com.google.android.material.timepicker.TimePickerView) type: VIRTUAL call: com.google.android.material.timepicker.TimePickerView.getContext():android.content.Context A[MD:():android.content.Context (s)] (LINE:222)\l0x0021: CONST_CLASS  (r5 I:java.lang.Class\<android.view.accessibility.AccessibilityManager\>) =  android.view.accessibility.AccessibilityManager.class \l0x0023: INVOKE  (r3 I:java.lang.Object) = (r3 I:android.content.Context), (r5 I:java.lang.Class) type: STATIC call: androidx.core.content.ContextCompat.getSystemService(android.content.Context, java.lang.Class):java.lang.Object A[MD:\<T\>:(android.content.Context, java.lang.Class\<T\>):T (m)]\l0x0027: CHECK_CAST (r3 I:android.view.accessibility.AccessibilityManager) = (android.view.accessibility.AccessibilityManager) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0029|0x0029: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('am' android.view.accessibility.AccessibilityManager)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0033  (LINE:223)\l}"];
Node_25 [shape=record,label="{25\:\ 0x002b|0x002b: INVOKE  (r5 I:boolean) = (r3 I:android.view.accessibility.AccessibilityManager A[D('am' android.view.accessibility.AccessibilityManager)]) type: VIRTUAL call: android.view.accessibility.AccessibilityManager.isTouchExplorationEnabled():boolean A[MD:():boolean (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x002f|0x002f: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0033 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0031|0x0031: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0034|0x0034: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isExploreByTouchEnabled' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x005d  (LINE:224)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0036|0x0036: CONST  (r6 I:??[int, float, short, byte, char]) = (12 ??[int, float, short, byte, char])  (LINE:225)\l0x0038: INVOKE  (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter), (r6 I:int), (r0 I:boolean) type: VIRTUAL call: com.google.android.material.timepicker.TimePickerClockPresenter.setSelection(int, boolean):void A[MD:(int, boolean):void (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x005d|0x005d: IPUT  (r4 I:boolean), (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter) com.google.android.material.timepicker.TimePickerClockPresenter.broadcasting boolean  (LINE:237)\l0x005f: INVOKE  (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter) type: DIRECT call: com.google.android.material.timepicker.TimePickerClockPresenter.updateTime():void A[MD:():void (m)] (LINE:238)\l0x0062: INVOKE  \l  (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter)\l  (r2 I:int A[D('prevHour' int)])\l  (r1 I:int A[D('prevMinute' int)])\l type: DIRECT call: com.google.android.material.timepicker.TimePickerClockPresenter.performHapticFeedback(int, int):void A[MD:(int, int):void (m)] (LINE:239)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0065|RETURN\l|0x0065: RETURN    (LINE:240)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0033|0x0033: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x003c|0x003c: INVOKE  (r0 I:int) = (r8 I:float A[D('rotation' float)]) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)] (LINE:228)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0040|0x0040: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('moveInEventStream' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0056  (LINE:229)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0042|0x0042: ARITH  (r3 I:int) = (r0 I:int A[D('rotationInt' int)]) + (15 int)  (LINE:231)\l0x0044: ARITH  (r3 I:int) = (r3 I:int) \/ (30 int) \l0x0046: IGET  (r5 I:com.google.android.material.timepicker.TimeModel) = (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter) com.google.android.material.timepicker.TimePickerClockPresenter.time com.google.android.material.timepicker.TimeModel  (LINE:232)\l0x0048: ARITH  (r6 I:int) = (r3 I:int A[D('newRotation' int)]) * (5 int) \l0x004a: INVOKE  (r5 I:com.google.android.material.timepicker.TimeModel), (r6 I:int) type: VIRTUAL call: com.google.android.material.timepicker.TimeModel.setMinute(int):void A[MD:(int):void (m)]\l0x004d: IGET  (r5 I:com.google.android.material.timepicker.TimeModel) = (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter) com.google.android.material.timepicker.TimePickerClockPresenter.time com.google.android.material.timepicker.TimeModel  (LINE:233)\l0x004f: IGET  (r5 I:int) = (r5 I:com.google.android.material.timepicker.TimeModel) com.google.android.material.timepicker.TimeModel.minute int \l0x0051: ARITH  (r5 I:int) = (r5 I:int) * (6 int) \l0x0053: CAST (r5 I:float) = (float) (r5 I:int) \l0x0054: IPUT  (r5 I:float), (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter) com.google.android.material.timepicker.TimePickerClockPresenter.minuteRotation float \l}"];
Node_35 [shape=record,label="{35\:\ 0x0056|0x0056: IGET  (r3 I:com.google.android.material.timepicker.TimePickerView A[D('newRotation' int)]) = (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter) com.google.android.material.timepicker.TimePickerClockPresenter.timePickerView com.google.android.material.timepicker.TimePickerView  (LINE:235)\l0x0058: IGET  (r5 I:float) = (r7 I:com.google.android.material.timepicker.TimePickerClockPresenter) com.google.android.material.timepicker.TimePickerClockPresenter.minuteRotation float \l0x005a: INVOKE  \l  (r3 I:com.google.android.material.timepicker.TimePickerView)\l  (r5 I:float)\l  (r9 I:boolean A[D('moveInEventStream' boolean)])\l type: VIRTUAL call: com.google.android.material.timepicker.TimePickerView.setHandRotation(float, boolean):void A[MD:(float, boolean):void (m)]\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.timepicker.TimePickerClockPresenter.onActionUp((r7 'this' I:com.google.android.material.timepicker.TimePickerClockPresenter A[IMMUTABLE_TYPE, THIS]), (r8 I:float A[D('rotation' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('moveInEventStream' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0034 \-\> B:36:0x005d, CROSS_EDGE: B:28:0x0033 \-\> B:29:0x0034, CROSS_EDGE: B:24:0x0029 \-\> B:28:0x0033, CROSS_EDGE: B:35:0x0056 \-\> B:36:0x005d, CROSS_EDGE: B:33:0x0040 \-\> B:35:0x0056\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0029\-0x003b: r3 'am' Landroid\/view\/accessibility\/AccessibilityManager;\l  0x0034\-0x003b: r5 'isExploreByTouchEnabled' Z\l  0x0046\-0x0056: r3 'newRotation' I\l  0x0040\-0x005d: r0 'rotationInt' I\l  0x0007\-0x0065: r1 'prevMinute' I\l  0x000b\-0x0065: r2 'prevHour' I\l  \-1 \-0x0065: r8 'rotation' F\l  \-1 \-0x0065: r9 'moveInEventStream' Z\lMETHOD_OVERRIDE: [com.google.android.material.timepicker.ClockHandView.OnActionUpListener.onActionUp(float, boolean):void]\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_32;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_36;
Node_30 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_28 -> Node_29;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
}

