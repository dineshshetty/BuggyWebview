digraph "CFG forcom.google.android.material.timepicker.TimePickerClockPresenter.performHapticFeedback(II)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0004|if (r2.time.minute != r4) goto L7\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006}"];
Node_18 [shape=record,label="{18\:\ 0x000a|if (r2.time.hour == r3) goto L5\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x000c}"];
Node_20 [shape=record,label="{20\:\ 0x0010|if (android.os.Build.VERSION.SDK_INT \< 21) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x0012|r0 = 4\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|PHI: r0 \l  PHI: (r0v4 'feedbackKey' int) = (r0v3 'feedbackKey' int), (r0v5 'feedbackKey' int) binds: [B:22:0x0014, B:21:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|r2.timePickerView.performHapticFeedback(r0)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001a|RETURN\lORIG_RETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|r0 = 1\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.timepicker.TimePickerClockPresenter.performHapticFeedback((r2v0 'this' com.google.android.material.timepicker.TimePickerClockPresenter A[IMMUTABLE_TYPE, THIS]), (r3v0 'prevHour' int A[D('prevHour' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'prevMinute' int A[D('prevMinute' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0014 \-\> B:23:0x0015, CROSS_EDGE: B:18:0x000a \-\> B:24:0x001a, CROSS_EDGE: B:16:0x0004 \-\> B:19:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_25 -> Node_14;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_14;
Node_22 -> Node_23;
}

