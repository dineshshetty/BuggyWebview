digraph "CFG forcom.google.android.material.timepicker.TimePickerClockPresenter.updateCurrentLevel()V" {
subgraph cluster_Region_214116331 {
label = "R(3:1|(1:7)|8)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0000|int r0 = 1\l}"];
subgraph cluster_IfRegion_1190044033 {
label = "IF [B:14:0x0007, B:16:0x000e, B:18:0x0016] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0007|if (r3.time.selection == 10) goto L3\l}"];
Node_16 [shape=record,label="{16\:\ 0x000e|ADDED_TO_REGION\l|if (r3.time.format == 1) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x0016|ADDED_TO_REGION\l|if (r3.time.hour \>= 12) goto L7\l}"];
subgraph cluster_Region_1555400847 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0018|r0 = 2\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x0019|PHI: r0 \l  PHI: (r0v1 'currentLevel' int) = (r0v0 'currentLevel' int), (r0v0 'currentLevel' int), (r0v0 'currentLevel' int), (r0v2 'currentLevel' int) binds: [B:14:0x0007, B:16:0x000e, B:18:0x0016, B:19:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|r3.timePickerView.setCurrentLevel(r0)\l}"];
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0009}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0010}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x001e}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.timepicker.TimePickerClockPresenter.updateCurrentLevel((r3v0 'this' com.google.android.material.timepicker.TimePickerClockPresenter A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0016 \-\> B:20:0x0019, CROSS_EDGE: B:16:0x000e \-\> B:20:0x0019, CROSS_EDGE: B:14:0x0007 \-\> B:20:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_20[style=dashed];
Node_16 -> Node_17;
Node_16 -> Node_20[style=dashed];
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_11 -> Node_13;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_21 -> Node_12;
}

