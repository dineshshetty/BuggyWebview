digraph "CFG forcom.google.android.material.timepicker.ClockFaceView.2.onInitializeAccessibilityNodeInfo(Landroid\/view\/View;Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  \l  (r7 I:androidx.core.view.AccessibilityDelegateCompat)\l  (r8 I:android.view.View A[D('host' android.view.View)])\l  (r9 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l type: SUPER call: androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat):void A[MD:(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat):void (m)] (LINE:160)\l0x0003: SGET  (r0 I:int) =  com.google.android.material.R.id.material_value_index int  (LINE:161)\l0x0005: INVOKE  (r0 I:java.lang.Object) = (r8 I:android.view.View A[D('host' android.view.View)]), (r0 I:int) type: VIRTUAL call: android.view.View.getTag(int):java.lang.Object A[MD:(int):java.lang.Object (c)]\l0x0009: CHECK_CAST (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:??[OBJECT, ARRAY]) \l0x000b: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r0 I:??[int, byte, short, char] A[D('index' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:5:0x0022  (LINE:162)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IGET  (r1 I:com.google.android.material.timepicker.ClockFaceView) = (r7 I:com.google.android.material.timepicker.ClockFaceView$2) com.google.android.material.timepicker.ClockFaceView.2.this$0 com.google.android.material.timepicker.ClockFaceView  (LINE:163)\l0x0013: INVOKE  (r1 I:android.util.SparseArray) = (r1 I:com.google.android.material.timepicker.ClockFaceView) type: STATIC call: com.google.android.material.timepicker.ClockFaceView.access$200(com.google.android.material.timepicker.ClockFaceView):android.util.SparseArray A[MD:(com.google.android.material.timepicker.ClockFaceView):android.util.SparseArray (m)]\l0x0017: ARITH  (r2 I:int) = (r0 I:int A[D('index' int)]) + (\-1 int) \l0x0019: INVOKE  (r1 I:java.lang.Object) = (r1 I:android.util.SparseArray), (r2 I:int) type: VIRTUAL call: android.util.SparseArray.get(int):java.lang.Object A[MD:(int):E (c)]\l0x001d: CHECK_CAST (r1 I:android.view.View) = (android.view.View) (r1 I:??[OBJECT, ARRAY]) \l0x001f: INVOKE  \l  (r9 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r1 I:android.view.View)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setTraversalAfter(android.view.View):void A[MD:(android.view.View):void (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:166)\l0x0023: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0024: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0025: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0026: INVOKE  (r6 I:boolean) = (r8 I:android.view.View A[D('host' android.view.View)]) type: VIRTUAL call: android.view.View.isSelected():boolean A[MD:():boolean (c)] (LINE:173)\l0x002a: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)])  (LINE:167)\l0x002b: INVOKE  (r1 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) = (r1 I:int), (r2 I:int), (r3 I:int), (r4 I:int), (r5 I:boolean), (r6 I:boolean) type: STATIC call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat.obtain(int, int, int, int, boolean, boolean):androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat A[MD:(int, int, int, int, boolean, boolean):androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat (m)]\l0x002f: INVOKE  \l  (r9 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r1 I:java.lang.Object)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setCollectionItemInfo(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:166)\l0x0032: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:175)\l0x0033: INVOKE  \l  (r9 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r1 I:boolean)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setClickable(boolean):void A[MD:(boolean):void (m)]\l0x0036: SGET  (r1 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) =  androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat.ACTION_CLICK androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat  (LINE:176)\l0x0038: INVOKE  \l  (r9 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r1 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):void A[MD:(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):void (m)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x003b|RETURN\l|0x003b: RETURN    (LINE:177)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.timepicker.ClockFaceView.2.onInitializeAccessibilityNodeInfo((r7 'this' I:com.google.android.material.timepicker.ClockFaceView$2 A[IMMUTABLE_TYPE, THIS]), (r8 I:android.view.View A[D('host' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x000f \-\> B:5:0x0022\lDebug Info:\l  0x000f\-0x003b: r0 'index' I\l  \-1 \-0x003b: r8 'host' Landroid\/view\/View;\l  \-1 \-0x003b: r9 'info' Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;\lMETHOD_OVERRIDE: [androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

