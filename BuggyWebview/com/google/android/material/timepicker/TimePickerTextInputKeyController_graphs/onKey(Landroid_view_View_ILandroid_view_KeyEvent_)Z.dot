digraph "CFG forcom.google.android.material.timepicker.TimePickerTextInputKeyController.onKey(Landroid\/view\/View;ILandroid\/view\/KeyEvent;)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000}"];
Node_14 [shape=record,label="{14\:\ 0x0003|if (r4.keyListenerRunning == false) goto L5\l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|RETURN\l|return false\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|r4.keyListenerRunning = true\landroid.widget.EditText r0 = (android.widget.EditText) r5\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|if (r4.time.selection != 12) goto L10\l}"];
Node_18 [shape=record,label="{18\:\ 0x0014|boolean r2 = onMinuteKeyPress(r6, r7, r0)\l}"];
Node_20 [shape=record,label="{20\:\ 0x001d|PHI: r2 \l  PHI: (r2v3 'ret' boolean) = (r2v2 'ret' boolean), (r2v4 'ret' boolean) binds: [B:19:0x0019, B:18:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|r4.keyListenerRunning = false\l}"];
Node_21 [shape=record,label="{21\:\ 0x0020|RETURN\l|return r2\l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|boolean r2 = onHourKeyPress(r6, r7, r0)\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.timepicker.TimePickerTextInputKeyController.onKey((r4v0 'this' com.google.android.material.timepicker.TimePickerTextInputKeyController A[IMMUTABLE_TYPE, THIS]), (r5v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'keyCode' int A[D('keyCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'event' android.view.KeyEvent A[D('event' android.view.KeyEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:21:0x0020 \-\> B:12:?, CROSS_EDGE: B:19:0x0019 \-\> B:20:0x001d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.OnKeyListener.onKey(android.view.View, int, android.view.KeyEvent):boolean\}]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_19 -> Node_20;
}

