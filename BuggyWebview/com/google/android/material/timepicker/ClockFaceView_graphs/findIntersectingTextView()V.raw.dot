digraph "CFG forcom.google.android.material.timepicker.ClockFaceView.findIntersectingTextView()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.timepicker.ClockHandView) = (r6 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.clockHandView com.google.android.material.timepicker.ClockHandView  (LINE:293)\l0x0002: INVOKE  (r0 I:android.graphics.RectF) = (r0 I:com.google.android.material.timepicker.ClockHandView) type: VIRTUAL call: com.google.android.material.timepicker.ClockHandView.getCurrentSelectorBox():android.graphics.RectF A[MD:():android.graphics.RectF (m)]\l0x0006: INVOKE  (r1 I:android.widget.TextView) = \l  (r6 I:com.google.android.material.timepicker.ClockFaceView)\l  (r0 I:android.graphics.RectF A[D('selectorBox' android.graphics.RectF)])\l type: DIRECT call: com.google.android.material.timepicker.ClockFaceView.getSelectedTextView(android.graphics.RectF):android.widget.TextView A[MD:(android.graphics.RectF):android.widget.TextView (m)] (LINE:294)\l0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:295)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|LOOP_START\lLOOP:0: B:3:0x000b\-\>B:12:0x0034\l|0x000b: IGET  (r3 I:android.util.SparseArray\<android.widget.TextView\>) = (r6 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.textViewPool android.util.SparseArray \l0x000d: INVOKE  (r3 I:int) = (r3 I:android.util.SparseArray) type: VIRTUAL call: android.util.SparseArray.size():int A[MD:():int (c)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:14:0x0037 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IGET  (r3 I:android.util.SparseArray\<android.widget.TextView\>) = (r6 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.textViewPool android.util.SparseArray  (LINE:296)\l0x0015: INVOKE  (r3 I:java.lang.Object) = (r3 I:android.util.SparseArray), (r2 I:int A[D('i' int)]) type: VIRTUAL call: android.util.SparseArray.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0019: CHECK_CAST (r3 I:android.widget.TextView) = (android.widget.TextView) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tv' android.widget.TextView)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001e  (LINE:297)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tv' android.widget.TextView)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('selected' android.widget.TextView)])  \-\> B:10:0x0022  (LINE:302)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: INVOKE  (r3 I:android.widget.TextView A[D('tv' android.widget.TextView)]), (r4 I:boolean) type: VIRTUAL call: android.widget.TextView.setSelected(boolean):void A[MD:(boolean):void (c)]\l0x0026: INVOKE  (r4 I:android.graphics.RadialGradient) = \l  (r6 I:com.google.android.material.timepicker.ClockFaceView)\l  (r0 I:android.graphics.RectF A[D('selectorBox' android.graphics.RectF)])\l  (r3 I:android.widget.TextView A[D('tv' android.widget.TextView)])\l type: DIRECT call: com.google.android.material.timepicker.ClockFaceView.getGradientForTextView(android.graphics.RectF, android.widget.TextView):android.graphics.RadialGradient A[MD:(android.graphics.RectF, android.widget.TextView):android.graphics.RadialGradient (m)] (LINE:305)\l0x002a: INVOKE  (r5 I:android.text.TextPaint) = (r3 I:android.widget.TextView A[D('tv' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getPaint():android.text.TextPaint A[MD:():android.text.TextPaint (c)] (LINE:306)\l0x002e: INVOKE  (r5 I:android.text.TextPaint), (r4 I:android.graphics.Shader A[D('radialGradient' android.graphics.RadialGradient)]) type: VIRTUAL call: android.text.TextPaint.setShader(android.graphics.Shader):android.graphics.Shader A[MD:(android.graphics.Shader):android.graphics.Shader (c)]\l0x0031: INVOKE  (r3 I:android.widget.TextView A[D('tv' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.invalidate():void A[MD:():void (c)] (LINE:307)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|LOOP_END\lLOOP:0: B:3:0x000b\-\>B:12:0x0034\l|0x0034: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:295)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|RETURN\l|0x0037: RETURN    (LINE:309)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.timepicker.ClockFaceView.findIntersectingTextView((r6 'this' I:com.google.android.material.timepicker.ClockFaceView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x0034 \-\> B:3:0x000b, CROSS_EDGE: B:10:0x0022 \-\> B:11:0x0023, CROSS_EDGE: B:6:0x001b \-\> B:12:0x0034\lDebug Info:\l  0x001b\-0x0034: r3 'tv' Landroid\/widget\/TextView;\l  0x002a\-0x0034: r4 'radialGradient' Landroid\/graphics\/RadialGradient;\l  0x000b\-0x0037: r2 'i' I\l  0x0006\-0x0037: r0 'selectorBox' Landroid\/graphics\/RectF;\l  0x000a\-0x0037: r1 'selected' Landroid\/widget\/TextView;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_16[style=dashed];
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_11 -> Node_15;
Node_15 -> Node_12;
Node_12 -> Node_3;
Node_10 -> Node_11;
Node_16 -> Node_12;
Node_14 -> Node_13;
Node_13 -> Node_1;
}

