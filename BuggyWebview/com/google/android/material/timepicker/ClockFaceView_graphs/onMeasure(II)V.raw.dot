digraph "CFG forcom.google.android.material.timepicker.ClockFaceView.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:android.content.res.Resources) = (r8 I:com.google.android.material.timepicker.ClockFaceView) type: VIRTUAL call: com.google.android.material.timepicker.ClockFaceView.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (s)] (LINE:363)\l0x0004: INVOKE  (r1 I:android.util.DisplayMetrics) = (r0 I:android.content.res.Resources A[D('r' android.content.res.Resources)]) type: VIRTUAL call: android.content.res.Resources.getDisplayMetrics():android.util.DisplayMetrics A[MD:():android.util.DisplayMetrics (c)] (LINE:364)\l0x0008: IGET  (r2 I:int) = (r1 I:android.util.DisplayMetrics A[D('displayMetrics' android.util.DisplayMetrics)]) android.util.DisplayMetrics.heightPixels int  (LINE:366)\l0x000a: CAST (r2 I:float) = (float) (r2 I:int) \l0x000b: IGET  (r3 I:int) = (r1 I:android.util.DisplayMetrics A[D('displayMetrics' android.util.DisplayMetrics)]) android.util.DisplayMetrics.widthPixels int  (LINE:367)\l0x000d: CAST (r3 I:float) = (float) (r3 I:int) \l0x000e: IGET  (r4 I:int) = (r8 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.clockSize int  (LINE:371)\l0x0010: CAST (r4 I:float) = (float) (r4 I:int) \l0x0011: IGET  (r5 I:int) = (r8 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.minimumHeight int \l0x0013: CAST (r5 I:float) = (float) (r5 I:int) \l0x0014: ARITH  (r5 I:float) = (r5 I:float) \/ (r2 I:float A[D('height' float)]) \l0x0015: IGET  (r6 I:int) = (r8 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.minimumWidth int \l0x0017: CAST (r6 I:float) = (float) (r6 I:int) \l0x0018: ARITH  (r6 I:float) = (r6 I:float) \/ (r3 I:float A[D('width' float)]) \l0x0019: CONST  (r7 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x001b: INVOKE  (r5 I:float) = (r5 I:float), (r6 I:float), (r7 I:float) type: STATIC call: com.google.android.material.timepicker.ClockFaceView.max3(float, float, float):float A[MD:(float, float, float):float (m)]\l0x001f: ARITH  (r4 I:float) = (r4 I:float) \/ (r5 I:float) \l0x0020: CAST (r4 I:int) = (int) (r4 I:float) \l0x0021: CONST  (r5 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:373)\l0x0023: INVOKE  (r5 I:int) = (r4 I:int A[D('size' int)]), (r5 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x0027: INVOKE  (r8 I:com.google.android.material.timepicker.ClockFaceView), (r4 I:int A[D('size' int)]), (r4 I:int A[D('size' int)]) type: VIRTUAL call: com.google.android.material.timepicker.ClockFaceView.setMeasuredDimension(int, int):void A[MD:(int, int):void (s)] (LINE:374)\l0x002a: INVOKE  (r8 I:com.google.android.material.timepicker.RadialViewGroup), (r5 I:int A[D('spec' int)]), (r5 I:int A[D('spec' int)]) type: SUPER call: com.google.android.material.timepicker.RadialViewGroup.onMeasure(int, int):void A[MD:(int, int):void (m)] (LINE:375)\l}"];
Node_3 [shape=record,label="{3\:\ 0x002d|RETURN\l|0x002d: RETURN    (LINE:376)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.timepicker.ClockFaceView.onMeasure((r8 'this' I:com.google.android.material.timepicker.ClockFaceView A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lDebug Info:\l  0x0004\-0x002d: r0 'r' Landroid\/content\/res\/Resources;\l  0x0008\-0x002d: r1 'displayMetrics' Landroid\/util\/DisplayMetrics;\l  0x000b\-0x002d: r2 'height' F\l  0x000e\-0x002d: r3 'width' F\l  0x0021\-0x002d: r4 'size' I\l  0x0027\-0x002d: r5 'spec' I\l  \-1 \-0x002d: r9 'widthMeasureSpec' I\l  \-1 \-0x002d: r10 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

