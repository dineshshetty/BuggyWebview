digraph "CFG forcom.google.android.material.timepicker.ClockFaceView.\<init\>(Landroid\/content\/Context;Landroid\/util\/AttributeSet;I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  \l  (r9 I:com.google.android.material.timepicker.RadialViewGroup)\l  (r10 I:android.content.Context A[D('context' android.content.Context)])\l  (r11 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r12 I:int A[D('defStyleAttr' int)])\l type: DIRECT call: com.google.android.material.timepicker.RadialViewGroup.\<init\>(android.content.Context, android.util.AttributeSet, int):void A[MD:(android.content.Context, android.util.AttributeSet, int):void (m)] (LINE:105)\l0x0003: NEW_INSTANCE  (r0 I:android.graphics.Rect) =  android.graphics.Rect  (LINE:75)\l0x0005: INVOKE  (r0 I:android.graphics.Rect) type: DIRECT call: android.graphics.Rect.\<init\>():void A[MD:():void (c)]\l0x0008: IPUT  (r0 I:android.graphics.Rect), (r9 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.textViewRect android.graphics.Rect \l0x000a: NEW_INSTANCE  (r0 I:android.graphics.RectF) =  android.graphics.RectF  (LINE:76)\l0x000c: INVOKE  (r0 I:android.graphics.RectF) type: DIRECT call: android.graphics.RectF.\<init\>():void A[MD:():void (c)]\l0x000f: IPUT  (r0 I:android.graphics.RectF), (r9 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.scratch android.graphics.RectF \l0x0011: NEW_INSTANCE  (r0 I:android.graphics.Rect) =  android.graphics.Rect  (LINE:77)\l0x0013: INVOKE  (r0 I:android.graphics.Rect) type: DIRECT call: android.graphics.Rect.\<init\>():void A[MD:():void (c)]\l0x0016: IPUT  (r0 I:android.graphics.Rect), (r9 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.scratchLineBounds android.graphics.Rect \l0x0018: NEW_INSTANCE  (r0 I:android.util.SparseArray) =  android.util.SparseArray  (LINE:79)\l0x001a: INVOKE  (r0 I:android.util.SparseArray) type: DIRECT call: android.util.SparseArray.\<init\>():void A[MD:():void (c)]\l0x001d: IPUT  (r0 I:android.util.SparseArray\<android.widget.TextView\>), (r9 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.textViewPool android.util.SparseArray \l0x001f: CONST  (r0 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:83)\l0x0020: NEW_ARRAY  (r1 I:float[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0022: FILL_ARRAY  (r1 I:??[]), data: 0x00d4: FILL_ARRAY_DATA  , data: [0, 1063675494, 1065353216] \l0x0025: IPUT  (r1 I:float[]), (r9 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.gradientPositions float[] \l0x0027: SGET  (r1 I:int[]) =  com.google.android.material.R.styleable.ClockFaceView int[]  (LINE:106)\l0x0029: SGET  (r2 I:int) =  com.google.android.material.R.style.Widget_MaterialComponents_TimePicker_Clock int \l0x002b: INVOKE  (r1 I:android.content.res.TypedArray) = \l  (r10 I:android.content.Context A[D('context' android.content.Context)])\l  (r11 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r1 I:int[])\l  (r12 I:int A[D('defStyleAttr' int)])\l  (r2 I:int)\l type: VIRTUAL call: android.content.Context.obtainStyledAttributes(android.util.AttributeSet, int[], int, int):android.content.res.TypedArray A[MD:(android.util.AttributeSet, int[], int, int):android.content.res.TypedArray (c)] (LINE:107)\l0x002f: INVOKE  (r2 I:android.content.res.Resources) = (r9 I:com.google.android.material.timepicker.ClockFaceView) type: VIRTUAL call: com.google.android.material.timepicker.ClockFaceView.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (s)] (LINE:112)\l0x0033: SGET  (r3 I:int) =  com.google.android.material.R.styleable.ClockFaceView_clockNumberTextColor int  (LINE:113)\l0x0035: INVOKE  (r3 I:android.content.res.ColorStateList) = \l  (r10 I:android.content.Context A[D('context' android.content.Context)])\l  (r1 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)])\l  (r3 I:int)\l type: STATIC call: com.google.android.material.resources.MaterialResources.getColorStateList(android.content.Context, android.content.res.TypedArray, int):android.content.res.ColorStateList A[MD:(android.content.Context, android.content.res.TypedArray, int):android.content.res.ColorStateList (m)] (LINE:114)\l0x0039: IPUT  (r3 I:android.content.res.ColorStateList), (r9 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.textColor android.content.res.ColorStateList \l0x003b: INVOKE  (r4 I:android.view.LayoutInflater) = (r10 I:android.content.Context A[D('context' android.content.Context)]) type: STATIC call: android.view.LayoutInflater.from(android.content.Context):android.view.LayoutInflater A[MD:(android.content.Context):android.view.LayoutInflater (c)] (LINE:116)\l0x003f: SGET  (r5 I:int) =  com.google.android.material.R.layout.material_clockface_view int \l0x0041: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0042: INVOKE  (r4 I:android.view.LayoutInflater), (r5 I:int), (r9 I:android.view.ViewGroup), (r6 I:boolean) type: VIRTUAL call: android.view.LayoutInflater.inflate(int, android.view.ViewGroup, boolean):android.view.View A[MD:(int, android.view.ViewGroup, boolean):android.view.View (c)]\l0x0045: SGET  (r4 I:int) =  com.google.android.material.R.id.material_clock_hand int  (LINE:117)\l0x0047: INVOKE  (r4 I:android.view.View) = (r9 I:com.google.android.material.timepicker.ClockFaceView), (r4 I:int) type: VIRTUAL call: com.google.android.material.timepicker.ClockFaceView.findViewById(int):android.view.View A[MD:(int):android.view.View (s)]\l0x004b: CHECK_CAST (r4 I:com.google.android.material.timepicker.ClockHandView) = (com.google.android.material.timepicker.ClockHandView) (r4 I:??[OBJECT, ARRAY]) \l0x004d: IPUT  \l  (r4 I:com.google.android.material.timepicker.ClockHandView)\l  (r9 I:com.google.android.material.timepicker.ClockFaceView)\l com.google.android.material.timepicker.ClockFaceView.clockHandView com.google.android.material.timepicker.ClockHandView \l0x004f: SGET  (r5 I:int) =  com.google.android.material.R.dimen.material_clock_hand_padding int  (LINE:118)\l0x0051: INVOKE  (r5 I:int) = (r2 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r5 I:int) type: VIRTUAL call: android.content.res.Resources.getDimensionPixelSize(int):int A[MD:(int):int throws android.content.res.Resources$NotFoundException (c)]\l0x0055: IPUT  (r5 I:int), (r9 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.clockHandPadding int \l0x0057: NEW_ARRAY  (r5 I:int[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: int[]  (LINE:119)\l0x0059: CONST  (r7 I:??[int, float, short, byte, char]) = (16842913(0x10100a1, float:2.369401E\-38) ??[int, float, short, byte, char]) \l0x005c: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x005d: APUT  (r5 I:??[int, float][]), (r8 I:??[int, short, byte, char]), (r7 I:??[int, float, short, byte, char]) \l0x005f: INVOKE  (r7 I:int) = (r3 I:android.content.res.ColorStateList) type: VIRTUAL call: android.content.res.ColorStateList.getDefaultColor():int A[MD:():int (c)] (LINE:121)\l0x0063: INVOKE  (r5 I:int) = (r3 I:android.content.res.ColorStateList), (r5 I:int[]), (r7 I:int) type: VIRTUAL call: android.content.res.ColorStateList.getColorForState(int[], int):int A[MD:(int[], int):int (c)] (LINE:120)\l0x0067: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[]  (LINE:122)\l0x0069: APUT  \l  (r0 I:??[int, float][])\l  (r8 I:??[int, short, byte, char])\l  (r5 I:??[int, float, short, byte, char] A[D('clockHandTextColor' int)])\l \l0x006b: APUT  \l  (r0 I:??[int, float][])\l  (r6 I:??[int, short, byte, char])\l  (r5 I:??[int, float, short, byte, char] A[D('clockHandTextColor' int)])\l \l0x006d: INVOKE  (r3 I:int) = (r3 I:android.content.res.ColorStateList) type: VIRTUAL call: android.content.res.ColorStateList.getDefaultColor():int A[MD:():int (c)] (LINE:123)\l0x0071: CONST  (r7 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0072: APUT  (r0 I:??[int, float][]), (r7 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l0x0074: IPUT  (r0 I:int[]), (r9 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.gradientColors int[] \l0x0076: INVOKE  \l  (r4 I:com.google.android.material.timepicker.ClockHandView)\l  (r9 I:com.google.android.material.timepicker.ClockHandView$OnRotateListener)\l type: VIRTUAL call: com.google.android.material.timepicker.ClockHandView.addOnRotateListener(com.google.android.material.timepicker.ClockHandView$OnRotateListener):void A[MD:(com.google.android.material.timepicker.ClockHandView$OnRotateListener):void (m)] (LINE:124)\l0x0079: SGET  (r0 I:int) =  com.google.android.material.R.color.material_timepicker_clockface int  (LINE:126)\l0x007b: INVOKE  (r0 I:android.content.res.ColorStateList) = (r10 I:android.content.Context A[D('context' android.content.Context)]), (r0 I:int) type: STATIC call: androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context, int):android.content.res.ColorStateList A[MD:(android.content.Context, int):android.content.res.ColorStateList (m)] (LINE:127)\l0x007f: INVOKE  (r0 I:int) = (r0 I:android.content.res.ColorStateList) type: VIRTUAL call: android.content.res.ColorStateList.getDefaultColor():int A[MD:():int (c)] (LINE:128)\l0x0083: SGET  (r3 I:int) =  com.google.android.material.R.styleable.ClockFaceView_clockFaceBackgroundColor int  (LINE:130)\l0x0085: INVOKE  (r3 I:android.content.res.ColorStateList) = \l  (r10 I:android.content.Context A[D('context' android.content.Context)])\l  (r1 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)])\l  (r3 I:int)\l type: STATIC call: com.google.android.material.resources.MaterialResources.getColorStateList(android.content.Context, android.content.res.TypedArray, int):android.content.res.ColorStateList A[MD:(android.content.Context, android.content.res.TypedArray, int):android.content.res.ColorStateList (m)] (LINE:131)\l}"];
Node_3 [shape=record,label="{3\:\ 0x008a|0x008a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('backgroundColor' android.content.res.ColorStateList)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x008e  (LINE:135)\l}"];
Node_4 [shape=record,label="{4\:\ 0x008c|0x008c: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('defaultBackgroundColor' int)]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0092|0x0092: INVOKE  (r9 I:com.google.android.material.timepicker.ClockFaceView), (r4 I:int) type: VIRTUAL call: com.google.android.material.timepicker.ClockFaceView.setBackgroundColor(int):void A[MD:(int):void (m)] (LINE:134)\l0x0095: INVOKE  (r4 I:android.view.ViewTreeObserver) = (r9 I:com.google.android.material.timepicker.ClockFaceView) type: VIRTUAL call: com.google.android.material.timepicker.ClockFaceView.getViewTreeObserver():android.view.ViewTreeObserver A[MD:():android.view.ViewTreeObserver (s)] (LINE:137)\l0x0099: NEW_INSTANCE  (r7 I:com.google.android.material.timepicker.ClockFaceView$1) =  com.google.android.material.timepicker.ClockFaceView$1 \l0x009b: INVOKE  \l  (r7 I:com.google.android.material.timepicker.ClockFaceView$1)\l  (r9 I:com.google.android.material.timepicker.ClockFaceView)\l type: DIRECT call: com.google.android.material.timepicker.ClockFaceView.1.\<init\>(com.google.android.material.timepicker.ClockFaceView):void A[MD:(com.google.android.material.timepicker.ClockFaceView):void (m)]\l0x009e: INVOKE  (r4 I:android.view.ViewTreeObserver), (r7 I:android.view.ViewTreeObserver$OnPreDrawListener) type: VIRTUAL call: android.view.ViewTreeObserver.addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener):void A[MD:(android.view.ViewTreeObserver$OnPreDrawListener):void (c)] (LINE:138)\l0x00a1: INVOKE  (r9 I:com.google.android.material.timepicker.ClockFaceView), (r6 I:boolean) type: VIRTUAL call: com.google.android.material.timepicker.ClockFaceView.setFocusable(boolean):void A[MD:(boolean):void (s)] (LINE:153)\l0x00a4: INVOKE  (r1 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:154)\l0x00a7: NEW_INSTANCE  (r4 I:com.google.android.material.timepicker.ClockFaceView$2) =  com.google.android.material.timepicker.ClockFaceView$2  (LINE:155)\l0x00a9: INVOKE  \l  (r4 I:com.google.android.material.timepicker.ClockFaceView$2)\l  (r9 I:com.google.android.material.timepicker.ClockFaceView)\l type: DIRECT call: com.google.android.material.timepicker.ClockFaceView.2.\<init\>(com.google.android.material.timepicker.ClockFaceView):void A[MD:(com.google.android.material.timepicker.ClockFaceView):void (m)]\l0x00ac: IPUT  (r4 I:androidx.core.view.AccessibilityDelegateCompat), (r9 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.valueAccessibilityDelegate androidx.core.view.AccessibilityDelegateCompat \l0x00ae: CONST  (r4 I:??[int, float, short, byte, char]) = (12 ??[int, float, short, byte, char])  (LINE:195)\l0x00b0: NEW_ARRAY  (r4 I:java.lang.String[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x00b2: CONST_STR  (r6 I:java.lang.String) =  \"\"  (LINE:196)\l0x00b4: INVOKE  (r4 I:java.lang.Object[] A[D('initialValues' java.lang.String[])]), (r6 I:java.lang.Object) type: STATIC call: java.util.Arrays.fill(java.lang.Object[], java.lang.Object):void A[MD:(java.lang.Object[], java.lang.Object):void (c)]\l0x00b7: INVOKE  \l  (r9 I:com.google.android.material.timepicker.ClockFaceView)\l  (r4 I:java.lang.String[] A[D('initialValues' java.lang.String[])])\l  (r8 I:int)\l type: VIRTUAL call: com.google.android.material.timepicker.ClockFaceView.setValues(java.lang.String[], int):void A[MD:(java.lang.String[], int):void (m)] (LINE:197)\l0x00ba: SGET  (r6 I:int) =  com.google.android.material.R.dimen.material_time_picker_minimum_screen_height int  (LINE:199)\l0x00bc: INVOKE  (r6 I:int) = (r2 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r6 I:int) type: VIRTUAL call: android.content.res.Resources.getDimensionPixelSize(int):int A[MD:(int):int throws android.content.res.Resources$NotFoundException (c)]\l0x00c0: IPUT  (r6 I:int), (r9 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.minimumHeight int \l0x00c2: SGET  (r6 I:int) =  com.google.android.material.R.dimen.material_time_picker_minimum_screen_width int  (LINE:200)\l0x00c4: INVOKE  (r6 I:int) = (r2 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r6 I:int) type: VIRTUAL call: android.content.res.Resources.getDimensionPixelSize(int):int A[MD:(int):int throws android.content.res.Resources$NotFoundException (c)]\l0x00c8: IPUT  (r6 I:int), (r9 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.minimumWidth int \l0x00ca: SGET  (r6 I:int) =  com.google.android.material.R.dimen.material_clock_size int  (LINE:201)\l0x00cc: INVOKE  (r6 I:int) = (r2 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r6 I:int) type: VIRTUAL call: android.content.res.Resources.getDimensionPixelSize(int):int A[MD:(int):int throws android.content.res.Resources$NotFoundException (c)]\l0x00d0: IPUT  (r6 I:int), (r9 I:com.google.android.material.timepicker.ClockFaceView) com.google.android.material.timepicker.ClockFaceView.clockSize int \l}"];
Node_7 [shape=record,label="{7\:\ 0x00d2|RETURN\l|0x00d2: RETURN    (LINE:202)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x008e|0x008e: INVOKE  (r4 I:int) = (r3 I:android.content.res.ColorStateList A[D('backgroundColor' android.content.res.ColorStateList)]) type: VIRTUAL call: android.content.res.ColorStateList.getDefaultColor():int A[MD:():int (c)]\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.timepicker.ClockFaceView.\<init\>((r9 'this' I:com.google.android.material.timepicker.ClockFaceView A[IMMUTABLE_TYPE, THIS]), (r10 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('defStyleAttr' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x008e \-\> B:6:0x0092\lDebug Info:\l  0x0083\-0x00dd: r0 'defaultBackgroundColor' I\l  0x002f\-0x00dd: r1 'a' Landroid\/content\/res\/TypedArray;\l  0x0033\-0x00dd: r2 'res' Landroid\/content\/res\/Resources;\l  0x0089\-0x00dd: r3 'backgroundColor' Landroid\/content\/res\/ColorStateList;\l  0x00b2\-0x00dd: r4 'initialValues' [Ljava\/lang\/String;\l  0x0067\-0x00dd: r5 'clockHandTextColor' I\l  \-1 \-0x00dd: r10 'context' Landroid\/content\/Context;\l  \-1 \-0x00dd: r11 'attrs' Landroid\/util\/AttributeSet;\l  \-1 \-0x00dd: r12 'defStyleAttr' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
}

