digraph "CFG forcom.google.android.material.timepicker.ChipTextInputComboView.setText(Ljava\/lang\/CharSequence;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.String) = \l  (r3 I:com.google.android.material.timepicker.ChipTextInputComboView)\l  (r4 I:java.lang.CharSequence A[D('text' java.lang.CharSequence)])\l type: DIRECT call: com.google.android.material.timepicker.ChipTextInputComboView.formatText(java.lang.CharSequence):java.lang.String A[MD:(java.lang.CharSequence):java.lang.String (m)] (LINE:119)\l0x0004: IGET  (r1 I:com.google.android.material.chip.Chip) = (r3 I:com.google.android.material.timepicker.ChipTextInputComboView) com.google.android.material.timepicker.ChipTextInputComboView.chip com.google.android.material.chip.Chip  (LINE:120)\l0x0006: INVOKE  (r1 I:com.google.android.material.chip.Chip), (r0 I:java.lang.CharSequence A[D('formattedText' java.lang.String)]) type: VIRTUAL call: com.google.android.material.chip.Chip.setText(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (s)]\l0x0009: INVOKE  (r1 I:boolean) = (r0 I:java.lang.CharSequence A[D('formattedText' java.lang.String)]) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)] (LINE:121)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x000f|0x000f: IGET  (r1 I:android.widget.EditText) = (r3 I:com.google.android.material.timepicker.ChipTextInputComboView) com.google.android.material.timepicker.ChipTextInputComboView.editText android.widget.EditText  (LINE:122)\l0x0011: IGET  (r2 I:android.text.TextWatcher) = (r3 I:com.google.android.material.timepicker.ChipTextInputComboView) com.google.android.material.timepicker.ChipTextInputComboView.watcher android.text.TextWatcher \l0x0013: INVOKE  (r1 I:android.widget.EditText), (r2 I:android.text.TextWatcher) type: VIRTUAL call: android.widget.EditText.removeTextChangedListener(android.text.TextWatcher):void A[MD:(android.text.TextWatcher):void (c)]\l0x0016: IGET  (r1 I:android.widget.EditText) = (r3 I:com.google.android.material.timepicker.ChipTextInputComboView) com.google.android.material.timepicker.ChipTextInputComboView.editText android.widget.EditText  (LINE:123)\l0x0018: INVOKE  (r1 I:android.widget.EditText), (r0 I:java.lang.CharSequence A[D('formattedText' java.lang.String)]) type: VIRTUAL call: android.widget.EditText.setText(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (c)]\l0x001b: IGET  (r1 I:android.widget.EditText) = (r3 I:com.google.android.material.timepicker.ChipTextInputComboView) com.google.android.material.timepicker.ChipTextInputComboView.editText android.widget.EditText  (LINE:124)\l0x001d: IGET  (r2 I:android.text.TextWatcher) = (r3 I:com.google.android.material.timepicker.ChipTextInputComboView) com.google.android.material.timepicker.ChipTextInputComboView.watcher android.text.TextWatcher \l0x001f: INVOKE  (r1 I:android.widget.EditText), (r2 I:android.text.TextWatcher) type: VIRTUAL call: android.widget.EditText.addTextChangedListener(android.text.TextWatcher):void A[MD:(android.text.TextWatcher):void (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: RETURN    (LINE:126)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0022: RETURN   A[SYNTHETIC] (LINE:126)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.timepicker.ChipTextInputComboView.setText((r3 'this' I:com.google.android.material.timepicker.ChipTextInputComboView A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.CharSequence A[D('text' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x000d \-\> B:12:0x0022\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0022: r0 'formattedText' Ljava\/lang\/String;\l  \-1 \-0x0022: r4 'text' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

