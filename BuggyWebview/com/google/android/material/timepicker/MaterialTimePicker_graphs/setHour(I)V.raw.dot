digraph "CFG forcom.google.android.material.timepicker.MaterialTimePicker.setHour(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.timepicker.TimeModel) = (r1 I:com.google.android.material.timepicker.MaterialTimePicker) com.google.android.material.timepicker.MaterialTimePicker.time com.google.android.material.timepicker.TimeModel  (LINE:166)\l0x0002: INVOKE  (r0 I:com.google.android.material.timepicker.TimeModel), (r2 I:int A[D('hour' int)]) type: VIRTUAL call: com.google.android.material.timepicker.TimeModel.setHour(int):void A[MD:(int):void (m)]\l0x0005: IGET  (r0 I:com.google.android.material.timepicker.TimePickerPresenter) = (r1 I:com.google.android.material.timepicker.MaterialTimePicker) com.google.android.material.timepicker.MaterialTimePicker.activePresenter com.google.android.material.timepicker.TimePickerPresenter  (LINE:167)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: INVOKE  (r0 I:com.google.android.material.timepicker.TimePickerPresenter) type: INTERFACE call: com.google.android.material.timepicker.TimePickerPresenter.invalidate():void A[MD:():void (m)] (LINE:168)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|RETURN\lORIG_RETURN\l|0x000c: RETURN    (LINE:170)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|0x000c: RETURN   A[SYNTHETIC] (LINE:170)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.timepicker.MaterialTimePicker.setHour((r1 'this' I:com.google.android.material.timepicker.MaterialTimePicker A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('hour' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x0007 \-\> B:5:0x000c\lDebug Info:\l  \-1 \-0x000c: r2 'hour' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

