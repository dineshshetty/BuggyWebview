digraph "CFG forcom.google.android.material.timepicker.MaterialTimePicker.restoreState(Landroid\/os\/Bundle;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bundle' android.os.Bundle)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0003  (LINE:239)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|RETURN\l|0x0002: RETURN    (LINE:240)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|0x0003: CONST_STR  (r0 I:java.lang.String) =  \"TIME_PICKER_TIME_MODEL\"  (LINE:243)\l0x0005: INVOKE  (r0 I:android.os.Parcelable) = (r4 I:android.os.Bundle A[D('bundle' android.os.Bundle)]), (r0 I:java.lang.String) type: VIRTUAL call: android.os.Bundle.getParcelable(java.lang.String):android.os.Parcelable A[MD:\<T extends android.os.Parcelable\>:(java.lang.String):T extends android.os.Parcelable (c)]\l0x0009: CHECK_CAST (r0 I:com.google.android.material.timepicker.TimeModel) = (com.google.android.material.timepicker.TimeModel) (r0 I:??[OBJECT, ARRAY]) \l0x000b: IPUT  \l  (r0 I:com.google.android.material.timepicker.TimeModel)\l  (r3 I:com.google.android.material.timepicker.MaterialTimePicker)\l com.google.android.material.timepicker.MaterialTimePicker.time com.google.android.material.timepicker.TimeModel \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0016  (LINE:244)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:com.google.android.material.timepicker.TimeModel) =  com.google.android.material.timepicker.TimeModel  (LINE:245)\l0x0011: INVOKE  (r0 I:com.google.android.material.timepicker.TimeModel) type: DIRECT call: com.google.android.material.timepicker.TimeModel.\<init\>():void A[MD:():void (m)]\l0x0014: IPUT  \l  (r0 I:com.google.android.material.timepicker.TimeModel)\l  (r3 I:com.google.android.material.timepicker.MaterialTimePicker)\l com.google.android.material.timepicker.MaterialTimePicker.time com.google.android.material.timepicker.TimeModel \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IGET  (r0 I:com.google.android.material.timepicker.TimeModel) = (r3 I:com.google.android.material.timepicker.MaterialTimePicker) com.google.android.material.timepicker.MaterialTimePicker.time com.google.android.material.timepicker.TimeModel  (LINE:247)\l0x0018: IGET  (r0 I:int) = (r0 I:com.google.android.material.timepicker.TimeModel) com.google.android.material.timepicker.TimeModel.format int \l0x001a: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001b: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001f \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0021: CONST_STR  (r1 I:java.lang.String) =  \"TIME_PICKER_INPUT_MODE\"  (LINE:248)\l0x0023: INVOKE  (r1 I:int) = \l  (r4 I:android.os.Bundle A[D('bundle' android.os.Bundle)])\l  (r1 I:java.lang.String)\l  (r0 I:int A[D('defaultInputMode' int)])\l type: VIRTUAL call: android.os.Bundle.getInt(java.lang.String, int):int A[MD:(java.lang.String, int):int (c)]\l0x0027: IPUT  (r1 I:int), (r3 I:com.google.android.material.timepicker.MaterialTimePicker) com.google.android.material.timepicker.MaterialTimePicker.inputMode int \l0x0029: CONST_STR  (r1 I:java.lang.String) =  \"TIME_PICKER_TITLE_RES\"  (LINE:249)\l0x002b: INVOKE  (r1 I:int) = (r4 I:android.os.Bundle A[D('bundle' android.os.Bundle)]), (r1 I:java.lang.String), (r2 I:int) type: VIRTUAL call: android.os.Bundle.getInt(java.lang.String, int):int A[MD:(java.lang.String, int):int (c)]\l0x002f: IPUT  (r1 I:int), (r3 I:com.google.android.material.timepicker.MaterialTimePicker) com.google.android.material.timepicker.MaterialTimePicker.titleResId int \l0x0031: CONST_STR  (r1 I:java.lang.String) =  \"TIME_PICKER_TITLE_TEXT\"  (LINE:250)\l0x0033: INVOKE  (r1 I:java.lang.CharSequence) = (r4 I:android.os.Bundle A[D('bundle' android.os.Bundle)]), (r1 I:java.lang.String) type: VIRTUAL call: android.os.Bundle.getCharSequence(java.lang.String):java.lang.CharSequence A[MD:(java.lang.String):java.lang.CharSequence (c)]\l0x0037: IPUT  (r1 I:java.lang.CharSequence), (r3 I:com.google.android.material.timepicker.MaterialTimePicker) com.google.android.material.timepicker.MaterialTimePicker.titleText java.lang.CharSequence \l0x0039: CONST_STR  (r1 I:java.lang.String) =  \"TIME_PICKER_POSITIVE_BUTTON_TEXT_RES\"  (LINE:251)\l0x003b: INVOKE  (r1 I:int) = (r4 I:android.os.Bundle A[D('bundle' android.os.Bundle)]), (r1 I:java.lang.String), (r2 I:int) type: VIRTUAL call: android.os.Bundle.getInt(java.lang.String, int):int A[MD:(java.lang.String, int):int (c)]\l0x003f: IPUT  (r1 I:int), (r3 I:com.google.android.material.timepicker.MaterialTimePicker) com.google.android.material.timepicker.MaterialTimePicker.positiveButtonTextResId int \l0x0041: CONST_STR  (r1 I:java.lang.String) =  \"TIME_PICKER_POSITIVE_BUTTON_TEXT\"  (LINE:252)\l0x0043: INVOKE  (r1 I:java.lang.CharSequence) = (r4 I:android.os.Bundle A[D('bundle' android.os.Bundle)]), (r1 I:java.lang.String) type: VIRTUAL call: android.os.Bundle.getCharSequence(java.lang.String):java.lang.CharSequence A[MD:(java.lang.String):java.lang.CharSequence (c)]\l0x0047: IPUT  (r1 I:java.lang.CharSequence), (r3 I:com.google.android.material.timepicker.MaterialTimePicker) com.google.android.material.timepicker.MaterialTimePicker.positiveButtonText java.lang.CharSequence \l0x0049: CONST_STR  (r1 I:java.lang.String) =  \"TIME_PICKER_NEGATIVE_BUTTON_TEXT_RES\"  (LINE:253)\l0x004b: INVOKE  (r1 I:int) = (r4 I:android.os.Bundle A[D('bundle' android.os.Bundle)]), (r1 I:java.lang.String), (r2 I:int) type: VIRTUAL call: android.os.Bundle.getInt(java.lang.String, int):int A[MD:(java.lang.String, int):int (c)]\l0x004f: IPUT  (r1 I:int), (r3 I:com.google.android.material.timepicker.MaterialTimePicker) com.google.android.material.timepicker.MaterialTimePicker.negativeButtonTextResId int \l0x0051: CONST_STR  (r1 I:java.lang.String) =  \"TIME_PICKER_NEGATIVE_BUTTON_TEXT\"  (LINE:254)\l0x0053: INVOKE  (r1 I:java.lang.CharSequence) = (r4 I:android.os.Bundle A[D('bundle' android.os.Bundle)]), (r1 I:java.lang.String) type: VIRTUAL call: android.os.Bundle.getCharSequence(java.lang.String):java.lang.CharSequence A[MD:(java.lang.String):java.lang.CharSequence (c)]\l0x0057: IPUT  (r1 I:java.lang.CharSequence), (r3 I:com.google.android.material.timepicker.MaterialTimePicker) com.google.android.material.timepicker.MaterialTimePicker.negativeButtonText java.lang.CharSequence \l0x0059: CONST_STR  (r1 I:java.lang.String) =  \"TIME_PICKER_OVERRIDE_THEME_RES_ID\"  (LINE:255)\l0x005b: INVOKE  (r1 I:int) = (r4 I:android.os.Bundle A[D('bundle' android.os.Bundle)]), (r1 I:java.lang.String), (r2 I:int) type: VIRTUAL call: android.os.Bundle.getInt(java.lang.String, int):int A[MD:(java.lang.String, int):int (c)]\l0x005f: IPUT  (r1 I:int), (r3 I:com.google.android.material.timepicker.MaterialTimePicker) com.google.android.material.timepicker.MaterialTimePicker.overrideThemeResId int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0061|RETURN\l|0x0061: RETURN    (LINE:256)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.timepicker.MaterialTimePicker.restoreState((r3 'this' I:com.google.android.material.timepicker.MaterialTimePicker A[IMMUTABLE_TYPE, THIS]), (r4 I:android.os.Bundle A[D('bundle' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0061 \-\> B:1:?, CROSS_EDGE: B:8:0x001c \-\> B:11:0x0020, CROSS_EDGE: B:5:0x000d \-\> B:7:0x0016\lDebug Info:\l  0x0021\-0x0061: r0 'defaultInputMode' I\l  \-1 \-0x0061: r4 'bundle' Landroid\/os\/Bundle;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
}

