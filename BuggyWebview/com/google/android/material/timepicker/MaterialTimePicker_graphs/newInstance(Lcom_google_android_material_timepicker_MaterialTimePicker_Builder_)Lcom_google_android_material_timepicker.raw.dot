digraph "CFG forcom.google.android.material.timepicker.MaterialTimePicker.newInstance(Lcom\/google\/android\/material\/timepicker\/MaterialTimePicker$Builder;)Lcom\/google\/android\/material\/timepicker\/MaterialTimePicker;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:com.google.android.material.timepicker.MaterialTimePicker) =  com.google.android.material.timepicker.MaterialTimePicker  (LINE:120)\l0x0002: INVOKE  (r0 I:com.google.android.material.timepicker.MaterialTimePicker) type: DIRECT call: com.google.android.material.timepicker.MaterialTimePicker.\<init\>():void A[MD:():void (m)]\l0x0005: NEW_INSTANCE  (r1 I:android.os.Bundle) =  android.os.Bundle  (LINE:121)\l0x0007: INVOKE  (r1 I:android.os.Bundle) type: DIRECT call: android.os.Bundle.\<init\>():void A[MD:():void (c)]\l0x000a: INVOKE  (r2 I:com.google.android.material.timepicker.TimeModel) = \l  (r4 I:com.google.android.material.timepicker.MaterialTimePicker$Builder A[D('options' com.google.android.material.timepicker.MaterialTimePicker$Builder)])\l type: STATIC call: com.google.android.material.timepicker.MaterialTimePicker.Builder.access$000(com.google.android.material.timepicker.MaterialTimePicker$Builder):com.google.android.material.timepicker.TimeModel A[MD:(com.google.android.material.timepicker.MaterialTimePicker$Builder):com.google.android.material.timepicker.TimeModel (m)] (LINE:122)\l0x000e: CONST_STR  (r3 I:java.lang.String) =  \"TIME_PICKER_TIME_MODEL\" \l0x0010: INVOKE  (r1 I:android.os.Bundle A[D('args' android.os.Bundle)]), (r3 I:java.lang.String), (r2 I:android.os.Parcelable) type: VIRTUAL call: android.os.Bundle.putParcelable(java.lang.String, android.os.Parcelable):void A[MD:(java.lang.String, android.os.Parcelable):void (c)]\l0x0013: INVOKE  (r2 I:java.lang.Integer) = \l  (r4 I:com.google.android.material.timepicker.MaterialTimePicker$Builder A[D('options' com.google.android.material.timepicker.MaterialTimePicker$Builder)])\l type: STATIC call: com.google.android.material.timepicker.MaterialTimePicker.Builder.access$100(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.Integer A[MD:(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.Integer (m)] (LINE:123)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0026 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: INVOKE  (r2 I:java.lang.Integer) = \l  (r4 I:com.google.android.material.timepicker.MaterialTimePicker$Builder A[D('options' com.google.android.material.timepicker.MaterialTimePicker$Builder)])\l type: STATIC call: com.google.android.material.timepicker.MaterialTimePicker.Builder.access$100(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.Integer A[MD:(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.Integer (m)] (LINE:124)\l0x001d: INVOKE  (r2 I:int) = (r2 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x0021: CONST_STR  (r3 I:java.lang.String) =  \"TIME_PICKER_INPUT_MODE\" \l0x0023: INVOKE  (r1 I:android.os.Bundle A[D('args' android.os.Bundle)]), (r3 I:java.lang.String), (r2 I:int) type: VIRTUAL call: android.os.Bundle.putInt(java.lang.String, int):void A[MD:(java.lang.String, int):void (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: INVOKE  (r2 I:int) = \l  (r4 I:com.google.android.material.timepicker.MaterialTimePicker$Builder A[D('options' com.google.android.material.timepicker.MaterialTimePicker$Builder)])\l type: STATIC call: com.google.android.material.timepicker.MaterialTimePicker.Builder.access$200(com.google.android.material.timepicker.MaterialTimePicker$Builder):int A[MD:(com.google.android.material.timepicker.MaterialTimePicker$Builder):int (m)] (LINE:126)\l0x002a: CONST_STR  (r3 I:java.lang.String) =  \"TIME_PICKER_TITLE_RES\" \l0x002c: INVOKE  (r1 I:android.os.Bundle A[D('args' android.os.Bundle)]), (r3 I:java.lang.String), (r2 I:int) type: VIRTUAL call: android.os.Bundle.putInt(java.lang.String, int):void A[MD:(java.lang.String, int):void (c)]\l0x002f: INVOKE  (r2 I:java.lang.CharSequence) = \l  (r4 I:com.google.android.material.timepicker.MaterialTimePicker$Builder A[D('options' com.google.android.material.timepicker.MaterialTimePicker$Builder)])\l type: STATIC call: com.google.android.material.timepicker.MaterialTimePicker.Builder.access$300(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.CharSequence A[MD:(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.CharSequence (m)] (LINE:127)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|0x0033: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x003e \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: INVOKE  (r2 I:java.lang.CharSequence) = \l  (r4 I:com.google.android.material.timepicker.MaterialTimePicker$Builder A[D('options' com.google.android.material.timepicker.MaterialTimePicker$Builder)])\l type: STATIC call: com.google.android.material.timepicker.MaterialTimePicker.Builder.access$300(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.CharSequence A[MD:(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.CharSequence (m)] (LINE:128)\l0x0039: CONST_STR  (r3 I:java.lang.String) =  \"TIME_PICKER_TITLE_TEXT\" \l0x003b: INVOKE  (r1 I:android.os.Bundle A[D('args' android.os.Bundle)]), (r3 I:java.lang.String), (r2 I:java.lang.CharSequence) type: VIRTUAL call: android.os.Bundle.putCharSequence(java.lang.String, java.lang.CharSequence):void A[MD:(java.lang.String, java.lang.CharSequence):void (c)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|0x003e: INVOKE  (r2 I:int) = \l  (r4 I:com.google.android.material.timepicker.MaterialTimePicker$Builder A[D('options' com.google.android.material.timepicker.MaterialTimePicker$Builder)])\l type: STATIC call: com.google.android.material.timepicker.MaterialTimePicker.Builder.access$400(com.google.android.material.timepicker.MaterialTimePicker$Builder):int A[MD:(com.google.android.material.timepicker.MaterialTimePicker$Builder):int (m)] (LINE:130)\l0x0042: CONST_STR  (r3 I:java.lang.String) =  \"TIME_PICKER_POSITIVE_BUTTON_TEXT_RES\" \l0x0044: INVOKE  (r1 I:android.os.Bundle A[D('args' android.os.Bundle)]), (r3 I:java.lang.String), (r2 I:int) type: VIRTUAL call: android.os.Bundle.putInt(java.lang.String, int):void A[MD:(java.lang.String, int):void (c)]\l0x0047: INVOKE  (r2 I:java.lang.CharSequence) = \l  (r4 I:com.google.android.material.timepicker.MaterialTimePicker$Builder A[D('options' com.google.android.material.timepicker.MaterialTimePicker$Builder)])\l type: STATIC call: com.google.android.material.timepicker.MaterialTimePicker.Builder.access$500(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.CharSequence A[MD:(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.CharSequence (m)] (LINE:131)\l}"];
Node_9 [shape=record,label="{9\:\ 0x004b|0x004b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0056 \l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|0x004d: INVOKE  (r2 I:java.lang.CharSequence) = \l  (r4 I:com.google.android.material.timepicker.MaterialTimePicker$Builder A[D('options' com.google.android.material.timepicker.MaterialTimePicker$Builder)])\l type: STATIC call: com.google.android.material.timepicker.MaterialTimePicker.Builder.access$500(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.CharSequence A[MD:(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.CharSequence (m)] (LINE:132)\l0x0051: CONST_STR  (r3 I:java.lang.String) =  \"TIME_PICKER_POSITIVE_BUTTON_TEXT\" \l0x0053: INVOKE  (r1 I:android.os.Bundle A[D('args' android.os.Bundle)]), (r3 I:java.lang.String), (r2 I:java.lang.CharSequence) type: VIRTUAL call: android.os.Bundle.putCharSequence(java.lang.String, java.lang.CharSequence):void A[MD:(java.lang.String, java.lang.CharSequence):void (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0056|0x0056: INVOKE  (r2 I:int) = \l  (r4 I:com.google.android.material.timepicker.MaterialTimePicker$Builder A[D('options' com.google.android.material.timepicker.MaterialTimePicker$Builder)])\l type: STATIC call: com.google.android.material.timepicker.MaterialTimePicker.Builder.access$600(com.google.android.material.timepicker.MaterialTimePicker$Builder):int A[MD:(com.google.android.material.timepicker.MaterialTimePicker$Builder):int (m)] (LINE:134)\l0x005a: CONST_STR  (r3 I:java.lang.String) =  \"TIME_PICKER_NEGATIVE_BUTTON_TEXT_RES\" \l0x005c: INVOKE  (r1 I:android.os.Bundle A[D('args' android.os.Bundle)]), (r3 I:java.lang.String), (r2 I:int) type: VIRTUAL call: android.os.Bundle.putInt(java.lang.String, int):void A[MD:(java.lang.String, int):void (c)]\l0x005f: INVOKE  (r2 I:java.lang.CharSequence) = \l  (r4 I:com.google.android.material.timepicker.MaterialTimePicker$Builder A[D('options' com.google.android.material.timepicker.MaterialTimePicker$Builder)])\l type: STATIC call: com.google.android.material.timepicker.MaterialTimePicker.Builder.access$700(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.CharSequence A[MD:(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.CharSequence (m)] (LINE:135)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0063|0x0063: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x006e \l}"];
Node_13 [shape=record,label="{13\:\ 0x0065|0x0065: INVOKE  (r2 I:java.lang.CharSequence) = \l  (r4 I:com.google.android.material.timepicker.MaterialTimePicker$Builder A[D('options' com.google.android.material.timepicker.MaterialTimePicker$Builder)])\l type: STATIC call: com.google.android.material.timepicker.MaterialTimePicker.Builder.access$700(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.CharSequence A[MD:(com.google.android.material.timepicker.MaterialTimePicker$Builder):java.lang.CharSequence (m)] (LINE:136)\l0x0069: CONST_STR  (r3 I:java.lang.String) =  \"TIME_PICKER_NEGATIVE_BUTTON_TEXT\" \l0x006b: INVOKE  (r1 I:android.os.Bundle A[D('args' android.os.Bundle)]), (r3 I:java.lang.String), (r2 I:java.lang.CharSequence) type: VIRTUAL call: android.os.Bundle.putCharSequence(java.lang.String, java.lang.CharSequence):void A[MD:(java.lang.String, java.lang.CharSequence):void (c)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x006e|0x006e: INVOKE  (r2 I:int) = \l  (r4 I:com.google.android.material.timepicker.MaterialTimePicker$Builder A[D('options' com.google.android.material.timepicker.MaterialTimePicker$Builder)])\l type: STATIC call: com.google.android.material.timepicker.MaterialTimePicker.Builder.access$800(com.google.android.material.timepicker.MaterialTimePicker$Builder):int A[MD:(com.google.android.material.timepicker.MaterialTimePicker$Builder):int (m)] (LINE:138)\l0x0072: CONST_STR  (r3 I:java.lang.String) =  \"TIME_PICKER_OVERRIDE_THEME_RES_ID\" \l0x0074: INVOKE  (r1 I:android.os.Bundle A[D('args' android.os.Bundle)]), (r3 I:java.lang.String), (r2 I:int) type: VIRTUAL call: android.os.Bundle.putInt(java.lang.String, int):void A[MD:(java.lang.String, int):void (c)]\l0x0077: INVOKE  \l  (r0 I:com.google.android.material.timepicker.MaterialTimePicker A[D('fragment' com.google.android.material.timepicker.MaterialTimePicker)])\l  (r1 I:android.os.Bundle A[D('args' android.os.Bundle)])\l type: VIRTUAL call: com.google.android.material.timepicker.MaterialTimePicker.setArguments(android.os.Bundle):void A[MD:(android.os.Bundle):void (m)] (LINE:140)\l}"];
Node_15 [shape=record,label="{15\:\ 0x007a|RETURN\l|0x007a: RETURN  \l  (r0 I:com.google.android.material.timepicker.MaterialTimePicker A[D('fragment' com.google.android.material.timepicker.MaterialTimePicker)])\l  (LINE:141)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static com.google.android.material.timepicker.MaterialTimePicker com.google.android.material.timepicker.MaterialTimePicker.newInstance((r4 I:com.google.android.material.timepicker.MaterialTimePicker$Builder A[D('options' com.google.android.material.timepicker.MaterialTimePicker$Builder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0063 \-\> B:14:0x006e, CROSS_EDGE: B:9:0x004b \-\> B:11:0x0056, CROSS_EDGE: B:6:0x0033 \-\> B:8:0x003e, CROSS_EDGE: B:3:0x0017 \-\> B:5:0x0026\lDebug Info:\l  0x0005\-0x007a: r0 'fragment' Lcom\/google\/android\/material\/timepicker\/MaterialTimePicker;\l  0x000a\-0x007a: r1 'args' Landroid\/os\/Bundle;\l  \-1 \-0x007a: r4 'options' Lcom\/google\/android\/material\/timepicker\/MaterialTimePicker$Builder;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
}

