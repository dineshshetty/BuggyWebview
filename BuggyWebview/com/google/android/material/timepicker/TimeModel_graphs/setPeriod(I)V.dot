digraph "CFG forcom.google.android.material.timepicker.TimeModel.setPeriod(I)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000}"];
Node_20 [shape=record,label="{20\:\ 0x0002|if (r4 == r3.period) goto L16\l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|r3.period = r4\lint r0 = r3.hour\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|if (r0 \>= 12) goto L10\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c}"];
Node_24 [shape=record,label="{24\:\ 0x000d|if (r4 != 1) goto L10\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|r3.hour = r0 + 12\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0013|if (r0 \< 12) goto L15\l}"];
Node_27 [shape=record,label="{27\:\ 0x0015|if (r4 != 0) goto L14\l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|r3.hour = r0 \- 12\l}"];
Node_29 [shape=record,label="{29\:\ 0x001a|RETURN\lORIG_RETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.timepicker.TimeModel.setPeriod((r3v0 'this' com.google.android.material.timepicker.TimeModel A[IMMUTABLE_TYPE, THIS]), (r4v0 'period' int A[D('period' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0017 \-\> B:29:0x001a, CROSS_EDGE: B:27:0x0015 \-\> B:29:0x001a, CROSS_EDGE: B:26:0x0013 \-\> B:29:0x001a, CROSS_EDGE: B:22:0x000a \-\> B:26:0x0013, CROSS_EDGE: B:20:0x0002 \-\> B:29:0x001a\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_30;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_31;
Node_31 -> Node_18;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_32;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_33;
Node_28 -> Node_29;
Node_29 -> Node_18;
Node_33 -> Node_18;
Node_32 -> Node_18;
Node_30 -> Node_18;
}

