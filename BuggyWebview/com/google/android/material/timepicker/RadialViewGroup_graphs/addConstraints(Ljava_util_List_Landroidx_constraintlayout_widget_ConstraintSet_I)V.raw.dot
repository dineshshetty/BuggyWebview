digraph "CFG forcom.google.android.material.timepicker.RadialViewGroup.addConstraints(Ljava\/util\/List;Landroidx\/constraintlayout\/widget\/ConstraintSet;I)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:165)\l0x0001: INVOKE  (r1 I:java.util.Iterator) = (r6 I:java.util.List A[D('views' java.util.List\<android.view.View\>)]) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:166)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0005|LOOP_START\lLOOP:0: B:11:0x0005\-\>B:13:0x000b\l|0x0005: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|0x0009: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0024 \l}"];
Node_13 [shape=record,label="{13\:\ 0x000b|LOOP_END\lLOOP:0: B:11:0x0005\-\>B:13:0x000b\l|0x000b: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x000f: CHECK_CAST (r2 I:android.view.View) = (android.view.View) (r2 I:??[OBJECT, ARRAY]) \l0x0011: INVOKE  (r3 I:int) = (r2 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getId():int A[MD:():int (c)] (LINE:167)\l0x0015: SGET  (r4 I:int) =  com.google.android.material.R.id.circle_center int \l0x0017: INVOKE  \l  (r7 I:androidx.constraintlayout.widget.ConstraintSet A[D('constraintSet' androidx.constraintlayout.widget.ConstraintSet)])\l  (r3 I:int)\l  (r4 I:int)\l  (r8 I:int A[D('leveledRadius' int)])\l  (r0 I:float A[D('currentAngle' float)])\l type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintSet.constrainCircle(int, int, int, float):void A[MD:(int, int, int, float):void (m)]\l0x001a: CONST  (r3 I:??[int, float, short, byte, char]) = (1135869952(0x43b40000, float:360.0) ??[int, float, short, byte, char])  (LINE:168)\l0x001c: INVOKE  (r4 I:int) = (r6 I:java.util.List A[D('views' java.util.List\<android.view.View\>)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l0x0020: CAST (r4 I:float) = (float) (r4 I:int) \l0x0021: ARITH  (r3 I:float) = (r3 I:float) \/ (r4 I:float) \l0x0022: ARITH  (r0 I:float) = (r0 I:float A[D('currentAngle' float)]) + (r3 I:float) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0024|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|RETURN\l|0x0024: RETURN    (LINE:170)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.timepicker.RadialViewGroup.addConstraints((r5 'this' I:com.google.android.material.timepicker.RadialViewGroup A[IMMUTABLE_TYPE, THIS]), (r6 I:java.util.List\<android.view.View\> A[D('views' java.util.List\<android.view.View\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:androidx.constraintlayout.widget.ConstraintSet A[D('constraintSet' androidx.constraintlayout.widget.ConstraintSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('leveledRadius' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x000b \-\> B:11:0x0005\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0023: r2 'view' Landroid\/view\/View;\l  0x0001\-0x0024: r0 'currentAngle' F\l  0x0000\-0x0024: r6 'views' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroid\/view\/View;\>;\l  \-1 \-0x0024: r7 'constraintSet' Landroidx\/constraintlayout\/widget\/ConstraintSet;\l  \-1 \-0x0024: r8 'leveledRadius' I\lSIGNATURE: (Ljava\/util\/List\<Landroid\/view\/View;\>;Landroidx\/constraintlayout\/widget\/ConstraintSet;I)V\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_11;
Node_15 -> Node_14;
Node_14 -> Node_9;
}

