digraph "CFG forcom.google.android.material.timepicker.ClockHandView.adjustLevel(FF)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|r1 = 2\lint r0 = getWidth() \/ 2\lint r2 = getHeight() \/ 2\lfloat r3 = com.google.android.material.math.MathUtils.dist((float) r0, (float) r2, r8, r9)\lint r4 = getLeveledCircleRadius(2)\lfloat r5 = com.google.android.material.internal.ViewUtils.dpToPx(getContext(), 12)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|if ((r3 \> (((float) r4) + r5) ? 1 : (r3 == (((float) r4) + r5) ? 0 : \-1)) \> 0) goto L3\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|r1 = 1\l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:11:0x0023, B:13:0x0026] A[DONT_GENERATE, DONT_INLINE]\l|r7.currentLevel = r1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.timepicker.ClockHandView.adjustLevel((r7v0 'this' com.google.android.material.timepicker.ClockHandView A[IMMUTABLE_TYPE, THIS]), (r8v0 'x' float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'y' float A[D('y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0023 \-\> B:14:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

