digraph "CFG forcom.google.android.material.timepicker.ClockHandView.setHandRotationInternal(FZ)V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (1135869952(0x43b40000, float:360.0) ??[int, float, short, byte, char])  (LINE:203)\l0x0002: ARITH  (r12 I:float) = (r12 I:float A[D('degrees' float)]) % (r0 I:float) \l0x0003: IPUT  (r12 I:float A[D('degrees' float)]), (r11 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.originalDeg float  (LINE:204)\l0x0005: CONST  (r0 I:??[int, float, short, byte, char]) = (1119092736(0x42b40000, float:90.0) ??[int, float, short, byte, char])  (LINE:206)\l0x0007: ARITH  (r0 I:float) = (r12 I:float A[D('degrees' float)]) \- (r0 I:float) \l0x0009: CAST (r1 I:double) = (double) (r0 I:float A[D('angDeg' float)])  (LINE:208)\l0x000a: INVOKE  (r1 I:double) = (r1 I:double) type: STATIC call: java.lang.Math.toRadians(double):double A[MD:(double):double (c)]\l0x000e: IPUT  (r1 I:double), (r11 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.degRad double \l0x0010: INVOKE  (r1 I:int) = (r11 I:com.google.android.material.timepicker.ClockHandView) type: VIRTUAL call: com.google.android.material.timepicker.ClockHandView.getHeight():int A[MD:():int (c)] (LINE:209)\l0x0014: ARITH  (r1 I:int) = (r1 I:int) \/ (2 int) \l0x0016: INVOKE  (r2 I:int) = (r11 I:com.google.android.material.timepicker.ClockHandView) type: VIRTUAL call: com.google.android.material.timepicker.ClockHandView.getWidth():int A[MD:():int (c)] (LINE:210)\l0x001a: ARITH  (r2 I:int) = (r2 I:int) \/ (2 int) \l0x001c: IGET  (r3 I:int) = (r11 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.currentLevel int  (LINE:211)\l0x001e: INVOKE  (r3 I:int) = (r11 I:com.google.android.material.timepicker.ClockHandView), (r3 I:int) type: DIRECT call: com.google.android.material.timepicker.ClockHandView.getLeveledCircleRadius(int):int A[MD:(int):int (m)]\l0x0022: CAST (r4 I:float) = (float) (r2 I:int A[D('xCenter' int)])  (LINE:212)\l0x0023: CAST (r5 I:float) = (float) (r3 I:int A[D('leveledCircleRadius' int)]) \l0x0024: IGET  (r6 I:double) = (r11 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.degRad double \l0x0026: INVOKE  (r6 I:double) = (r6 I:double) type: STATIC call: java.lang.Math.cos(double):double A[MD:(double):double (c)]\l0x002a: CAST (r6 I:float) = (float) (r6 I:double) \l0x002b: ARITH  (r5 I:float) = (r5 I:float) * (r6 I:float) \l0x002d: ARITH  (r4 I:float) = (r4 I:float) + (r5 I:float) \l0x002e: CAST (r5 I:float) = (float) (r1 I:int A[D('yCenter' int)])  (LINE:213)\l0x002f: CAST (r6 I:float) = (float) (r3 I:int A[D('leveledCircleRadius' int)]) \l0x0030: IGET  (r7 I:double) = (r11 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.degRad double \l0x0032: INVOKE  (r7 I:double) = (r7 I:double) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)]\l0x0036: CAST (r7 I:float) = (float) (r7 I:double) \l0x0037: ARITH  (r6 I:float) = (r6 I:float) * (r7 I:float) \l0x0039: ARITH  (r5 I:float) = (r5 I:float) + (r6 I:float) \l0x003a: IGET  (r6 I:android.graphics.RectF) = (r11 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.selectorBox android.graphics.RectF  (LINE:214)\l0x003c: IGET  (r7 I:int) = (r11 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.selectorRadius int \l0x003e: CAST (r8 I:float) = (float) (r7 I:int) \l0x003f: ARITH  (r8 I:float) = (r4 I:float A[D('selCenterX' float)]) \- (r8 I:float) \l0x0041: CAST (r9 I:float) = (float) (r7 I:int) \l0x0042: ARITH  (r9 I:float) = (r5 I:float A[D('selCenterY' float)]) \- (r9 I:float) \l0x0044: CAST (r10 I:float) = (float) (r7 I:int) \l0x0045: ARITH  (r10 I:float) = (r10 I:float) + (r4 I:float A[D('selCenterX' float)]) \l0x0046: CAST (r7 I:float) = (float) (r7 I:int) \l0x0047: ARITH  (r7 I:float) = (r7 I:float) + (r5 I:float A[D('selCenterY' float)]) \l0x0048: INVOKE  (r6 I:android.graphics.RectF), (r8 I:float), (r9 I:float), (r10 I:float), (r7 I:float) type: VIRTUAL call: android.graphics.RectF.set(float, float, float, float):void A[MD:(float, float, float, float):void (c)]\l0x004b: IGET  (r6 I:java.util.List\<com.google.android.material.timepicker.ClockHandView$OnRotateListener\>) = (r11 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.listeners java.util.List  (LINE:220)\l0x004d: INVOKE  (r6 I:java.util.Iterator) = (r6 I:java.util.List) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0051|LOOP_START\lLOOP:0: B:12:0x0051\-\>B:14:0x0057\l|0x0051: INVOKE  (r7 I:boolean) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0055|0x0055: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0061 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0057|LOOP_END\lLOOP:0: B:12:0x0051\-\>B:14:0x0057\l|0x0057: INVOKE  (r7 I:java.lang.Object) = (r6 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x005b: CHECK_CAST (r7 I:com.google.android.material.timepicker.ClockHandView$OnRotateListener) = (com.google.android.material.timepicker.ClockHandView$OnRotateListener) (r7 I:??[OBJECT, ARRAY]) \l0x005d: INVOKE  \l  (r7 I:com.google.android.material.timepicker.ClockHandView$OnRotateListener A[D('listener' com.google.android.material.timepicker.ClockHandView$OnRotateListener)])\l  (r12 I:float A[D('degrees' float)])\l  (r13 I:boolean A[D('animate' boolean)])\l type: INTERFACE call: com.google.android.material.timepicker.ClockHandView.OnRotateListener.onRotate(float, boolean):void A[MD:(float, boolean):void (m)] (LINE:221)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0061|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0061|0x0061: INVOKE  (r11 I:com.google.android.material.timepicker.ClockHandView) type: VIRTUAL call: com.google.android.material.timepicker.ClockHandView.invalidate():void A[MD:():void (c)] (LINE:224)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0064|RETURN\l|0x0064: RETURN    (LINE:225)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.timepicker.ClockHandView.setHandRotationInternal((r11 'this' I:com.google.android.material.timepicker.ClockHandView A[IMMUTABLE_TYPE, THIS]), (r12 I:float A[D('degrees' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:boolean A[D('animate' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x0057 \-\> B:12:0x0051\lINLINE_NOT_NEEDED\lDebug Info:\l  0x005d\-0x0060: r7 'listener' Lcom\/google\/android\/material\/timepicker\/ClockHandView$OnRotateListener;\l  0x0009\-0x0064: r0 'angDeg' F\l  0x0016\-0x0064: r1 'yCenter' I\l  0x001c\-0x0064: r2 'xCenter' I\l  0x0022\-0x0064: r3 'leveledCircleRadius' I\l  0x002e\-0x0064: r4 'selCenterX' F\l  0x003a\-0x0064: r5 'selCenterY' F\l  \-1 \-0x0064: r12 'degrees' F\l  \-1 \-0x0064: r13 'animate' Z\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_12;
Node_17 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_10;
}

