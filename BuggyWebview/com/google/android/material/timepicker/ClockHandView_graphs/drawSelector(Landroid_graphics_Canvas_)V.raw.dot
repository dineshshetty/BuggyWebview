digraph "CFG forcom.google.android.material.timepicker.ClockHandView.drawSelector(Landroid\/graphics\/Canvas;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r21 I:??[OBJECT, ARRAY])  (LINE:252)\l0x0002: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r22 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x0004: INVOKE  (r1 I:int) = (r21 I:com.google.android.material.timepicker.ClockHandView) type: VIRTUAL call: com.google.android.material.timepicker.ClockHandView.getHeight():int A[MD:():int (c)]\l0x0008: ARITH  (r8 I:int) = (r1 I:int) \/ (2 int) \l0x000a: INVOKE  (r1 I:int) = (r21 I:com.google.android.material.timepicker.ClockHandView) type: VIRTUAL call: com.google.android.material.timepicker.ClockHandView.getWidth():int A[MD:():int (c)] (LINE:253)\l0x000e: ARITH  (r9 I:int) = (r1 I:int) \/ (2 int) \l0x0010: IGET  (r1 I:int) = (r0 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.currentLevel int  (LINE:256)\l0x0012: INVOKE  (r10 I:int) = (r0 I:com.google.android.material.timepicker.ClockHandView), (r1 I:int) type: DIRECT call: com.google.android.material.timepicker.ClockHandView.getLeveledCircleRadius(int):int A[MD:(int):int (m)]\l0x0016: CAST (r1 I:float) = (float) (r9 I:int A[D('xCenter' int)])  (LINE:257)\l0x0017: CAST (r2 I:float) = (float) (r10 I:int A[D('leveledCircleRadius' int)]) \l0x0018: IGET  (r3 I:double) = (r0 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.degRad double \l0x001a: INVOKE  (r3 I:double) = (r3 I:double) type: STATIC call: java.lang.Math.cos(double):double A[MD:(double):double (c)]\l0x001e: CAST (r3 I:float) = (float) (r3 I:double) \l0x001f: ARITH  (r2 I:float) = (r2 I:float) * (r3 I:float) \l0x0021: ARITH  (r11 I:float) = (r1 I:float) + (r2 I:float) \l0x0023: CAST (r1 I:float) = (float) (r8 I:int A[D('yCenter' int)])  (LINE:258)\l0x0024: CAST (r2 I:float) = (float) (r10 I:int A[D('leveledCircleRadius' int)]) \l0x0025: IGET  (r3 I:double) = (r0 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.degRad double \l0x0027: INVOKE  (r3 I:double) = (r3 I:double) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)]\l0x002b: CAST (r3 I:float) = (float) (r3 I:double) \l0x002c: ARITH  (r2 I:float) = (r2 I:float) * (r3 I:float) \l0x002e: ARITH  (r12 I:float) = (r1 I:float) + (r2 I:float) \l0x0030: IGET  (r1 I:android.graphics.Paint) = (r0 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.paint android.graphics.Paint  (LINE:261)\l0x0032: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0033: INVOKE  (r1 I:android.graphics.Paint), (r2 I:float) type: VIRTUAL call: android.graphics.Paint.setStrokeWidth(float):void A[MD:(float):void (c)]\l0x0036: IGET  (r1 I:int) = (r0 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.selectorRadius int  (LINE:262)\l0x0038: CAST (r1 I:float) = (float) (r1 I:int) \l0x0039: IGET  (r2 I:android.graphics.Paint) = (r0 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.paint android.graphics.Paint \l0x003b: INVOKE  \l  (r7 I:android.graphics.Canvas)\l  (r11 I:float A[D('selCenterX' float)])\l  (r12 I:float A[D('selCenterY' float)])\l  (r1 I:float)\l  (r2 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawCircle(float, float, float, android.graphics.Paint):void A[MD:(float, float, float, android.graphics.Paint):void (c)]\l0x003e: IGET  (r1 I:double) = (r0 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.degRad double  (LINE:266)\l0x0040: INVOKE  (r13 I:double) = (r1 I:double) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)]\l0x0044: IGET  (r1 I:double) = (r0 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.degRad double  (LINE:267)\l0x0046: INVOKE  (r15 I:double) = (r1 I:double) type: STATIC call: java.lang.Math.cos(double):double A[MD:(double):double (c)]\l0x004a: IGET  (r1 I:int) = (r0 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.selectorRadius int  (LINE:268)\l0x004c: ARITH  (r1 I:int) = (r10 I:int A[D('leveledCircleRadius' int)]) \- (r1 I:int) \l0x004e: CAST (r6 I:float) = (float) (r1 I:int) \l0x004f: CAST (r1 I:double) = (double) (r6 I:float A[D('lineLength' float)])  (LINE:269)\l0x0050: ARITH  (r1 I:double) = (r1 I:double) * (r15 I:double A[D('cos' double)]) \l0x0052: CAST (r1 I:int) = (int) (r1 I:double) \l0x0053: ARITH  (r1 I:int) = (r1 I:int) + (r9 I:int A[D('xCenter' int)]) \l0x0054: CAST (r5 I:float) = (float) (r1 I:int) \l0x0055: CAST (r1 I:double) = (double) (r6 I:float A[D('lineLength' float)])  (LINE:270)\l0x0056: ARITH  (r1 I:double) = (r1 I:double) * (r13 I:double A[D('sin' double)]) \l0x0058: CAST (r1 I:int) = (int) (r1 I:double) \l0x0059: ARITH  (r1 I:int) = (r1 I:int) + (r8 I:int A[D('yCenter' int)]) \l0x005a: CAST (r4 I:float) = (float) (r1 I:int) \l0x005b: IGET  (r1 I:android.graphics.Paint) = (r0 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.paint android.graphics.Paint  (LINE:273)\l0x005d: IGET  (r2 I:int) = (r0 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.selectorStrokeWidth int \l0x005f: CAST (r2 I:float) = (float) (r2 I:int) \l0x0060: INVOKE  (r1 I:android.graphics.Paint), (r2 I:float) type: VIRTUAL call: android.graphics.Paint.setStrokeWidth(float):void A[MD:(float):void (c)]\l0x0063: CAST (r2 I:float) = (float) (r9 I:int A[D('xCenter' int)])  (LINE:274)\l0x0064: CAST (r3 I:float) = (float) (r8 I:int A[D('yCenter' int)]) \l0x0065: IGET  (r1 I:android.graphics.Paint) = (r0 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.paint android.graphics.Paint \l0x0067: MOVE  (r17 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0069: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r22 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x006b: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('linePointY' float)]) \l0x006d: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('linePointY' float)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('linePointX' float)]) \l0x006e: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('linePointX' float)]) \l0x0070: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('linePointX' float)]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('linePointY' float)]) \l0x0072: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lineLength' float)]) \l0x0074: MOVE  (r6 I:??[OBJECT, ARRAY] A[D('lineLength' float)]) = (r17 I:??[OBJECT, ARRAY]) \l0x0076: INVOKE  (r1 I:android.graphics.Canvas), (r2 I:float), (r3 I:float), (r4 I:float), (r5 I:float), (r6 I:android.graphics.Paint) type: VIRTUAL call: android.graphics.Canvas.drawLine(float, float, float, float, android.graphics.Paint):void A[MD:(float, float, float, float, android.graphics.Paint):void (c)]\l0x0079: CAST (r1 I:float) = (float) (r9 I:int A[D('xCenter' int)])  (LINE:275)\l0x007a: CAST (r2 I:float) = (float) (r8 I:int A[D('yCenter' int)]) \l0x007b: IGET  (r3 I:float) = (r0 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.centerDotRadius float \l0x007d: IGET  (r4 I:android.graphics.Paint) = (r0 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.paint android.graphics.Paint \l0x007f: INVOKE  (r7 I:android.graphics.Canvas), (r1 I:float), (r2 I:float), (r3 I:float), (r4 I:android.graphics.Paint) type: VIRTUAL call: android.graphics.Canvas.drawCircle(float, float, float, android.graphics.Paint):void A[MD:(float, float, float, android.graphics.Paint):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0082|RETURN\l|0x0082: RETURN    (LINE:276)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.timepicker.ClockHandView.drawSelector((r21 'this' I:com.google.android.material.timepicker.ClockHandView A[IMMUTABLE_TYPE, THIS]), (r22 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x005b\-0x006d: r4 'linePointY' F\l  0x0055\-0x0070: r5 'linePointX' F\l  0x004f\-0x0074: r6 'lineLength' F\l  0x000a\-0x0082: r8 'yCenter' I\l  0x0010\-0x0082: r9 'xCenter' I\l  0x0016\-0x0082: r10 'leveledCircleRadius' I\l  0x0023\-0x0082: r11 'selCenterX' F\l  0x0030\-0x0082: r12 'selCenterY' F\l  0x0044\-0x0082: r13 'sin' D\l  0x004a\-0x0082: r15 'cos' D\l  0x006d\-0x0082: r18 'linePointY' F\l  0x0070\-0x0082: r19 'linePointX' F\l  0x0074\-0x0082: r20 'lineLength' F\l  \-1 \-0x0082: r22 'canvas' Landroid\/graphics\/Canvas;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

