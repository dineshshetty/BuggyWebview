digraph "CFG forcom.google.android.material.timepicker.ClockHandView.onLayout(ZIIII)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  \l  (r1 I:android.view.View)\l  (r2 I:boolean A[D('changed' boolean)])\l  (r3 I:int A[D('left' int)])\l  (r4 I:int A[D('top' int)])\l  (r5 I:int A[D('right' int)])\l  (r6 I:int A[D('bottom' int)])\l type: SUPER call: android.view.View.onLayout(boolean, int, int, int, int):void A[MD:(boolean, int, int, int, int):void (c)] (LINE:141)\l0x0003: IGET  (r0 I:android.animation.ValueAnimator) = (r1 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.rotationAnimator android.animation.ValueAnimator  (LINE:142)\l0x0005: INVOKE  (r0 I:boolean) = (r0 I:android.animation.ValueAnimator) type: VIRTUAL call: android.animation.ValueAnimator.isRunning():boolean A[MD:():boolean (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x000b|0x000b: INVOKE  (r0 I:float) = (r1 I:com.google.android.material.timepicker.ClockHandView) type: VIRTUAL call: com.google.android.material.timepicker.ClockHandView.getHandRotation():float A[MD:():float (m)] (LINE:144)\l0x000f: INVOKE  (r1 I:com.google.android.material.timepicker.ClockHandView), (r0 I:float) type: VIRTUAL call: com.google.android.material.timepicker.ClockHandView.setHandRotation(float):void A[MD:(float):void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: RETURN    (LINE:146)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0012: RETURN   A[SYNTHETIC] (LINE:146)\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.timepicker.ClockHandView.onLayout((r1 'this' I:com.google.android.material.timepicker.ClockHandView A[IMMUTABLE_TYPE, THIS]), (r2 I:boolean A[D('changed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x0009 \-\> B:12:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0012: r2 'changed' Z\l  \-1 \-0x0012: r3 'left' I\l  \-1 \-0x0012: r4 'top' I\l  \-1 \-0x0012: r5 'right' I\l  \-1 \-0x0012: r6 'bottom' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onLayout(boolean, int, int, int, int):void\}]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

