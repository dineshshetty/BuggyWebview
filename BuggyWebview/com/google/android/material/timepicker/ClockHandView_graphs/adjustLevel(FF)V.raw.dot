digraph "CFG forcom.google.android.material.timepicker.ClockHandView.adjustLevel(FF)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r7 I:com.google.android.material.timepicker.ClockHandView) type: VIRTUAL call: com.google.android.material.timepicker.ClockHandView.getWidth():int A[MD:():int (c)] (LINE:344)\l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0005: ARITH  (r0 I:int) = (r0 I:int) \/ (r1 I:int) \l0x0006: INVOKE  (r2 I:int) = (r7 I:com.google.android.material.timepicker.ClockHandView) type: VIRTUAL call: com.google.android.material.timepicker.ClockHandView.getHeight():int A[MD:():int (c)] (LINE:345)\l0x000a: ARITH  (r2 I:int) = (r2 I:int) \/ (r1 I:int) \l0x000b: CAST (r3 I:float) = (float) (r0 I:int A[D('xCenter' int)])  (LINE:346)\l0x000c: CAST (r4 I:float) = (float) (r2 I:int A[D('yCenter' int)]) \l0x000d: INVOKE  (r3 I:float) = (r3 I:float), (r4 I:float), (r8 I:float A[D('x' float)]), (r9 I:float A[D('y' float)]) type: STATIC call: com.google.android.material.math.MathUtils.dist(float, float, float, float):float A[MD:(float, float, float, float):float (m)]\l0x0011: INVOKE  (r4 I:int) = (r7 I:com.google.android.material.timepicker.ClockHandView), (r1 I:int) type: DIRECT call: com.google.android.material.timepicker.ClockHandView.getLeveledCircleRadius(int):int A[MD:(int):int (m)] (LINE:347)\l0x0015: INVOKE  (r5 I:android.content.Context) = (r7 I:com.google.android.material.timepicker.ClockHandView) type: VIRTUAL call: com.google.android.material.timepicker.ClockHandView.getContext():android.content.Context A[MD:():android.content.Context (c)] (LINE:348)\l0x0019: CONST  (r6 I:??[int, float, short, byte, char]) = (12 ??[int, float, short, byte, char]) \l0x001b: INVOKE  (r5 I:float) = (r5 I:android.content.Context), (r6 I:int) type: STATIC call: com.google.android.material.internal.ViewUtils.dpToPx(android.content.Context, int):float A[MD:(android.content.Context, int):float (m)]\l0x001f: CAST (r6 I:float) = (float) (r4 I:int A[D('level2CircleRadius' int)])  (LINE:349)\l0x0020: ARITH  (r6 I:float) = (r6 I:float) + (r5 I:float A[D('buffer' float)]) \l0x0021: CMP_G  (r6 I:int) = (r3 I:float A[D('selectionRadius' float)]), (r6 I:float) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: IF  (r6 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:13:0x0026 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|0x0027: IPUT  (r1 I:int), (r7 I:com.google.android.material.timepicker.ClockHandView) com.google.android.material.timepicker.ClockHandView.currentLevel int \l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|RETURN\l|0x0029: RETURN    (LINE:350)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.timepicker.ClockHandView.adjustLevel((r7 'this' I:com.google.android.material.timepicker.ClockHandView A[IMMUTABLE_TYPE, THIS]), (r8 I:float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:float A[D('y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0023 \-\> B:14:0x0027\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0029: r0 'xCenter' I\l  0x000b\-0x0029: r2 'yCenter' I\l  0x0011\-0x0029: r3 'selectionRadius' F\l  0x0015\-0x0029: r4 'level2CircleRadius' I\l  0x001f\-0x0029: r5 'buffer' F\l  \-1 \-0x0029: r8 'x' F\l  \-1 \-0x0029: r9 'y' F\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

