digraph "CFG forcom.google.android.material.timepicker.ClockHandView.setHandRotation(FZ)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|android.animation.ValueAnimator r0 = r5.rotationAnimator\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|if (r0 == null) goto L4\l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|r0.cancel()\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007}"];
Node_17 [shape=record,label="{17\:\ 0x0008|if (r7 != false) goto L9\l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|setHandRotationInternal(r6, false)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x000e|android.util.Pair r1 = getValuesForAnimation(r6)\lr5.rotationAnimator.setFloatValues(new float[]\{((java.lang.Float) r1.first).floatValue(), ((java.lang.Float) r1.second).floatValue()\})\lr5.rotationAnimator.setDuration((long) r5.animationDuration)\lr5.rotationAnimator.setInterpolator(r5.animationInterpolator)\lr5.rotationAnimator.addUpdateListener(new com.google.android.material.timepicker.ClockHandView$$ExternalSyntheticLambda0())\lr5.rotationAnimator.addListener(new com.google.android.material.timepicker.ClockHandView.C08151())\lr5.rotationAnimator.start()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0057|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.timepicker.ClockHandView.setHandRotation((r5v0 'this' com.google.android.material.timepicker.ClockHandView A[IMMUTABLE_TYPE, THIS]), (r6v0 'degrees' float A[D('degrees' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'animate' boolean A[D('animate' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0057 \-\> B:12:?, CROSS_EDGE: B:14:0x0002 \-\> B:16:0x0007\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

