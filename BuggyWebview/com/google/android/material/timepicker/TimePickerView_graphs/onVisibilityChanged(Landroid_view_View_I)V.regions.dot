digraph "CFG forcom.google.android.material.timepicker.TimePickerView.onVisibilityChanged(Landroid\/view\/View;I)V" {
subgraph cluster_Region_682585763 {
label = "R(2:1|(1:(1:4)))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|super.onVisibilityChanged(r3, r4)\l}"];
subgraph cluster_Region_1990846815 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1732904113 {
label = "IF [B:12:0x0003, B:13:0x0005] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0003|if (r3 == r2) goto L3\l}"];
Node_13 [shape=record,label="{13\:\ 0x0005|ADDED_TO_REGION\l|if (r4 == 0) goto L4\l}"];
subgraph cluster_Region_259058155 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0007|r2.hourView.sendAccessibilityEvent(8)\l}"];
}
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000e|ORIG_RETURN\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.timepicker.TimePickerView.onVisibilityChanged((r2v0 'this' com.google.android.material.timepicker.TimePickerView A[IMMUTABLE_TYPE, THIS]), (r3v0 'changedView' android.view.View A[D('changedView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'visibility' int A[D('visibility' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x0005 \-\> B:15:0x000e, CROSS_EDGE: B:12:0x0003 \-\> B:15:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onVisibilityChanged(android.view.View, int):void\}]\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_16[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_14 -> Node_15;
Node_9 -> Node_11;
Node_15 -> Node_10;
Node_17 -> Node_10;
Node_16 -> Node_10;
}

