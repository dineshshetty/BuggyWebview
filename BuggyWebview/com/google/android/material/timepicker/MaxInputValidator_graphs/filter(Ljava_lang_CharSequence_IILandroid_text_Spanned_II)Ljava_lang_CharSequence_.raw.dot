digraph "CFG forcom.google.android.material.timepicker.MaxInputValidator.filter(Ljava\/lang\/CharSequence;IILandroid\/text\/Spanned;II)Ljava\/lang\/CharSequence;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NumberFormatException \-\> 0x001f, blocks: (B:15:0x0000), top: B:23:0x0000 \}\lCatch: NumberFormatException \-\> 0x001f\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch: NumberFormatException \-\> 0x001f, TRY_ENTER] (LINE:42)\l0x0002: INVOKE  (r0 I:java.lang.StringBuilder), (r8 I:java.lang.CharSequence A[D('dest' android.text.Spanned)]) type: DIRECT call: java.lang.StringBuilder.\<init\>(java.lang.CharSequence):void A[Catch: NumberFormatException \-\> 0x001f, MD:(java.lang.CharSequence):void (c)]\l0x0005: INVOKE  (r1 I:java.lang.CharSequence) = \l  (r5 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)])\l  (r6 I:int A[D('start' int)])\l  (r7 I:int A[D('end' int)])\l type: INTERFACE call: java.lang.CharSequence.subSequence(int, int):java.lang.CharSequence A[Catch: NumberFormatException \-\> 0x001f, MD:(int, int):java.lang.CharSequence (c)] (LINE:43)\l0x0009: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.CharSequence) type: INTERFACE call: java.lang.CharSequence.toString():java.lang.String A[Catch: NumberFormatException \-\> 0x001f, MD:():java.lang.String (c)]\l0x000d: INVOKE  \l  (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)])\l  (r9 I:int A[D('dstart' int)])\l  (r10 I:int A[D('dend' int)])\l  (r1 I:java.lang.String)\l type: VIRTUAL call: java.lang.StringBuilder.replace(int, int, java.lang.String):java.lang.StringBuilder A[Catch: NumberFormatException \-\> 0x001f, MD:(int, int, java.lang.String):java.lang.StringBuilder (c)]\l0x0010: INVOKE  (r1 I:java.lang.String) = (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)]) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[Catch: NumberFormatException \-\> 0x001f, MD:():java.lang.String (c)] (LINE:44)\l0x0014: INVOKE  (r2 I:int) = (r1 I:java.lang.String A[D('newVal' java.lang.String)]) type: STATIC call: java.lang.Integer.parseInt(java.lang.String):int A[Catch: NumberFormatException \-\> 0x001f, MD:(java.lang.String):int throws java.lang.NumberFormatException (c)] (LINE:45)\l0x0018: IGET  (r3 I:int) = (r4 I:com.google.android.material.timepicker.MaxInputValidator) com.google.android.material.timepicker.MaxInputValidator.max int A[Catch: NumberFormatException \-\> 0x001f, TRY_LEAVE] (LINE:46)\l}"];
Node_16 [shape=record,label="{16\:\ 0x001a|0x001a: IF  (r2 I:??[int, byte, short, char] A[D('input' int)]) \> (r3 I:??[int, byte, short, char])  \-\> B:25:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x001c|RETURN\l|0x001c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:47)\l0x001d: RETURN  (r3 I:java.lang.CharSequence) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0020: CONST_STR  (r0 I:java.lang.String) =  \"\" A[SYNTHETIC] (LINE:52)\l0x0022: RETURN  (r0 I:java.lang.CharSequence) A[SYNTHETIC]\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_20 [shape=record,label="{20\:\ 0x001f|ExcHandler: NumberFormatException \-\> 0x001f\l|0x001f: MOVE_EXCEPTION  (r0 I:java.lang.NumberFormatException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NumberFormatException \-\> 0x001f] (LINE:49)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0020|RETURN\lORIG_RETURN\l|0x0020: CONST_STR  (r0 I:java.lang.String) =  \"\"  (LINE:52)\l0x0022: RETURN  (r0 I:java.lang.CharSequence) \l}"];
MethodNode[shape=record,label="{public java.lang.CharSequence com.google.android.material.timepicker.MaxInputValidator.filter((r4 'this' I:com.google.android.material.timepicker.MaxInputValidator A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.CharSequence A[D('source' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.text.Spanned A[D('dest' android.text.Spanned), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('dstart' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('dend' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:22:0x0022 \-\> B:14:?, CROSS_EDGE: B:20:0x001f \-\> B:21:0x0020, CROSS_EDGE: B:23:0x0000 \-\> B:20:0x001f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x001e: r0 'builder' Ljava\/lang\/StringBuilder;\l  0x0014\-0x001e: r1 'newVal' Ljava\/lang\/String;\l  0x0018\-0x001e: r2 'input' I\l  \-1 \-0x0022: r5 'source' Ljava\/lang\/CharSequence;\l  \-1 \-0x0022: r6 'start' I\l  \-1 \-0x0022: r7 'end' I\l  \-1 \-0x0022: r8 'dest' Landroid\/text\/Spanned;\l  \-1 \-0x0022: r9 'dstart' I\l  \-1 \-0x0022: r10 'dend' I\lTryCatch #0 \{NumberFormatException \-\> 0x001f, blocks: (B:15:0x0000), top: B:23:0x0000 \}\lMETHOD_OVERRIDE: [ClspMth\{android.text.InputFilter.filter(java.lang.CharSequence, int, int, android.text.Spanned, int, int):java.lang.CharSequence\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_23;
Node_23 -> Node_15;
Node_23 -> Node_20;
Node_15 -> Node_16;
Node_15 -> Node_24;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_25;
Node_17 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_14;
}

