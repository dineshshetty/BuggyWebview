digraph "CFG forcom.google.android.material.tabs.TabLayoutMediator.TabLayoutOnPageChangeCallback.\<init\>(Lcom\/google\/android\/material\/tabs\/TabLayout;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r1 I:androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) type: DIRECT call: androidx.viewpager2.widget.ViewPager2.OnPageChangeCallback.\<init\>():void A[MD:():void (m)] (LINE:204)\l0x0003: NEW_INSTANCE  (r0 I:java.lang.ref.WeakReference) =  java.lang.ref.WeakReference  (LINE:205)\l0x0005: INVOKE  \l  (r0 I:java.lang.ref.WeakReference)\l  (r2 I:java.lang.Object A[D('tabLayout' com.google.android.material.tabs.TabLayout)])\l type: DIRECT call: java.lang.ref.WeakReference.\<init\>(java.lang.Object):void A[MD:(T):void (c)]\l0x0008: IPUT  \l  (r0 I:java.lang.ref.WeakReference\<com.google.android.material.tabs.TabLayout\>)\l  (r1 I:com.google.android.material.tabs.TabLayoutMediator$TabLayoutOnPageChangeCallback)\l com.google.android.material.tabs.TabLayoutMediator.TabLayoutOnPageChangeCallback.tabLayoutRef java.lang.ref.WeakReference \l0x000a: INVOKE  (r1 I:com.google.android.material.tabs.TabLayoutMediator$TabLayoutOnPageChangeCallback) type: VIRTUAL call: com.google.android.material.tabs.TabLayoutMediator.TabLayoutOnPageChangeCallback.reset():void A[MD:():void (m)] (LINE:206)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|RETURN\l|0x000d: RETURN    (LINE:207)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void com.google.android.material.tabs.TabLayoutMediator.TabLayoutOnPageChangeCallback.\<init\>((r1 'this' I:com.google.android.material.tabs.TabLayoutMediator$TabLayoutOnPageChangeCallback A[IMMUTABLE_TYPE, THIS]), (r2 I:com.google.android.material.tabs.TabLayout A[D('tabLayout' com.google.android.material.tabs.TabLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x000d: r2 'tabLayout' Lcom\/google\/android\/material\/tabs\/TabLayout;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

