digraph "CFG forcom.google.android.material.tabs.TabLayout.setInlineLabel(Z)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000}"];
Node_20 [shape=record,label="{20\:\ 0x0002|if (r3.inlineLabel == r4) goto L16\l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|r3.inlineLabel = r4\lr0 = 0\l}"];
Node_22 [shape=record,label="{22\:\ 0x0007|LOOP_START\lLOOP:0: B:22:0x0007\-\>B:27:0x001f\lPHI: r0 \l  PHI: (r0v2 'i' int) = (r0v1 'i' int), (r0v3 'i' int) binds: [B:21:0x0004, B:27:0x001f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|if (r0 \>= r3.slidingTabIndicator.getChildCount()) goto L12\l}"];
Node_24 [shape=record,label="{24\:\ 0x000f|android.view.View r1 = r3.slidingTabIndicator.getChildAt(r0)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|if ((r1 instanceof com.google.android.material.tabs.TabLayout.TabView) == false) goto L11\l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|((com.google.android.material.tabs.TabLayout.TabView) r1).updateOrientation()\l}"];
Node_31 [shape=record,label="{31\:\ 0x001f|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x001f|LOOP_END\lLOOP:0: B:22:0x0007\-\>B:27:0x001f\l|int r0 = r0 + 1\l}"];
Node_32 [shape=record,label="{32\:\ 0x001f|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0022|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|applyModeAndGravity()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0025|RETURN\lORIG_RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.tabs.TabLayout.setInlineLabel((r3v0 'this' com.google.android.material.tabs.TabLayout A[IMMUTABLE_TYPE, THIS]), (r4v0 'inline' boolean A[D('inline' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x001f \-\> B:22:0x0007, CROSS_EDGE: B:25:0x0017 \-\> B:27:0x001f, CROSS_EDGE: B:20:0x0002 \-\> B:29:0x0025\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_33;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_30;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_31;
Node_31 -> Node_27;
Node_27 -> Node_22;
Node_32 -> Node_27;
Node_30 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_18;
Node_33 -> Node_18;
}

