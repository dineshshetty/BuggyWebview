digraph "CFG forcom.google.android.material.tabs.TabLayout.setInlineLabel(Z)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r3 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.inlineLabel boolean  (LINE:1240)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('inline' boolean)])  \-\> B:33:? \l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|0x0004: IPUT  (r4 I:boolean A[D('inline' boolean)]), (r3 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.inlineLabel boolean  (LINE:1241)\l0x0006: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1242)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0007|LOOP_START\lLOOP:0: B:22:0x0007\-\>B:27:0x001f\l|0x0007: IGET  (r1 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) = (r3 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.slidingTabIndicator com.google.android.material.tabs.TabLayout$SlidingTabIndicator \l0x0009: INVOKE  (r1 I:int) = (r1 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.SlidingTabIndicator.getChildCount():int A[MD:():int (s)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|0x000d: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:30:0x0022 \l}"];
Node_24 [shape=record,label="{24\:\ 0x000f|0x000f: IGET  (r1 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) = (r3 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.slidingTabIndicator com.google.android.material.tabs.TabLayout$SlidingTabIndicator  (LINE:1243)\l0x0011: INVOKE  (r1 I:android.view.View) = (r1 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator), (r0 I:int A[D('i' int)]) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.SlidingTabIndicator.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)]\l0x0015: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) com.google.android.material.tabs.TabLayout$TabView  (LINE:1244)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|0x0017: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x001f \l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|0x0019: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('child' android.view.View)])  (LINE:1245)\l0x001a: CHECK_CAST (r2 I:com.google.android.material.tabs.TabLayout$TabView) = (com.google.android.material.tabs.TabLayout$TabView) (r2 I:??[OBJECT, ARRAY]) \l0x001c: INVOKE  (r2 I:com.google.android.material.tabs.TabLayout$TabView) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.TabView.updateOrientation():void A[MD:():void (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x001f|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x001f|LOOP_END\lLOOP:0: B:22:0x0007\-\>B:27:0x001f\l|0x001f: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:1242)\l}"];
Node_32 [shape=record,label="{32\:\ 0x001f|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0022|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|0x0022: INVOKE  (r3 I:com.google.android.material.tabs.TabLayout) type: DIRECT call: com.google.android.material.tabs.TabLayout.applyModeAndGravity():void A[MD:():void (m)] (LINE:1248)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0025|RETURN\lORIG_RETURN\l|0x0025: RETURN    (LINE:1250)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0025: RETURN   A[SYNTHETIC] (LINE:1250)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.tabs.TabLayout.setInlineLabel((r3 'this' I:com.google.android.material.tabs.TabLayout A[IMMUTABLE_TYPE, THIS]), (r4 I:boolean A[D('inline' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x001f \-\> B:22:0x0007, CROSS_EDGE: B:25:0x0017 \-\> B:27:0x001f, CROSS_EDGE: B:20:0x0002 \-\> B:29:0x0025\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x001f: r1 'child' Landroid\/view\/View;\l  0x0007\-0x0022: r0 'i' I\l  \-1 \-0x0025: r4 'inline' Z\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_33;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_30;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_31;
Node_31 -> Node_27;
Node_27 -> Node_22;
Node_32 -> Node_27;
Node_30 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_18;
Node_33 -> Node_18;
}

