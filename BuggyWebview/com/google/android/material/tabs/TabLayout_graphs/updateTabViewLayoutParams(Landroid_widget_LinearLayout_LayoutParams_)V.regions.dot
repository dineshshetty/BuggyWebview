digraph "CFG forcom.google.android.material.tabs.TabLayout.updateTabViewLayoutParams(Landroid\/widget\/LinearLayout$LayoutParams;)V" {
subgraph cluster_Region_926718833 {
label = "R(1:(2:(2:5|6)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1162667633 {
label = "R(2:(2:5|6)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1294071851 {
label = "IF [B:13:0x0003, B:15:0x0007] THEN: R(2:5|6) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0003|if (r2.mode == 1) goto L3\l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|ADDED_TO_REGION\l|if (r2.tabGravity == 0) goto L5\l}"];
subgraph cluster_Region_359391087 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0009|r3.width = 0\lr3.weight = 1.0f\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_1189034400 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0011|r3.width = \-2\lr3.weight = 0.0f\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0005}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0017|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.tabs.TabLayout.updateTabViewLayoutParams((r2v0 'this' com.google.android.material.tabs.TabLayout A[IMMUTABLE_TYPE, THIS]), (r3v0 'lp' android.widget.LinearLayout$LayoutParams A[D('lp' android.widget.LinearLayout$LayoutParams), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0011 \-\> B:18:0x0017, CROSS_EDGE: B:13:0x0003 \-\> B:17:0x0011\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_19 -> Node_11;
Node_17 -> Node_18;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_18 -> Node_11;
}

