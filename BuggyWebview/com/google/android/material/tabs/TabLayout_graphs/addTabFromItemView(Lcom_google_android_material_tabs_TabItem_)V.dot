digraph "CFG forcom.google.android.material.tabs.TabLayout.addTabFromItemView(Lcom\/google\/android\/material\/tabs\/TabItem;)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|com.google.android.material.tabs.TabLayout$Tab r0 = newTab()\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|if (r3.text == null) goto L4\l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|r0.setText(r3.text)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d}"];
Node_22 [shape=record,label="{22\:\ 0x000f|if (r3.icon == null) goto L7\l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|r0.setIcon(r3.icon)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016}"];
Node_25 [shape=record,label="{25\:\ 0x0018|if (r3.customLayout == 0) goto L10\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|r0.setCustomView(r3.customLayout)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001f}"];
Node_28 [shape=record,label="{28\:\ 0x0027|if (android.text.TextUtils.isEmpty(r3.getContentDescription()) != false) goto L13\l}"];
Node_29 [shape=record,label="{29\:\ 0x0029|r0.setContentDescription(r3.getContentDescription())\l}"];
Node_30 [shape=record,label="{30\:\ 0x0030|addTab(r0)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0033|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.tabs.TabLayout.addTabFromItemView((r2v0 'this' com.google.android.material.tabs.TabLayout A[IMMUTABLE_TYPE, THIS]), (r3v0 'item' com.google.android.material.tabs.TabItem A[D('item' com.google.android.material.tabs.TabItem), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0027 \-\> B:30:0x0030, CROSS_EDGE: B:25:0x0018 \-\> B:27:0x001f, CROSS_EDGE: B:22:0x000f \-\> B:24:0x0016, CROSS_EDGE: B:19:0x0006 \-\> B:21:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_17;
}

