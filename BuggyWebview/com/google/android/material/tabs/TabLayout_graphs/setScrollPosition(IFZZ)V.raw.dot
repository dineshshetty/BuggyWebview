digraph "CFG forcom.google.android.material.tabs.TabLayout.setScrollPosition(IFZZ)V" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: CAST (r0 I:float) = (float) (r4 I:int A[D('position' int)])  (LINE:751)\l0x0001: ARITH  (r0 I:float) = (r0 I:float) + (r5 I:float A[D('positionOffset' float)]) \l0x0002: INVOKE  (r0 I:int) = (r0 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|0x0006: IF  (r0 I:??[int, byte, short, char] A[D('roundedPosition' int)]) \< (0 ??[int, byte, short, char])  \-\> B:47:0x0039  (LINE:752)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0008|0x0008: IGET  (r1 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) = (r3 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.slidingTabIndicator com.google.android.material.tabs.TabLayout$SlidingTabIndicator \l0x000a: INVOKE  (r1 I:int) = (r1 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.SlidingTabIndicator.getChildCount():int A[MD:():int (s)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x000e|0x000e: IF  (r0 I:??[int, byte, short, char] A[D('roundedPosition' int)]) \< (r1 I:??[int, byte, short, char])  \-\> B:32:0x0011 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0011|0x0011: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('updateIndicatorPosition' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0018  (LINE:757)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0013|0x0013: IGET  (r1 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) = (r3 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.slidingTabIndicator com.google.android.material.tabs.TabLayout$SlidingTabIndicator  (LINE:758)\l0x0015: INVOKE  \l  (r1 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator)\l  (r4 I:int A[D('position' int)])\l  (r5 I:float A[D('positionOffset' float)])\l type: VIRTUAL call: com.google.android.material.tabs.TabLayout.SlidingTabIndicator.setIndicatorPositionFromTabPosition(int, float):void A[MD:(int, float):void (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0018|0x0018: IGET  (r1 I:android.animation.ValueAnimator) = (r3 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.scrollAnimator android.animation.ValueAnimator  (LINE:762)\l}"];
Node_35 [shape=record,label="{35\:\ 0x001a|0x001a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0027 \l}"];
Node_36 [shape=record,label="{36\:\ 0x001c|0x001c: INVOKE  (r1 I:boolean) = (r1 I:android.animation.ValueAnimator) type: VIRTUAL call: android.animation.ValueAnimator.isRunning():boolean A[MD:():boolean (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0020|0x0020: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0027 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0022|0x0022: IGET  (r1 I:android.animation.ValueAnimator) = (r3 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.scrollAnimator android.animation.ValueAnimator  (LINE:763)\l0x0024: INVOKE  (r1 I:android.animation.ValueAnimator) type: VIRTUAL call: android.animation.ValueAnimator.cancel():void A[MD:():void (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0027|0x0027: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:765)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0028|0x0028: IF  (r4 I:??[int, byte, short, char] A[D('position' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:42:0x002c \l}"];
Node_41 [shape=record,label="{41\:\ 0x002a|0x002a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0030|0x0030: INVOKE  (r3 I:com.google.android.material.tabs.TabLayout), (r2 I:int), (r1 I:int) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.scrollTo(int, int):void A[MD:(int, int):void (c)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0033|0x0033: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('updateSelectedText' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:?  (LINE:768)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0035|0x0035: INVOKE  (r3 I:com.google.android.material.tabs.TabLayout), (r0 I:int A[D('roundedPosition' int)]) type: DIRECT call: com.google.android.material.tabs.TabLayout.setSelectedTabView(int):void A[MD:(int):void (m)] (LINE:769)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0038|RETURN\lORIG_RETURN\l|0x0038: RETURN    (LINE:771)\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lRETURN\l|0x0038: RETURN   A[SYNTHETIC] (LINE:771)\l}"];
Node_42 [shape=record,label="{42\:\ 0x002c|0x002c: INVOKE  (r2 I:int) = \l  (r3 I:com.google.android.material.tabs.TabLayout)\l  (r4 I:int A[D('position' int)])\l  (r5 I:float A[D('positionOffset' float)])\l type: DIRECT call: com.google.android.material.tabs.TabLayout.calculateScrollXForTab(int, float):int A[MD:(int, float):int (m)]\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|0x0039: RETURN   A[SYNTHETIC] (LINE:753)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0039|RETURN\lORIG_RETURN\l|0x0039: RETURN    (LINE:753)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.tabs.TabLayout.setScrollPosition((r3 'this' I:com.google.android.material.tabs.TabLayout A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:float A[D('positionOffset' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('updateSelectedText' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[D('updateIndicatorPosition' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:44:0x0033 \-\> B:46:0x0038, CROSS_EDGE: B:42:0x002c \-\> B:43:0x0030, CROSS_EDGE: B:37:0x0020 \-\> B:39:0x0027, CROSS_EDGE: B:35:0x001a \-\> B:39:0x0027, CROSS_EDGE: B:32:0x0011 \-\> B:34:0x0018, CROSS_EDGE: B:47:0x0039 \-\> B:26:?, CROSS_EDGE: B:28:0x0006 \-\> B:47:0x0039\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0039: r0 'roundedPosition' I\l  \-1 \-0x0039: r4 'position' I\l  \-1 \-0x0039: r5 'positionOffset' F\l  \-1 \-0x0039: r6 'updateSelectedText' Z\l  \-1 \-0x0039: r7 'updateIndicatorPosition' Z\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_47;
Node_29 -> Node_30;
Node_30 -> Node_32;
Node_30 -> Node_49[style=dashed];
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_39;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_48;
Node_45 -> Node_46;
Node_46 -> Node_26;
Node_48 -> Node_26;
Node_42 -> Node_43;
Node_49 -> Node_26;
Node_47 -> Node_26;
}

