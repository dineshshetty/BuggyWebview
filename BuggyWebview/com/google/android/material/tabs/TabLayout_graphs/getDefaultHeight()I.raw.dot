digraph "CFG forcom.google.android.material.tabs.TabLayout.getDefaultHeight()I" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3454)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3455)\l0x0002: IGET  (r2 I:java.util.ArrayList\<com.google.android.material.tabs.TabLayout$Tab\>) = (r5 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.tabs java.util.ArrayList \l0x0004: INVOKE  (r2 I:int) = (r2 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0008|LOOP_START\lLOOP:0: B:27:0x0008\-\>B:35:0x0026\l|0x0008: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:43:0x0029 \l}"];
Node_28 [shape=record,label="{28\:\ 0x000a|0x000a: IGET  (r3 I:java.util.ArrayList\<com.google.android.material.tabs.TabLayout$Tab\>) = (r5 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.tabs java.util.ArrayList  (LINE:3456)\l0x000c: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.ArrayList), (r1 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0010: CHECK_CAST (r3 I:com.google.android.material.tabs.TabLayout$Tab) = (com.google.android.material.tabs.TabLayout$Tab) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0012|0x0012: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tab' com.google.android.material.tabs.TabLayout$Tab)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0026  (LINE:3457)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0014|0x0014: INVOKE  (r4 I:android.graphics.drawable.Drawable) = (r3 I:com.google.android.material.tabs.TabLayout$Tab A[D('tab' com.google.android.material.tabs.TabLayout$Tab)]) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.Tab.getIcon():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0018|0x0018: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0026 \l}"];
Node_32 [shape=record,label="{32\:\ 0x001a|0x001a: INVOKE  (r4 I:java.lang.CharSequence) = (r3 I:com.google.android.material.tabs.TabLayout$Tab A[D('tab' com.google.android.material.tabs.TabLayout$Tab)]) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.Tab.getText():java.lang.CharSequence A[MD:():java.lang.CharSequence (m)]\l0x001e: INVOKE  (r4 I:boolean) = (r4 I:java.lang.CharSequence) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0022|0x0022: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0026 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0024|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0024|0x0024: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('hasIconAndText' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:3458)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0029|0x0029: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasIconAndText' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0032  (LINE:3462)\l}"];
Node_37 [shape=record,label="{37\:\ 0x002b|0x002b: IGET  (r1 I:boolean) = (r5 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.inlineLabel boolean \l}"];
Node_38 [shape=record,label="{38\:\ 0x002d|0x002d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0032 \l}"];
Node_39 [shape=record,label="{39\:\ 0x002f|SYNTHETIC\lRETURN\l|0x002f: CONST  (r1 I:??[int, float, short, byte, char]) = (72 ??[int, float, short, byte, char]) \l0x0034: RETURN  (r1 I:int) A[SYNTHETIC]\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0032|RETURN\lORIG_RETURN\l|0x0032: CONST  (r1 I:??[int, float, short, byte, char]) = (48 ??[int, float, short, byte, char]) \l0x0034: RETURN  (r1 I:int) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0026|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0026|LOOP_END\lLOOP:0: B:27:0x0008\-\>B:35:0x0026\l|0x0026: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:3455)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0026|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0026|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0029|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int com.google.android.material.tabs.TabLayout.getDefaultHeight((r5 'this' I:com.google.android.material.tabs.TabLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:40:0x0032 \-\> B:41:0x0034, CROSS_EDGE: B:36:0x0029 \-\> B:40:0x0032, BACK_EDGE: B:35:0x0026 \-\> B:27:0x0008, CROSS_EDGE: B:31:0x0018 \-\> B:35:0x0026, CROSS_EDGE: B:29:0x0012 \-\> B:35:0x0026, CROSS_EDGE: B:27:0x0008 \-\> B:36:0x0029\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0026: r3 'tab' Lcom\/google\/android\/material\/tabs\/TabLayout$Tab;\l  0x0002\-0x0029: r1 'i' I\l  0x0008\-0x0029: r2 'count' I\l  0x0001\-0x0034: r0 'hasIconAndText' Z\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_43;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_44;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_45;
Node_32 -> Node_33;
Node_33 -> Node_42[style=dashed];
Node_33 -> Node_46;
Node_42 -> Node_34;
Node_34 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_25;
Node_40 -> Node_25;
Node_46 -> Node_35;
Node_35 -> Node_27;
Node_45 -> Node_35;
Node_44 -> Node_35;
Node_43 -> Node_36;
}

