digraph "CFG forcom.google.android.material.tabs.TabLayout.onMeasure(II)V" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000|int r0 = java.lang.Math.round(com.google.android.material.internal.ViewUtils.dpToPx(getContext(), getDefaultHeight()))\lr3 = false\l}"];
Node_39 [shape=record,label="{39\:\ 0x0018|switch(android.view.View.MeasureSpec.getMode(r11)) \{\l    case \-2147483648: goto L4;\l    case 0: goto L3;\l    default: goto L9;\l\}\l}"];
Node_41 [shape=record,label="{41\:\ 0x001c|int r11 = android.view.View.MeasureSpec.makeMeasureSpec((getPaddingTop() + r0) + getPaddingBottom(), androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY)\l}"];
Node_42 [shape=record,label="{42\:\ 0x002c}"];
Node_43 [shape=record,label="{43\:\ 0x0030|if (getChildCount() != 1) goto L9\l}"];
Node_44 [shape=record,label="{44\:\ 0x0032}"];
Node_45 [shape=record,label="{45\:\ 0x0036|if (android.view.View.MeasureSpec.getSize(r11) \< r0) goto L9\l}"];
Node_46 [shape=record,label="{46\:\ 0x0038|getChildAt(0).setMinimumHeight(r0)\l}"];
Node_47 [shape=record,label="{47\:\ 0x003f|PHI: r11 \l  PHI: (r11v1 'heightMeasureSpec' int) = (r11v0 'heightMeasureSpec' int), (r11v0 'heightMeasureSpec' int), (r11v0 'heightMeasureSpec' int), (r11v0 'heightMeasureSpec' int), (r11v2 'heightMeasureSpec' int) binds: [B:39:0x0018, B:43:0x0030, B:45:0x0036, B:46:0x0038, B:41:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|int r1 = android.view.View.MeasureSpec.getSize(r10)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0047|if (android.view.View.MeasureSpec.getMode(r10) == 0) goto L15\l}"];
Node_49 [shape=record,label="{49\:\ 0x004a|int r5 = r9.requestedTabMaxWidth\l}"];
Node_50 [shape=record,label="{50\:\ 0x004c|if (r5 \<= 0) goto L13\l}"];
Node_52 [shape=record,label="{52\:\ 0x004f|int r5 = (int) (((float) r1) \- com.google.android.material.internal.ViewUtils.dpToPx(getContext(), 56))\l}"];
Node_53 [shape=record,label="{53\:\ 0x005c|PHI: r5 \l  PHI: (r5v4 int) = (r5v3 int), (r5v7 int) binds: [B:50:0x004c, B:52:0x004f] A[DONT_GENERATE, DONT_INLINE]\l|r9.tabMaxWidth = r5\l}"];
Node_54 [shape=record,label="{54\:\ 0x005e|super.onMeasure(r10, r11)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0065|if (getChildCount() != 1) goto L32\l}"];
Node_56 [shape=record,label="{56\:\ 0x0067|android.view.View r5 = getChildAt(0)\lr6 = false\l}"];
Node_57 [shape=record,label="{57\:\ 0x006e|switch(r9.mode) \{\l    case 0: goto L23;\l    case 1: goto L19;\l    case 2: goto L23;\l    default: goto L27;\l\}\l}"];
Node_59 [shape=record,label="{59\:\ 0x0072}"];
Node_60 [shape=record,label="{60\:\ 0x007a|if (r5.getMeasuredWidth() == getMeasuredWidth()) goto L22\l}"];
Node_61 [shape=record,label="{61\:\ 0x007c|r3 = true\l}"];
Node_62 [shape=record,label="{62\:\ 0x007d|PHI: r3 \l  PHI: (r3v6 boolean) = (r3v0 boolean), (r3v7 boolean) binds: [B:60:0x007a, B:61:0x007c] A[DONT_GENERATE, DONT_INLINE]\l|r6 = r3\l}"];
Node_63 [shape=record,label="{63\:\ 0x007f}"];
Node_64 [shape=record,label="{64\:\ 0x0087|if (r5.getMeasuredWidth() \>= getMeasuredWidth()) goto L26\l}"];
Node_65 [shape=record,label="{65\:\ 0x0089|r3 = true\l}"];
Node_66 [shape=record,label="{66\:\ 0x008a|PHI: r3 \l  PHI: (r3v4 boolean) = (r3v0 boolean), (r3v5 boolean) binds: [B:64:0x0087, B:65:0x0089] A[DONT_GENERATE, DONT_INLINE]\l|r6 = r3\l}"];
Node_67 [shape=record,label="{67\:\ 0x008c|PHI: r6 \l  PHI: (r6v1 'remeasure' boolean) = (r6v0 'remeasure' boolean), (r6v2 'remeasure' boolean), (r6v3 'remeasure' boolean) binds: [B:57:0x006e, B:66:0x008a, B:62:0x007d] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 == false) goto L31\l}"];
Node_68 [shape=record,label="{68\:\ 0x008f|int r3 = getChildMeasureSpec(r11, getPaddingTop() + getPaddingBottom(), r5.getLayoutParams().height)\lint r2 = android.view.View.MeasureSpec.makeMeasureSpec(getMeasuredWidth(), androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY)\lr5.measure(r2, r3)\l}"];
Node_69 [shape=record,label="{69\:\ 0x00ae|RETURN\lORIG_RETURN\l|return\l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_71 [shape=record,label="{71\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_70 [shape=record,label="{70\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.tabs.TabLayout.onMeasure((r9v0 'this' com.google.android.material.tabs.TabLayout A[IMMUTABLE_TYPE, THIS]), (r10v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:67:0x008c \-\> B:69:0x00ae, CROSS_EDGE: B:60:0x007a \-\> B:62:0x007d, CROSS_EDGE: B:66:0x008a \-\> B:67:0x008c, CROSS_EDGE: B:64:0x0087 \-\> B:66:0x008a, CROSS_EDGE: B:57:0x006e \-\> B:67:0x008c, CROSS_EDGE: B:55:0x0065 \-\> B:69:0x00ae, CROSS_EDGE: B:50:0x004c \-\> B:53:0x005c, CROSS_EDGE: B:48:0x0047 \-\> B:54:0x005e, CROSS_EDGE: B:46:0x0038 \-\> B:47:0x003f, CROSS_EDGE: B:45:0x0036 \-\> B:47:0x003f, CROSS_EDGE: B:43:0x0030 \-\> B:47:0x003f, CROSS_EDGE: B:39:0x0018 \-\> B:47:0x003f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_41;
Node_39 -> Node_42;
Node_39 -> Node_47;
Node_41 -> Node_47;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_47;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_54;
Node_49 -> Node_50;
Node_50 -> Node_52;
Node_50 -> Node_53[style=dashed];
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_70;
Node_56 -> Node_57;
Node_57 -> Node_59;
Node_57 -> Node_63;
Node_57 -> Node_67;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_62 -> Node_67;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_71;
Node_68 -> Node_69;
Node_69 -> Node_37;
Node_71 -> Node_37;
Node_70 -> Node_37;
}

