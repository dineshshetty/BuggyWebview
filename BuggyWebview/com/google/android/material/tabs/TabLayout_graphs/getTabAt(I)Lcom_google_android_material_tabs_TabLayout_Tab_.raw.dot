digraph "CFG forcom.google.android.material.tabs.TabLayout.getTabAt(I)Lcom\/google\/android\/material\/tabs\/TabLayout$Tab;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \< (0 ??[int, byte, short, char])  \-\> B:17:0x0012  (LINE:990)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: INVOKE  (r0 I:int) = (r1 I:com.google.android.material.tabs.TabLayout) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.getTabCount():int A[MD:():int (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \< (r0 I:??[int, byte, short, char])  \-\> B:16:0x0009 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|0x0009: IGET  (r0 I:java.util.ArrayList\<com.google.android.material.tabs.TabLayout$Tab\>) = (r1 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.tabs java.util.ArrayList \l0x000b: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.ArrayList), (r2 I:int A[D('index' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x000f: CHECK_CAST (r0 I:com.google.android.material.tabs.TabLayout$Tab) = (com.google.android.material.tabs.TabLayout$Tab) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0013: RETURN  (r0 I:com.google.android.material.tabs.TabLayout$Tab) A[SYNTHETIC]\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: RETURN  (r0 I:com.google.android.material.tabs.TabLayout$Tab) \l}"];
MethodNode[shape=record,label="{public com.google.android.material.tabs.TabLayout$Tab com.google.android.material.tabs.TabLayout.getTabAt((r1 'this' I:com.google.android.material.tabs.TabLayout A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0012 \-\> B:18:0x0013, CROSS_EDGE: B:12:0x0000 \-\> B:17:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0013: r2 'index' I\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_19 -> Node_11;
Node_17 -> Node_11;
}

