digraph "CFG forcom.google.android.material.tabs.TabLayout.removeAllTabs()V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|int r0 = r2.slidingTabIndicator.getChildCount() + (\-1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|LOOP_START\lLOOP:0: B:16:0x0008\-\>B:17:0x000a\lPHI: r0 \l  PHI: (r0v3 'i' int) = (r0v2 'i' int), (r0v7 'i' int) binds: [B:15:0x0000, B:17:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \< 0) goto L4\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|LOOP_END\lLOOP:0: B:16:0x0008\-\>B:17:0x000a\l|removeTabViewAt(r0)\lint r0 = r0 + (\-1)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0010|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|java.util.Iterator r0 = r2.tabs.iterator()\l}"];
Node_19 [shape=record,label="{19\:\ 0x0016|LOOP_START\lLOOP:1: B:19:0x0016\-\>B:21:0x001c\l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|if (r0.hasNext() == false) goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x001c|LOOP_END\lLOOP:1: B:19:0x0016\-\>B:21:0x001c\l|com.google.android.material.tabs.TabLayout$Tab r1 = r0.next()\lr0.remove()\lr1.reset()\lreleaseFromTabPool(r1)\l}"];
Node_25 [shape=record,label="{25\:\ 0x002c|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x002c|r2.selectedTab = null\l}"];
Node_23 [shape=record,label="{23\:\ 0x002f|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.tabs.TabLayout.removeAllTabs((r2v0 'this' com.google.android.material.tabs.TabLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:17:0x000a \-\> B:16:0x0008, BACK_EDGE: B:21:0x001c \-\> B:19:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_16;
Node_24 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_19;
Node_25 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_14;
}

