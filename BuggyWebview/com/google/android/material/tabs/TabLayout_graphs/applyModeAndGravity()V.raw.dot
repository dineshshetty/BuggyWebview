digraph "CFG forcom.google.android.material.tabs.TabLayout.applyModeAndGravity()V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2035)\l0x0001: IGET  (r1 I:int) = (r5 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.mode int  (LINE:2036)\l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0004: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|0x0005: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0009 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0012 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|0x0012: IGET  (r1 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) = (r5 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.slidingTabIndicator com.google.android.material.tabs.TabLayout$SlidingTabIndicator  (LINE:2040)\l0x0014: INVOKE  (r1 I:android.view.View), (r0 I:int A[D('paddingStart' int)]), (r3 I:int), (r3 I:int), (r3 I:int) type: STATIC call: androidx.core.view.ViewCompat.setPaddingRelative(android.view.View, int, int, int, int):void A[MD:(android.view.View, int, int, int, int):void (m)]\l0x0017: IGET  (r1 I:int) = (r5 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.mode int  (LINE:2042)\l0x0019: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x001a|0x001a: SWITCH  (r1 I:??)\l case 0: goto B:29:0x002f\l case 1: goto B:25:0x001e\l case 2: goto B:25:0x001e\l default: goto B:30:0x0034 \l}"];
Node_25 [shape=record,label="{25\:\ 0x001e|0x001e: IGET  (r1 I:int) = (r5 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.tabGravity int  (LINE:2045)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|0x0020: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0029 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0022|0x0022: CONST_STR  (r1 I:java.lang.String) =  \"TabLayout\"  (LINE:2046)\l0x0024: CONST_STR  (r2 I:java.lang.String) =  \"GRAVITY_START is not supported with the current tab mode, GRAVITY_CENTER will be used instead\" \l0x0026: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0029|0x0029: IGET  (r1 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) = (r5 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.slidingTabIndicator com.google.android.material.tabs.TabLayout$SlidingTabIndicator  (LINE:2051)\l0x002b: INVOKE  (r1 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator), (r3 I:int) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.SlidingTabIndicator.setGravity(int):void A[MD:(int):void (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x002f|0x002f: IGET  (r1 I:int) = (r5 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.tabGravity int  (LINE:2054)\l0x0031: INVOKE  (r5 I:com.google.android.material.tabs.TabLayout), (r1 I:int) type: DIRECT call: com.google.android.material.tabs.TabLayout.applyGravityForModeScrollable(int):void A[MD:(int):void (m)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0034|0x0034: INVOKE  (r5 I:com.google.android.material.tabs.TabLayout), (r3 I:boolean) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.updateTabViews(boolean):void A[MD:(boolean):void (m)] (LINE:2058)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0037|RETURN\l|0x0037: RETURN    (LINE:2059)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|0x0009: IGET  (r1 I:int) = (r5 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.contentInsetStart int  (LINE:2038)\l0x000b: IGET  (r4 I:int) = (r5 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.tabPaddingStart int \l0x000d: ARITH  (r1 I:int) = (r1 I:int) \- (r4 I:int) \l0x000e: INVOKE  (r0 I:int A[D('paddingStart' int)]) = (r3 I:int), (r1 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.tabs.TabLayout.applyModeAndGravity((r5 'this' I:com.google.android.material.tabs.TabLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0020 \-\> B:28:0x0029, CROSS_EDGE: B:29:0x002f \-\> B:30:0x0034, CROSS_EDGE: B:23:0x001a \-\> B:30:0x0034, CROSS_EDGE: B:20:0x0007 \-\> B:22:0x0012, CROSS_EDGE: B:19:0x0005 \-\> B:21:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0041: r0 'paddingStart' I\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_29;
Node_23 -> Node_30;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_17;
Node_21 -> Node_22;
}

