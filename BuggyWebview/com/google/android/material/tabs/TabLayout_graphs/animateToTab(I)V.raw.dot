digraph "CFG forcom.google.android.material.tabs.TabLayout.animateToTab(I)V" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:1865)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0001|0x0001: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newPosition' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0004 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0003|RETURN\l|0x0003: RETURN    (LINE:1866)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|0x0004: INVOKE  (r0 I:android.os.IBinder) = (r6 I:com.google.android.material.tabs.TabLayout) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.getWindowToken():android.os.IBinder A[MD:():android.os.IBinder (s)] (LINE:1869)\l0x0008: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0009: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0042 \l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|0x000c: INVOKE  (r0 I:boolean) = (r6 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.isLaidOut(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1870)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0042 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0012|0x0012: IGET  (r0 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) = (r6 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.slidingTabIndicator com.google.android.material.tabs.TabLayout$SlidingTabIndicator \l0x0014: INVOKE  (r0 I:boolean) = (r0 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.SlidingTabIndicator.childrenNeedLayout():boolean A[MD:():boolean (m)] (LINE:1871)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0018|0x0018: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x001b \l}"];
Node_31 [shape=record,label="{31\:\ 0x001b|0x001b: INVOKE  (r0 I:int) = (r6 I:com.google.android.material.tabs.TabLayout) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.getScrollX():int A[MD:():int (s)] (LINE:1878)\l0x001f: INVOKE  (r2 I:int) = (r6 I:com.google.android.material.tabs.TabLayout), (r7 I:int A[D('newPosition' int)]), (r2 I:float) type: DIRECT call: com.google.android.material.tabs.TabLayout.calculateScrollXForTab(int, float):int A[MD:(int, float):int (m)] (LINE:1879)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|0x0023: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('startScrollX' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('targetScrollX' int)])  \-\> B:34:0x003a  (LINE:1881)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0025|0x0025: INVOKE  (r6 I:com.google.android.material.tabs.TabLayout) type: DIRECT call: com.google.android.material.tabs.TabLayout.ensureScrollAnimator():void A[MD:():void (m)] (LINE:1882)\l0x0028: IGET  (r3 I:android.animation.ValueAnimator) = (r6 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.scrollAnimator android.animation.ValueAnimator  (LINE:1884)\l0x002a: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x002b: NEW_ARRAY  (r4 I:int[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x002d: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002e: APUT  \l  (r4 I:??[int, float][])\l  (r5 I:??[int, short, byte, char])\l  (r0 I:??[int, float, short, byte, char] A[D('startScrollX' int)])\l \l0x0030: APUT  \l  (r4 I:??[int, float][])\l  (r1 I:??[int, short, byte, char])\l  (r2 I:??[int, float, short, byte, char] A[D('targetScrollX' int)])\l \l0x0032: INVOKE  (r3 I:android.animation.ValueAnimator), (r4 I:int[]) type: VIRTUAL call: android.animation.ValueAnimator.setIntValues(int[]):void A[MD:(int[]):void VARARG (c)]\l0x0035: IGET  (r1 I:android.animation.ValueAnimator) = (r6 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.scrollAnimator android.animation.ValueAnimator  (LINE:1885)\l0x0037: INVOKE  (r1 I:android.animation.ValueAnimator) type: VIRTUAL call: android.animation.ValueAnimator.start():void A[MD:():void (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x003a|0x003a: IGET  (r1 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) = (r6 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.slidingTabIndicator com.google.android.material.tabs.TabLayout$SlidingTabIndicator  (LINE:1889)\l0x003c: IGET  (r3 I:int) = (r6 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.tabIndicatorAnimationDuration int \l0x003e: INVOKE  (r1 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator), (r7 I:int A[D('newPosition' int)]), (r3 I:int) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.SlidingTabIndicator.animateIndicatorToPosition(int, int):void A[MD:(int, int):void (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0041|RETURN\l|0x0041: RETURN    (LINE:1890)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0042|0x0042: INVOKE  \l  (r6 I:com.google.android.material.tabs.TabLayout)\l  (r7 I:int A[D('newPosition' int)])\l  (r2 I:float A[D('targetScrollX' int)])\l  (r1 I:boolean)\l type: VIRTUAL call: com.google.android.material.tabs.TabLayout.setScrollPosition(int, float, boolean):void A[MD:(int, float, boolean):void (m)] (LINE:1874)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0045|RETURN\l|0x0045: RETURN    (LINE:1875)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.tabs.TabLayout.animateToTab((r6 'this' I:com.google.android.material.tabs.TabLayout A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('newPosition' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0041 \-\> B:20:?, CROSS_EDGE: B:32:0x0023 \-\> B:34:0x003a, CROSS_EDGE: B:37:0x0045 \-\> B:20:?, CROSS_EDGE: B:27:0x0010 \-\> B:36:0x0042, CROSS_EDGE: B:25:0x000a \-\> B:36:0x0042\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001f\-0x0042: r0 'startScrollX' I\l  0x0023\-0x0042: r2 'targetScrollX' I\l  \-1 \-0x0045: r7 'newPosition' I\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_20;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_36;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_36;
Node_28 -> Node_29;
Node_29 -> Node_31;
Node_29 -> Node_36[style=dashed];
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_20;
Node_36 -> Node_37;
Node_37 -> Node_20;
}

