digraph "CFG forcom.google.android.material.tabs.TabLayout.getTabScrollRange()I" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) = (r2 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.slidingTabIndicator com.google.android.material.tabs.TabLayout$SlidingTabIndicator  (LINE:1618)\l0x0002: INVOKE  (r0 I:int) = (r0 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.SlidingTabIndicator.getWidth():int A[MD:():int (s)] (LINE:1619)\l0x0006: INVOKE  (r1 I:int) = (r2 I:com.google.android.material.tabs.TabLayout) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.getWidth():int A[MD:():int (s)]\l0x000a: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x000b: INVOKE  (r1 I:int) = (r2 I:com.google.android.material.tabs.TabLayout) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.getPaddingLeft():int A[MD:():int (s)]\l0x000f: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0010: INVOKE  (r1 I:int) = (r2 I:com.google.android.material.tabs.TabLayout) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.getPaddingRight():int A[MD:():int (s)]\l0x0014: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0015: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1618)\l0x0016: INVOKE  (r0 I:int) = (r1 I:int), (r0 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|RETURN\l|0x001a: RETURN  (r0 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private int com.google.android.material.tabs.TabLayout.getTabScrollRange((r2 'this' I:com.google.android.material.tabs.TabLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

