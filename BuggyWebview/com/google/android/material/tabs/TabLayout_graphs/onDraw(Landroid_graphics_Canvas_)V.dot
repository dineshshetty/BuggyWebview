digraph "CFG forcom.google.android.material.tabs.TabLayout.onDraw(Landroid\/graphics\/Canvas;)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|r0 = 0\l}"];
Node_17 [shape=record,label="{17\:\ 0x0001|LOOP_START\lLOOP:0: B:17:0x0001\-\>B:22:0x0019\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:16:0x0000, B:22:0x0019] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|if (r0 \>= r3.slidingTabIndicator.getChildCount()) goto L10\l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|android.view.View r1 = r3.slidingTabIndicator.getChildAt(r0)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|if ((r1 instanceof com.google.android.material.tabs.TabLayout.TabView) == false) goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|((com.google.android.material.tabs.TabLayout.TabView) r1).drawBackground(r4)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0019|LOOP_END\lLOOP:0: B:17:0x0001\-\>B:22:0x0019\l|int r0 = r0 + 1\l}"];
Node_27 [shape=record,label="{27\:\ 0x0019|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x001c|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x001c|super.onDraw(r4)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.tabs.TabLayout.onDraw((r3v0 'this' com.google.android.material.tabs.TabLayout A[IMMUTABLE_TYPE, THIS]), (r4v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:22:0x0019 \-\> B:17:0x0001, CROSS_EDGE: B:20:0x0011 \-\> B:22:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onDraw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_21 -> Node_26;
Node_26 -> Node_22;
Node_22 -> Node_17;
Node_27 -> Node_22;
Node_25 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_15;
}

