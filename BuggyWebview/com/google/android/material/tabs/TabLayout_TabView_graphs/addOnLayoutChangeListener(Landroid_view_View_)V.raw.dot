digraph "CFG forcom.google.android.material.tabs.TabLayout.TabView.addOnLayoutChangeListener(Landroid\/view\/View;)V" {
Node_6 [shape=record,label="{6\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0000|0x0000: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('view' android.view.View)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0003  (LINE:2874)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0002|RETURN\l|0x0002: RETURN    (LINE:2875)\l}"];
Node_7 [shape=record,label="{7\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0003|0x0003: NEW_INSTANCE  (r0 I:com.google.android.material.tabs.TabLayout$TabView$1) =  com.google.android.material.tabs.TabLayout$TabView$1  (LINE:2877)\l0x0005: INVOKE  \l  (r0 I:com.google.android.material.tabs.TabLayout$TabView$1)\l  (r1 I:com.google.android.material.tabs.TabLayout$TabView)\l  (r2 I:android.view.View A[D('view' android.view.View)])\l type: DIRECT call: com.google.android.material.tabs.TabLayout.TabView.1.\<init\>(com.google.android.material.tabs.TabLayout$TabView, android.view.View):void A[MD:(com.google.android.material.tabs.TabLayout$TabView, android.view.View):void (m)]\l0x0008: INVOKE  (r2 I:android.view.View A[D('view' android.view.View)]), (r0 I:android.view.View$OnLayoutChangeListener) type: VIRTUAL call: android.view.View.addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener):void A[MD:(android.view.View$OnLayoutChangeListener):void (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x000b|RETURN\l|0x000b: RETURN    (LINE:2895)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.tabs.TabLayout.TabView.addOnLayoutChangeListener((r1 'this' I:com.google.android.material.tabs.TabLayout$TabView A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x000b \-\> B:7:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000b: r2 'view' Landroid\/view\/View;\l}"];
MethodNode -> Node_6;Node_6 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_11 -> Node_7;
}

