digraph "CFG forcom.google.android.material.tabs.TabLayout.TabView.tryAttachBadgeToAnchor(Landroid\/view\/View;)V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r2 I:com.google.android.material.tabs.TabLayout$TabView) type: DIRECT call: com.google.android.material.tabs.TabLayout.TabView.hasBadgeDrawable():boolean A[MD:():boolean (m)] (LINE:2930)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0007 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|RETURN\l|0x0006: RETURN    (LINE:2931)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0007|0x0007: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('anchorView' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:?  (LINE:2933)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0009|0x0009: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2934)\l0x000a: INVOKE  (r2 I:com.google.android.material.tabs.TabLayout$TabView), (r0 I:boolean) type: DIRECT call: com.google.android.material.tabs.TabLayout.TabView.clipViewToPaddingForBadge(boolean):void A[MD:(boolean):void (m)]\l0x000d: IGET  (r0 I:com.google.android.material.badge.BadgeDrawable) = (r2 I:com.google.android.material.tabs.TabLayout$TabView) com.google.android.material.tabs.TabLayout.TabView.badgeDrawable com.google.android.material.badge.BadgeDrawable  (LINE:2935)\l0x000f: INVOKE  (r1 I:android.widget.FrameLayout) = \l  (r2 I:com.google.android.material.tabs.TabLayout$TabView)\l  (r3 I:android.view.View A[D('anchorView' android.view.View)])\l type: DIRECT call: com.google.android.material.tabs.TabLayout.TabView.getCustomParentForBadge(android.view.View):android.widget.FrameLayout A[MD:(android.view.View):android.widget.FrameLayout (m)] (LINE:2936)\l0x0013: INVOKE  \l  (r0 I:com.google.android.material.badge.BadgeDrawable)\l  (r3 I:android.view.View A[D('anchorView' android.view.View)])\l  (r1 I:android.widget.FrameLayout)\l type: STATIC call: com.google.android.material.badge.BadgeUtils.attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable, android.view.View, android.widget.FrameLayout):void A[MD:(com.google.android.material.badge.BadgeDrawable, android.view.View, android.widget.FrameLayout):void (m)] (LINE:2935)\l0x0016: IPUT  \l  (r3 I:android.view.View A[D('anchorView' android.view.View)])\l  (r2 I:com.google.android.material.tabs.TabLayout$TabView)\l com.google.android.material.tabs.TabLayout.TabView.badgeAnchorView android.view.View  (LINE:2937)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: RETURN    (LINE:2939)\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|0x0018: RETURN   A[SYNTHETIC] (LINE:2939)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.tabs.TabLayout.TabView.tryAttachBadgeToAnchor((r2 'this' I:com.google.android.material.tabs.TabLayout$TabView A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.View A[D('anchorView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0018 \-\> B:10:?, CROSS_EDGE: B:14:0x0007 \-\> B:16:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r3 'anchorView' Landroid\/view\/View;\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_10;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_10;
Node_17 -> Node_10;
}

