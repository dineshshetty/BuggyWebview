digraph "CFG forcom.google.android.material.tabs.TabLayout.TabView.drawableStateChanged()V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|super.drawableStateChanged()\lr0 = false\lint[] r1 = getDrawableState()\landroid.graphics.drawable.Drawable r2 = r3.baseBackgroundDrawable\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|if (r2 == null) goto L6\l}"];
Node_15 [shape=record,label="{15\:\ 0x000c}"];
Node_16 [shape=record,label="{16\:\ 0x0010|if (r2.isStateful() == false) goto L6\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|r0 = false \| r3.baseBackgroundDrawable.setState(r1)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0019|PHI: r0 \l  PHI: (r0v1 'changed' boolean) = (r0v0 'changed' boolean), (r0v0 'changed' boolean), (r0v2 'changed' boolean) binds: [B:14:0x000a, B:16:0x0010, B:17:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L10\l}"];
Node_19 [shape=record,label="{19\:\ 0x001b|invalidate()\lcom.google.android.material.tabs.TabLayout.this.invalidate()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0023|RETURN\lORIG_RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.tabs.TabLayout.TabView.drawableStateChanged((r3v0 'this' com.google.android.material.tabs.TabLayout$TabView A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:18:0x0019 \-\> B:20:0x0023, CROSS_EDGE: B:16:0x0010 \-\> B:18:0x0019, CROSS_EDGE: B:14:0x000a \-\> B:18:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.drawableStateChanged():void\}]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_21 -> Node_12;
}

