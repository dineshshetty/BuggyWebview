digraph "CFG forcom.google.android.material.tabs.TabLayout.TabView.drawableStateChanged()V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r3 I:android.widget.LinearLayout) type: SUPER call: android.widget.LinearLayout.drawableStateChanged():void A[MD:():void (c)] (LINE:2569)\l0x0003: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2570)\l0x0004: INVOKE  (r1 I:int[]) = (r3 I:com.google.android.material.tabs.TabLayout$TabView) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.TabView.getDrawableState():int[] A[MD:():int[] (s)] (LINE:2571)\l0x0008: IGET  (r2 I:android.graphics.drawable.Drawable) = (r3 I:com.google.android.material.tabs.TabLayout$TabView) com.google.android.material.tabs.TabLayout.TabView.baseBackgroundDrawable android.graphics.drawable.Drawable  (LINE:2572)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|0x000a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0019 \l}"];
Node_15 [shape=record,label="{15\:\ 0x000c|0x000c: INVOKE  (r2 I:boolean) = (r2 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.isStateful():boolean A[MD:():boolean (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0010|0x0010: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0019 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|0x0012: IGET  (r2 I:android.graphics.drawable.Drawable) = (r3 I:com.google.android.material.tabs.TabLayout$TabView) com.google.android.material.tabs.TabLayout.TabView.baseBackgroundDrawable android.graphics.drawable.Drawable  (LINE:2573)\l0x0014: INVOKE  (r2 I:boolean) = (r2 I:android.graphics.drawable.Drawable), (r1 I:int[] A[D('state' int[])]) type: VIRTUAL call: android.graphics.drawable.Drawable.setState(int[]):boolean A[MD:(int[]):boolean (c)]\l0x0018: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('changed' boolean)]) \| (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0019|0x0019: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('changed' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:?  (LINE:2576)\l}"];
Node_19 [shape=record,label="{19\:\ 0x001b|0x001b: INVOKE  (r3 I:com.google.android.material.tabs.TabLayout$TabView) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.TabView.invalidate():void A[MD:():void (s)] (LINE:2577)\l0x001e: IGET  (r2 I:com.google.android.material.tabs.TabLayout) = (r3 I:com.google.android.material.tabs.TabLayout$TabView) com.google.android.material.tabs.TabLayout.TabView.this$0 com.google.android.material.tabs.TabLayout  (LINE:2578)\l0x0020: INVOKE  (r2 I:com.google.android.material.tabs.TabLayout) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.invalidate():void A[MD:():void (s)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0023|RETURN\lORIG_RETURN\l|0x0023: RETURN    (LINE:2580)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0023: RETURN   A[SYNTHETIC] (LINE:2580)\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.tabs.TabLayout.TabView.drawableStateChanged((r3 'this' I:com.google.android.material.tabs.TabLayout$TabView A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:18:0x0019 \-\> B:20:0x0023, CROSS_EDGE: B:16:0x0010 \-\> B:18:0x0019, CROSS_EDGE: B:14:0x000a \-\> B:18:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0023: r0 'changed' Z\l  0x0008\-0x0023: r1 'state' [I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.drawableStateChanged():void\}]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_21 -> Node_12;
}

