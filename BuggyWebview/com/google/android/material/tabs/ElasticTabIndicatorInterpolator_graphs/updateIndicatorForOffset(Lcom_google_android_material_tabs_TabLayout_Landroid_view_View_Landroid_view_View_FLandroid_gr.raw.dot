digraph "CFG forcom.google.android.material.tabs.ElasticTabIndicatorInterpolator.updateIndicatorForOffset(Lcom\/google\/android\/material\/tabs\/TabLayout;Landroid\/view\/View;Landroid\/view\/View;FLandroid\/graphics\/drawable\/Drawable;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:android.graphics.RectF) = \l  (r10 I:com.google.android.material.tabs.TabLayout A[D('tabLayout' com.google.android.material.tabs.TabLayout)])\l  (r11 I:android.view.View A[D('startTitle' android.view.View)])\l type: STATIC call: com.google.android.material.tabs.ElasticTabIndicatorInterpolator.calculateIndicatorWidthForTab(com.google.android.material.tabs.TabLayout, android.view.View):android.graphics.RectF A[MD:(com.google.android.material.tabs.TabLayout, android.view.View):android.graphics.RectF (m)] (LINE:55)\l0x0004: INVOKE  (r1 I:android.graphics.RectF) = \l  (r10 I:com.google.android.material.tabs.TabLayout A[D('tabLayout' com.google.android.material.tabs.TabLayout)])\l  (r12 I:android.view.View A[D('endTitle' android.view.View)])\l type: STATIC call: com.google.android.material.tabs.ElasticTabIndicatorInterpolator.calculateIndicatorWidthForTab(com.google.android.material.tabs.TabLayout, android.view.View):android.graphics.RectF A[MD:(com.google.android.material.tabs.TabLayout, android.view.View):android.graphics.RectF (m)] (LINE:56)\l0x0008: IGET  (r2 I:float) = (r0 I:android.graphics.RectF A[D('startIndicator' android.graphics.RectF)]) android.graphics.RectF.left float  (LINE:61)\l0x000a: IGET  (r3 I:float) = (r1 I:android.graphics.RectF A[D('endIndicator' android.graphics.RectF)]) android.graphics.RectF.left float \l0x000c: CMP_G  (r2 I:int) = (r2 I:float), (r3 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r2 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isMovingRight' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001e  (LINE:66)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: INVOKE  (r3 I:float) = (r13 I:float A[D('offset' float)]) type: STATIC call: com.google.android.material.tabs.ElasticTabIndicatorInterpolator.accInterp(float):float A[MD:(float):float (m)] (LINE:67)\l0x0019: INVOKE  (r4 I:float) = (r13 I:float A[D('offset' float)]) type: STATIC call: com.google.android.material.tabs.ElasticTabIndicatorInterpolator.decInterp(float):float A[MD:(float):float (m)] (LINE:68)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: IGET  (r5 I:float) = (r0 I:android.graphics.RectF A[D('startIndicator' android.graphics.RectF)]) android.graphics.RectF.left float  (LINE:73)\l0x0028: CAST (r5 I:int) = (int) (r5 I:float) \l0x0029: IGET  (r6 I:float) = (r1 I:android.graphics.RectF A[D('endIndicator' android.graphics.RectF)]) android.graphics.RectF.left float \l0x002b: CAST (r6 I:int) = (int) (r6 I:float) \l0x002c: INVOKE  (r5 I:int) = (r5 I:int), (r6 I:int), (r3 I:float A[D('leftFraction' float)]) type: STATIC call: com.google.android.material.animation.AnimationUtils.lerp(int, int, float):int A[MD:(int, int, float):int (m)] (LINE:74)\l0x0030: INVOKE  (r6 I:android.graphics.Rect) = (r14 I:android.graphics.drawable.Drawable A[D('indicator' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (c)] (LINE:75)\l0x0034: IGET  (r6 I:int) = (r6 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0036: IGET  (r7 I:float) = (r0 I:android.graphics.RectF A[D('startIndicator' android.graphics.RectF)]) android.graphics.RectF.right float \l0x0038: CAST (r7 I:int) = (int) (r7 I:float) \l0x0039: IGET  (r8 I:float) = (r1 I:android.graphics.RectF A[D('endIndicator' android.graphics.RectF)]) android.graphics.RectF.right float \l0x003b: CAST (r8 I:int) = (int) (r8 I:float) \l0x003c: INVOKE  (r7 I:int) = (r7 I:int), (r8 I:int), (r4 I:float A[D('rightFraction' float)]) type: STATIC call: com.google.android.material.animation.AnimationUtils.lerp(int, int, float):int A[MD:(int, int, float):int (m)] (LINE:76)\l0x0040: INVOKE  (r8 I:android.graphics.Rect) = (r14 I:android.graphics.drawable.Drawable A[D('indicator' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (c)] (LINE:77)\l0x0044: IGET  (r8 I:int) = (r8 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x0046: INVOKE  \l  (r14 I:android.graphics.drawable.Drawable A[D('indicator' android.graphics.drawable.Drawable)])\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:73)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0049|RETURN\l|0x0049: RETURN    (LINE:78)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: INVOKE  (r3 I:float) = (r13 I:float A[D('offset' float)]) type: STATIC call: com.google.android.material.tabs.ElasticTabIndicatorInterpolator.decInterp(float):float A[MD:(float):float (m)] (LINE:70)\l0x0022: INVOKE  (r4 I:float) = (r13 I:float A[D('offset' float)]) type: STATIC call: com.google.android.material.tabs.ElasticTabIndicatorInterpolator.accInterp(float):float A[MD:(float):float (m)] (LINE:71)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{void com.google.android.material.tabs.ElasticTabIndicatorInterpolator.updateIndicatorForOffset((r9 'this' I:com.google.android.material.tabs.ElasticTabIndicatorInterpolator A[IMMUTABLE_TYPE, THIS]), (r10 I:com.google.android.material.tabs.TabLayout A[D('tabLayout' com.google.android.material.tabs.TabLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.view.View A[D('startTitle' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.view.View A[D('endTitle' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:float A[D('offset' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:android.graphics.drawable.Drawable A[D('indicator' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x001e \-\> B:9:0x0026, CROSS_EDGE: B:5:0x0012 \-\> B:6:0x0013\lDebug Info:\l  0x0019\-0x001e: r3 'leftFraction' F\l  0x001d\-0x001e: r4 'rightFraction' F\l  0x0004\-0x0049: r0 'startIndicator' Landroid\/graphics\/RectF;\l  0x0008\-0x0049: r1 'endIndicator' Landroid\/graphics\/RectF;\l  0x0013\-0x0049: r2 'isMovingRight' Z\l  0x0022\-0x0049: r3 'leftFraction' F\l  0x0026\-0x0049: r4 'rightFraction' F\l  \-1 \-0x0049: r10 'tabLayout' Lcom\/google\/android\/material\/tabs\/TabLayout;\l  \-1 \-0x0049: r11 'startTitle' Landroid\/view\/View;\l  \-1 \-0x0049: r12 'endTitle' Landroid\/view\/View;\l  \-1 \-0x0049: r13 'offset' F\l  \-1 \-0x0049: r14 'indicator' Landroid\/graphics\/drawable\/Drawable;\lMETHOD_OVERRIDE: [com.google.android.material.tabs.TabIndicatorInterpolator.updateIndicatorForOffset(com.google.android.material.tabs.TabLayout, android.view.View, android.view.View, float, android.graphics.drawable.Drawable):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_8 -> Node_9;
Node_5 -> Node_6;
}

