digraph "CFG forcom.google.android.material.tabs.TabIndicatorInterpolator.calculateIndicatorWidthForTab(Lcom\/google\/android\/material\/tabs\/TabLayout;Landroid\/view\/View;)Landroid\/graphics\/RectF;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|if (r6 != null) goto L5\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002}"];
Node_17 [shape=record,label="{17\:\ 0x0007|RETURN\l|return new android.graphics.RectF()\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0008}"];
Node_19 [shape=record,label="{19\:\ 0x000c|if (r5.isTabIndicatorFullWidth() != false) goto L11\l}"];
Node_20 [shape=record,label="{20\:\ 0x000e}"];
Node_21 [shape=record,label="{21\:\ 0x0010|if ((r6 instanceof com.google.android.material.tabs.TabLayout.TabView) == false) goto L11\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012}"];
Node_23 [shape=record,label="{23\:\ 0x001b|RETURN\l|return calculateTabViewContentBounds((com.google.android.material.tabs.TabLayout.TabView) r6, 24)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001c}"];
Node_25 [shape=record,label="{25\:\ 0x0035|RETURN\l|return new android.graphics.RectF((float) r6.getLeft(), (float) r6.getTop(), (float) r6.getRight(), (float) r6.getBottom())\l}"];
MethodNode[shape=record,label="{public static android.graphics.RectF com.google.android.material.tabs.TabIndicatorInterpolator.calculateIndicatorWidthForTab((r5v0 'tabLayout' com.google.android.material.tabs.TabLayout A[D('tabLayout' com.google.android.material.tabs.TabLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'tab' android.view.View A[D('tab' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x001b \-\> B:14:?, CROSS_EDGE: B:25:0x0035 \-\> B:14:?, CROSS_EDGE: B:19:0x000c \-\> B:24:0x001c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

