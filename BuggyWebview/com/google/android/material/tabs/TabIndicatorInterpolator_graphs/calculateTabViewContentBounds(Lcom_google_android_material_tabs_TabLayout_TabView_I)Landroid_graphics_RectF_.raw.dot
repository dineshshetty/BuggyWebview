digraph "CFG forcom.google.android.material.tabs.TabIndicatorInterpolator.calculateTabViewContentBounds(Lcom\/google\/android\/material\/tabs\/TabLayout$TabView;I)Landroid\/graphics\/RectF;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = \l  (r14 I:com.google.android.material.tabs.TabLayout$TabView A[D('tabView' com.google.android.material.tabs.TabLayout$TabView)])\l type: VIRTUAL call: com.google.android.material.tabs.TabLayout.TabView.getContentWidth():int A[MD:():int (m)] (LINE:72)\l0x0004: INVOKE  (r1 I:int) = \l  (r14 I:com.google.android.material.tabs.TabLayout$TabView A[D('tabView' com.google.android.material.tabs.TabLayout$TabView)])\l type: VIRTUAL call: com.google.android.material.tabs.TabLayout.TabView.getContentHeight():int A[MD:():int (m)] (LINE:73)\l0x0008: INVOKE  (r2 I:android.content.Context) = \l  (r14 I:com.google.android.material.tabs.TabLayout$TabView A[D('tabView' com.google.android.material.tabs.TabLayout$TabView)])\l type: VIRTUAL call: com.google.android.material.tabs.TabLayout.TabView.getContext():android.content.Context A[MD:():android.content.Context (s)] (LINE:74)\l0x000c: INVOKE  (r2 I:float) = (r2 I:android.content.Context), (r15 I:int A[D('minWidth' int)]) type: STATIC call: com.google.android.material.internal.ViewUtils.dpToPx(android.content.Context, int):float A[MD:(android.content.Context, int):float (m)]\l0x0010: CAST (r2 I:int) = (int) (r2 I:float) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0011|0x0011: IF  (r0 I:??[int, byte, short, char] A[D('tabViewContentWidth' int)]) \>= (r2 I:??[int, byte, short, char] A[D('minWidthPx' int)])  \-\> B:12:0x0014  (LINE:76)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|0x0013: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('tabViewContentWidth' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('minWidthPx' int)])  (LINE:77)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0014|0x0014: INVOKE  (r3 I:int) = \l  (r14 I:com.google.android.material.tabs.TabLayout$TabView A[D('tabView' com.google.android.material.tabs.TabLayout$TabView)])\l type: VIRTUAL call: com.google.android.material.tabs.TabLayout.TabView.getLeft():int A[MD:():int (s)] (LINE:80)\l0x0018: INVOKE  (r4 I:int) = \l  (r14 I:com.google.android.material.tabs.TabLayout$TabView A[D('tabView' com.google.android.material.tabs.TabLayout$TabView)])\l type: VIRTUAL call: com.google.android.material.tabs.TabLayout.TabView.getRight():int A[MD:():int (s)]\l0x001c: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x001d: ARITH  (r3 I:int) = (r3 I:int) \/ (2 int) \l0x001f: INVOKE  (r4 I:int) = \l  (r14 I:com.google.android.material.tabs.TabLayout$TabView A[D('tabView' com.google.android.material.tabs.TabLayout$TabView)])\l type: VIRTUAL call: com.google.android.material.tabs.TabLayout.TabView.getTop():int A[MD:():int (s)] (LINE:81)\l0x0023: INVOKE  (r5 I:int) = \l  (r14 I:com.google.android.material.tabs.TabLayout$TabView A[D('tabView' com.google.android.material.tabs.TabLayout$TabView)])\l type: VIRTUAL call: com.google.android.material.tabs.TabLayout.TabView.getBottom():int A[MD:():int (s)]\l0x0027: ARITH  (r4 I:int) = (r4 I:int) + (r5 I:int) \l0x0028: ARITH  (r4 I:int) = (r4 I:int) \/ (2 int) \l0x002a: ARITH  (r5 I:int) = (r0 I:int A[D('tabViewContentWidth' int)]) \/ (2 int)  (LINE:82)\l0x002c: ARITH  (r5 I:int) = (r3 I:int A[D('tabViewCenterX' int)]) \- (r5 I:int) \l0x002e: ARITH  (r6 I:int) = (r1 I:int A[D('tabViewContentHeight' int)]) \/ (2 int)  (LINE:83)\l0x0030: ARITH  (r6 I:int) = (r4 I:int A[D('tabViewCenterY' int)]) \- (r6 I:int) \l0x0032: ARITH  (r7 I:int) = (r0 I:int A[D('tabViewContentWidth' int)]) \/ (2 int)  (LINE:84)\l0x0034: ARITH  (r7 I:int) = (r7 I:int) + (r3 I:int A[D('tabViewCenterX' int)]) \l0x0035: ARITH  (r8 I:int) = (r3 I:int A[D('tabViewCenterX' int)]) \/ (2 int)  (LINE:85)\l0x0037: ARITH  (r8 I:int) = (r8 I:int) + (r4 I:int A[D('tabViewCenterY' int)]) \l0x0038: NEW_INSTANCE  (r9 I:android.graphics.RectF) =  android.graphics.RectF  (LINE:87)\l0x003a: CAST (r10 I:float) = (float) (r5 I:int A[D('contentLeftBounds' int)]) \l0x003b: CAST (r11 I:float) = (float) (r6 I:int A[D('contentTopBounds' int)]) \l0x003c: CAST (r12 I:float) = (float) (r7 I:int A[D('contentRightBounds' int)]) \l0x003d: CAST (r13 I:float) = (float) (r8 I:int A[D('contentBottomBounds' int)]) \l0x003e: INVOKE  (r9 I:android.graphics.RectF), (r10 I:float), (r11 I:float), (r12 I:float), (r13 I:float) type: DIRECT call: android.graphics.RectF.\<init\>(float, float, float, float):void A[MD:(float, float, float, float):void (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|RETURN\l|0x0041: RETURN  (r9 I:android.graphics.RectF) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static android.graphics.RectF com.google.android.material.tabs.TabIndicatorInterpolator.calculateTabViewContentBounds((r14 I:com.google.android.material.tabs.TabLayout$TabView A[D('tabView' com.google.android.material.tabs.TabLayout$TabView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[D('minWidth' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0011 \-\> B:12:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0041: r0 'tabViewContentWidth' I\l  0x0008\-0x0041: r1 'tabViewContentHeight' I\l  0x0011\-0x0041: r2 'minWidthPx' I\l  0x001f\-0x0041: r3 'tabViewCenterX' I\l  0x002a\-0x0041: r4 'tabViewCenterY' I\l  0x002e\-0x0041: r5 'contentLeftBounds' I\l  0x0032\-0x0041: r6 'contentTopBounds' I\l  0x0035\-0x0041: r7 'contentRightBounds' I\l  0x0038\-0x0041: r8 'contentBottomBounds' I\l  \-1 \-0x0041: r14 'tabView' Lcom\/google\/android\/material\/tabs\/TabLayout$TabView;\l  \-1 \-0x0041: r15 'minWidth' I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

