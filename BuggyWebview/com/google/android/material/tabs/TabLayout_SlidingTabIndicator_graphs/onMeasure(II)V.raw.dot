digraph "CFG forcom.google.android.material.tabs.TabLayout.SlidingTabIndicator.onMeasure(II)V" {
Node_40 [shape=record,label="{40\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0000|0x0000: INVOKE  (r8 I:android.widget.LinearLayout), (r9 I:int A[D('widthMeasureSpec' int)]), (r10 I:int A[D('heightMeasureSpec' int)]) type: SUPER call: android.widget.LinearLayout.onMeasure(int, int):void A[MD:(int, int):void (c)] (LINE:3187)\l0x0003: INVOKE  (r0 I:int) = (r9 I:int A[D('widthMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)] (LINE:3189)\l0x0007: CONST  (r1 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x000c \l}"];
Node_44 [shape=record,label="{44\:\ 0x000b|RETURN\l|0x000b: RETURN    (LINE:3192)\l}"];
Node_41 [shape=record,label="{41\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x000c|0x000c: IGET  (r0 I:com.google.android.material.tabs.TabLayout) = (r8 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) com.google.android.material.tabs.TabLayout.SlidingTabIndicator.this$0 com.google.android.material.tabs.TabLayout  (LINE:3198)\l0x000e: IGET  (r0 I:int) = (r0 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.tabGravity int \l0x0010: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x001a \l}"];
Node_47 [shape=record,label="{47\:\ 0x0013|0x0013: IGET  (r0 I:com.google.android.material.tabs.TabLayout) = (r8 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) com.google.android.material.tabs.TabLayout.SlidingTabIndicator.this$0 com.google.android.material.tabs.TabLayout \l0x0015: IGET  (r0 I:int) = (r0 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.mode int \l0x0017: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0018|0x0018: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:78:? \l}"];
Node_78 [shape=record,label="{78\:\ ?|SYNTHETIC\lRETURN\l|0x0083: RETURN   A[SYNTHETIC] (LINE:3243)\l}"];
Node_49 [shape=record,label="{49\:\ 0x001a|0x001a: INVOKE  (r0 I:int) = (r8 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.SlidingTabIndicator.getChildCount():int A[MD:():int (s)] (LINE:3199)\l0x001e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3202)\l0x001f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3203)\l0x0020: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('count' int)]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0021|LOOP_START\lLOOP:0: B:50:0x0021\-\>B:54:0x0035\l|0x0021: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r3 I:??[int, byte, short, char] A[D('z' int)])  \-\> B:72:0x0038 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0023|0x0023: INVOKE  (r4 I:android.view.View) = (r8 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator), (r2 I:int A[D('i' int)]) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.SlidingTabIndicator.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:3204)\l0x0027: INVOKE  (r5 I:int) = (r4 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)] (LINE:3205)\l}"];
Node_52 [shape=record,label="{52\:\ 0x002b|0x002b: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x0035 \l}"];
Node_53 [shape=record,label="{53\:\ 0x002d|0x002d: INVOKE  (r5 I:int) = (r4 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:3206)\l0x0031: INVOKE  (r1 I:int A[D('largestTabWidth' int)]) = (r1 I:int A[D('largestTabWidth' int)]), (r5 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_73 [shape=record,label="{73\:\ 0x0035|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x0035|LOOP_END\lLOOP:0: B:50:0x0021\-\>B:54:0x0035\l|0x0035: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:3203)\l}"];
Node_74 [shape=record,label="{74\:\ 0x0035|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x0038|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0038|0x0038: IF  (r1 I:??[int, byte, short, char] A[D('largestTabWidth' int)]) \> (0 ??[int, byte, short, char])  \-\> B:57:0x003b  (LINE:3210)\l}"];
Node_56 [shape=record,label="{56\:\ 0x003a|RETURN\l|0x003a: RETURN    (LINE:3212)\l}"];
Node_57 [shape=record,label="{57\:\ 0x003b|0x003b: INVOKE  (r2 I:android.content.Context) = (r8 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.SlidingTabIndicator.getContext():android.content.Context A[MD:():android.content.Context (s)] (LINE:3215)\l0x003f: CONST  (r3 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l0x0041: INVOKE  (r2 I:float) = (r2 I:android.content.Context), (r3 I:int) type: STATIC call: com.google.android.material.internal.ViewUtils.dpToPx(android.content.Context, int):float A[MD:(android.content.Context, int):float (m)]\l0x0045: CAST (r2 I:int) = (int) (r2 I:float) \l0x0046: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3216)\l0x0047: ARITH  (r4 I:int) = (r1 I:int A[D('largestTabWidth' int)]) * (r0 I:int A[D('count' int)])  (LINE:3218)\l0x0049: INVOKE  (r5 I:int) = (r8 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.SlidingTabIndicator.getMeasuredWidth():int A[MD:():int (s)]\l0x004d: ARITH  (r6 I:int) = (r2 I:int A[D('gutter' int)]) * (2 int) \l0x004f: ARITH  (r5 I:int) = (r5 I:int) \- (r6 I:int) \l}"];
Node_58 [shape=record,label="{58\:\ 0x0050|0x0050: IF  (r4 I:??[int, byte, short, char]) \> (r5 I:??[int, byte, short, char])  \-\> B:68:0x0073 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0052|0x0052: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3221)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0053|LOOP_START\lLOOP:1: B:60:0x0053\-\>B:66:0x006f\l|0x0053: IF  (r4 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:75:0x007e \l}"];
Node_61 [shape=record,label="{61\:\ 0x0055|0x0055: INVOKE  (r5 I:android.view.View) = (r8 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator), (r4 I:int A[D('i' int)]) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.SlidingTabIndicator.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:3222)\l0x0059: INVOKE  (r5 I:android.view.ViewGroup$LayoutParams) = (r5 I:android.view.View) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)]\l0x005d: CHECK_CAST (r5 I:android.widget.LinearLayout$LayoutParams) = (android.widget.LinearLayout$LayoutParams) (r5 I:??[OBJECT, ARRAY]) \l0x005f: IGET  (r6 I:int) = (r5 I:android.widget.LinearLayout$LayoutParams A[D('lp' android.widget.LinearLayout$LayoutParams)]) android.widget.LinearLayout.LayoutParams.width int  (LINE:3223)\l0x0061: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x0062|0x0062: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('largestTabWidth' int)])  \-\> B:65:0x006a \l}"];
Node_63 [shape=record,label="{63\:\ 0x0064|0x0064: IGET  (r6 I:float) = (r5 I:android.widget.LinearLayout$LayoutParams A[D('lp' android.widget.LinearLayout$LayoutParams)]) android.widget.LinearLayout.LayoutParams.weight float \l0x0066: CMP_L  (r6 I:int) = (r6 I:float), (r7 I:float) \l}"];
Node_64 [shape=record,label="{64\:\ 0x0068|0x0068: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:77:0x006f \l}"];
Node_77 [shape=record,label="{77\:\ 0x006f|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x006f|LOOP_END\lLOOP:1: B:60:0x0053\-\>B:66:0x006f\l|0x006f: ARITH  (r4 I:int) = (r4 I:int A[D('i' int)]) + (1 int)  (LINE:3221)\l}"];
Node_65 [shape=record,label="{65\:\ 0x006a|0x006a: IPUT  \l  (r1 I:int A[D('largestTabWidth' int)])\l  (r5 I:android.widget.LinearLayout$LayoutParams A[D('lp' android.widget.LinearLayout$LayoutParams)])\l android.widget.LinearLayout.LayoutParams.width int  (LINE:3224)\l0x006c: IPUT  (r7 I:float), (r5 I:android.widget.LinearLayout$LayoutParams A[D('lp' android.widget.LinearLayout$LayoutParams)]) android.widget.LinearLayout.LayoutParams.weight float  (LINE:3225)\l0x006e: CONST  (r3 I:??[boolean, int, float, short, byte, char] A[D('remeasure' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:3226)\l}"];
Node_76 [shape=record,label="{76\:\ 0x006f|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x007e|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x007e|0x007e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('remeasure' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:?  (LINE:3238)\l}"];
Node_70 [shape=record,label="{70\:\ 0x0080|0x0080: INVOKE  (r8 I:android.widget.LinearLayout), (r9 I:int A[D('widthMeasureSpec' int)]), (r10 I:int A[D('heightMeasureSpec' int)]) type: SUPER call: android.widget.LinearLayout.onMeasure(int, int):void A[MD:(int, int):void (c)] (LINE:3240)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0083|RETURN\lORIG_RETURN\l|0x0083: RETURN    (LINE:3243)\l}"];
Node_79 [shape=record,label="{79\:\ ?|SYNTHETIC\lRETURN\l|0x0083: RETURN   A[SYNTHETIC] (LINE:3243)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0073|0x0073: IGET  (r4 I:com.google.android.material.tabs.TabLayout) = (r8 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) com.google.android.material.tabs.TabLayout.SlidingTabIndicator.this$0 com.google.android.material.tabs.TabLayout  (LINE:3233)\l0x0075: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0076: IPUT  (r5 I:int), (r4 I:com.google.android.material.tabs.TabLayout) com.google.android.material.tabs.TabLayout.tabGravity int \l0x0078: IGET  (r4 I:com.google.android.material.tabs.TabLayout) = (r8 I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator) com.google.android.material.tabs.TabLayout.SlidingTabIndicator.this$0 com.google.android.material.tabs.TabLayout  (LINE:3234)\l0x007a: INVOKE  (r4 I:com.google.android.material.tabs.TabLayout), (r5 I:boolean) type: VIRTUAL call: com.google.android.material.tabs.TabLayout.updateTabViews(boolean):void A[MD:(boolean):void (m)]\l0x007d: CONST  (r3 I:??[boolean, int, float, short, byte, char] A[D('remeasure' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:3235)\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.tabs.TabLayout.SlidingTabIndicator.onMeasure((r8 'this' I:com.google.android.material.tabs.TabLayout$SlidingTabIndicator A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:54:0x0035 \-\> B:50:0x0021, CROSS_EDGE: B:52:0x002b \-\> B:54:0x0035, CROSS_EDGE: B:56:0x003a \-\> B:41:?, BACK_EDGE: B:66:0x006f \-\> B:60:0x0053, CROSS_EDGE: B:64:0x0068 \-\> B:66:0x006f, CROSS_EDGE: B:62:0x0062 \-\> B:65:0x006a, CROSS_EDGE: B:71:0x0083 \-\> B:41:?, CROSS_EDGE: B:69:0x007e \-\> B:71:0x0083, CROSS_EDGE: B:68:0x0073 \-\> B:69:0x007e, CROSS_EDGE: B:48:0x0018 \-\> B:71:0x0083, CROSS_EDGE: B:46:0x0011 \-\> B:49:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0027\-0x0035: r4 'child' Landroid\/view\/View;\l  0x0020\-0x0038: r2 'i' I\l  0x0021\-0x0038: r3 'z' I\l  0x005f\-0x006f: r5 'lp' Landroid\/widget\/LinearLayout$LayoutParams;\l  0x0053\-0x0072: r4 'i' I\l  0x001e\-0x0083: r0 'count' I\l  0x001f\-0x0083: r1 'largestTabWidth' I\l  0x0046\-0x0083: r2 'gutter' I\l  0x0047\-0x0083: r3 'remeasure' Z\l  \-1 \-0x0083: r9 'widthMeasureSpec' I\l  \-1 \-0x0083: r10 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_40;Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_41;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_49;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_78;
Node_78 -> Node_41;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_72;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_74;
Node_53 -> Node_73;
Node_73 -> Node_54;
Node_54 -> Node_50;
Node_74 -> Node_54;
Node_72 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_41;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_68;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_75;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_65;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_77;
Node_77 -> Node_66;
Node_66 -> Node_60;
Node_65 -> Node_76;
Node_76 -> Node_66;
Node_75 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_79;
Node_70 -> Node_71;
Node_71 -> Node_41;
Node_79 -> Node_41;
Node_68 -> Node_69;
}

