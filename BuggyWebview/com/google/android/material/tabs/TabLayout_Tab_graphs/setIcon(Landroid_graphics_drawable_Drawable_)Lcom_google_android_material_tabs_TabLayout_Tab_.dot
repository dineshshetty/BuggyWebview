digraph "CFG forcom.google.android.material.tabs.TabLayout.Tab.setIcon(Landroid\/graphics\/drawable\/Drawable;)Lcom\/google\/android\/material\/tabs\/TabLayout$Tab;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|r3.icon = r4\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|if (r3.parent.tabGravity == 1) goto L14\l}"];
Node_19 [shape=record,label="{19\:\ 0x0009}"];
Node_20 [shape=record,label="{20\:\ 0x000e|if (r3.parent.mode != 2) goto L5\l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|updateView()\l}"];
Node_23 [shape=record,label="{23\:\ 0x001a|if (com.google.android.material.badge.BadgeUtils.USE_COMPAT_PARENT == false) goto L12\l}"];
Node_24 [shape=record,label="{24\:\ 0x001c}"];
Node_25 [shape=record,label="{25\:\ 0x0022|if (r3.view.hasBadgeDrawable() == false) goto L12\l}"];
Node_26 [shape=record,label="{26\:\ 0x0024}"];
Node_27 [shape=record,label="{27\:\ 0x002e|if (r3.view.badgeDrawable.isVisible() == false) goto L12\l}"];
Node_28 [shape=record,label="{28\:\ 0x0030|r3.view.invalidate()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0035|RETURN\l|return r3\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|r3.parent.updateTabViews(true)\l}"];
MethodNode[shape=record,label="{public com.google.android.material.tabs.TabLayout$Tab com.google.android.material.tabs.TabLayout.Tab.setIcon((r3v0 'this' com.google.android.material.tabs.TabLayout$Tab A[IMMUTABLE_TYPE, THIS]), (r4v0 'icon' android.graphics.drawable.Drawable A[D('icon' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x002e \-\> B:29:0x0035, CROSS_EDGE: B:25:0x0022 \-\> B:29:0x0035, CROSS_EDGE: B:23:0x001a \-\> B:29:0x0035, CROSS_EDGE: B:20:0x000e \-\> B:22:0x0015, CROSS_EDGE: B:18:0x0007 \-\> B:21:0x0010\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_16;
Node_21 -> Node_22;
}

