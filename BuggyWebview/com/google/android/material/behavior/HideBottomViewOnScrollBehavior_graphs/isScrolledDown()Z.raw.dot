digraph "CFG forcom.google.android.material.behavior.HideBottomViewOnScrollBehavior.isScrolledDown()Z" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:int) = \l  (r2 I:com.google.android.material.behavior.HideBottomViewOnScrollBehavior A[D('this' com.google.android.material.behavior.HideBottomViewOnScrollBehavior\<V extends android.view.View\>)])\l com.google.android.material.behavior.HideBottomViewOnScrollBehavior.currentState int  (LINE:215)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0006 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|RETURN\lORIG_RETURN\l|0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: RETURN  (r1 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0007: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.behavior.HideBottomViewOnScrollBehavior.isScrolledDown((r2 'this' I:com.google.android.material.behavior.HideBottomViewOnScrollBehavior\<V extends android.view.View\> A[D('this' com.google.android.material.behavior.HideBottomViewOnScrollBehavior\<V extends android.view.View\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0003 \-\> B:14:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0007: r2 'this' Lcom\/google\/android\/material\/behavior\/HideBottomViewOnScrollBehavior;, signature: Lcom\/google\/android\/material\/behavior\/HideBottomViewOnScrollBehavior\<TV;\>;\lTYPE_VARS: [V extends android.view.View]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_15[style=dashed];
Node_13 -> Node_9;
Node_15 -> Node_9;
}

