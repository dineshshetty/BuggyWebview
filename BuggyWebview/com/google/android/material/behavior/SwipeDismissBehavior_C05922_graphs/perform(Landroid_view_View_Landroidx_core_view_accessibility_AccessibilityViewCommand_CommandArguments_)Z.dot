digraph "CFG forcom.google.android.material.behavior.SwipeDismissBehavior.2.perform(Landroid\/view\/View;Landroidx\/core\/view\/accessibility\/AccessibilityViewCommand$CommandArguments;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|r1 = false\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r5.this$0.canSwipeDismissView(r6) == false) goto L22\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a}"];
Node_5 [shape=record,label="{5\:\ 0x000f|if (androidx.core.view.ViewCompat.getLayoutDirection(r6) != 1) goto L21\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|r0 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|PHI: r0 \l  PHI: (r0v4 'isRtl' boolean) = (r0v3 'isRtl' boolean), (r0v5 'isRtl' boolean) binds: [B:7:0x0013, B:6:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|if (r5.this$0.swipeDirection != 0) goto L18\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|if (r0 != false) goto L9\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|r1 = true\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|PHI: r1 \l  PHI: (r1v1 'dismissToLeft' boolean) = (r1v0 'dismissToLeft' boolean), (r1v0 'dismissToLeft' boolean), (r1v2 'dismissToLeft' boolean) binds: [B:12:0x0020, B:13:0x0022, B:14:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|int r3 = r6.getWidth()\l}"];
Node_16 [shape=record,label="{16\:\ 0x0029|if (r1 == false) goto L13\l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|int r3 = \-r3\l}"];
Node_18 [shape=record,label="{18\:\ 0x002c|PHI: r3 \l  PHI: (r3v5 'offset' int) = (r3v4 'offset' int), (r3v6 'offset' int) binds: [B:16:0x0029, B:17:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|androidx.core.view.ViewCompat.offsetLeftAndRight(r6, r3)\lr6.setAlpha(0.0f)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0037|if (r5.this$0.listener == null) goto L16\l}"];
Node_20 [shape=record,label="{20\:\ 0x0039|r5.this$0.listener.onDismiss(r6)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0040|RETURN\l|return true\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c}"];
Node_12 [shape=record,label="{12\:\ 0x0020|if (r5.this$0.swipeDirection != 1) goto L10\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|if (r0 != false) goto L10\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|r0 = false\l}"];
Node_22 [shape=record,label="{22\:\ 0x0041|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.behavior.SwipeDismissBehavior.2.perform((r5v0 'this' com.google.android.material.behavior.SwipeDismissBehavior$2 A[D('this' com.google.android.material.behavior.SwipeDismissBehavior$2), IMMUTABLE_TYPE, THIS]), (r6v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'arguments' androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments A[D('arguments' androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0037 \-\> B:21:0x0040, CROSS_EDGE: B:16:0x0029 \-\> B:18:0x002c, CROSS_EDGE: B:13:0x0022 \-\> B:15:0x0025, CROSS_EDGE: B:12:0x0020 \-\> B:15:0x0025, CROSS_EDGE: B:10:0x001a \-\> B:14:0x0024, CROSS_EDGE: B:9:0x0018 \-\> B:11:0x001c, CROSS_EDGE: B:7:0x0013 \-\> B:8:0x0014, CROSS_EDGE: B:22:0x0041 \-\> B:1:?\lTYPE_VARS: [V extends android.view.View]\lMETHOD_OVERRIDE: [androidx.core.view.accessibility.AccessibilityViewCommand.perform(android.view.View, androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_22;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_7 -> Node_8;
Node_22 -> Node_1;
}

