digraph "CFG forcom.google.android.material.button.MaterialButtonToggleGroup.getCheckedButtonIds()Ljava\/util\/List;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|java.util.ArrayList r0 = new java.util.ArrayList\<\>()\lr1 = 0\l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|LOOP_START\lLOOP:0: B:16:0x0006\-\>B:21:0x0027\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:15:0x0000, B:21:0x0027] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|if (r1 \>= getChildCount()) goto L10\l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|int r2 = getChildButton(r1).getId()\l}"];
Node_19 [shape=record,label="{19\:\ 0x001e|if (r5.checkedIds.contains(java.lang.Integer.valueOf(r2)) == false) goto L9\l}"];
Node_20 [shape=record,label="{20\:\ 0x0020|r0.add(java.lang.Integer.valueOf(r2))\l}"];
Node_24 [shape=record,label="{24\:\ 0x0027|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0027|LOOP_END\lLOOP:0: B:16:0x0006\-\>B:21:0x0027\l|int r1 = r1 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0027|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x002a|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x002a|RETURN\l|return r0\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.util.List\<java.lang.Integer\> com.google.android.material.button.MaterialButtonToggleGroup.getCheckedButtonIds((r5v0 'this' com.google.android.material.button.MaterialButtonToggleGroup A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0027 \-\> B:16:0x0006, CROSS_EDGE: B:19:0x001e \-\> B:21:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ()Ljava\/util\/List\<Ljava\/lang\/Integer;\>;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_24;
Node_24 -> Node_21;
Node_21 -> Node_16;
Node_25 -> Node_21;
Node_23 -> Node_22;
Node_22 -> Node_14;
}

