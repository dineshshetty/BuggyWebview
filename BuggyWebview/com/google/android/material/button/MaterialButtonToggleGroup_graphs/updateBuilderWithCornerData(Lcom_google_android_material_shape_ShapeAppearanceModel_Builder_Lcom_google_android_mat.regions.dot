digraph "CFG forcom.google.android.material.button.MaterialButtonToggleGroup.updateBuilderWithCornerData(Lcom\/google\/android\/material\/shape\/ShapeAppearanceModel$Builder;Lcom\/google\/android\/material\/button\/MaterialButtonToggleGroup$CornerData;)V" {
subgraph cluster_Region_1025067984 {
label = "R(1:(1:2)(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1725544362 {
label = "IF [B:9:0x0000] THEN: R(1:2) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|if (r3 == null) goto L2\l}"];
subgraph cluster_Region_859864132 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0002|r2.setAllCornerSizes(0.0f)\l}"];
}
subgraph cluster_Region_879375818 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0007|r2.setTopLeftCornerSize(r3.topLeft).setBottomLeftCornerSize(r3.bottomLeft).setTopRightCornerSize(r3.topRight).setBottomRightCornerSize(r3.bottomRight)\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0006}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x001e}"];
MethodNode[shape=record,label="{private static void com.google.android.material.button.MaterialButtonToggleGroup.updateBuilderWithCornerData((r2v0 'shapeAppearanceModelBuilder' com.google.android.material.shape.ShapeAppearanceModel$Builder A[D('shapeAppearanceModelBuilder' com.google.android.material.shape.ShapeAppearanceModel$Builder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'cornerData' com.google.android.material.button.MaterialButtonToggleGroup$CornerData A[D('cornerData' com.google.android.material.button.MaterialButtonToggleGroup$CornerData), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001e \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_9 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_7 -> Node_9;
Node_11 -> Node_8;
Node_13 -> Node_8;
}

