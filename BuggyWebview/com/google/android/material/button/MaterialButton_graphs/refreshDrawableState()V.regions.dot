digraph "CFG forcom.google.android.material.button.MaterialButton.refreshDrawableState()V" {
subgraph cluster_Region_1118743559 {
label = "R(2:1|(1:(2:3|(1:(1:5)))))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|super.refreshDrawableState()\l}"];
subgraph cluster_Region_78606011 {
label = "R(1:(2:3|(1:(1:5))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_907304332 {
label = "IF [B:13:0x0005] THEN: R(2:3|(1:(1:5))) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0005|if (r2.icon != null) goto L3\l}"];
subgraph cluster_Region_589071368 {
label = "R(2:3|(1:(1:5)))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0007|int[] int[] r0 = getDrawableState()\lboolean boolean r1 = r2.icon.setState(r0)\l}"];
subgraph cluster_Region_75502852 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1191224858 {
label = "IF [B:15:0x0011] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0011|if (r1 != false) goto L5\l}"];
subgraph cluster_Region_871976711 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0013|invalidate()\l}"];
}
}
}
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0016|ORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.button.MaterialButton.refreshDrawableState((r2v0 'this' com.google.android.material.button.MaterialButton A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0011 \-\> B:17:0x0016, CROSS_EDGE: B:13:0x0005 \-\> B:17:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.refreshDrawableState():void\}]\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_18[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_19[style=dashed];
Node_16 -> Node_17;
Node_10 -> Node_12;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

