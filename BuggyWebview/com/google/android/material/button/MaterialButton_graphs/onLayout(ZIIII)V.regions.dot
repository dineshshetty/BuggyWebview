digraph "CFG forcom.google.android.material.button.MaterialButton.onLayout(ZIIII)V" {
subgraph cluster_Region_34898717 {
label = "R(3:1|(1:5)|6) | DECL_VAR: com.google.android.material.button.MaterialButtonHelper null\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|super.onLayout(r4, r5, r6, r7, r8)\l}"];
subgraph cluster_IfRegion_1997157459 {
label = "IF [B:12:0x0007, B:14:0x000b] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0007|if (android.os.Build.VERSION.SDK_INT == 21) goto L3\l}"];
Node_14 [shape=record,label="{14\:\ 0x000b|ADDED_TO_REGION\l|if ((r0 = r3.materialButtonHelper) != null) goto L5\l}"];
subgraph cluster_Region_1378063920 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x000d|r0.updateMaskBounds(r8 \- r6, r7 \- r5)\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x0014|updateIconPosition(getMeasuredWidth(), getMeasuredHeight())\l}"];
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0009}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x001f}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.button.MaterialButton.onLayout((r3v0 'this' com.google.android.material.button.MaterialButton A[IMMUTABLE_TYPE, THIS]), (r4v0 'changed' boolean A[D('changed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'left' int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'top' int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'right' int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'bottom' int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:14:0x000b \-\> B:16:0x0014, CROSS_EDGE: B:12:0x0007 \-\> B:16:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onLayout(boolean, int, int, int, int):void\}]\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_16[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_9 -> Node_11;
Node_13 -> Node_14;
Node_17 -> Node_10;
}

