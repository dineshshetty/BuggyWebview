digraph "CFG forcom.google.android.material.progressindicator.LinearDrawingDelegate.adjustCanvas(Landroid\/graphics\/Canvas;Landroid\/graphics\/Rect;F)V" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r9 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.width():int A[MD:():int (c)] (LINE:66)\l0x0004: CAST (r0 I:float) = (float) (r0 I:int) \l0x0005: IPUT  (r0 I:float), (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.trackLength float \l0x0007: IGET  (r0 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec  (LINE:67)\l0x0009: CHECK_CAST (r0 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) = (com.google.android.material.progressindicator.LinearProgressIndicatorSpec) (r0 I:??[OBJECT, ARRAY]) \l0x000b: IGET  (r0 I:int) = (r0 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) com.google.android.material.progressindicator.LinearProgressIndicatorSpec.trackThickness int \l0x000d: CAST (r0 I:float) = (float) (r0 I:int) \l0x000e: IGET  (r1 I:int) = (r9 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:70)\l0x0010: CAST (r1 I:float) = (float) (r1 I:int) \l0x0011: INVOKE  (r2 I:int) = (r9 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.width():int A[MD:():int (c)] (LINE:71)\l0x0015: CAST (r2 I:float) = (float) (r2 I:int) \l0x0016: CONST  (r3 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0018: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l0x0019: ARITH  (r1 I:float) = (r1 I:float) + (r2 I:float) \l0x001a: IGET  (r2 I:int) = (r9 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.top int \l0x001c: CAST (r2 I:float) = (float) (r2 I:int) \l0x001d: INVOKE  (r4 I:int) = (r9 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.height():int A[MD:():int (c)] (LINE:72)\l0x0021: CAST (r4 I:float) = (float) (r4 I:int) \l0x0022: ARITH  (r4 I:float) = (r4 I:float) \/ (r3 I:float) \l0x0023: ARITH  (r2 I:float) = (r2 I:float) + (r4 I:float) \l0x0024: INVOKE  (r4 I:int) = (r9 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.height():int A[MD:():int (c)]\l0x0028: IGET  (r5 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec \l0x002a: CHECK_CAST (r5 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) = (com.google.android.material.progressindicator.LinearProgressIndicatorSpec) (r5 I:??[OBJECT, ARRAY]) \l0x002c: IGET  (r5 I:int) = (r5 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) com.google.android.material.progressindicator.LinearProgressIndicatorSpec.trackThickness int \l0x002e: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x002f: CAST (r4 I:float) = (float) (r4 I:int) \l0x0030: ARITH  (r4 I:float) = (r4 I:float) \/ (r3 I:float) \l0x0031: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0032: INVOKE  (r4 I:float) = (r5 I:float), (r4 I:float) type: STATIC call: java.lang.Math.max(float, float):float A[MD:(float, float):float (c)]\l0x0036: ARITH  (r2 I:float) = (r2 I:float) + (r4 I:float) \l0x0037: INVOKE  (r8 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r1 I:float), (r2 I:float) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)] (LINE:70)\l0x003a: IGET  (r1 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec  (LINE:75)\l0x003c: CHECK_CAST (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) = (com.google.android.material.progressindicator.LinearProgressIndicatorSpec) (r1 I:??[OBJECT, ARRAY]) \l0x003e: IGET  (r1 I:boolean) = (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) com.google.android.material.progressindicator.LinearProgressIndicatorSpec.drawHorizontallyInverse boolean \l0x0040: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1082130432(0xffffffffbf800000, float:\-1.0) ??[int, float, short, byte, char]) \l0x0042: CONST  (r4 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0044|0x0044: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0049 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0046|0x0046: INVOKE  (r8 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r2 I:float), (r4 I:float) type: VIRTUAL call: android.graphics.Canvas.scale(float, float):void A[MD:(float, float):void (c)] (LINE:76)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0049|0x0049: IGET  (r1 I:com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) = (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.drawable com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange  (LINE:79)\l0x004b: INVOKE  (r1 I:boolean) = (r1 I:com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) type: VIRTUAL call: com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange.isShowing():boolean A[MD:():boolean (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x004f|0x004f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x005a \l}"];
Node_28 [shape=record,label="{28\:\ 0x0051|0x0051: IGET  (r1 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec \l0x0053: CHECK_CAST (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) = (com.google.android.material.progressindicator.LinearProgressIndicatorSpec) (r1 I:??[OBJECT, ARRAY]) \l0x0055: IGET  (r1 I:int) = (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) com.google.android.material.progressindicator.LinearProgressIndicatorSpec.showAnimationBehavior int \l0x0057: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0058|0x0058: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x006b \l}"];
Node_34 [shape=record,label="{34\:\ 0x006b|0x006b: INVOKE  (r8 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r4 I:float), (r2 I:float) type: VIRTUAL call: android.graphics.Canvas.scale(float, float):void A[MD:(float, float):void (c)] (LINE:82)\l}"];
Node_35 [shape=record,label="{35\:\ 0x006e|0x006e: IGET  (r1 I:com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) = (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.drawable com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange  (LINE:85)\l0x0070: INVOKE  (r1 I:boolean) = (r1 I:com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) type: VIRTUAL call: com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange.isShowing():boolean A[MD:():boolean (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0074|0x0074: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x007e \l}"];
Node_37 [shape=record,label="{37\:\ 0x0076|0x0076: IGET  (r1 I:com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) = (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.drawable com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange \l0x0078: INVOKE  (r1 I:boolean) = (r1 I:com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) type: VIRTUAL call: com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange.isHiding():boolean A[MD:():boolean (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x007c|0x007c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x008d \l}"];
Node_40 [shape=record,label="{40\:\ 0x008d|0x008d: IGET  (r1 I:float) = (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.trackLength float  (LINE:91)\l0x008f: NEG  (r2 I:float) = (r1 I:float) \l0x0090: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l0x0091: NEG  (r4 I:float) = (r0 I:float A[D('trackSize' float)]) \l0x0092: ARITH  (r4 I:float) = (r4 I:float) \/ (r3 I:float) \l0x0093: ARITH  (r1 I:float) = (r1 I:float) \/ (r3 I:float) \l0x0094: ARITH  (r3 I:float) = (r0 I:float A[D('trackSize' float)]) \/ (r3 I:float) \l0x0096: INVOKE  \l  (r8 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r2 I:float)\l  (r4 I:float)\l  (r1 I:float)\l  (r3 I:float)\l type: VIRTUAL call: android.graphics.Canvas.clipRect(float, float, float, float):boolean A[MD:(float, float, float, float):boolean (c)]\l0x0099: IGET  (r1 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec  (LINE:94)\l0x009b: CHECK_CAST (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) = (com.google.android.material.progressindicator.LinearProgressIndicatorSpec) (r1 I:??[OBJECT, ARRAY]) \l0x009d: IGET  (r1 I:int) = (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) com.google.android.material.progressindicator.LinearProgressIndicatorSpec.trackThickness int \l0x009f: CAST (r1 I:float) = (float) (r1 I:int) \l0x00a0: ARITH  (r1 I:float) = (r1 I:float) * (r10 I:float A[D('trackThicknessFraction' float)]) \l0x00a2: IPUT  (r1 I:float), (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.displayedTrackThickness float \l0x00a4: IGET  (r1 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec  (LINE:95)\l0x00a6: CHECK_CAST (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) = (com.google.android.material.progressindicator.LinearProgressIndicatorSpec) (r1 I:??[OBJECT, ARRAY]) \l0x00a8: IGET  (r1 I:int) = (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) com.google.android.material.progressindicator.LinearProgressIndicatorSpec.trackCornerRadius int \l0x00aa: CAST (r1 I:float) = (float) (r1 I:int) \l0x00ab: ARITH  (r1 I:float) = (r1 I:float) * (r10 I:float A[D('trackThicknessFraction' float)]) \l0x00ad: IPUT  (r1 I:float), (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.displayedCornerRadius float \l}"];
Node_41 [shape=record,label="{41\:\ 0x00af|RETURN\l|0x00af: RETURN    (LINE:96)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x007e|0x007e: IGET  (r1 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec  (LINE:86)\l0x0080: CHECK_CAST (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) = (com.google.android.material.progressindicator.LinearProgressIndicatorSpec) (r1 I:??[OBJECT, ARRAY]) \l0x0082: IGET  (r1 I:int) = (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) com.google.android.material.progressindicator.LinearProgressIndicatorSpec.trackThickness int \l0x0084: CAST (r1 I:float) = (float) (r1 I:int) \l0x0085: ARITH  (r2 I:float) = (r10 I:float A[D('trackThicknessFraction' float)]) \- (r4 I:float) \l0x0087: ARITH  (r1 I:float) = (r1 I:float) * (r2 I:float) \l0x0089: ARITH  (r1 I:float) = (r1 I:float) \/ (r3 I:float) \l0x008a: INVOKE  (r8 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r5 I:float), (r1 I:float) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x005a|0x005a: IGET  (r1 I:com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) = (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.drawable com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange \l0x005c: INVOKE  (r1 I:boolean) = (r1 I:com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) type: VIRTUAL call: com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange.isHiding():boolean A[MD:():boolean (m)] (LINE:80)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0060|0x0060: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x006e \l}"];
Node_32 [shape=record,label="{32\:\ 0x0062|0x0062: IGET  (r1 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r7 I:com.google.android.material.progressindicator.LinearDrawingDelegate) com.google.android.material.progressindicator.LinearDrawingDelegate.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec \l0x0064: CHECK_CAST (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) = (com.google.android.material.progressindicator.LinearProgressIndicatorSpec) (r1 I:??[OBJECT, ARRAY]) \l0x0066: IGET  (r1 I:int) = (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) com.google.android.material.progressindicator.LinearProgressIndicatorSpec.hideAnimationBehavior int \l0x0068: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0069|0x0069: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x006e \l}"];
MethodNode[shape=record,label="{public void com.google.android.material.progressindicator.LinearDrawingDelegate.adjustCanvas((r7 'this' I:com.google.android.material.progressindicator.LinearDrawingDelegate A[IMMUTABLE_TYPE, THIS]), (r8 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.graphics.Rect A[D('bounds' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:float A[D('trackThicknessFraction' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x007c \-\> B:40:0x008d, CROSS_EDGE: B:36:0x0074 \-\> B:39:0x007e, CROSS_EDGE: B:33:0x0069 \-\> B:35:0x006e, CROSS_EDGE: B:31:0x0060 \-\> B:35:0x006e, CROSS_EDGE: B:29:0x0058 \-\> B:34:0x006b, CROSS_EDGE: B:27:0x004f \-\> B:30:0x005a, CROSS_EDGE: B:24:0x0044 \-\> B:26:0x0049\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000e\-0x00af: r0 'trackSize' F\l  \-1 \-0x00af: r8 'canvas' Landroid\/graphics\/Canvas;\l  \-1 \-0x00af: r9 'bounds' Landroid\/graphics\/Rect;\l  \-1 \-0x00af: r10 'trackThicknessFraction' F\lMETHOD_OVERRIDE: [com.google.android.material.progressindicator.DrawingDelegate.adjustCanvas(android.graphics.Canvas, android.graphics.Rect, float):void]\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_39;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_22;
Node_39 -> Node_40;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
}

