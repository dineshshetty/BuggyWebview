digraph "CFG forcom.google.android.material.progressindicator.LinearProgressIndicatorSpec.validateSpec()V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x0002|if (r2.indeterminateAnimationType != 0) goto L13\l}"];
Node_19 [shape=record,label="{19\:\ 0x0004}"];
Node_20 [shape=record,label="{20\:\ 0x0006|if (r2.trackCornerRadius \> 0) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008}"];
Node_22 [shape=record,label="{22\:\ 0x000c|if (r2.indicatorColors.length \< 3) goto L7\l}"];
Node_24 [shape=record,label="{24\:\ 0x000f}"];
Node_25 [shape=record,label="{25\:\ 0x0016|throw new java.lang.IllegalArgumentException(\"Contiguous indeterminate animation must be used with 3 or more indicator colors.\")\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ 0x0017}"];
Node_27 [shape=record,label="{27\:\ 0x001e|throw new java.lang.IllegalArgumentException(\"Rounded corners are not supported in contiguous indeterminate animation.\")\l}"];
Node_28 [shape=record,label="{28\:\ 0x001f|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.progressindicator.LinearProgressIndicatorSpec.validateSpec((r2v0 'this' com.google.android.material.progressindicator.LinearProgressIndicatorSpec A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x001f \-\> B:16:?, CROSS_EDGE: B:27:0x001e \-\> B:16:?, CROSS_EDGE: B:18:0x0002 \-\> B:28:0x001f\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [com.google.android.material.progressindicator.BaseProgressIndicatorSpec.validateSpec():void]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_28;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_24;
Node_22 -> Node_29[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_16;
Node_29 -> Node_16;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_28 -> Node_16;
}

