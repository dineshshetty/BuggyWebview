digraph "CFG forcom.google.android.material.progressindicator.CircularProgressIndicator.setIndicatorSize(I)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r1 I:com.google.android.material.progressindicator.CircularProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.CircularProgressIndicator.getTrackThickness():int A[MD:():int (m)] (LINE:157)\l0x0004: ARITH  (r0 I:int) = (r0 I:int) * (2 int) \l0x0006: INVOKE  (r2 I:int A[D('indicatorSize' int)]) = (r2 I:int A[D('indicatorSize' int)]), (r0 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x000a: IGET  (r0 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r1 I:com.google.android.material.progressindicator.CircularProgressIndicator) com.google.android.material.progressindicator.CircularProgressIndicator.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec  (LINE:158)\l0x000c: CHECK_CAST (r0 I:com.google.android.material.progressindicator.CircularProgressIndicatorSpec) = (com.google.android.material.progressindicator.CircularProgressIndicatorSpec) (r0 I:??[OBJECT, ARRAY]) \l0x000e: IGET  (r0 I:int) = (r0 I:com.google.android.material.progressindicator.CircularProgressIndicatorSpec) com.google.android.material.progressindicator.CircularProgressIndicatorSpec.indicatorSize int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('indicatorSize' int)])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0012|0x0012: IGET  (r0 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r1 I:com.google.android.material.progressindicator.CircularProgressIndicator) com.google.android.material.progressindicator.CircularProgressIndicator.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec  (LINE:159)\l0x0014: CHECK_CAST (r0 I:com.google.android.material.progressindicator.CircularProgressIndicatorSpec) = (com.google.android.material.progressindicator.CircularProgressIndicatorSpec) (r0 I:??[OBJECT, ARRAY]) \l0x0016: IPUT  \l  (r2 I:int A[D('indicatorSize' int)])\l  (r0 I:com.google.android.material.progressindicator.CircularProgressIndicatorSpec)\l com.google.android.material.progressindicator.CircularProgressIndicatorSpec.indicatorSize int \l0x0018: IGET  (r0 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r1 I:com.google.android.material.progressindicator.CircularProgressIndicator) com.google.android.material.progressindicator.CircularProgressIndicator.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec  (LINE:160)\l0x001a: CHECK_CAST (r0 I:com.google.android.material.progressindicator.CircularProgressIndicatorSpec) = (com.google.android.material.progressindicator.CircularProgressIndicatorSpec) (r0 I:??[OBJECT, ARRAY]) \l0x001c: INVOKE  (r0 I:com.google.android.material.progressindicator.CircularProgressIndicatorSpec) type: VIRTUAL call: com.google.android.material.progressindicator.CircularProgressIndicatorSpec.validateSpec():void A[MD:():void (m)]\l0x001f: INVOKE  (r1 I:com.google.android.material.progressindicator.CircularProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.CircularProgressIndicator.invalidate():void A[MD:():void (m)] (LINE:161)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: RETURN    (LINE:163)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0022: RETURN   A[SYNTHETIC] (LINE:163)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.progressindicator.CircularProgressIndicator.setIndicatorSize((r1 'this' I:com.google.android.material.progressindicator.CircularProgressIndicator A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('indicatorSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0010 \-\> B:12:0x0022\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0022: r2 'indicatorSize' I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

