digraph "CFG forcom.google.android.material.progressindicator.DeterminateDrawable.unregisterAnimationCallback(Landroidx\/vectordrawable\/graphics\/drawable\/Animatable2Compat$AnimationCallback;)Z" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|return super.unregisterAnimationCallback(r1)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ boolean com.google.android.material.progressindicator.DeterminateDrawable.unregisterAnimationCallback((r0v0 'this' com.google.android.material.progressindicator.DeterminateDrawable\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\> A[D('this' com.google.android.material.progressindicator.DeterminateDrawable\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>), IMMUTABLE_TYPE, THIS]), (r1v0 androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec]\lMETHOD_OVERRIDE: [com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange.unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback):boolean, androidx.vectordrawable.graphics.drawable.Animatable2Compat.unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback):boolean]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

