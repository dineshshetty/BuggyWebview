digraph "CFG forcom.google.android.material.progressindicator.LinearProgressIndicator.setIndicatorDirection(I)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|((com.google.android.material.progressindicator.LinearProgressIndicatorSpec) r4.spec).indicatorDirection = r5\lcom.google.android.material.progressindicator.LinearProgressIndicatorSpec r0 = (com.google.android.material.progressindicator.LinearProgressIndicatorSpec) r4.spec\lr1 = true\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|if (r5 == 1) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d}"];
Node_22 [shape=record,label="{22\:\ 0x0011|if (androidx.core.view.ViewCompat.getLayoutDirection(r4) != 1) goto L7\l}"];
Node_23 [shape=record,label="{23\:\ 0x0013}"];
Node_24 [shape=record,label="{24\:\ 0x001a|if (((com.google.android.material.progressindicator.LinearProgressIndicatorSpec) r4.spec).indicatorDirection == 2) goto L12\l}"];
Node_25 [shape=record,label="{25\:\ 0x001c}"];
Node_26 [shape=record,label="{26\:\ 0x0020|if (androidx.core.view.ViewCompat.getLayoutDirection(r4) != 0) goto L11\l}"];
Node_27 [shape=record,label="{27\:\ 0x0022}"];
Node_28 [shape=record,label="{28\:\ 0x0023|if (r5 != 3) goto L11\l}"];
Node_30 [shape=record,label="{30\:\ 0x0026|r1 = false\l}"];
Node_32 [shape=record,label="{32\:\ 0x0029|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v2 boolean), (r1v0 boolean), (r1v0 boolean) binds: [B:20:0x000b, B:30:0x0026, B:28:0x0023, B:24:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|r0.drawHorizontallyInverse = r1\linvalidate()\l}"];
Node_33 [shape=record,label="{33\:\ 0x002e|RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.progressindicator.LinearProgressIndicator.setIndicatorDirection((r4v0 'this' com.google.android.material.progressindicator.LinearProgressIndicator A[IMMUTABLE_TYPE, THIS]), (r5v0 'indicatorDirection' int A[D('indicatorDirection' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0023 \-\> B:32:0x0029, CROSS_EDGE: B:26:0x0020 \-\> B:30:0x0026, CROSS_EDGE: B:24:0x001a \-\> B:32:0x0029, CROSS_EDGE: B:22:0x0011 \-\> B:25:0x001c, CROSS_EDGE: B:20:0x000b \-\> B:32:0x0029\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_32;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_32;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_30;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_32[style=dashed];
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_18;
}

