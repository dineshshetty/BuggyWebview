digraph "CFG forcom.google.android.material.progressindicator.LinearProgressIndicator.onLayout(ZIIII)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: INVOKE  \l  (r4 I:com.google.android.material.progressindicator.BaseProgressIndicator)\l  (r5 I:boolean A[D('changed' boolean)])\l  (r6 I:int A[D('left' int)])\l  (r7 I:int A[D('top' int)])\l  (r8 I:int A[D('right' int)])\l  (r9 I:int A[D('bottom' int)])\l type: SUPER call: com.google.android.material.progressindicator.BaseProgressIndicator.onLayout(boolean, int, int, int, int):void A[MD:(boolean, int, int, int, int):void (s)] (LINE:90)\l0x0003: IGET  (r0 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r4 I:com.google.android.material.progressindicator.LinearProgressIndicator) com.google.android.material.progressindicator.LinearProgressIndicator.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec  (LINE:93)\l0x0005: CHECK_CAST (r0 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) = (com.google.android.material.progressindicator.LinearProgressIndicatorSpec) (r0 I:??[OBJECT, ARRAY]) \l0x0007: IGET  (r1 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r4 I:com.google.android.material.progressindicator.LinearProgressIndicator) com.google.android.material.progressindicator.LinearProgressIndicator.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec \l0x0009: CHECK_CAST (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) = (com.google.android.material.progressindicator.LinearProgressIndicatorSpec) (r1 I:??[OBJECT, ARRAY]) \l0x000b: IGET  (r1 I:int) = (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) com.google.android.material.progressindicator.LinearProgressIndicatorSpec.indicatorDirection int \l0x000d: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0032 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|0x0010: INVOKE  (r1 I:int) = (r4 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:95)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|0x0014: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001f \l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|0x0016: IGET  (r1 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r4 I:com.google.android.material.progressindicator.LinearProgressIndicator) com.google.android.material.progressindicator.LinearProgressIndicator.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec \l0x0018: CHECK_CAST (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) = (com.google.android.material.progressindicator.LinearProgressIndicatorSpec) (r1 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r1 I:int) = (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) com.google.android.material.progressindicator.LinearProgressIndicatorSpec.indicatorDirection int \l0x001c: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x001d|0x001d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0032 \l}"];
Node_25 [shape=record,label="{25\:\ 0x001f|0x001f: INVOKE  (r1 I:int) = (r4 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:97)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0023|0x0023: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x002f \l}"];
Node_27 [shape=record,label="{27\:\ 0x0025|0x0025: IGET  (r1 I:S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec) = (r4 I:com.google.android.material.progressindicator.LinearProgressIndicator) com.google.android.material.progressindicator.LinearProgressIndicator.spec com.google.android.material.progressindicator.BaseProgressIndicatorSpec \l0x0027: CHECK_CAST (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) = (com.google.android.material.progressindicator.LinearProgressIndicatorSpec) (r1 I:??[OBJECT, ARRAY]) \l0x0029: IGET  (r1 I:int) = (r1 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) com.google.android.material.progressindicator.LinearProgressIndicatorSpec.indicatorDirection int \l0x002b: CONST  (r3 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x002c|0x002c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x002f \l}"];
Node_30 [shape=record,label="{30\:\ 0x002f|0x002f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0032|0x0032: IPUT  (r2 I:boolean), (r0 I:com.google.android.material.progressindicator.LinearProgressIndicatorSpec) com.google.android.material.progressindicator.LinearProgressIndicatorSpec.drawHorizontallyInverse boolean \l}"];
Node_33 [shape=record,label="{33\:\ 0x0034|RETURN\l|0x0034: RETURN    (LINE:99)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.progressindicator.LinearProgressIndicator.onLayout((r4 'this' I:com.google.android.material.progressindicator.LinearProgressIndicator A[IMMUTABLE_TYPE, THIS]), (r5 I:boolean A[D('changed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:28:0x002c \-\> B:32:0x0032, CROSS_EDGE: B:26:0x0023 \-\> B:30:0x002f, CROSS_EDGE: B:24:0x001d \-\> B:32:0x0032, CROSS_EDGE: B:22:0x0014 \-\> B:25:0x001f, CROSS_EDGE: B:20:0x000e \-\> B:32:0x0032\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0034: r5 'changed' Z\l  \-1 \-0x0034: r6 'left' I\l  \-1 \-0x0034: r7 'top' I\l  \-1 \-0x0034: r8 'right' I\l  \-1 \-0x0034: r9 'bottom' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onLayout(boolean, int, int, int, int):void\}]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_32;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_32;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_30;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_32[style=dashed];
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_18;
}

