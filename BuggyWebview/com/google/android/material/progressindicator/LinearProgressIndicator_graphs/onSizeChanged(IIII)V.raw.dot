digraph "CFG forcom.google.android.material.progressindicator.LinearProgressIndicator.onSizeChanged(IIII)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r4 I:com.google.android.material.progressindicator.LinearProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.LinearProgressIndicator.getPaddingLeft():int A[MD:():int (s)] (LINE:103)\l0x0004: INVOKE  (r1 I:int) = (r4 I:com.google.android.material.progressindicator.LinearProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.LinearProgressIndicator.getPaddingRight():int A[MD:():int (s)]\l0x0008: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0009: ARITH  (r0 I:int) = (r5 I:int A[D('w' int)]) \- (r0 I:int) \l0x000b: INVOKE  (r1 I:int) = (r4 I:com.google.android.material.progressindicator.LinearProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.LinearProgressIndicator.getPaddingTop():int A[MD:():int (s)] (LINE:104)\l0x000f: INVOKE  (r2 I:int) = (r4 I:com.google.android.material.progressindicator.LinearProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.LinearProgressIndicator.getPaddingBottom():int A[MD:():int (s)]\l0x0013: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0014: ARITH  (r1 I:int) = (r6 I:int A[D('h' int)]) \- (r1 I:int) \l0x0016: INVOKE  (r2 I:com.google.android.material.progressindicator.IndeterminateDrawable) = (r4 I:com.google.android.material.progressindicator.LinearProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.LinearProgressIndicator.getIndeterminateDrawable():com.google.android.material.progressindicator.IndeterminateDrawable A[MD:():android.graphics.drawable.Drawable (m)] (LINE:105)\l0x001a: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:106)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|0x001b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawable' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0020 \l}"];
Node_14 [shape=record,label="{14\:\ 0x001d|0x001d: INVOKE  \l  (r2 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)])\l  (r3 I:int)\l  (r3 I:int)\l  (r0 I:int A[D('contentWidth' int)])\l  (r1 I:int A[D('contentHeight' int)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:107)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0020|0x0020: INVOKE  (r2 I:com.google.android.material.progressindicator.DeterminateDrawable A[D('drawable' android.graphics.drawable.Drawable)]) = (r4 I:com.google.android.material.progressindicator.LinearProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.LinearProgressIndicator.getProgressDrawable():com.google.android.material.progressindicator.DeterminateDrawable A[MD:():android.graphics.drawable.Drawable (m)] (LINE:109)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024|0x0024: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawable' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:?  (LINE:110)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|0x0026: INVOKE  \l  (r2 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)])\l  (r3 I:int)\l  (r3 I:int)\l  (r0 I:int A[D('contentWidth' int)])\l  (r1 I:int A[D('contentHeight' int)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:111)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0029|RETURN\lORIG_RETURN\l|0x0029: RETURN    (LINE:113)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0029: RETURN   A[SYNTHETIC] (LINE:113)\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.progressindicator.LinearProgressIndicator.onSizeChanged((r4 'this' I:com.google.android.material.progressindicator.LinearProgressIndicator A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('w' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('h' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('oldw' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('oldh' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:16:0x0024 \-\> B:18:0x0029, CROSS_EDGE: B:13:0x001b \-\> B:15:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0029: r0 'contentWidth' I\l  0x0016\-0x0029: r1 'contentHeight' I\l  0x001a\-0x0029: r2 'drawable' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x0029: r5 'w' I\l  \-1 \-0x0029: r6 'h' I\l  \-1 \-0x0029: r7 'oldw' I\l  \-1 \-0x0029: r8 'oldh' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onSizeChanged(int, int, int, int):void\}]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

