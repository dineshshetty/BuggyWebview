digraph "CFG forcom.google.android.material.progressindicator.BaseProgressIndicator.4.onAnimationEnd(Landroid\/graphics\/drawable\/Drawable;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  \l  (r2 I:androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator$4)])\l  (r3 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)])\l type: SUPER call: androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback.onAnimationEnd(android.graphics.drawable.Drawable):void A[MD:(android.graphics.drawable.Drawable):void (m)] (LINE:827)\l0x0003: IGET  (r0 I:com.google.android.material.progressindicator.BaseProgressIndicator) = \l  (r2 I:com.google.android.material.progressindicator.BaseProgressIndicator$4 A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator$4)])\l com.google.android.material.progressindicator.BaseProgressIndicator.4.this$0 com.google.android.material.progressindicator.BaseProgressIndicator  (LINE:828)\l0x0005: INVOKE  (r0 I:boolean) = (r0 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: STATIC call: com.google.android.material.progressindicator.BaseProgressIndicator.access$500(com.google.android.material.progressindicator.BaseProgressIndicator):boolean A[MD:(com.google.android.material.progressindicator.BaseProgressIndicator):boolean (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r0 I:com.google.android.material.progressindicator.BaseProgressIndicator) = \l  (r2 I:com.google.android.material.progressindicator.BaseProgressIndicator$4 A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator$4)])\l com.google.android.material.progressindicator.BaseProgressIndicator.4.this$0 com.google.android.material.progressindicator.BaseProgressIndicator  (LINE:831)\l0x000d: INVOKE  (r1 I:int) = (r0 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: STATIC call: com.google.android.material.progressindicator.BaseProgressIndicator.access$600(com.google.android.material.progressindicator.BaseProgressIndicator):int A[MD:(com.google.android.material.progressindicator.BaseProgressIndicator):int (m)]\l0x0011: INVOKE  (r0 I:com.google.android.material.progressindicator.BaseProgressIndicator), (r1 I:int) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.setVisibility(int):void A[MD:(int):void (s)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|RETURN\lORIG_RETURN\l|0x0014: RETURN    (LINE:833)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|0x0014: RETURN   A[SYNTHETIC] (LINE:833)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.progressindicator.BaseProgressIndicator.4.onAnimationEnd((r2 'this' I:com.google.android.material.progressindicator.BaseProgressIndicator$4 A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator$4), IMMUTABLE_TYPE, THIS]), (r3 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x0009 \-\> B:5:0x0014\lDebug Info:\l  0x0000\-0x0014: r2 'this' Lcom\/google\/android\/material\/progressindicator\/BaseProgressIndicator$4;, signature: Lcom\/google\/android\/material\/progressindicator\/BaseProgressIndicator$4;\l  \-1 \-0x0014: r3 'drawable' Landroid\/graphics\/drawable\/Drawable;\lMETHOD_OVERRIDE: [androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback.onAnimationEnd(android.graphics.drawable.Drawable):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

