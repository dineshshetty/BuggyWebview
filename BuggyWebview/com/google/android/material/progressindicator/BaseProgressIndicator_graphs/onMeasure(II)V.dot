digraph "CFG forcom.google.android.material.progressindicator.BaseProgressIndicator.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|monitor\-enter(r4)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\l|com.google.android.material.progressindicator.DrawingDelegate r0 = getCurrentDrawingDelegate()     \/\/ Catch: java.lang.Throwable \-\> L4a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|if (r0 != null) goto L8\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|monitor\-exit(r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|TRY_ENTER\lTryCatch #0 \{, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\l}"];
Node_8 [shape=record,label="{8\:\ 0x000d|if (r0.getPreferredWidth() \>= 0) goto L19\l}"];
Node_9 [shape=record,label="{9\:\ 0x000f|TryCatch #0 \{, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\l|int r1 = getDefaultSize(getSuggestedMinimumWidth(), r5)     \/\/ Catch: java.lang.Throwable \-\> L4a\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|TryCatch #0 \{, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\lPHI: r1 \l  PHI: (r1v4 'measuredWidth' int) = (r1v3 'measuredWidth' int), (r1v6 'measuredWidth' int) binds: [B:10:0x0018, B:9:0x000f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|if (r0.getPreferredHeight() \>= 0) goto L18\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|TryCatch #0 \{, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\l|int r2 = getDefaultSize(getSuggestedMinimumHeight(), r6)     \/\/ Catch: java.lang.Throwable \-\> L4a\l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|TRY_LEAVE\lTryCatch #0 \{, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\lPHI: r2 \l  PHI: (r2v6 'measuredHeight' int) = (r2v5 'measuredHeight' int), (r2v8 'measuredHeight' int) binds: [B:14:0x0036, B:13:0x002d] A[DONT_GENERATE, DONT_INLINE]\l|setMeasuredDimension(r1, r2)     \/\/ Catch: java.lang.Throwable \-\> L4a\l}"];
Node_16 [shape=record,label="{16\:\ 0x0048|monitor\-exit(r4)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|RETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|TryCatch #0 \{, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\l|int r2 = (r0.getPreferredHeight() + getPaddingTop()) + getPaddingBottom()     \/\/ Catch: java.lang.Throwable \-\> L4a\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|TryCatch #0 \{, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\l|int r1 = (r0.getPreferredWidth() + getPaddingLeft()) + getPaddingRight()     \/\/ Catch: java.lang.Throwable \-\> L4a\l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|REMOVE\lExcHandler: all \-\> 0x004a\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_20 [shape=record,label="{20\:\ 0x004c|REMOVE\l|throw r5\l}"];
MethodNode[shape=record,label="{protected synchronized void com.google.android.material.progressindicator.BaseProgressIndicator.onMeasure((r4v0 'this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\> A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>), IMMUTABLE_TYPE, THIS]), (r5v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:17:0x0049 \-\> B:1:?, CROSS_EDGE: B:20:0x004c \-\> B:1:?, CROSS_EDGE: B:14:0x0036 \-\> B:15:0x0044, CROSS_EDGE: B:10:0x0018 \-\> B:11:0x0026, CROSS_EDGE: B:21:0x0001 \-\> B:18:0x004a\lTYPE_VARS: [S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec]\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_21;
Node_21 -> Node_3;
Node_21 -> Node_18;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_22 -> Node_18;
Node_14 -> Node_15;
Node_10 -> Node_11;
Node_18 -> Node_20;
Node_20 -> Node_1;
}

