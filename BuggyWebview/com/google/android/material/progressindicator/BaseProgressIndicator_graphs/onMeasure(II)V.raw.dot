digraph "CFG forcom.google.android.material.progressindicator.BaseProgressIndicator.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MONITOR_ENTER  \l  (r4 I:??[OBJECT, ARRAY] A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x004a, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\l|0x0001: INVOKE  (r0 I:com.google.android.material.progressindicator.DrawingDelegate) = \l  (r4 I:com.google.android.material.progressindicator.BaseProgressIndicator A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l type: DIRECT call: com.google.android.material.progressindicator.BaseProgressIndicator.getCurrentDrawingDelegate():com.google.android.material.progressindicator.DrawingDelegate A[Catch: all \-\> 0x004a, MD:():com.google.android.material.progressindicator.DrawingDelegate\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\> (m), TRY_ENTER, TRY_LEAVE] (LINE:326)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawingDelegate' com.google.android.material.progressindicator.DrawingDelegate\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0009  (LINE:327)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: MONITOR_EXIT  \l  (r4 I:??[OBJECT, ARRAY] A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l  (LINE:328)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|RETURN\l|0x0008: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|TRY_ENTER\lTryCatch #0 \{all \-\> 0x004a, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\l|0x0009: INVOKE  (r1 I:int) = \l  (r0 I:com.google.android.material.progressindicator.DrawingDelegate A[D('drawingDelegate' com.google.android.material.progressindicator.DrawingDelegate\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l type: VIRTUAL call: com.google.android.material.progressindicator.DrawingDelegate.getPreferredWidth():int A[Catch: all \-\> 0x004a, MD:():int (m), TRY_ENTER] (LINE:335)\l}"];
Node_8 [shape=record,label="{8\:\ 0x000d|0x000d: IF  (r1 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:10:0x0018 \l}"];
Node_9 [shape=record,label="{9\:\ 0x000f|TryCatch #0 \{all \-\> 0x004a, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\l|0x000f: INVOKE  (r1 I:int) = \l  (r4 I:com.google.android.material.progressindicator.BaseProgressIndicator A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getSuggestedMinimumWidth():int A[Catch: all \-\> 0x004a, MD:():int (s)] (LINE:336)\l0x0013: INVOKE  (r1 I:int) = (r1 I:int), (r5 I:int A[D('widthMeasureSpec' int)]) type: STATIC call: com.google.android.material.progressindicator.BaseProgressIndicator.getDefaultSize(int, int):int A[Catch: all \-\> 0x004a, MD:(int, int):int (s)]\l0x0017: GOTO  \-\> 0x0026 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|TryCatch #0 \{all \-\> 0x004a, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\l|0x0027: INVOKE  (r2 I:int) = \l  (r0 I:com.google.android.material.progressindicator.DrawingDelegate A[D('drawingDelegate' com.google.android.material.progressindicator.DrawingDelegate\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l type: VIRTUAL call: com.google.android.material.progressindicator.DrawingDelegate.getPreferredHeight():int A[Catch: all \-\> 0x004a, MD:():int (m)] (LINE:339)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: IF  (r2 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:14:0x0036 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|TryCatch #0 \{all \-\> 0x004a, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\l|0x002d: INVOKE  (r2 I:int) = (r4 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getSuggestedMinimumHeight():int A[Catch: all \-\> 0x004a, MD:():int (s)] (LINE:340)\l0x0031: INVOKE  (r2 I:int) = (r2 I:int), (r6 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: com.google.android.material.progressindicator.BaseProgressIndicator.getDefaultSize(int, int):int A[Catch: all \-\> 0x004a, MD:(int, int):int (s)]\l0x0035: GOTO  \-\> 0x0044 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x004a, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\l|0x0045: INVOKE  \l  (r4 I:com.google.android.material.progressindicator.BaseProgressIndicator)\l  (r1 I:int A[D('measuredWidth' int)])\l  (r2 I:int A[D('measuredHeight' int)])\l type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.setMeasuredDimension(int, int):void A[Catch: all \-\> 0x004a, MD:(int, int):void (s), TRY_LEAVE] (LINE:342)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0048|0x0048: MONITOR_EXIT  (r4 I:??[OBJECT, ARRAY])  (LINE:343)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|RETURN\l|0x0049: RETURN   \l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|TryCatch #0 \{all \-\> 0x004a, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\l|0x0036: INVOKE  (r2 I:int) = \l  (r0 I:com.google.android.material.progressindicator.DrawingDelegate A[D('drawingDelegate' com.google.android.material.progressindicator.DrawingDelegate\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l type: VIRTUAL call: com.google.android.material.progressindicator.DrawingDelegate.getPreferredHeight():int A[Catch: all \-\> 0x004a, MD:():int (m)] (LINE:341)\l0x003a: INVOKE  (r3 I:int) = (r4 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getPaddingTop():int A[Catch: all \-\> 0x004a, MD:():int (s)]\l0x003e: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) A[Catch: all \-\> 0x004a]\l0x003f: INVOKE  (r3 I:int) = (r4 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getPaddingBottom():int A[Catch: all \-\> 0x004a, MD:():int (s)]\l0x0043: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) A[Catch: all \-\> 0x004a]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|TryCatch #0 \{all \-\> 0x004a, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lCatch: all \-\> 0x004a\l|0x0018: INVOKE  (r1 I:int) = \l  (r0 I:com.google.android.material.progressindicator.DrawingDelegate A[D('drawingDelegate' com.google.android.material.progressindicator.DrawingDelegate\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l type: VIRTUAL call: com.google.android.material.progressindicator.DrawingDelegate.getPreferredWidth():int A[Catch: all \-\> 0x004a, MD:():int (m)] (LINE:337)\l0x001c: INVOKE  (r2 I:int) = (r4 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getPaddingLeft():int A[Catch: all \-\> 0x004a, MD:():int (s)]\l0x0020: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) A[Catch: all \-\> 0x004a]\l0x0021: INVOKE  (r2 I:int) = (r4 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getPaddingRight():int A[Catch: all \-\> 0x004a, MD:():int (s)]\l0x0025: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) A[Catch: all \-\> 0x004a]\l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|ExcHandler: all \-\> 0x004a\l|0x004a: MOVE_EXCEPTION  (r5 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x004a] (LINE:325)\l}"];
Node_20 [shape=record,label="{20\:\ 0x004c|0x004c: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected synchronized void com.google.android.material.progressindicator.BaseProgressIndicator.onMeasure((r4 'this' I:com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\> A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>), IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:17:0x0049 \-\> B:1:?, CROSS_EDGE: B:20:0x004c \-\> B:1:?, CROSS_EDGE: B:14:0x0036 \-\> B:15:0x0044, CROSS_EDGE: B:10:0x0018 \-\> B:11:0x0026, CROSS_EDGE: B:21:0x0001 \-\> B:18:0x004a\lDebug Info:\l  0x0000\-0x0018: r4 'this' Lcom\/google\/android\/material\/progressindicator\/BaseProgressIndicator;, signature: Lcom\/google\/android\/material\/progressindicator\/BaseProgressIndicator\<TS;\>;\l  0x0005\-0x004a: r0 'drawingDelegate' Lcom\/google\/android\/material\/progressindicator\/DrawingDelegate;, signature: Lcom\/google\/android\/material\/progressindicator\/DrawingDelegate\<TS;\>;\l  0x0027\-0x004a: r1 'measuredWidth' I\l  0x0045\-0x004a: r2 'measuredHeight' I\l  \-1 \-0x004a: r5 'widthMeasureSpec' I\l  \-1 \-0x004a: r6 'heightMeasureSpec' I\lTYPE_VARS: [S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec]\lTryCatch #0 \{all \-\> 0x004a, blocks: (B:3:0x0001, B:7:0x0009, B:9:0x000f, B:11:0x0026, B:13:0x002d, B:15:0x0044, B:14:0x0036, B:10:0x0018), top: B:21:0x0001 \}\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_21;
Node_21 -> Node_3;
Node_21 -> Node_18;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_22 -> Node_18;
Node_14 -> Node_15;
Node_10 -> Node_11;
Node_18 -> Node_20;
Node_20 -> Node_1;
}

