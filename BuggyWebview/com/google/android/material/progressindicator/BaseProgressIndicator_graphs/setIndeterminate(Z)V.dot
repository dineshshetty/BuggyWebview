digraph "CFG forcom.google.android.material.progressindicator.BaseProgressIndicator.setIndeterminate(Z)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|monitor\-enter(r4)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{, blocks: (B:3:0x0001, B:8:0x000a, B:10:0x0012, B:11:0x0015, B:13:0x0022, B:14:0x0029, B:16:0x002d, B:18:0x0033, B:19:0x003d), top: B:25:0x0001 \}\lCatch: all \-\> 0x0041\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|if (r5 != isIndeterminate()) goto L8\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|monitor\-exit(r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x000a|TRY_ENTER\lTryCatch #0 \{, blocks: (B:3:0x0001, B:8:0x000a, B:10:0x0012, B:11:0x0015, B:13:0x0022, B:14:0x0029, B:16:0x002d, B:18:0x0033, B:19:0x003d), top: B:25:0x0001 \}\lCatch: all \-\> 0x0041\l|com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange r0 = (com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) getCurrentDrawable()     \/\/ Catch: java.lang.Throwable \-\> L41\l}"];
Node_9 [shape=record,label="{9\:\ 0x0010|if (r0 == null) goto L11\l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|TryCatch #0 \{, blocks: (B:3:0x0001, B:8:0x000a, B:10:0x0012, B:11:0x0015, B:13:0x0022, B:14:0x0029, B:16:0x002d, B:18:0x0033, B:19:0x003d), top: B:25:0x0001 \}\lCatch: all \-\> 0x0041\l|r0.hideNow()     \/\/ Catch: java.lang.Throwable \-\> L41\l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|TryCatch #0 \{, blocks: (B:3:0x0001, B:8:0x000a, B:10:0x0012, B:11:0x0015, B:13:0x0022, B:14:0x0029, B:16:0x002d, B:18:0x0033, B:19:0x003d), top: B:25:0x0001 \}\lCatch: all \-\> 0x0041\l|super.setIndeterminate(r5)     \/\/ Catch: java.lang.Throwable \-\> L41\lcom.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange r1 = (com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) getCurrentDrawable()     \/\/ Catch: java.lang.Throwable \-\> L41\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|if (r1 == null) goto L14\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|TryCatch #0 \{, blocks: (B:3:0x0001, B:8:0x000a, B:10:0x0012, B:11:0x0015, B:13:0x0022, B:14:0x0029, B:16:0x002d, B:18:0x0033, B:19:0x003d), top: B:25:0x0001 \}\lCatch: all \-\> 0x0041\l|r1.setVisible(visibleToUser(), false, false)     \/\/ Catch: java.lang.Throwable \-\> L41\l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|TryCatch #0 \{, blocks: (B:3:0x0001, B:8:0x000a, B:10:0x0012, B:11:0x0015, B:13:0x0022, B:14:0x0029, B:16:0x002d, B:18:0x0033, B:19:0x003d), top: B:25:0x0001 \}\lCatch: all \-\> 0x0041\l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|if ((r1 instanceof com.google.android.material.progressindicator.IndeterminateDrawable) == false) goto L19\l}"];
Node_16 [shape=record,label="{16\:\ 0x002d|TryCatch #0 \{, blocks: (B:3:0x0001, B:8:0x000a, B:10:0x0012, B:11:0x0015, B:13:0x0022, B:14:0x0029, B:16:0x002d, B:18:0x0033, B:19:0x003d), top: B:25:0x0001 \}\lCatch: all \-\> 0x0041\l}"];
Node_17 [shape=record,label="{17\:\ 0x0031|if (visibleToUser() == false) goto L19\l}"];
Node_18 [shape=record,label="{18\:\ 0x0033|TryCatch #0 \{, blocks: (B:3:0x0001, B:8:0x000a, B:10:0x0012, B:11:0x0015, B:13:0x0022, B:14:0x0029, B:16:0x002d, B:18:0x0033, B:19:0x003d), top: B:25:0x0001 \}\lCatch: all \-\> 0x0041\l|((com.google.android.material.progressindicator.IndeterminateDrawable) r1).getAnimatorDelegate().startAnimator()     \/\/ Catch: java.lang.Throwable \-\> L41\l}"];
Node_19 [shape=record,label="{19\:\ 0x003d|TRY_LEAVE\lTryCatch #0 \{, blocks: (B:3:0x0001, B:8:0x000a, B:10:0x0012, B:11:0x0015, B:13:0x0022, B:14:0x0029, B:16:0x002d, B:18:0x0033, B:19:0x003d), top: B:25:0x0001 \}\lCatch: all \-\> 0x0041\l|r4.isIndeterminateModeChangeRequested = false     \/\/ Catch: java.lang.Throwable \-\> L41\l}"];
Node_20 [shape=record,label="{20\:\ 0x003f|monitor\-exit(r4)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0040|RETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x0041|REMOVE\lExcHandler: all \-\> 0x0041\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_24 [shape=record,label="{24\:\ 0x0043|REMOVE\l|throw r5\l}"];
MethodNode[shape=record,label="{public synchronized void com.google.android.material.progressindicator.BaseProgressIndicator.setIndeterminate((r4v0 'this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\> A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>), IMMUTABLE_TYPE, THIS]), (r5v0 'indeterminate' boolean A[D('indeterminate' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:21:0x0040 \-\> B:1:?, CROSS_EDGE: B:24:0x0043 \-\> B:1:?, CROSS_EDGE: B:17:0x0031 \-\> B:19:0x003d, CROSS_EDGE: B:15:0x002b \-\> B:19:0x003d, CROSS_EDGE: B:12:0x0020 \-\> B:14:0x0029, CROSS_EDGE: B:9:0x0010 \-\> B:11:0x0015, CROSS_EDGE: B:25:0x0001 \-\> B:22:0x0041\lINLINE_NOT_NEEDED\lTYPE_VARS: [S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec]\lMETHOD_OVERRIDE: [ClspMth\{android.widget.ProgressBar.setIndeterminate(boolean):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_25;
Node_25 -> Node_3;
Node_25 -> Node_22;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_26;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_26 -> Node_22;
Node_22 -> Node_24;
Node_24 -> Node_1;
}

