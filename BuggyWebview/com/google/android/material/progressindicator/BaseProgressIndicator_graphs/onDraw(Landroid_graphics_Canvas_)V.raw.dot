digraph "CFG forcom.google.android.material.progressindicator.BaseProgressIndicator.onDraw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MONITOR_ENTER  \l  (r5 I:??[OBJECT, ARRAY] A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0001|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0056, blocks: (B:3:0x0001, B:5:0x000b, B:8:0x001e, B:10:0x0024, B:13:0x004a, B:12:0x002a, B:7:0x0011), top: B:19:0x0001 \}\lCatch: all \-\> 0x0056\l|0x0001: INVOKE  (r0 I:int) = (r6 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[Catch: all \-\> 0x0056, MD:():int (c), TRY_ENTER] (LINE:308)\l0x0005: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.material.progressindicator.BaseProgressIndicator A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getPaddingLeft():int A[Catch: all \-\> 0x0056, MD:():int (s)] (LINE:309)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|TryCatch #0 \{all \-\> 0x0056, blocks: (B:3:0x0001, B:5:0x000b, B:8:0x001e, B:10:0x0024, B:13:0x004a, B:12:0x002a, B:7:0x0011), top: B:19:0x0001 \}\lCatch: all \-\> 0x0056\l|0x000b: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.material.progressindicator.BaseProgressIndicator A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getPaddingTop():int A[Catch: all \-\> 0x0056, MD:():int (s)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001e \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|TryCatch #0 \{all \-\> 0x0056, blocks: (B:3:0x0001, B:5:0x000b, B:8:0x001e, B:10:0x0024, B:13:0x004a, B:12:0x002a, B:7:0x0011), top: B:19:0x0001 \}\lCatch: all \-\> 0x0056\l|0x001e: INVOKE  (r1 I:int) = (r5 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getPaddingRight():int A[Catch: all \-\> 0x0056, MD:():int (s)] (LINE:312)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002a \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|TryCatch #0 \{all \-\> 0x0056, blocks: (B:3:0x0001, B:5:0x000b, B:8:0x001e, B:10:0x0024, B:13:0x004a, B:12:0x002a, B:7:0x0011), top: B:19:0x0001 \}\lCatch: all \-\> 0x0056\l|0x0024: INVOKE  (r1 I:int) = (r5 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getPaddingBottom():int A[Catch: all \-\> 0x0056, MD:():int (s)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x004a \l}"];
Node_13 [shape=record,label="{13\:\ 0x004a|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0056, blocks: (B:3:0x0001, B:5:0x000b, B:8:0x001e, B:10:0x0024, B:13:0x004a, B:12:0x002a, B:7:0x0011), top: B:19:0x0001 \}\lCatch: all \-\> 0x0056\l|0x004a: INVOKE  (r1 I:android.graphics.drawable.Drawable) = (r5 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getCurrentDrawable():android.graphics.drawable.Drawable A[Catch: all \-\> 0x0056, MD:():android.graphics.drawable.Drawable (m)] (LINE:319)\l0x004e: INVOKE  (r1 I:android.graphics.drawable.Drawable), (r6 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[Catch: all \-\> 0x0056, MD:(android.graphics.Canvas):void (c)]\l0x0051: INVOKE  (r6 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r0 I:int A[D('saveCount' int)]) type: VIRTUAL call: android.graphics.Canvas.restoreToCount(int):void A[Catch: all \-\> 0x0056, MD:(int):void (c), TRY_LEAVE] (LINE:321)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0054|0x0054: MONITOR_EXIT  (r5 I:??[OBJECT, ARRAY])  (LINE:322)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|RETURN\l|0x0055: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|TryCatch #0 \{all \-\> 0x0056, blocks: (B:3:0x0001, B:5:0x000b, B:8:0x001e, B:10:0x0024, B:13:0x004a, B:12:0x002a, B:7:0x0011), top: B:19:0x0001 \}\lCatch: all \-\> 0x0056\l|0x002a: INVOKE  (r1 I:int) = (r5 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getWidth():int A[Catch: all \-\> 0x0056, MD:():int (s)] (LINE:313)\l0x002e: INVOKE  (r2 I:int) = (r5 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getPaddingLeft():int A[Catch: all \-\> 0x0056, MD:():int (s)]\l0x0032: INVOKE  (r3 I:int) = (r5 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getPaddingRight():int A[Catch: all \-\> 0x0056, MD:():int (s)]\l0x0036: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) A[Catch: all \-\> 0x0056]\l0x0037: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) A[Catch: all \-\> 0x0056]\l0x0038: INVOKE  (r2 I:int) = (r5 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getHeight():int A[Catch: all \-\> 0x0056, MD:():int (s)] (LINE:314)\l0x003c: INVOKE  (r3 I:int) = (r5 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getPaddingTop():int A[Catch: all \-\> 0x0056, MD:():int (s)]\l0x0040: INVOKE  (r4 I:int) = (r5 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getPaddingBottom():int A[Catch: all \-\> 0x0056, MD:():int (s)]\l0x0044: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) A[Catch: all \-\> 0x0056]\l0x0045: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) A[Catch: all \-\> 0x0056]\l0x0046: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:315)\l0x0047: INVOKE  \l  (r6 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r3 I:int)\l  (r3 I:int)\l  (r1 I:int A[D('w' int)])\l  (r2 I:int A[D('h' int)])\l type: VIRTUAL call: android.graphics.Canvas.clipRect(int, int, int, int):boolean A[Catch: all \-\> 0x0056, MD:(int, int, int, int):boolean (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|TryCatch #0 \{all \-\> 0x0056, blocks: (B:3:0x0001, B:5:0x000b, B:8:0x001e, B:10:0x0024, B:13:0x004a, B:12:0x002a, B:7:0x0011), top: B:19:0x0001 \}\lCatch: all \-\> 0x0056\l|0x0011: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.material.progressindicator.BaseProgressIndicator A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getPaddingLeft():int A[Catch: all \-\> 0x0056, MD:():int (s)] (LINE:310)\l0x0015: CAST (r1 I:float) = (float) (r1 I:int) A[Catch: all \-\> 0x0056]\l0x0016: INVOKE  (r2 I:int) = (r5 I:com.google.android.material.progressindicator.BaseProgressIndicator) type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getPaddingTop():int A[Catch: all \-\> 0x0056, MD:():int (s)]\l0x001a: CAST (r2 I:float) = (float) (r2 I:int) A[Catch: all \-\> 0x0056]\l0x001b: INVOKE  (r6 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r1 I:float), (r2 I:float) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[Catch: all \-\> 0x0056, MD:(float, float):void (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0056|ExcHandler: all \-\> 0x0056\l|0x0056: MOVE_EXCEPTION  (r6 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0056] (LINE:307)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0058|0x0058: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected synchronized void com.google.android.material.progressindicator.BaseProgressIndicator.onDraw((r5 'this' I:com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\> A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>), IMMUTABLE_TYPE, THIS]), (r6 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:18:0x0058 \-\> B:1:?, CROSS_EDGE: B:11:0x0028 \-\> B:13:0x004a, CROSS_EDGE: B:9:0x0022 \-\> B:12:0x002a, CROSS_EDGE: B:6:0x000f \-\> B:8:0x001e, CROSS_EDGE: B:4:0x0009 \-\> B:7:0x0011, CROSS_EDGE: B:19:0x0001 \-\> B:16:0x0056\lDebug Info:\l  0x0000\-0x0011: r5 'this' Lcom\/google\/android\/material\/progressindicator\/BaseProgressIndicator;, signature: Lcom\/google\/android\/material\/progressindicator\/BaseProgressIndicator\<TS;\>;\l  0x0038\-0x004a: r1 'w' I\l  0x0046\-0x004a: r2 'h' I\l  0x0005\-0x0056: r0 'saveCount' I\l  \-1 \-0x0056: r6 'canvas' Landroid\/graphics\/Canvas;\lTYPE_VARS: [S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec]\lTryCatch #0 \{all \-\> 0x0056, blocks: (B:3:0x0001, B:5:0x000b, B:8:0x001e, B:10:0x0024, B:13:0x004a, B:12:0x002a, B:7:0x0011), top: B:19:0x0001 \}\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onDraw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_19;
Node_19 -> Node_3;
Node_19 -> Node_16;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_20 -> Node_16;
Node_12 -> Node_13;
Node_7 -> Node_8;
Node_16 -> Node_18;
Node_18 -> Node_1;
}

