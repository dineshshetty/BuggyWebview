digraph "CFG forcom.google.android.material.progressindicator.BaseProgressIndicator.setAnimatorDurationScaleProvider(Lcom\/google\/android\/material\/progressindicator\/AnimatorDurationScaleProvider;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|r1.animatorDurationScaleProvider = r2\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (getProgressDrawable() == null) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|getProgressDrawable().animatorDurationScaleProvider = r2\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e}"];
Node_6 [shape=record,label="{6\:\ 0x0012|if (getIndeterminateDrawable() == null) goto L9\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|getIndeterminateDrawable().animatorDurationScaleProvider = r2\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.progressindicator.BaseProgressIndicator.setAnimatorDurationScaleProvider((r1v0 'this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\> A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>), IMMUTABLE_TYPE, THIS]), (r2v0 'animatorDurationScaleProvider' com.google.android.material.progressindicator.AnimatorDurationScaleProvider A[D('animatorDurationScaleProvider' com.google.android.material.progressindicator.AnimatorDurationScaleProvider), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0012 \-\> B:8:0x001a, CROSS_EDGE: B:3:0x0006 \-\> B:5:0x000e\lTYPE_VARS: [S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_1;
}

