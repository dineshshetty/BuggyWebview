digraph "CFG forcom.google.android.material.progressindicator.BaseProgressIndicator.isNoLongerNeedToBeVisible()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:com.google.android.material.progressindicator.DeterminateDrawable) = \l  (r1 I:com.google.android.material.progressindicator.BaseProgressIndicator A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getProgressDrawable():com.google.android.material.progressindicator.DeterminateDrawable A[MD:():com.google.android.material.progressindicator.DeterminateDrawable\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\> (m)] (LINE:487)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: INVOKE  (r0 I:com.google.android.material.progressindicator.DeterminateDrawable) = \l  (r1 I:com.google.android.material.progressindicator.BaseProgressIndicator A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getProgressDrawable():com.google.android.material.progressindicator.DeterminateDrawable A[MD:():com.google.android.material.progressindicator.DeterminateDrawable\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\> (m)]\l0x000a: INVOKE  (r0 I:boolean) = (r0 I:com.google.android.material.progressindicator.DeterminateDrawable) type: VIRTUAL call: com.google.android.material.progressindicator.DeterminateDrawable.isVisible():boolean A[MD:():boolean (s)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0021 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|SYNTHETIC\lRETURN\l|0x0021: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0024: RETURN  (r0 I:boolean) A[SYNTHETIC] (LINE:487)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: INVOKE  (r0 I:com.google.android.material.progressindicator.IndeterminateDrawable) = \l  (r1 I:com.google.android.material.progressindicator.BaseProgressIndicator A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getIndeterminateDrawable():com.google.android.material.progressindicator.IndeterminateDrawable A[MD:():com.google.android.material.progressindicator.IndeterminateDrawable\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\> (m)] (LINE:488)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0023 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: INVOKE  (r0 I:com.google.android.material.progressindicator.IndeterminateDrawable) = \l  (r1 I:com.google.android.material.progressindicator.BaseProgressIndicator A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>)])\l type: VIRTUAL call: com.google.android.material.progressindicator.BaseProgressIndicator.getIndeterminateDrawable():com.google.android.material.progressindicator.IndeterminateDrawable A[MD:():com.google.android.material.progressindicator.IndeterminateDrawable\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\> (m)]\l0x001a: INVOKE  (r0 I:boolean) = (r0 I:com.google.android.material.progressindicator.IndeterminateDrawable) type: VIRTUAL call: com.google.android.material.progressindicator.IndeterminateDrawable.isVisible():boolean A[MD:():boolean (s)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0021 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|RETURN\lORIG_RETURN\l|0x0023: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0024: RETURN  (r0 I:boolean)  (LINE:487)\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.material.progressindicator.BaseProgressIndicator.isNoLongerNeedToBeVisible((r1 'this' I:com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\> A[D('this' com.google.android.material.progressindicator.BaseProgressIndicator\<S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0023 \-\> B:13:0x0024, CROSS_EDGE: B:7:0x0014 \-\> B:12:0x0023, CROSS_EDGE: B:5:0x000e \-\> B:11:0x0021, CROSS_EDGE: B:3:0x0004 \-\> B:6:0x0010\lDebug Info:\l  0x0000\-0x0024: r1 'this' Lcom\/google\/android\/material\/progressindicator\/BaseProgressIndicator;, signature: Lcom\/google\/android\/material\/progressindicator\/BaseProgressIndicator\<TS;\>;\lTYPE_VARS: [S extends com.google.android.material.progressindicator.BaseProgressIndicatorSpec]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_11 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_12[style=dashed];
Node_12 -> Node_1;
}

