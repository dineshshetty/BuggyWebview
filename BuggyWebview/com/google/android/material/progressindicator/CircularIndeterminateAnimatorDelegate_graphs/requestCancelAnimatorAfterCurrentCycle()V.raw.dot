digraph "CFG forcom.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate.requestCancelAnimatorAfterCurrentCycle()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:android.animation.ObjectAnimator) = (r1 I:com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate.completeEndAnimator android.animation.ObjectAnimator  (LINE:130)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: INVOKE  (r0 I:boolean) = (r0 I:android.animation.ObjectAnimator) type: VIRTUAL call: android.animation.ObjectAnimator.isRunning():boolean A[MD:():boolean (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000b \l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|0x000b: IGET  (r0 I:com.google.android.material.progressindicator.IndeterminateDrawable) = (r1 I:com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate.drawable com.google.android.material.progressindicator.IndeterminateDrawable  (LINE:134)\l0x000d: INVOKE  (r0 I:boolean) = (r0 I:com.google.android.material.progressindicator.IndeterminateDrawable) type: VIRTUAL call: com.google.android.material.progressindicator.IndeterminateDrawable.isVisible():boolean A[MD:():boolean (s)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0019 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: IGET  (r0 I:android.animation.ObjectAnimator) = (r1 I:com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate.completeEndAnimator android.animation.ObjectAnimator  (LINE:135)\l0x0015: INVOKE  (r0 I:android.animation.ObjectAnimator) type: VIRTUAL call: android.animation.ObjectAnimator.start():void A[MD:():void (c)]\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x001c: RETURN   A[SYNTHETIC] (LINE:139)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: INVOKE  (r1 I:com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) type: VIRTUAL call: com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate.cancelAnimatorImmediately():void A[MD:():void (m)] (LINE:137)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|RETURN\lORIG_RETURN\l|0x001c: RETURN    (LINE:139)\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|0x001d: RETURN   A[SYNTHETIC] (LINE:131)\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|RETURN\lORIG_RETURN\l|0x001d: RETURN    (LINE:131)\l}"];
MethodNode[shape=record,label="{void com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate.requestCancelAnimatorAfterCurrentCycle((r1 'this' I:com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0019 \-\> B:11:0x001c, CROSS_EDGE: B:12:0x001d \-\> B:1:?, CROSS_EDGE: B:3:0x0002 \-\> B:12:0x001d\lMETHOD_OVERRIDE: [com.google.android.material.progressindicator.IndeterminateAnimatorDelegate.requestCancelAnimatorAfterCurrentCycle():void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_14[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_13;
Node_13 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_14 -> Node_1;
Node_12 -> Node_1;
}

