digraph "CFG forcom.google.android.material.progressindicator.IndeterminateAnimatorDelegate.registerDrawable(Lcom\/google\/android\/material\/progressindicator\/IndeterminateDrawable;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IPUT  \l  (r1 I:com.google.android.material.progressindicator.IndeterminateDrawable A[D('drawable' com.google.android.material.progressindicator.IndeterminateDrawable)])\l  (r0 I:com.google.android.material.progressindicator.IndeterminateAnimatorDelegate A[D('this' com.google.android.material.progressindicator.IndeterminateAnimatorDelegate\<T extends android.animation.Animator\>)])\l com.google.android.material.progressindicator.IndeterminateAnimatorDelegate.drawable com.google.android.material.progressindicator.IndeterminateDrawable  (LINE:47)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0002|RETURN\l|0x0002: RETURN    (LINE:48)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.progressindicator.IndeterminateAnimatorDelegate.registerDrawable((r0 'this' I:com.google.android.material.progressindicator.IndeterminateAnimatorDelegate\<T extends android.animation.Animator\> A[D('this' com.google.android.material.progressindicator.IndeterminateAnimatorDelegate\<T extends android.animation.Animator\>), IMMUTABLE_TYPE, THIS]), (r1 I:com.google.android.material.progressindicator.IndeterminateDrawable A[D('drawable' com.google.android.material.progressindicator.IndeterminateDrawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0002: r0 'this' Lcom\/google\/android\/material\/progressindicator\/IndeterminateAnimatorDelegate;, signature: Lcom\/google\/android\/material\/progressindicator\/IndeterminateAnimatorDelegate\<TT;\>;\l  \-1 \-0x0002: r1 'drawable' Lcom\/google\/android\/material\/progressindicator\/IndeterminateDrawable;\lTYPE_VARS: [T extends android.animation.Animator]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

