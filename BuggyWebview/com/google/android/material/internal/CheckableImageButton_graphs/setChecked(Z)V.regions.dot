digraph "CFG forcom.google.android.material.internal.CheckableImageButton.setChecked(Z)V" {
subgraph cluster_Region_1293977013 {
label = "R(1:(1:(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_660997720 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_225683028 {
label = "IF [B:13:0x0002, B:15:0x0006] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|if (r1.checkable != false) goto L3\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|ADDED_TO_REGION\l|if (r1.checked != r2) goto L5\l}"];
subgraph cluster_Region_1799562264 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0008|r1.checked = r2\lrefreshDrawableState()\lsendAccessibilityEvent(2048)\l}"];
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0004}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0012|ORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.internal.CheckableImageButton.setChecked((r1v0 'this' com.google.android.material.internal.CheckableImageButton A[IMMUTABLE_TYPE, THIS]), (r2v0 'checked' boolean A[D('checked' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0006 \-\> B:17:0x0012, CROSS_EDGE: B:13:0x0002 \-\> B:17:0x0012\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.widget.Checkable.setChecked(boolean):void\}]\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_18[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_19[style=dashed];
Node_16 -> Node_17;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

