digraph "CFG forcom.google.android.material.internal.ThemeEnforcement.checkTextAppearance(Landroid\/content\/Context;Landroid\/util\/AttributeSet;[III[I)V" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: SGET  (r0 I:int[]) =  com.google.android.material.R.styleable.ThemeEnforcement int[]  (LINE:157)\l0x0002: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r5 I:android.content.Context A[D('context' android.content.Context)])\l  (r6 I:android.util.AttributeSet A[D('set' android.util.AttributeSet)])\l  (r0 I:int[])\l  (r8 I:int A[D('defStyleAttr' int)])\l  (r9 I:int A[D('defStyleRes' int)])\l type: VIRTUAL call: android.content.Context.obtainStyledAttributes(android.util.AttributeSet, int[], int, int):android.content.res.TypedArray A[MD:(android.util.AttributeSet, int[], int, int):android.content.res.TypedArray (c)] (LINE:158)\l0x0006: SGET  (r1 I:int) =  com.google.android.material.R.styleable.ThemeEnforcement_enforceTextAppearance int  (LINE:160)\l0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:161)\l0x0009: INVOKE  (r1 I:boolean) = \l  (r0 I:android.content.res.TypedArray A[D('themeEnforcementAttrs' android.content.res.TypedArray)])\l  (r1 I:int)\l  (r2 I:boolean)\l type: VIRTUAL call: android.content.res.TypedArray.getBoolean(int, boolean):boolean A[MD:(int, boolean):boolean (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('enforceTextAppearance' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0013  (LINE:163)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|0x000f: INVOKE  (r0 I:android.content.res.TypedArray A[D('themeEnforcementAttrs' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:164)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|RETURN\l|0x0012: RETURN    (LINE:165)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0013|0x0013: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('textAppearanceResIndices' int[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001f  (LINE:170)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0015|0x0015: ARRAY_LENGTH  (r3 I:int) = (r10 I:??[] A[D('textAppearanceResIndices' int[])]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|0x0016: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0019 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0019|0x001a: INVOKE  (r2 I:boolean) = \l  (r5 I:android.content.Context A[D('context' android.content.Context)])\l  (r6 I:android.util.AttributeSet A[D('set' android.util.AttributeSet)])\l  (r7 I:int[] A[D('attrs' int[])])\l  (r8 I:int A[D('defStyleAttr' int)])\l  (r9 I:int A[D('defStyleRes' int)])\l  (r10 I:int[] A[D('textAppearanceResIndices' int[])])\l type: STATIC call: com.google.android.material.internal.ThemeEnforcement.isCustomTextAppearanceValid(android.content.Context, android.util.AttributeSet, int[], int, int, int[]):boolean A[MD:(android.content.Context, android.util.AttributeSet, int[], int, int, int[]):boolean VARARG (m)] (LINE:179)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0029|0x0029: INVOKE  (r0 I:android.content.res.TypedArray A[D('themeEnforcementAttrs' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:183)\l}"];
Node_34 [shape=record,label="{34\:\ 0x002c|0x002c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('validTextAppearance' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x002f  (LINE:185)\l}"];
Node_35 [shape=record,label="{35\:\ 0x002e|RETURN\l|0x002e: RETURN    (LINE:190)\l}"];
Node_36 [shape=record,label="{36\:\ 0x002f|0x002f: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:186)\l0x0031: CONST_STR  (r4 I:java.lang.String) =  \"This component requires that you specify a valid TextAppearance attribute. Update your app theme to inherit from Theme.MaterialComponents (or a descendant).\" \l0x0033: INVOKE  (r3 I:java.lang.IllegalArgumentException), (r4 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0036|0x0036: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_30 [shape=record,label="{30\:\ 0x001f|0x001f: SGET  (r3 I:int) =  com.google.android.material.R.styleable.ThemeEnforcement_android_textAppearance int  (LINE:172)\l0x0021: CONST  (r4 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:173)\l0x0022: INVOKE  (r3 I:int) = \l  (r0 I:android.content.res.TypedArray A[D('themeEnforcementAttrs' android.content.res.TypedArray)])\l  (r3 I:int)\l  (r4 I:int)\l type: VIRTUAL call: android.content.res.TypedArray.getResourceId(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0026|0x0026: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0029 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0028|0x0028: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{private static void com.google.android.material.internal.ThemeEnforcement.checkTextAppearance((r5 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.util.AttributeSet A[D('set' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int[] A[D('attrs' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('defStyleAttr' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('defStyleRes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int[] A[D('textAppearanceResIndices' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x002e \-\> B:20:?, CROSS_EDGE: B:37:0x0036 \-\> B:20:?, CROSS_EDGE: B:32:0x0028 \-\> B:33:0x0029, CROSS_EDGE: B:31:0x0026 \-\> B:33:0x0029, CROSS_EDGE: B:25:0x0013 \-\> B:30:0x001f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x001f: r2 'validTextAppearance' Z\l  0x0006\-0x0036: r0 'themeEnforcementAttrs' Landroid\/content\/res\/TypedArray;\l  0x000d\-0x0036: r1 'enforceTextAppearance' Z\l  0x0029\-0x0036: r2 'validTextAppearance' Z\l  \-1 \-0x0036: r5 'context' Landroid\/content\/Context;\l  \-1 \-0x0036: r6 'set' Landroid\/util\/AttributeSet;\l  \-1 \-0x0036: r7 'attrs' [I\l  \-1 \-0x0036: r8 'defStyleAttr' I\l  \-1 \-0x0036: r9 'defStyleRes' I\l  \-1 \-0x0036: r10 'textAppearanceResIndices' [I\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_20;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_20;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
}

