digraph "CFG forcom.google.android.material.internal.ThemeEnforcement.checkCompatibleTheme(Landroid\/content\/Context;Landroid\/util\/AttributeSet;II)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: SGET  (r0 I:int[]) =  com.google.android.material.R.styleable.ThemeEnforcement int[]  (LINE:128)\l0x0002: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r6 I:android.content.Context A[D('context' android.content.Context)])\l  (r7 I:android.util.AttributeSet A[D('set' android.util.AttributeSet)])\l  (r0 I:int[])\l  (r8 I:int A[D('defStyleAttr' int)])\l  (r9 I:int A[D('defStyleRes' int)])\l type: VIRTUAL call: android.content.Context.obtainStyledAttributes(android.util.AttributeSet, int[], int, int):android.content.res.TypedArray A[MD:(android.util.AttributeSet, int[], int, int):android.content.res.TypedArray (c)] (LINE:129)\l0x0006: SGET  (r1 I:int) =  com.google.android.material.R.styleable.ThemeEnforcement_enforceMaterialTheme int  (LINE:131)\l0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:132)\l0x0009: INVOKE  (r1 I:boolean) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r1 I:int), (r2 I:boolean) type: VIRTUAL call: android.content.res.TypedArray.getBoolean(int, boolean):boolean A[MD:(int, boolean):boolean (c)]\l0x000d: INVOKE  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:133)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('enforceMaterialTheme' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0032  (LINE:135)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|0x0012: NEW_INSTANCE  (r2 I:android.util.TypedValue) =  android.util.TypedValue  (LINE:136)\l0x0014: INVOKE  (r2 I:android.util.TypedValue) type: DIRECT call: android.util.TypedValue.\<init\>():void A[MD:():void (c)]\l0x0018: INVOKE  (r3 I:android.content.res.Resources$Theme) = (r6 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getTheme():android.content.res.Resources$Theme A[MD:():android.content.res.Resources$Theme (c)] (LINE:138)\l0x001c: SGET  (r4 I:int) =  com.google.android.material.R.attr.isMaterialTheme int \l0x001e: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001f: INVOKE  (r3 I:boolean) = \l  (r3 I:android.content.res.Resources$Theme)\l  (r4 I:int)\l  (r2 I:android.util.TypedValue A[D('isMaterialTheme' android.util.TypedValue)])\l  (r5 I:boolean)\l type: VIRTUAL call: android.content.res.Resources.Theme.resolveAttribute(int, android.util.TypedValue, boolean):boolean A[MD:(int, android.util.TypedValue, boolean):boolean (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0023|0x0023: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('resolvedValue' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x002f  (LINE:140)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0025|0x0025: IGET  (r4 I:int) = (r2 I:android.util.TypedValue A[D('isMaterialTheme' android.util.TypedValue)]) android.util.TypedValue.type int \l0x0027: CONST  (r5 I:??[int, float, short, byte, char]) = (18 ??[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0029|0x0029: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0032 \l}"];
Node_21 [shape=record,label="{21\:\ 0x002b|0x002b: IGET  (r4 I:int) = (r2 I:android.util.TypedValue A[D('isMaterialTheme' android.util.TypedValue)]) android.util.TypedValue.data int \l}"];
Node_22 [shape=record,label="{22\:\ 0x002d|0x002d: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0032 \l}"];
Node_23 [shape=record,label="{23\:\ 0x002f|0x002f: INVOKE  (r6 I:android.content.Context A[D('context' android.content.Context)]) type: STATIC call: com.google.android.material.internal.ThemeEnforcement.checkMaterialTheme(android.content.Context):void A[MD:(android.content.Context):void (m)] (LINE:144)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0032|0x0032: INVOKE  (r6 I:android.content.Context A[D('context' android.content.Context)]) type: STATIC call: com.google.android.material.internal.ThemeEnforcement.checkAppCompatTheme(android.content.Context):void A[MD:(android.content.Context):void (m)] (LINE:147)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0035|RETURN\l|0x0035: RETURN    (LINE:148)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static void com.google.android.material.internal.ThemeEnforcement.checkCompatibleTheme((r6 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.util.AttributeSet A[D('set' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('defStyleAttr' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('defStyleRes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x002d \-\> B:24:0x0032, CROSS_EDGE: B:20:0x0029 \-\> B:24:0x0032, CROSS_EDGE: B:18:0x0023 \-\> B:23:0x002f, CROSS_EDGE: B:16:0x0010 \-\> B:24:0x0032\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0017\-0x0032: r2 'isMaterialTheme' Landroid\/util\/TypedValue;\l  0x0023\-0x0032: r3 'resolvedValue' Z\l  0x0006\-0x0035: r0 'a' Landroid\/content\/res\/TypedArray;\l  0x000d\-0x0035: r1 'enforceMaterialTheme' Z\l  \-1 \-0x0035: r6 'context' Landroid\/content\/Context;\l  \-1 \-0x0035: r7 'set' Landroid\/util\/AttributeSet;\l  \-1 \-0x0035: r8 'defStyleAttr' I\l  \-1 \-0x0035: r9 'defStyleRes' I\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

