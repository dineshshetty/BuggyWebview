digraph "CFG forcom.google.android.material.internal.ThemeEnforcement.checkTheme(Landroid\/content\/Context;[ILjava\/lang\/String;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000}"];
Node_10 [shape=record,label="{10\:\ 0x0004|if (isTheme(r3, r4) == false) goto L5\l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0007|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"The style on this component requires your app theme to be \")\lr1.append(r5)\lr1.append(\" (or a descendant).\")\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{private static void com.google.android.material.internal.ThemeEnforcement.checkTheme((r3v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'themeAttributes' int[] A[D('themeAttributes' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'themeName' java.lang.String A[D('themeName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0022 \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

