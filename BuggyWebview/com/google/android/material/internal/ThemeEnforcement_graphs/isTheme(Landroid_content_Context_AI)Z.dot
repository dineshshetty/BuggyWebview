digraph "CFG forcom.google.android.material.internal.ThemeEnforcement.isTheme(Landroid\/content\/Context;[I)Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|android.content.res.TypedArray r0 = r3.obtainStyledAttributes(r4)\lr1 = 0\l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|LOOP_START\lLOOP:0: B:17:0x0005\-\>B:23:0x0013\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v3 'i' int) binds: [B:16:0x0000, B:23:0x0013] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|if (r1 \>= r4.length) goto L11\l}"];
Node_19 [shape=record,label="{19\:\ 0x0008}"];
Node_20 [shape=record,label="{20\:\ 0x000c|if (r0.hasValue(r1) != false) goto L6\l}"];
Node_23 [shape=record,label="{23\:\ 0x0013|LOOP_END\lLOOP:0: B:17:0x0005\-\>B:23:0x0013\l|int r1 = r1 + 1\l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|r0.recycle()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|RETURN\l|return false\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|r0.recycle()\l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.material.internal.ThemeEnforcement.isTheme((r3v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'themeAttributes' int[] A[D('themeAttributes' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x0013 \-\> B:17:0x0005, CROSS_EDGE: B:25:0x001a \-\> B:15:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_23;
Node_20 -> Node_27[style=dashed];
Node_23 -> Node_17;
Node_27 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_15;
Node_26 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_15;
}

