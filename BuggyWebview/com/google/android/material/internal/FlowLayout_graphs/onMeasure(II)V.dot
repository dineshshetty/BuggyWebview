digraph "CFG forcom.google.android.material.internal.FlowLayout.onMeasure(II)V" {
Node_39 [shape=record,label="{39\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x0000|int r1 = android.view.View.MeasureSpec.getSize(r22)\lint r2 = android.view.View.MeasureSpec.getMode(r22)\lint r3 = android.view.View.MeasureSpec.getSize(r23)\lint r4 = android.view.View.MeasureSpec.getMode(r23)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0014|if (r2 == Integer.MIN_VALUE) goto L37\l}"];
Node_43 [shape=record,label="{43\:\ 0x0016}"];
Node_44 [shape=record,label="{44\:\ 0x0018|if (r2 != 1073741824) goto L5\l}"];
Node_46 [shape=record,label="{46\:\ 0x001b|r5 = Integer.MAX_VALUE\l}"];
Node_48 [shape=record,label="{48\:\ 0x0020|PHI: r5 \l  PHI: (r5v2 'maxWidth' int) = (r5v1 'maxWidth' int), (r5v19 'maxWidth' int) binds: [B:47:0x001f, B:46:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|int r6 = getPaddingLeft()\lint r7 = getPaddingTop()\lr8 = r7\lr10 = 0\lint r11 = r5 \- getPaddingRight()\lr12 = 0\l}"];
Node_49 [shape=record,label="{49\:\ 0x0033|LOOP_START\lLOOP:0: B:49:0x0033\-\>B:71:0x00ba\lPHI: r5 r6 r7 r8 r10 r12 \l  PHI: (r5v3 'maxWidth' int) = (r5v2 'maxWidth' int), (r5v17 'maxWidth' int) binds: [B:48:0x0020, B:71:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 'childLeft' int) = (r6v0 'childLeft' int), (r6v5 'childLeft' int) binds: [B:48:0x0020, B:71:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 'childTop' int) = (r7v0 'childTop' int), (r7v12 'childTop' int) binds: [B:48:0x0020, B:71:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 'childBottom' int) = (r8v0 'childBottom' int), (r8v8 'childBottom' int) binds: [B:48:0x0020, B:71:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 'maxChildRight' int) = (r10v0 'maxChildRight' int), (r10v6 'maxChildRight' int) binds: [B:48:0x0020, B:71:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 'i' int) = (r12v0 'i' int), (r12v2 'i' int) binds: [B:48:0x0020, B:71:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_50 [shape=record,label="{50\:\ 0x0037|if (r12 \>= getChildCount()) goto L33\l}"];
Node_51 [shape=record,label="{51\:\ 0x0039|android.view.View r13 = getChildAt(r12)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0043|if (r13.getVisibility() != 8) goto L14\l}"];
Node_53 [shape=record,label="{53\:\ 0x0045|r16 = r5\l}"];
Node_76 [shape=record,label="{76\:\ 0x00ba|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ 0x00ba|LOOP_END\lLOOP:0: B:49:0x0033\-\>B:71:0x00ba\lPHI: r6 r7 r8 r10 r16 \l  PHI: (r6v5 'childLeft' int) = (r6v3 'childLeft' int), (r6v3 'childLeft' int), (r6v1 'childLeft' int) binds: [B:75:0x00ba, B:77:0x00ba, B:76:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v12 'childTop' int) = (r7v6 'childTop' int), (r7v6 'childTop' int), (r7v1 'childTop' int) binds: [B:75:0x00ba, B:77:0x00ba, B:76:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v8 'childBottom' int) = (r8v6 'childBottom' int), (r8v7 'childBottom' int), (r8v1 'childBottom' int) binds: [B:75:0x00ba, B:77:0x00ba, B:76:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v6 'maxChildRight' int) = (r10v3 'maxChildRight' int), (r10v4 'maxChildRight' int), (r10v1 'maxChildRight' int) binds: [B:75:0x00ba, B:77:0x00ba, B:76:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r16v2 'maxWidth' int) = (r16v1 'maxWidth' int), (r16v1 'maxWidth' int), (r16v3 'maxWidth' int) binds: [B:75:0x00ba, B:77:0x00ba, B:76:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l|int r12 = r12 + 1\lr5 = r16\l}"];
Node_54 [shape=record,label="{54\:\ 0x004d|measureChild(r13, r22, r23)\lr16 = r5\landroid.view.ViewGroup$LayoutParams r5 = r13.getLayoutParams()\lr17 = 0\lr18 = 0\lr19 = r7\l}"];
Node_55 [shape=record,label="{55\:\ 0x0062|if ((r5 instanceof android.view.ViewGroup.MarginLayoutParams) == false) goto L32\l}"];
Node_56 [shape=record,label="{56\:\ 0x0064|android.view.ViewGroup$MarginLayoutParams r7 = (android.view.ViewGroup.MarginLayoutParams) r5\lint r17 = 0 + r7.leftMargin\lint r18 = 0 + r7.rightMargin\l}"];
Node_58 [shape=record,label="{58\:\ 0x0074|PHI: r17 r18 \l  PHI: (r17v1 'leftMargin' int) = (r17v0 'leftMargin' int), (r17v2 'leftMargin' int) binds: [B:57:0x0072, B:56:0x0064] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v1 'rightMargin' int) = (r18v0 'rightMargin' int), (r18v2 'rightMargin' int) binds: [B:57:0x0072, B:56:0x0064] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_59 [shape=record,label="{59\:\ 0x007b|if (((r6 + r17) + r13.getMeasuredWidth()) \<= r11) goto L31\l}"];
Node_60 [shape=record,label="{60\:\ 0x007d}"];
Node_61 [shape=record,label="{61\:\ 0x0081|if (isSingleLine() != false) goto L31\l}"];
Node_62 [shape=record,label="{62\:\ 0x0083|int r6 = getPaddingLeft()\lint r7 = r21.lineSpacing + r8\l}"];
Node_64 [shape=record,label="{64\:\ 0x008d|PHI: r6 r7 \l  PHI: (r6v2 'childLeft' int) = (r6v1 'childLeft' int), (r6v4 'childLeft' int) binds: [B:63:0x008b, B:62:0x0083] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v6 'childTop' int) = (r7v5 'childTop' int), (r7v9 'childTop' int) binds: [B:63:0x008b, B:62:0x0083] A[DONT_GENERATE, DONT_INLINE]\l|int r9 = (r6 + r17) + r13.getMeasuredWidth()\lint r5 = r13.getMeasuredHeight() + r7\l}"];
Node_65 [shape=record,label="{65\:\ 0x009a|if (r9 \<= r10) goto L25\l}"];
Node_66 [shape=record,label="{66\:\ 0x009c|r10 = r9\l}"];
Node_67 [shape=record,label="{67\:\ 0x009d|PHI: r10 \l  PHI: (r10v3 'maxChildRight' int) = (r10v1 'maxChildRight' int), (r10v5 'maxChildRight' int) binds: [B:65:0x009a, B:66:0x009c] A[DONT_GENERATE, DONT_INLINE]\l|int r5 = r21.itemSpacing\lint r6 = r6 + (((r17 + r18) + r13.getMeasuredWidth()) + r5)\l}"];
Node_68 [shape=record,label="{68\:\ 0x00b1|if (r12 != (getChildCount() + (\-1))) goto L29\l}"];
Node_69 [shape=record,label="{69\:\ 0x00b3|int r10 = r10 + r18\lr8 = r5\l}"];
Node_77 [shape=record,label="{77\:\ 0x00ba|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x00b8|r8 = r5\l}"];
Node_75 [shape=record,label="{75\:\ 0x00ba|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x008b|r7 = r19\l}"];
Node_57 [shape=record,label="{57\:\ 0x0072}"];
Node_74 [shape=record,label="{74\:\ 0x00c0|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x00c0|int r5 = getPaddingRight()\lint r10 = r10 + r5\lint r8 = r8 + getPaddingBottom()\lint r5 = getMeasuredDimension(r1, r2, r10)\lint r7 = getMeasuredDimension(r3, r4, r8)\lsetMeasuredDimension(r5, r7)\l}"];
Node_73 [shape=record,label="{73\:\ 0x00d9|RETURN\l|return\l}"];
Node_40 [shape=record,label="{40\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ 0x001f|r5 = r1\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.internal.FlowLayout.onMeasure((r21v0 'this' com.google.android.material.internal.FlowLayout A[IMMUTABLE_TYPE, THIS]), (r22v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:71:0x00ba \-\> B:49:0x0033, CROSS_EDGE: B:69:0x00b3 \-\> B:71:0x00ba, CROSS_EDGE: B:70:0x00b8 \-\> B:71:0x00ba, CROSS_EDGE: B:65:0x009a \-\> B:67:0x009d, CROSS_EDGE: B:63:0x008b \-\> B:64:0x008d, CROSS_EDGE: B:59:0x007b \-\> B:63:0x008b, CROSS_EDGE: B:57:0x0072 \-\> B:58:0x0074, CROSS_EDGE: B:47:0x001f \-\> B:48:0x0020, CROSS_EDGE: B:42:0x0014 \-\> B:47:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_39;Node_39 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_47;
Node_43 -> Node_44;
Node_44 -> Node_46;
Node_44 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_74;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_76;
Node_76 -> Node_71;
Node_71 -> Node_49;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_63;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_67;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_77;
Node_77 -> Node_71;
Node_70 -> Node_75;
Node_75 -> Node_71;
Node_63 -> Node_64;
Node_57 -> Node_58;
Node_74 -> Node_72;
Node_72 -> Node_73;
Node_73 -> Node_40;
Node_47 -> Node_48;
}

