digraph "CFG forcom.google.android.material.internal.FlowLayout.onLayout(ZIIII)V" {
subgraph cluster_Region_861552809 {
label = "R(1:(2:(7:6|7|9|11|13|(3:16|(1:18)(7:21|(1:23)|24|(1:27)|28|(1:30)(1:33)|31)|20)|35)|(1:3))) | DECL_VAR: int paddingStart\l";
node [shape=record,color=blue];
subgraph cluster_Region_1050630460 {
label = "R(2:(7:6|7|9|11|13|(3:16|(1:18)(7:21|(1:23)|24|(1:27)|28|(1:30)(1:33)|31)|20)|35)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1991149553 {
label = "IF [B:41:0x0007] THEN: R(7:6|7|9|11|13|(3:16|(1:18)(7:21|(1:23)|24|(1:27)|28|(1:30)(1:33)|31)|20)|35) ELSE: null";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0007|if (getChildCount() != 0) goto L6\l}"];
subgraph cluster_Region_65192427 {
label = "R(7:6|7|9|11|13|(3:16|(1:18)(7:21|(1:23)|24|(1:27)|28|(1:30)(1:33)|31)|20)|35)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x000c|r17.rowCount = 1\l}"];
Node_45 [shape=record,label="{45\:\ 0x0013|boolean r2 = androidx.core.view.ViewCompat.getLayoutDirection(r17) == 1\l}"];
Node_47 [shape=record,label="{47\:\ 0x0016|PHI: r2 \l  PHI: (r2v1 'isRtl' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|int r3 = r2 ? getPaddingRight() : getPaddingLeft()\l}"];
Node_50 [shape=record,label="{50\:\ 0x0021|PHI: r3 \l  PHI: (r3v2 'paddingStart' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int r4 = r2 ? getPaddingLeft() : getPaddingRight()\l}"];
Node_53 [shape=record,label="{53\:\ 0x002c|PHI: r4 \l  PHI: (r4v1 'paddingEnd' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int r5 = r3\lint int r6 = getPaddingTop()\lint r7 = r6\lint int r8 = (r21 \- r19) \- r4\lint r9 = 0\l}"];
subgraph cluster_LoopRegion_848687389 {
label = "LOOP:0: (3:16|(1:18)(7:21|(1:23)|24|(1:27)|28|(1:30)(1:33)|31)|20)";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x003a|if (r9 \< getChildCount()) goto L16\l}"];
subgraph cluster_Region_223607620 {
label = "R(3:16|(1:18)(7:21|(1:23)|24|(1:27)|28|(1:30)(1:33)|31)|20)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x003c|android.view.View android.view.View r10 = getChildAt(r9)\l}"];
subgraph cluster_IfRegion_1258512761 {
label = "IF [B:57:0x0046] THEN: R(1:18) ELSE: R(7:21|(1:23)|24|(1:27)|28|(1:30)(1:33)|31)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0046|if (r10.getVisibility() == 8) goto L18\l}"];
subgraph cluster_Region_1805650156 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0048|r10.setTag(com.google.android.material.C0571R.C0574id.row_index_key, \-1)\lr16 = r3\l}"];
}
subgraph cluster_Region_1207880511 {
label = "R(7:21|(1:23)|24|(1:27)|28|(1:30)(1:33)|31)";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x0055|android.view.ViewGroup$LayoutParams android.view.ViewGroup.LayoutParams r11 = r10.getLayoutParams()\lint r12 = 0\lint r13 = 0\l}"];
subgraph cluster_IfRegion_1027579586 {
label = "IF [B:60:0x005d] THEN: R(1:23) ELSE: null";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x005d|if ((r11 instanceof android.view.ViewGroup.MarginLayoutParams) != false) goto L23\l}"];
subgraph cluster_Region_630148201 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x005f|android.view.ViewGroup$MarginLayoutParams android.view.ViewGroup.MarginLayoutParams r14 = (android.view.ViewGroup.MarginLayoutParams) r11\lint r12 = androidx.core.view.MarginLayoutParamsCompat.getMarginStart(r14)\lint r13 = androidx.core.view.MarginLayoutParamsCompat.getMarginEnd(r14)\l}"];
}
}
Node_62 [shape=record,label="{62\:\ 0x006a|PHI: r12 r13 \l  PHI: (r12v2 'startMargin' int) = (r12v1 'startMargin' int), (r12v3 'startMargin' int) binds: [B:60:0x005d, B:61:0x005f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 'endMargin' int) = (r13v0 'endMargin' int), (r13v2 'endMargin' int) binds: [B:60:0x005d, B:61:0x005f] A[DONT_GENERATE, DONT_INLINE]\l|int int r14 = r5 + r12 + r10.getMeasuredWidth()\l}"];
subgraph cluster_IfRegion_58942817 {
label = "IF [B:63:0x0073, B:64:0x0075] THEN: R(1:27) ELSE: null";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x0073|if (r17.singleLine == false) goto L26\l}"];
Node_64 [shape=record,label="{64\:\ 0x0075|ADDED_TO_REGION\l|if (r14 \> r8) goto L27\l}"];
subgraph cluster_Region_2128114154 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x0077|r5 = r3\lint r6 = r7 + r17.lineSpacing\lr17.rowCount++\l}"];
}
}
Node_66 [shape=record,label="{66\:\ 0x0081|PHI: r5 r6 \l  PHI: (r5v2 'childStart' int) = (r5v1 'childStart' int), (r5v1 'childStart' int), (r5v4 'childStart' int) binds: [B:63:0x0073, B:64:0x0075, B:65:0x0077] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v2 'childTop' int) = (r6v1 'childTop' int), (r6v1 'childTop' int), (r6v3 'childTop' int) binds: [B:63:0x0073, B:64:0x0075, B:65:0x0077] A[DONT_GENERATE, DONT_INLINE]\l|r16 = r3\lr10.setTag(com.google.android.material.C0571R.C0574id.row_index_key, java.lang.Integer.valueOf(r17.rowCount \- 1))\lint int r3 = r5 + r12 + r10.getMeasuredWidth()\lint int r14 = r10.getMeasuredHeight()\lint int r14 = r14 + r6\l}"];
subgraph cluster_IfRegion_1296996916 {
label = "IF [B:67:0x009b] THEN: R(1:30) ELSE: R(1:33)";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ 0x009b|if (r2 != false) goto L30\l}"];
subgraph cluster_Region_1432719711 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x009d|r10.layout(r8 \- r3, r6, (r8 \- r5) \- r12, r14)\l}"];
}
subgraph cluster_Region_1055462519 {
label = "R(1:33)";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x00a6|r10.layout(r5 + r12, r6, r3, r14)\l}"];
}
}
Node_70 [shape=record,label="{70\:\ 0x00ab|r5 += r12 + r13 + r10.getMeasuredWidth() + r17.itemSpacing\lr7 = r14\l}"];
}
}
Node_71 [shape=record,label="{71\:\ 0x00b7|LOOP_END\lLOOP:0: B:54:0x0036\-\>B:71:0x00b7\lPHI: r5 r6 r7 r16 \l  PHI: (r5v5 'childStart' int) = (r5v3 'childStart' int), (r5v1 'childStart' int) binds: [B:74:0x00b7, B:75:0x00b7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v4 'childTop' int) = (r6v2 'childTop' int), (r6v1 'childTop' int) binds: [B:74:0x00b7, B:75:0x00b7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v8 'childBottom' int) = (r7v6 'childBottom' int), (r7v1 'childBottom' int) binds: [B:74:0x00b7, B:75:0x00b7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r16v1 'paddingStart' int) = (r16v0 'paddingStart' int), (r16v2 'paddingStart' int) binds: [B:74:0x00b7, B:75:0x00b7] A[DONT_GENERATE, DONT_INLINE]\l|r9++\lr3 = r16\l}"];
}
}
Node_72 [shape=record,label="{72\:\ 0x00bd|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_58563711 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0009|r17.rowCount = 0\l}"];
}
}
}
Node_38 [shape=record,color=red,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0000}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x000b}"];
Node_39 [shape=record,color=red,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0015}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x0018}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0023}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x0036|LOOP_START\lLOOP:0: B:54:0x0036\-\>B:71:0x00b7\lPHI: r3 r5 r6 r7 r9 \l  PHI: (r3v3 'paddingStart' int) = (r3v2 'paddingStart' int), (r3v9 'paddingStart' int) binds: [B:53:0x002c, B:71:0x00b7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'childStart' int) = (r5v0 'childStart' int), (r5v5 'childStart' int) binds: [B:53:0x002c, B:71:0x00b7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 'childTop' int) = (r6v0 'childTop' int), (r6v4 'childTop' int) binds: [B:53:0x002c, B:71:0x00b7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 'childBottom' int) = (r7v0 'childBottom' int), (r7v8 'childBottom' int) binds: [B:53:0x002c, B:71:0x00b7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 'i' int) = (r9v0 'i' int), (r9v2 'i' int) binds: [B:53:0x002c, B:71:0x00b7] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_75 [shape=record,color=red,label="{75\:\ 0x00b7|SYNTHETIC\l}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x00b7|SYNTHETIC\l}"];
Node_73 [shape=record,color=red,label="{73\:\ 0x00bd|SYNTHETIC\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0028}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x001d}"];
MethodNode[shape=record,label="{protected void com.google.android.material.internal.FlowLayout.onLayout((r17v0 'this' com.google.android.material.internal.FlowLayout A[IMMUTABLE_TYPE, THIS]), (r18v0 'sizeChanged' boolean A[D('sizeChanged' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'left' int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'top' int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'right' int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'bottom' int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:71:0x00b7 \-\> B:54:0x0036, CROSS_EDGE: B:70:0x00ab \-\> B:71:0x00b7, CROSS_EDGE: B:69:0x00a6 \-\> B:70:0x00ab, CROSS_EDGE: B:64:0x0075 \-\> B:66:0x0081, CROSS_EDGE: B:63:0x0073 \-\> B:66:0x0081, CROSS_EDGE: B:60:0x005d \-\> B:62:0x006a, CROSS_EDGE: B:72:0x00bd \-\> B:39:?, CROSS_EDGE: B:52:0x0028 \-\> B:53:0x002c, CROSS_EDGE: B:49:0x001d \-\> B:50:0x0021, CROSS_EDGE: B:45:0x0013 \-\> B:47:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onLayout(boolean, int, int, int, int):void\}]\l}"];
MethodNode -> Node_38;Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_45 -> Node_47;
Node_47 -> Node_48;
Node_47 -> Node_49;
Node_50 -> Node_51;
Node_50 -> Node_52;
Node_53 -> Node_54;
Node_55 -> Node_56;
Node_55 -> Node_73[style=dashed];
Node_56 -> Node_57;
Node_57 -> Node_58;
Node_57 -> Node_59[style=dashed];
Node_58 -> Node_75;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_60 -> Node_62[style=dashed];
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_63 -> Node_66[style=dashed];
Node_64 -> Node_65;
Node_64 -> Node_66[style=dashed];
Node_65 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_67 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_70;
Node_70 -> Node_74;
Node_71 -> Node_54;
Node_72 -> Node_39;
Node_42 -> Node_43;
Node_38 -> Node_40;
Node_40 -> Node_41;
Node_43 -> Node_39;
Node_46 -> Node_47;
Node_48 -> Node_50;
Node_51 -> Node_53;
Node_54 -> Node_55;
Node_75 -> Node_71;
Node_74 -> Node_71;
Node_73 -> Node_72;
Node_52 -> Node_53;
Node_49 -> Node_50;
}

