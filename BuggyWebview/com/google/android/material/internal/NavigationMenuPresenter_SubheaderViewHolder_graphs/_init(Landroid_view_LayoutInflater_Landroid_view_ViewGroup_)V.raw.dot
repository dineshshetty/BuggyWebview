digraph "CFG forcom.google.android.material.internal.NavigationMenuPresenter.SubheaderViewHolder.\<init\>(Landroid\/view\/LayoutInflater;Landroid\/view\/ViewGroup;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:int) =  com.google.android.material.R.layout.design_navigation_item_subheader int  (LINE:465)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: INVOKE  (r0 I:android.view.View) = \l  (r3 I:android.view.LayoutInflater A[D('inflater' android.view.LayoutInflater)])\l  (r0 I:int)\l  (r4 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup)])\l  (r1 I:boolean)\l type: VIRTUAL call: android.view.LayoutInflater.inflate(int, android.view.ViewGroup, boolean):android.view.View A[MD:(int, android.view.ViewGroup, boolean):android.view.View (c)]\l0x0007: INVOKE  (r2 I:com.google.android.material.internal.NavigationMenuPresenter$ViewHolder), (r0 I:android.view.View) type: DIRECT call: com.google.android.material.internal.NavigationMenuPresenter.ViewHolder.\<init\>(android.view.View):void A[MD:(android.view.View):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:466)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.internal.NavigationMenuPresenter.SubheaderViewHolder.\<init\>((r2 'this' I:com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.LayoutInflater A[D('inflater' android.view.LayoutInflater), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000a: r3 'inflater' Landroid\/view\/LayoutInflater;\l  \-1 \-0x000a: r4 'parent' Landroid\/view\/ViewGroup;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

