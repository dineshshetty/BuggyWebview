digraph "CFG forcom.google.android.material.internal.CheckableGroup.getSingleCheckedId()I" {
subgraph cluster_Region_1161193537 {
label = "R(1:(2:(1:8)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_513121885 {
label = "R(2:(1:8)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_463327927 {
label = "IF [B:13:0x0002, B:15:0x000a] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|if (r1.singleSelection == true) goto L3\l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|ADDED_TO_REGION\l|if (r1.checkedIds.isEmpty() == true) goto L8\l}"];
subgraph cluster_Region_236212259 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x001d|RETURN\lORIG_RETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_2014725568 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return r1.checkedIds.iterator().next().intValue()\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0004}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000c}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int com.google.android.material.internal.CheckableGroup.getSingleCheckedId((r1v0 'this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\> A[D('this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x001d \-\> B:18:0x001e, CROSS_EDGE: B:13:0x0002 \-\> B:17:0x001d\lINLINE_NOT_NEEDED\lTYPE_VARS: [T extends com.google.android.material.internal.MaterialCheckable\<T\>]\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_19;
}

