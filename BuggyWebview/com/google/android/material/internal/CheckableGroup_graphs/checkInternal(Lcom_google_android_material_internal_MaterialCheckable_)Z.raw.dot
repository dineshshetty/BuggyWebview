digraph "CFG forcom.google.android.material.internal.CheckableGroup.checkInternal(Lcom\/google\/android\/material\/internal\/MaterialCheckable;)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = \l  (r5 I:com.google.android.material.internal.MaterialCheckable A[D('checkable' com.google.android.material.internal.MaterialCheckable\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l type: INTERFACE call: com.google.android.material.internal.MaterialCheckable.getId():int A[MD:():int (m)] (LINE:149)\l0x0004: IGET  (r1 I:java.util.Set\<java.lang.Integer\>) = \l  (r4 I:com.google.android.material.internal.CheckableGroup A[D('this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l com.google.android.material.internal.CheckableGroup.checkedIds java.util.Set  (LINE:150)\l0x0006: INVOKE  (r2 I:java.lang.Integer) = (r0 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x000a: INVOKE  (r1 I:boolean) = (r1 I:java.util.Set), (r2 I:java.lang.Object) type: INTERFACE call: java.util.Set.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l0x000e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0012 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0011|RETURN\l|0x0011: RETURN  (r2 I:boolean)  (LINE:151)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|0x0012: IGET  (r1 I:java.util.Map\<java.lang.Integer, T extends com.google.android.material.internal.MaterialCheckable\<T\>\>) = \l  (r4 I:com.google.android.material.internal.CheckableGroup A[D('this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l com.google.android.material.internal.CheckableGroup.checkables java.util.Map  (LINE:153)\l0x0014: INVOKE  (r3 I:int) = \l  (r4 I:com.google.android.material.internal.CheckableGroup A[D('this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l type: VIRTUAL call: com.google.android.material.internal.CheckableGroup.getSingleCheckedId():int A[MD:():int (m)]\l0x0018: INVOKE  (r3 I:java.lang.Integer) = (r3 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x001c: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.Map), (r3 I:java.lang.Object) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0020: CHECK_CAST (r1 I:com.google.android.material.internal.MaterialCheckable) = (com.google.android.material.internal.MaterialCheckable) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0022|0x0022: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('singleCheckedItem' com.google.android.material.internal.MaterialCheckable\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0027  (LINE:154)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0024|0x0024: INVOKE  \l  (r4 I:com.google.android.material.internal.CheckableGroup A[D('this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l  (r1 I:com.google.android.material.internal.MaterialCheckable A[D('singleCheckedItem' com.google.android.material.internal.MaterialCheckable\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l  (r2 I:boolean)\l type: DIRECT call: com.google.android.material.internal.CheckableGroup.uncheckInternal(com.google.android.material.internal.MaterialCheckable, boolean):boolean A[MD:(com.google.android.material.internal.MaterialCheckable\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>, boolean):boolean (m)] (LINE:155)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0027|0x0027: IGET  (r2 I:java.util.Set\<java.lang.Integer\>) = \l  (r4 I:com.google.android.material.internal.CheckableGroup A[D('this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l com.google.android.material.internal.CheckableGroup.checkedIds java.util.Set  (LINE:157)\l0x0029: INVOKE  (r3 I:java.lang.Integer) = (r0 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x002d: INVOKE  (r2 I:boolean) = (r2 I:java.util.Set), (r3 I:java.lang.Object) type: INTERFACE call: java.util.Set.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0031: INVOKE  (r3 I:boolean) = \l  (r5 I:com.google.android.material.internal.MaterialCheckable A[D('checkable' com.google.android.material.internal.MaterialCheckable\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l type: INTERFACE call: com.google.android.material.internal.MaterialCheckable.isChecked():boolean A[MD:():boolean (c)] (LINE:158)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0035|0x0035: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x003b \l}"];
Node_22 [shape=record,label="{22\:\ 0x0037|0x0037: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:159)\l0x0038: INVOKE  \l  (r5 I:com.google.android.material.internal.MaterialCheckable A[D('checkable' com.google.android.material.internal.MaterialCheckable\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l  (r3 I:boolean)\l type: INTERFACE call: com.google.android.material.internal.MaterialCheckable.setChecked(boolean):void A[MD:(boolean):void (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x003b|RETURN\l|0x003b: RETURN  (r2 I:boolean A[D('checkedStateChanged' boolean)])  (LINE:161)\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.internal.CheckableGroup.checkInternal((r4 'this' I:com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\> A[D('this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>), IMMUTABLE_TYPE, THIS]), (r5 I:com.google.android.material.internal.MaterialCheckable\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\> A[D('checkable' com.google.android.material.internal.MaterialCheckable\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x003b \-\> B:13:?, CROSS_EDGE: B:21:0x0035 \-\> B:23:0x003b, CROSS_EDGE: B:18:0x0022 \-\> B:20:0x0027\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x003b: r0 'id' I\l  0x0022\-0x003b: r1 'singleCheckedItem' Lcom\/google\/android\/material\/internal\/MaterialCheckable;, signature: Lcom\/google\/android\/material\/internal\/MaterialCheckable\<TT;\>;\l  0x0031\-0x003b: r2 'checkedStateChanged' Z\l  0x0000\-0x003b: r4 'this' Lcom\/google\/android\/material\/internal\/CheckableGroup;, signature: Lcom\/google\/android\/material\/internal\/CheckableGroup\<TT;\>;\l  0x0000\-0x003b: r5 'checkable' Lcom\/google\/android\/material\/internal\/MaterialCheckable;, signature: Lcom\/google\/android\/material\/internal\/MaterialCheckable\<TT;\>;\lTYPE_VARS: [T extends com.google.android.material.internal.MaterialCheckable\<T\>]\lSIGNATURE: (Lcom\/google\/android\/material\/internal\/MaterialCheckable\<TT;\>;)Z\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_13;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

