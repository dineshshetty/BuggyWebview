digraph "CFG forcom.google.android.material.internal.CheckableGroup.uncheckInternal(Lcom\/google\/android\/material\/internal\/MaterialCheckable;Z)Z" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = \l  (r6 I:com.google.android.material.internal.MaterialCheckable A[D('checkable' com.google.android.material.internal.MaterialCheckable\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l type: INTERFACE call: com.google.android.material.internal.MaterialCheckable.getId():int A[MD:():int (m)] (LINE:166)\l0x0004: IGET  (r1 I:java.util.Set\<java.lang.Integer\>) = \l  (r5 I:com.google.android.material.internal.CheckableGroup A[D('this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l com.google.android.material.internal.CheckableGroup.checkedIds java.util.Set  (LINE:167)\l0x0006: INVOKE  (r2 I:java.lang.Integer) = (r0 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x000a: INVOKE  (r1 I:boolean) = (r1 I:java.util.Set), (r2 I:java.lang.Object) type: INTERFACE call: java.util.Set.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l0x000e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0012 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|RETURN\l|0x0011: RETURN  (r2 I:boolean)  (LINE:168)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0012|0x0012: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('selectionRequired' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x002d  (LINE:170)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|0x0014: IGET  (r1 I:java.util.Set\<java.lang.Integer\>) = \l  (r5 I:com.google.android.material.internal.CheckableGroup A[D('this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l com.google.android.material.internal.CheckableGroup.checkedIds java.util.Set \l0x0016: INVOKE  (r1 I:int) = (r1 I:java.util.Set) type: INTERFACE call: java.util.Set.size():int A[MD:():int (c)]\l0x001a: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x001b|0x001b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x002d \l}"];
Node_24 [shape=record,label="{24\:\ 0x001d|0x001d: IGET  (r1 I:java.util.Set\<java.lang.Integer\>) = \l  (r5 I:com.google.android.material.internal.CheckableGroup A[D('this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l com.google.android.material.internal.CheckableGroup.checkedIds java.util.Set \l0x001f: INVOKE  (r4 I:java.lang.Integer) = (r0 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0023: INVOKE  (r1 I:boolean) = (r1 I:java.util.Set), (r4 I:java.lang.Object) type: INTERFACE call: java.util.Set.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0027|0x0027: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x002d \l}"];
Node_26 [shape=record,label="{26\:\ 0x0029|0x0029: INVOKE  \l  (r6 I:com.google.android.material.internal.MaterialCheckable A[D('checkable' com.google.android.material.internal.MaterialCheckable\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l  (r3 I:boolean)\l type: INTERFACE call: com.google.android.material.internal.MaterialCheckable.setChecked(boolean):void A[MD:(boolean):void (c)] (LINE:172)\l}"];
Node_27 [shape=record,label="{27\:\ 0x002c|RETURN\l|0x002c: RETURN  (r2 I:boolean)  (LINE:173)\l}"];
Node_28 [shape=record,label="{28\:\ 0x002d|0x002d: IGET  (r1 I:java.util.Set\<java.lang.Integer\>) = \l  (r5 I:com.google.android.material.internal.CheckableGroup A[D('this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l com.google.android.material.internal.CheckableGroup.checkedIds java.util.Set  (LINE:175)\l0x002f: INVOKE  (r3 I:java.lang.Integer) = (r0 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0033: INVOKE  (r1 I:boolean) = (r1 I:java.util.Set), (r3 I:java.lang.Object) type: INTERFACE call: java.util.Set.remove(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l0x0037: INVOKE  (r3 I:boolean) = \l  (r6 I:com.google.android.material.internal.MaterialCheckable A[D('checkable' com.google.android.material.internal.MaterialCheckable\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l type: INTERFACE call: com.google.android.material.internal.MaterialCheckable.isChecked():boolean A[MD:():boolean (c)] (LINE:176)\l}"];
Node_29 [shape=record,label="{29\:\ 0x003b|0x003b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0040 \l}"];
Node_30 [shape=record,label="{30\:\ 0x003d|0x003d: INVOKE  \l  (r6 I:com.google.android.material.internal.MaterialCheckable A[D('checkable' com.google.android.material.internal.MaterialCheckable\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>)])\l  (r2 I:boolean)\l type: INTERFACE call: com.google.android.material.internal.MaterialCheckable.setChecked(boolean):void A[MD:(boolean):void (c)] (LINE:177)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0040|RETURN\l|0x0040: RETURN  (r1 I:boolean A[D('checkedStateChanged' boolean)])  (LINE:179)\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.internal.CheckableGroup.uncheckInternal((r5 'this' I:com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\> A[D('this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>), IMMUTABLE_TYPE, THIS]), (r6 I:com.google.android.material.internal.MaterialCheckable\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\> A[D('checkable' com.google.android.material.internal.MaterialCheckable\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[D('selectionRequired' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x002c \-\> B:17:?, CROSS_EDGE: B:31:0x0040 \-\> B:17:?, CROSS_EDGE: B:29:0x003b \-\> B:31:0x0040, CROSS_EDGE: B:23:0x001b \-\> B:28:0x002d, CROSS_EDGE: B:21:0x0012 \-\> B:28:0x002d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0040: r0 'id' I\l  0x0037\-0x0040: r1 'checkedStateChanged' Z\l  0x0000\-0x0040: r5 'this' Lcom\/google\/android\/material\/internal\/CheckableGroup;, signature: Lcom\/google\/android\/material\/internal\/CheckableGroup\<TT;\>;\l  0x0000\-0x0040: r6 'checkable' Lcom\/google\/android\/material\/internal\/MaterialCheckable;, signature: Lcom\/google\/android\/material\/internal\/MaterialCheckable\<TT;\>;\l  \-1 \-0x0040: r7 'selectionRequired' Z\lTYPE_VARS: [T extends com.google.android.material.internal.MaterialCheckable\<T\>]\lSIGNATURE: (Lcom\/google\/android\/material\/internal\/MaterialCheckable\<TT;\>;Z)Z\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_17;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_28;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_17;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_17;
}

