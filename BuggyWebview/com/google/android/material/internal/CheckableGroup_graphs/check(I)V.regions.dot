digraph "CFG forcom.google.android.material.internal.CheckableGroup.check(I)V" {
subgraph cluster_Region_1529693994 {
label = "R(2:1|(1:(1:7)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|com.google.android.material.internal.MaterialCheckable T r0 = r2.checkables.get(java.lang.Integer.valueOf(r3))\l}"];
subgraph cluster_Region_2078405045 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1361989423 {
label = "IF [B:13:0x000c, B:16:0x0013] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000c|if (r0 != null) goto L5\l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|ADDED_TO_REGION\l|if (checkInternal(r0) != false) goto L7\l}"];
subgraph cluster_Region_2096610475 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0015|onCheckedStateChanged()\l}"];
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000e|RETURN\lADDED_TO_REGION\l|return\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000f}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0018|ORIG_RETURN\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.internal.CheckableGroup.check((r2v0 'this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\> A[D('this' com.google.android.material.internal.CheckableGroup\<T extends com.google.android.material.internal.MaterialCheckable\<T\>\>), IMMUTABLE_TYPE, THIS]), (r3v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0018 \-\> B:11:?, CROSS_EDGE: B:16:0x0013 \-\> B:18:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: [T extends com.google.android.material.internal.MaterialCheckable\<T\>]\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_10 -> Node_12;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

