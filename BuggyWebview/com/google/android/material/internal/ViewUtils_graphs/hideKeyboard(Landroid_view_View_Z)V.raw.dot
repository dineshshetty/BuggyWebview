digraph "CFG forcom.google.android.material.internal.ViewUtils.hideKeyboard(Landroid\/view\/View;Z)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('useWindowInsetsController' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0010  (LINE:88)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|0x0002: INVOKE  (r0 I:androidx.core.view.WindowInsetsControllerCompat) = (r3 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getWindowInsetsController(android.view.View):androidx.core.view.WindowInsetsControllerCompat A[MD:(android.view.View):androidx.core.view.WindowInsetsControllerCompat (m)] (LINE:89)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('windowController' androidx.core.view.WindowInsetsControllerCompat)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0010  (LINE:90)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: INVOKE  (r1 I:int) =  type: STATIC call: androidx.core.view.WindowInsetsCompat.Type.ime():int A[MD:():int (m)] (LINE:91)\l0x000c: INVOKE  \l  (r0 I:androidx.core.view.WindowInsetsControllerCompat A[D('windowController' androidx.core.view.WindowInsetsControllerCompat)])\l  (r1 I:int)\l type: VIRTUAL call: androidx.core.view.WindowInsetsControllerCompat.hide(int):void A[MD:(int):void (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|RETURN\l|0x000f: RETURN    (LINE:92)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: INVOKE  (r0 I:android.view.inputmethod.InputMethodManager) = (r3 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: com.google.android.material.internal.ViewUtils.getInputMethodManager(android.view.View):android.view.inputmethod.InputMethodManager A[MD:(android.view.View):android.view.inputmethod.InputMethodManager (m)] (LINE:95)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('imm' android.view.inputmethod.InputMethodManager)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:?  (LINE:96)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|0x0016: INVOKE  (r1 I:android.os.IBinder) = (r3 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getWindowToken():android.os.IBinder A[MD:():android.os.IBinder (c)] (LINE:97)\l0x001a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001b: INVOKE  \l  (r0 I:android.view.inputmethod.InputMethodManager A[D('imm' android.view.inputmethod.InputMethodManager)])\l  (r1 I:android.os.IBinder)\l  (r2 I:int)\l type: VIRTUAL call: android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(android.os.IBinder, int):boolean A[MD:(android.os.IBinder, int):boolean (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x001e|RETURN\lORIG_RETURN\l|0x001e: RETURN    (LINE:99)\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x001e: RETURN   A[SYNTHETIC] (LINE:99)\l}"];
MethodNode[shape=record,label="{public static void com.google.android.material.internal.ViewUtils.hideKeyboard((r3 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('useWindowInsetsController' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x001e \-\> B:13:?, CROSS_EDGE: B:20:0x0014 \-\> B:22:0x001e, CROSS_EDGE: B:14:0x0000 \-\> B:19:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0010: r0 'windowController' Landroidx\/core\/view\/WindowInsetsControllerCompat;\l  0x0014\-0x001e: r0 'imm' Landroid\/view\/inputmethod\/InputMethodManager;\l  \-1 \-0x001e: r3 'view' Landroid\/view\/View;\l  \-1 \-0x001e: r4 'useWindowInsetsController' Z\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_13;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_13;
Node_23 -> Node_13;
}

