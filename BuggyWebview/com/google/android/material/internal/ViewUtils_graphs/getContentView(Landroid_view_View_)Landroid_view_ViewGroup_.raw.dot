digraph "CFG forcom.google.android.material.internal.ViewUtils.getContentView(Landroid\/view\/View;)Landroid\/view\/ViewGroup;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:370)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0001|0x0001: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('view' android.view.View)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0004 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0003|RETURN\l|0x0003: RETURN  (r0 I:android.view.ViewGroup)  (LINE:371)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|0x0004: INVOKE  (r1 I:android.view.View) = (r4 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getRootView():android.view.View A[MD:():android.view.View (c)] (LINE:374)\l0x0008: CONST  (r2 I:??[int, float, short, byte, char]) = (16908290(0x1020002, float:2.3877235E\-38) ??[int, float, short, byte, char])  (LINE:375)\l0x000b: INVOKE  (r2 I:android.view.View) = (r1 I:android.view.View A[D('rootView' android.view.View)]), (r2 I:int) type: VIRTUAL call: android.view.View.findViewById(int):android.view.View A[MD:\<T extends android.view.View\>:(int):T extends android.view.View (c)]\l0x000f: CHECK_CAST (r2 I:android.view.ViewGroup) = (android.view.ViewGroup) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|0x0011: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('contentView' android.view.ViewGroup)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0014  (LINE:376)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|RETURN\l|0x0013: RETURN  (r2 I:android.view.ViewGroup A[D('contentView' android.view.ViewGroup)])  (LINE:377)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|0x0014: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('rootView' android.view.View)]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('view' android.view.View)])  \-\> B:27:0x001e  (LINE:384)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|0x0016: INSTANCE_OF  (r3 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('rootView' android.view.View)]) android.view.ViewGroup \l}"];
Node_24 [shape=record,label="{24\:\ 0x0018|0x0018: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x001e \l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|0x001a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('rootView' android.view.View)])  (LINE:385)\l0x001b: CHECK_CAST (r0 I:android.view.ViewGroup) = (android.view.ViewGroup) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x001d|RETURN\l|0x001d: RETURN  (r0 I:android.view.ViewGroup) \l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|RETURN\l|0x001e: RETURN  (r0 I:android.view.ViewGroup)  (LINE:388)\l}"];
MethodNode[shape=record,label="{public static android.view.ViewGroup com.google.android.material.internal.ViewUtils.getContentView((r4 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0013 \-\> B:15:?, CROSS_EDGE: B:26:0x001d \-\> B:15:?, CROSS_EDGE: B:27:0x001e \-\> B:15:?, CROSS_EDGE: B:22:0x0014 \-\> B:27:0x001e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x001e: r1 'rootView' Landroid\/view\/View;\l  0x0011\-0x001e: r2 'contentView' Landroid\/view\/ViewGroup;\l  \-1 \-0x001e: r4 'view' Landroid\/view\/View;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_15;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_15;
}

