digraph "CFG forcom.google.android.material.internal.ViewUtils.setBoundsFromRect(Landroid\/view\/View;Landroid\/graphics\/Rect;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r2 I:android.graphics.Rect A[D('rect' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:107)\l0x0002: INVOKE  (r1 I:android.view.View A[D('view' android.view.View)]), (r0 I:int) type: VIRTUAL call: android.view.View.setLeft(int):void A[MD:(int):void (c)]\l0x0005: IGET  (r0 I:int) = (r2 I:android.graphics.Rect A[D('rect' android.graphics.Rect)]) android.graphics.Rect.top int  (LINE:108)\l0x0007: INVOKE  (r1 I:android.view.View A[D('view' android.view.View)]), (r0 I:int) type: VIRTUAL call: android.view.View.setTop(int):void A[MD:(int):void (c)]\l0x000a: IGET  (r0 I:int) = (r2 I:android.graphics.Rect A[D('rect' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:109)\l0x000c: INVOKE  (r1 I:android.view.View A[D('view' android.view.View)]), (r0 I:int) type: VIRTUAL call: android.view.View.setRight(int):void A[MD:(int):void (c)]\l0x000f: IGET  (r0 I:int) = (r2 I:android.graphics.Rect A[D('rect' android.graphics.Rect)]) android.graphics.Rect.bottom int  (LINE:110)\l0x0011: INVOKE  (r1 I:android.view.View A[D('view' android.view.View)]), (r0 I:int) type: VIRTUAL call: android.view.View.setBottom(int):void A[MD:(int):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|RETURN\l|0x0014: RETURN    (LINE:111)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static void com.google.android.material.internal.ViewUtils.setBoundsFromRect((r1 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:android.graphics.Rect A[D('rect' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0014: r1 'view' Landroid\/view\/View;\l  \-1 \-0x0014: r2 'rect' Landroid\/graphics\/Rect;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

