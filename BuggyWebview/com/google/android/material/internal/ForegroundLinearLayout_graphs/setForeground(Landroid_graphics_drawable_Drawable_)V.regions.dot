digraph "CFG forcom.google.android.material.internal.ForegroundLinearLayout.setForeground(Landroid\/graphics\/drawable\/Drawable;)V" {
subgraph cluster_Region_1693617268 {
label = "R(2:1|(1:(4:(1:4)|5|(3:7|(1:9)|(1:12))(1:16)|13)))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0000|android.graphics.drawable.Drawable android.graphics.drawable.Drawable r0 = r2.foreground\l}"];
subgraph cluster_Region_942123215 {
label = "R(1:(4:(1:4)|5|(3:7|(1:9)|(1:12))(1:16)|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_144909757 {
label = "IF [B:21:0x0002] THEN: R(4:(1:4)|5|(3:7|(1:9)|(1:12))(1:16)|13) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0002|if (r0 != r3) goto L3\l}"];
subgraph cluster_Region_210513556 {
label = "R(4:(1:4)|5|(3:7|(1:9)|(1:12))(1:16)|13)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_32788347 {
label = "IF [B:22:0x0004] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0004|if (r0 != null) goto L4\l}"];
subgraph cluster_Region_1670011440 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0006|r0.setCallback(null)\lunscheduleDrawable(r2.foreground)\l}"];
}
}
Node_24 [shape=record,label="{24\:\ 0x000f|r2.foreground = r3\lr2.foregroundBoundsChanged = true\l}"];
subgraph cluster_IfRegion_1425227159 {
label = "IF [B:25:0x0014] THEN: R(3:7|(1:9)|(1:12)) ELSE: R(1:16)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0014|if (r3 != null) goto L7\l}"];
subgraph cluster_Region_783418756 {
label = "R(3:7|(1:9)|(1:12))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0016|setWillNotDraw(false)\lr3.setCallback(r2)\l}"];
subgraph cluster_IfRegion_735490381 {
label = "IF [B:27:0x0021] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0021|if (r3.isStateful() != false) goto L9\l}"];
subgraph cluster_Region_1187234349 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0023|r3.setState(getDrawableState())\l}"];
}
}
subgraph cluster_IfRegion_194068711 {
label = "IF [B:30:0x002e] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x002e|if (r2.foregroundGravity == 119) goto L12\l}"];
subgraph cluster_Region_334228249 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0030|android.graphics.Rect android.graphics.Rect r0 = new android.graphics.Rect()\lr3.getPadding(r0)\l}"];
}
}
}
subgraph cluster_Region_900852276 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0039|setWillNotDraw(true)\l}"];
}
}
Node_33 [shape=record,label="{33\:\ 0x003c|requestLayout()\linvalidate()\l}"];
}
}
}
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x002a}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0042|ORIG_RETURN\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.internal.ForegroundLinearLayout.setForeground((r2v0 'this' com.google.android.material.internal.ForegroundLinearLayout A[IMMUTABLE_TYPE, THIS]), (r3v0 'drawable' android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:30:0x002e \-\> B:33:0x003c, CROSS_EDGE: B:27:0x0021 \-\> B:29:0x002a, CROSS_EDGE: B:32:0x0039 \-\> B:33:0x003c, CROSS_EDGE: B:22:0x0004 \-\> B:24:0x000f, CROSS_EDGE: B:21:0x0002 \-\> B:34:0x0042\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.setForeground(android.graphics.drawable.Drawable):void\}]\l}"];
MethodNode -> Node_18;Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_35[style=dashed];
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_32[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_30 -> Node_33[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_18 -> Node_20;
Node_29 -> Node_30;
Node_34 -> Node_19;
Node_35 -> Node_19;
}

