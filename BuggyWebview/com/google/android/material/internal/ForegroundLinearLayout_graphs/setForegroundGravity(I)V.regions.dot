digraph "CFG forcom.google.android.material.internal.ForegroundLinearLayout.setForegroundGravity(I)V" {
subgraph cluster_Region_728983830 {
label = "R(1:(1:(5:(1:5)|(1:8)|9|(1:13)|14)))";
node [shape=record,color=blue];
subgraph cluster_Region_1937310975 {
label = "R(1:(5:(1:5)|(1:8)|9|(1:13)|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1928258575 {
label = "IF [B:21:0x0002] THEN: R(5:(1:5)|(1:8)|9|(1:13)|14) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0002|if (r2.foregroundGravity != r3) goto L3\l}"];
subgraph cluster_Region_1219772460 {
label = "R(5:(1:5)|(1:8)|9|(1:13)|14)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2025831413 {
label = "IF [B:23:0x0008] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0008|if ((8388615 & r3) == 0) goto L5\l}"];
subgraph cluster_Region_1129973473 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x000a|r3 \|= androidx.core.view.GravityCompat.START\l}"];
}
}
subgraph cluster_IfRegion_1183931417 {
label = "IF [B:26:0x0010] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0010|if ((r3 & 112) == 0) goto L8\l}"];
subgraph cluster_Region_743358919 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0012|r3 \|= 48\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x0014|PHI: r3 \l  PHI: (r3v2 'foregroundGravity' int) = (r3v1 'foregroundGravity' int), (r3v3 'foregroundGravity' int) binds: [B:26:0x0010, B:27:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|r2.foregroundGravity = r3\l}"];
subgraph cluster_IfRegion_690730920 {
label = "IF [B:29:0x0018, B:31:0x001c] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0018|if (r3 == 119) goto L11\l}"];
Node_31 [shape=record,label="{31\:\ 0x001c|ADDED_TO_REGION\l|if (r2.foreground != null) goto L13\l}"];
subgraph cluster_Region_280110951 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x001e|android.graphics.Rect android.graphics.Rect r0 = new android.graphics.Rect()\lr2.foreground.getPadding(r0)\l}"];
}
}
Node_33 [shape=record,label="{33\:\ 0x0028|requestLayout()\l}"];
}
}
}
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0000}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0004}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x000e|PHI: r3 \l  PHI: (r3v1 'foregroundGravity' int) = (r3v0 'foregroundGravity' int), (r3v4 'foregroundGravity' int) binds: [B:23:0x0008, B:24:0x000a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x001a}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x002b|ORIG_RETURN\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.internal.ForegroundLinearLayout.setForegroundGravity((r2v0 'this' com.google.android.material.internal.ForegroundLinearLayout A[IMMUTABLE_TYPE, THIS]), (r3v0 'foregroundGravity' int A[D('foregroundGravity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:31:0x001c \-\> B:33:0x0028, CROSS_EDGE: B:29:0x0018 \-\> B:33:0x0028, CROSS_EDGE: B:26:0x0010 \-\> B:28:0x0014, CROSS_EDGE: B:23:0x0008 \-\> B:25:0x000e, CROSS_EDGE: B:21:0x0002 \-\> B:34:0x002b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.setForegroundGravity(int):void\}]\l}"];
MethodNode -> Node_18;Node_21 -> Node_22;
Node_21 -> Node_35[style=dashed];
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_33[style=dashed];
Node_31 -> Node_32;
Node_31 -> Node_33[style=dashed];
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_25 -> Node_26;
Node_30 -> Node_31;
Node_34 -> Node_19;
Node_35 -> Node_19;
}

