digraph "CFG forcom.google.android.material.internal.BaselineLayout.onLayout(ZIIII)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY])  (LINE:85)\l0x0001: INVOKE  (r1 I:int) = (r14 I:com.google.android.material.internal.BaselineLayout) type: VIRTUAL call: com.google.android.material.internal.BaselineLayout.getChildCount():int A[MD:():int (c)]\l0x0005: INVOKE  (r2 I:int) = (r14 I:com.google.android.material.internal.BaselineLayout) type: VIRTUAL call: com.google.android.material.internal.BaselineLayout.getPaddingLeft():int A[MD:():int (s)] (LINE:86)\l0x0009: ARITH  (r3 I:int) = (r18 I:int A[D('right' int)]) \- (r16 I:int A[D('left' int)])  (LINE:87)\l0x000b: INVOKE  (r4 I:int) = (r14 I:com.google.android.material.internal.BaselineLayout) type: VIRTUAL call: com.google.android.material.internal.BaselineLayout.getPaddingRight():int A[MD:():int (s)]\l0x000f: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) \l0x0010: ARITH  (r4 I:int) = (r3 I:int A[D('parentRight' int)]) \- (r2 I:int A[D('parentLeft' int)])  (LINE:88)\l0x0012: INVOKE  (r5 I:int) = (r14 I:com.google.android.material.internal.BaselineLayout) type: VIRTUAL call: com.google.android.material.internal.BaselineLayout.getPaddingTop():int A[MD:():int (s)] (LINE:89)\l0x0016: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:91)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|LOOP_START\lLOOP:0: B:3:0x0017\-\>B:14:0x004f\l|0x0017: IF  (r6 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:16:0x0052 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: INVOKE  (r7 I:android.view.View) = (r14 I:com.google.android.material.internal.BaselineLayout), (r6 I:int A[D('i' int)]) type: VIRTUAL call: com.google.android.material.internal.BaselineLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:92)\l0x001d: INVOKE  (r8 I:int) = (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)] (LINE:93)\l0x0021: CONST  (r9 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0026 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: INVOKE  (r8 I:int) = (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:97)\l0x002a: INVOKE  (r9 I:int) = (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:98)\l0x002e: ARITH  (r10 I:int) = (r4 I:int A[D('parentContentWidth' int)]) \- (r8 I:int A[D('width' int)])  (LINE:100)\l0x0030: ARITH  (r10 I:int) = (r10 I:int) \/ (2 int) \l0x0032: ARITH  (r10 I:int) = (r10 I:int) + (r2 I:int A[D('parentLeft' int)]) \l0x0033: IGET  (r11 I:int) = (r0 I:com.google.android.material.internal.BaselineLayout) com.google.android.material.internal.BaselineLayout.baseline int  (LINE:102)\l0x0035: CONST  (r12 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|0x0036: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0047 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: INVOKE  (r11 I:int) = (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getBaseline():int A[MD:():int (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|0x003c: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0047 \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|0x003e: IGET  (r11 I:int) = (r0 I:com.google.android.material.internal.BaselineLayout) com.google.android.material.internal.BaselineLayout.baseline int  (LINE:103)\l0x0040: ARITH  (r11 I:int) = (r11 I:int) + (r5 I:int A[D('parentTop' int)]) \l0x0041: INVOKE  (r12 I:int) = (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getBaseline():int A[MD:():int (c)]\l0x0045: ARITH  (r11 I:int) = (r11 I:int) \- (r12 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|0x0048: ARITH  (r12 I:int) = (r10 I:int A[D('childLeft' int)]) + (r8 I:int A[D('width' int)])  (LINE:108)\l0x004a: ARITH  (r13 I:int) = (r11 I:int A[D('childTop' int)]) + (r9 I:int A[D('height' int)]) \l0x004c: INVOKE  \l  (r7 I:android.view.View A[D('child' android.view.View)])\l  (r10 I:int A[D('childLeft' int)])\l  (r11 I:int A[D('childTop' int)])\l  (r12 I:int)\l  (r13 I:int)\l type: VIRTUAL call: android.view.View.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x004f|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x004f|LOOP_END\lLOOP:0: B:3:0x0017\-\>B:14:0x004f\l|0x004f: ARITH  (r6 I:int) = (r6 I:int A[D('i' int)]) + (1 int)  (LINE:91)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0047|0x0047: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childTop' int)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('parentTop' int)])  (LINE:105)\l}"];
Node_18 [shape=record,label="{18\:\ 0x004f|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0052|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0052|RETURN\l|0x0052: RETURN    (LINE:110)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.internal.BaselineLayout.onLayout((r14 'this' I:com.google.android.material.internal.BaselineLayout A[IMMUTABLE_TYPE, THIS]), (r15 I:boolean A[D('changed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:14:0x004f \-\> B:3:0x0017, CROSS_EDGE: B:12:0x0047 \-\> B:13:0x0048, CROSS_EDGE: B:8:0x0036 \-\> B:12:0x0047, CROSS_EDGE: B:5:0x0023 \-\> B:14:0x004f\lDebug Info:\l  0x0046\-0x0047: r11 'childTop' I\l  0x001d\-0x004f: r7 'child' Landroid\/view\/View;\l  0x002a\-0x004f: r8 'width' I\l  0x002e\-0x004f: r9 'height' I\l  0x0033\-0x004f: r10 'childLeft' I\l  0x0048\-0x004f: r11 'childTop' I\l  0x0017\-0x0052: r6 'i' I\l  0x0005\-0x0052: r1 'count' I\l  0x0009\-0x0052: r2 'parentLeft' I\l  0x0010\-0x0052: r3 'parentRight' I\l  0x0012\-0x0052: r4 'parentContentWidth' I\l  0x0016\-0x0052: r5 'parentTop' I\l  \-1 \-0x0052: r15 'changed' Z\l  \-1 \-0x0052: r16 'left' I\l  \-1 \-0x0052: r17 'top' I\l  \-1 \-0x0052: r18 'right' I\l  \-1 \-0x0052: r19 'bottom' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onLayout(boolean, int, int, int, int):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_16;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_18[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_13 -> Node_17;
Node_17 -> Node_14;
Node_14 -> Node_3;
Node_12 -> Node_13;
Node_18 -> Node_14;
Node_16 -> Node_15;
Node_15 -> Node_1;
}

