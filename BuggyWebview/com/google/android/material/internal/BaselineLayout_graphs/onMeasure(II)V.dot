digraph "CFG forcom.google.android.material.internal.BaselineLayout.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|int r0 = getChildCount()\lr1 = 0\lr2 = 0\lr3 = \-1\lr4 = \-1\lr5 = 0\lr6 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|LOOP_START\lLOOP:0: B:3:0x000a\-\>B:12:0x0048\lPHI: r1 r2 r3 r4 r5 r6 \l  PHI: (r1v1 'maxWidth' int) = (r1v0 'maxWidth' int), (r1v3 'maxWidth' int) binds: [B:2:0x0000, B:12:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'maxHeight' int) = (r2v0 'maxHeight' int), (r2v5 'maxHeight' int) binds: [B:2:0x0000, B:12:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'maxChildBaseline' int) = (r3v0 'maxChildBaseline' int), (r3v2 'maxChildBaseline' int) binds: [B:2:0x0000, B:12:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'maxChildDescent' int) = (r4v0 'maxChildDescent' int), (r4v3 'maxChildDescent' int) binds: [B:2:0x0000, B:12:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'childState' int) = (r5v0 'childState' int), (r5v2 'childState' int) binds: [B:2:0x0000, B:12:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 'i' int) = (r6v0 'i' int), (r6v7 'i' int) binds: [B:2:0x0000, B:12:0x0048] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r6 \>= r0) goto L13\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|android.view.View r8 = getChildAt(r6)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|if (r8.getVisibility() != 8) goto L6\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|measureChild(r8, r12, r13)\lint r9 = r8.getBaseline()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|if (r9 == (\-1)) goto L9\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|int r3 = java.lang.Math.max(r3, r9)\lint r4 = java.lang.Math.max(r4, r8.getMeasuredHeight() \- r9)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|PHI: r3 r4 \l  PHI: (r3v3 'maxChildBaseline' int) = (r3v1 'maxChildBaseline' int), (r3v4 'maxChildBaseline' int) binds: [B:9:0x0021, B:10:0x0023] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v4 'maxChildDescent' int) = (r4v1 'maxChildDescent' int), (r4v5 'maxChildDescent' int) binds: [B:9:0x0021, B:10:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|int r1 = java.lang.Math.max(r1, r8.getMeasuredWidth())\lint r2 = java.lang.Math.max(r2, r8.getMeasuredHeight())\lint r5 = android.view.View.combineMeasuredStates(r5, r8.getMeasuredState())\l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0048|LOOP_END\lLOOP:0: B:3:0x000a\-\>B:12:0x0048\lPHI: r1 r2 r3 r4 r5 \l  PHI: (r1v3 'maxWidth' int) = (r1v1 'maxWidth' int), (r1v4 'maxWidth' int) binds: [B:19:0x0048, B:18:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v5 'maxHeight' int) = (r2v1 'maxHeight' int), (r2v6 'maxHeight' int) binds: [B:19:0x0048, B:18:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 'maxChildBaseline' int) = (r3v1 'maxChildBaseline' int), (r3v3 'maxChildBaseline' int) binds: [B:19:0x0048, B:18:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 'maxChildDescent' int) = (r4v1 'maxChildDescent' int), (r4v4 'maxChildDescent' int) binds: [B:19:0x0048, B:18:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 'childState' int) = (r5v1 'childState' int), (r5v3 'childState' int) binds: [B:19:0x0048, B:18:0x0048] A[DONT_GENERATE, DONT_INLINE]\l|int r6 = r6 + 1\l}"];
Node_19 [shape=record,label="{19\:\ 0x0048|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x004b|if (r3 == (\-1)) goto L16\l}"];
Node_14 [shape=record,label="{14\:\ 0x004d|int r2 = java.lang.Math.max(r2, r3 + java.lang.Math.max(r4, getPaddingBottom()))\lr11.baseline = r3\l}"];
Node_15 [shape=record,label="{15\:\ 0x005d|PHI: r2 \l  PHI: (r2v2 'maxHeight' int) = (r2v1 'maxHeight' int), (r2v4 'maxHeight' int) binds: [B:13:0x004b, B:14:0x004d] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = java.lang.Math.max(r2, getSuggestedMinimumHeight())\lsetMeasuredDimension(android.view.View.resolveSizeAndState(java.lang.Math.max(r1, getSuggestedMinimumWidth()), r12, r5), android.view.View.resolveSizeAndState(r2, r13, r5 \<\< 16))\l}"];
Node_16 [shape=record,label="{16\:\ 0x007b|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.internal.BaselineLayout.onMeasure((r11v0 'this' com.google.android.material.internal.BaselineLayout A[IMMUTABLE_TYPE, THIS]), (r12v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:12:0x0048 \-\> B:3:0x000a, CROSS_EDGE: B:9:0x0021 \-\> B:11:0x0030, CROSS_EDGE: B:6:0x0017 \-\> B:12:0x0048, CROSS_EDGE: B:13:0x004b \-\> B:15:0x005d\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_19[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_18;
Node_18 -> Node_12;
Node_12 -> Node_3;
Node_19 -> Node_12;
Node_17 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_1;
}

