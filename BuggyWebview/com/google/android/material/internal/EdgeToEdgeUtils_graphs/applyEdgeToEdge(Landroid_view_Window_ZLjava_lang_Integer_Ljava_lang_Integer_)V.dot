digraph "CFG forcom.google.android.material.internal.EdgeToEdgeUtils.applyEdgeToEdge(Landroid\/view\/Window;ZLjava\/lang\/Integer;Ljava\/lang\/Integer;)V" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000}"];
Node_29 [shape=record,label="{29\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L5\l}"];
Node_30 [shape=record,label="{30\:\ 0x0006|RETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0007|r0 = false\l}"];
Node_32 [shape=record,label="{32\:\ 0x0009|if (r7 == null) goto L23\l}"];
Node_33 [shape=record,label="{33\:\ 0x000b}"];
Node_34 [shape=record,label="{34\:\ 0x000f|if (r7.intValue() != 0) goto L9\l}"];
Node_36 [shape=record,label="{36\:\ 0x0012|r2 = false\l}"];
Node_38 [shape=record,label="{38\:\ 0x0015|PHI: r2 \l  PHI: (r2v1 'useDefaultBackgroundColorForStatusBar' boolean) = (r2v0 'useDefaultBackgroundColorForStatusBar' boolean), (r2v3 'useDefaultBackgroundColorForStatusBar' boolean) binds: [B:37:0x0014, B:36:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|if (r8 == null) goto L22\l}"];
Node_39 [shape=record,label="{39\:\ 0x0017}"];
Node_40 [shape=record,label="{40\:\ 0x001b|if (r8.intValue() != 0) goto L13\l}"];
Node_42 [shape=record,label="{42\:\ 0x001e|PHI: r0 \l  PHI: (r0v3 'useDefaultBackgroundColorForNavigationBar' boolean) = (r0v2 'useDefaultBackgroundColorForNavigationBar' boolean), (r0v1 'useDefaultBackgroundColorForNavigationBar' boolean) binds: [B:41:0x001d, B:40:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 != false) goto L17\l}"];
Node_43 [shape=record,label="{43\:\ 0x0020|if (r0 == false) goto L15\l}"];
Node_50 [shape=record,label="{50\:\ 0x003c|PHI: r7 r8 \l  PHI: (r7v3 'statusBarOverlapBackgroundColor' java.lang.Integer) = (r7v1 'statusBarOverlapBackgroundColor' java.lang.Integer), (r7v1 'statusBarOverlapBackgroundColor' java.lang.Integer), (r7v0 'statusBarOverlapBackgroundColor' java.lang.Integer) binds: [B:48:0x0036, B:49:0x0038, B:43:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v2 'navigationBarOverlapBackgroundColor' java.lang.Integer) = (r8v0 'navigationBarOverlapBackgroundColor' java.lang.Integer), (r8v1 'navigationBarOverlapBackgroundColor' java.lang.Integer), (r8v0 'navigationBarOverlapBackgroundColor' java.lang.Integer) binds: [B:48:0x0036, B:49:0x0038, B:43:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|androidx.core.view.WindowCompat.setDecorFitsSystemWindows(r5, r6 ^ true)\lint r1 = getStatusBarColor(r5.getContext(), r6)\lint r3 = getNavigationBarColor(r5.getContext(), r6)\lr5.setStatusBarColor(r1)\lr5.setNavigationBarColor(r3)\lsetLightStatusBar(r5, isUsingLightSystemBar(r1, com.google.android.material.color.MaterialColors.isColorLight(r7.intValue())))\lsetLightNavigationBar(r5, isUsingLightSystemBar(r3, com.google.android.material.color.MaterialColors.isColorLight(r8.intValue())))\l}"];
Node_51 [shape=record,label="{51\:\ 0x0077|RETURN\l|return\l}"];
Node_45 [shape=record,label="{45\:\ 0x0023|int r1 = com.google.android.material.color.MaterialColors.getColor(r5.getContext(), 16842801, androidx.core.view.ViewCompat.MEASURED_STATE_MASK)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0030|if (r2 == false) goto L20\l}"];
Node_47 [shape=record,label="{47\:\ 0x0032|java.lang.Integer r7 = java.lang.Integer.valueOf(r1)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0036|PHI: r7 \l  PHI: (r7v1 'statusBarOverlapBackgroundColor' java.lang.Integer) = (r7v0 'statusBarOverlapBackgroundColor' java.lang.Integer), (r7v2 'statusBarOverlapBackgroundColor' java.lang.Integer) binds: [B:46:0x0030, B:47:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L15\l}"];
Node_49 [shape=record,label="{49\:\ 0x0038|java.lang.Integer r8 = java.lang.Integer.valueOf(r1)\l}"];
Node_41 [shape=record,label="{41\:\ 0x001d|r0 = true\l}"];
Node_37 [shape=record,label="{37\:\ 0x0014|r2 = true\l}"];
MethodNode[shape=record,label="{public static void com.google.android.material.internal.EdgeToEdgeUtils.applyEdgeToEdge((r5v0 'window' android.view.Window A[D('window' android.view.Window), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'edgeToEdgeEnabled' boolean A[D('edgeToEdgeEnabled' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'statusBarOverlapBackgroundColor' java.lang.Integer A[D('statusBarOverlapBackgroundColor' java.lang.Integer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'navigationBarOverlapBackgroundColor' java.lang.Integer A[D('navigationBarOverlapBackgroundColor' java.lang.Integer), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:51:0x0077 \-\> B:27:?, CROSS_EDGE: B:48:0x0036 \-\> B:50:0x003c, CROSS_EDGE: B:46:0x0030 \-\> B:48:0x0036, CROSS_EDGE: B:43:0x0020 \-\> B:50:0x003c, CROSS_EDGE: B:42:0x001e \-\> B:45:0x0023, CROSS_EDGE: B:40:0x001b \-\> B:42:0x001e, CROSS_EDGE: B:38:0x0015 \-\> B:41:0x001d, CROSS_EDGE: B:37:0x0014 \-\> B:38:0x0015, CROSS_EDGE: B:32:0x0009 \-\> B:37:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_27;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_34;
Node_34 -> Node_36;
Node_34 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_41;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_45;
Node_43 -> Node_45[style=dashed];
Node_43 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_27;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_41 -> Node_42;
Node_37 -> Node_38;
}

