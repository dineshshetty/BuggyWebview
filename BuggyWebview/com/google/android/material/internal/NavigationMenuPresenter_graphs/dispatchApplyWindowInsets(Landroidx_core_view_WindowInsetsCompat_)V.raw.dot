digraph "CFG forcom.google.android.material.internal.NavigationMenuPresenter.dispatchApplyWindowInsets(Landroidx\/core\/view\/WindowInsetsCompat;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r6 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat)]) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.getSystemWindowInsetTop():int A[MD:():int (m)] (LINE:427)\l0x0004: IGET  (r1 I:int) = (r5 I:com.google.android.material.internal.NavigationMenuPresenter) com.google.android.material.internal.NavigationMenuPresenter.paddingTopDefault int  (LINE:428)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0006|0x0006: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('top' int)])  \-\> B:12:0x000d \l}"];
Node_11 [shape=record,label="{11\:\ 0x0008|0x0008: IPUT  (r0 I:int A[D('top' int)]), (r5 I:com.google.android.material.internal.NavigationMenuPresenter) com.google.android.material.internal.NavigationMenuPresenter.paddingTopDefault int  (LINE:429)\l0x000a: INVOKE  (r5 I:com.google.android.material.internal.NavigationMenuPresenter) type: DIRECT call: com.google.android.material.internal.NavigationMenuPresenter.updateTopPadding():void A[MD:():void (m)] (LINE:431)\l}"];
Node_12 [shape=record,label="{12\:\ 0x000d|0x000d: IGET  (r1 I:com.google.android.material.internal.NavigationMenuView) = (r5 I:com.google.android.material.internal.NavigationMenuPresenter) com.google.android.material.internal.NavigationMenuPresenter.menuView com.google.android.material.internal.NavigationMenuView  (LINE:435)\l0x000f: INVOKE  (r2 I:int) = (r1 I:com.google.android.material.internal.NavigationMenuView) type: VIRTUAL call: com.google.android.material.internal.NavigationMenuView.getPaddingTop():int A[MD:():int (s)]\l0x0013: INVOKE  (r3 I:int) = (r6 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat)]) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.getSystemWindowInsetBottom():int A[MD:():int (m)]\l0x0017: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: INVOKE  (r1 I:com.google.android.material.internal.NavigationMenuView), (r4 I:int), (r2 I:int), (r4 I:int), (r3 I:int) type: VIRTUAL call: com.google.android.material.internal.NavigationMenuView.setPadding(int, int, int, int):void A[MD:(int, int, int, int):void (s)]\l0x001b: IGET  (r1 I:android.widget.LinearLayout) = (r5 I:com.google.android.material.internal.NavigationMenuPresenter) com.google.android.material.internal.NavigationMenuPresenter.headerLayout android.widget.LinearLayout  (LINE:436)\l0x001d: INVOKE  \l  (r1 I:android.view.View)\l  (r6 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat)])\l type: STATIC call: androidx.core.view.ViewCompat.dispatchApplyWindowInsets(android.view.View, androidx.core.view.WindowInsetsCompat):androidx.core.view.WindowInsetsCompat A[MD:(android.view.View, androidx.core.view.WindowInsetsCompat):androidx.core.view.WindowInsetsCompat (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|RETURN\l|0x0020: RETURN    (LINE:437)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.internal.NavigationMenuPresenter.dispatchApplyWindowInsets((r5 'this' I:com.google.android.material.internal.NavigationMenuPresenter A[IMMUTABLE_TYPE, THIS]), (r6 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0006 \-\> B:12:0x000d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0020: r0 'top' I\l  \-1 \-0x0020: r6 'insets' Landroidx\/core\/view\/WindowInsetsCompat;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

