digraph "CFG forcom.google.android.material.internal.NavigationMenuPresenter.NavigationMenuAdapter.getRowCount()I" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.internal.NavigationMenuPresenter) = (r4 I:com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter) com.google.android.material.internal.NavigationMenuPresenter.NavigationMenuAdapter.this$0 com.google.android.material.internal.NavigationMenuPresenter  (LINE:856)\l0x0002: IGET  (r0 I:android.widget.LinearLayout) = (r0 I:com.google.android.material.internal.NavigationMenuPresenter) com.google.android.material.internal.NavigationMenuPresenter.headerLayout android.widget.LinearLayout \l0x0004: INVOKE  (r0 I:int) = (r0 I:android.widget.LinearLayout) type: VIRTUAL call: android.widget.LinearLayout.getChildCount():int A[MD:():int (c)]\l0x0008: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x000d \l}"];
Node_22 [shape=record,label="{22\:\ 0x000b|0x000b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|0x000e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:857)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|LOOP_START\lLOOP:0: B:25:0x000f\-\>B:31:0x0027\l|0x000f: IGET  (r3 I:com.google.android.material.internal.NavigationMenuPresenter) = (r4 I:com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter) com.google.android.material.internal.NavigationMenuPresenter.NavigationMenuAdapter.this$0 com.google.android.material.internal.NavigationMenuPresenter \l0x0011: IGET  (r3 I:com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter) = (r3 I:com.google.android.material.internal.NavigationMenuPresenter) com.google.android.material.internal.NavigationMenuPresenter.adapter com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter \l0x0013: INVOKE  (r3 I:int) = (r3 I:com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter) type: VIRTUAL call: com.google.android.material.internal.NavigationMenuPresenter.NavigationMenuAdapter.getItemCount():int A[MD:():int (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0017|0x0017: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:33:0x002a \l}"];
Node_27 [shape=record,label="{27\:\ 0x0019|0x0019: IGET  (r3 I:com.google.android.material.internal.NavigationMenuPresenter) = (r4 I:com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter) com.google.android.material.internal.NavigationMenuPresenter.NavigationMenuAdapter.this$0 com.google.android.material.internal.NavigationMenuPresenter  (LINE:858)\l0x001b: IGET  (r3 I:com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter) = (r3 I:com.google.android.material.internal.NavigationMenuPresenter) com.google.android.material.internal.NavigationMenuPresenter.adapter com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter \l0x001d: INVOKE  (r3 I:int) = (r3 I:com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter), (r2 I:int A[D('i' int)]) type: VIRTUAL call: com.google.android.material.internal.NavigationMenuPresenter.NavigationMenuAdapter.getItemViewType(int):int A[MD:(int):int (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0021|0x0021: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0025  (LINE:859)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0023|0x0023: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0027 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0027|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0027|LOOP_END\lLOOP:0: B:25:0x000f\-\>B:31:0x0027\l|0x0027: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:857)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0025|0x0025: ARITH  (r0 I:int) = (r0 I:int A[D('itemCount' int)]) + (1 int)  (LINE:860)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0027|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x002a|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x002a|RETURN\l|0x002a: RETURN  (r0 I:int A[D('itemCount' int)])  (LINE:863)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|0x000d: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{int com.google.android.material.internal.NavigationMenuPresenter.NavigationMenuAdapter.getRowCount((r4 'this' I:com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:31:0x0027 \-\> B:25:0x000f, CROSS_EDGE: B:29:0x0023 \-\> B:31:0x0027, CROSS_EDGE: B:28:0x0021 \-\> B:30:0x0025, CROSS_EDGE: B:23:0x000d \-\> B:24:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x0027: r3 'type' I\l  0x000f\-0x002a: r2 'i' I\l  0x000e\-0x002a: r0 'itemCount' I\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_33;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_35;
Node_35 -> Node_31;
Node_31 -> Node_25;
Node_30 -> Node_34;
Node_34 -> Node_31;
Node_33 -> Node_32;
Node_32 -> Node_19;
Node_23 -> Node_24;
}

