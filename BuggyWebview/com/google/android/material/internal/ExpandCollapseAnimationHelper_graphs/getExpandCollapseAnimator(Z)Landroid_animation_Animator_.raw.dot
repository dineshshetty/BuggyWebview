digraph "CFG forcom.google.android.material.internal.ExpandCollapseAnimationHelper.getExpandCollapseAnimator(Z)Landroid\/animation\/Animator;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:android.view.View) = (r6 I:com.google.android.material.internal.ExpandCollapseAnimationHelper) com.google.android.material.internal.ExpandCollapseAnimationHelper.collapsedView android.view.View  (LINE:161)\l0x0002: IGET  (r1 I:int) = (r6 I:com.google.android.material.internal.ExpandCollapseAnimationHelper) com.google.android.material.internal.ExpandCollapseAnimationHelper.collapsedViewOffsetY int \l0x0004: INVOKE  (r0 I:android.graphics.Rect) = (r0 I:android.view.View), (r1 I:int) type: STATIC call: com.google.android.material.internal.ViewUtils.calculateRectFromBounds(android.view.View, int):android.graphics.Rect A[MD:(android.view.View, int):android.graphics.Rect (m)]\l0x0008: IGET  (r1 I:android.view.View) = (r6 I:com.google.android.material.internal.ExpandCollapseAnimationHelper) com.google.android.material.internal.ExpandCollapseAnimationHelper.expandedView android.view.View  (LINE:162)\l0x000a: IGET  (r2 I:int) = (r6 I:com.google.android.material.internal.ExpandCollapseAnimationHelper) com.google.android.material.internal.ExpandCollapseAnimationHelper.expandedViewOffsetY int \l0x000c: INVOKE  (r1 I:android.graphics.Rect) = (r1 I:android.view.View), (r2 I:int) type: STATIC call: com.google.android.material.internal.ViewUtils.calculateRectFromBounds(android.view.View, int):android.graphics.Rect A[MD:(android.view.View, int):android.graphics.Rect (m)]\l0x0010: NEW_INSTANCE  (r2 I:android.graphics.Rect) =  android.graphics.Rect  (LINE:163)\l0x0012: INVOKE  (r2 I:android.graphics.Rect), (r0 I:android.graphics.Rect A[D('fromBounds' android.graphics.Rect)]) type: DIRECT call: android.graphics.Rect.\<init\>(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (c)]\l0x0015: NEW_INSTANCE  (r3 I:com.google.android.material.internal.RectEvaluator) =  com.google.android.material.internal.RectEvaluator  (LINE:165)\l0x0017: INVOKE  \l  (r3 I:com.google.android.material.internal.RectEvaluator)\l  (r2 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l type: DIRECT call: com.google.android.material.internal.RectEvaluator.\<init\>(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (m)]\l0x001a: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x001b: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x001d: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001e: APUT  \l  (r4 I:??[OBJECT, ARRAY][])\l  (r5 I:??[int, short, byte, char])\l  (r0 I:??[OBJECT, ARRAY] A[D('fromBounds' android.graphics.Rect)])\l \l0x0020: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0021: APUT  \l  (r4 I:??[OBJECT, ARRAY][])\l  (r5 I:??[int, short, byte, char])\l  (r1 I:??[OBJECT, ARRAY] A[D('toBounds' android.graphics.Rect)])\l \l0x0023: INVOKE  (r3 I:android.animation.ValueAnimator) = (r3 I:android.animation.TypeEvaluator), (r4 I:java.lang.Object[]) type: STATIC call: android.animation.ValueAnimator.ofObject(android.animation.TypeEvaluator, java.lang.Object[]):android.animation.ValueAnimator A[MD:(android.animation.TypeEvaluator, java.lang.Object[]):android.animation.ValueAnimator VARARG (c)] (LINE:166)\l0x0027: NEW_INSTANCE  (r4 I:com.google.android.material.internal.ExpandCollapseAnimationHelper$$ExternalSyntheticLambda0) =  com.google.android.material.internal.ExpandCollapseAnimationHelper$$ExternalSyntheticLambda0  (LINE:167)\l0x0029: INVOKE  \l  (r4 I:com.google.android.material.internal.ExpandCollapseAnimationHelper$$ExternalSyntheticLambda0)\l  (r6 I:com.google.android.material.internal.ExpandCollapseAnimationHelper)\l  (r2 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l type: DIRECT call: com.google.android.material.internal.ExpandCollapseAnimationHelper$$ExternalSyntheticLambda0.\<init\>(com.google.android.material.internal.ExpandCollapseAnimationHelper, android.graphics.Rect):void A[MD:(com.google.android.material.internal.ExpandCollapseAnimationHelper, android.graphics.Rect):void (m)]\l0x002c: INVOKE  \l  (r3 I:android.animation.ValueAnimator A[D('animator' android.animation.ValueAnimator)])\l  (r4 I:android.animation.ValueAnimator$AnimatorUpdateListener)\l type: VIRTUAL call: android.animation.ValueAnimator.addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener):void A[MD:(android.animation.ValueAnimator$AnimatorUpdateListener):void (c)]\l0x002f: IGET  (r4 I:android.animation.ValueAnimator$AnimatorUpdateListener) = (r6 I:com.google.android.material.internal.ExpandCollapseAnimationHelper) com.google.android.material.internal.ExpandCollapseAnimationHelper.additionalUpdateListener android.animation.ValueAnimator$AnimatorUpdateListener  (LINE:168)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0036 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: INVOKE  \l  (r3 I:android.animation.ValueAnimator A[D('animator' android.animation.ValueAnimator)])\l  (r4 I:android.animation.ValueAnimator$AnimatorUpdateListener)\l type: VIRTUAL call: android.animation.ValueAnimator.addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener):void A[MD:(android.animation.ValueAnimator$AnimatorUpdateListener):void (c)] (LINE:169)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|0x0036: IGET  (r4 I:long) = (r6 I:com.google.android.material.internal.ExpandCollapseAnimationHelper) com.google.android.material.internal.ExpandCollapseAnimationHelper.duration long  (LINE:171)\l0x0038: INVOKE  (r3 I:android.animation.ValueAnimator A[D('animator' android.animation.ValueAnimator)]), (r4 I:long) type: VIRTUAL call: android.animation.ValueAnimator.setDuration(long):android.animation.ValueAnimator A[MD:(long):android.animation.ValueAnimator (c)]\l0x003b: SGET  (r4 I:android.animation.TimeInterpolator) =  com.google.android.material.animation.AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR android.animation.TimeInterpolator  (LINE:172)\l0x003d: INVOKE  (r4 I:android.animation.TimeInterpolator) = (r7 I:boolean A[D('expand' boolean)]), (r4 I:android.animation.TimeInterpolator) type: STATIC call: com.google.android.material.internal.ReversableAnimatedValueInterpolator.of(boolean, android.animation.TimeInterpolator):android.animation.TimeInterpolator A[MD:(boolean, android.animation.TimeInterpolator):android.animation.TimeInterpolator (m)] (LINE:173)\l0x0041: INVOKE  \l  (r3 I:android.animation.ValueAnimator A[D('animator' android.animation.ValueAnimator)])\l  (r4 I:android.animation.TimeInterpolator)\l type: VIRTUAL call: android.animation.ValueAnimator.setInterpolator(android.animation.TimeInterpolator):void A[MD:(android.animation.TimeInterpolator):void (c)] (LINE:172)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|RETURN\l|0x0044: RETURN  (r3 I:android.animation.Animator A[D('animator' android.animation.ValueAnimator)])  (LINE:175)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private android.animation.Animator com.google.android.material.internal.ExpandCollapseAnimationHelper.getExpandCollapseAnimator((r6 'this' I:com.google.android.material.internal.ExpandCollapseAnimationHelper A[IMMUTABLE_TYPE, THIS]), (r7 I:boolean A[D('expand' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0031 \-\> B:12:0x0036\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x0044: r0 'fromBounds' Landroid\/graphics\/Rect;\l  0x0010\-0x0044: r1 'toBounds' Landroid\/graphics\/Rect;\l  0x0015\-0x0044: r2 'bounds' Landroid\/graphics\/Rect;\l  0x0027\-0x0044: r3 'animator' Landroid\/animation\/ValueAnimator;\l  \-1 \-0x0044: r7 'expand' Z\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

