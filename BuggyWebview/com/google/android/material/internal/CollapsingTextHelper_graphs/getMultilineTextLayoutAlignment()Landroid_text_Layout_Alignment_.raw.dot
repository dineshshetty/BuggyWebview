digraph "CFG forcom.google.android.material.internal.CollapsingTextHelper.getMultilineTextLayoutAlignment()Landroid\/text\/Layout$Alignment;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r2 I:com.google.android.material.internal.CollapsingTextHelper) com.google.android.material.internal.CollapsingTextHelper.expandedTextGravity int  (LINE:1097)\l0x0002: IGET  (r1 I:boolean) = (r2 I:com.google.android.material.internal.CollapsingTextHelper) com.google.android.material.internal.CollapsingTextHelper.isRtl boolean  (LINE:1100)\l0x0004: INVOKE  (r0 I:int) = (r0 I:int), (r1 I:int) type: STATIC call: androidx.core.view.GravityCompat.getAbsoluteGravity(int, int):int A[MD:(int, int):int (m)] (LINE:1098)\l0x0008: ARITH  (r1 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('absoluteGravity' int)]) & (7 ??[int, float, short, byte, char])  (LINE:1101)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|0x000a: SWITCH  (r1 I:??)\l case 1: goto B:30:0x001e\l case 5: goto B:25:0x0014\l default: goto B:22:0x000d \l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|0x000d: IGET  (r1 I:boolean) = (r2 I:com.google.android.material.internal.CollapsingTextHelper) com.google.android.material.internal.CollapsingTextHelper.isRtl boolean  (LINE:1107)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0021 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|0x0011: SGET  (r1 I:android.text.Layout$Alignment) =  android.text.Layout.Alignment.ALIGN_OPPOSITE android.text.Layout$Alignment \l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0023: RETURN  (r1 I:android.text.Layout$Alignment) A[SYNTHETIC]\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0021|0x0021: SGET  (r1 I:android.text.Layout$Alignment) =  android.text.Layout.Alignment.ALIGN_NORMAL android.text.Layout$Alignment  (LINE:1107)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0023|RETURN\lORIG_RETURN\l|0x0023: RETURN  (r1 I:android.text.Layout$Alignment) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|0x0014: IGET  (r1 I:boolean) = (r2 I:com.google.android.material.internal.CollapsingTextHelper) com.google.android.material.internal.CollapsingTextHelper.isRtl boolean  (LINE:1105)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|0x0016: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x001b \l}"];
Node_27 [shape=record,label="{27\:\ 0x0018|0x0018: SGET  (r1 I:android.text.Layout$Alignment) =  android.text.Layout.Alignment.ALIGN_NORMAL android.text.Layout$Alignment \l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|0x001d: RETURN  (r1 I:android.text.Layout$Alignment) A[SYNTHETIC]\l}"];
Node_28 [shape=record,label="{28\:\ 0x001b|0x001b: SGET  (r1 I:android.text.Layout$Alignment) =  android.text.Layout.Alignment.ALIGN_OPPOSITE android.text.Layout$Alignment \l}"];
Node_29 [shape=record,label="{29\:\ 0x001d|RETURN\lORIG_RETURN\l|0x001d: RETURN  (r1 I:android.text.Layout$Alignment) \l}"];
Node_30 [shape=record,label="{30\:\ 0x001e|0x001e: SGET  (r1 I:android.text.Layout$Alignment) =  android.text.Layout.Alignment.ALIGN_CENTER android.text.Layout$Alignment  (LINE:1103)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0020|RETURN\l|0x0020: RETURN  (r1 I:android.text.Layout$Alignment) \l}"];
MethodNode[shape=record,label="{private android.text.Layout$Alignment com.google.android.material.internal.CollapsingTextHelper.getMultilineTextLayoutAlignment((r2 'this' I:com.google.android.material.internal.CollapsingTextHelper A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x0021 \-\> B:33:0x0023, CROSS_EDGE: B:29:0x001d \-\> B:19:?, CROSS_EDGE: B:28:0x001b \-\> B:29:0x001d, CROSS_EDGE: B:31:0x0020 \-\> B:19:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x002d: r0 'absoluteGravity' I\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_25;
Node_21 -> Node_30;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_24 -> Node_35;
Node_35 -> Node_19;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_34;
Node_34 -> Node_19;
Node_28 -> Node_29;
Node_29 -> Node_19;
Node_30 -> Node_31;
Node_31 -> Node_19;
}

