digraph "CFG forcom.google.android.material.internal.CollapsingTextHelper.calculateIsRtl(Ljava\/lang\/CharSequence;)Z" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r2 I:com.google.android.material.internal.CollapsingTextHelper) type: DIRECT call: com.google.android.material.internal.CollapsingTextHelper.isDefaultIsRtl():boolean A[MD:():boolean (m)] (LINE:947)\l0x0004: IGET  (r1 I:boolean) = (r2 I:com.google.android.material.internal.CollapsingTextHelper) com.google.android.material.internal.CollapsingTextHelper.isRtlTextDirectionHeuristicsEnabled boolean  (LINE:948)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|0x0006: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x000d \l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|0x0008: INVOKE  (r1 I:boolean) = \l  (r2 I:com.google.android.material.internal.CollapsingTextHelper)\l  (r3 I:java.lang.CharSequence A[D('text' java.lang.CharSequence)])\l  (r0 I:boolean A[D('defaultIsRtl' boolean)])\l type: DIRECT call: com.google.android.material.internal.CollapsingTextHelper.isTextDirectionHeuristicsIsRtl(java.lang.CharSequence, boolean):boolean A[MD:(java.lang.CharSequence, boolean):boolean (m)] (LINE:949)\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x000e: RETURN  (r1 I:boolean) A[SYNTHETIC] (LINE:948)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x000d|0x000d: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('defaultIsRtl' boolean)])  (LINE:950)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000e|RETURN\lORIG_RETURN\l|0x000e: RETURN  (r1 I:boolean)  (LINE:948)\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.material.internal.CollapsingTextHelper.calculateIsRtl((r2 'this' I:com.google.android.material.internal.CollapsingTextHelper A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.CharSequence A[D('text' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000d \-\> B:14:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x000e: r0 'defaultIsRtl' Z\l  \-1 \-0x000e: r3 'text' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

