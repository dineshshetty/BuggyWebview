digraph "CFG forcom.google.android.material.chip.Chip.ChipTouchHelper.getVirtualViewAt(FF)I" {
subgraph cluster_Region_1347073590 {
label = "R(1:(2:(1:5)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1595744716 {
label = "R(2:(1:5)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1868404007 {
label = "IF [B:13:0x0006, B:15:0x0012] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0006|if (com.google.android.material.chip.Chip.this.hasCloseIcon() != false) goto L3\l}"];
Node_15 [shape=record,label="{15\:\ 0x0012|ADDED_TO_REGION\l|if (com.google.android.material.chip.Chip.this.getCloseIconTouchBounds().contains(r2, r3) != false) goto L5\l}"];
subgraph cluster_Region_1701718844 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0014|SYNTHETIC\lRETURN\l|return 1\l}"];
}
}
subgraph cluster_Region_1611713185 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0016|RETURN\lORIG_RETURN\l|return 0\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0008}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected int com.google.android.material.chip.Chip.ChipTouchHelper.getVirtualViewAt((r1v0 'this' com.google.android.material.chip.Chip$ChipTouchHelper A[IMMUTABLE_TYPE, THIS]), (r2v0 'x' float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'y' float A[D('y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0016 \-\> B:18:0x0017, CROSS_EDGE: B:13:0x0006 \-\> B:17:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.customview.widget.ExploreByTouchHelper.getVirtualViewAt(float, float):int]\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_11;
Node_17 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

