digraph "CFG forcom.google.android.material.chip.Chip.ChipTouchHelper.onPopulateNodeForHost(Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.chip.Chip) = (r3 I:com.google.android.material.chip.Chip$ChipTouchHelper) com.google.android.material.chip.Chip.ChipTouchHelper.this$0 com.google.android.material.chip.Chip  (LINE:1039)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.isCheckable():boolean A[MD:():boolean (m)]\l0x0006: INVOKE  \l  (r4 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('node' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:boolean)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setCheckable(boolean):void A[MD:(boolean):void (m)]\l0x0009: IGET  (r0 I:com.google.android.material.chip.Chip) = (r3 I:com.google.android.material.chip.Chip$ChipTouchHelper) com.google.android.material.chip.Chip.ChipTouchHelper.this$0 com.google.android.material.chip.Chip  (LINE:1040)\l0x000b: INVOKE  (r0 I:boolean) = (r0 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.isClickable():boolean A[MD:():boolean (s)]\l0x000f: INVOKE  \l  (r4 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('node' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:boolean)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setClickable(boolean):void A[MD:(boolean):void (m)]\l0x0012: IGET  (r0 I:com.google.android.material.chip.Chip) = (r3 I:com.google.android.material.chip.Chip$ChipTouchHelper) com.google.android.material.chip.Chip.ChipTouchHelper.this$0 com.google.android.material.chip.Chip  (LINE:1041)\l0x0014: INVOKE  (r0 I:java.lang.CharSequence) = (r0 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.getAccessibilityClassName():java.lang.CharSequence A[MD:():java.lang.CharSequence (m)]\l0x0018: INVOKE  \l  (r4 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('node' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:java.lang.CharSequence)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setClassName(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (m)]\l0x001b: IGET  (r0 I:com.google.android.material.chip.Chip) = (r3 I:com.google.android.material.chip.Chip$ChipTouchHelper) com.google.android.material.chip.Chip.ChipTouchHelper.this$0 com.google.android.material.chip.Chip  (LINE:1042)\l0x001d: INVOKE  (r0 I:java.lang.CharSequence) = (r0 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.getText():java.lang.CharSequence A[MD:():java.lang.CharSequence (s)]\l0x0021: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:1043)\l0x0023: CONST  (r2 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:13:0x002b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: INVOKE  \l  (r4 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('node' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:java.lang.CharSequence A[D('chipText' java.lang.CharSequence)])\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setText(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (m)] (LINE:1044)\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x002e: RETURN   A[SYNTHETIC] (LINE:1050)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: INVOKE  \l  (r4 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('node' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:java.lang.CharSequence A[D('chipText' java.lang.CharSequence)])\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setContentDescription(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (m)] (LINE:1048)\l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|RETURN\lORIG_RETURN\l|0x002e: RETURN    (LINE:1050)\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.chip.Chip.ChipTouchHelper.onPopulateNodeForHost((r3 'this' I:com.google.android.material.chip.Chip$ChipTouchHelper A[IMMUTABLE_TYPE, THIS]), (r4 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('node' androidx.core.view.accessibility.AccessibilityNodeInfoCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x002b \-\> B:14:0x002e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x002e: r0 'chipText' Ljava\/lang\/CharSequence;\l  \-1 \-0x002e: r4 'node' Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;\lMETHOD_OVERRIDE: [androidx.customview.widget.ExploreByTouchHelper.onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat):void]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

