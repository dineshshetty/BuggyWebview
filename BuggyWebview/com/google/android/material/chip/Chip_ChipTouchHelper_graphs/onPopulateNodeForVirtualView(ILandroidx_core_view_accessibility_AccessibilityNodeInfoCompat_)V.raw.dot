digraph "CFG forcom.google.android.material.chip.Chip.ChipTouchHelper.onPopulateNodeForVirtualView(ILandroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\"  (LINE:1015)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0003|0x0003: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('virtualViewId' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x004e \l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|0x0005: IGET  (r2 I:com.google.android.material.chip.Chip) = (r8 I:com.google.android.material.chip.Chip$ChipTouchHelper) com.google.android.material.chip.Chip.ChipTouchHelper.this$0 com.google.android.material.chip.Chip  (LINE:1016)\l0x0007: INVOKE  (r2 I:java.lang.CharSequence) = (r2 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.getCloseIconContentDescription():java.lang.CharSequence A[MD:():java.lang.CharSequence (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('closeIconContentDescription' java.lang.CharSequence)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0011  (LINE:1017)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|0x000d: INVOKE  \l  (r10 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('node' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r2 I:java.lang.CharSequence A[D('closeIconContentDescription' java.lang.CharSequence)])\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setContentDescription(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (m)] (LINE:1018)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0036|0x0036: IGET  (r0 I:com.google.android.material.chip.Chip) = (r8 I:com.google.android.material.chip.Chip$ChipTouchHelper) com.google.android.material.chip.Chip.ChipTouchHelper.this$0 com.google.android.material.chip.Chip  (LINE:1028)\l0x0038: INVOKE  (r0 I:android.graphics.Rect) = (r0 I:com.google.android.material.chip.Chip) type: STATIC call: com.google.android.material.chip.Chip.access$500(com.google.android.material.chip.Chip):android.graphics.Rect A[MD:(com.google.android.material.chip.Chip):android.graphics.Rect (m)]\l0x003c: INVOKE  \l  (r10 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('node' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:android.graphics.Rect)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setBoundsInParent(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (m)]\l0x003f: SGET  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) =  androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat.ACTION_CLICK androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat  (LINE:1029)\l0x0041: INVOKE  \l  (r10 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('node' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):void A[MD:(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):void (m)]\l0x0044: IGET  (r0 I:com.google.android.material.chip.Chip) = (r8 I:com.google.android.material.chip.Chip$ChipTouchHelper) com.google.android.material.chip.Chip.ChipTouchHelper.this$0 com.google.android.material.chip.Chip  (LINE:1030)\l0x0046: INVOKE  (r0 I:boolean) = (r0 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.isEnabled():boolean A[MD:():boolean (s)]\l0x004a: INVOKE  \l  (r10 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('node' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:boolean)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setEnabled(boolean):void A[MD:(boolean):void (m)]\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x0058: RETURN   A[SYNTHETIC] (LINE:1035)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: IGET  (r3 I:com.google.android.material.chip.Chip) = (r8 I:com.google.android.material.chip.Chip$ChipTouchHelper) com.google.android.material.chip.Chip.ChipTouchHelper.this$0 com.google.android.material.chip.Chip  (LINE:1020)\l0x0013: INVOKE  (r3 I:java.lang.CharSequence) = (r3 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.getText():java.lang.CharSequence A[MD:():java.lang.CharSequence (s)]\l0x0017: IGET  (r4 I:com.google.android.material.chip.Chip) = (r8 I:com.google.android.material.chip.Chip$ChipTouchHelper) com.google.android.material.chip.Chip.ChipTouchHelper.this$0 com.google.android.material.chip.Chip  (LINE:1021)\l0x0019: INVOKE  (r4 I:android.content.Context) = (r4 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.getContext():android.content.Context A[MD:():android.content.Context (s)] (LINE:1022)\l0x001d: SGET  (r5 I:int) =  com.google.android.material.R.string.mtrl_chip_close_icon_content_description int \l0x001f: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0021: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0022: INVOKE  (r7 I:boolean) = (r3 I:java.lang.CharSequence A[D('chipText' java.lang.CharSequence)]) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)] (LINE:1025)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|0x0026: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0029 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0028|0x0028: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('chipText' java.lang.CharSequence)]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0029|0x0029: APUT  (r1 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r0 I:??[OBJECT, ARRAY]) \l0x002b: INVOKE  (r0 I:java.lang.String) = (r4 I:android.content.Context), (r5 I:int), (r1 I:java.lang.Object[]) type: VIRTUAL call: android.content.Context.getString(int, java.lang.Object[]):java.lang.String A[MD:(int, java.lang.Object[]):java.lang.String VARARG (c)] (LINE:1023)\l0x002f: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String) type: VIRTUAL call: java.lang.String.trim():java.lang.String A[MD:():java.lang.String (c)] (LINE:1026)\l0x0033: INVOKE  \l  (r10 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('node' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:java.lang.CharSequence)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setContentDescription(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (m)] (LINE:1021)\l}"];
Node_27 [shape=record,label="{27\:\ 0x004e|0x004e: INVOKE  \l  (r10 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('node' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:java.lang.CharSequence)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setContentDescription(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (m)] (LINE:1032)\l0x0051: INVOKE  (r0 I:android.graphics.Rect) =  type: STATIC call: com.google.android.material.chip.Chip.access$600():android.graphics.Rect A[MD:():android.graphics.Rect (m)] (LINE:1033)\l0x0055: INVOKE  \l  (r10 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('node' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:android.graphics.Rect)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setBoundsInParent(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0058|RETURN\lORIG_RETURN\l|0x0058: RETURN    (LINE:1035)\l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.chip.Chip.ChipTouchHelper.onPopulateNodeForVirtualView((r8 'this' I:com.google.android.material.chip.Chip$ChipTouchHelper A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[D('virtualViewId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('node' androidx.core.view.accessibility.AccessibilityNodeInfoCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0029 \-\> B:26:0x0036, CROSS_EDGE: B:23:0x0026 \-\> B:25:0x0029, CROSS_EDGE: B:27:0x004e \-\> B:28:0x0058\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0017\-0x0036: r3 'chipText' Ljava\/lang\/CharSequence;\l  0x000b\-0x004d: r2 'closeIconContentDescription' Ljava\/lang\/CharSequence;\l  \-1 \-0x0058: r9 'virtualViewId' I\l  \-1 \-0x0058: r10 'node' Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;\lMETHOD_OVERRIDE: [androidx.customview.widget.ExploreByTouchHelper.onPopulateNodeForVirtualView(int, androidx.core.view.accessibility.AccessibilityNodeInfoCompat):void]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_26;
Node_26 -> Node_29;
Node_29 -> Node_16;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_28 -> Node_16;
}

