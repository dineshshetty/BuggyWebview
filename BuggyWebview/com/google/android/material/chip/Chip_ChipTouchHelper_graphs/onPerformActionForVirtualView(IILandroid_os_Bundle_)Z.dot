digraph "CFG forcom.google.android.material.chip.Chip.ChipTouchHelper.onPerformActionForVirtualView(IILandroid\/os\/Bundle;)Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0002|if (r3 != 16) goto L12\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|if (r2 != 0) goto L7\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006}"];
Node_20 [shape=record,label="{20\:\ 0x000c|RETURN\l|return com.google.android.material.chip.Chip.this.performClick()\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d}"];
Node_22 [shape=record,label="{22\:\ 0x000e|if (r2 != 1) goto L11\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010}"];
Node_24 [shape=record,label="{24\:\ 0x0016|RETURN\l|return com.google.android.material.chip.Chip.this.performCloseIconClick()\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|RETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{protected boolean com.google.android.material.chip.Chip.ChipTouchHelper.onPerformActionForVirtualView((r1v0 'this' com.google.android.material.chip.Chip$ChipTouchHelper A[IMMUTABLE_TYPE, THIS]), (r2v0 'virtualViewId' int A[D('virtualViewId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'action' int A[D('action' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'arguments' android.os.Bundle A[D('arguments' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0016 \-\> B:15:?, CROSS_EDGE: B:26:0x0018 \-\> B:15:?, CROSS_EDGE: B:17:0x0002 \-\> B:25:0x0017\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.customview.widget.ExploreByTouchHelper.onPerformActionForVirtualView(int, int, android.os.Bundle):boolean]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_15;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_15;
Node_27 -> Node_15;
Node_25 -> Node_15;
}

