digraph "CFG forcom.google.android.material.chip.Chip.ChipTouchHelper.onPerformActionForVirtualView(IILandroid\/os\/Bundle;)Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char])  (LINE:1055)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('action' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0017 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|0x0004: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('virtualViewId' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x000d  (LINE:1056)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|0x0006: IGET  (r0 I:com.google.android.material.chip.Chip) = (r1 I:com.google.android.material.chip.Chip$ChipTouchHelper) com.google.android.material.chip.Chip.ChipTouchHelper.this$0 com.google.android.material.chip.Chip  (LINE:1057)\l0x0008: INVOKE  (r0 I:boolean) = (r0 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.performClick():boolean A[MD:():boolean (s)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|0x000d: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1058)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('virtualViewId' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:? \l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|0x0010: IGET  (r0 I:com.google.android.material.chip.Chip) = (r1 I:com.google.android.material.chip.Chip$ChipTouchHelper) com.google.android.material.chip.Chip.ChipTouchHelper.this$0 com.google.android.material.chip.Chip  (LINE:1059)\l0x0012: INVOKE  (r0 I:boolean) = (r0 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.performCloseIconClick():boolean A[MD:():boolean (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:boolean) \l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0017: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:1062)\l0x0018: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|RETURN\lORIG_RETURN\l|0x0017: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1062)\l0x0018: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{protected boolean com.google.android.material.chip.Chip.ChipTouchHelper.onPerformActionForVirtualView((r1 'this' I:com.google.android.material.chip.Chip$ChipTouchHelper A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('virtualViewId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('action' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.os.Bundle A[D('arguments' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0016 \-\> B:15:?, CROSS_EDGE: B:26:0x0018 \-\> B:15:?, CROSS_EDGE: B:17:0x0002 \-\> B:25:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r2 'virtualViewId' I\l  \-1 \-0x0018: r3 'action' I\l  \-1 \-0x0018: r4 'arguments' Landroid\/os\/Bundle;\lMETHOD_OVERRIDE: [androidx.customview.widget.ExploreByTouchHelper.onPerformActionForVirtualView(int, int, android.os.Bundle):boolean]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_15;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_15;
Node_27 -> Node_15;
Node_25 -> Node_15;
}

