digraph "CFG forcom.google.android.material.chip.ChipGroup.PassThroughHierarchyChangeListener.onChildViewRemoved(Landroid\/view\/View;Landroid\/view\/View;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|com.google.android.material.chip.ChipGroup r0 = r2.this$0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r3 != r0) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004}"];
Node_5 [shape=record,label="{5\:\ 0x0006|if ((r4 instanceof com.google.android.material.chip.Chip) == false) goto L6\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|r0.checkableGroup.removeCheckable((com.google.android.material.chip.Chip) r4)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|android.view.ViewGroup$OnHierarchyChangeListener r0 = r2.onHierarchyChangeListener\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|if (r0 == null) goto L11\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|r0.onChildViewRemoved(r3, r4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.ChipGroup.PassThroughHierarchyChangeListener.onChildViewRemoved((r2v0 'this' com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener A[IMMUTABLE_TYPE, THIS]), (r3v0 'parent' android.view.View A[D('parent' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:8:0x0014 \-\> B:10:0x0019, CROSS_EDGE: B:5:0x0006 \-\> B:7:0x0012, CROSS_EDGE: B:3:0x0002 \-\> B:7:0x0012\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewGroup.OnHierarchyChangeListener.onChildViewRemoved(android.view.View, android.view.View):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_1;
}

