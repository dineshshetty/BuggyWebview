digraph "CFG forcom.google.android.material.chip.ChipGroup.PassThroughHierarchyChangeListener.onChildViewAdded(Landroid\/view\/View;Landroid\/view\/View;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.chip.ChipGroup) = (r3 I:com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener) com.google.android.material.chip.ChipGroup.PassThroughHierarchyChangeListener.this$0 com.google.android.material.chip.ChipGroup  (LINE:518)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parent' android.view.View)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0022 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: INSTANCE_OF  (r0 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) com.google.android.material.chip.Chip \l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0022 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: INVOKE  (r0 I:int) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getId():int A[MD:():int (c)] (LINE:519)\l0x000c: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:521)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('id' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0016 \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: INVOKE  (r0 I:int A[D('id' int)]) =  type: STATIC call: androidx.core.view.ViewCompat.generateViewId():int A[MD:():int (m)] (LINE:522)\l0x0013: INVOKE  (r5 I:android.view.View A[D('child' android.view.View)]), (r0 I:int A[D('id' int)]) type: VIRTUAL call: android.view.View.setId(int):void A[MD:(int):void (c)] (LINE:523)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: IGET  (r1 I:com.google.android.material.chip.ChipGroup) = (r3 I:com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener) com.google.android.material.chip.ChipGroup.PassThroughHierarchyChangeListener.this$0 com.google.android.material.chip.ChipGroup  (LINE:525)\l0x0018: INVOKE  (r1 I:com.google.android.material.internal.CheckableGroup) = (r1 I:com.google.android.material.chip.ChipGroup) type: STATIC call: com.google.android.material.chip.ChipGroup.access$200(com.google.android.material.chip.ChipGroup):com.google.android.material.internal.CheckableGroup A[MD:(com.google.android.material.chip.ChipGroup):com.google.android.material.internal.CheckableGroup (m)]\l0x001c: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) \l0x001d: CHECK_CAST (r2 I:com.google.android.material.chip.Chip) = (com.google.android.material.chip.Chip) (r2 I:??[OBJECT, ARRAY]) \l0x001f: INVOKE  \l  (r1 I:com.google.android.material.internal.CheckableGroup)\l  (r2 I:com.google.android.material.internal.MaterialCheckable)\l type: VIRTUAL call: com.google.android.material.internal.CheckableGroup.addCheckable(com.google.android.material.internal.MaterialCheckable):void A[MD:(T extends com.google.android.material.internal.MaterialCheckable\<T\>):void (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: IGET  (r0 I:android.view.ViewGroup$OnHierarchyChangeListener A[D('id' int)]) = (r3 I:com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener) com.google.android.material.chip.ChipGroup.PassThroughHierarchyChangeListener.onHierarchyChangeListener android.view.ViewGroup$OnHierarchyChangeListener  (LINE:528)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|0x0024: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:? \l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|0x0026: INVOKE  \l  (r0 I:android.view.ViewGroup$OnHierarchyChangeListener)\l  (r4 I:android.view.View A[D('parent' android.view.View)])\l  (r5 I:android.view.View A[D('child' android.view.View)])\l type: INTERFACE call: android.view.ViewGroup.OnHierarchyChangeListener.onChildViewAdded(android.view.View, android.view.View):void A[MD:(android.view.View, android.view.View):void (c)] (LINE:529)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|RETURN\lORIG_RETURN\l|0x0029: RETURN    (LINE:531)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|0x0029: RETURN   A[SYNTHETIC] (LINE:531)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.ChipGroup.PassThroughHierarchyChangeListener.onChildViewAdded((r3 'this' I:com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.View A[D('parent' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:11:0x0024 \-\> B:13:0x0029, CROSS_EDGE: B:7:0x000d \-\> B:9:0x0016, CROSS_EDGE: B:5:0x0006 \-\> B:10:0x0022, CROSS_EDGE: B:3:0x0002 \-\> B:10:0x0022\lDebug Info:\l  0x000c\-0x0022: r0 'id' I\l  \-1 \-0x0029: r4 'parent' Landroid\/view\/View;\l  \-1 \-0x0029: r5 'child' Landroid\/view\/View;\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewGroup.OnHierarchyChangeListener.onChildViewAdded(android.view.View, android.view.View):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_14 -> Node_1;
}

