digraph "CFG forcom.google.android.material.chip.Chip.ensureAccessibleTouchTarget(I)Z" {
Node_45 [shape=record,label="{45\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ 0x0000|0x0000: IPUT  (r8 I:int A[D('minTargetPx' int)]), (r7 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.minTouchTargetSize int  (LINE:2278)\l0x0002: INVOKE  (r0 I:boolean) = (r7 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.shouldEnsureMinTouchTargetSize():boolean A[MD:():boolean (m)] (LINE:2279)\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0015 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0009|0x0009: IGET  (r0 I:android.graphics.drawable.InsetDrawable) = (r7 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.insetBackgroundDrawable android.graphics.drawable.InsetDrawable  (LINE:2280)\l}"];
Node_50 [shape=record,label="{50\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0011 \l}"];
Node_51 [shape=record,label="{51\:\ 0x000d|0x000d: INVOKE  (r7 I:com.google.android.material.chip.Chip) type: DIRECT call: com.google.android.material.chip.Chip.removeBackgroundInset():void A[MD:():void (m)] (LINE:2281)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0014|RETURN\l|0x0014: RETURN  (r1 I:boolean)  (LINE:2285)\l}"];
Node_46 [shape=record,label="{46\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_52 [shape=record,label="{52\:\ 0x0011|0x0011: INVOKE  (r7 I:com.google.android.material.chip.Chip) type: DIRECT call: com.google.android.material.chip.Chip.updateBackgroundDrawable():void A[MD:():void (m)] (LINE:2283)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0015|0x0015: IGET  (r0 I:com.google.android.material.chip.ChipDrawable) = (r7 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.chipDrawable com.google.android.material.chip.ChipDrawable  (LINE:2288)\l0x0017: INVOKE  (r0 I:int) = (r0 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getIntrinsicHeight():int A[MD:():int (m)]\l0x001b: ARITH  (r0 I:int) = (r8 I:int A[D('minTargetPx' int)]) \- (r0 I:int) \l0x001d: INVOKE  (r0 I:int) = (r1 I:int), (r0 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0021: IGET  (r2 I:com.google.android.material.chip.ChipDrawable) = (r7 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.chipDrawable com.google.android.material.chip.ChipDrawable  (LINE:2289)\l0x0023: INVOKE  (r2 I:int) = (r2 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getIntrinsicWidth():int A[MD:():int (m)]\l0x0027: ARITH  (r2 I:int) = (r8 I:int A[D('minTargetPx' int)]) \- (r2 I:int) \l0x0029: INVOKE  (r2 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x002d|0x002d: IF  (r2 I:??[int, byte, short, char] A[D('deltaWidth' int)]) \> (0 ??[int, byte, short, char])  \-\> B:62:0x003d  (LINE:2291)\l}"];
Node_56 [shape=record,label="{56\:\ 0x002f|0x002f: IF  (r0 I:??[int, byte, short, char] A[D('deltaHeight' int)]) \> (0 ??[int, byte, short, char])  \-\> B:62:0x003d \l}"];
Node_57 [shape=record,label="{57\:\ 0x0031|0x0031: IGET  (r3 I:android.graphics.drawable.InsetDrawable) = (r7 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.insetBackgroundDrawable android.graphics.drawable.InsetDrawable  (LINE:2292)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0033|0x0033: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0039 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0035|0x0035: INVOKE  (r7 I:com.google.android.material.chip.Chip) type: DIRECT call: com.google.android.material.chip.Chip.removeBackgroundInset():void A[MD:():void (m)] (LINE:2293)\l}"];
Node_61 [shape=record,label="{61\:\ 0x003c|RETURN\l|0x003c: RETURN  (r1 I:boolean)  (LINE:2297)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0039|0x0039: INVOKE  (r7 I:com.google.android.material.chip.Chip) type: DIRECT call: com.google.android.material.chip.Chip.updateBackgroundDrawable():void A[MD:():void (m)] (LINE:2295)\l}"];
Node_62 [shape=record,label="{62\:\ 0x003d|0x003d: IF  (r2 I:??[int, byte, short, char] A[D('deltaWidth' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:64:0x0042  (LINE:2300)\l}"];
Node_63 [shape=record,label="{63\:\ 0x003f|0x003f: ARITH  (r3 I:int) = (r2 I:int A[D('deltaWidth' int)]) \/ (2 int) \l}"];
Node_65 [shape=record,label="{65\:\ 0x0043|0x0043: IF  (r0 I:??[int, byte, short, char] A[D('deltaHeight' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:67:0x0047  (LINE:2301)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0045|0x0045: ARITH  (r1 I:int) = (r0 I:int A[D('deltaHeight' int)]) \/ (2 int) \l}"];
Node_67 [shape=record,label="{67\:\ 0x0047|0x0047: IGET  (r4 I:android.graphics.drawable.InsetDrawable) = (r7 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.insetBackgroundDrawable android.graphics.drawable.InsetDrawable  (LINE:2303)\l0x0049: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_68 [shape=record,label="{68\:\ 0x004a|0x004a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:0x006a \l}"];
Node_69 [shape=record,label="{69\:\ 0x004c|0x004c: NEW_INSTANCE  (r4 I:android.graphics.Rect) =  android.graphics.Rect  (LINE:2304)\l0x004e: INVOKE  (r4 I:android.graphics.Rect) type: DIRECT call: android.graphics.Rect.\<init\>():void A[MD:():void (c)]\l0x0051: IGET  (r6 I:android.graphics.drawable.InsetDrawable) = (r7 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.insetBackgroundDrawable android.graphics.drawable.InsetDrawable  (LINE:2305)\l0x0053: INVOKE  (r6 I:android.graphics.drawable.InsetDrawable), (r4 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.drawable.InsetDrawable.getPadding(android.graphics.Rect):boolean A[MD:(android.graphics.Rect):boolean (c)]\l0x0056: IGET  (r6 I:int) = (r4 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.top int  (LINE:2306)\l}"];
Node_70 [shape=record,label="{70\:\ 0x0058|0x0058: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('deltaY' int)])  \-\> B:79:0x006a \l}"];
Node_71 [shape=record,label="{71\:\ 0x005a|0x005a: IGET  (r6 I:int) = (r4 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.bottom int \l}"];
Node_72 [shape=record,label="{72\:\ 0x005c|0x005c: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('deltaY' int)])  \-\> B:79:0x006a \l}"];
Node_73 [shape=record,label="{73\:\ 0x005e|0x005e: IGET  (r6 I:int) = (r4 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.left int \l}"];
Node_74 [shape=record,label="{74\:\ 0x0060|0x0060: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('deltaX' int)])  \-\> B:79:0x006a \l}"];
Node_75 [shape=record,label="{75\:\ 0x0062|0x0062: IGET  (r6 I:int) = (r4 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.right int \l}"];
Node_76 [shape=record,label="{76\:\ 0x0064|0x0064: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('deltaX' int)])  \-\> B:79:0x006a \l}"];
Node_77 [shape=record,label="{77\:\ 0x0066|0x0066: INVOKE  (r7 I:com.google.android.material.chip.Chip) type: DIRECT call: com.google.android.material.chip.Chip.updateBackgroundDrawable():void A[MD:():void (m)] (LINE:2310)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0069|RETURN\l|0x0069: RETURN  (r5 I:boolean)  (LINE:2311)\l}"];
Node_79 [shape=record,label="{79\:\ 0x006a|0x006a: SGET  (r4 I:int A[D('padding' android.graphics.Rect)]) =  android.os.Build.VERSION.SDK_INT int  (LINE:2314)\l0x006c: CONST  (r6 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_80 [shape=record,label="{80\:\ 0x006e|0x006e: IF  (r4 I:??[int, byte, short, char]) \< (r6 I:??[int, byte, short, char])  \-\> B:87:0x0083 \l}"];
Node_81 [shape=record,label="{81\:\ 0x0070|0x0070: INVOKE  (r4 I:int) = (r7 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.getMinHeight():int A[MD:():int (s)] (LINE:2315)\l}"];
Node_82 [shape=record,label="{82\:\ 0x0074|0x0074: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('minTargetPx' int)])  \-\> B:84:0x0079 \l}"];
Node_83 [shape=record,label="{83\:\ 0x0076|0x0076: INVOKE  (r7 I:com.google.android.material.chip.Chip), (r8 I:int A[D('minTargetPx' int)]) type: VIRTUAL call: com.google.android.material.chip.Chip.setMinHeight(int):void A[MD:(int):void (s)] (LINE:2316)\l}"];
Node_84 [shape=record,label="{84\:\ 0x0079|0x0079: INVOKE  (r4 I:int) = (r7 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.getMinWidth():int A[MD:():int (s)] (LINE:2318)\l}"];
Node_85 [shape=record,label="{85\:\ 0x007d|0x007d: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('minTargetPx' int)])  \-\> B:88:0x0089 \l}"];
Node_86 [shape=record,label="{86\:\ 0x007f|0x007f: INVOKE  (r7 I:com.google.android.material.chip.Chip), (r8 I:int A[D('minTargetPx' int)]) type: VIRTUAL call: com.google.android.material.chip.Chip.setMinWidth(int):void A[MD:(int):void (s)] (LINE:2319)\l}"];
Node_88 [shape=record,label="{88\:\ 0x0089|0x0089: INVOKE  \l  (r7 I:com.google.android.material.chip.Chip)\l  (r3 I:int A[D('deltaX' int)])\l  (r1 I:int A[D('deltaY' int)])\l  (r3 I:int A[D('deltaX' int)])\l  (r1 I:int A[D('deltaY' int)])\l type: DIRECT call: com.google.android.material.chip.Chip.insetChipBackgroundDrawable(int, int, int, int):void A[MD:(int, int, int, int):void (m)] (LINE:2325)\l0x008c: INVOKE  (r7 I:com.google.android.material.chip.Chip) type: DIRECT call: com.google.android.material.chip.Chip.updateBackgroundDrawable():void A[MD:():void (m)] (LINE:2326)\l}"];
Node_89 [shape=record,label="{89\:\ 0x008f|RETURN\l|0x008f: RETURN  (r5 I:boolean)  (LINE:2327)\l}"];
Node_87 [shape=record,label="{87\:\ 0x0083|0x0083: INVOKE  (r7 I:com.google.android.material.chip.Chip), (r8 I:int A[D('minTargetPx' int)]) type: VIRTUAL call: com.google.android.material.chip.Chip.setMinHeight(int):void A[MD:(int):void (s)] (LINE:2322)\l0x0086: INVOKE  (r7 I:com.google.android.material.chip.Chip), (r8 I:int A[D('minTargetPx' int)]) type: VIRTUAL call: com.google.android.material.chip.Chip.setMinWidth(int):void A[MD:(int):void (s)] (LINE:2323)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0042|0x0042: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.chip.Chip.ensureAccessibleTouchTarget((r7 'this' I:com.google.android.material.chip.Chip A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('minTargetPx' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:52:0x0011 \-\> B:53:0x0014, CROSS_EDGE: B:61:0x003c \-\> B:46:?, CROSS_EDGE: B:60:0x0039 \-\> B:61:0x003c, CROSS_EDGE: B:78:0x0069 \-\> B:46:?, CROSS_EDGE: B:89:0x008f \-\> B:46:?, CROSS_EDGE: B:85:0x007d \-\> B:88:0x0089, CROSS_EDGE: B:82:0x0074 \-\> B:84:0x0079, CROSS_EDGE: B:87:0x0083 \-\> B:88:0x0089, CROSS_EDGE: B:74:0x0060 \-\> B:79:0x006a, CROSS_EDGE: B:72:0x005c \-\> B:79:0x006a, CROSS_EDGE: B:70:0x0058 \-\> B:79:0x006a, CROSS_EDGE: B:68:0x004a \-\> B:79:0x006a, CROSS_EDGE: B:65:0x0043 \-\> B:67:0x0047, CROSS_EDGE: B:64:0x0042 \-\> B:65:0x0043, CROSS_EDGE: B:55:0x002d \-\> B:62:0x003d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0051\-0x006a: r4 'padding' Landroid\/graphics\/Rect;\l  0x0021\-0x008f: r0 'deltaHeight' I\l  0x0047\-0x008f: r1 'deltaY' I\l  0x002d\-0x008f: r2 'deltaWidth' I\l  0x0043\-0x008f: r3 'deltaX' I\l  \-1 \-0x008f: r8 'minTargetPx' I\l}"];
MethodNode -> Node_45;Node_45 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_54;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_53;
Node_53 -> Node_46;
Node_52 -> Node_53;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_62;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_62;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_61;
Node_61 -> Node_46;
Node_60 -> Node_61;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_67;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_79;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_79;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_79;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_79;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_79;
Node_77 -> Node_78;
Node_78 -> Node_46;
Node_79 -> Node_80;
Node_80 -> Node_81[style=dashed];
Node_80 -> Node_87;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_84;
Node_83 -> Node_84;
Node_84 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_88;
Node_86 -> Node_88;
Node_88 -> Node_89;
Node_89 -> Node_46;
Node_87 -> Node_88;
Node_64 -> Node_65;
}

