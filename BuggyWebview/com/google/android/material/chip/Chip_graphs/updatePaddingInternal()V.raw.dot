digraph "CFG forcom.google.android.material.chip.Chip.updatePaddingInternal()V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.CharSequence) = (r4 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.getText():java.lang.CharSequence A[MD:():java.lang.CharSequence (s)] (LINE:345)\l0x0004: INVOKE  (r0 I:boolean) = (r0 I:java.lang.CharSequence) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0059 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|0x000a: IGET  (r0 I:com.google.android.material.chip.ChipDrawable) = (r4 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.chipDrawable com.google.android.material.chip.ChipDrawable \l}"];
Node_19 [shape=record,label="{19\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x000f \l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|0x0010: INVOKE  (r0 I:float) = (r0 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getChipEndPadding():float A[MD:():float (m)] (LINE:350)\l0x0014: IGET  (r1 I:com.google.android.material.chip.ChipDrawable) = (r4 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.chipDrawable com.google.android.material.chip.ChipDrawable \l0x0016: INVOKE  (r1 I:float) = (r1 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getTextEndPadding():float A[MD:():float (m)] (LINE:351)\l0x001a: ARITH  (r0 I:float) = (r0 I:float) + (r1 I:float) \l0x001b: IGET  (r1 I:com.google.android.material.chip.ChipDrawable) = (r4 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.chipDrawable com.google.android.material.chip.ChipDrawable \l0x001d: INVOKE  (r1 I:float) = (r1 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.calculateCloseIconWidth():float A[MD:():float (m)] (LINE:352)\l0x0021: ARITH  (r0 I:float) = (r0 I:float) + (r1 I:float) \l0x0022: CAST (r0 I:int) = (int) (r0 I:float) \l0x0023: IGET  (r1 I:com.google.android.material.chip.ChipDrawable) = (r4 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.chipDrawable com.google.android.material.chip.ChipDrawable  (LINE:353)\l0x0025: INVOKE  (r1 I:float) = (r1 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getChipStartPadding():float A[MD:():float (m)] (LINE:355)\l0x0029: IGET  (r2 I:com.google.android.material.chip.ChipDrawable) = (r4 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.chipDrawable com.google.android.material.chip.ChipDrawable \l0x002b: INVOKE  (r2 I:float) = (r2 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getTextStartPadding():float A[MD:():float (m)] (LINE:356)\l0x002f: ARITH  (r1 I:float) = (r1 I:float) + (r2 I:float) \l0x0030: IGET  (r2 I:com.google.android.material.chip.ChipDrawable) = (r4 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.chipDrawable com.google.android.material.chip.ChipDrawable \l0x0032: INVOKE  (r2 I:float) = (r2 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.calculateChipIconWidth():float A[MD:():float (m)] (LINE:357)\l0x0036: ARITH  (r1 I:float) = (r1 I:float) + (r2 I:float) \l0x0037: CAST (r1 I:int) = (int) (r1 I:float) \l0x0038: IGET  (r2 I:android.graphics.drawable.InsetDrawable) = (r4 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.insetBackgroundDrawable android.graphics.drawable.InsetDrawable  (LINE:358)\l}"];
Node_22 [shape=record,label="{22\:\ 0x003a|0x003a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x004c \l}"];
Node_23 [shape=record,label="{23\:\ 0x003c|0x003c: NEW_INSTANCE  (r2 I:android.graphics.Rect) =  android.graphics.Rect  (LINE:359)\l0x003e: INVOKE  (r2 I:android.graphics.Rect) type: DIRECT call: android.graphics.Rect.\<init\>():void A[MD:():void (c)]\l0x0041: IGET  (r3 I:android.graphics.drawable.InsetDrawable) = (r4 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.insetBackgroundDrawable android.graphics.drawable.InsetDrawable  (LINE:360)\l0x0043: INVOKE  (r3 I:android.graphics.drawable.InsetDrawable), (r2 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.drawable.InsetDrawable.getPadding(android.graphics.Rect):boolean A[MD:(android.graphics.Rect):boolean (c)]\l0x0046: IGET  (r3 I:int) = (r2 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:361)\l0x0048: ARITH  (r1 I:int) = (r1 I:int A[D('paddingStart' int)]) + (r3 I:int) \l0x0049: IGET  (r3 I:int) = (r2 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:362)\l0x004b: ARITH  (r0 I:int) = (r0 I:int A[D('paddingEnd' int)]) + (r3 I:int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x004c|0x004d: INVOKE  (r2 I:int) = (r4 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.getPaddingTop():int A[MD:():int (s)] (LINE:366)\l0x0051: INVOKE  (r3 I:int) = (r4 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.getPaddingBottom():int A[MD:():int (s)]\l0x0055: INVOKE  \l  (r4 I:android.view.View)\l  (r1 I:int A[D('paddingStart' int)])\l  (r2 I:int)\l  (r0 I:int A[D('paddingEnd' int)])\l  (r3 I:int)\l type: STATIC call: androidx.core.view.ViewCompat.setPaddingRelative(android.view.View, int, int, int, int):void A[MD:(android.view.View, int, int, int, int):void (m)] (LINE:365)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0058|RETURN\l|0x0058: RETURN    (LINE:367)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0059: RETURN   A[SYNTHETIC] (LINE:346)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0059|RETURN\lORIG_RETURN\l|0x0059: RETURN    (LINE:346)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.chip.Chip.updatePaddingInternal((r4 'this' I:com.google.android.material.chip.Chip A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x003a \-\> B:24:0x004c, CROSS_EDGE: B:26:0x0059 \-\> B:15:?, CROSS_EDGE: B:17:0x0008 \-\> B:26:0x0059\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0041\-0x004c: r2 'padding' Landroid\/graphics\/Rect;\l  0x0023\-0x0059: r0 'paddingEnd' I\l  0x0038\-0x0059: r1 'paddingStart' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_27[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_27 -> Node_15;
Node_26 -> Node_15;
}

