digraph "CFG forcom.google.android.material.chip.Chip.onHoverEvent(Landroid\/view\/MotionEvent;)Z" {
subgraph cluster_Region_34689731 {
label = "R(3:1|2|6)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|int int r0 = r5.getActionMasked()\l}"];
subgraph cluster_SwitchRegion_1736257120 {
label = "Switch: 2
 case 7 -> R(2:4|1)
 case 10 -> R(2:3|1)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0004|switch(r0) \{\l    case 7: goto L4;\l    case 10: goto L3;\l    default: goto L5;\l\}\l}"];
subgraph cluster_Region_1778544981 {
label = "R(2:4|1)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x000d|setCloseIconHovered(getCloseIconTouchBounds().contains(r5.getX(), r5.getY()))\l}"];
Node_InsnContainer_489959776 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_847695881 {
label = "R(2:3|1)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0008|setCloseIconHovered(false)\l}"];
Node_InsnContainer_342464897 [shape=record,label="{|break\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x0025|RETURN\l|return super.onHoverEvent(r5)\l}"];
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0021}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.chip.Chip.onHoverEvent((r4v0 'this' com.google.android.material.chip.Chip A[IMMUTABLE_TYPE, THIS]), (r5v0 'event' android.view.MotionEvent A[D('event' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x000d \-\> B:16:0x0021, CROSS_EDGE: B:12:0x0004 \-\> B:16:0x0021\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onHoverEvent(android.view.MotionEvent):boolean\}]\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_12 -> Node_14;
Node_12 -> Node_15;
Node_12 -> Node_16;
Node_15 -> Node_16;
Node_14 -> Node_16;
Node_17 -> Node_10;
Node_9 -> Node_11;
Node_16 -> Node_17;
}

