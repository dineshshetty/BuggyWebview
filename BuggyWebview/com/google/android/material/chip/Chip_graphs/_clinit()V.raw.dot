digraph "CFG forcom.google.android.material.chip.Chip.\<clinit\>()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:int) =  com.google.android.material.R.style.Widget_MaterialComponents_Chip_Action int  (LINE:136)\l0x0002: SPUT  (r0 I:int) com.google.android.material.chip.Chip.DEF_STYLE_RES int \l0x0004: NEW_INSTANCE  (r0 I:android.graphics.Rect) =  android.graphics.Rect  (LINE:140)\l0x0006: INVOKE  (r0 I:android.graphics.Rect) type: DIRECT call: android.graphics.Rect.\<init\>():void A[MD:():void (c)]\l0x0009: SPUT  (r0 I:android.graphics.Rect) com.google.android.material.chip.Chip.EMPTY_BOUNDS android.graphics.Rect \l0x000b: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:142)\l0x000c: NEW_ARRAY  (r1 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x000e: CONST  (r2 I:??[int, float, short, byte, char]) = (16842913(0x10100a1, float:2.369401E\-38) ??[int, float, short, byte, char]) \l0x0011: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: APUT  (r1 I:??[int, float][]), (r3 I:??[int, short, byte, char]), (r2 I:??[int, float, short, byte, char]) \l0x0014: SPUT  (r1 I:int[]) com.google.android.material.chip.Chip.SELECTED_STATE int[] \l0x0016: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[]  (LINE:143)\l0x0018: CONST  (r1 I:??[int, float, short, byte, char]) = (16842911(0x101009f, float:2.3694004E\-38) ??[int, float, short, byte, char]) \l0x001b: APUT  (r0 I:??[int, float][]), (r3 I:??[int, short, byte, char]), (r1 I:??[int, float, short, byte, char]) \l0x001d: SPUT  (r0 I:int[]) com.google.android.material.chip.Chip.CHECKABLE_STATE_SET int[] \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|RETURN\l|0x001f: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void com.google.android.material.chip.Chip.\<clinit\>()  | DONT_GENERATE\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

