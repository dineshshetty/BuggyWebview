digraph "CFG forcom.google.android.material.chip.Chip.onResolvePointerIcon(Landroid\/view\/MotionEvent;I)Landroid\/view\/PointerIcon;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r0 I:android.graphics.RectF) = (r3 I:com.google.android.material.chip.Chip) type: DIRECT call: com.google.android.material.chip.Chip.getCloseIconTouchBounds():android.graphics.RectF A[MD:():android.graphics.RectF (m)] (LINE:968)\l0x0004: INVOKE  (r1 I:float) = (r4 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getX():float A[MD:():float (c)]\l0x0008: INVOKE  (r2 I:float) = (r4 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getY():float A[MD:():float (c)]\l0x000c: INVOKE  (r0 I:boolean) = (r0 I:android.graphics.RectF), (r1 I:float), (r2 I:float) type: VIRTUAL call: android.graphics.RectF.contains(float, float):boolean A[MD:(float, float):boolean (c)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0023 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0012|0x0012: INVOKE  (r0 I:boolean) = (r3 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.isEnabled():boolean A[MD:():boolean (s)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x0018|0x0018: INVOKE  (r0 I:android.content.Context) = (r3 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.getContext():android.content.Context A[MD:():android.content.Context (s)] (LINE:969)\l0x001c: CONST  (r1 I:??[int, float, short, byte, char]) = (1002(0x3ea, float:1.404E\-42) ??[int, float, short, byte, char]) \l0x001e: INVOKE  (r0 I:android.view.PointerIcon) = (r0 I:android.content.Context), (r1 I:int) type: STATIC call: android.view.PointerIcon.getSystemIcon(android.content.Context, int):android.view.PointerIcon A[MD:(android.content.Context, int):android.view.PointerIcon (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0022|RETURN\l|0x0022: RETURN  (r0 I:android.view.PointerIcon) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0023: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:971)\l0x0024: RETURN  (r0 I:android.view.PointerIcon) A[SYNTHETIC]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0023|RETURN\lORIG_RETURN\l|0x0023: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:971)\l0x0024: RETURN  (r0 I:android.view.PointerIcon) \l}"];
MethodNode[shape=record,label="{public android.view.PointerIcon com.google.android.material.chip.Chip.onResolvePointerIcon((r3 'this' I:com.google.android.material.chip.Chip A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.MotionEvent A[D('event' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('pointerIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:20:0x0024 \-\> B:12:?, CROSS_EDGE: B:14:0x0010 \-\> B:19:0x0023\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0024: r4 'event' Landroid\/view\/MotionEvent;\l  \-1 \-0x0024: r5 'pointerIndex' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onResolvePointerIcon(android.view.MotionEvent, int):android.view.PointerIcon\}]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_12;
Node_21 -> Node_12;
Node_19 -> Node_12;
}

