digraph "CFG forcom.google.android.material.chip.Chip.updateTextPaintDrawState()V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:android.text.TextPaint) = (r4 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.getPaint():android.text.TextPaint A[MD:():android.text.TextPaint (s)] (LINE:1392)\l0x0004: IGET  (r1 I:com.google.android.material.chip.ChipDrawable) = (r4 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.chipDrawable com.google.android.material.chip.ChipDrawable  (LINE:1393)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|0x0006: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x000e \l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|0x0008: INVOKE  (r1 I:int[]) = (r1 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getState():int[] A[MD:():int[] (m)] (LINE:1394)\l0x000c: IPUT  (r1 I:int[]), (r0 I:android.text.TextPaint A[D('textPaint' android.text.TextPaint)]) android.text.TextPaint.drawableState int[] \l}"];
Node_15 [shape=record,label="{15\:\ 0x000e|0x000e: INVOKE  (r1 I:com.google.android.material.resources.TextAppearance) = (r4 I:com.google.android.material.chip.Chip) type: DIRECT call: com.google.android.material.chip.Chip.getTextAppearance():com.google.android.material.resources.TextAppearance A[MD:():com.google.android.material.resources.TextAppearance (m)] (LINE:1396)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('textAppearance' com.google.android.material.resources.TextAppearance)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:?  (LINE:1397)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0014|0x0014: INVOKE  (r2 I:android.content.Context) = (r4 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.getContext():android.content.Context A[MD:():android.content.Context (s)] (LINE:1398)\l0x0018: IGET  (r3 I:com.google.android.material.resources.TextAppearanceFontCallback) = (r4 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.fontCallback com.google.android.material.resources.TextAppearanceFontCallback \l0x001a: INVOKE  \l  (r1 I:com.google.android.material.resources.TextAppearance A[D('textAppearance' com.google.android.material.resources.TextAppearance)])\l  (r2 I:android.content.Context)\l  (r0 I:android.text.TextPaint A[D('textPaint' android.text.TextPaint)])\l  (r3 I:com.google.android.material.resources.TextAppearanceFontCallback)\l type: VIRTUAL call: com.google.android.material.resources.TextAppearance.updateDrawState(android.content.Context, android.text.TextPaint, com.google.android.material.resources.TextAppearanceFontCallback):void A[MD:(android.content.Context, android.text.TextPaint, com.google.android.material.resources.TextAppearanceFontCallback):void (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x001d|RETURN\lORIG_RETURN\l|0x001d: RETURN    (LINE:1400)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x001d: RETURN   A[SYNTHETIC] (LINE:1400)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.chip.Chip.updateTextPaintDrawState((r4 'this' I:com.google.android.material.chip.Chip A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0012 \-\> B:18:0x001d, CROSS_EDGE: B:13:0x0006 \-\> B:15:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x001d: r0 'textPaint' Landroid\/text\/TextPaint;\l  0x0012\-0x001d: r1 'textAppearance' Lcom\/google\/android\/material\/resources\/TextAppearance;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

