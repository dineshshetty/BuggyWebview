digraph "CFG forcom.google.android.material.chip.Chip.ensureAccessibleTouchTarget(I)Z" {
Node_45 [shape=record,label="{45\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ 0x0000|r7.minTouchTargetSize = r8\lr1 = 0\l}"];
Node_48 [shape=record,label="{48\:\ 0x0007|if (shouldEnsureMinTouchTargetSize() != false) goto L9\l}"];
Node_49 [shape=record,label="{49\:\ 0x0009}"];
Node_50 [shape=record,label="{50\:\ 0x000b|if (r7.insetBackgroundDrawable == null) goto L8\l}"];
Node_51 [shape=record,label="{51\:\ 0x000d|removeBackgroundInset()\l}"];
Node_53 [shape=record,label="{53\:\ 0x0014|RETURN\l|return false\l}"];
Node_46 [shape=record,label="{46\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_52 [shape=record,label="{52\:\ 0x0011|updateBackgroundDrawable()\l}"];
Node_54 [shape=record,label="{54\:\ 0x0015|int r0 = java.lang.Math.max(0, r8 \- r7.chipDrawable.getIntrinsicHeight())\lint r2 = java.lang.Math.max(0, r8 \- r7.chipDrawable.getIntrinsicWidth())\l}"];
Node_55 [shape=record,label="{55\:\ 0x002d|if (r2 \> 0) goto L17\l}"];
Node_56 [shape=record,label="{56\:\ 0x002f|if (r0 \> 0) goto L17\l}"];
Node_57 [shape=record,label="{57\:\ 0x0031}"];
Node_58 [shape=record,label="{58\:\ 0x0033|if (r7.insetBackgroundDrawable == null) goto L16\l}"];
Node_59 [shape=record,label="{59\:\ 0x0035|removeBackgroundInset()\l}"];
Node_61 [shape=record,label="{61\:\ 0x003c|RETURN\l|return false\l}"];
Node_60 [shape=record,label="{60\:\ 0x0039|updateBackgroundDrawable()\l}"];
Node_62 [shape=record,label="{62\:\ 0x003d|if (r2 \<= 0) goto L44\l}"];
Node_63 [shape=record,label="{63\:\ 0x003f|int r3 = r2 \/ 2\l}"];
Node_65 [shape=record,label="{65\:\ 0x0043|PHI: r3 \l  PHI: (r3v1 'deltaX' int) = (r3v0 'deltaX' int), (r3v2 'deltaX' int) binds: [B:64:0x0042, B:63:0x003f] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \<= 0) goto L21\l}"];
Node_66 [shape=record,label="{66\:\ 0x0045|int r1 = r0 \/ 2\l}"];
Node_67 [shape=record,label="{67\:\ 0x0047|PHI: r1 \l  PHI: (r1v1 'deltaY' int) = (r1v0 'deltaY' int), (r1v2 'deltaY' int) binds: [B:65:0x0043, B:66:0x0045] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_68 [shape=record,label="{68\:\ 0x004a|if (r7.insetBackgroundDrawable == null) goto L33\l}"];
Node_69 [shape=record,label="{69\:\ 0x004c|android.graphics.Rect r4 = new android.graphics.Rect()\lr7.insetBackgroundDrawable.getPadding(r4)\l}"];
Node_70 [shape=record,label="{70\:\ 0x0058|if (r4.top != r1) goto L33\l}"];
Node_71 [shape=record,label="{71\:\ 0x005a}"];
Node_72 [shape=record,label="{72\:\ 0x005c|if (r4.bottom != r1) goto L33\l}"];
Node_73 [shape=record,label="{73\:\ 0x005e}"];
Node_74 [shape=record,label="{74\:\ 0x0060|if (r4.left != r3) goto L33\l}"];
Node_75 [shape=record,label="{75\:\ 0x0062}"];
Node_76 [shape=record,label="{76\:\ 0x0064|if (r4.right != r3) goto L33\l}"];
Node_77 [shape=record,label="{77\:\ 0x0066|updateBackgroundDrawable()\l}"];
Node_78 [shape=record,label="{78\:\ 0x0069|RETURN\l|return true\l}"];
Node_79 [shape=record,label="{79\:\ 0x006a}"];
Node_80 [shape=record,label="{80\:\ 0x006e|if (android.os.Build.VERSION.SDK_INT \< 16) goto L43\l}"];
Node_81 [shape=record,label="{81\:\ 0x0070}"];
Node_82 [shape=record,label="{82\:\ 0x0074|if (getMinHeight() == r8) goto L38\l}"];
Node_83 [shape=record,label="{83\:\ 0x0076|setMinHeight(r8)\l}"];
Node_84 [shape=record,label="{84\:\ 0x0079}"];
Node_85 [shape=record,label="{85\:\ 0x007d|if (getMinWidth() == r8) goto L41\l}"];
Node_86 [shape=record,label="{86\:\ 0x007f|setMinWidth(r8)\l}"];
Node_88 [shape=record,label="{88\:\ 0x0089|insetChipBackgroundDrawable(r3, r1, r3, r1)\lupdateBackgroundDrawable()\l}"];
Node_89 [shape=record,label="{89\:\ 0x008f|RETURN\l|return true\l}"];
Node_87 [shape=record,label="{87\:\ 0x0083|setMinHeight(r8)\lsetMinWidth(r8)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0042|r3 = 0\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.chip.Chip.ensureAccessibleTouchTarget((r7v0 'this' com.google.android.material.chip.Chip A[IMMUTABLE_TYPE, THIS]), (r8v0 'minTargetPx' int A[D('minTargetPx' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:52:0x0011 \-\> B:53:0x0014, CROSS_EDGE: B:61:0x003c \-\> B:46:?, CROSS_EDGE: B:60:0x0039 \-\> B:61:0x003c, CROSS_EDGE: B:78:0x0069 \-\> B:46:?, CROSS_EDGE: B:89:0x008f \-\> B:46:?, CROSS_EDGE: B:85:0x007d \-\> B:88:0x0089, CROSS_EDGE: B:82:0x0074 \-\> B:84:0x0079, CROSS_EDGE: B:87:0x0083 \-\> B:88:0x0089, CROSS_EDGE: B:74:0x0060 \-\> B:79:0x006a, CROSS_EDGE: B:72:0x005c \-\> B:79:0x006a, CROSS_EDGE: B:70:0x0058 \-\> B:79:0x006a, CROSS_EDGE: B:68:0x004a \-\> B:79:0x006a, CROSS_EDGE: B:65:0x0043 \-\> B:67:0x0047, CROSS_EDGE: B:64:0x0042 \-\> B:65:0x0043, CROSS_EDGE: B:55:0x002d \-\> B:62:0x003d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_45;Node_45 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_54;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_53;
Node_53 -> Node_46;
Node_52 -> Node_53;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_62;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_62;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_61;
Node_61 -> Node_46;
Node_60 -> Node_61;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_67;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_79;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_79;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_79;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_79;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_79;
Node_77 -> Node_78;
Node_78 -> Node_46;
Node_79 -> Node_80;
Node_80 -> Node_81[style=dashed];
Node_80 -> Node_87;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_84;
Node_83 -> Node_84;
Node_84 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_88;
Node_86 -> Node_88;
Node_88 -> Node_89;
Node_89 -> Node_46;
Node_87 -> Node_88;
Node_64 -> Node_65;
}

