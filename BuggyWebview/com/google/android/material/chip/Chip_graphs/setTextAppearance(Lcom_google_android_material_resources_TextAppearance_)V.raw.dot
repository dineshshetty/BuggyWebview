digraph "CFG forcom.google.android.material.chip.Chip.setTextAppearance(Lcom\/google\/android\/material\/resources\/TextAppearance;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:com.google.android.material.chip.ChipDrawable) = (r1 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.chipDrawable com.google.android.material.chip.ChipDrawable  (LINE:1357)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0007 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: INVOKE  \l  (r0 I:com.google.android.material.chip.ChipDrawable)\l  (r2 I:com.google.android.material.resources.TextAppearance A[D('textAppearance' com.google.android.material.resources.TextAppearance)])\l type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.setTextAppearance(com.google.android.material.resources.TextAppearance):void A[MD:(com.google.android.material.resources.TextAppearance):void (m)] (LINE:1358)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0007|0x0007: INVOKE  (r1 I:com.google.android.material.chip.Chip) type: DIRECT call: com.google.android.material.chip.Chip.updateTextPaintDrawState():void A[MD:():void (m)] (LINE:1360)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:1361)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.Chip.setTextAppearance((r1 'this' I:com.google.android.material.chip.Chip A[IMMUTABLE_TYPE, THIS]), (r2 I:com.google.android.material.resources.TextAppearance A[D('textAppearance' com.google.android.material.resources.TextAppearance), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0002 \-\> B:12:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000a: r2 'textAppearance' Lcom\/google\/android\/material\/resources\/TextAppearance;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

