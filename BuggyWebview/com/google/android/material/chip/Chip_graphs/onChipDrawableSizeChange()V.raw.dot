digraph "CFG forcom.google.android.material.chip.Chip.onChipDrawableSizeChange()V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r2 I:com.google.android.material.chip.Chip) com.google.android.material.chip.Chip.minTouchTargetSize int  (LINE:709)\l0x0002: INVOKE  (r2 I:com.google.android.material.chip.Chip), (r0 I:int) type: VIRTUAL call: com.google.android.material.chip.Chip.ensureAccessibleTouchTarget(int):boolean A[MD:(int):boolean (m)]\l0x0005: INVOKE  (r2 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.requestLayout():void A[MD:():void (s)] (LINE:710)\l0x0008: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:711)\l0x000a: CONST  (r1 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x000c|0x000c: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x000e|0x000e: INVOKE  (r2 I:com.google.android.material.chip.Chip) type: VIRTUAL call: com.google.android.material.chip.Chip.invalidateOutline():void A[MD:():void (s)] (LINE:712)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0011|RETURN\lORIG_RETURN\l|0x0011: RETURN    (LINE:714)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0011: RETURN   A[SYNTHETIC] (LINE:714)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.Chip.onChipDrawableSizeChange((r2 'this' I:com.google.android.material.chip.Chip A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x000c \-\> B:12:0x0011\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [com.google.android.material.chip.ChipDrawable.Delegate.onChipDrawableSizeChange():void]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

