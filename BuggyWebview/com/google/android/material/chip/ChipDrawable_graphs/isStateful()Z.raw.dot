digraph "CFG forcom.google.android.material.chip.ChipDrawable.isStateful()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:android.content.res.ColorStateList) = (r1 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.chipSurfaceColor android.content.res.ColorStateList  (LINE:979)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:android.content.res.ColorStateList) type: STATIC call: com.google.android.material.chip.ChipDrawable.isStateful(android.content.res.ColorStateList):boolean A[MD:(android.content.res.ColorStateList):boolean (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0051 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r0 I:android.content.res.ColorStateList) = (r1 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.chipBackgroundColor android.content.res.ColorStateList \l0x000a: INVOKE  (r0 I:boolean) = (r0 I:android.content.res.ColorStateList) type: STATIC call: com.google.android.material.chip.ChipDrawable.isStateful(android.content.res.ColorStateList):boolean A[MD:(android.content.res.ColorStateList):boolean (m)] (LINE:980)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0051 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r0 I:android.content.res.ColorStateList) = (r1 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.chipStrokeColor android.content.res.ColorStateList \l0x0012: INVOKE  (r0 I:boolean) = (r0 I:android.content.res.ColorStateList) type: STATIC call: com.google.android.material.chip.ChipDrawable.isStateful(android.content.res.ColorStateList):boolean A[MD:(android.content.res.ColorStateList):boolean (m)] (LINE:981)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0051 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IGET  (r0 I:boolean) = (r1 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.useCompatRipple boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0024 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: IGET  (r0 I:android.content.res.ColorStateList) = (r1 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.compatRippleColor android.content.res.ColorStateList \l0x001e: INVOKE  (r0 I:boolean) = (r0 I:android.content.res.ColorStateList) type: STATIC call: com.google.android.material.chip.ChipDrawable.isStateful(android.content.res.ColorStateList):boolean A[MD:(android.content.res.ColorStateList):boolean (m)] (LINE:982)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0051 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: IGET  (r0 I:com.google.android.material.internal.TextDrawableHelper) = (r1 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.textDrawableHelper com.google.android.material.internal.TextDrawableHelper \l0x0026: INVOKE  (r0 I:com.google.android.material.resources.TextAppearance) = (r0 I:com.google.android.material.internal.TextDrawableHelper) type: VIRTUAL call: com.google.android.material.internal.TextDrawableHelper.getTextAppearance():com.google.android.material.resources.TextAppearance A[MD:():com.google.android.material.resources.TextAppearance (m)] (LINE:983)\l0x002a: INVOKE  (r0 I:boolean) = (r0 I:com.google.android.material.resources.TextAppearance) type: STATIC call: com.google.android.material.chip.ChipDrawable.isStateful(com.google.android.material.resources.TextAppearance):boolean A[MD:(com.google.android.material.resources.TextAppearance):boolean (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0051 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|0x0030: INVOKE  (r0 I:boolean) = (r1 I:com.google.android.material.chip.ChipDrawable) type: DIRECT call: com.google.android.material.chip.ChipDrawable.canShowCheckedIcon():boolean A[MD:():boolean (m)] (LINE:984)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|0x0034: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0051 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0036|0x0036: IGET  (r0 I:android.graphics.drawable.Drawable) = (r1 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.chipIcon android.graphics.drawable.Drawable \l0x0038: INVOKE  (r0 I:boolean) = (r0 I:android.graphics.drawable.Drawable) type: STATIC call: com.google.android.material.chip.ChipDrawable.isStateful(android.graphics.drawable.Drawable):boolean A[MD:(android.graphics.drawable.Drawable):boolean (m)] (LINE:985)\l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|0x003c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0051 \l}"];
Node_18 [shape=record,label="{18\:\ 0x003e|0x003e: IGET  (r0 I:android.graphics.drawable.Drawable) = (r1 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.checkedIcon android.graphics.drawable.Drawable \l0x0040: INVOKE  (r0 I:boolean) = (r0 I:android.graphics.drawable.Drawable) type: STATIC call: com.google.android.material.chip.ChipDrawable.isStateful(android.graphics.drawable.Drawable):boolean A[MD:(android.graphics.drawable.Drawable):boolean (m)] (LINE:986)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0044|0x0044: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0051 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0046|0x0046: IGET  (r0 I:android.content.res.ColorStateList) = (r1 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.tint android.content.res.ColorStateList \l0x0048: INVOKE  (r0 I:boolean) = (r0 I:android.content.res.ColorStateList) type: STATIC call: com.google.android.material.chip.ChipDrawable.isStateful(android.content.res.ColorStateList):boolean A[MD:(android.content.res.ColorStateList):boolean (m)] (LINE:987)\l}"];
Node_21 [shape=record,label="{21\:\ 0x004c|0x004c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x004f \l}"];
Node_23 [shape=record,label="{23\:\ 0x004f|SYNTHETIC\lRETURN\l|0x004f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0052: RETURN  (r0 I:boolean) A[SYNTHETIC] (LINE:979)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0051|RETURN\lORIG_RETURN\l|0x0051: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0052: RETURN  (r0 I:boolean)  (LINE:979)\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.material.chip.ChipDrawable.isStateful((r1 'this' I:com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:24:0x0051 \-\> B:25:0x0052, CROSS_EDGE: B:19:0x0044 \-\> B:24:0x0051, CROSS_EDGE: B:17:0x003c \-\> B:24:0x0051, CROSS_EDGE: B:15:0x0034 \-\> B:24:0x0051, CROSS_EDGE: B:13:0x002e \-\> B:24:0x0051, CROSS_EDGE: B:11:0x0022 \-\> B:24:0x0051, CROSS_EDGE: B:9:0x001a \-\> B:12:0x0024, CROSS_EDGE: B:7:0x0016 \-\> B:24:0x0051, CROSS_EDGE: B:5:0x000e \-\> B:24:0x0051, CROSS_EDGE: B:3:0x0006 \-\> B:24:0x0051\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.isStateful():boolean\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_24;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_24;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_24;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_24;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_24;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_24;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_24[style=dashed];
Node_23 -> Node_1;
Node_24 -> Node_1;
}

