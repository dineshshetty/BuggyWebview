digraph "CFG forcom.google.android.material.chip.ChipDrawable.getOutline(Landroid\/graphics\/Outline;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r8 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled boolean  (LINE:1280)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0008 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: INVOKE  \l  (r8 I:com.google.android.material.shape.MaterialShapeDrawable)\l  (r9 I:android.graphics.Outline A[D('outline' android.graphics.Outline)])\l type: SUPER call: com.google.android.material.shape.MaterialShapeDrawable.getOutline(android.graphics.Outline):void A[MD:(android.graphics.Outline):void (m)] (LINE:1281)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|RETURN\l|0x0007: RETURN    (LINE:1282)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: INVOKE  (r0 I:android.graphics.Rect) = (r8 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (s)] (LINE:1284)\l0x000c: INVOKE  (r1 I:boolean) = (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.isEmpty():boolean A[MD:():boolean (c)] (LINE:1285)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0018 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: IGET  (r1 I:float) = (r8 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.chipCornerRadius float  (LINE:1286)\l0x0014: INVOKE  \l  (r9 I:android.graphics.Outline A[D('outline' android.graphics.Outline)])\l  (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l  (r1 I:float)\l type: VIRTUAL call: android.graphics.Outline.setRoundRect(android.graphics.Rect, float):void A[MD:(android.graphics.Rect, float):void (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: INVOKE  (r1 I:int) = (r8 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getAlpha():int A[MD:():int (m)] (LINE:1291)\l0x002c: CAST (r1 I:float) = (float) (r1 I:int) \l0x002d: CONST  (r2 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char]) \l0x002f: ARITH  (r1 I:float) = (r1 I:float) \/ (r2 I:float) \l0x0030: INVOKE  (r9 I:android.graphics.Outline A[D('outline' android.graphics.Outline)]), (r1 I:float) type: VIRTUAL call: android.graphics.Outline.setAlpha(float):void A[MD:(float):void (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|RETURN\l|0x0033: RETURN    (LINE:1292)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1288)\l0x0019: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001a: INVOKE  (r5 I:int) = (r8 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getIntrinsicWidth():int A[MD:():int (m)]\l0x001e: INVOKE  (r6 I:int) = (r8 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getIntrinsicHeight():int A[MD:():int (m)]\l0x0022: IGET  (r7 I:float) = (r8 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.chipCornerRadius float \l0x0024: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('outline' android.graphics.Outline)]) \l0x0025: INVOKE  (r2 I:android.graphics.Outline), (r3 I:int), (r4 I:int), (r5 I:int), (r6 I:int), (r7 I:float) type: VIRTUAL call: android.graphics.Outline.setRoundRect(int, int, int, int, float):void A[MD:(int, int, int, int, float):void (c)]\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.ChipDrawable.getOutline((r8 'this' I:com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r9 I:android.graphics.Outline A[D('outline' android.graphics.Outline), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:11:0x0033 \-\> B:1:?, CROSS_EDGE: B:9:0x0018 \-\> B:10:0x0028\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x0033: r0 'bounds' Landroid\/graphics\/Rect;\l  \-1 \-0x0033: r9 'outline' Landroid\/graphics\/Outline;\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.getOutline(android.graphics.Outline):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_9 -> Node_10;
}

