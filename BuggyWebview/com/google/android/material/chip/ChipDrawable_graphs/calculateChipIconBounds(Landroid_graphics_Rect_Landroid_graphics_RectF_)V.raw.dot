digraph "CFG forcom.google.android.material.chip.ChipDrawable.calculateChipIconBounds(Landroid\/graphics\/Rect;Landroid\/graphics\/RectF;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r7 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.RectF.setEmpty():void A[MD:():void (c)] (LINE:823)\l0x0003: INVOKE  (r0 I:boolean) = (r5 I:com.google.android.material.chip.ChipDrawable) type: DIRECT call: com.google.android.material.chip.ChipDrawable.showsChipIcon():boolean A[MD:():boolean (m)] (LINE:825)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: INVOKE  (r0 I:boolean) = (r5 I:com.google.android.material.chip.ChipDrawable) type: DIRECT call: com.google.android.material.chip.ChipDrawable.showsCheckedIcon():boolean A[MD:():boolean (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:? \l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|0x0049: RETURN   A[SYNTHETIC] (LINE:841)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IGET  (r0 I:float) = (r5 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.chipStartPadding float  (LINE:826)\l0x0011: IGET  (r1 I:float) = (r5 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.iconStartPadding float \l0x0013: ARITH  (r0 I:float) = (r0 I:float) + (r1 I:float) \l0x0014: INVOKE  (r1 I:float) = (r5 I:com.google.android.material.chip.ChipDrawable) type: DIRECT call: com.google.android.material.chip.ChipDrawable.getCurrentChipIconWidth():float A[MD:():float (m)] (LINE:827)\l0x0018: INVOKE  (r2 I:int) = (r5 I:android.graphics.drawable.Drawable) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.getLayoutDirection(android.graphics.drawable.Drawable):int A[MD:(android.graphics.drawable.Drawable):int (m)] (LINE:829)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002a \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: IGET  (r2 I:int) = (r6 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:830)\l0x0020: CAST (r2 I:float) = (float) (r2 I:int) \l0x0021: ARITH  (r2 I:float) = (r2 I:float) + (r0 I:float A[D('offsetFromStart' float)]) \l0x0022: IPUT  (r2 I:float), (r7 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.left float \l0x0024: IGET  (r2 I:float) = (r7 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.left float  (LINE:831)\l0x0026: ARITH  (r2 I:float) = (r2 I:float) + (r1 I:float A[D('chipWidth' float)]) \l0x0027: IPUT  (r2 I:float), (r7 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.right float \l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|0x0035: INVOKE  (r2 I:float) = (r5 I:com.google.android.material.chip.ChipDrawable) type: DIRECT call: com.google.android.material.chip.ChipDrawable.getCurrentChipIconHeight():float A[MD:():float (m)] (LINE:837)\l0x0039: INVOKE  (r3 I:float) = (r6 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.exactCenterY():float A[MD:():float (c)] (LINE:838)\l0x003d: CONST  (r4 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x003f: ARITH  (r4 I:float) = (r2 I:float A[D('chipHeight' float)]) \/ (r4 I:float) \l0x0041: ARITH  (r3 I:float) = (r3 I:float) \- (r4 I:float) \l0x0042: IPUT  (r3 I:float), (r7 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.top float \l0x0044: IGET  (r3 I:float) = (r7 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.top float  (LINE:839)\l0x0046: ARITH  (r3 I:float) = (r3 I:float) + (r2 I:float A[D('chipHeight' float)]) \l0x0047: IPUT  (r3 I:float), (r7 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.bottom float \l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|RETURN\lORIG_RETURN\l|0x0049: RETURN    (LINE:841)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: IGET  (r2 I:int) = (r6 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:833)\l0x002c: CAST (r2 I:float) = (float) (r2 I:int) \l0x002d: ARITH  (r2 I:float) = (r2 I:float) \- (r0 I:float A[D('offsetFromStart' float)]) \l0x002e: IPUT  (r2 I:float), (r7 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.right float \l0x0030: IGET  (r2 I:float) = (r7 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.right float  (LINE:834)\l0x0032: ARITH  (r2 I:float) = (r2 I:float) \- (r1 I:float A[D('chipWidth' float)]) \l0x0033: IPUT  (r2 I:float), (r7 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.left float \l}"];
MethodNode[shape=record,label="{private void com.google.android.material.chip.ChipDrawable.calculateChipIconBounds((r5 'this' I:com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r6 I:android.graphics.Rect A[D('bounds' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x002a \-\> B:10:0x0035, CROSS_EDGE: B:5:0x000d \-\> B:11:0x0049, CROSS_EDGE: B:3:0x0007 \-\> B:6:0x000f\lDebug Info:\l  0x0014\-0x0049: r0 'offsetFromStart' F\l  0x0018\-0x0049: r1 'chipWidth' F\l  0x0039\-0x0049: r2 'chipHeight' F\l  \-1 \-0x0049: r6 'bounds' Landroid\/graphics\/Rect;\l  \-1 \-0x0049: r7 'outBounds' Landroid\/graphics\/RectF;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_12 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_9 -> Node_10;
}

