digraph "CFG forcom.google.android.material.chip.ChipDrawable.applyChildDrawable(Landroid\/graphics\/drawable\/Drawable;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawable' android.graphics.drawable.Drawable)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0003  (LINE:1326)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|RETURN\l|0x0002: RETURN    (LINE:1327)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|0x0003: INVOKE  \l  (r3 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)])\l  (r2 I:android.graphics.drawable.Drawable$Callback)\l type: VIRTUAL call: android.graphics.drawable.Drawable.setCallback(android.graphics.drawable.Drawable$Callback):void A[MD:(android.graphics.drawable.Drawable$Callback):void (c)] (LINE:1329)\l0x0006: INVOKE  (r0 I:int) = (r2 I:android.graphics.drawable.Drawable) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.getLayoutDirection(android.graphics.drawable.Drawable):int A[MD:(android.graphics.drawable.Drawable):int (m)] (LINE:1330)\l0x000a: INVOKE  (r3 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]), (r0 I:int) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setLayoutDirection(android.graphics.drawable.Drawable, int):boolean A[MD:(android.graphics.drawable.Drawable, int):boolean (m)]\l0x000d: INVOKE  (r0 I:int) = (r2 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getLevel():int A[MD:():int (s)] (LINE:1331)\l0x0011: INVOKE  (r3 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]), (r0 I:int) type: VIRTUAL call: android.graphics.drawable.Drawable.setLevel(int):boolean A[MD:(int):boolean (c)]\l0x0014: INVOKE  (r0 I:boolean) = (r2 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.isVisible():boolean A[MD:():boolean (s)] (LINE:1332)\l0x0018: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: INVOKE  \l  (r3 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)])\l  (r0 I:boolean)\l  (r1 I:boolean)\l type: VIRTUAL call: android.graphics.drawable.Drawable.setVisible(boolean, boolean):boolean A[MD:(boolean, boolean):boolean (c)]\l0x001c: IGET  (r0 I:android.graphics.drawable.Drawable) = (r2 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.closeIcon android.graphics.drawable.Drawable  (LINE:1334)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawable' android.graphics.drawable.Drawable)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0033 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: INVOKE  (r0 I:boolean) = (r3 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.isStateful():boolean A[MD:():boolean (c)] (LINE:1335)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: INVOKE  (r0 I:int[]) = (r2 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getCloseIconState():int[] A[MD:():int[] (m)] (LINE:1336)\l0x002a: INVOKE  (r3 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]), (r0 I:int[]) type: VIRTUAL call: android.graphics.drawable.Drawable.setState(int[]):boolean A[MD:(int[]):boolean (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: IGET  (r0 I:android.content.res.ColorStateList) = (r2 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.closeIconTint android.content.res.ColorStateList  (LINE:1338)\l0x002f: INVOKE  \l  (r3 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)])\l  (r0 I:android.content.res.ColorStateList)\l type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable, android.content.res.ColorStateList):void A[MD:(android.graphics.drawable.Drawable, android.content.res.ColorStateList):void (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|RETURN\l|0x0032: RETURN    (LINE:1339)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: IGET  (r0 I:android.graphics.drawable.Drawable) = (r2 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.chipIcon android.graphics.drawable.Drawable  (LINE:1341)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|0x0035: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawable' android.graphics.drawable.Drawable)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0040 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|0x0037: IGET  (r1 I:boolean) = (r2 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.hasChipIconTint boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|0x0039: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0040 \l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|0x003b: IGET  (r1 I:android.content.res.ColorStateList) = (r2 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.chipIconTint android.content.res.ColorStateList  (LINE:1342)\l0x003d: INVOKE  (r0 I:android.graphics.drawable.Drawable), (r1 I:android.content.res.ColorStateList) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable, android.content.res.ColorStateList):void A[MD:(android.graphics.drawable.Drawable, android.content.res.ColorStateList):void (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0040|0x0040: INVOKE  (r0 I:boolean) = (r3 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.isStateful():boolean A[MD:():boolean (c)] (LINE:1344)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|0x0044: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:? \l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|0x0046: INVOKE  (r0 I:int[]) = (r2 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getState():int[] A[MD:():int[] (m)] (LINE:1345)\l0x004a: INVOKE  (r3 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]), (r0 I:int[]) type: VIRTUAL call: android.graphics.drawable.Drawable.setState(int[]):boolean A[MD:(int[]):boolean (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x004d|RETURN\lORIG_RETURN\l|0x004d: RETURN    (LINE:1347)\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|0x004d: RETURN   A[SYNTHETIC] (LINE:1347)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.chip.ChipDrawable.applyChildDrawable((r2 'this' I:com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r3 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0032 \-\> B:1:?, CROSS_EDGE: B:7:0x0024 \-\> B:9:0x002d, CROSS_EDGE: B:19:0x004d \-\> B:1:?, CROSS_EDGE: B:17:0x0044 \-\> B:19:0x004d, CROSS_EDGE: B:14:0x0039 \-\> B:16:0x0040, CROSS_EDGE: B:12:0x0035 \-\> B:16:0x0040\lDebug Info:\l  \-1 \-0x004d: r3 'drawable' Landroid\/graphics\/drawable\/Drawable;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_1;
Node_20 -> Node_1;
}

