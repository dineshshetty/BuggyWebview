digraph "CFG forcom.google.android.material.chip.ChipDrawable.setText(Ljava\/lang\/CharSequence;)V" {
subgraph cluster_Region_1752668048 {
label = "R(2:(1:2)|(1:(1:5)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_982874684 {
label = "IF [B:2:0x0000] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|if (r3 == null) goto L2\l}"];
subgraph cluster_Region_5011144 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|java.lang.String r3 = \"\"\l}"];
}
}
subgraph cluster_Region_1714533124 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_850289477 {
label = "IF [B:5:0x000a] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000a|if (android.text.TextUtils.equals(r2.text, r3) == false) goto L5\l}"];
subgraph cluster_Region_603700150 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000c|r2.text = r3\lr2.textDrawableHelper.setTextWidthDirty(true)\linvalidateSelf()\lonSizeChange()\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0004|PHI: r3 \l  PHI: (r3v1 'text' java.lang.CharSequence) = (r3v0 'text' java.lang.CharSequence), (r3v2 'text' java.lang.CharSequence) binds: [B:2:0x0000, B:3:0x0002] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001a|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.ChipDrawable.setText((r2v0 'this' com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r3v0 'text' java.lang.CharSequence A[D('text' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000a \-\> B:7:0x001a, CROSS_EDGE: B:2:0x0000 \-\> B:4:0x0004\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_0 -> Node_2;
Node_4 -> Node_5;
Node_7 -> Node_1;
Node_8 -> Node_1;
}

