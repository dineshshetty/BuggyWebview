digraph "CFG forcom.google.android.material.chip.ChipDrawable.setText(Ljava\/lang\/CharSequence;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|if (r3 != null) goto L3\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|java.lang.String r3 = \"\"\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|PHI: r3 \l  PHI: (r3v1 'text' java.lang.CharSequence) = (r3v0 'text' java.lang.CharSequence), (r3v2 'text' java.lang.CharSequence) binds: [B:2:0x0000, B:3:0x0002] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|if (android.text.TextUtils.equals(r2.text, r3) != false) goto L8\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|r2.text = r3\lr2.textDrawableHelper.setTextWidthDirty(true)\linvalidateSelf()\lonSizeChange()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.ChipDrawable.setText((r2v0 'this' com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r3v0 'text' java.lang.CharSequence A[D('text' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000a \-\> B:7:0x001a, CROSS_EDGE: B:2:0x0000 \-\> B:4:0x0004\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_1;
}

