digraph "CFG forcom.google.android.material.chip.ChipDrawable.drawDebug(Landroid\/graphics\/Canvas;Landroid\/graphics\/Rect;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.Paint) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.debugPaint android.graphics.Paint  (LINE:782)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (\-16777216(0xffffffffff000000, float:\-1.7014118E38) ??[int, float, short, byte, char])  (LINE:783)\l0x0006: CONST  (r2 I:??[int, float, short, byte, char]) = (127(0x7f, float:1.78E\-43) ??[int, float, short, byte, char]) \l0x0008: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: androidx.core.graphics.ColorUtils.setAlphaComponent(int, int):int A[MD:(int, int):int (m)]\l0x000c: INVOKE  (r0 I:android.graphics.Paint), (r1 I:int) type: VIRTUAL call: android.graphics.Paint.setColor(int):void A[MD:(int):void (c)]\l0x000f: IGET  (r0 I:android.graphics.Paint) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.debugPaint android.graphics.Paint  (LINE:786)\l0x0011: INVOKE  \l  (r10 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r11 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l  (r0 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawRect(android.graphics.Rect, android.graphics.Paint):void A[MD:(android.graphics.Rect, android.graphics.Paint):void (c)]\l0x0014: INVOKE  (r0 I:boolean) = (r9 I:com.google.android.material.chip.ChipDrawable) type: DIRECT call: com.google.android.material.chip.ChipDrawable.showsChipIcon():boolean A[MD:():boolean (m)] (LINE:789)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0020 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: INVOKE  (r0 I:boolean) = (r9 I:com.google.android.material.chip.ChipDrawable) type: DIRECT call: com.google.android.material.chip.ChipDrawable.showsCheckedIcon():boolean A[MD:():boolean (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002c \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: IGET  (r0 I:java.lang.CharSequence) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.text java.lang.CharSequence  (LINE:795)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0044 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: IGET  (r0 I:int) = (r11 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:796)\l0x0032: CAST (r4 I:float) = (float) (r0 I:int) \l0x0033: INVOKE  (r5 I:float) = (r11 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.exactCenterY():float A[MD:():float (c)] (LINE:797)\l0x0037: IGET  (r0 I:int) = (r11 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.right int \l0x0039: CAST (r6 I:float) = (float) (r0 I:int) \l0x003a: INVOKE  (r7 I:float) = (r11 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.exactCenterY():float A[MD:():float (c)]\l0x003e: IGET  (r8 I:android.graphics.Paint) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.debugPaint android.graphics.Paint \l0x0040: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)])  (LINE:796)\l0x0041: INVOKE  (r3 I:android.graphics.Canvas), (r4 I:float), (r5 I:float), (r6 I:float), (r7 I:float), (r8 I:android.graphics.Paint) type: VIRTUAL call: android.graphics.Canvas.drawLine(float, float, float, float, android.graphics.Paint):void A[MD:(float, float, float, float, android.graphics.Paint):void (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|0x0044: INVOKE  (r0 I:boolean) = (r9 I:com.google.android.material.chip.ChipDrawable) type: DIRECT call: com.google.android.material.chip.ChipDrawable.showsCloseIcon():boolean A[MD:():boolean (m)] (LINE:801)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|0x0048: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0056 \l}"];
Node_14 [shape=record,label="{14\:\ 0x004a|0x004a: IGET  (r0 I:android.graphics.RectF) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.rectF android.graphics.RectF  (LINE:802)\l0x004c: INVOKE  \l  (r9 I:com.google.android.material.chip.ChipDrawable)\l  (r11 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l  (r0 I:android.graphics.RectF)\l type: DIRECT call: com.google.android.material.chip.ChipDrawable.calculateCloseIconBounds(android.graphics.Rect, android.graphics.RectF):void A[MD:(android.graphics.Rect, android.graphics.RectF):void (m)]\l0x004f: IGET  (r0 I:android.graphics.RectF) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.rectF android.graphics.RectF  (LINE:803)\l0x0051: IGET  (r1 I:android.graphics.Paint) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.debugPaint android.graphics.Paint \l0x0053: INVOKE  \l  (r10 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.RectF)\l  (r1 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawRect(android.graphics.RectF, android.graphics.Paint):void A[MD:(android.graphics.RectF, android.graphics.Paint):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0056|0x0056: IGET  (r0 I:android.graphics.Paint) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.debugPaint android.graphics.Paint  (LINE:807)\l0x0058: CONST  (r1 I:??[int, float, short, byte, char]) = (\-65536(0xffffffffffff0000, float:NaN) ??[int, float, short, byte, char]) \l0x005a: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: androidx.core.graphics.ColorUtils.setAlphaComponent(int, int):int A[MD:(int, int):int (m)]\l0x005e: INVOKE  (r0 I:android.graphics.Paint), (r1 I:int) type: VIRTUAL call: android.graphics.Paint.setColor(int):void A[MD:(int):void (c)]\l0x0061: IGET  (r0 I:android.graphics.RectF) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.rectF android.graphics.RectF  (LINE:808)\l0x0063: INVOKE  \l  (r9 I:com.google.android.material.chip.ChipDrawable)\l  (r11 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l  (r0 I:android.graphics.RectF)\l type: DIRECT call: com.google.android.material.chip.ChipDrawable.calculateChipTouchBounds(android.graphics.Rect, android.graphics.RectF):void A[MD:(android.graphics.Rect, android.graphics.RectF):void (m)]\l0x0066: IGET  (r0 I:android.graphics.RectF) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.rectF android.graphics.RectF  (LINE:809)\l0x0068: IGET  (r1 I:android.graphics.Paint) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.debugPaint android.graphics.Paint \l0x006a: INVOKE  \l  (r10 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.RectF)\l  (r1 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawRect(android.graphics.RectF, android.graphics.Paint):void A[MD:(android.graphics.RectF, android.graphics.Paint):void (c)]\l0x006d: IGET  (r0 I:android.graphics.Paint) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.debugPaint android.graphics.Paint  (LINE:812)\l0x006f: CONST  (r1 I:??[int, float, short, byte, char]) = (\-16711936(0xffffffffff00ff00, float:\-1.7146522E38) ??[int, float, short, byte, char]) \l0x0072: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: androidx.core.graphics.ColorUtils.setAlphaComponent(int, int):int A[MD:(int, int):int (m)]\l0x0076: INVOKE  (r0 I:android.graphics.Paint), (r1 I:int) type: VIRTUAL call: android.graphics.Paint.setColor(int):void A[MD:(int):void (c)]\l0x0079: IGET  (r0 I:android.graphics.RectF) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.rectF android.graphics.RectF  (LINE:813)\l0x007b: INVOKE  \l  (r9 I:com.google.android.material.chip.ChipDrawable)\l  (r11 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l  (r0 I:android.graphics.RectF)\l type: DIRECT call: com.google.android.material.chip.ChipDrawable.calculateCloseIconTouchBounds(android.graphics.Rect, android.graphics.RectF):void A[MD:(android.graphics.Rect, android.graphics.RectF):void (m)]\l0x007e: IGET  (r0 I:android.graphics.RectF) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.rectF android.graphics.RectF  (LINE:814)\l0x0080: IGET  (r1 I:android.graphics.Paint) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.debugPaint android.graphics.Paint \l0x0082: INVOKE  \l  (r10 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.RectF)\l  (r1 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawRect(android.graphics.RectF, android.graphics.Paint):void A[MD:(android.graphics.RectF, android.graphics.Paint):void (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0085|RETURN\lORIG_RETURN\l|0x0085: RETURN    (LINE:816)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: IGET  (r0 I:android.graphics.RectF) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.rectF android.graphics.RectF  (LINE:790)\l0x0022: INVOKE  \l  (r9 I:com.google.android.material.chip.ChipDrawable)\l  (r11 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l  (r0 I:android.graphics.RectF)\l type: DIRECT call: com.google.android.material.chip.ChipDrawable.calculateChipIconBounds(android.graphics.Rect, android.graphics.RectF):void A[MD:(android.graphics.Rect, android.graphics.RectF):void (m)]\l0x0025: IGET  (r0 I:android.graphics.RectF) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.rectF android.graphics.RectF  (LINE:791)\l0x0027: IGET  (r1 I:android.graphics.Paint) = (r9 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.debugPaint android.graphics.Paint \l0x0029: INVOKE  \l  (r10 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.RectF)\l  (r1 I:android.graphics.Paint)\l type: VIRTUAL call: android.graphics.Canvas.drawRect(android.graphics.RectF, android.graphics.Paint):void A[MD:(android.graphics.RectF, android.graphics.Paint):void (c)]\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|0x0085: RETURN   A[SYNTHETIC] (LINE:816)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.chip.ChipDrawable.drawDebug((r9 'this' I:com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r10 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.graphics.Rect A[D('bounds' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0048 \-\> B:15:0x0056, CROSS_EDGE: B:10:0x002e \-\> B:12:0x0044, CROSS_EDGE: B:7:0x001e \-\> B:9:0x002c, CROSS_EDGE: B:5:0x0018 \-\> B:8:0x0020, CROSS_EDGE: B:3:0x0002 \-\> B:16:0x0085\lDebug Info:\l  \-1 \-0x0085: r10 'canvas' Landroid\/graphics\/Canvas;\l  \-1 \-0x0085: r11 'bounds' Landroid\/graphics\/Rect;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_8 -> Node_9;
Node_17 -> Node_1;
}

