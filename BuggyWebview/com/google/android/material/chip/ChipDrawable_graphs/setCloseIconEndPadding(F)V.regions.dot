digraph "CFG forcom.google.android.material.chip.ChipDrawable.setCloseIconEndPadding(F)V" {
subgraph cluster_Region_218113297 {
label = "R(1:(1:(2:3|(1:(1:5)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1062718142 {
label = "R(1:(2:3|(1:(1:5))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1908475028 {
label = "IF [B:3:0x0004] THEN: R(2:3|(1:(1:5))) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r1.closeIconEndPadding != r2) goto L3\l}"];
subgraph cluster_Region_1932041886 {
label = "R(2:3|(1:(1:5)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0006|r1.closeIconEndPadding = r2\linvalidateSelf()\l}"];
subgraph cluster_Region_2139886919 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2123313714 {
label = "IF [B:5:0x000f] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|if (showsCloseIcon() != false) goto L5\l}"];
subgraph cluster_Region_127102163 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0011|onSizeChange()\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0014|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.ChipDrawable.setCloseIconEndPadding((r1v0 'this' com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r2v0 'closeIconEndPadding' float A[D('closeIconEndPadding' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000f \-\> B:7:0x0014, CROSS_EDGE: B:3:0x0004 \-\> B:7:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_8[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_9[style=dashed];
Node_6 -> Node_7;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_7 -> Node_1;
Node_9 -> Node_1;
Node_8 -> Node_1;
}

