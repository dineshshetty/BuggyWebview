digraph "CFG forcom.google.android.material.chip.ChipDrawable.setChipStrokeColor(Landroid\/content\/res\/ColorStateList;)V" {
subgraph cluster_Region_249218158 {
label = "R(1:(1:(3:3|(1:5)|6)))";
node [shape=record,color=blue];
subgraph cluster_Region_236023845 {
label = "R(1:(3:3|(1:5)|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1870355634 {
label = "IF [B:3:0x0002] THEN: R(3:3|(1:5)|6) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r1.chipStrokeColor != r2) goto L3\l}"];
subgraph cluster_Region_1152779023 {
label = "R(3:3|(1:5)|6)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0004|r1.chipStrokeColor = r2\l}"];
subgraph cluster_IfRegion_471287363 {
label = "IF [B:5:0x0008] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0008|if (r1.isShapeThemingEnabled != false) goto L5\l}"];
subgraph cluster_Region_427986364 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000a|setStrokeColor(r2)\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x000d|onStateChange(getState())\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0014|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.ChipDrawable.setChipStrokeColor((r1v0 'this' com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r2v0 'chipStrokeColor' android.content.res.ColorStateList A[D('chipStrokeColor' android.content.res.ColorStateList), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0008 \-\> B:7:0x000d, CROSS_EDGE: B:3:0x0002 \-\> B:8:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_9[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_8 -> Node_1;
Node_9 -> Node_1;
}

