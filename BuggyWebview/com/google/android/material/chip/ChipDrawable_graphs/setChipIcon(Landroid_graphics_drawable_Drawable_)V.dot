digraph "CFG forcom.google.android.material.chip.ChipDrawable.setChipIcon(Landroid\/graphics\/drawable\/Drawable;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|android.graphics.drawable.Drawable r0 = getChipIcon()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r0 == r5) goto L16\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|float r1 = calculateChipIconWidth()\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|if (r5 == null) goto L15\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|android.graphics.drawable.Drawable r2 = androidx.core.graphics.drawable.DrawableCompat.wrap(r5).mutate()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|PHI: r2 \l  PHI: (r2v1 android.graphics.drawable.Drawable) = (r2v0 android.graphics.drawable.Drawable), (r2v4 android.graphics.drawable.Drawable) binds: [B:7:0x0015, B:6:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|r4.chipIcon = r2\lfloat r2 = calculateChipIconWidth()\lunapplyChildDrawable(r0)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|if (showsChipIcon() == false) goto L9\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|applyChildDrawable(r4.chipIcon)\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|invalidateSelf()\l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|if ((r1 \> r2 ? 1 : (r1 == r2 ? 0 : \-1)) == 0) goto L14\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|onSizeChange()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0034|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|r2 = null\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.ChipDrawable.setChipIcon((r4v0 'this' com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r5v0 'chipIcon' android.graphics.drawable.Drawable A[D('chipIcon' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x002f \-\> B:14:0x0034, CROSS_EDGE: B:9:0x0023 \-\> B:11:0x002a, CROSS_EDGE: B:7:0x0015 \-\> B:8:0x0016, CROSS_EDGE: B:3:0x0004 \-\> B:14:0x0034\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_16 -> Node_1;
Node_7 -> Node_8;
Node_15 -> Node_1;
}

