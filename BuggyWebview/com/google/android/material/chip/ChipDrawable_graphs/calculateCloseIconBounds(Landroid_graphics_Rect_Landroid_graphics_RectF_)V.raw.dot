digraph "CFG forcom.google.android.material.chip.ChipDrawable.calculateCloseIconBounds(Landroid\/graphics\/Rect;Landroid\/graphics\/RectF;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r6 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.RectF.setEmpty():void A[MD:():void (c)] (LINE:914)\l0x0003: INVOKE  (r0 I:boolean) = (r4 I:com.google.android.material.chip.ChipDrawable) type: DIRECT call: com.google.android.material.chip.ChipDrawable.showsCloseIcon():boolean A[MD:():boolean (m)] (LINE:916)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IGET  (r0 I:float) = (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.chipEndPadding float  (LINE:917)\l0x000b: IGET  (r1 I:float) = (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.closeIconEndPadding float \l0x000d: ARITH  (r0 I:float) = (r0 I:float) + (r1 I:float) \l0x000e: INVOKE  (r1 I:int) = (r4 I:android.graphics.drawable.Drawable) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.getLayoutDirection(android.graphics.drawable.Drawable):int A[MD:(android.graphics.drawable.Drawable):int (m)] (LINE:919)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0022 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IGET  (r1 I:int) = (r5 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:920)\l0x0016: CAST (r1 I:float) = (float) (r1 I:int) \l0x0017: ARITH  (r1 I:float) = (r1 I:float) \- (r0 I:float A[D('offsetFromEnd' float)]) \l0x0018: IPUT  (r1 I:float), (r6 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.right float \l0x001a: IGET  (r1 I:float) = (r6 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.right float  (LINE:921)\l0x001c: IGET  (r2 I:float) = (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.closeIconSize float \l0x001e: ARITH  (r1 I:float) = (r1 I:float) \- (r2 I:float) \l0x001f: IPUT  (r1 I:float), (r6 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.left float \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: INVOKE  (r1 I:float) = (r5 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.exactCenterY():float A[MD:():float (c)] (LINE:927)\l0x0033: IGET  (r2 I:float) = (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.closeIconSize float \l0x0035: CONST  (r3 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0037: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l0x0038: ARITH  (r1 I:float) = (r1 I:float) \- (r2 I:float) \l0x0039: IPUT  (r1 I:float), (r6 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.top float \l0x003b: IGET  (r1 I:float) = (r6 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.top float  (LINE:928)\l0x003d: IGET  (r2 I:float) = (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.closeIconSize float \l0x003f: ARITH  (r1 I:float) = (r1 I:float) + (r2 I:float) \l0x0040: IPUT  (r1 I:float), (r6 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.bottom float \l}"];
Node_9 [shape=record,label="{9\:\ 0x0042|RETURN\lORIG_RETURN\l|0x0042: RETURN    (LINE:930)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: IGET  (r1 I:int) = (r5 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:923)\l0x0024: CAST (r1 I:float) = (float) (r1 I:int) \l0x0025: ARITH  (r1 I:float) = (r1 I:float) + (r0 I:float A[D('offsetFromEnd' float)]) \l0x0026: IPUT  (r1 I:float), (r6 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.left float \l0x0028: IGET  (r1 I:float) = (r6 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.left float  (LINE:924)\l0x002a: IGET  (r2 I:float) = (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.closeIconSize float \l0x002c: ARITH  (r1 I:float) = (r1 I:float) + (r2 I:float) \l0x002d: IPUT  (r1 I:float), (r6 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF)]) android.graphics.RectF.right float \l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|0x0042: RETURN   A[SYNTHETIC] (LINE:930)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.chip.ChipDrawable.calculateCloseIconBounds((r4 'this' I:com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r5 I:android.graphics.Rect A[D('bounds' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.graphics.RectF A[D('outBounds' android.graphics.RectF), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0022 \-\> B:8:0x002f, CROSS_EDGE: B:3:0x0007 \-\> B:9:0x0042\lDebug Info:\l  0x000e\-0x0042: r0 'offsetFromEnd' F\l  \-1 \-0x0042: r5 'bounds' Landroid\/graphics\/Rect;\l  \-1 \-0x0042: r6 'outBounds' Landroid\/graphics\/RectF;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_7 -> Node_8;
Node_10 -> Node_1;
}

