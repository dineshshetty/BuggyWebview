digraph "CFG forcom.google.android.material.chip.ChipDrawable.\<init\>(Landroid\/content\/Context;Landroid\/util\/AttributeSet;II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|super(r5, r6, r7, r8)\lr4.chipCornerRadius = \-1.0f\lr4.chipPaint = new android.graphics.Paint(1)\lr4.fontMetrics = new android.graphics.Paint.FontMetrics()\lr4.rectF = new android.graphics.RectF()\lr4.pointF = new android.graphics.PointF()\lr4.shapePath = new android.graphics.Path()\lr4.alpha = 255\lr4.tintMode = android.graphics.PorterDuff.Mode.SRC_IN\lr4.delegate = new java.lang.ref.WeakReference\<\>(null)\linitializeElevationOverlay(r5)\lr4.context = r5\lcom.google.android.material.internal.TextDrawableHelper r0 = new com.google.android.material.internal.TextDrawableHelper(r4)\lr4.textDrawableHelper = r0\lr4.text = \"\"\landroid.text.TextPaint r0 = r0.getTextPaint()\lr0.density = r5.getResources().getDisplayMetrics().density\lr4.debugPaint = null\lint[] r0 = com.google.android.material.chip.ChipDrawable.DEFAULT_STATE\lsetState(r0)\lsetCloseIconState(r0)\lr4.shouldDrawText = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x006a|if (com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE == false) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x006c|com.google.android.material.chip.ChipDrawable.closeIconRippleMask.setTint(\-1)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0072|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.chip.ChipDrawable.\<init\>((r4v0 'this' com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r5v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'attrs' android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'defStyleAttr' int A[D('defStyleAttr' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'defStyleRes' int A[D('defStyleRes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x006a \-\> B:5:0x0072\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

