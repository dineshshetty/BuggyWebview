digraph "CFG forcom.google.android.material.chip.ChipDrawable.getCurrentChipIconHeight()F" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r3.currentChecked == false) goto L14\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|android.graphics.drawable.Drawable r0 = r3.checkedIcon\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|PHI: r0 \l  PHI: (r0v2 'icon' android.graphics.drawable.Drawable) = (r0v1 'icon' android.graphics.drawable.Drawable), (r0v3 'icon' android.graphics.drawable.Drawable) binds: [B:5:0x0007, B:4:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|float r1 = r3.chipIconSize\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|if ((r1 \> 0.0f ? 1 : (r1 == 0.0f ? 0 : \-1)) \> 0) goto L13\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|if (r0 == null) goto L13\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|float r1 = (float) java.lang.Math.ceil((double) com.google.android.material.internal.ViewUtils.dpToPx(r3.context, 24))\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|if ((((float) r0.getIntrinsicHeight()) \> r1 ? 1 : (((float) r0.getIntrinsicHeight()) == r1 ? 0 : \-1)) \> 0) goto L12\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029}"];
Node_12 [shape=record,label="{12\:\ 0x002e|RETURN\l|return (float) r0.getIntrinsicHeight()\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|RETURN\l|return r1\l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|RETURN\l|return r1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|android.graphics.drawable.Drawable r0 = r3.chipIcon\l}"];
MethodNode[shape=record,label="{private float com.google.android.material.chip.ChipDrawable.getCurrentChipIconHeight((r3v0 'this' com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x002f \-\> B:1:?, CROSS_EDGE: B:14:0x0030 \-\> B:1:?, CROSS_EDGE: B:7:0x000e \-\> B:14:0x0030, CROSS_EDGE: B:5:0x0007 \-\> B:6:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_13 -> Node_1;
Node_14 -> Node_1;
Node_5 -> Node_6;
}

