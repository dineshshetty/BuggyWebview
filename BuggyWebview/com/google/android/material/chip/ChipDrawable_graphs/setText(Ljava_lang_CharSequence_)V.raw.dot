digraph "CFG forcom.google.android.material.chip.ChipDrawable.setText(Ljava\/lang\/CharSequence;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('text' java.lang.CharSequence)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0004  (LINE:1638)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: CONST_STR  (r3 I:java.lang.String A[D('text' java.lang.CharSequence)]) =  \"\"  (LINE:1639)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: IGET  (r0 I:java.lang.CharSequence) = (r2 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.text java.lang.CharSequence  (LINE:1641)\l0x0006: INVOKE  (r0 I:boolean) = (r0 I:java.lang.CharSequence), (r3 I:java.lang.CharSequence A[D('text' java.lang.CharSequence)]) type: STATIC call: android.text.TextUtils.equals(java.lang.CharSequence, java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence, java.lang.CharSequence):boolean (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:? \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IPUT  (r3 I:java.lang.CharSequence A[D('text' java.lang.CharSequence)]), (r2 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.text java.lang.CharSequence  (LINE:1642)\l0x000e: IGET  (r0 I:com.google.android.material.internal.TextDrawableHelper) = (r2 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.textDrawableHelper com.google.android.material.internal.TextDrawableHelper  (LINE:1643)\l0x0010: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0011: INVOKE  (r0 I:com.google.android.material.internal.TextDrawableHelper), (r1 I:boolean) type: VIRTUAL call: com.google.android.material.internal.TextDrawableHelper.setTextWidthDirty(boolean):void A[MD:(boolean):void (m)]\l0x0014: INVOKE  (r2 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.invalidateSelf():void A[MD:():void (m)] (LINE:1644)\l0x0017: INVOKE  (r2 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.onSizeChange():void A[MD:():void (m)] (LINE:1645)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|RETURN\lORIG_RETURN\l|0x001a: RETURN    (LINE:1647)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|0x001a: RETURN   A[SYNTHETIC] (LINE:1647)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.ChipDrawable.setText((r2 'this' I:com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.CharSequence A[D('text' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000a \-\> B:7:0x001a, CROSS_EDGE: B:2:0x0000 \-\> B:4:0x0004\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001a: r3 'text' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_1;
}

