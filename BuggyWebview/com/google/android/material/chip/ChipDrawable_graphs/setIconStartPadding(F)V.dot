digraph "CFG forcom.google.android.material.chip.ChipDrawable.setIconStartPadding(F)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if ((r3.iconStartPadding \> r4 ? 1 : (r3.iconStartPadding == r4 ? 0 : \-1)) == 0) goto L9\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|float r0 = calculateChipIconWidth()\lr3.iconStartPadding = r4\lfloat r1 = calculateChipIconWidth()\linvalidateSelf()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if ((r0 \> r1 ? 1 : (r0 == r1 ? 0 : \-1)) == 0) goto L8\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|onSizeChange()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.ChipDrawable.setIconStartPadding((r3v0 'this' com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r4v0 'iconStartPadding' float A[D('iconStartPadding' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0015 \-\> B:7:0x001a, CROSS_EDGE: B:3:0x0004 \-\> B:7:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_9 -> Node_1;
Node_8 -> Node_1;
}

