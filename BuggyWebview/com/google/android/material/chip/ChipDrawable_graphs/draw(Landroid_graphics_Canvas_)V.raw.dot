digraph "CFG forcom.google.android.material.chip.ChipDrawable.draw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:android.graphics.Rect) = (r10 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (s)] (LINE:590)\l0x0004: INVOKE  (r1 I:boolean) = (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.isEmpty():boolean A[MD:():boolean (c)] (LINE:591)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0059 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r1 I:int) = (r10 I:com.google.android.material.chip.ChipDrawable) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.getAlpha():int A[MD:():int (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:595)\l0x0012: IGET  (r2 I:int) = (r10 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.alpha int  (LINE:596)\l0x0014: CONST  (r3 I:??[int, float, short, byte, char]) = (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IF  (r2 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:10:0x002b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: IGET  (r2 I:int) = (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:597)\l0x001a: CAST (r5 I:float) = (float) (r2 I:int) \l0x001b: IGET  (r2 I:int) = (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.top int \l0x001d: CAST (r6 I:float) = (float) (r2 I:int) \l0x001e: IGET  (r2 I:int) = (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.right int \l0x0020: CAST (r7 I:float) = (float) (r2 I:int) \l0x0021: IGET  (r2 I:int) = (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.bottom int \l0x0023: CAST (r8 I:float) = (float) (r2 I:int) \l0x0024: IGET  (r9 I:int) = (r10 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.alpha int \l0x0026: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)])  (LINE:598)\l0x0027: INVOKE  (r1 I:int A[D('saveCount' int)]) = (r4 I:android.graphics.Canvas), (r5 I:float), (r6 I:float), (r7 I:float), (r8 I:float), (r9 I:int) type: STATIC call: com.google.android.material.canvas.CanvasCompat.saveLayerAlpha(android.graphics.Canvas, float, float, float, float, int):int A[MD:(android.graphics.Canvas, float, float, float, float, int):int (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: INVOKE  \l  (r10 I:com.google.android.material.chip.ChipDrawable)\l  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l type: DIRECT call: com.google.android.material.chip.ChipDrawable.drawChipSurface(android.graphics.Canvas, android.graphics.Rect):void A[MD:(android.graphics.Canvas, android.graphics.Rect):void (m)] (LINE:603)\l0x002e: INVOKE  \l  (r10 I:com.google.android.material.chip.ChipDrawable)\l  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l type: DIRECT call: com.google.android.material.chip.ChipDrawable.drawChipBackground(android.graphics.Canvas, android.graphics.Rect):void A[MD:(android.graphics.Canvas, android.graphics.Rect):void (m)] (LINE:606)\l0x0031: IGET  (r2 I:boolean) = (r10 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled boolean  (LINE:608)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0038 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|0x0035: INVOKE  \l  (r10 I:com.google.android.material.shape.MaterialShapeDrawable)\l  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: SUPER call: com.google.android.material.shape.MaterialShapeDrawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (m)] (LINE:609)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|0x0038: INVOKE  \l  (r10 I:com.google.android.material.chip.ChipDrawable)\l  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l type: DIRECT call: com.google.android.material.chip.ChipDrawable.drawChipStroke(android.graphics.Canvas, android.graphics.Rect):void A[MD:(android.graphics.Canvas, android.graphics.Rect):void (m)] (LINE:612)\l0x003b: INVOKE  \l  (r10 I:com.google.android.material.chip.ChipDrawable)\l  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l type: DIRECT call: com.google.android.material.chip.ChipDrawable.drawCompatRipple(android.graphics.Canvas, android.graphics.Rect):void A[MD:(android.graphics.Canvas, android.graphics.Rect):void (m)] (LINE:615)\l0x003e: INVOKE  \l  (r10 I:com.google.android.material.chip.ChipDrawable)\l  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l type: DIRECT call: com.google.android.material.chip.ChipDrawable.drawChipIcon(android.graphics.Canvas, android.graphics.Rect):void A[MD:(android.graphics.Canvas, android.graphics.Rect):void (m)] (LINE:618)\l0x0041: INVOKE  \l  (r10 I:com.google.android.material.chip.ChipDrawable)\l  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l type: DIRECT call: com.google.android.material.chip.ChipDrawable.drawCheckedIcon(android.graphics.Canvas, android.graphics.Rect):void A[MD:(android.graphics.Canvas, android.graphics.Rect):void (m)] (LINE:621)\l0x0044: IGET  (r2 I:boolean) = (r10 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.shouldDrawText boolean  (LINE:624)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|0x0046: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x004b \l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|0x0048: INVOKE  \l  (r10 I:com.google.android.material.chip.ChipDrawable)\l  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l type: DIRECT call: com.google.android.material.chip.ChipDrawable.drawText(android.graphics.Canvas, android.graphics.Rect):void A[MD:(android.graphics.Canvas, android.graphics.Rect):void (m)] (LINE:625)\l}"];
Node_16 [shape=record,label="{16\:\ 0x004b|0x004b: INVOKE  \l  (r10 I:com.google.android.material.chip.ChipDrawable)\l  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l type: DIRECT call: com.google.android.material.chip.ChipDrawable.drawCloseIcon(android.graphics.Canvas, android.graphics.Rect):void A[MD:(android.graphics.Canvas, android.graphics.Rect):void (m)] (LINE:629)\l0x004e: INVOKE  \l  (r10 I:com.google.android.material.chip.ChipDrawable)\l  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l type: DIRECT call: com.google.android.material.chip.ChipDrawable.drawDebug(android.graphics.Canvas, android.graphics.Rect):void A[MD:(android.graphics.Canvas, android.graphics.Rect):void (m)] (LINE:632)\l0x0051: IGET  (r2 I:int) = (r10 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.alpha int  (LINE:634)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0053|0x0053: IF  (r2 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:21:? \l}"];
Node_18 [shape=record,label="{18\:\ 0x0055|0x0055: INVOKE  (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r1 I:int A[D('saveCount' int)]) type: VIRTUAL call: android.graphics.Canvas.restoreToCount(int):void A[MD:(int):void (c)] (LINE:635)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0058|RETURN\lORIG_RETURN\l|0x0058: RETURN    (LINE:637)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0058: RETURN   A[SYNTHETIC] (LINE:637)\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|0x0059: RETURN   A[SYNTHETIC] (LINE:592)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0059|RETURN\lORIG_RETURN\l|0x0059: RETURN    (LINE:592)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.ChipDrawable.draw((r10 'this' I:com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r11 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:17:0x0053 \-\> B:19:0x0058, CROSS_EDGE: B:14:0x0046 \-\> B:16:0x004b, CROSS_EDGE: B:11:0x0033 \-\> B:13:0x0038, CROSS_EDGE: B:8:0x0016 \-\> B:10:0x002b, CROSS_EDGE: B:20:0x0059 \-\> B:1:?, CROSS_EDGE: B:3:0x0008 \-\> B:20:0x0059\lDebug Info:\l  0x0012\-0x0059: r1 'saveCount' I\l  0x0004\-0x0059: r0 'bounds' Landroid\/graphics\/Rect;\l  \-1 \-0x0059: r11 'canvas' Landroid\/graphics\/Canvas;\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_20;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_22[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_1;
Node_21 -> Node_1;
Node_22 -> Node_1;
Node_20 -> Node_1;
}

