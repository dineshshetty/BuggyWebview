digraph "CFG forcom.google.android.material.chip.ChipDrawable.\<init\>(Landroid\/content\/Context;Landroid\/util\/AttributeSet;II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  \l  (r4 I:com.google.android.material.shape.MaterialShapeDrawable)\l  (r5 I:android.content.Context A[D('context' android.content.Context)])\l  (r6 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r7 I:int A[D('defStyleAttr' int)])\l  (r8 I:int A[D('defStyleRes' int)])\l type: DIRECT call: com.google.android.material.shape.MaterialShapeDrawable.\<init\>(android.content.Context, android.util.AttributeSet, int, int):void A[MD:(android.content.Context, android.util.AttributeSet, int, int):void (m)] (LINE:312)\l0x0003: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1082130432(0xffffffffbf800000, float:\-1.0) ??[int, float, short, byte, char])  (LINE:176)\l0x0005: IPUT  (r0 I:float), (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.chipCornerRadius float \l0x0007: NEW_INSTANCE  (r0 I:android.graphics.Paint) =  android.graphics.Paint  (LINE:242)\l0x0009: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000a: INVOKE  (r0 I:android.graphics.Paint), (r1 I:int) type: DIRECT call: android.graphics.Paint.\<init\>(int):void A[MD:(int):void (c)]\l0x000d: IPUT  (r0 I:android.graphics.Paint), (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.chipPaint android.graphics.Paint \l0x000f: NEW_INSTANCE  (r0 I:android.graphics.Paint$FontMetrics) =  android.graphics.Paint$FontMetrics  (LINE:244)\l0x0011: INVOKE  (r0 I:android.graphics.Paint$FontMetrics) type: DIRECT call: android.graphics.Paint.FontMetrics.\<init\>():void A[MD:():void (c)]\l0x0014: IPUT  (r0 I:android.graphics.Paint$FontMetrics), (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.fontMetrics android.graphics.Paint$FontMetrics \l0x0016: NEW_INSTANCE  (r0 I:android.graphics.RectF) =  android.graphics.RectF  (LINE:245)\l0x0018: INVOKE  (r0 I:android.graphics.RectF) type: DIRECT call: android.graphics.RectF.\<init\>():void A[MD:():void (c)]\l0x001b: IPUT  (r0 I:android.graphics.RectF), (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.rectF android.graphics.RectF \l0x001d: NEW_INSTANCE  (r0 I:android.graphics.PointF) =  android.graphics.PointF  (LINE:246)\l0x001f: INVOKE  (r0 I:android.graphics.PointF) type: DIRECT call: android.graphics.PointF.\<init\>():void A[MD:():void (c)]\l0x0022: IPUT  (r0 I:android.graphics.PointF), (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.pointF android.graphics.PointF \l0x0024: NEW_INSTANCE  (r0 I:android.graphics.Path) =  android.graphics.Path  (LINE:247)\l0x0026: INVOKE  (r0 I:android.graphics.Path) type: DIRECT call: android.graphics.Path.\<init\>():void A[MD:():void (c)]\l0x0029: IPUT  (r0 I:android.graphics.Path), (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.shapePath android.graphics.Path \l0x002b: CONST  (r0 I:??[int, float, short, byte, char]) = (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char])  (LINE:259)\l0x002d: IPUT  (r0 I:int), (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.alpha int \l0x002f: SGET  (r0 I:android.graphics.PorterDuff$Mode) =  android.graphics.PorterDuff.Mode.SRC_IN android.graphics.PorterDuff$Mode  (LINE:263)\l0x0031: IPUT  (r0 I:android.graphics.PorterDuff$Mode), (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.tintMode android.graphics.PorterDuff$Mode \l0x0033: NEW_INSTANCE  (r0 I:java.lang.ref.WeakReference) =  java.lang.ref.WeakReference  (LINE:267)\l0x0035: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0036: INVOKE  (r0 I:java.lang.ref.WeakReference), (r2 I:java.lang.Object) type: DIRECT call: java.lang.ref.WeakReference.\<init\>(java.lang.Object):void A[MD:(T):void (c)]\l0x0039: IPUT  \l  (r0 I:java.lang.ref.WeakReference\<com.google.android.material.chip.ChipDrawable$Delegate\>)\l  (r4 I:com.google.android.material.chip.ChipDrawable)\l com.google.android.material.chip.ChipDrawable.delegate java.lang.ref.WeakReference \l0x003b: INVOKE  \l  (r4 I:com.google.android.material.chip.ChipDrawable)\l  (r5 I:android.content.Context A[D('context' android.content.Context)])\l type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.initializeElevationOverlay(android.content.Context):void A[MD:(android.content.Context):void (m)] (LINE:313)\l0x003e: IPUT  \l  (r5 I:android.content.Context A[D('context' android.content.Context)])\l  (r4 I:com.google.android.material.chip.ChipDrawable)\l com.google.android.material.chip.ChipDrawable.context android.content.Context  (LINE:315)\l0x0040: NEW_INSTANCE  (r0 I:com.google.android.material.internal.TextDrawableHelper) =  com.google.android.material.internal.TextDrawableHelper  (LINE:316)\l0x0042: INVOKE  \l  (r0 I:com.google.android.material.internal.TextDrawableHelper)\l  (r4 I:com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate)\l type: DIRECT call: com.google.android.material.internal.TextDrawableHelper.\<init\>(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate):void A[MD:(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate):void (m)]\l0x0045: IPUT  (r0 I:com.google.android.material.internal.TextDrawableHelper), (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.textDrawableHelper com.google.android.material.internal.TextDrawableHelper \l0x0047: CONST_STR  (r3 I:java.lang.String) =  \"\"  (LINE:318)\l0x0049: IPUT  (r3 I:java.lang.CharSequence), (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.text java.lang.CharSequence \l0x004b: INVOKE  (r0 I:android.text.TextPaint) = (r0 I:com.google.android.material.internal.TextDrawableHelper) type: VIRTUAL call: com.google.android.material.internal.TextDrawableHelper.getTextPaint():android.text.TextPaint A[MD:():android.text.TextPaint (m)] (LINE:320)\l0x004f: INVOKE  (r3 I:android.content.res.Resources) = (r5 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)]\l0x0053: INVOKE  (r3 I:android.util.DisplayMetrics) = (r3 I:android.content.res.Resources) type: VIRTUAL call: android.content.res.Resources.getDisplayMetrics():android.util.DisplayMetrics A[MD:():android.util.DisplayMetrics (c)]\l0x0057: IGET  (r3 I:float) = (r3 I:android.util.DisplayMetrics) android.util.DisplayMetrics.density float \l0x0059: IPUT  (r3 I:float), (r0 I:android.text.TextPaint) android.text.TextPaint.density float \l0x005b: IPUT  (r2 I:android.graphics.Paint), (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.debugPaint android.graphics.Paint  (LINE:321)\l0x005e: SGET  (r0 I:int[]) =  com.google.android.material.chip.ChipDrawable.DEFAULT_STATE int[]  (LINE:326)\l0x0060: INVOKE  (r4 I:com.google.android.material.chip.ChipDrawable), (r0 I:int[]) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.setState(int[]):boolean A[MD:(int[]):boolean (s)]\l0x0063: INVOKE  (r4 I:com.google.android.material.chip.ChipDrawable), (r0 I:int[]) type: VIRTUAL call: com.google.android.material.chip.ChipDrawable.setCloseIconState(int[]):boolean A[MD:(int[]):boolean (m)] (LINE:327)\l0x0066: IPUT  (r1 I:boolean), (r4 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.shouldDrawText boolean  (LINE:328)\l0x0068: SGET  (r0 I:boolean) =  com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE boolean  (LINE:330)\l}"];
Node_3 [shape=record,label="{3\:\ 0x006a|0x006a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x006c|0x006c: SGET  (r0 I:android.graphics.drawable.ShapeDrawable) =  com.google.android.material.chip.ChipDrawable.closeIconRippleMask android.graphics.drawable.ShapeDrawable  (LINE:332)\l0x006e: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x006f: INVOKE  (r0 I:android.graphics.drawable.ShapeDrawable), (r1 I:int) type: VIRTUAL call: android.graphics.drawable.ShapeDrawable.setTint(int):void A[MD:(int):void (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0072|RETURN\lORIG_RETURN\l|0x0072: RETURN    (LINE:334)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|0x0072: RETURN   A[SYNTHETIC] (LINE:334)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.chip.ChipDrawable.\<init\>((r4 'this' I:com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r5 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('defStyleAttr' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('defStyleRes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x006a \-\> B:5:0x0072\lDebug Info:\l  \-1 \-0x0072: r5 'context' Landroid\/content\/Context;\l  \-1 \-0x0072: r6 'attrs' Landroid\/util\/AttributeSet;\l  \-1 \-0x0072: r7 'defStyleAttr' I\l  \-1 \-0x0072: r8 'defStyleRes' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

