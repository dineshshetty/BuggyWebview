digraph "CFG forcom.google.android.material.chip.ChipDrawable.setChipIconTint(Landroid\/content\/res\/ColorStateList;)V" {
subgraph cluster_Region_382007926 {
label = "R(2:1|(1:(3:3|(1:5)|6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|r1.hasChipIconTint = true\l}"];
subgraph cluster_Region_1447737131 {
label = "R(1:(3:3|(1:5)|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_454645665 {
label = "IF [B:3:0x0005] THEN: R(3:3|(1:5)|6) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r1.chipIconTint != r2) goto L3\l}"];
subgraph cluster_Region_1711425203 {
label = "R(3:3|(1:5)|6)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0007|r1.chipIconTint = r2\l}"];
subgraph cluster_IfRegion_1461978959 {
label = "IF [B:5:0x000d] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|if (showsChipIcon() != false) goto L5\l}"];
subgraph cluster_Region_1414791535 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000f|androidx.core.graphics.drawable.DrawableCompat.setTintList(r1.chipIcon, r2)\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0014|onStateChange(getState())\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001b|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.ChipDrawable.setChipIconTint((r1v0 'this' com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r2v0 'chipIconTint' android.content.res.ColorStateList A[D('chipIconTint' android.content.res.ColorStateList), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000d \-\> B:7:0x0014, CROSS_EDGE: B:3:0x0005 \-\> B:8:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_9[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_0 -> Node_2;
Node_8 -> Node_1;
Node_9 -> Node_1;
}

