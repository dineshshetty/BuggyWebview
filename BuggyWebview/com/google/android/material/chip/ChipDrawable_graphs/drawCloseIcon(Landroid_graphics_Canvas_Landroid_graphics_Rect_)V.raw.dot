digraph "CFG forcom.google.android.material.chip.ChipDrawable.drawCloseIcon(Landroid\/graphics\/Canvas;Landroid\/graphics\/Rect;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r6 I:com.google.android.material.chip.ChipDrawable) type: DIRECT call: com.google.android.material.chip.ChipDrawable.showsCloseIcon():boolean A[MD:():boolean (m)] (LINE:760)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r0 I:android.graphics.RectF) = (r6 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.rectF android.graphics.RectF  (LINE:761)\l0x0008: INVOKE  \l  (r6 I:com.google.android.material.chip.ChipDrawable)\l  (r8 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l  (r0 I:android.graphics.RectF)\l type: DIRECT call: com.google.android.material.chip.ChipDrawable.calculateCloseIconBounds(android.graphics.Rect, android.graphics.RectF):void A[MD:(android.graphics.Rect, android.graphics.RectF):void (m)]\l0x000b: IGET  (r0 I:android.graphics.RectF) = (r6 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.rectF android.graphics.RectF  (LINE:762)\l0x000d: IGET  (r0 I:float) = (r0 I:android.graphics.RectF) android.graphics.RectF.left float \l0x000f: IGET  (r1 I:android.graphics.RectF) = (r6 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.rectF android.graphics.RectF  (LINE:763)\l0x0011: IGET  (r1 I:float) = (r1 I:android.graphics.RectF) android.graphics.RectF.top float \l0x0013: INVOKE  \l  (r7 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:float A[D('tx' float)])\l  (r1 I:float A[D('ty' float)])\l type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)] (LINE:765)\l0x0016: IGET  (r2 I:android.graphics.drawable.Drawable) = (r6 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.closeIcon android.graphics.drawable.Drawable  (LINE:767)\l0x0018: IGET  (r3 I:android.graphics.RectF) = (r6 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.rectF android.graphics.RectF \l0x001a: INVOKE  (r3 I:float) = (r3 I:android.graphics.RectF) type: VIRTUAL call: android.graphics.RectF.width():float A[MD:():float (c)]\l0x001e: CAST (r3 I:int) = (int) (r3 I:float) \l0x001f: IGET  (r4 I:android.graphics.RectF) = (r6 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.rectF android.graphics.RectF \l0x0021: INVOKE  (r4 I:float) = (r4 I:android.graphics.RectF) type: VIRTUAL call: android.graphics.RectF.height():float A[MD:():float (c)]\l0x0025: CAST (r4 I:int) = (int) (r4 I:float) \l0x0026: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0027: INVOKE  (r2 I:android.graphics.drawable.Drawable), (r5 I:int), (r5 I:int), (r3 I:int), (r4 I:int) type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x002a: SGET  (r2 I:boolean) =  com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE boolean  (LINE:769)\l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0044 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: IGET  (r2 I:android.graphics.drawable.Drawable) = (r6 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.closeIconRipple android.graphics.drawable.Drawable  (LINE:770)\l0x0030: IGET  (r3 I:android.graphics.drawable.Drawable) = (r6 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.closeIcon android.graphics.drawable.Drawable \l0x0032: INVOKE  (r3 I:android.graphics.Rect) = (r3 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (c)]\l0x0036: INVOKE  (r2 I:android.graphics.drawable.Drawable), (r3 I:android.graphics.Rect) type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (c)]\l0x0039: IGET  (r2 I:android.graphics.drawable.Drawable) = (r6 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.closeIconRipple android.graphics.drawable.Drawable  (LINE:771)\l0x003b: INVOKE  (r2 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.jumpToCurrentState():void A[MD:():void (c)]\l0x003e: IGET  (r2 I:android.graphics.drawable.Drawable) = (r6 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.closeIconRipple android.graphics.drawable.Drawable  (LINE:772)\l0x0040: INVOKE  (r2 I:android.graphics.drawable.Drawable), (r7 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0049|0x0049: NEG  (r2 I:float) = (r0 I:float A[D('tx' float)])  (LINE:777)\l0x004a: NEG  (r3 I:float) = (r1 I:float A[D('ty' float)]) \l0x004b: INVOKE  (r7 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r2 I:float), (r3 I:float) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x004e|RETURN\lORIG_RETURN\l|0x004e: RETURN    (LINE:779)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x0044|0x0044: IGET  (r2 I:android.graphics.drawable.Drawable) = (r6 I:com.google.android.material.chip.ChipDrawable) com.google.android.material.chip.ChipDrawable.closeIcon android.graphics.drawable.Drawable  (LINE:774)\l0x0046: INVOKE  (r2 I:android.graphics.drawable.Drawable), (r7 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)]\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|0x004e: RETURN   A[SYNTHETIC] (LINE:779)\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.chip.ChipDrawable.drawCloseIcon((r6 'this' I:com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r7 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.graphics.Rect A[D('bounds' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0044 \-\> B:8:0x0049, CROSS_EDGE: B:3:0x0004 \-\> B:9:0x004e\lDebug Info:\l  0x000f\-0x004e: r0 'tx' F\l  0x0013\-0x004e: r1 'ty' F\l  \-1 \-0x004e: r7 'canvas' Landroid\/graphics\/Canvas;\l  \-1 \-0x004e: r8 'bounds' Landroid\/graphics\/Rect;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_7 -> Node_8;
Node_10 -> Node_1;
}

