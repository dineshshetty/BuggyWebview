digraph "CFG forcom.google.android.material.chip.ChipDrawable.getOutline(Landroid\/graphics\/Outline;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r8.isShapeThemingEnabled == false) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|super.getOutline(r9)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|android.graphics.Rect r0 = getBounds()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|if (r0.isEmpty() != false) goto L11\l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|r9.setRoundRect(r0, r8.chipCornerRadius)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|r9.setAlpha(((float) getAlpha()) \/ 255.0f)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|r9.setRoundRect(0, 0, getIntrinsicWidth(), getIntrinsicHeight(), r8.chipCornerRadius)\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.chip.ChipDrawable.getOutline((r8v0 'this' com.google.android.material.chip.ChipDrawable A[IMMUTABLE_TYPE, THIS]), (r9v0 'outline' android.graphics.Outline A[D('outline' android.graphics.Outline), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:11:0x0033 \-\> B:1:?, CROSS_EDGE: B:9:0x0018 \-\> B:10:0x0028\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.getOutline(android.graphics.Outline):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_9 -> Node_10;
}

