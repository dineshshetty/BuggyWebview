digraph "CFG forcom.google.android.material.divider.MaterialDividerItemDecoration.shouldDrawDivider(Landroidx\/recyclerview\/widget\/RecyclerView;Landroid\/view\/View;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = \l  (r7 I:androidx.recyclerview.widget.RecyclerView A[D('parent' androidx.recyclerview.widget.RecyclerView)])\l  (r8 I:android.view.View A[D('child' android.view.View)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.getChildAdapterPosition(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:388)\l0x0004: INVOKE  (r1 I:androidx.recyclerview.widget.RecyclerView$Adapter) = (r7 I:androidx.recyclerview.widget.RecyclerView A[D('parent' androidx.recyclerview.widget.RecyclerView)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.getAdapter():androidx.recyclerview.widget.RecyclerView$Adapter A[MD:():androidx.recyclerview.widget.RecyclerView$Adapter (m)] (LINE:389)\l0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:390)\l0x0009: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('adapter' androidx.recyclerview.widget.RecyclerView$Adapter\<?\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: INVOKE  (r4 I:int) = \l  (r1 I:androidx.recyclerview.widget.RecyclerView$Adapter A[D('adapter' androidx.recyclerview.widget.RecyclerView$Adapter\<?\>)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.Adapter.getItemCount():int A[MD:():int (m)]\l0x0010: ARITH  (r4 I:int) = (r4 I:int) \- (r3 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('position' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0015 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: CONST  (r5 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:392)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('position' int)]) == (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:? \l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isLastItem' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001f \l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: IGET  (r5 I:boolean) = (r6 I:com.google.android.material.divider.MaterialDividerItemDecoration) com.google.android.material.divider.MaterialDividerItemDecoration.lastItemDecorated boolean \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:? \l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN  (r2 I:boolean) A[SYNTHETIC] (LINE:392)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|0x001f: INVOKE  (r5 I:boolean) = \l  (r6 I:com.google.android.material.divider.MaterialDividerItemDecoration)\l  (r0 I:int A[D('position' int)])\l  (r1 I:androidx.recyclerview.widget.RecyclerView$Adapter A[D('adapter' androidx.recyclerview.widget.RecyclerView$Adapter\<?\>)])\l type: VIRTUAL call: com.google.android.material.divider.MaterialDividerItemDecoration.shouldDrawDivider(int, androidx.recyclerview.widget.RecyclerView$Adapter):boolean A[MD:(int, androidx.recyclerview.widget.RecyclerView$Adapter\<?\>):boolean (m)] (LINE:394)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|0x0023: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:? \l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|RETURN\lORIG_RETURN\l|0x0025: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0028: RETURN  (r2 I:boolean)  (LINE:392)\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN  (r2 I:boolean) A[SYNTHETIC] (LINE:392)\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN  (r2 I:boolean) A[SYNTHETIC] (LINE:392)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private boolean com.google.android.material.divider.MaterialDividerItemDecoration.shouldDrawDivider((r6 'this' I:com.google.android.material.divider.MaterialDividerItemDecoration A[IMMUTABLE_TYPE, THIS]), (r7 I:androidx.recyclerview.widget.RecyclerView A[D('parent' androidx.recyclerview.widget.RecyclerView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x0023 \-\> B:17:0x0028, CROSS_EDGE: B:12:0x001d \-\> B:17:0x0028, CROSS_EDGE: B:10:0x0019 \-\> B:13:0x001f, CROSS_EDGE: B:9:0x0017 \-\> B:17:0x0028, CROSS_EDGE: B:7:0x0015 \-\> B:8:0x0016, CROSS_EDGE: B:3:0x000a \-\> B:7:0x0015\lDebug Info:\l  0x0004\-0x0028: r0 'position' I\l  0x0008\-0x0028: r1 'adapter' Landroidx\/recyclerview\/widget\/RecyclerView$Adapter;, signature: Landroidx\/recyclerview\/widget\/RecyclerView$Adapter\<*\>;\l  0x0016\-0x0028: r4 'isLastItem' Z\l  \-1 \-0x0028: r7 'parent' Landroidx\/recyclerview\/widget\/RecyclerView;\l  \-1 \-0x0028: r8 'child' Landroid\/view\/View;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_18;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_19;
Node_19 -> Node_1;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_1;
Node_20 -> Node_1;
Node_18 -> Node_1;
Node_7 -> Node_8;
}

