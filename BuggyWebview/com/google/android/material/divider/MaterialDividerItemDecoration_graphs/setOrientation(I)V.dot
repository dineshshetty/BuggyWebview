digraph "CFG forcom.google.android.material.divider.MaterialDividerItemDecoration.setOrientation(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|if (r4 == 0) goto L7\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002}"];
Node_4 [shape=record,label="{4\:\ 0x0003|if (r4 != 1) goto L4\l}"];
Node_6 [shape=record,label="{6\:\ 0x0006|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Invalid orientation: \")\lr1.append(r4)\lr1.append(\". It should be either HORIZONTAL or VERTICAL\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|r3.orientation = r4\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.divider.MaterialDividerItemDecoration.setOrientation((r3v0 'this' com.google.android.material.divider.MaterialDividerItemDecoration A[IMMUTABLE_TYPE, THIS]), (r4v0 'orientation' int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0024 \-\> B:1:?, CROSS_EDGE: B:2:0x0000 \-\> B:8:0x0022\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

