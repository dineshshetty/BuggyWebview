digraph "CFG forcom.google.android.material.divider.MaterialDividerItemDecoration.setDividerColor(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IPUT  (r2 I:int A[D('color' int)]), (r1 I:com.google.android.material.divider.MaterialDividerItemDecoration) com.google.android.material.divider.MaterialDividerItemDecoration.color int  (LINE:172)\l0x0002: IGET  (r0 I:android.graphics.drawable.Drawable) = (r1 I:com.google.android.material.divider.MaterialDividerItemDecoration) com.google.android.material.divider.MaterialDividerItemDecoration.dividerDrawable android.graphics.drawable.Drawable  (LINE:173)\l0x0004: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r0 I:android.graphics.drawable.Drawable) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.wrap(android.graphics.drawable.Drawable):android.graphics.drawable.Drawable A[MD:(android.graphics.drawable.Drawable):android.graphics.drawable.Drawable (m)]\l0x0008: IPUT  (r0 I:android.graphics.drawable.Drawable), (r1 I:com.google.android.material.divider.MaterialDividerItemDecoration) com.google.android.material.divider.MaterialDividerItemDecoration.dividerDrawable android.graphics.drawable.Drawable \l0x000a: INVOKE  (r0 I:android.graphics.drawable.Drawable), (r2 I:int A[D('color' int)]) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setTint(android.graphics.drawable.Drawable, int):void A[MD:(android.graphics.drawable.Drawable, int):void (m)] (LINE:174)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|RETURN\l|0x000d: RETURN    (LINE:175)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.divider.MaterialDividerItemDecoration.setDividerColor((r1 'this' I:com.google.android.material.divider.MaterialDividerItemDecoration A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('color' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x000d: r2 'color' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

