digraph "CFG forcom.google.android.material.divider.MaterialDividerItemDecoration.drawForHorizontalOrientation(Landroid\/graphics\/Canvas;Landroidx\/recyclerview\/widget\/RecyclerView;)V" {
subgraph cluster_Region_711386729 {
label = "R(5:1|(1:3)(1:16)|4|(3:6|(1:8)(0)|10)|13) | DECL_VAR: int top, int bottom\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|r9.save()\l}"];
subgraph cluster_IfRegion_1109796821 {
label = "IF [B:3:0x0007] THEN: R(1:3) ELSE: R(1:16)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r10.getClipToPadding() != false) goto L3\l}"];
subgraph cluster_Region_1879491577 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|int r0 = r10.getPaddingTop()\lint r1 = r10.getHeight() \- r10.getPaddingBottom()\lr9.clipRect(r10.getPaddingLeft(), r0, r10.getWidth() \- r10.getPaddingRight(), r1)\l}"];
}
subgraph cluster_Region_1831219130 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0028|r0 = 0\lint r1 = r10.getHeight()\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x002d|PHI: r0 r1 \l  PHI: (r0v2 'top' int) = (r0v1 'top' int), (r0v4 'top' int) binds: [B:5:0x0028, B:4:0x0009] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'bottom' int) = (r1v0 'bottom' int), (r1v4 'bottom' int) binds: [B:5:0x0028, B:4:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|int int r0 = r0 + r8.insetStart\lint int r1 = r1 \- r8.insetEnd\lint int r2 = r10.getChildCount()\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_1172115685 {
label = "LOOP:0: (3:6|(1:8)(0)|10)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0038|LOOP_START\lLOOP:0: B:7:0x0038\-\>B:11:0x0064\lPHI: r3 \l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v2 'i' int) binds: [B:6:0x002d, B:11:0x0064] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r2) goto L6\l}"];
subgraph cluster_Region_50469548 {
label = "R(3:6|(1:8)(0)|10)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x003a|android.view.View android.view.View r4 = r10.getChildAt(r3)\l}"];
subgraph cluster_IfRegion_508223755 {
label = "IF [B:9:0x0042] THEN: R(1:8) ELSE: R(0)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0042|if (shouldDrawDivider(r10, r4) != false) goto L8\l}"];
subgraph cluster_Region_425375627 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0044|r10.getDecoratedBoundsWithMargins(r4, r8.tempRect)\lint int r5 = r8.tempRect.right + java.lang.Math.round(r4.getTranslationX())\lint int r6 = r5 \- r8.thickness\lr8.dividerDrawable.setBounds(r6, r0, r5, r1)\lr8.dividerDrawable.draw(r9)\l}"];
}
subgraph cluster_Region_596016589 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_11 [shape=record,label="{11\:\ 0x0064|LOOP_END\lLOOP:0: B:7:0x0038\-\>B:11:0x0064\l|r3++\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0067|r9.restore()\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0064|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0064|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0067|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x006a}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void com.google.android.material.divider.MaterialDividerItemDecoration.drawForHorizontalOrientation((r8v0 'this' com.google.android.material.divider.MaterialDividerItemDecoration A[IMMUTABLE_TYPE, THIS]), (r9v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'parent' androidx.recyclerview.widget.RecyclerView A[D('parent' androidx.recyclerview.widget.RecyclerView), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x0064 \-\> B:7:0x0038, CROSS_EDGE: B:9:0x0042 \-\> B:11:0x0064, CROSS_EDGE: B:5:0x0028 \-\> B:6:0x002d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_14[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_16[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_7;
Node_12 -> Node_13;
Node_0 -> Node_2;
Node_15 -> Node_11;
Node_16 -> Node_11;
Node_14 -> Node_12;
Node_13 -> Node_1;
}

