digraph "CFG forcom.google.android.material.divider.MaterialDividerItemDecoration.onDraw(Landroid\/graphics\/Canvas;Landroidx\/recyclerview\/widget\/RecyclerView;Landroidx\/recyclerview\/widget\/RecyclerView$State;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r4.getLayoutManager() != null) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007}"];
Node_6 [shape=record,label="{6\:\ 0x000a|if (r2.orientation != 1) goto L9\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|drawForVerticalOrientation(r3, r4)\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|drawForHorizontalOrientation(r3, r4)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.material.divider.MaterialDividerItemDecoration.onDraw((r2v0 'this' com.google.android.material.divider.MaterialDividerItemDecoration A[IMMUTABLE_TYPE, THIS]), (r3v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'parent' androidx.recyclerview.widget.RecyclerView A[D('parent' androidx.recyclerview.widget.RecyclerView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'state' androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0013 \-\> B:1:?, CROSS_EDGE: B:8:0x0010 \-\> B:9:0x0013\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.RecyclerView.ItemDecoration.onDraw(android.graphics.Canvas, androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$State):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_10;
Node_10 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

