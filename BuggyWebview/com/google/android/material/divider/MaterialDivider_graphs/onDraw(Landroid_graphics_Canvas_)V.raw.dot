digraph "CFG forcom.google.android.material.divider.MaterialDivider.onDraw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r7 I:android.view.View), (r8 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: SUPER call: android.view.View.onDraw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)] (LINE:106)\l0x0003: INVOKE  (r0 I:int) = (r7 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:108)\l0x0007: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000c \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isRtl' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0013  (LINE:109)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: IGET  (r2 I:int) = (r7 I:com.google.android.material.divider.MaterialDivider) com.google.android.material.divider.MaterialDivider.insetEnd int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|0x0015: INVOKE  (r3 I:int) = (r7 I:com.google.android.material.divider.MaterialDivider) type: VIRTUAL call: com.google.android.material.divider.MaterialDivider.getWidth():int A[MD:():int (c)] (LINE:110)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|0x0019: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isRtl' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001e \l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|0x001b: IGET  (r4 I:int) = (r7 I:com.google.android.material.divider.MaterialDivider) com.google.android.material.divider.MaterialDivider.insetStart int \l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|0x0020: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) \l0x0021: IGET  (r4 I:com.google.android.material.shape.MaterialShapeDrawable) = (r7 I:com.google.android.material.divider.MaterialDivider) com.google.android.material.divider.MaterialDivider.dividerDrawable com.google.android.material.shape.MaterialShapeDrawable  (LINE:111)\l0x0023: INVOKE  (r5 I:int) = (r7 I:com.google.android.material.divider.MaterialDivider) type: VIRTUAL call: com.google.android.material.divider.MaterialDivider.getBottom():int A[MD:():int (c)]\l0x0027: INVOKE  (r6 I:int) = (r7 I:com.google.android.material.divider.MaterialDivider) type: VIRTUAL call: com.google.android.material.divider.MaterialDivider.getTop():int A[MD:():int (c)]\l0x002b: ARITH  (r5 I:int) = (r5 I:int) \- (r6 I:int) \l0x002c: INVOKE  \l  (r4 I:com.google.android.material.shape.MaterialShapeDrawable)\l  (r2 I:int A[D('left' int)])\l  (r1 I:int)\l  (r3 I:int A[D('right' int)])\l  (r5 I:int)\l type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x002f: IGET  (r1 I:com.google.android.material.shape.MaterialShapeDrawable) = (r7 I:com.google.android.material.divider.MaterialDivider) com.google.android.material.divider.MaterialDivider.dividerDrawable com.google.android.material.shape.MaterialShapeDrawable  (LINE:112)\l0x0031: INVOKE  \l  (r1 I:com.google.android.material.shape.MaterialShapeDrawable)\l  (r8 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: VIRTUAL call: com.google.android.material.shape.MaterialShapeDrawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|RETURN\l|0x0034: RETURN    (LINE:113)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|0x001e: IGET  (r4 I:int) = (r7 I:com.google.android.material.divider.MaterialDivider) com.google.android.material.divider.MaterialDivider.insetEnd int \l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: IGET  (r2 I:int) = (r7 I:com.google.android.material.divider.MaterialDivider) com.google.android.material.divider.MaterialDivider.insetStart int \l}"];
MethodNode[shape=record,label="{protected void com.google.android.material.divider.MaterialDivider.onDraw((r7 'this' I:com.google.android.material.divider.MaterialDivider A[IMMUTABLE_TYPE, THIS]), (r8 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x001e \-\> B:14:0x0020, CROSS_EDGE: B:9:0x0013 \-\> B:10:0x0015, CROSS_EDGE: B:3:0x0009 \-\> B:6:0x000d\lDebug Info:\l  0x000e\-0x0034: r0 'isRtl' Z\l  0x0015\-0x0034: r2 'left' I\l  0x0021\-0x0034: r3 'right' I\l  \-1 \-0x0034: r8 'canvas' Landroid\/graphics\/Canvas;\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onDraw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_13 -> Node_14;
Node_9 -> Node_10;
}

