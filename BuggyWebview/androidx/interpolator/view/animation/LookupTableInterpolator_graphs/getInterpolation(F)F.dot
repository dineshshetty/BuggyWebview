digraph "CFG forandroidx.interpolator.view.animation.LookupTableInterpolator.getInterpolation(F)F" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000}"];
Node_13 [shape=record,label="{13\:\ 0x0004|if ((r8 \> 1.0f ? 1 : (r8 == 1.0f ? 0 : \-1)) \< 0) goto L5\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|RETURN\l|return 1.0f\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0007}"];
Node_16 [shape=record,label="{16\:\ 0x000a|if ((r8 \> 0.0f ? 1 : (r8 == 0.0f ? 0 : \-1)) \> 0) goto L8\l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|RETURN\l|return 0.0f\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|float[] r0 = r7.mValues\lint r0 = java.lang.Math.min((int) (((float) (r0.length + (\-1))) * r8), r0.length + (\-2))\lfloat r2 = r7.mStepSize\lfloat r1 = ((float) r0) * r2\lfloat r3 = r8 \- r1\lfloat r2 = r3 \/ r2\lfloat[] r4 = r7.mValues\l}"];
Node_19 [shape=record,label="{19\:\ 0x0034|RETURN\l|return r4[r0] + ((r4[r0 + 1] \- r4[r0]) * r2)\l}"];
MethodNode[shape=record,label="{public float androidx.interpolator.view.animation.LookupTableInterpolator.getInterpolation((r7v0 'this' androidx.interpolator.view.animation.LookupTableInterpolator A[IMMUTABLE_TYPE, THIS]), (r8v0 'input' float A[D('input' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:17:0x000c \-\> B:11:?, CROSS_EDGE: B:19:0x0034 \-\> B:11:?\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [ClspMth\{android.animation.TimeInterpolator.getInterpolation(float):float\}]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

