digraph "CFG forandroidx.constraintlayout.utils.widget.ImageFilterView.1.getOutline(Landroid\/view\/View;Landroid\/graphics\/Outline;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:androidx.constraintlayout.utils.widget.ImageFilterView) = (r9 I:androidx.constraintlayout.utils.widget.ImageFilterView$1) androidx.constraintlayout.utils.widget.ImageFilterView.1.this$0 androidx.constraintlayout.utils.widget.ImageFilterView  (LINE:696)\l0x0002: INVOKE  (r0 I:int) = (r0 I:androidx.constraintlayout.utils.widget.ImageFilterView) type: VIRTUAL call: androidx.constraintlayout.utils.widget.ImageFilterView.getWidth():int A[MD:():int (s)]\l0x0006: IGET  (r1 I:androidx.constraintlayout.utils.widget.ImageFilterView) = (r9 I:androidx.constraintlayout.utils.widget.ImageFilterView$1) androidx.constraintlayout.utils.widget.ImageFilterView.1.this$0 androidx.constraintlayout.utils.widget.ImageFilterView  (LINE:697)\l0x0008: INVOKE  (r7 I:int) = (r1 I:androidx.constraintlayout.utils.widget.ImageFilterView) type: VIRTUAL call: androidx.constraintlayout.utils.widget.ImageFilterView.getHeight():int A[MD:():int (s)]\l0x000c: INVOKE  (r1 I:int) = (r0 I:int A[D('w' int)]), (r7 I:int A[D('h' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)] (LINE:698)\l0x0010: CAST (r1 I:float) = (float) (r1 I:int) \l0x0011: IGET  (r2 I:androidx.constraintlayout.utils.widget.ImageFilterView) = (r9 I:androidx.constraintlayout.utils.widget.ImageFilterView$1) androidx.constraintlayout.utils.widget.ImageFilterView.1.this$0 androidx.constraintlayout.utils.widget.ImageFilterView \l0x0013: INVOKE  (r2 I:float) = (r2 I:androidx.constraintlayout.utils.widget.ImageFilterView) type: STATIC call: androidx.constraintlayout.utils.widget.ImageFilterView.access$000(androidx.constraintlayout.utils.widget.ImageFilterView):float A[MD:(androidx.constraintlayout.utils.widget.ImageFilterView):float (m)]\l0x0017: ARITH  (r1 I:float) = (r1 I:float) * (r2 I:float) \l0x0019: CONST  (r2 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x001b: ARITH  (r8 I:float) = (r1 I:float) \/ (r2 I:float) \l0x001d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:699)\l0x001e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001f: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('outline' android.graphics.Outline)]) \l0x0020: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('w' int)]) \l0x0021: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('h' int)]) \l0x0022: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('r' float)]) \l0x0023: INVOKE  (r1 I:android.graphics.Outline), (r2 I:int), (r3 I:int), (r4 I:int), (r5 I:int), (r6 I:float) type: VIRTUAL call: android.graphics.Outline.setRoundRect(int, int, int, int, float):void A[MD:(int, int, int, int, float):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|RETURN\l|0x0026: RETURN    (LINE:700)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.utils.widget.ImageFilterView.1.getOutline((r9 'this' I:androidx.constraintlayout.utils.widget.ImageFilterView$1 A[IMMUTABLE_TYPE, THIS]), (r10 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.graphics.Outline A[D('outline' android.graphics.Outline), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0026: r0 'w' I\l  0x000c\-0x0026: r7 'h' I\l  0x001d\-0x0026: r8 'r' F\l  \-1 \-0x0026: r10 'view' Landroid\/view\/View;\l  \-1 \-0x0026: r11 'outline' Landroid\/graphics\/Outline;\lMETHOD_PARAMETERS: [view, outline]\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewOutlineProvider.getOutline(android.view.View, android.graphics.Outline):void\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

