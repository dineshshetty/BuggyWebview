digraph "CFG forandroidx.constraintlayout.utils.widget.ImageFilterView.setMatrix()V" {
Node_33 [shape=record,label="{33\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0000}"];
Node_36 [shape=record,label="{36\:\ 0x0006|if (java.lang.Float.isNaN(r14.mPanX) == false) goto L11\l}"];
Node_37 [shape=record,label="{37\:\ 0x0008}"];
Node_38 [shape=record,label="{38\:\ 0x000e|if (java.lang.Float.isNaN(r14.mPanY) == false) goto L11\l}"];
Node_39 [shape=record,label="{39\:\ 0x0010}"];
Node_40 [shape=record,label="{40\:\ 0x0016|if (java.lang.Float.isNaN(r14.mZoom) == false) goto L11\l}"];
Node_41 [shape=record,label="{41\:\ 0x0018}"];
Node_42 [shape=record,label="{42\:\ 0x001e|if (java.lang.Float.isNaN(r14.mRotate) == false) goto L11\l}"];
Node_43 [shape=record,label="{43\:\ 0x0020|RETURN\l|return\l}"];
Node_34 [shape=record,label="{34\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0021|r1 = 0.0f\l}"];
Node_45 [shape=record,label="{45\:\ 0x0028|if (java.lang.Float.isNaN(r14.mPanX) == false) goto L31\l}"];
Node_46 [shape=record,label="{46\:\ 0x002a|r0 = 0.0f\l}"];
Node_48 [shape=record,label="{48\:\ 0x002e|PHI: r0 \l  PHI: (r0v5 'panX' float) = (r0v4 'panX' float), (r0v6 'panX' float) binds: [B:47:0x002c, B:46:0x002a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_49 [shape=record,label="{49\:\ 0x0034|if (java.lang.Float.isNaN(r14.mPanY) == false) goto L30\l}"];
Node_50 [shape=record,label="{50\:\ 0x0036|r2 = 0.0f\l}"];
Node_52 [shape=record,label="{52\:\ 0x003a|PHI: r2 \l  PHI: (r2v3 'panY' float) = (r2v2 'panY' float), (r2v4 'panY' float) binds: [B:51:0x0038, B:50:0x0036] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0040|if (java.lang.Float.isNaN(r14.mZoom) == false) goto L29\l}"];
Node_54 [shape=record,label="{54\:\ 0x0042|r3 = 1.0f\l}"];
Node_56 [shape=record,label="{56\:\ 0x0047|PHI: r3 \l  PHI: (r3v3 'zoom' float) = (r3v2 'zoom' float), (r3v4 'zoom' float) binds: [B:55:0x0045, B:54:0x0042] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_57 [shape=record,label="{57\:\ 0x004d|if (java.lang.Float.isNaN(r14.mRotate) == false) goto L22\l}"];
Node_59 [shape=record,label="{59\:\ 0x0050|float r1 = r14.mRotate\l}"];
Node_60 [shape=record,label="{60\:\ 0x0052|PHI: r1 \l  PHI: (r1v1 'rota' float) = (r1v0 'rota' float), (r1v2 'rota' float) binds: [B:57:0x004d, B:59:0x0050] A[DONT_GENERATE, DONT_INLINE]\l|android.graphics.Matrix r4 = new android.graphics.Matrix()\lr4.reset()\lfloat r5 = (float) getDrawable().getIntrinsicWidth()\lfloat r6 = (float) getDrawable().getIntrinsicHeight()\lfloat r7 = (float) getWidth()\lfloat r8 = (float) getHeight()\l}"];
Node_61 [shape=record,label="{61\:\ 0x007c|if (((r5 * r8) \> (r6 * r7) ? 1 : ((r5 * r8) == (r6 * r7) ? 0 : \-1)) \>= 0) goto L28\l}"];
Node_62 [shape=record,label="{62\:\ 0x007e|float r9 = r7 \/ r5\l}"];
Node_64 [shape=record,label="{64\:\ 0x0083|PHI: r9 \l  PHI: (r9v3 float) = (r9v2 float), (r9v5 float) binds: [B:63:0x0081, B:62:0x007e] A[DONT_GENERATE, DONT_INLINE]\l|float r9 = r9 * r3\lr4.postScale(r9, r9)\lfloat r10 = ((((r7 \- (r9 * r5)) * r0) + r7) \- (r9 * r5)) * 0.5f\lfloat r12 = ((((r8 \- (r9 * r6)) * r2) + r8) \- (r9 * r6)) * 0.5f\lr4.postTranslate(r10, r12)\lr4.postRotate(r1, r7 \/ 2.0f, r8 \/ 2.0f)\lsetImageMatrix(r4)\lsetScaleType(android.widget.ImageView.ScaleType.MATRIX)\l}"];
Node_65 [shape=record,label="{65\:\ 0x00b6|RETURN\l|return\l}"];
Node_63 [shape=record,label="{63\:\ 0x0081|float r9 = r8 \/ r6\l}"];
Node_55 [shape=record,label="{55\:\ 0x0045|float r3 = r14.mZoom\l}"];
Node_51 [shape=record,label="{51\:\ 0x0038|float r2 = r14.mPanY\l}"];
Node_47 [shape=record,label="{47\:\ 0x002c|float r0 = r14.mPanX\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.utils.widget.ImageFilterView.setMatrix((r14v0 'this' androidx.constraintlayout.utils.widget.ImageFilterView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:65:0x00b6 \-\> B:34:?, CROSS_EDGE: B:63:0x0081 \-\> B:64:0x0083, CROSS_EDGE: B:57:0x004d \-\> B:60:0x0052, CROSS_EDGE: B:55:0x0045 \-\> B:56:0x0047, CROSS_EDGE: B:51:0x0038 \-\> B:52:0x003a, CROSS_EDGE: B:47:0x002c \-\> B:48:0x002e, CROSS_EDGE: B:40:0x0016 \-\> B:44:0x0021, CROSS_EDGE: B:38:0x000e \-\> B:44:0x0021, CROSS_EDGE: B:36:0x0006 \-\> B:44:0x0021\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_33;Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_44;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_44;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_44;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_34;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_59;
Node_57 -> Node_60[style=dashed];
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_34;
Node_63 -> Node_64;
Node_55 -> Node_56;
Node_51 -> Node_52;
Node_47 -> Node_48;
}

