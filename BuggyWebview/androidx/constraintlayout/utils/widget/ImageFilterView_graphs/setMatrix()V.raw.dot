digraph "CFG forandroidx.constraintlayout.utils.widget.ImageFilterView.setMatrix()V" {
Node_33 [shape=record,label="{33\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0000|0x0000: IGET  (r0 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mPanX float  (LINE:455)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0021 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0008|0x0008: IGET  (r0 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mPanY float \l0x000a: INVOKE  (r0 I:boolean) = (r0 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)] (LINE:456)\l}"];
Node_38 [shape=record,label="{38\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0021 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0010|0x0010: IGET  (r0 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mZoom float \l0x0012: INVOKE  (r0 I:boolean) = (r0 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)] (LINE:457)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0021 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0018|0x0018: IGET  (r0 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mRotate float \l0x001a: INVOKE  (r0 I:boolean) = (r0 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)] (LINE:458)\l}"];
Node_42 [shape=record,label="{42\:\ 0x001e|0x001e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0021 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0020|RETURN\l|0x0020: RETURN    (LINE:460)\l}"];
Node_34 [shape=record,label="{34\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0021|0x0021: IGET  (r0 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mPanX float  (LINE:462)\l0x0023: INVOKE  (r0 I:boolean) = (r0 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l0x0027: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0028|0x0028: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x002c \l}"];
Node_46 [shape=record,label="{46\:\ 0x002a|0x002a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x002e|0x002e: IGET  (r2 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mPanY float  (LINE:463)\l0x0030: INVOKE  (r2 I:boolean) = (r2 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x0034|0x0034: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0038 \l}"];
Node_50 [shape=record,label="{50\:\ 0x0036|0x0036: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x003a|0x003a: IGET  (r3 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mZoom float  (LINE:464)\l0x003c: INVOKE  (r3 I:boolean) = (r3 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0040|0x0040: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0045 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0042|0x0042: CONST  (r3 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0047|0x0047: IGET  (r4 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mRotate float  (LINE:465)\l0x0049: INVOKE  (r4 I:boolean) = (r4 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x004d|0x004d: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0050 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0050|0x0050: IGET  (r1 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mRotate float \l}"];
Node_60 [shape=record,label="{60\:\ 0x0052|0x0052: NEW_INSTANCE  (r4 I:android.graphics.Matrix) =  android.graphics.Matrix  (LINE:466)\l0x0054: INVOKE  (r4 I:android.graphics.Matrix) type: DIRECT call: android.graphics.Matrix.\<init\>():void A[MD:():void (c)]\l0x0057: INVOKE  (r4 I:android.graphics.Matrix A[D('imageMatrix' android.graphics.Matrix)]) type: VIRTUAL call: android.graphics.Matrix.reset():void A[MD:():void (c)] (LINE:467)\l0x005a: INVOKE  (r5 I:android.graphics.drawable.Drawable) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) type: VIRTUAL call: androidx.constraintlayout.utils.widget.ImageFilterView.getDrawable():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (s)] (LINE:468)\l0x005e: INVOKE  (r5 I:int) = (r5 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicWidth():int A[MD:():int (c)]\l0x0062: CAST (r5 I:float) = (float) (r5 I:int) \l0x0063: INVOKE  (r6 I:android.graphics.drawable.Drawable) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) type: VIRTUAL call: androidx.constraintlayout.utils.widget.ImageFilterView.getDrawable():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (s)] (LINE:469)\l0x0067: INVOKE  (r6 I:int) = (r6 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicHeight():int A[MD:():int (c)]\l0x006b: CAST (r6 I:float) = (float) (r6 I:int) \l0x006c: INVOKE  (r7 I:int) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) type: VIRTUAL call: androidx.constraintlayout.utils.widget.ImageFilterView.getWidth():int A[MD:():int (s)] (LINE:470)\l0x0070: CAST (r7 I:float) = (float) (r7 I:int) \l0x0071: INVOKE  (r8 I:int) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) type: VIRTUAL call: androidx.constraintlayout.utils.widget.ImageFilterView.getHeight():int A[MD:():int (s)] (LINE:471)\l0x0075: CAST (r8 I:float) = (float) (r8 I:int) \l0x0076: ARITH  (r9 I:float) = (r5 I:float A[D('iw' float)]) * (r8 I:float A[D('sh' float)])  (LINE:472)\l0x0078: ARITH  (r10 I:float) = (r6 I:float A[D('ih' float)]) * (r7 I:float A[D('sw' float)]) \l0x007a: CMP_G  (r9 I:int) = (r9 I:float), (r10 I:float) \l}"];
Node_61 [shape=record,label="{61\:\ 0x007c|0x007c: IF  (r9 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:63:0x0081 \l}"];
Node_62 [shape=record,label="{62\:\ 0x007e|0x007e: ARITH  (r9 I:float) = (r7 I:float A[D('sw' float)]) \/ (r5 I:float A[D('iw' float)]) \l}"];
Node_64 [shape=record,label="{64\:\ 0x0083|0x0083: ARITH  (r9 I:float) = (r9 I:float) * (r3 I:float A[D('zoom' float)]) \l0x0085: INVOKE  \l  (r4 I:android.graphics.Matrix A[D('imageMatrix' android.graphics.Matrix)])\l  (r9 I:float A[D('scale' float)])\l  (r9 I:float A[D('scale' float)])\l type: VIRTUAL call: android.graphics.Matrix.postScale(float, float):boolean A[MD:(float, float):boolean (c)] (LINE:473)\l0x0088: ARITH  (r10 I:float) = (r9 I:float A[D('scale' float)]) * (r5 I:float A[D('iw' float)])  (LINE:474)\l0x008a: ARITH  (r10 I:float) = (r7 I:float A[D('sw' float)]) \- (r10 I:float) \l0x008c: ARITH  (r10 I:float) = (r10 I:float) * (r0 I:float A[D('panX' float)]) \l0x008e: ARITH  (r10 I:float) = (r10 I:float) + (r7 I:float A[D('sw' float)]) \l0x008f: ARITH  (r11 I:float) = (r9 I:float A[D('scale' float)]) * (r5 I:float A[D('iw' float)]) \l0x0091: ARITH  (r10 I:float) = (r10 I:float) \- (r11 I:float) \l0x0092: CONST  (r11 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char]) \l0x0094: ARITH  (r10 I:float) = (r10 I:float) * (r11 I:float) \l0x0096: ARITH  (r12 I:float) = (r9 I:float A[D('scale' float)]) * (r6 I:float A[D('ih' float)])  (LINE:475)\l0x0098: ARITH  (r12 I:float) = (r8 I:float A[D('sh' float)]) \- (r12 I:float) \l0x009a: ARITH  (r12 I:float) = (r12 I:float) * (r2 I:float A[D('panY' float)]) \l0x009c: ARITH  (r12 I:float) = (r12 I:float) + (r8 I:float A[D('sh' float)]) \l0x009d: ARITH  (r13 I:float) = (r9 I:float A[D('scale' float)]) * (r6 I:float A[D('ih' float)]) \l0x009f: ARITH  (r12 I:float) = (r12 I:float) \- (r13 I:float) \l0x00a0: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x00a2: INVOKE  \l  (r4 I:android.graphics.Matrix A[D('imageMatrix' android.graphics.Matrix)])\l  (r10 I:float A[D('tx' float)])\l  (r12 I:float A[D('ty' float)])\l type: VIRTUAL call: android.graphics.Matrix.postTranslate(float, float):boolean A[MD:(float, float):boolean (c)] (LINE:476)\l0x00a5: CONST  (r11 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:477)\l0x00a7: ARITH  (r13 I:float) = (r7 I:float A[D('sw' float)]) \/ (r11 I:float) \l0x00a9: ARITH  (r11 I:float) = (r8 I:float A[D('sh' float)]) \/ (r11 I:float) \l0x00ab: INVOKE  \l  (r4 I:android.graphics.Matrix A[D('imageMatrix' android.graphics.Matrix)])\l  (r1 I:float A[D('rota' float)])\l  (r13 I:float)\l  (r11 I:float)\l type: VIRTUAL call: android.graphics.Matrix.postRotate(float, float, float):boolean A[MD:(float, float, float):boolean (c)]\l0x00ae: INVOKE  \l  (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView)\l  (r4 I:android.graphics.Matrix A[D('imageMatrix' android.graphics.Matrix)])\l type: VIRTUAL call: androidx.constraintlayout.utils.widget.ImageFilterView.setImageMatrix(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (s)] (LINE:478)\l0x00b1: SGET  (r11 I:android.widget.ImageView$ScaleType) =  android.widget.ImageView.ScaleType.MATRIX android.widget.ImageView$ScaleType  (LINE:479)\l0x00b3: INVOKE  (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView), (r11 I:android.widget.ImageView$ScaleType) type: VIRTUAL call: androidx.constraintlayout.utils.widget.ImageFilterView.setScaleType(android.widget.ImageView$ScaleType):void A[MD:(android.widget.ImageView$ScaleType):void (s)]\l}"];
Node_65 [shape=record,label="{65\:\ 0x00b6|RETURN\l|0x00b6: RETURN    (LINE:480)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0081|0x0081: ARITH  (r9 I:float) = (r8 I:float A[D('sh' float)]) \/ (r6 I:float A[D('ih' float)]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x0045|0x0045: IGET  (r3 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mZoom float \l}"];
Node_51 [shape=record,label="{51\:\ 0x0038|0x0038: IGET  (r2 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mPanY float \l}"];
Node_47 [shape=record,label="{47\:\ 0x002c|0x002c: IGET  (r0 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mPanX float \l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.utils.widget.ImageFilterView.setMatrix((r14 'this' I:androidx.constraintlayout.utils.widget.ImageFilterView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:65:0x00b6 \-\> B:34:?, CROSS_EDGE: B:63:0x0081 \-\> B:64:0x0083, CROSS_EDGE: B:57:0x004d \-\> B:60:0x0052, CROSS_EDGE: B:55:0x0045 \-\> B:56:0x0047, CROSS_EDGE: B:51:0x0038 \-\> B:52:0x003a, CROSS_EDGE: B:47:0x002c \-\> B:48:0x002e, CROSS_EDGE: B:40:0x0016 \-\> B:44:0x0021, CROSS_EDGE: B:38:0x000e \-\> B:44:0x0021, CROSS_EDGE: B:36:0x0006 \-\> B:44:0x0021\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002e\-0x00b6: r0 'panX' F\l  0x0052\-0x00b6: r1 'rota' F\l  0x003a\-0x00b6: r2 'panY' F\l  0x0047\-0x00b6: r3 'zoom' F\l  0x0057\-0x00b6: r4 'imageMatrix' Landroid\/graphics\/Matrix;\l  0x0063\-0x00b6: r5 'iw' F\l  0x006c\-0x00b6: r6 'ih' F\l  0x0071\-0x00b6: r7 'sw' F\l  0x0076\-0x00b6: r8 'sh' F\l  0x0085\-0x00b6: r9 'scale' F\l  0x0096\-0x00b6: r10 'tx' F\l  0x00a2\-0x00b6: r12 'ty' F\l}"];
MethodNode -> Node_33;Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_44;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_44;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_44;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_34;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_59;
Node_57 -> Node_60[style=dashed];
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_34;
Node_63 -> Node_64;
Node_55 -> Node_56;
Node_51 -> Node_52;
Node_47 -> Node_48;
}

