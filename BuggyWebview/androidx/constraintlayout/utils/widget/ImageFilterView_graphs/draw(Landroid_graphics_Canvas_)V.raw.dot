digraph "CFG forandroidx.constraintlayout.utils.widget.ImageFilterView.draw(Landroid\/graphics\/Canvas;)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:802)\l0x0001: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:803)\l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|0x0005: IF  (r1 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:23:0x001b \l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|0x0007: IGET  (r1 I:float) = (r3 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mRoundPercent float  (LINE:804)\l0x0009: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: CMP_L  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_19 [shape=record,label="{19\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x001b \l}"];
Node_20 [shape=record,label="{20\:\ 0x000e|0x000e: IGET  (r1 I:android.graphics.Path) = (r3 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mPath android.graphics.Path \l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x001b \l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|0x0012: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('clip' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:805)\l0x0013: INVOKE  (r4 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:806)\l0x0016: IGET  (r1 I:android.graphics.Path) = (r3 I:androidx.constraintlayout.utils.widget.ImageFilterView) androidx.constraintlayout.utils.widget.ImageFilterView.mPath android.graphics.Path  (LINE:807)\l0x0018: INVOKE  (r4 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r1 I:android.graphics.Path) type: VIRTUAL call: android.graphics.Canvas.clipPath(android.graphics.Path):boolean A[MD:(android.graphics.Path):boolean (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x001b|0x001b: INVOKE  \l  (r3 I:androidx.appcompat.widget.AppCompatImageView)\l  (r4 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: SUPER call: androidx.appcompat.widget.AppCompatImageView.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (s)] (LINE:810)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001e|0x001e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('clip' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:?  (LINE:811)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0020|0x0020: INVOKE  (r4 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.restore():void A[MD:():void (c)] (LINE:812)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0023|RETURN\lORIG_RETURN\l|0x0023: RETURN    (LINE:814)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0023: RETURN   A[SYNTHETIC] (LINE:814)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.utils.widget.ImageFilterView.draw((r3 'this' I:androidx.constraintlayout.utils.widget.ImageFilterView A[IMMUTABLE_TYPE, THIS]), (r4 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:24:0x001e \-\> B:26:0x0023, CROSS_EDGE: B:21:0x0010 \-\> B:23:0x001b, CROSS_EDGE: B:19:0x000c \-\> B:23:0x001b, CROSS_EDGE: B:17:0x0005 \-\> B:23:0x001b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0023: r0 'clip' Z\l  \-1 \-0x0023: r4 'canvas' Landroid\/graphics\/Canvas;\lMETHOD_PARAMETERS: [canvas]\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.draw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_15;
}

