digraph "CFG forandroidx.constraintlayout.utils.widget.ImageFilterView.ImageMatrix.warmth(F)V" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (1167867904(0x459c4000, float:5000.0) ??[int, float, short, byte, char])  (LINE:135)\l0x0003: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:136)\l0x0004: CMP_G  (r2 I:int) = (r21 I:float A[D('warmth' float)]), (r1 I:float) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0006|0x0006: IF  (r2 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:35:0x000c \l}"];
Node_34 [shape=record,label="{34\:\ 0x0008|0x0008: CONST  (r2 I:??[int, float, short, byte, char]) = (1008981770(0x3c23d70a, float:0.01) ??[int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x000e|0x000e: ARITH  (r3 I:float) = (r0 I:float A[D('baseTemperature' float)]) \/ (r2 I:float A[D('warmth' float)])  (LINE:141)\l0x0010: CONST  (r4 I:??[int, float, short, byte, char]) = (1120403456(0x42c80000, float:100.0) ??[int, float, short, byte, char])  (LINE:143)\l0x0012: ARITH  (r5 I:float) = (r3 I:float A[D('kelvin' float)]) \/ (r4 I:float) \l0x0014: CONST  (r6 I:??[long, double]) = (4590105838747648000(0x3fb354f0e0000000, double:0.07551484555006027) ??[long, double])  (LINE:145)\l0x0019: CONST  (r8 I:??[int, float, short, byte, char]) = (1133514659(0x43900fa3, float:288.12216) ??[int, float, short, byte, char]) \l0x001c: CONST  (r9 I:??[long, double]) = (\-4629404809370271744(0xbfc10cda80000000, double:\-0.13320475816726685) ??[long, double]) \l0x0021: CONST  (r11 I:??[int, float, short, byte, char]) = (1134877040(0x43a4d970, float:329.69873) ??[int, float, short, byte, char]) \l0x0024: CONST  (r12 I:??[int, float, short, byte, char]) = (1114636288(0x42700000, float:60.0) ??[int, float, short, byte, char]) \l0x0026: CONST  (r13 I:??[int, float, short, byte, char]) = (1126243996(0x43211e9c, float:161.11957) ??[int, float, short, byte, char]) \l0x0029: CONST  (r14 I:??[int, float, short, byte, char]) = (1120334093(0x42c6f10d, float:99.4708) ??[int, float, short, byte, char]) \l0x002c: CONST  (r15 I:??[int, float, short, byte, char]) = (1115947008(0x42840000, float:66.0) ??[int, float, short, byte, char]) \l0x002e: CMP_L  (r16 I:int) = (r5 I:float A[D('centiKelvin' float)]), (r15 I:float) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0030|0x0030: IF  (r16 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:39:0x0047 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0032|0x0032: ARITH  (r4 I:float) = (r5 I:float A[D('centiKelvin' float)]) \- (r12 I:float)  (LINE:146)\l0x0034: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('warmth' float)])  (LINE:147)\l0x0036: CAST (r1 I:double) = (double) (r4 I:float A[D('tmp' float)]) \l0x0037: INVOKE  (r1 I:double) = (r1 I:double), (r9 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x003b: CAST (r1 I:float) = (float) (r1 I:double) \l0x003c: ARITH  (r1 I:float) = (r1 I:float) * (r11 I:float) \l0x003e: CAST (r9 I:double) = (double) (r4 I:float A[D('tmp' float)])  (LINE:148)\l0x003f: INVOKE  (r9 I:double) = (r9 I:double), (r6 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x0043: CAST (r2 I:float) = (float) (r9 I:double) \l0x0044: ARITH  (r2 I:float) = (r2 I:float) * (r8 I:float) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0055|0x0055: CONST  (r4 I:??[int, float, short, byte, char]) = (1134069180(0x439885bc, float:305.0448) ??[int, float, short, byte, char])  (LINE:154)\l0x0058: CONST  (r9 I:??[int, float, short, byte, char]) = (1092616192(0x41200000, float:10.0) ??[int, float, short, byte, char]) \l0x005a: CONST  (r10 I:??[int, float, short, byte, char]) = (1124762762(0x430a848a, float:138.51773) ??[int, float, short, byte, char]) \l0x005d: CONST  (r18 I:??[int, float, short, byte, char]) = (1100480512(0x41980000, float:19.0) ??[int, float, short, byte, char]) \l0x005f: CMP_G  (r19 I:int) = (r5 I:float A[D('centiKelvin' float)]), (r15 I:float) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0061|0x0061: IF  (r19 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:46:0x0075 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0063|0x0063: CMP_L  (r19 I:int) = (r5 I:float A[D('centiKelvin' float)]), (r18 I:float)  (LINE:155)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0065|0x0065: IF  (r19 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:45:0x0073 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0067|0x0067: ARITH  (r13 I:float) = (r5 I:float A[D('centiKelvin' float)]) \- (r9 I:float)  (LINE:156)\l0x0069: CAST (r8 I:double) = (double) (r13 I:float) \l0x006a: INVOKE  (r8 I:double) = (r8 I:double) type: STATIC call: java.lang.Math.log(double):double A[MD:(double):double (c)]\l0x006e: CAST (r8 I:float) = (float) (r8 I:double) \l0x006f: ARITH  (r8 I:float) = (r8 I:float) * (r10 I:float) \l0x0071: ARITH  (r8 I:float) = (r8 I:float) \- (r4 I:float) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0077|0x0077: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:163)\l0x0078: INVOKE  (r13 I:float) = (r1 I:float A[D('colorR' float)]), (r9 I:float) type: STATIC call: java.lang.Math.max(float, float):float A[MD:(float, float):float (c)]\l0x007c: CONST  (r4 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char]) \l0x007e: INVOKE  (r13 I:float) = (r4 I:float), (r13 I:float) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)]\l0x0082: INVOKE  (r10 I:float) = (r2 I:float A[D('colorG' float)]), (r9 I:float) type: STATIC call: java.lang.Math.max(float, float):float A[MD:(float, float):float (c)] (LINE:164)\l0x0086: INVOKE  (r10 I:float) = (r4 I:float), (r10 I:float) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)]\l0x008a: INVOKE  (r14 I:float) = (r8 I:float A[D('colorB' float)]), (r9 I:float) type: STATIC call: java.lang.Math.max(float, float):float A[MD:(float, float):float (c)] (LINE:165)\l0x008e: INVOKE  (r1 I:float A[D('colorR' float)]) = (r4 I:float), (r14 I:float) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)]\l0x0092: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('colorG' float)]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('tmpColor_r' float)])  (LINE:168)\l0x0093: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('tmpColor_g' float)])  (LINE:169)\l0x0094: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('tmpColor_b' float)])  (LINE:170)\l0x0095: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('kelvin' float)]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('baseTemperature' float)])  (LINE:171)\l0x0096: CONST  (r9 I:??[int, float, short, byte, char]) = (1120403456(0x42c80000, float:100.0) ??[int, float, short, byte, char])  (LINE:173)\l0x0098: ARITH  (r9 I:float) = (r3 I:float A[D('kelvin' float)]) \/ (r9 I:float) \l0x009a: CMP_L  (r14 I:int) = (r9 I:float A[D('centiKelvin' float)]), (r15 I:float)  (LINE:175)\l}"];
Node_48 [shape=record,label="{48\:\ 0x009c|0x009c: IF  (r14 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:50:0x00c1 \l}"];
Node_49 [shape=record,label="{49\:\ 0x009e|0x009e: ARITH  (r12 I:float) = (r9 I:float A[D('centiKelvin' float)]) \- (r12 I:float)  (LINE:176)\l0x00a0: MOVE  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('color_g' float)])  (LINE:177)\l0x00a1: CAST (r4 I:double) = (double) (r12 I:float A[D('tmp' float)]) \l0x00a2: CONST  (r6 I:??[long, double]) = (\-4629404809370271744(0xbfc10cda80000000, double:\-0.13320475816726685) ??[long, double]) \l0x00a7: INVOKE  (r4 I:double) = (r4 I:double), (r6 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x00ab: CAST (r4 I:float) = (float) (r4 I:double) \l0x00ac: ARITH  (r4 I:float) = (r4 I:float) * (r11 I:float) \l0x00ae: CAST (r5 I:double) = (double) (r12 I:float A[D('tmp' float)])  (LINE:178)\l0x00af: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('baseTemperature' float)]) \l0x00b0: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('tmpColor_b' float)]) \l0x00b1: CONST  (r0 I:??[long, double] A[D('baseTemperature' float)]) = (4590105838747648000(0x3fb354f0e0000000, double:0.07551484555006027) ??[long, double]) \l0x00b6: INVOKE  (r0 I:double) = (r5 I:double), (r0 I:double A[D('baseTemperature' float)]) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x00ba: CAST (r0 I:float) = (float) (r0 I:double) \l0x00bb: CONST  (r1 I:??[int, float, short, byte, char]) = (1133514659(0x43900fa3, float:288.12216) ??[int, float, short, byte, char]) \l0x00be: ARITH  (r0 I:float) = (r0 I:float) * (r1 I:float) \l}"];
Node_51 [shape=record,label="{51\:\ 0x00d5|0x00d5: CMP_G  (r1 I:int) = (r9 I:float A[D('centiKelvin' float)]), (r15 I:float)  (LINE:184)\l}"];
Node_52 [shape=record,label="{52\:\ 0x00d7|0x00d7: IF  (r1 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:57:0x00f3 \l}"];
Node_53 [shape=record,label="{53\:\ 0x00d9|0x00d9: CMP_L  (r1 I:int) = (r9 I:float A[D('centiKelvin' float)]), (r18 I:float)  (LINE:185)\l}"];
Node_54 [shape=record,label="{54\:\ 0x00db|0x00db: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:56:0x00f1 \l}"];
Node_55 [shape=record,label="{55\:\ 0x00dd|0x00dd: CONST  (r1 I:??[int, float, short, byte, char]) = (1092616192(0x41200000, float:10.0) ??[int, float, short, byte, char])  (LINE:186)\l0x00df: ARITH  (r1 I:float) = (r9 I:float A[D('centiKelvin' float)]) \- (r1 I:float) \l0x00e1: CAST (r5 I:double) = (double) (r1 I:float) \l0x00e2: INVOKE  (r5 I:double) = (r5 I:double) type: STATIC call: java.lang.Math.log(double):double A[MD:(double):double (c)]\l0x00e6: CAST (r1 I:float) = (float) (r5 I:double) \l0x00e7: CONST  (r5 I:??[int, float, short, byte, char]) = (1124762762(0x430a848a, float:138.51773) ??[int, float, short, byte, char]) \l0x00ea: ARITH  (r1 I:float) = (r1 I:float) * (r5 I:float) \l0x00ec: CONST  (r5 I:??[int, float, short, byte, char]) = (1134069180(0x439885bc, float:305.0448) ??[int, float, short, byte, char]) \l0x00ef: ARITH  (r1 I:float) = (r1 I:float) \- (r5 I:float) \l}"];
Node_58 [shape=record,label="{58\:\ 0x00f5|0x00f5: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:193)\l0x00f6: INVOKE  (r6 I:float) = (r4 I:float A[D('colorR' float)]), (r5 I:float) type: STATIC call: java.lang.Math.max(float, float):float A[MD:(float, float):float (c)]\l0x00fa: CONST  (r12 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char]) \l0x00fc: INVOKE  (r6 I:float) = (r12 I:float), (r6 I:float) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)]\l0x0100: INVOKE  (r13 I:float) = (r0 I:float A[D('colorG' float)]), (r5 I:float) type: STATIC call: java.lang.Math.max(float, float):float A[MD:(float, float):float (c)] (LINE:194)\l0x0104: INVOKE  (r10 I:float A[D('tmpColor_g' float)]) = (r12 I:float), (r13 I:float) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)]\l0x0108: INVOKE  (r13 I:float) = (r1 I:float A[D('colorB' float)]), (r5 I:float) type: STATIC call: java.lang.Math.max(float, float):float A[MD:(float, float):float (c)] (LINE:195)\l0x010c: INVOKE  (r0 I:float A[D('colorG' float)]) = (r12 I:float), (r13 I:float) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)]\l0x0110: ARITH  (r2 I:float) = (r2 I:float A[D('color_r' float)]) \/ (r6 I:float A[D('tmpColor_r' float)])  (LINE:198)\l0x0111: ARITH  (r5 I:float) = (r14 I:float A[D('color_g' float)]) \/ (r10 I:float A[D('tmpColor_g' float)])  (LINE:199)\l0x0113: ARITH  (r8 I:float) = (r8 I:float A[D('color_b' float)]) \/ (r0 I:float A[D('tmpColor_b' float)])  (LINE:200)\l0x0114: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY])  (LINE:201)\l0x0116: IGET  (r4 I:float[]) = (r1 I:androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix) androidx.constraintlayout.utils.widget.ImageFilterView.ImageMatrix.m float[] \l0x0118: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0119: APUT  \l  (r4 I:??[int, float][])\l  (r9 I:??[int, short, byte, char])\l  (r2 I:??[int, float, short, byte, char] A[D('color_r' float)])\l \l0x011b: CONST  (r9 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:202)\l0x011c: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x011d: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x011f: CONST  (r9 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:203)\l0x0120: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x0122: CONST  (r9 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:204)\l0x0123: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x0125: CONST  (r9 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:205)\l0x0126: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x0128: CONST  (r9 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char])  (LINE:207)\l0x0129: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x012b: CONST  (r9 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char])  (LINE:208)\l0x012c: APUT  \l  (r4 I:??[int, float][])\l  (r9 I:??[int, short, byte, char])\l  (r5 I:??[int, float, short, byte, char] A[D('color_g' float)])\l \l0x012e: CONST  (r9 I:??[int, float, short, byte, char]) = (7 ??[int, float, short, byte, char])  (LINE:209)\l0x012f: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x0131: CONST  (r9 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char])  (LINE:210)\l0x0133: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x0135: CONST  (r9 I:??[int, float, short, byte, char]) = (9 ??[int, float, short, byte, char])  (LINE:211)\l0x0137: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x0139: CONST  (r9 I:??[int, float, short, byte, char]) = (10 ??[int, float, short, byte, char])  (LINE:213)\l0x013b: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x013d: CONST  (r9 I:??[int, float, short, byte, char]) = (11 ??[int, float, short, byte, char])  (LINE:214)\l0x013f: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x0141: CONST  (r9 I:??[int, float, short, byte, char]) = (12 ??[int, float, short, byte, char])  (LINE:215)\l0x0143: APUT  \l  (r4 I:??[int, float][])\l  (r9 I:??[int, short, byte, char])\l  (r8 I:??[int, float, short, byte, char] A[D('color_b' float)])\l \l0x0145: CONST  (r9 I:??[int, float, short, byte, char]) = (13 ??[int, float, short, byte, char])  (LINE:216)\l0x0147: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x0149: CONST  (r9 I:??[int, float, short, byte, char]) = (14 ??[int, float, short, byte, char])  (LINE:217)\l0x014b: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x014d: CONST  (r9 I:??[int, float, short, byte, char]) = (15 ??[int, float, short, byte, char])  (LINE:219)\l0x014f: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x0151: CONST  (r9 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char])  (LINE:220)\l0x0153: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x0155: CONST  (r9 I:??[int, float, short, byte, char]) = (17 ??[int, float, short, byte, char])  (LINE:221)\l0x0157: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l0x0159: CONST  (r9 I:??[int, float, short, byte, char]) = (18 ??[int, float, short, byte, char])  (LINE:222)\l0x015b: CONST  (r12 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x015d: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r12 I:??[int, float, short, byte, char]) \l0x015f: CONST  (r9 I:??[int, float, short, byte, char]) = (19 ??[int, float, short, byte, char])  (LINE:223)\l0x0161: APUT  (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char]), (r11 I:??[int, float, short, byte, char]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x0163|RETURN\l|0x0163: RETURN    (LINE:224)\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_56 [shape=record,label="{56\:\ 0x00f1|0x00f1: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('colorB' float)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:188)\l}"];
Node_57 [shape=record,label="{57\:\ 0x00f3|0x00f3: CONST  (r1 I:??[int, float, short, byte, char] A[D('colorB' float)]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char])  (LINE:191)\l}"];
Node_50 [shape=record,label="{50\:\ 0x00c1|0x00c1: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('baseTemperature' float)]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('baseTemperature' float)])  (LINE:181)\l0x00c2: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('tmpColor_b' float)]) \l0x00c3: MOVE  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('color_g' float)]) \l0x00c4: CAST (r0 I:double A[D('baseTemperature' float)]) = (double) (r9 I:float A[D('centiKelvin' float)]) \l0x00c5: INVOKE  (r0 I:double) = (r0 I:double) type: STATIC call: java.lang.Math.log(double):double A[MD:(double):double (c)]\l0x00c9: CAST (r0 I:float) = (float) (r0 I:double) \l0x00ca: CONST  (r1 I:??[int, float, short, byte, char]) = (1120334093(0x42c6f10d, float:99.4708) ??[int, float, short, byte, char]) \l0x00cd: ARITH  (r0 I:float) = (r0 I:float) * (r1 I:float) \l0x00cf: CONST  (r1 I:??[int, float, short, byte, char]) = (1126243996(0x43211e9c, float:161.11957) ??[int, float, short, byte, char]) \l0x00d2: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x00d3: CONST  (r4 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char])  (LINE:182)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0073|0x0073: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('colorB' float)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:158)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0075|0x0075: CONST  (r8 I:??[int, float, short, byte, char] A[D('colorB' float)]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char])  (LINE:161)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0047|0x0047: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('warmth' float)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('warmth' float)])  (LINE:151)\l0x0049: CAST (r1 I:double) = (double) (r5 I:float A[D('centiKelvin' float)]) \l0x004a: INVOKE  (r1 I:double) = (r1 I:double) type: STATIC call: java.lang.Math.log(double):double A[MD:(double):double (c)]\l0x004e: CAST (r1 I:float) = (float) (r1 I:double) \l0x004f: ARITH  (r1 I:float) = (r1 I:float) * (r14 I:float) \l0x0051: ARITH  (r2 I:float) = (r1 I:float) \- (r13 I:float) \l0x0053: CONST  (r1 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char])  (LINE:152)\l}"];
Node_35 [shape=record,label="{35\:\ 0x000c|0x000c: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('warmth' float)]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('warmth' float)]) \l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.utils.widget.ImageFilterView.ImageMatrix.warmth((r20 'this' I:androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix A[IMMUTABLE_TYPE, THIS]), (r21 I:float A[D('warmth' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:56:0x00f1 \-\> B:58:0x00f5, CROSS_EDGE: B:57:0x00f3 \-\> B:58:0x00f5, CROSS_EDGE: B:50:0x00c1 \-\> B:51:0x00d5, CROSS_EDGE: B:45:0x0073 \-\> B:47:0x0077, CROSS_EDGE: B:46:0x0075 \-\> B:47:0x0077, CROSS_EDGE: B:39:0x0047 \-\> B:40:0x0055, CROSS_EDGE: B:35:0x000c \-\> B:36:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000b: r21 'warmth' F\l  0x000b\-0x000c: r2 'warmth' F\l  0x000c\-0x000e: r21 'warmth' F\l  0x000e\-0x0036: r2 'warmth' F\l  0x0034\-0x0046: r4 'tmp' F\l  0x003e\-0x0047: r1 'colorR' F\l  0x0036\-0x0047: r17 'warmth' F\l  0x0046\-0x0047: r2 'colorG' F\l  0x0047\-0x0049: r2 'warmth' F\l  0x0072\-0x0073: r8 'colorB' F\l  0x0074\-0x0075: r8 'colorB' F\l  0x0053\-0x0092: r2 'colorG' F\l  0x0014\-0x0092: r5 'centiKelvin' F\l  0x0077\-0x0092: r8 'colorB' F\l  0x0055\-0x0092: r1 'colorR' F\l  0x0094\-0x00a1: r5 'color_g' F\l  0x0003\-0x00b6: r0 'baseTemperature' F\l  0x0092\-0x00b6: r1 'tmpColor_b' F\l  0x00a0\-0x00c0: r12 'tmp' F\l  0x00ae\-0x00c1: r4 'colorR' F\l  0x00b6\-0x00c1: r7 'baseTemperature' F\l  0x00b6\-0x00c1: r11 'tmpColor_b' F\l  0x00a1\-0x00c1: r14 'color_g' F\l  0x00c0\-0x00c1: r0 'colorG' F\l  0x00c1\-0x00c4: r0 'baseTemperature' F\l  0x00c1\-0x00c4: r1 'tmpColor_b' F\l  0x00c1\-0x00c4: r5 'color_g' F\l  0x00f0\-0x00f1: r1 'colorB' F\l  0x00f2\-0x00f3: r1 'colorB' F\l  0x0082\-0x0100: r13 'tmpColor_r' F\l  0x00f5\-0x0110: r1 'colorB' F\l  0x00d5\-0x0110: r4 'colorR' F\l  0x009a\-0x0110: r9 'centiKelvin' F\l  0x00c4\-0x0110: r11 'tmpColor_b' F\l  0x00d3\-0x0110: r0 'colorG' F\l  0x00c4\-0x0113: r14 'color_g' F\l  0x0110\-0x0163: r0 'tmpColor_b' F\l  0x0093\-0x0163: r2 'color_r' F\l  0x0010\-0x0163: r3 'kelvin' F\l  0x0113\-0x0163: r5 'color_g' F\l  0x0100\-0x0163: r6 'tmpColor_r' F\l  0x00c4\-0x0163: r7 'baseTemperature' F\l  0x0095\-0x0163: r8 'color_b' F\l  0x008a\-0x0163: r10 'tmpColor_g' F\l  0x0049\-0x0163: r17 'warmth' F\lMETHOD_PARAMETERS: [warmth]\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_46;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_57;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_31;
Node_56 -> Node_58;
Node_57 -> Node_58;
Node_50 -> Node_51;
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_39 -> Node_40;
Node_35 -> Node_36;
}

