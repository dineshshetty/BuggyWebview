digraph "CFG forandroidx.constraintlayout.utils.widget.MotionTelltales.init(Landroid\/content\/Context;Landroid\/util\/AttributeSet;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('attrs' android.util.AttributeSet)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x003f  (LINE:70)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: SGET  (r0 I:int[]) =  androidx.constraintlayout.widget.R.styleable.MotionTelltales int[]  (LINE:71)\l0x0004: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r6 I:android.content.Context A[D('context' android.content.Context)])\l  (r7 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r0 I:int[])\l type: VIRTUAL call: android.content.Context.obtainStyledAttributes(android.util.AttributeSet, int[]):android.content.res.TypedArray A[MD:(android.util.AttributeSet, int[]):android.content.res.TypedArray (c)]\l0x0008: INVOKE  (r1 I:int) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.getIndexCount():int A[MD:():int (c)] (LINE:72)\l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:73)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|LOOP_START\lLOOP:0: B:4:0x000d\-\>B:14:0x0039\l|0x000d: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('N' int)])  \-\> B:18:0x003c \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r3 I:int) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r2 I:int A[D('i' int)]) type: VIRTUAL call: android.content.res.TypedArray.getIndex(int):int A[MD:(int):int (c)] (LINE:74)\l0x0013: SGET  (r4 I:int) =  androidx.constraintlayout.widget.R.styleable.MotionTelltales_telltales_tailColor int  (LINE:75)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('attr' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0020 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: IGET  (r4 I:int) = (r5 I:androidx.constraintlayout.utils.widget.MotionTelltales) androidx.constraintlayout.utils.widget.MotionTelltales.mTailColor int  (LINE:76)\l0x0019: INVOKE  (r4 I:int) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r3 I:int A[D('attr' int)]), (r4 I:int) type: VIRTUAL call: android.content.res.TypedArray.getColor(int, int):int A[MD:(int, int):int (c)]\l0x001d: IPUT  (r4 I:int), (r5 I:androidx.constraintlayout.utils.widget.MotionTelltales) androidx.constraintlayout.utils.widget.MotionTelltales.mTailColor int \l}"];
Node_20 [shape=record,label="{20\:\ 0x0039|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|LOOP_END\lLOOP:0: B:4:0x000d\-\>B:14:0x0039\l|0x0039: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:73)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: SGET  (r4 I:int) =  androidx.constraintlayout.widget.R.styleable.MotionTelltales_telltales_velocityMode int  (LINE:77)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('attr' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002d \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: IGET  (r4 I:int) = (r5 I:androidx.constraintlayout.utils.widget.MotionTelltales) androidx.constraintlayout.utils.widget.MotionTelltales.mVelocityMode int  (LINE:78)\l0x0026: INVOKE  (r4 I:int) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r3 I:int A[D('attr' int)]), (r4 I:int) type: VIRTUAL call: android.content.res.TypedArray.getInt(int, int):int A[MD:(int, int):int (c)]\l0x002a: IPUT  (r4 I:int), (r5 I:androidx.constraintlayout.utils.widget.MotionTelltales) androidx.constraintlayout.utils.widget.MotionTelltales.mVelocityMode int \l}"];
Node_21 [shape=record,label="{21\:\ 0x0039|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: SGET  (r4 I:int) =  androidx.constraintlayout.widget.R.styleable.MotionTelltales_telltales_tailScale int  (LINE:79)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('attr' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0039 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0031: IGET  (r4 I:float) = (r5 I:androidx.constraintlayout.utils.widget.MotionTelltales) androidx.constraintlayout.utils.widget.MotionTelltales.mTailScale float  (LINE:80)\l0x0033: INVOKE  (r4 I:float) = \l  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)])\l  (r3 I:int A[D('attr' int)])\l  (r4 I:float)\l type: VIRTUAL call: android.content.res.TypedArray.getFloat(int, float):float A[MD:(int, float):float (c)]\l0x0037: IPUT  (r4 I:float), (r5 I:androidx.constraintlayout.utils.widget.MotionTelltales) androidx.constraintlayout.utils.widget.MotionTelltales.mTailScale float \l}"];
Node_19 [shape=record,label="{19\:\ 0x0039|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0039|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x003c|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: INVOKE  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:83)\l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: IGET  (r0 I:android.graphics.Paint A[D('a' android.content.res.TypedArray)]) = (r5 I:androidx.constraintlayout.utils.widget.MotionTelltales) androidx.constraintlayout.utils.widget.MotionTelltales.mPaintTelltales android.graphics.Paint  (LINE:85)\l0x0041: IGET  (r1 I:int) = (r5 I:androidx.constraintlayout.utils.widget.MotionTelltales) androidx.constraintlayout.utils.widget.MotionTelltales.mTailColor int \l0x0043: INVOKE  (r0 I:android.graphics.Paint), (r1 I:int) type: VIRTUAL call: android.graphics.Paint.setColor(int):void A[MD:(int):void (c)]\l0x0046: IGET  (r0 I:android.graphics.Paint) = (r5 I:androidx.constraintlayout.utils.widget.MotionTelltales) androidx.constraintlayout.utils.widget.MotionTelltales.mPaintTelltales android.graphics.Paint  (LINE:86)\l0x0048: CONST  (r1 I:??[int, float, short, byte, char]) = (1084227584(0x40a00000, float:5.0) ??[int, float, short, byte, char]) \l0x004a: INVOKE  (r0 I:android.graphics.Paint), (r1 I:float) type: VIRTUAL call: android.graphics.Paint.setStrokeWidth(float):void A[MD:(float):void (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x004d|RETURN\l|0x004d: RETURN    (LINE:87)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.utils.widget.MotionTelltales.init((r5 'this' I:androidx.constraintlayout.utils.widget.MotionTelltales A[IMMUTABLE_TYPE, THIS]), (r6 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x0039 \-\> B:4:0x000d, CROSS_EDGE: B:10:0x0024 \-\> B:14:0x0039, CROSS_EDGE: B:13:0x0031 \-\> B:14:0x0039, CROSS_EDGE: B:12:0x002f \-\> B:14:0x0039, CROSS_EDGE: B:2:0x0000 \-\> B:16:0x003f\lDebug Info:\l  0x0013\-0x0039: r3 'attr' I\l  0x000d\-0x003c: r2 'i' I\l  0x0008\-0x003f: r0 'a' Landroid\/content\/res\/TypedArray;\l  0x000c\-0x003f: r1 'N' I\l  \-1 \-0x004d: r6 'context' Landroid\/content\/Context;\l  \-1 \-0x004d: r7 'attrs' Landroid\/util\/AttributeSet;\lMETHOD_PARAMETERS: [context, attrs]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_16;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_18;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_20;
Node_20 -> Node_14;
Node_14 -> Node_4;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_21;
Node_21 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_22;
Node_13 -> Node_19;
Node_19 -> Node_14;
Node_22 -> Node_14;
Node_18 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_1;
}

