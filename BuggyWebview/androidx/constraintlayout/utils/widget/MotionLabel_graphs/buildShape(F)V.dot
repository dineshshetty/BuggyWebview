digraph "CFG forandroidx.constraintlayout.utils.widget.MotionLabel.buildShape(F)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r11.mUseOutline != false) goto L7\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006}"];
Node_5 [shape=record,label="{5\:\ 0x0008|if ((r12 \> 1.0f ? 1 : (r12 == 1.0f ? 0 : \-1)) != 0) goto L7\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|r11.mPath.reset()\ljava.lang.String r0 = r11.mText\lint r9 = r0.length()\lr11.mPaint.getTextBounds(r0, 0, r9, r11.mTextBounds)\lr11.mPaint.getTextPath(r0, 0, r9, 0.0f, 0.0f, r11.mPath)\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|if ((r12 \> 1.0f ? 1 : (r12 == 1.0f ? 0 : \-1)) == 0) goto L10\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|java.lang.String r1 = androidx.constraintlayout.utils.widget.MotionLabel.TAG\ljava.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(androidx.constraintlayout.motion.widget.Debug.getLoc())\lr2.append(\" scale \")\lr2.append(r12)\landroid.util.Log.v(r1, r2.toString())\landroid.graphics.Matrix r1 = new android.graphics.Matrix()\lr1.postScale(r12, r12)\lr11.mPath.transform(r1)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0058|android.graphics.Rect r1 = r11.mTextBounds\lr1.right = r1.right + (\-1)\landroid.graphics.Rect r1 = r11.mTextBounds\lr1.left = r1.left + 1\landroid.graphics.Rect r1 = r11.mTextBounds\lr1.bottom = r1.bottom + 1\landroid.graphics.Rect r1 = r11.mTextBounds\lr1.top = r1.top + (\-1)\landroid.graphics.RectF r1 = new android.graphics.RectF()\lr1.bottom = (float) getHeight()\lr1.right = (float) getWidth()\lr11.mNotBuilt = false\l}"];
Node_11 [shape=record,label="{11\:\ 0x008d|RETURN\l|return\l}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.utils.widget.MotionLabel.buildShape((r11v0 'this' androidx.constraintlayout.utils.widget.MotionLabel A[IMMUTABLE_TYPE, THIS]), (r12v0 'scale' float A[D('scale' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x008d \-\> B:1:?, CROSS_EDGE: B:8:0x002c \-\> B:10:0x0058, CROSS_EDGE: B:3:0x0004 \-\> B:7:0x000b\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [scale]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
}

