digraph "CFG forandroidx.constraintlayout.utils.widget.MotionLabel.setupTexture()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextBackground android.graphics.drawable.Drawable  (LINE:227)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:android.graphics.Matrix) =  android.graphics.Matrix  (LINE:228)\l0x0006: INVOKE  (r0 I:android.graphics.Matrix) type: DIRECT call: android.graphics.Matrix.\<init\>():void A[MD:():void (c)]\l0x0009: IPUT  (r0 I:android.graphics.Matrix), (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextShaderMatrix android.graphics.Matrix \l0x000b: IGET  (r0 I:android.graphics.drawable.Drawable) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextBackground android.graphics.drawable.Drawable  (LINE:229)\l0x000d: INVOKE  (r0 I:int) = (r0 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicWidth():int A[MD:():int (c)]\l0x0011: IGET  (r1 I:android.graphics.drawable.Drawable) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextBackground android.graphics.drawable.Drawable  (LINE:230)\l0x0013: INVOKE  (r1 I:int) = (r1 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicHeight():int A[MD:():int (c)]\l0x0017: CONST  (r2 I:??[int, float, short, byte, char]) = (128(0x80, float:1.8E\-43) ??[int, float, short, byte, char])  (LINE:231)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: IF  (r0 I:??[int, byte, short, char] A[D('iw' int)]) \> (0 ??[int, byte, short, char])  \-\> B:14:0x0031 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: INVOKE  (r3 I:int) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) type: VIRTUAL call: androidx.constraintlayout.utils.widget.MotionLabel.getWidth():int A[MD:():int (c)] (LINE:232)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('w' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0030  (LINE:233)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: IGET  (r4 I:float) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextureWidth float  (LINE:234)\l0x0023: INVOKE  (r4 I:boolean) = (r4 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002c \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: CONST  (r4 I:??[int, float, short, byte, char]) = (128(0x80, float:1.8E\-43) ??[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('w' int)]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: IGET  (r4 I:float) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextureWidth float \l0x002e: CAST (r4 I:int) = (int) (r4 I:float) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('iw' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('w' int)])  (LINE:236)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|0x0031: IF  (r1 I:??[int, byte, short, char] A[D('ih' int)]) \> (0 ??[int, byte, short, char])  \-\> B:23:0x0047  (LINE:238)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|0x0033: INVOKE  (r3 I:int) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) type: VIRTUAL call: androidx.constraintlayout.utils.widget.MotionLabel.getHeight():int A[MD:():int (c)] (LINE:239)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|0x0037: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('h' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0046  (LINE:240)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|0x0039: IGET  (r4 I:float) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextureHeight float  (LINE:241)\l0x003b: INVOKE  (r4 I:boolean) = (r4 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|0x003f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0042 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0042|0x0042: IGET  (r2 I:float) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextureHeight float \l0x0044: CAST (r2 I:int) = (int) (r2 I:float) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0045|0x0045: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('h' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0046|0x0046: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('ih' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('h' int)])  (LINE:243)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0047|0x0047: IGET  (r2 I:int) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextureEffect int  (LINE:246)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0049|0x0049: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x004f \l}"];
Node_25 [shape=record,label="{25\:\ 0x004b|0x004b: ARITH  (r0 I:int) = (r0 I:int A[D('iw' int)]) \/ (2 int)  (LINE:247)\l0x004d: ARITH  (r1 I:int) = (r1 I:int A[D('ih' int)]) \/ (2 int)  (LINE:248)\l}"];
Node_26 [shape=record,label="{26\:\ 0x004f|0x004f: SGET  (r2 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config  (LINE:250)\l0x0051: INVOKE  (r2 I:android.graphics.Bitmap) = (r0 I:int A[D('iw' int)]), (r1 I:int A[D('ih' int)]), (r2 I:android.graphics.Bitmap$Config) type: STATIC call: android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap A[MD:(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap (c)]\l0x0055: IPUT  (r2 I:android.graphics.Bitmap), (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextBackgroundBitmap android.graphics.Bitmap \l0x0057: NEW_INSTANCE  (r2 I:android.graphics.Canvas) =  android.graphics.Canvas  (LINE:251)\l0x0059: IGET  (r3 I:android.graphics.Bitmap) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextBackgroundBitmap android.graphics.Bitmap \l0x005b: INVOKE  (r2 I:android.graphics.Canvas), (r3 I:android.graphics.Bitmap) type: DIRECT call: android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)]\l0x005e: IGET  (r3 I:android.graphics.drawable.Drawable) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextBackground android.graphics.drawable.Drawable  (LINE:253)\l0x0060: INVOKE  (r4 I:int) = (r2 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.getWidth():int A[MD:():int (c)]\l0x0064: INVOKE  (r5 I:int) = (r2 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.getHeight():int A[MD:():int (c)]\l0x0068: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0069: INVOKE  (r3 I:android.graphics.drawable.Drawable), (r6 I:int), (r6 I:int), (r4 I:int), (r5 I:int) type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x006c: IGET  (r3 I:android.graphics.drawable.Drawable) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextBackground android.graphics.drawable.Drawable  (LINE:254)\l0x006e: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x006f: INVOKE  (r3 I:android.graphics.drawable.Drawable), (r4 I:boolean) type: VIRTUAL call: android.graphics.drawable.Drawable.setFilterBitmap(boolean):void A[MD:(boolean):void (c)]\l0x0072: IGET  (r3 I:android.graphics.drawable.Drawable) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextBackground android.graphics.drawable.Drawable  (LINE:255)\l0x0074: INVOKE  (r3 I:android.graphics.drawable.Drawable), (r2 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)]\l0x0077: IGET  (r3 I:int) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextureEffect int  (LINE:256)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0079|0x0079: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0084 \l}"];
Node_28 [shape=record,label="{28\:\ 0x007b|0x007b: IGET  (r3 I:android.graphics.Bitmap) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextBackgroundBitmap android.graphics.Bitmap  (LINE:257)\l0x007d: CONST  (r4 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x007e: INVOKE  (r3 I:android.graphics.Bitmap) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel), (r3 I:android.graphics.Bitmap), (r4 I:int) type: VIRTUAL call: androidx.constraintlayout.utils.widget.MotionLabel.blur(android.graphics.Bitmap, int):android.graphics.Bitmap A[MD:(android.graphics.Bitmap, int):android.graphics.Bitmap (m)]\l0x0082: IPUT  (r3 I:android.graphics.Bitmap), (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextBackgroundBitmap android.graphics.Bitmap \l}"];
Node_29 [shape=record,label="{29\:\ 0x0084|0x0084: NEW_INSTANCE  (r3 I:android.graphics.BitmapShader) =  android.graphics.BitmapShader  (LINE:259)\l0x0086: IGET  (r4 I:android.graphics.Bitmap) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextBackgroundBitmap android.graphics.Bitmap \l0x0088: SGET  (r5 I:android.graphics.Shader$TileMode) =  android.graphics.Shader.TileMode.REPEAT android.graphics.Shader$TileMode \l0x008a: SGET  (r6 I:android.graphics.Shader$TileMode) =  android.graphics.Shader.TileMode.REPEAT android.graphics.Shader$TileMode \l0x008c: INVOKE  \l  (r3 I:android.graphics.BitmapShader)\l  (r4 I:android.graphics.Bitmap)\l  (r5 I:android.graphics.Shader$TileMode)\l  (r6 I:android.graphics.Shader$TileMode)\l type: DIRECT call: android.graphics.BitmapShader.\<init\>(android.graphics.Bitmap, android.graphics.Shader$TileMode, android.graphics.Shader$TileMode):void A[MD:(android.graphics.Bitmap, android.graphics.Shader$TileMode, android.graphics.Shader$TileMode):void (c)]\l0x008f: IPUT  (r3 I:android.graphics.BitmapShader), (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextShader android.graphics.BitmapShader \l}"];
Node_30 [shape=record,label="{30\:\ 0x0091|RETURN\lORIG_RETURN\l|0x0091: RETURN    (LINE:261)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0091: RETURN   A[SYNTHETIC] (LINE:261)\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.utils.widget.MotionLabel.setupTexture((r7 'this' I:androidx.constraintlayout.utils.widget.MotionLabel A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0079 \-\> B:29:0x0084, CROSS_EDGE: B:24:0x0049 \-\> B:26:0x004f, CROSS_EDGE: B:18:0x003f \-\> B:21:0x0045, CROSS_EDGE: B:16:0x0037 \-\> B:22:0x0046, CROSS_EDGE: B:14:0x0031 \-\> B:23:0x0047, CROSS_EDGE: B:11:0x002c \-\> B:12:0x002f, CROSS_EDGE: B:7:0x001f \-\> B:13:0x0030, CROSS_EDGE: B:5:0x0019 \-\> B:14:0x0031, CROSS_EDGE: B:3:0x0002 \-\> B:30:0x0091\lDebug Info:\l  0x001f\-0x0031: r3 'w' I\l  0x0037\-0x0047: r3 'h' I\l  0x0011\-0x0091: r0 'iw' I\l  0x0017\-0x0091: r1 'ih' I\l  0x005e\-0x0091: r2 'canvas' Landroid\/graphics\/Canvas;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_31;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_23;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_22;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_21[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_1;
Node_31 -> Node_1;
}

