digraph "CFG forandroidx.constraintlayout.utils.widget.MotionLabel.setTypefaceFromAttrs(Ljava\/lang\/String;II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:578)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0001|0x0001: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('familyName' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000d  (LINE:579)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|0x0003: INVOKE  (r0 I:android.graphics.Typeface A[D('tf' android.graphics.Typeface)]) = (r8 I:java.lang.String A[D('familyName' java.lang.String)]), (r10 I:int A[D('styleIndex' int)]) type: STATIC call: android.graphics.Typeface.create(java.lang.String, int):android.graphics.Typeface A[MD:(java.lang.String, int):android.graphics.Typeface (c)] (LINE:580)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tf' android.graphics.Typeface)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000d  (LINE:581)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: INVOKE  \l  (r7 I:androidx.constraintlayout.utils.widget.MotionLabel)\l  (r0 I:android.graphics.Typeface A[D('tf' android.graphics.Typeface)])\l type: VIRTUAL call: androidx.constraintlayout.utils.widget.MotionLabel.setTypeface(android.graphics.Typeface):void A[MD:(android.graphics.Typeface):void (m)] (LINE:582)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|RETURN\l|0x000c: RETURN    (LINE:583)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x000d|0x000d: SWITCH  (r9 I:?? A[D('typefaceIndex' int)])\l case 1: goto B:12:0x0017\l case 2: goto B:11:0x0014\l case 3: goto B:10:0x0011\l default: goto B:13:0x001a  (LINE:586)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0011|0x0011: SGET  (r0 I:android.graphics.Typeface A[D('tf' android.graphics.Typeface)]) =  android.graphics.Typeface.MONOSPACE android.graphics.Typeface  (LINE:594)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0014|0x0014: SGET  (r0 I:android.graphics.Typeface A[D('tf' android.graphics.Typeface)]) =  android.graphics.Typeface.SERIF android.graphics.Typeface  (LINE:591)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|0x0017: SGET  (r0 I:android.graphics.Typeface A[D('tf' android.graphics.Typeface)]) =  android.graphics.Typeface.SANS_SERIF android.graphics.Typeface  (LINE:588)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001a|0x001a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:598)\l0x001b: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x001c|0x001c: IF  (r10 I:??[int, byte, short, char] A[D('styleIndex' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:29:0x004c \l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|0x001e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tf' android.graphics.Typeface)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0025  (LINE:599)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0020|0x0020: INVOKE  (r0 I:android.graphics.Typeface A[D('tf' android.graphics.Typeface)]) = (r10 I:int A[D('styleIndex' int)]) type: STATIC call: android.graphics.Typeface.defaultFromStyle(int):android.graphics.Typeface A[MD:(int):android.graphics.Typeface (c)] (LINE:600)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0029|0x0029: INVOKE  \l  (r7 I:androidx.constraintlayout.utils.widget.MotionLabel)\l  (r0 I:android.graphics.Typeface A[D('tf' android.graphics.Typeface)])\l type: VIRTUAL call: androidx.constraintlayout.utils.widget.MotionLabel.setTypeface(android.graphics.Typeface):void A[MD:(android.graphics.Typeface):void (m)] (LINE:604)\l}"];
Node_19 [shape=record,label="{19\:\ 0x002c|0x002c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tf' android.graphics.Typeface)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0033  (LINE:606)\l}"];
Node_20 [shape=record,label="{20\:\ 0x002e|0x002e: INVOKE  (r3 I:int) = (r0 I:android.graphics.Typeface A[D('tf' android.graphics.Typeface)]) type: VIRTUAL call: android.graphics.Typeface.getStyle():int A[MD:():int (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0034|0x0034: NOT  (r4 I:int) = (r3 I:int A[D('typefaceStyle' int)])  (LINE:607)\l0x0035: ARITH  (r4 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) & (r10 I:??[int, boolean, short, byte, char] A[D('styleIndex' int)]) \l0x0036: IGET  (r5 I:android.text.TextPaint) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mPaint android.text.TextPaint  (LINE:608)\l0x0038: ARITH  (r6 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char] A[D('need' int)]) & (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x003a|0x003a: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x003d \l}"];
Node_24 [shape=record,label="{24\:\ 0x003c|0x003c: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x003d|0x003d: INVOKE  (r5 I:android.text.TextPaint), (r2 I:boolean) type: VIRTUAL call: android.text.TextPaint.setFakeBoldText(boolean):void A[MD:(boolean):void (c)]\l0x0040: IGET  (r2 I:android.text.TextPaint) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mPaint android.text.TextPaint  (LINE:609)\l0x0042: ARITH  (r5 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char] A[D('need' int)]) & (2 ??[int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0044|0x0044: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0048 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0046|0x0046: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1098907648(0xffffffffbe800000, float:\-0.25) ??[int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0048|0x0048: INVOKE  (r2 I:android.text.TextPaint), (r1 I:float) type: VIRTUAL call: android.text.TextPaint.setTextSkewX(float):void A[MD:(float):void (c)]\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0059: RETURN   A[SYNTHETIC] (LINE:615)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0033|0x0033: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0025|0x0025: INVOKE  (r0 I:android.graphics.Typeface A[D('tf' android.graphics.Typeface)]) = (r0 I:android.graphics.Typeface A[D('tf' android.graphics.Typeface)]), (r10 I:int A[D('styleIndex' int)]) type: STATIC call: android.graphics.Typeface.create(android.graphics.Typeface, int):android.graphics.Typeface A[MD:(android.graphics.Typeface, int):android.graphics.Typeface (c)] (LINE:602)\l}"];
Node_29 [shape=record,label="{29\:\ 0x004c|0x004c: IGET  (r3 I:android.text.TextPaint) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mPaint android.text.TextPaint  (LINE:611)\l0x004e: INVOKE  (r3 I:android.text.TextPaint), (r2 I:boolean) type: VIRTUAL call: android.text.TextPaint.setFakeBoldText(boolean):void A[MD:(boolean):void (c)]\l0x0051: IGET  (r2 I:android.text.TextPaint) = (r7 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mPaint android.text.TextPaint  (LINE:612)\l0x0053: INVOKE  (r2 I:android.text.TextPaint), (r1 I:float) type: VIRTUAL call: android.text.TextPaint.setTextSkewX(float):void A[MD:(float):void (c)]\l0x0056: INVOKE  \l  (r7 I:androidx.constraintlayout.utils.widget.MotionLabel)\l  (r0 I:android.graphics.Typeface A[D('tf' android.graphics.Typeface)])\l type: VIRTUAL call: androidx.constraintlayout.utils.widget.MotionLabel.setTypeface(android.graphics.Typeface):void A[MD:(android.graphics.Typeface):void (m)] (LINE:613)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0059|RETURN\lORIG_RETURN\l|0x0059: RETURN    (LINE:615)\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.utils.widget.MotionLabel.setTypefaceFromAttrs((r7 'this' I:androidx.constraintlayout.utils.widget.MotionLabel A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.String A[D('familyName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('typefaceIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('styleIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0059 \-\> B:1:?, CROSS_EDGE: B:26:0x0044 \-\> B:28:0x0048, CROSS_EDGE: B:23:0x003a \-\> B:25:0x003d, CROSS_EDGE: B:21:0x0033 \-\> B:22:0x0034, CROSS_EDGE: B:17:0x0025 \-\> B:18:0x0029, CROSS_EDGE: B:29:0x004c \-\> B:30:0x0059, CROSS_EDGE: B:11:0x0014 \-\> B:13:0x001a, CROSS_EDGE: B:12:0x0017 \-\> B:13:0x001a, CROSS_EDGE: B:8:0x000d \-\> B:13:0x001a, CROSS_EDGE: B:3:0x0001 \-\> B:8:0x000d\lDebug Info:\l  0x0034\-0x004b: r3 'typefaceStyle' I\l  0x0036\-0x004b: r4 'need' I\l  0x0001\-0x0063: r0 'tf' Landroid\/graphics\/Typeface;\l  \-1 \-0x0063: r8 'familyName' Ljava\/lang\/String;\l  \-1 \-0x0063: r9 'typefaceIndex' I\l  \-1 \-0x0063: r10 'styleIndex' I\lMETHOD_PARAMETERS: [familyName, typefaceIndex, styleIndex]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_10;
Node_8 -> Node_11;
Node_8 -> Node_12;
Node_8 -> Node_13;
Node_10 -> Node_13;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_29;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_31;
Node_31 -> Node_1;
Node_21 -> Node_22;
Node_17 -> Node_18;
Node_29 -> Node_30;
Node_30 -> Node_1;
}

