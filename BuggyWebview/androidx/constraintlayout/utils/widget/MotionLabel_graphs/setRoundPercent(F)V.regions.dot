digraph "CFG forandroidx.constraintlayout.utils.widget.MotionLabel.setRoundPercent(F)V" {
subgraph cluster_Region_1731054740 {
label = "R(4:2|4|(1:(1:29))(4:(1:8)|(1:11)|(2:(1:16)|17)|18)|(1:(1:22)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|boolean r0 = r9.mRoundPercent != r10\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|PHI: r0 \l  PHI: (r0v3 'change' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r9.mRoundPercent = r10\l}"];
subgraph cluster_IfRegion_950393046 {
label = "IF [B:7:0x0012] THEN: R(1:(1:29)) ELSE: R(4:(1:8)|(1:11)|(2:(1:16)|17)|18)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0012|if (r10 == 0.0f) goto L27\l}"];
subgraph cluster_Region_277144567 {
label = "R(1:(1:29))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1464618087 {
label = "IF [B:22:0x006b] THEN: R(1:29) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x006b|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L29\l}"];
subgraph cluster_Region_980074146 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x006d|setClipToOutline(false)\l}"];
}
}
}
subgraph cluster_Region_1577270159 {
label = "R(4:(1:8)|(1:11)|(2:(1:16)|17)|18)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_748659281 {
label = "IF [B:9:0x0016] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0016|if (r9.mPath == null) goto L8\l}"];
subgraph cluster_Region_456353646 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0018|r9.mPath = new android.graphics.Path()\l}"];
}
}
subgraph cluster_IfRegion_782843675 {
label = "IF [B:12:0x0021] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0021|if (r9.mRect == null) goto L11\l}"];
subgraph cluster_Region_1104747458 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0023|r9.mRect = new android.graphics.RectF()\l}"];
}
}
subgraph cluster_IfRegion_277197954 {
label = "IF [B:15:0x002c] THEN: R(2:(1:16)|17) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002c|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L14\l}"];
subgraph cluster_Region_269335019 {
label = "R(2:(1:16)|17)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2008747286 {
label = "IF [B:17:0x0030] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0030|if (r9.mViewOutlineProvider == null) goto L16\l}"];
subgraph cluster_Region_1317121643 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0032|androidx.constraintlayout.utils.widget.MotionLabel$1 android.view.ViewOutlineProvider r2 = new androidx.constraintlayout.utils.widget.MotionLabel.C01651()\lr9.mViewOutlineProvider = r2\lsetOutlineProvider(r2)\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x003c|setClipToOutline(true)\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x003f|int int r1 = getWidth()\lint int r2 = getHeight()\lfloat float r5 = (java.lang.Math.min(r1, r2) * r9.mRoundPercent) \/ 2.0f\lr9.mRect.set(0.0f, 0.0f, r1, r2)\lr9.mPath.reset()\lr9.mPath.addRoundRect(r9.mRect, r5, r5, android.graphics.Path.Direction.CW)\l}"];
}
}
subgraph cluster_Region_2117410600 {
label = "R(1:(1:22))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1767465545 {
label = "IF [B:24:0x0070, B:26:0x0074] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0070|if (r0 != false) goto L20\l}"];
Node_26 [shape=record,label="{26\:\ 0x0074|ADDED_TO_REGION\l|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L22\l}"];
subgraph cluster_Region_1135187400 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0076|invalidateOutline()\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0008}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0014}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001f}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x002a}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x002e}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0072}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0079|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ ?|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0069}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000a}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.utils.widget.MotionLabel.setRoundPercent((r9v0 'this' androidx.constraintlayout.utils.widget.MotionLabel A[IMMUTABLE_TYPE, THIS]), (r10v0 'round' float A[D('round' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0074 \-\> B:28:0x0079, CROSS_EDGE: B:24:0x0070 \-\> B:28:0x0079, CROSS_EDGE: B:17:0x0030 \-\> B:19:0x003c, CROSS_EDGE: B:15:0x002c \-\> B:20:0x003f, CROSS_EDGE: B:12:0x0021 \-\> B:14:0x002a, CROSS_EDGE: B:9:0x0016 \-\> B:11:0x001f, CROSS_EDGE: B:23:0x006d \-\> B:24:0x0070, CROSS_EDGE: B:22:0x006b \-\> B:24:0x0070, CROSS_EDGE: B:5:0x000a \-\> B:6:0x000b\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [round]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_21;
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_15 -> Node_20[style=dashed];
Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_29[style=dashed];
Node_26 -> Node_27;
Node_26 -> Node_30[style=dashed];
Node_27 -> Node_28;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_6;
Node_8 -> Node_9;
Node_11 -> Node_12;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_25 -> Node_26;
Node_28 -> Node_1;
Node_30 -> Node_1;
Node_29 -> Node_1;
Node_21 -> Node_22;
Node_5 -> Node_6;
}

