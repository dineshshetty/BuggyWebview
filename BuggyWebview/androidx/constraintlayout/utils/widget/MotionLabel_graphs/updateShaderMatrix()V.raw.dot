digraph "CFG forandroidx.constraintlayout.utils.widget.MotionLabel.updateShaderMatrix()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY])  (LINE:929)\l0x0002: IGET  (r1 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mBackgroundPanX float \l0x0004: INVOKE  (r1 I:boolean) = (r1 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IGET  (r3 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mBackgroundPanY float  (LINE:930)\l0x0011: INVOKE  (r3 I:boolean) = (r3 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0019 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: IGET  (r4 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mZoom float  (LINE:931)\l0x001d: INVOKE  (r4 I:boolean) = (r4 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0026 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|0x0023: CONST  (r4 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|0x0028: IGET  (r5 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mRotate float  (LINE:932)\l0x002a: INVOKE  (r5 I:boolean) = (r5 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|0x002e: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0031 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0031|0x0031: IGET  (r2 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mRotate float \l}"];
Node_18 [shape=record,label="{18\:\ 0x0033|0x0033: IGET  (r5 I:android.graphics.Matrix) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextShaderMatrix android.graphics.Matrix  (LINE:934)\l0x0035: INVOKE  (r5 I:android.graphics.Matrix) type: VIRTUAL call: android.graphics.Matrix.reset():void A[MD:():void (c)]\l0x0038: IGET  (r5 I:android.graphics.Bitmap) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextBackgroundBitmap android.graphics.Bitmap  (LINE:935)\l0x003a: INVOKE  (r5 I:int) = (r5 I:android.graphics.Bitmap) type: VIRTUAL call: android.graphics.Bitmap.getWidth():int A[MD:():int (c)]\l0x003e: CAST (r5 I:float) = (float) (r5 I:int) \l0x003f: IGET  (r6 I:android.graphics.Bitmap) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextBackgroundBitmap android.graphics.Bitmap  (LINE:936)\l0x0041: INVOKE  (r6 I:int) = (r6 I:android.graphics.Bitmap) type: VIRTUAL call: android.graphics.Bitmap.getHeight():int A[MD:():int (c)]\l0x0045: CAST (r6 I:float) = (float) (r6 I:int) \l0x0046: IGET  (r7 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextureWidth float  (LINE:937)\l0x0048: INVOKE  (r7 I:boolean) = (r7 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x004c|0x004c: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0051 \l}"];
Node_20 [shape=record,label="{20\:\ 0x004e|0x004e: IGET  (r7 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mFloatWidth float \l}"];
Node_22 [shape=record,label="{22\:\ 0x0053|0x0053: IGET  (r8 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextureHeight float  (LINE:938)\l0x0055: INVOKE  (r8 I:boolean) = (r8 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0059|0x0059: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x005e \l}"];
Node_24 [shape=record,label="{24\:\ 0x005b|0x005b: IGET  (r8 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mFloatHeight float \l}"];
Node_26 [shape=record,label="{26\:\ 0x0060|0x0060: ARITH  (r9 I:float) = (r5 I:float A[D('iw' float)]) * (r8 I:float A[D('sh' float)])  (LINE:940)\l0x0062: ARITH  (r10 I:float) = (r6 I:float A[D('ih' float)]) * (r7 I:float A[D('sw' float)]) \l0x0064: CMP_G  (r9 I:int) = (r9 I:float), (r10 I:float) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0066|0x0066: IF  (r9 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:29:0x006b \l}"];
Node_28 [shape=record,label="{28\:\ 0x0068|0x0068: ARITH  (r9 I:float) = (r7 I:float A[D('sw' float)]) \/ (r5 I:float A[D('iw' float)]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x006d|0x006d: ARITH  (r9 I:float) = (r9 I:float) * (r4 I:float A[D('zoom' float)]) \l0x006f: IGET  (r10 I:android.graphics.Matrix) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextShaderMatrix android.graphics.Matrix  (LINE:941)\l0x0071: INVOKE  (r10 I:android.graphics.Matrix), (r9 I:float A[D('scale' float)]), (r9 I:float A[D('scale' float)]) type: VIRTUAL call: android.graphics.Matrix.postScale(float, float):boolean A[MD:(float, float):boolean (c)]\l0x0074: ARITH  (r10 I:float) = (r9 I:float A[D('scale' float)]) * (r5 I:float A[D('iw' float)])  (LINE:942)\l0x0076: ARITH  (r10 I:float) = (r7 I:float A[D('sw' float)]) \- (r10 I:float) \l0x0078: ARITH  (r11 I:float) = (r9 I:float A[D('scale' float)]) * (r6 I:float A[D('ih' float)])  (LINE:943)\l0x007a: ARITH  (r11 I:float) = (r8 I:float A[D('sh' float)]) \- (r11 I:float) \l0x007c: IGET  (r12 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextureHeight float  (LINE:944)\l0x007e: INVOKE  (r12 I:boolean) = (r12 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l0x0082: CONST  (r13 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0084|0x0084: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x008a \l}"];
Node_32 [shape=record,label="{32\:\ 0x0086|0x0086: IGET  (r12 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextureHeight float  (LINE:945)\l0x0088: ARITH  (r11 I:float A[D('gapy' float)]) = (r12 I:float) \/ (r13 I:float) \l}"];
Node_33 [shape=record,label="{33\:\ 0x008a|0x008a: IGET  (r12 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextureWidth float  (LINE:947)\l0x008c: INVOKE  (r12 I:boolean) = (r12 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0090|0x0090: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0096 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0092|0x0092: IGET  (r12 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextureWidth float  (LINE:948)\l0x0094: ARITH  (r10 I:float A[D('gapx' float)]) = (r12 I:float) \/ (r13 I:float) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0096|0x0096: ARITH  (r12 I:float) = (r1 I:float A[D('panX' float)]) * (r10 I:float A[D('gapx' float)])  (LINE:950)\l0x0098: ARITH  (r12 I:float) = (r12 I:float) + (r7 I:float A[D('sw' float)]) \l0x0099: ARITH  (r14 I:float) = (r9 I:float A[D('scale' float)]) * (r5 I:float A[D('iw' float)]) \l0x009b: ARITH  (r12 I:float) = (r12 I:float) \- (r14 I:float) \l0x009c: CONST  (r14 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char]) \l0x009e: ARITH  (r12 I:float) = (r12 I:float) * (r14 I:float) \l0x00a0: ARITH  (r15 I:float) = (r3 I:float A[D('panY' float)]) * (r11 I:float A[D('gapy' float)])  (LINE:951)\l0x00a2: ARITH  (r15 I:float) = (r15 I:float) + (r8 I:float A[D('sh' float)]) \l0x00a3: ARITH  (r16 I:float) = (r9 I:float A[D('scale' float)]) * (r6 I:float A[D('ih' float)]) \l0x00a5: ARITH  (r15 I:float) = (r15 I:float) \- (r16 I:float) \l0x00a7: ARITH  (r15 I:float) = (r15 I:float) * (r14 I:float) \l0x00a9: IGET  (r14 I:android.graphics.Matrix) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextShaderMatrix android.graphics.Matrix  (LINE:953)\l0x00ab: INVOKE  (r14 I:android.graphics.Matrix), (r12 I:float A[D('tx' float)]), (r15 I:float A[D('ty' float)]) type: VIRTUAL call: android.graphics.Matrix.postTranslate(float, float):boolean A[MD:(float, float):boolean (c)]\l0x00ae: IGET  (r14 I:android.graphics.Matrix) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextShaderMatrix android.graphics.Matrix  (LINE:954)\l0x00b0: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('panX' float)]) \l0x00b2: ARITH  (r1 I:float A[D('panX' float)]) = (r7 I:float A[D('sw' float)]) \/ (r13 I:float) \l0x00b4: ARITH  (r13 I:float) = (r8 I:float A[D('sh' float)]) \/ (r13 I:float) \l0x00b6: INVOKE  (r14 I:android.graphics.Matrix), (r2 I:float A[D('rota' float)]), (r1 I:float), (r13 I:float) type: VIRTUAL call: android.graphics.Matrix.postRotate(float, float, float):boolean A[MD:(float, float, float):boolean (c)]\l0x00b9: IGET  (r1 I:android.graphics.BitmapShader) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextShader android.graphics.BitmapShader  (LINE:955)\l0x00bb: IGET  (r13 I:android.graphics.Matrix) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextShaderMatrix android.graphics.Matrix \l0x00bd: INVOKE  (r1 I:android.graphics.BitmapShader), (r13 I:android.graphics.Matrix) type: VIRTUAL call: android.graphics.BitmapShader.setLocalMatrix(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x00c0|RETURN\l|0x00c0: RETURN    (LINE:956)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x006b|0x006b: ARITH  (r9 I:float) = (r8 I:float A[D('sh' float)]) \/ (r6 I:float A[D('ih' float)]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x005e|0x005e: IGET  (r8 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextureHeight float \l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|0x0051: IGET  (r7 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mTextureWidth float \l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: IGET  (r4 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mZoom float \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: IGET  (r3 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mBackgroundPanY float \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IGET  (r1 I:float) = (r0 I:androidx.constraintlayout.utils.widget.MotionLabel) androidx.constraintlayout.utils.widget.MotionLabel.mBackgroundPanX float \l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.utils.widget.MotionLabel.updateShaderMatrix((r17 'this' I:androidx.constraintlayout.utils.widget.MotionLabel A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0090 \-\> B:36:0x0096, CROSS_EDGE: B:31:0x0084 \-\> B:33:0x008a, CROSS_EDGE: B:29:0x006b \-\> B:30:0x006d, CROSS_EDGE: B:25:0x005e \-\> B:26:0x0060, CROSS_EDGE: B:21:0x0051 \-\> B:22:0x0053, CROSS_EDGE: B:15:0x002e \-\> B:18:0x0033, CROSS_EDGE: B:13:0x0026 \-\> B:14:0x0028, CROSS_EDGE: B:9:0x0019 \-\> B:10:0x001b, CROSS_EDGE: B:5:0x000d \-\> B:6:0x000f\lDebug Info:\l  0x000f\-0x00b2: r1 'panX' F\l  0x0033\-0x00c0: r2 'rota' F\l  0x001b\-0x00c0: r3 'panY' F\l  0x0028\-0x00c0: r4 'zoom' F\l  0x003f\-0x00c0: r5 'iw' F\l  0x0046\-0x00c0: r6 'ih' F\l  0x0053\-0x00c0: r7 'sw' F\l  0x0060\-0x00c0: r8 'sh' F\l  0x006f\-0x00c0: r9 'scale' F\l  0x0078\-0x00c0: r10 'gapx' F\l  0x007c\-0x00c0: r11 'gapy' F\l  0x00a0\-0x00c0: r12 'tx' F\l  0x00a9\-0x00c0: r15 'ty' F\l  0x00b2\-0x00c0: r16 'panX' F\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_1;
Node_29 -> Node_30;
Node_25 -> Node_26;
Node_21 -> Node_22;
Node_13 -> Node_14;
Node_9 -> Node_10;
Node_5 -> Node_6;
}

