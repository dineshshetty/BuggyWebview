digraph "CFG forandroidx.constraintlayout.utils.widget.MotionLabel.updateShaderMatrix()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|r2 = 0.0f\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (java.lang.Float.isNaN(r17.mBackgroundPanX) == false) goto L36\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|r1 = 0.0f\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|PHI: r1 \l  PHI: (r1v3 'panX' float) = (r1v2 'panX' float), (r1v6 'panX' float) binds: [B:5:0x000d, B:4:0x000b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|if (java.lang.Float.isNaN(r17.mBackgroundPanY) == false) goto L35\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|r3 = 0.0f\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|PHI: r3 \l  PHI: (r3v3 'panY' float) = (r3v2 'panY' float), (r3v4 'panY' float) binds: [B:9:0x0019, B:8:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|if (java.lang.Float.isNaN(r17.mZoom) == false) goto L34\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|r4 = 1.0f\l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|PHI: r4 \l  PHI: (r4v3 'zoom' float) = (r4v2 'zoom' float), (r4v4 'zoom' float) binds: [B:13:0x0026, B:12:0x0023] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|if (java.lang.Float.isNaN(r17.mRotate) == false) goto L12\l}"];
Node_17 [shape=record,label="{17\:\ 0x0031|float r2 = r17.mRotate\l}"];
Node_18 [shape=record,label="{18\:\ 0x0033|PHI: r2 \l  PHI: (r2v1 'rota' float) = (r2v0 'rota' float), (r2v2 'rota' float) binds: [B:15:0x002e, B:17:0x0031] A[DONT_GENERATE, DONT_INLINE]\l|r17.mTextShaderMatrix.reset()\lfloat r5 = (float) r17.mTextBackgroundBitmap.getWidth()\lfloat r6 = (float) r17.mTextBackgroundBitmap.getHeight()\l}"];
Node_19 [shape=record,label="{19\:\ 0x004c|if (java.lang.Float.isNaN(r17.mTextureWidth) == false) goto L33\l}"];
Node_20 [shape=record,label="{20\:\ 0x004e|float r7 = r17.mFloatWidth\l}"];
Node_22 [shape=record,label="{22\:\ 0x0053|PHI: r7 \l  PHI: (r7v3 'sw' float) = (r7v2 'sw' float), (r7v4 'sw' float) binds: [B:21:0x0051, B:20:0x004e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0059|if (java.lang.Float.isNaN(r17.mTextureHeight) == false) goto L32\l}"];
Node_24 [shape=record,label="{24\:\ 0x005b|float r8 = r17.mFloatHeight\l}"];
Node_26 [shape=record,label="{26\:\ 0x0060|PHI: r8 \l  PHI: (r8v3 'sh' float) = (r8v2 'sh' float), (r8v4 'sh' float) binds: [B:25:0x005e, B:24:0x005b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0066|if (((r5 * r8) \> (r6 * r7) ? 1 : ((r5 * r8) == (r6 * r7) ? 0 : \-1)) \>= 0) goto L31\l}"];
Node_28 [shape=record,label="{28\:\ 0x0068|float r9 = r7 \/ r5\l}"];
Node_30 [shape=record,label="{30\:\ 0x006d|PHI: r9 \l  PHI: (r9v3 float) = (r9v2 float), (r9v5 float) binds: [B:29:0x006b, B:28:0x0068] A[DONT_GENERATE, DONT_INLINE]\l|float r9 = r9 * r4\lr17.mTextShaderMatrix.postScale(r9, r9)\lfloat r10 = r7 \- (r9 * r5)\lfloat r11 = r8 \- (r9 * r6)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0084|if (java.lang.Float.isNaN(r17.mTextureHeight) != false) goto L25\l}"];
Node_32 [shape=record,label="{32\:\ 0x0086|float r11 = r17.mTextureHeight \/ 2.0f\l}"];
Node_33 [shape=record,label="{33\:\ 0x008a|PHI: r11 \l  PHI: (r11v2 'gapy' float) = (r11v1 'gapy' float), (r11v3 'gapy' float) binds: [B:31:0x0084, B:32:0x0086] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0090|if (java.lang.Float.isNaN(r17.mTextureWidth) != false) goto L28\l}"];
Node_35 [shape=record,label="{35\:\ 0x0092|float r10 = r17.mTextureWidth \/ 2.0f\l}"];
Node_36 [shape=record,label="{36\:\ 0x0096|PHI: r10 \l  PHI: (r10v4 'gapx' float) = (r10v3 'gapx' float), (r10v5 'gapx' float) binds: [B:34:0x0090, B:35:0x0092] A[DONT_GENERATE, DONT_INLINE]\l|float r12 = (((r1 * r10) + r7) \- (r9 * r5)) * 0.5f\lfloat r15 = (((r3 * r11) + r8) \- (r9 * r6)) * 0.5f\lr17.mTextShaderMatrix.postTranslate(r12, r15)\lfloat r1 = r7 \/ 2.0f\lr17.mTextShaderMatrix.postRotate(r2, r1, r8 \/ 2.0f)\lr17.mTextShader.setLocalMatrix(r17.mTextShaderMatrix)\l}"];
Node_37 [shape=record,label="{37\:\ 0x00c0|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x006b|float r9 = r8 \/ r6\l}"];
Node_25 [shape=record,label="{25\:\ 0x005e|float r8 = r17.mTextureHeight\l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|float r7 = r17.mTextureWidth\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|float r4 = r17.mZoom\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|float r3 = r17.mBackgroundPanY\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|float r1 = r17.mBackgroundPanX\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.utils.widget.MotionLabel.updateShaderMatrix((r17v0 'this' androidx.constraintlayout.utils.widget.MotionLabel A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0090 \-\> B:36:0x0096, CROSS_EDGE: B:31:0x0084 \-\> B:33:0x008a, CROSS_EDGE: B:29:0x006b \-\> B:30:0x006d, CROSS_EDGE: B:25:0x005e \-\> B:26:0x0060, CROSS_EDGE: B:21:0x0051 \-\> B:22:0x0053, CROSS_EDGE: B:15:0x002e \-\> B:18:0x0033, CROSS_EDGE: B:13:0x0026 \-\> B:14:0x0028, CROSS_EDGE: B:9:0x0019 \-\> B:10:0x001b, CROSS_EDGE: B:5:0x000d \-\> B:6:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_1;
Node_29 -> Node_30;
Node_25 -> Node_26;
Node_21 -> Node_22;
Node_13 -> Node_14;
Node_9 -> Node_10;
Node_5 -> Node_6;
}

