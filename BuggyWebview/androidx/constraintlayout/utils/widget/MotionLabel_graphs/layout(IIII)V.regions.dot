digraph "CFG forandroidx.constraintlayout.utils.widget.MotionLabel.layout(IIII)V" {
subgraph cluster_Region_580930992 {
label = "R(5:1|2|4|(3:(1:8)|9|(1:(1:13)(1:14))(1:18))|(1:(1:25)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|super.layout(r10, r11, r12, r13)\lboolean boolean r0 = java.lang.Float.isNaN(r9.mBaseTextSize)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|float r1 = r0 ? 1.0f : r9.mTextSize \/ r9.mBaseTextSize\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|PHI: r1 \l  PHI: (r1v2 'scaleText' float) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r9.mFloatWidth = r12 \- r10\lr9.mFloatHeight = r13 \- r11\l}"];
subgraph cluster_IfRegion_797063470 {
label = "IF [B:7:0x001f] THEN: R(3:(1:8)|9|(1:(1:13)(1:14))(1:18)) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001f|if (r9.mAutoSize != false) goto L6\l}"];
subgraph cluster_Region_489355031 {
label = "R(3:(1:8)|9|(1:(1:13)(1:14))(1:18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1168374303 {
label = "IF [B:9:0x0023] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0023|if (r9.mTempRect == null) goto L8\l}"];
subgraph cluster_Region_1485632986 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0025|r9.mTempPaint = new android.graphics.Paint()\lr9.mTempRect = new android.graphics.Rect()\lr9.mTempPaint.set(r9.mPaint)\lr9.paintTextSize = r9.mTempPaint.getTextSize()\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0042|android.graphics.Paint android.graphics.Paint r2 = r9.mTempPaint\ljava.lang.String java.lang.String r3 = r9.mText\lr2.getTextBounds(r3, 0, r3.length(), r9.mTempRect)\lint int r2 = r9.mTempRect.width()\lint int r3 = (int) (r9.mTempRect.height() * 1.3f)\lfloat float r4 = (r9.mFloatWidth \- r9.mPaddingRight) \- r9.mPaddingLeft\lfloat float r5 = (r9.mFloatHeight \- r9.mPaddingBottom) \- r9.mPaddingTop\l}"];
subgraph cluster_IfRegion_818496983 {
label = "IF [B:12:0x0077] THEN: R(1:(1:13)(1:14)) ELSE: R(1:18)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0077|if (r0 != false) goto L11\l}"];
subgraph cluster_Region_1670240931 {
label = "R(1:(1:13)(1:14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2023237776 {
label = "IF [B:14:0x0081] THEN: R(1:13) ELSE: R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0081|if ((r2 * r5) \> (r3 * r4)) goto L13\l}"];
subgraph cluster_Region_1754834655 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0083|r9.mPaint.setTextSize((r9.paintTextSize * r4) \/ r2)\l}"];
}
subgraph cluster_Region_813280046 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x008f|r9.mPaint.setTextSize((r9.paintTextSize * r5) \/ r3)\l}"];
}
}
}
subgraph cluster_Region_1205528925 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x00ac|PHI: r6 \l  PHI: (r6v10 float A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r1 = ((float) r2) * r5 \> ((float) r3) * r4 ? r4 \/ r2 : r5 \/ r3\l}"];
}
}
}
}
subgraph cluster_Region_1568195765 {
label = "R(1:(1:25))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_323932985 {
label = "IF [B:23:0x00af, B:24:0x00b1] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x00af|if (r9.mUseOutline != false) goto L25\l}"];
Node_24 [shape=record,label="{24\:\ 0x00b1|ADDED_TO_REGION\l|if (r0 == false) goto L25\l}"];
subgraph cluster_Region_1731715547 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x00b3|adjustTexture(r10, r11, r12, r13)\lbuildShape(r1)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000b}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0021}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0079}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x009b}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x00a3}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x00a5}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x00a9}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x00ad|PHI: r1 \l  PHI: (r1v3 'scaleText' float) = (r1v2 'scaleText' float), (r1v4 'scaleText' float), (r1v2 'scaleText' float), (r1v2 'scaleText' float) binds: [B:7:0x001f, B:21:0x00ac, B:16:0x008f, B:15:0x0083] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_27 [shape=record,color=red,label="{27\:\ ?|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x00bd|ORIG_RETURN\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000e}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.utils.widget.MotionLabel.layout((r9v0 'this' androidx.constraintlayout.utils.widget.MotionLabel A[IMMUTABLE_TYPE, THIS]), (r10v0 'l' int A[D('l' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 't' int A[D('t' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'r' int A[D('r' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'b' int A[D('b' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:24:0x00b1 \-\> B:26:0x00bd, CROSS_EDGE: B:23:0x00af \-\> B:25:0x00b3, CROSS_EDGE: B:16:0x008f \-\> B:22:0x00ad, CROSS_EDGE: B:21:0x00ac \-\> B:22:0x00ad, CROSS_EDGE: B:20:0x00a9 \-\> B:21:0x00ac, CROSS_EDGE: B:9:0x0023 \-\> B:11:0x0042, CROSS_EDGE: B:7:0x001f \-\> B:22:0x00ad, CROSS_EDGE: B:5:0x000e \-\> B:6:0x0013\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [l, t, r, b]\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.layout(int, int, int, int):void\}]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_22[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_17[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_22;
Node_21 -> Node_22;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_24 -> Node_27[style=dashed];
Node_25 -> Node_26;
Node_0 -> Node_2;
Node_4 -> Node_6;
Node_8 -> Node_9;
Node_13 -> Node_14;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_27 -> Node_1;
Node_26 -> Node_1;
Node_5 -> Node_6;
}

