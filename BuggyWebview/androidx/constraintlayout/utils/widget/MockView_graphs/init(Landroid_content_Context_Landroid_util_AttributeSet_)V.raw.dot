digraph "CFG forandroidx.constraintlayout.utils.widget.MockView.init(Landroid\/content\/Context;Landroid\/util\/AttributeSet;)V" {
Node_42 [shape=record,label="{42\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0000|0x0000: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('attrs' android.util.AttributeSet)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x0064  (LINE:67)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0002|0x0002: SGET  (r0 I:int[]) =  androidx.constraintlayout.widget.R.styleable.MockView int[]  (LINE:68)\l0x0004: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r6 I:android.content.Context A[D('context' android.content.Context)])\l  (r7 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r0 I:int[])\l type: VIRTUAL call: android.content.Context.obtainStyledAttributes(android.util.AttributeSet, int[]):android.content.res.TypedArray A[MD:(android.util.AttributeSet, int[]):android.content.res.TypedArray (c)]\l0x0008: INVOKE  (r1 I:int) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.getIndexCount():int A[MD:():int (c)] (LINE:69)\l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:70)\l}"];
Node_46 [shape=record,label="{46\:\ 0x000d|LOOP_START\lLOOP:0: B:46:0x000d\-\>B:65:0x005e\l|0x000d: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('N' int)])  \-\> B:76:0x0061 \l}"];
Node_47 [shape=record,label="{47\:\ 0x000f|0x000f: INVOKE  (r3 I:int) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r2 I:int A[D('i' int)]) type: VIRTUAL call: android.content.res.TypedArray.getIndex(int):int A[MD:(int):int (c)] (LINE:71)\l0x0013: SGET  (r4 I:int) =  androidx.constraintlayout.widget.R.styleable.MockView_mock_label int  (LINE:72)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0015|0x0015: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('attr' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x001e \l}"];
Node_49 [shape=record,label="{49\:\ 0x0017|0x0017: INVOKE  (r4 I:java.lang.String) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r3 I:int A[D('attr' int)]) type: VIRTUAL call: android.content.res.TypedArray.getString(int):java.lang.String A[MD:(int):java.lang.String (c)] (LINE:73)\l0x001b: IPUT  (r4 I:java.lang.String), (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mText java.lang.String \l}"];
Node_78 [shape=record,label="{78\:\ 0x005e|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x005e|LOOP_END\lLOOP:0: B:46:0x000d\-\>B:65:0x005e\l|0x005e: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:70)\l}"];
Node_50 [shape=record,label="{50\:\ 0x001e|0x001e: SGET  (r4 I:int) =  androidx.constraintlayout.widget.R.styleable.MockView_mock_showDiagonals int  (LINE:74)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0020|0x0020: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('attr' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x002b \l}"];
Node_52 [shape=record,label="{52\:\ 0x0022|0x0022: IGET  (r4 I:boolean) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mDrawDiagonals boolean  (LINE:75)\l0x0024: INVOKE  (r4 I:boolean) = \l  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)])\l  (r3 I:int A[D('attr' int)])\l  (r4 I:boolean)\l type: VIRTUAL call: android.content.res.TypedArray.getBoolean(int, boolean):boolean A[MD:(int, boolean):boolean (c)]\l0x0028: IPUT  (r4 I:boolean), (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mDrawDiagonals boolean \l}"];
Node_79 [shape=record,label="{79\:\ 0x005e|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x002b|0x002b: SGET  (r4 I:int) =  androidx.constraintlayout.widget.R.styleable.MockView_mock_diagonalsColor int  (LINE:76)\l}"];
Node_54 [shape=record,label="{54\:\ 0x002d|0x002d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('attr' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0038 \l}"];
Node_55 [shape=record,label="{55\:\ 0x002f|0x002f: IGET  (r4 I:int) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mDiagonalsColor int  (LINE:77)\l0x0031: INVOKE  (r4 I:int) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r3 I:int A[D('attr' int)]), (r4 I:int) type: VIRTUAL call: android.content.res.TypedArray.getColor(int, int):int A[MD:(int, int):int (c)]\l0x0035: IPUT  (r4 I:int), (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mDiagonalsColor int \l}"];
Node_80 [shape=record,label="{80\:\ 0x005e|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x0038|0x0038: SGET  (r4 I:int) =  androidx.constraintlayout.widget.R.styleable.MockView_mock_labelBackgroundColor int  (LINE:78)\l}"];
Node_57 [shape=record,label="{57\:\ 0x003a|0x003a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('attr' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0045 \l}"];
Node_58 [shape=record,label="{58\:\ 0x003c|0x003c: IGET  (r4 I:int) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mTextBackgroundColor int  (LINE:79)\l0x003e: INVOKE  (r4 I:int) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r3 I:int A[D('attr' int)]), (r4 I:int) type: VIRTUAL call: android.content.res.TypedArray.getColor(int, int):int A[MD:(int, int):int (c)]\l0x0042: IPUT  (r4 I:int), (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mTextBackgroundColor int \l}"];
Node_81 [shape=record,label="{81\:\ 0x005e|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x0045|0x0045: SGET  (r4 I:int) =  androidx.constraintlayout.widget.R.styleable.MockView_mock_labelColor int  (LINE:80)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0047|0x0047: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('attr' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x0052 \l}"];
Node_61 [shape=record,label="{61\:\ 0x0049|0x0049: IGET  (r4 I:int) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mTextColor int  (LINE:81)\l0x004b: INVOKE  (r4 I:int) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r3 I:int A[D('attr' int)]), (r4 I:int) type: VIRTUAL call: android.content.res.TypedArray.getColor(int, int):int A[MD:(int, int):int (c)]\l0x004f: IPUT  (r4 I:int), (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mTextColor int \l}"];
Node_82 [shape=record,label="{82\:\ 0x005e|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0052|0x0052: SGET  (r4 I:int) =  androidx.constraintlayout.widget.R.styleable.MockView_mock_showLabel int  (LINE:82)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0054|0x0054: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('attr' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:83:0x005e \l}"];
Node_64 [shape=record,label="{64\:\ 0x0056|0x0056: IGET  (r4 I:boolean) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mDrawLabel boolean  (LINE:83)\l0x0058: INVOKE  (r4 I:boolean) = \l  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)])\l  (r3 I:int A[D('attr' int)])\l  (r4 I:boolean)\l type: VIRTUAL call: android.content.res.TypedArray.getBoolean(int, boolean):boolean A[MD:(int, boolean):boolean (c)]\l0x005c: IPUT  (r4 I:boolean), (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mDrawLabel boolean \l}"];
Node_77 [shape=record,label="{77\:\ 0x005e|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x005e|SYNTHETIC\l}"];
Node_76 [shape=record,label="{76\:\ 0x0061|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0061|0x0061: INVOKE  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:86)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0064|0x0064: IGET  (r0 I:java.lang.String A[D('a' android.content.res.TypedArray)]) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mText java.lang.String  (LINE:88)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0066|0x0066: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0078 \l}"];
Node_72 [shape=record,label="{72\:\ 0x0078|0x0078: IGET  (r0 I:android.graphics.Paint) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mPaintDiagonals android.graphics.Paint  (LINE:94)\l0x007a: IGET  (r1 I:int) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mDiagonalsColor int \l0x007c: INVOKE  (r0 I:android.graphics.Paint), (r1 I:int) type: VIRTUAL call: android.graphics.Paint.setColor(int):void A[MD:(int):void (c)]\l0x007f: IGET  (r0 I:android.graphics.Paint) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mPaintDiagonals android.graphics.Paint  (LINE:95)\l0x0081: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0082: INVOKE  (r0 I:android.graphics.Paint), (r1 I:boolean) type: VIRTUAL call: android.graphics.Paint.setAntiAlias(boolean):void A[MD:(boolean):void (c)]\l0x0085: IGET  (r0 I:android.graphics.Paint) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mPaintText android.graphics.Paint  (LINE:96)\l0x0087: IGET  (r2 I:int) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mTextColor int \l0x0089: INVOKE  (r0 I:android.graphics.Paint), (r2 I:int) type: VIRTUAL call: android.graphics.Paint.setColor(int):void A[MD:(int):void (c)]\l0x008c: IGET  (r0 I:android.graphics.Paint) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mPaintText android.graphics.Paint  (LINE:97)\l0x008e: INVOKE  (r0 I:android.graphics.Paint), (r1 I:boolean) type: VIRTUAL call: android.graphics.Paint.setAntiAlias(boolean):void A[MD:(boolean):void (c)]\l0x0091: IGET  (r0 I:android.graphics.Paint) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mPaintTextBackground android.graphics.Paint  (LINE:98)\l0x0093: IGET  (r1 I:int) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mTextBackgroundColor int \l0x0095: INVOKE  (r0 I:android.graphics.Paint), (r1 I:int) type: VIRTUAL call: android.graphics.Paint.setColor(int):void A[MD:(int):void (c)]\l0x0098: IGET  (r0 I:int) = (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mMargin int  (LINE:99)\l0x009a: CAST (r0 I:float) = (float) (r0 I:int) \l0x009b: INVOKE  (r1 I:android.content.res.Resources) = (r5 I:androidx.constraintlayout.utils.widget.MockView) type: VIRTUAL call: androidx.constraintlayout.utils.widget.MockView.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)]\l0x009f: INVOKE  (r1 I:android.util.DisplayMetrics) = (r1 I:android.content.res.Resources) type: VIRTUAL call: android.content.res.Resources.getDisplayMetrics():android.util.DisplayMetrics A[MD:():android.util.DisplayMetrics (c)]\l0x00a3: IGET  (r1 I:float) = (r1 I:android.util.DisplayMetrics) android.util.DisplayMetrics.xdpi float \l0x00a5: CONST  (r2 I:??[int, float, short, byte, char]) = (1126170624(0x43200000, float:160.0) ??[int, float, short, byte, char]) \l0x00a7: ARITH  (r1 I:float) = (r1 I:float) \/ (r2 I:float) \l0x00a8: ARITH  (r0 I:float) = (r0 I:float) * (r1 I:float) \l0x00aa: INVOKE  (r0 I:int) = (r0 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x00ae: IPUT  (r0 I:int), (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mMargin int \l}"];
Node_73 [shape=record,label="{73\:\ 0x00b0|RETURN\l|0x00b0: RETURN    (LINE:100)\l}"];
Node_43 [shape=record,label="{43\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_74 [shape=record,label="{74\:\ 0x0068|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_69 [shape=record,label="{69\:\ 0x0068|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0077, blocks: (B:69:0x0068), top: B:74:0x0068 \}\lCatch: Exception \-\> 0x0077\l|0x0068: INVOKE  (r0 I:android.content.res.Resources) = (r6 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[Catch: Exception \-\> 0x0077, MD:():android.content.res.Resources (c), TRY_ENTER] (LINE:90)\l0x006c: INVOKE  (r1 I:int) = (r5 I:androidx.constraintlayout.utils.widget.MockView) type: VIRTUAL call: androidx.constraintlayout.utils.widget.MockView.getId():int A[Catch: Exception \-\> 0x0077, MD:():int (c)]\l0x0070: INVOKE  (r0 I:java.lang.String) = (r0 I:android.content.res.Resources), (r1 I:int) type: VIRTUAL call: android.content.res.Resources.getResourceEntryName(int):java.lang.String A[Catch: Exception \-\> 0x0077, MD:(int):java.lang.String throws android.content.res.Resources$NotFoundException (c)]\l0x0074: IPUT  (r0 I:java.lang.String), (r5 I:androidx.constraintlayout.utils.widget.MockView) androidx.constraintlayout.utils.widget.MockView.mText java.lang.String A[Catch: Exception \-\> 0x0077, TRY_LEAVE]\l}"];
Node_75 [shape=record,label="{75\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_71 [shape=record,label="{71\:\ 0x0077|ExcHandler: Exception \-\> 0x0077\l|0x0077: MOVE_EXCEPTION  (r0 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0077] (LINE:91)\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.utils.widget.MockView.init((r5 'this' I:androidx.constraintlayout.utils.widget.MockView A[IMMUTABLE_TYPE, THIS]), (r6 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:65:0x005e \-\> B:46:0x000d, CROSS_EDGE: B:52:0x0022 \-\> B:65:0x005e, CROSS_EDGE: B:55:0x002f \-\> B:65:0x005e, CROSS_EDGE: B:58:0x003c \-\> B:65:0x005e, CROSS_EDGE: B:61:0x0049 \-\> B:65:0x005e, CROSS_EDGE: B:64:0x0056 \-\> B:65:0x005e, CROSS_EDGE: B:63:0x0054 \-\> B:65:0x005e, CROSS_EDGE: B:69:0x0068 \-\> B:72:0x0078, CROSS_EDGE: B:71:0x0077 \-\> B:72:0x0078, CROSS_EDGE: B:74:0x0068 \-\> B:71:0x0077, CROSS_EDGE: B:44:0x0000 \-\> B:67:0x0064\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x005e: r3 'attr' I\l  0x000d\-0x0061: r2 'i' I\l  0x0008\-0x0064: r0 'a' Landroid\/content\/res\/TypedArray;\l  0x000c\-0x0064: r1 'N' I\l  \-1 \-0x00b0: r6 'context' Landroid\/content\/Context;\l  \-1 \-0x00b0: r7 'attrs' Landroid\/util\/AttributeSet;\lMETHOD_PARAMETERS: [context, attrs]\lTryCatch #0 \{Exception \-\> 0x0077, blocks: (B:69:0x0068), top: B:74:0x0068 \}\l}"];
MethodNode -> Node_42;Node_42 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_67;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_76;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_78;
Node_78 -> Node_65;
Node_65 -> Node_46;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_79;
Node_79 -> Node_65;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_80;
Node_80 -> Node_65;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_81;
Node_81 -> Node_65;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_82;
Node_82 -> Node_65;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_83;
Node_64 -> Node_77;
Node_77 -> Node_65;
Node_83 -> Node_65;
Node_76 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_72;
Node_68 -> Node_74[style=dashed];
Node_72 -> Node_73;
Node_73 -> Node_43;
Node_74 -> Node_69;
Node_74 -> Node_71;
Node_69 -> Node_72;
Node_69 -> Node_75;
Node_75 -> Node_71;
Node_71 -> Node_72;
}

