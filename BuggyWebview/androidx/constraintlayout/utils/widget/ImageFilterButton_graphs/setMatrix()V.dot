digraph "CFG forandroidx.constraintlayout.utils.widget.ImageFilterButton.setMatrix()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (java.lang.Float.isNaN(r14.mPanX) == false) goto L11\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (java.lang.Float.isNaN(r14.mPanY) == false) goto L11\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010}"];
Node_7 [shape=record,label="{7\:\ 0x0016|if (java.lang.Float.isNaN(r14.mZoom) == false) goto L11\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018}"];
Node_9 [shape=record,label="{9\:\ 0x001e|if (java.lang.Float.isNaN(r14.mRotate) == false) goto L11\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|r1 = 0.0f\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|if (java.lang.Float.isNaN(r14.mPanX) == false) goto L31\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|r0 = 0.0f\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|PHI: r0 \l  PHI: (r0v5 'panX' float) = (r0v4 'panX' float), (r0v6 'panX' float) binds: [B:14:0x002c, B:13:0x002a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|if (java.lang.Float.isNaN(r14.mPanY) == false) goto L30\l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|r2 = 0.0f\l}"];
Node_19 [shape=record,label="{19\:\ 0x003a|PHI: r2 \l  PHI: (r2v3 'panY' float) = (r2v2 'panY' float), (r2v4 'panY' float) binds: [B:18:0x0038, B:17:0x0036] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0040|if (java.lang.Float.isNaN(r14.mZoom) == false) goto L29\l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|r3 = 1.0f\l}"];
Node_23 [shape=record,label="{23\:\ 0x0047|PHI: r3 \l  PHI: (r3v3 'zoom' float) = (r3v2 'zoom' float), (r3v4 'zoom' float) binds: [B:22:0x0045, B:21:0x0042] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x004d|if (java.lang.Float.isNaN(r14.mRotate) == false) goto L22\l}"];
Node_26 [shape=record,label="{26\:\ 0x0050|float r1 = r14.mRotate\l}"];
Node_27 [shape=record,label="{27\:\ 0x0052|PHI: r1 \l  PHI: (r1v1 'rota' float) = (r1v0 'rota' float), (r1v2 'rota' float) binds: [B:24:0x004d, B:26:0x0050] A[DONT_GENERATE, DONT_INLINE]\l|android.graphics.Matrix r4 = new android.graphics.Matrix()\lr4.reset()\lfloat r5 = (float) getDrawable().getIntrinsicWidth()\lfloat r6 = (float) getDrawable().getIntrinsicHeight()\lfloat r7 = (float) getWidth()\lfloat r8 = (float) getHeight()\l}"];
Node_28 [shape=record,label="{28\:\ 0x007c|if (((r5 * r8) \> (r6 * r7) ? 1 : ((r5 * r8) == (r6 * r7) ? 0 : \-1)) \>= 0) goto L28\l}"];
Node_29 [shape=record,label="{29\:\ 0x007e|float r9 = r7 \/ r5\l}"];
Node_31 [shape=record,label="{31\:\ 0x0083|PHI: r9 \l  PHI: (r9v3 float) = (r9v2 float), (r9v5 float) binds: [B:30:0x0081, B:29:0x007e] A[DONT_GENERATE, DONT_INLINE]\l|float r9 = r9 * r3\lr4.postScale(r9, r9)\lfloat r10 = ((((r7 \- (r9 * r5)) * r0) + r7) \- (r9 * r5)) * 0.5f\lfloat r12 = ((((r8 \- (r9 * r6)) * r2) + r8) \- (r9 * r6)) * 0.5f\lr4.postTranslate(r10, r12)\lr4.postRotate(r1, r7 \/ 2.0f, r8 \/ 2.0f)\lsetImageMatrix(r4)\lsetScaleType(android.widget.ImageView.ScaleType.MATRIX)\l}"];
Node_32 [shape=record,label="{32\:\ 0x00b6|RETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ 0x0081|float r9 = r8 \/ r6\l}"];
Node_22 [shape=record,label="{22\:\ 0x0045|float r3 = r14.mZoom\l}"];
Node_18 [shape=record,label="{18\:\ 0x0038|float r2 = r14.mPanY\l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|float r0 = r14.mPanX\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.utils.widget.ImageFilterButton.setMatrix((r14v0 'this' androidx.constraintlayout.utils.widget.ImageFilterButton A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x00b6 \-\> B:1:?, CROSS_EDGE: B:30:0x0081 \-\> B:31:0x0083, CROSS_EDGE: B:24:0x004d \-\> B:27:0x0052, CROSS_EDGE: B:22:0x0045 \-\> B:23:0x0047, CROSS_EDGE: B:18:0x0038 \-\> B:19:0x003a, CROSS_EDGE: B:14:0x002c \-\> B:15:0x002e, CROSS_EDGE: B:7:0x0016 \-\> B:11:0x0021, CROSS_EDGE: B:5:0x000e \-\> B:11:0x0021, CROSS_EDGE: B:3:0x0006 \-\> B:11:0x0021\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_27[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_1;
Node_30 -> Node_31;
Node_22 -> Node_23;
Node_18 -> Node_19;
Node_14 -> Node_15;
}

