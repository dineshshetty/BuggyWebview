digraph "CFG forandroidx.constraintlayout.utils.widget.ImageFilterButton.setMatrix()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) androidx.constraintlayout.utils.widget.ImageFilterButton.mPanX float  (LINE:335)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0021 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r0 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) androidx.constraintlayout.utils.widget.ImageFilterButton.mPanY float \l0x000a: INVOKE  (r0 I:boolean) = (r0 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)] (LINE:336)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0021 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r0 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) androidx.constraintlayout.utils.widget.ImageFilterButton.mZoom float \l0x0012: INVOKE  (r0 I:boolean) = (r0 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)] (LINE:337)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0021 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IGET  (r0 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) androidx.constraintlayout.utils.widget.ImageFilterButton.mRotate float \l0x001a: INVOKE  (r0 I:boolean) = (r0 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)] (LINE:338)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0021 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|RETURN\l|0x0020: RETURN    (LINE:340)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: IGET  (r0 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) androidx.constraintlayout.utils.widget.ImageFilterButton.mPanX float  (LINE:342)\l0x0023: INVOKE  (r0 I:boolean) = (r0 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l0x0027: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002c \l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|0x002a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|0x002e: IGET  (r2 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) androidx.constraintlayout.utils.widget.ImageFilterButton.mPanY float  (LINE:343)\l0x0030: INVOKE  (r2 I:boolean) = (r2 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|0x0034: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0038 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|0x0036: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x003a|0x003a: IGET  (r3 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) androidx.constraintlayout.utils.widget.ImageFilterButton.mZoom float  (LINE:344)\l0x003c: INVOKE  (r3 I:boolean) = (r3 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0040|0x0040: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0045 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|0x0042: CONST  (r3 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0047|0x0047: IGET  (r4 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) androidx.constraintlayout.utils.widget.ImageFilterButton.mRotate float  (LINE:345)\l0x0049: INVOKE  (r4 I:boolean) = (r4 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x004d|0x004d: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0050 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0050|0x0050: IGET  (r1 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) androidx.constraintlayout.utils.widget.ImageFilterButton.mRotate float \l}"];
Node_27 [shape=record,label="{27\:\ 0x0052|0x0052: NEW_INSTANCE  (r4 I:android.graphics.Matrix) =  android.graphics.Matrix  (LINE:346)\l0x0054: INVOKE  (r4 I:android.graphics.Matrix) type: DIRECT call: android.graphics.Matrix.\<init\>():void A[MD:():void (c)]\l0x0057: INVOKE  (r4 I:android.graphics.Matrix A[D('imageMatrix' android.graphics.Matrix)]) type: VIRTUAL call: android.graphics.Matrix.reset():void A[MD:():void (c)] (LINE:347)\l0x005a: INVOKE  (r5 I:android.graphics.drawable.Drawable) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) type: VIRTUAL call: androidx.constraintlayout.utils.widget.ImageFilterButton.getDrawable():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (s)] (LINE:348)\l0x005e: INVOKE  (r5 I:int) = (r5 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicWidth():int A[MD:():int (c)]\l0x0062: CAST (r5 I:float) = (float) (r5 I:int) \l0x0063: INVOKE  (r6 I:android.graphics.drawable.Drawable) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) type: VIRTUAL call: androidx.constraintlayout.utils.widget.ImageFilterButton.getDrawable():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (s)] (LINE:349)\l0x0067: INVOKE  (r6 I:int) = (r6 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicHeight():int A[MD:():int (c)]\l0x006b: CAST (r6 I:float) = (float) (r6 I:int) \l0x006c: INVOKE  (r7 I:int) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) type: VIRTUAL call: androidx.constraintlayout.utils.widget.ImageFilterButton.getWidth():int A[MD:():int (s)] (LINE:350)\l0x0070: CAST (r7 I:float) = (float) (r7 I:int) \l0x0071: INVOKE  (r8 I:int) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) type: VIRTUAL call: androidx.constraintlayout.utils.widget.ImageFilterButton.getHeight():int A[MD:():int (s)] (LINE:351)\l0x0075: CAST (r8 I:float) = (float) (r8 I:int) \l0x0076: ARITH  (r9 I:float) = (r5 I:float A[D('iw' float)]) * (r8 I:float A[D('sh' float)])  (LINE:352)\l0x0078: ARITH  (r10 I:float) = (r6 I:float A[D('ih' float)]) * (r7 I:float A[D('sw' float)]) \l0x007a: CMP_G  (r9 I:int) = (r9 I:float), (r10 I:float) \l}"];
Node_28 [shape=record,label="{28\:\ 0x007c|0x007c: IF  (r9 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:30:0x0081 \l}"];
Node_29 [shape=record,label="{29\:\ 0x007e|0x007e: ARITH  (r9 I:float) = (r7 I:float A[D('sw' float)]) \/ (r5 I:float A[D('iw' float)]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0083|0x0083: ARITH  (r9 I:float) = (r9 I:float) * (r3 I:float A[D('zoom' float)]) \l0x0085: INVOKE  \l  (r4 I:android.graphics.Matrix A[D('imageMatrix' android.graphics.Matrix)])\l  (r9 I:float A[D('scale' float)])\l  (r9 I:float A[D('scale' float)])\l type: VIRTUAL call: android.graphics.Matrix.postScale(float, float):boolean A[MD:(float, float):boolean (c)] (LINE:353)\l0x0088: ARITH  (r10 I:float) = (r9 I:float A[D('scale' float)]) * (r5 I:float A[D('iw' float)])  (LINE:354)\l0x008a: ARITH  (r10 I:float) = (r7 I:float A[D('sw' float)]) \- (r10 I:float) \l0x008c: ARITH  (r10 I:float) = (r10 I:float) * (r0 I:float A[D('panX' float)]) \l0x008e: ARITH  (r10 I:float) = (r10 I:float) + (r7 I:float A[D('sw' float)]) \l0x008f: ARITH  (r11 I:float) = (r9 I:float A[D('scale' float)]) * (r5 I:float A[D('iw' float)]) \l0x0091: ARITH  (r10 I:float) = (r10 I:float) \- (r11 I:float) \l0x0092: CONST  (r11 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char]) \l0x0094: ARITH  (r10 I:float) = (r10 I:float) * (r11 I:float) \l0x0096: ARITH  (r12 I:float) = (r9 I:float A[D('scale' float)]) * (r6 I:float A[D('ih' float)])  (LINE:355)\l0x0098: ARITH  (r12 I:float) = (r8 I:float A[D('sh' float)]) \- (r12 I:float) \l0x009a: ARITH  (r12 I:float) = (r12 I:float) * (r2 I:float A[D('panY' float)]) \l0x009c: ARITH  (r12 I:float) = (r12 I:float) + (r8 I:float A[D('sh' float)]) \l0x009d: ARITH  (r13 I:float) = (r9 I:float A[D('scale' float)]) * (r6 I:float A[D('ih' float)]) \l0x009f: ARITH  (r12 I:float) = (r12 I:float) \- (r13 I:float) \l0x00a0: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x00a2: INVOKE  \l  (r4 I:android.graphics.Matrix A[D('imageMatrix' android.graphics.Matrix)])\l  (r10 I:float A[D('tx' float)])\l  (r12 I:float A[D('ty' float)])\l type: VIRTUAL call: android.graphics.Matrix.postTranslate(float, float):boolean A[MD:(float, float):boolean (c)] (LINE:356)\l0x00a5: CONST  (r11 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:357)\l0x00a7: ARITH  (r13 I:float) = (r7 I:float A[D('sw' float)]) \/ (r11 I:float) \l0x00a9: ARITH  (r11 I:float) = (r8 I:float A[D('sh' float)]) \/ (r11 I:float) \l0x00ab: INVOKE  \l  (r4 I:android.graphics.Matrix A[D('imageMatrix' android.graphics.Matrix)])\l  (r1 I:float A[D('rota' float)])\l  (r13 I:float)\l  (r11 I:float)\l type: VIRTUAL call: android.graphics.Matrix.postRotate(float, float, float):boolean A[MD:(float, float, float):boolean (c)]\l0x00ae: INVOKE  \l  (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton)\l  (r4 I:android.graphics.Matrix A[D('imageMatrix' android.graphics.Matrix)])\l type: VIRTUAL call: androidx.constraintlayout.utils.widget.ImageFilterButton.setImageMatrix(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (s)] (LINE:358)\l0x00b1: SGET  (r11 I:android.widget.ImageView$ScaleType) =  android.widget.ImageView.ScaleType.MATRIX android.widget.ImageView$ScaleType  (LINE:359)\l0x00b3: INVOKE  (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton), (r11 I:android.widget.ImageView$ScaleType) type: VIRTUAL call: androidx.constraintlayout.utils.widget.ImageFilterButton.setScaleType(android.widget.ImageView$ScaleType):void A[MD:(android.widget.ImageView$ScaleType):void (s)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x00b6|RETURN\l|0x00b6: RETURN    (LINE:360)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0081|0x0081: ARITH  (r9 I:float) = (r8 I:float A[D('sh' float)]) \/ (r6 I:float A[D('ih' float)]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0045|0x0045: IGET  (r3 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) androidx.constraintlayout.utils.widget.ImageFilterButton.mZoom float \l}"];
Node_18 [shape=record,label="{18\:\ 0x0038|0x0038: IGET  (r2 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) androidx.constraintlayout.utils.widget.ImageFilterButton.mPanY float \l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: IGET  (r0 I:float) = (r14 I:androidx.constraintlayout.utils.widget.ImageFilterButton) androidx.constraintlayout.utils.widget.ImageFilterButton.mPanX float \l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.utils.widget.ImageFilterButton.setMatrix((r14 'this' I:androidx.constraintlayout.utils.widget.ImageFilterButton A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x00b6 \-\> B:1:?, CROSS_EDGE: B:30:0x0081 \-\> B:31:0x0083, CROSS_EDGE: B:24:0x004d \-\> B:27:0x0052, CROSS_EDGE: B:22:0x0045 \-\> B:23:0x0047, CROSS_EDGE: B:18:0x0038 \-\> B:19:0x003a, CROSS_EDGE: B:14:0x002c \-\> B:15:0x002e, CROSS_EDGE: B:7:0x0016 \-\> B:11:0x0021, CROSS_EDGE: B:5:0x000e \-\> B:11:0x0021, CROSS_EDGE: B:3:0x0006 \-\> B:11:0x0021\lDebug Info:\l  0x002e\-0x00b6: r0 'panX' F\l  0x0052\-0x00b6: r1 'rota' F\l  0x003a\-0x00b6: r2 'panY' F\l  0x0047\-0x00b6: r3 'zoom' F\l  0x0057\-0x00b6: r4 'imageMatrix' Landroid\/graphics\/Matrix;\l  0x0063\-0x00b6: r5 'iw' F\l  0x006c\-0x00b6: r6 'ih' F\l  0x0071\-0x00b6: r7 'sw' F\l  0x0076\-0x00b6: r8 'sh' F\l  0x0085\-0x00b6: r9 'scale' F\l  0x0096\-0x00b6: r10 'tx' F\l  0x00a2\-0x00b6: r12 'ty' F\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_27[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_1;
Node_30 -> Node_31;
Node_22 -> Node_23;
Node_18 -> Node_19;
Node_14 -> Node_15;
}

