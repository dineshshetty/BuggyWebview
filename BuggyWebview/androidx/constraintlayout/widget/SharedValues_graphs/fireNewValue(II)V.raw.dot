digraph "CFG forandroidx.constraintlayout.widget.SharedValues.fireNewValue(II)V" {
Node_38 [shape=record,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:79)\l0x0001: IGET  (r1 I:android.util.SparseIntArray) = (r7 I:androidx.constraintlayout.widget.SharedValues) androidx.constraintlayout.widget.SharedValues.mValues android.util.SparseIntArray  (LINE:80)\l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0004: INVOKE  (r1 I:int) = (r1 I:android.util.SparseIntArray), (r8 I:int A[D('key' int)]), (r2 I:int) type: VIRTUAL call: android.util.SparseIntArray.get(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('previousValue' int)]) != (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' int)])  \-\> B:43:0x000b  (LINE:81)\l}"];
Node_42 [shape=record,label="{42\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:83)\l}"];
Node_39 [shape=record,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x000b|0x000b: IGET  (r2 I:android.util.SparseIntArray) = (r7 I:androidx.constraintlayout.widget.SharedValues) androidx.constraintlayout.widget.SharedValues.mValues android.util.SparseIntArray  (LINE:85)\l0x000d: INVOKE  (r2 I:android.util.SparseIntArray), (r8 I:int A[D('key' int)]), (r9 I:int A[D('value' int)]) type: VIRTUAL call: android.util.SparseIntArray.put(int, int):void A[MD:(int, int):void (c)]\l0x0010: IGET  (r2 I:java.util.HashMap\<java.lang.Integer, java.util.HashSet\<java.lang.ref.WeakReference\<androidx.constraintlayout.widget.SharedValues$SharedValuesListener\>\>\>) = (r7 I:androidx.constraintlayout.widget.SharedValues) androidx.constraintlayout.widget.SharedValues.mValuesListeners java.util.HashMap  (LINE:86)\l0x0012: INVOKE  (r3 I:java.lang.Integer) = (r8 I:int A[D('key' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0016: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.HashMap), (r3 I:java.lang.Object) type: VIRTUAL call: java.util.HashMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x001a: CHECK_CAST (r2 I:java.util.HashSet) = (java.util.HashSet) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x001c|0x001c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('listeners' java.util.HashSet\<java.lang.ref.WeakReference\<androidx.constraintlayout.widget.SharedValues$SharedValuesListener\>\>)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x001f  (LINE:87)\l}"];
Node_45 [shape=record,label="{45\:\ 0x001e|RETURN\l|0x001e: RETURN    (LINE:88)\l}"];
Node_46 [shape=record,label="{46\:\ 0x001f|0x001f: INVOKE  (r3 I:java.util.Iterator) = \l  (r2 I:java.util.HashSet A[D('listeners' java.util.HashSet\<java.lang.ref.WeakReference\<androidx.constraintlayout.widget.SharedValues$SharedValuesListener\>\>)])\l type: VIRTUAL call: java.util.HashSet.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:91)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0023|LOOP_START\lLOOP:0: B:47:0x0023\-\>B:67:0x0023\l|0x0023: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0027|0x0027: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x003d \l}"];
Node_49 [shape=record,label="{49\:\ 0x0029|0x0029: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x002d: CHECK_CAST (r4 I:java.lang.ref.WeakReference) = (java.lang.ref.WeakReference) (r4 I:??[OBJECT, ARRAY]) \l0x002f: INVOKE  (r5 I:java.lang.Object) = \l  (r4 I:java.lang.ref.WeakReference A[D('listenerWeakReference' java.lang.ref.WeakReference\<androidx.constraintlayout.widget.SharedValues$SharedValuesListener\>)])\l type: VIRTUAL call: java.lang.ref.WeakReference.get():java.lang.Object A[MD:():T (c)] (LINE:92)\l0x0033: CHECK_CAST (r5 I:androidx.constraintlayout.widget.SharedValues$SharedValuesListener) = (androidx.constraintlayout.widget.SharedValues$SharedValuesListener) (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0035|0x0035: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('l' androidx.constraintlayout.widget.SharedValues$SharedValuesListener)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x003b  (LINE:93)\l}"];
Node_64 [shape=record,label="{64\:\ 0x003b|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x003b|0x003b: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('needsCleanup' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:96)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0023|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x0023|LOOP_END\lSYNTHETIC\lLOOP:0: B:47:0x0023\-\>B:67:0x0023\l}"];
Node_66 [shape=record,label="{66\:\ 0x0037|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0037|0x0037: INVOKE  \l  (r5 I:androidx.constraintlayout.widget.SharedValues$SharedValuesListener A[D('l' androidx.constraintlayout.widget.SharedValues$SharedValuesListener)])\l  (r8 I:int A[D('key' int)])\l  (r9 I:int A[D('value' int)])\l  (r1 I:int A[D('previousValue' int)])\l type: INTERFACE call: androidx.constraintlayout.widget.SharedValues.SharedValuesListener.onNewValue(int, int, int):void A[MD:(int, int, int):void (m)] (LINE:94)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0023|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x003d|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x003d|0x003d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('needsCleanup' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:?  (LINE:100)\l}"];
Node_55 [shape=record,label="{55\:\ 0x003f|0x003f: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:101)\l0x0041: INVOKE  (r3 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0044: INVOKE  (r4 I:java.util.Iterator) = \l  (r2 I:java.util.HashSet A[D('listeners' java.util.HashSet\<java.lang.ref.WeakReference\<androidx.constraintlayout.widget.SharedValues$SharedValuesListener\>\>)])\l type: VIRTUAL call: java.util.HashSet.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:102)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0048|LOOP_START\lLOOP:1: B:56:0x0048\-\>B:72:0x0048\l|0x0048: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x004c|0x004c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x0060 \l}"];
Node_58 [shape=record,label="{58\:\ 0x004e|0x004e: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0052: CHECK_CAST (r5 I:java.lang.ref.WeakReference) = (java.lang.ref.WeakReference) (r5 I:??[OBJECT, ARRAY]) \l0x0054: INVOKE  (r6 I:java.lang.Object) = \l  (r5 I:java.lang.ref.WeakReference A[D('listenerWeakReference' java.lang.ref.WeakReference\<androidx.constraintlayout.widget.SharedValues$SharedValuesListener\>)])\l type: VIRTUAL call: java.lang.ref.WeakReference.get():java.lang.Object A[MD:():T (c)] (LINE:103)\l0x0058: CHECK_CAST (r6 I:androidx.constraintlayout.widget.SharedValues$SharedValuesListener) = (androidx.constraintlayout.widget.SharedValues$SharedValuesListener) (r6 I:??[OBJECT, ARRAY]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x005a|0x005a: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('listener' androidx.constraintlayout.widget.SharedValues$SharedValuesListener)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:73:0x0048  (LINE:104)\l}"];
Node_70 [shape=record,label="{70\:\ 0x005c|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x005c|0x005c: INVOKE  \l  (r3 I:java.util.List A[D('toRemove' java.util.List\<java.lang.ref.WeakReference\<androidx.constraintlayout.widget.SharedValues$SharedValuesListener\>\>)])\l  (r5 I:java.lang.Object A[D('listenerWeakReference' java.lang.ref.WeakReference\<androidx.constraintlayout.widget.SharedValues$SharedValuesListener\>)])\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:105)\l}"];
Node_74 [shape=record,label="{74\:\ 0x0048|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x0048|LOOP_END\lSYNTHETIC\lLOOP:1: B:56:0x0048\-\>B:72:0x0048\l}"];
Node_73 [shape=record,label="{73\:\ 0x0048|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ 0x0060|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0060|0x0060: INVOKE  \l  (r2 I:java.util.HashSet A[D('listeners' java.util.HashSet\<java.lang.ref.WeakReference\<androidx.constraintlayout.widget.SharedValues$SharedValuesListener\>\>)])\l  (r3 I:java.util.Collection A[D('toRemove' java.util.List\<java.lang.ref.WeakReference\<androidx.constraintlayout.widget.SharedValues$SharedValuesListener\>\>)])\l type: VIRTUAL call: java.util.HashSet.removeAll(java.util.Collection):boolean A[MD:(java.util.Collection\<?\>):boolean (c)] (LINE:108)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0063|RETURN\lORIG_RETURN\l|0x0063: RETURN    (LINE:110)\l}"];
Node_75 [shape=record,label="{75\:\ ?|SYNTHETIC\lRETURN\l|0x0063: RETURN   A[SYNTHETIC] (LINE:110)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.widget.SharedValues.fireNewValue((r7 'this' I:androidx.constraintlayout.widget.SharedValues A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('key' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('value' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:45:0x001e \-\> B:39:?, BACK_EDGE: B:51:0x0037 \-\> B:47:0x0023, BACK_EDGE: B:52:0x003b \-\> B:47:0x0023, BACK_EDGE: B:60:0x005c \-\> B:56:0x0048, BACK_EDGE: B:59:0x005a \-\> B:56:0x0048, CROSS_EDGE: B:63:0x0063 \-\> B:39:?, CROSS_EDGE: B:54:0x003d \-\> B:63:0x0063\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002f\-0x003c: r4 'listenerWeakReference' Ljava\/lang\/ref\/WeakReference;, signature: Ljava\/lang\/ref\/WeakReference\<Landroidx\/constraintlayout\/widget\/SharedValues$SharedValuesListener;\>;\l  0x0035\-0x003c: r5 'l' Landroidx\/constraintlayout\/widget\/SharedValues$SharedValuesListener;\l  0x0054\-0x005f: r5 'listenerWeakReference' Ljava\/lang\/ref\/WeakReference;, signature: Ljava\/lang\/ref\/WeakReference\<Landroidx\/constraintlayout\/widget\/SharedValues$SharedValuesListener;\>;\l  0x005a\-0x005f: r6 'listener' Landroidx\/constraintlayout\/widget\/SharedValues$SharedValuesListener;\l  0x0044\-0x0063: r3 'toRemove' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/lang\/ref\/WeakReference\<Landroidx\/constraintlayout\/widget\/SharedValues$SharedValuesListener;\>;\>;\l  0x0001\-0x0063: r0 'needsCleanup' Z\l  0x0008\-0x0063: r1 'previousValue' I\l  0x001c\-0x0063: r2 'listeners' Ljava\/util\/HashSet;, signature: Ljava\/util\/HashSet\<Ljava\/lang\/ref\/WeakReference\<Landroidx\/constraintlayout\/widget\/SharedValues$SharedValuesListener;\>;\>;\l  \-1 \-0x0063: r8 'key' I\l  \-1 \-0x0063: r9 'value' I\lMETHOD_PARAMETERS: [key, value]\l}"];
MethodNode -> Node_38;Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_39;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_39;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_65;
Node_49 -> Node_50;
Node_50 -> Node_64;
Node_50 -> Node_66[style=dashed];
Node_64 -> Node_52;
Node_52 -> Node_68;
Node_68 -> Node_67;
Node_67 -> Node_47;
Node_66 -> Node_51;
Node_51 -> Node_69;
Node_69 -> Node_67;
Node_65 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_75;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_71;
Node_58 -> Node_59;
Node_59 -> Node_70[style=dashed];
Node_59 -> Node_73;
Node_70 -> Node_60;
Node_60 -> Node_74;
Node_74 -> Node_72;
Node_72 -> Node_56;
Node_73 -> Node_72;
Node_71 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_39;
Node_75 -> Node_39;
}

