digraph "CFG forandroidx.constraintlayout.widget.ConstraintSet.createVerticalChain(IIII[I[FI)V" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY])  (LINE:2640)\l0x0001: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('chainIds' int[])]) \l0x0003: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY] A[D('weights' float[])]) \l0x0005: ARRAY_LENGTH  (r0 I:int) = (r7 I:??[]) \l0x0006: CONST_STR  (r1 I:java.lang.String) =  \"must have 2 or more widgets in a chain\" \l0x0008: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0009|0x0009: IF  (r0 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:49:0x007d \l}"];
Node_31 [shape=record,label="{31\:\ 0x000b|0x000b: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0018  (LINE:2643)\l}"];
Node_32 [shape=record,label="{32\:\ 0x000d|0x000d: ARRAY_LENGTH  (r0 I:int) = (r8 I:??[]) \l0x000e: ARRAY_LENGTH  (r2 I:int) = (r7 I:??[]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0012 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0012|0x0012: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:2644)\l0x0014: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0017|0x0017: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0018|0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2646)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0019|0x0019: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0027 \l}"];
Node_39 [shape=record,label="{39\:\ 0x001b|0x001b: AGET  (r1 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r0 I:??[int, short, byte, char])  (LINE:2647)\l0x001d: INVOKE  (r1 I:androidx.constraintlayout.widget.ConstraintSet$Constraint) = (r12 I:androidx.constraintlayout.widget.ConstraintSet), (r1 I:int) type: DIRECT call: androidx.constraintlayout.widget.ConstraintSet.get(int):androidx.constraintlayout.widget.ConstraintSet$Constraint A[MD:(int):androidx.constraintlayout.widget.ConstraintSet$Constraint (m)]\l0x0021: IGET  (r1 I:androidx.constraintlayout.widget.ConstraintSet$Layout) = (r1 I:androidx.constraintlayout.widget.ConstraintSet$Constraint) androidx.constraintlayout.widget.ConstraintSet.Constraint.layout androidx.constraintlayout.widget.ConstraintSet$Layout \l0x0023: AGET  (r2 I:??[int, float, short, byte, char]) = (r8 I:??[int, float][]), (r0 I:??[int, short, byte, char]) \l0x0025: IPUT  (r2 I:float), (r1 I:androidx.constraintlayout.widget.ConstraintSet$Layout) androidx.constraintlayout.widget.ConstraintSet.Layout.verticalWeight float \l}"];
Node_40 [shape=record,label="{40\:\ 0x0027|0x0027: AGET  (r1 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r0 I:??[int, short, byte, char])  (LINE:2649)\l0x0029: INVOKE  (r1 I:androidx.constraintlayout.widget.ConstraintSet$Constraint) = (r12 I:androidx.constraintlayout.widget.ConstraintSet), (r1 I:int) type: DIRECT call: androidx.constraintlayout.widget.ConstraintSet.get(int):androidx.constraintlayout.widget.ConstraintSet$Constraint A[MD:(int):androidx.constraintlayout.widget.ConstraintSet$Constraint (m)]\l0x002d: IGET  (r1 I:androidx.constraintlayout.widget.ConstraintSet$Layout) = (r1 I:androidx.constraintlayout.widget.ConstraintSet$Constraint) androidx.constraintlayout.widget.ConstraintSet.Constraint.layout androidx.constraintlayout.widget.ConstraintSet$Layout \l0x002f: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('style' int)]) \l0x0031: IPUT  (r9 I:int), (r1 I:androidx.constraintlayout.widget.ConstraintSet$Layout) androidx.constraintlayout.widget.ConstraintSet.Layout.verticalChainStyle int \l0x0033: AGET  (r1 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r0 I:??[int, short, byte, char])  (LINE:2651)\l0x0035: CONST  (r2 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0036: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0037: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY]) \l0x0038: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('topId' int)]) \l0x0039: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('topSide' int)]) \l0x003a: INVOKE  (r0 I:androidx.constraintlayout.widget.ConstraintSet), (r1 I:int), (r2 I:int), (r3 I:int), (r4 I:int), (r5 I:int) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintSet.connect(int, int, int, int, int):void A[MD:(int, int, int, int, int):void (m)]\l0x003d: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:2652)\l0x003e: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x003f|LOOP_START\lLOOP:0: B:41:0x003f\-\>B:46:0x006b\l|0x003f: ARRAY_LENGTH  (r0 I:int) = (r7 I:??[]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0040|0x0040: IF  (r10 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char])  \-\> B:51:0x006e \l}"];
Node_43 [shape=record,label="{43\:\ 0x0042|0x0042: AGET  (r11 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r10 I:??[int, short, byte, char] A[D('i' int)])  (LINE:2653)\l0x0044: AGET  (r1 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r10 I:??[int, short, byte, char] A[D('i' int)])  (LINE:2654)\l0x0046: CONST  (r2 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0047: ARITH  (r0 I:int) = (r10 I:int A[D('i' int)]) + (\-1 int) \l0x0049: AGET  (r3 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r0 I:??[int, short, byte, char]) \l0x004b: CONST  (r4 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x004c: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x004d: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY]) \l0x004e: INVOKE  (r0 I:androidx.constraintlayout.widget.ConstraintSet), (r1 I:int), (r2 I:int), (r3 I:int), (r4 I:int), (r5 I:int) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintSet.connect(int, int, int, int, int):void A[MD:(int, int, int, int, int):void (m)]\l0x0051: ARITH  (r0 I:int) = (r10 I:int A[D('i' int)]) + (\-1 int)  (LINE:2655)\l0x0053: AGET  (r1 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r0 I:??[int, short, byte, char]) \l0x0055: CONST  (r2 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0056: AGET  (r3 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r10 I:??[int, short, byte, char] A[D('i' int)]) \l0x0058: CONST  (r4 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0059: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY]) \l0x005a: INVOKE  (r0 I:androidx.constraintlayout.widget.ConstraintSet), (r1 I:int), (r2 I:int), (r3 I:int), (r4 I:int), (r5 I:int) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintSet.connect(int, int, int, int, int):void A[MD:(int, int, int, int, int):void (m)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x005d|0x005d: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x006b  (LINE:2656)\l}"];
Node_45 [shape=record,label="{45\:\ 0x005f|0x005f: AGET  (r0 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r10 I:??[int, short, byte, char] A[D('i' int)])  (LINE:2657)\l0x0061: INVOKE  (r0 I:androidx.constraintlayout.widget.ConstraintSet$Constraint) = (r12 I:androidx.constraintlayout.widget.ConstraintSet), (r0 I:int) type: DIRECT call: androidx.constraintlayout.widget.ConstraintSet.get(int):androidx.constraintlayout.widget.ConstraintSet$Constraint A[MD:(int):androidx.constraintlayout.widget.ConstraintSet$Constraint (m)]\l0x0065: IGET  (r0 I:androidx.constraintlayout.widget.ConstraintSet$Layout) = (r0 I:androidx.constraintlayout.widget.ConstraintSet$Constraint) androidx.constraintlayout.widget.ConstraintSet.Constraint.layout androidx.constraintlayout.widget.ConstraintSet$Layout \l0x0067: AGET  (r1 I:??[int, float, short, byte, char]) = (r8 I:??[int, float][]), (r10 I:??[int, short, byte, char] A[D('i' int)]) \l0x0069: IPUT  (r1 I:float), (r0 I:androidx.constraintlayout.widget.ConstraintSet$Layout) androidx.constraintlayout.widget.ConstraintSet.Layout.verticalWeight float \l}"];
Node_52 [shape=record,label="{52\:\ 0x006b|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x006b|LOOP_END\lLOOP:0: B:41:0x003f\-\>B:46:0x006b\l|0x006b: ARITH  (r10 I:int) = (r10 I:int A[D('i' int)]) + (1 int)  (LINE:2652)\l}"];
Node_53 [shape=record,label="{53\:\ 0x006b|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x006e|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x006e|0x006e: ARRAY_LENGTH  (r0 I:int) = (r7 I:??[])  (LINE:2660)\l0x006f: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l0x0071: AGET  (r1 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r0 I:??[int, short, byte, char]) \l0x0073: CONST  (r2 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0074: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0075: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY]) \l0x0076: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bottomId' int)]) \l0x0077: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bottomSide' int)]) \l0x0079: INVOKE  (r0 I:androidx.constraintlayout.widget.ConstraintSet), (r1 I:int), (r2 I:int), (r3 I:int), (r4 I:int), (r5 I:int) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintSet.connect(int, int, int, int, int):void A[MD:(int, int, int, int, int):void (m)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x007c|RETURN\l|0x007c: RETURN    (LINE:2661)\l}"];
Node_49 [shape=record,label="{49\:\ 0x007d|0x007d: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('style' int)])  (LINE:2641)\l0x007f: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0081: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_50 [shape=record,label="{50\:\ 0x0084|0x0084: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.widget.ConstraintSet.createVerticalChain((r12 'this' I:androidx.constraintlayout.widget.ConstraintSet A[IMMUTABLE_TYPE, THIS]), (r13 I:int A[D('topId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('topSide' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[D('bottomId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:int A[D('bottomSide' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int[] A[D('chainIds' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:float[] A[D('weights' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:46:0x006b \-\> B:41:0x003f, CROSS_EDGE: B:44:0x005d \-\> B:46:0x006b, CROSS_EDGE: B:48:0x007c \-\> B:28:?, CROSS_EDGE: B:38:0x0019 \-\> B:40:0x0027, CROSS_EDGE: B:31:0x000b \-\> B:37:0x0018, CROSS_EDGE: B:50:0x0084 \-\> B:28:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0044\-0x006b: r11 'chainId' I\l  0x003f\-0x006e: r10 'i' I\l  \-1 \-0x0084: r13 'topId' I\l  \-1 \-0x0084: r14 'topSide' I\l  \-1 \-0x0084: r15 'bottomId' I\l  \-1 \-0x0084: r16 'bottomSide' I\l  \-1 \-0x0084: r17 'chainIds' [I\l  \-1 \-0x0084: r18 'weights' [F\l  \-1 \-0x0084: r19 'style' I\lMETHOD_PARAMETERS: [topId, topSide, bottomId, bottomSide, chainIds, weights, style]\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_49;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_37;
Node_32 -> Node_33;
Node_33 -> Node_35;
Node_33 -> Node_37[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_28;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_51;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_53;
Node_45 -> Node_52;
Node_52 -> Node_46;
Node_46 -> Node_41;
Node_53 -> Node_46;
Node_51 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_28;
Node_49 -> Node_50;
Node_50 -> Node_28;
}

