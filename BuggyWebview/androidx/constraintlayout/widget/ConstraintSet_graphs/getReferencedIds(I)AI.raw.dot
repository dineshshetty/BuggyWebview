digraph "CFG forandroidx.constraintlayout.widget.ConstraintSet.getReferencedIds(I)[I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:androidx.constraintlayout.widget.ConstraintSet$Constraint) = (r3 I:androidx.constraintlayout.widget.ConstraintSet), (r4 I:int A[D('id' int)]) type: DIRECT call: androidx.constraintlayout.widget.ConstraintSet.get(int):androidx.constraintlayout.widget.ConstraintSet$Constraint A[MD:(int):androidx.constraintlayout.widget.ConstraintSet$Constraint (m)] (LINE:3911)\l0x0004: IGET  (r1 I:androidx.constraintlayout.widget.ConstraintSet$Layout) = \l  (r0 I:androidx.constraintlayout.widget.ConstraintSet$Constraint A[D('constraint' androidx.constraintlayout.widget.ConstraintSet$Constraint)])\l androidx.constraintlayout.widget.ConstraintSet.Constraint.layout androidx.constraintlayout.widget.ConstraintSet$Layout  (LINE:3912)\l0x0006: IGET  (r1 I:int[]) = (r1 I:androidx.constraintlayout.widget.ConstraintSet$Layout) androidx.constraintlayout.widget.ConstraintSet.Layout.mReferenceIds int[] \l}"];
Node_11 [shape=record,label="{11\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x000e \l}"];
Node_12 [shape=record,label="{12\:\ 0x000a|0x000a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3913)\l0x000b: NEW_ARRAY  (r1 I:int[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: int[] \l}"];
Node_13 [shape=record,label="{13\:\ 0x000d|RETURN\l|0x000d: RETURN  (r1 I:int[]) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000e|0x000e: IGET  (r1 I:androidx.constraintlayout.widget.ConstraintSet$Layout) = \l  (r0 I:androidx.constraintlayout.widget.ConstraintSet$Constraint A[D('constraint' androidx.constraintlayout.widget.ConstraintSet$Constraint)])\l androidx.constraintlayout.widget.ConstraintSet.Constraint.layout androidx.constraintlayout.widget.ConstraintSet$Layout  (LINE:3915)\l0x0010: IGET  (r1 I:int[]) = (r1 I:androidx.constraintlayout.widget.ConstraintSet$Layout) androidx.constraintlayout.widget.ConstraintSet.Layout.mReferenceIds int[] \l0x0012: IGET  (r2 I:androidx.constraintlayout.widget.ConstraintSet$Layout) = \l  (r0 I:androidx.constraintlayout.widget.ConstraintSet$Constraint A[D('constraint' androidx.constraintlayout.widget.ConstraintSet$Constraint)])\l androidx.constraintlayout.widget.ConstraintSet.Constraint.layout androidx.constraintlayout.widget.ConstraintSet$Layout \l0x0014: IGET  (r2 I:int[]) = (r2 I:androidx.constraintlayout.widget.ConstraintSet$Layout) androidx.constraintlayout.widget.ConstraintSet.Layout.mReferenceIds int[] \l0x0016: ARRAY_LENGTH  (r2 I:int) = (r2 I:??[]) \l0x0017: INVOKE  (r1 I:int[]) = (r1 I:int[]), (r2 I:int) type: STATIC call: java.util.Arrays.copyOf(int[], int):int[] A[MD:(int[], int):int[] (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001b|RETURN\l|0x001b: RETURN  (r1 I:int[]) \l}"];
MethodNode[shape=record,label="{public int[] androidx.constraintlayout.widget.ConstraintSet.getReferencedIds((r3 'this' I:androidx.constraintlayout.widget.ConstraintSet A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x001b \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x001b: r0 'constraint' Landroidx\/constraintlayout\/widget\/ConstraintSet$Constraint;\l  \-1 \-0x001b: r4 'id' I\lMETHOD_PARAMETERS: [id]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

