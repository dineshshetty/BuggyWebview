digraph "CFG forandroidx.constraintlayout.widget.ConstraintSet.clone(Landroidx\/constraintlayout\/widget\/Constraints;)V" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r9 I:androidx.constraintlayout.widget.Constraints A[D('constraints' androidx.constraintlayout.widget.Constraints)]) type: VIRTUAL call: androidx.constraintlayout.widget.Constraints.getChildCount():int A[MD:():int (c)] (LINE:2254)\l0x0004: IGET  (r1 I:java.util.HashMap\<java.lang.Integer, androidx.constraintlayout.widget.ConstraintSet$Constraint\>) = (r8 I:androidx.constraintlayout.widget.ConstraintSet) androidx.constraintlayout.widget.ConstraintSet.mConstraints java.util.HashMap  (LINE:2255)\l0x0006: INVOKE  (r1 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.clear():void A[MD:():void (c)]\l0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2256)\l}"];
Node_30 [shape=record,label="{30\:\ 0x000a|LOOP_START\lLOOP:0: B:30:0x000a\-\>B:48:0x0060\l|0x000a: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:50:0x0063 \l}"];
Node_31 [shape=record,label="{31\:\ 0x000c|0x000c: INVOKE  (r2 I:android.view.View) = \l  (r9 I:androidx.constraintlayout.widget.Constraints A[D('constraints' androidx.constraintlayout.widget.Constraints)])\l  (r1 I:int A[D('i' int)])\l type: VIRTUAL call: androidx.constraintlayout.widget.Constraints.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:2257)\l0x0010: INVOKE  (r3 I:android.view.ViewGroup$LayoutParams) = (r2 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:2258)\l0x0014: CHECK_CAST (r3 I:androidx.constraintlayout.widget.Constraints$LayoutParams) = (androidx.constraintlayout.widget.Constraints$LayoutParams) (r3 I:??[OBJECT, ARRAY]) \l0x0016: INVOKE  (r4 I:int) = (r2 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getId():int A[MD:():int (c)] (LINE:2260)\l0x001a: IGET  (r5 I:boolean) = (r8 I:androidx.constraintlayout.widget.ConstraintSet) androidx.constraintlayout.widget.ConstraintSet.mForceId boolean  (LINE:2261)\l}"];
Node_32 [shape=record,label="{32\:\ 0x001c|0x001c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x002a \l}"];
Node_33 [shape=record,label="{33\:\ 0x001e|0x001e: CONST  (r5 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x001f|0x001f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('id' int)]) == (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0022 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0022|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0022|0x0022: NEW_INSTANCE  (r5 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:2262)\l0x0024: CONST_STR  (r6 I:java.lang.String) =  \"All children of ConstraintLayout must have ids to use ConstraintSet\" \l0x0026: INVOKE  (r5 I:java.lang.RuntimeException), (r6 I:java.lang.String) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0029|0x0029: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x002a|0x002a: IGET  (r5 I:java.util.HashMap\<java.lang.Integer, androidx.constraintlayout.widget.ConstraintSet$Constraint\>) = (r8 I:androidx.constraintlayout.widget.ConstraintSet) androidx.constraintlayout.widget.ConstraintSet.mConstraints java.util.HashMap  (LINE:2264)\l0x002c: INVOKE  (r6 I:java.lang.Integer) = (r4 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0030: INVOKE  (r5 I:boolean) = (r5 I:java.util.HashMap), (r6 I:java.lang.Object) type: VIRTUAL call: java.util.HashMap.containsKey(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0034|0x0034: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0044 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0036|0x0036: IGET  (r5 I:java.util.HashMap\<java.lang.Integer, androidx.constraintlayout.widget.ConstraintSet$Constraint\>) = (r8 I:androidx.constraintlayout.widget.ConstraintSet) androidx.constraintlayout.widget.ConstraintSet.mConstraints java.util.HashMap  (LINE:2265)\l0x0038: INVOKE  (r6 I:java.lang.Integer) = (r4 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x003c: NEW_INSTANCE  (r7 I:androidx.constraintlayout.widget.ConstraintSet$Constraint) =  androidx.constraintlayout.widget.ConstraintSet$Constraint \l0x003e: INVOKE  (r7 I:androidx.constraintlayout.widget.ConstraintSet$Constraint) type: DIRECT call: androidx.constraintlayout.widget.ConstraintSet.Constraint.\<init\>():void A[MD:():void (m)]\l0x0041: INVOKE  (r5 I:java.util.HashMap), (r6 I:java.lang.Object), (r7 I:java.lang.Object) type: VIRTUAL call: java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0044|0x0044: IGET  (r5 I:java.util.HashMap\<java.lang.Integer, androidx.constraintlayout.widget.ConstraintSet$Constraint\>) = (r8 I:androidx.constraintlayout.widget.ConstraintSet) androidx.constraintlayout.widget.ConstraintSet.mConstraints java.util.HashMap  (LINE:2267)\l0x0046: INVOKE  (r6 I:java.lang.Integer) = (r4 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x004a: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.util.HashMap), (r6 I:java.lang.Object) type: VIRTUAL call: java.util.HashMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x004e: CHECK_CAST (r5 I:androidx.constraintlayout.widget.ConstraintSet$Constraint) = (androidx.constraintlayout.widget.ConstraintSet$Constraint) (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0050|0x0050: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('constraint' androidx.constraintlayout.widget.ConstraintSet$Constraint)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0053  (LINE:2268)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0053|0x0053: INSTANCE_OF  (r6 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('view' android.view.View)]) androidx.constraintlayout.widget.ConstraintHelper  (LINE:2271)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0055|0x0055: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x005d \l}"];
Node_46 [shape=record,label="{46\:\ 0x0057|0x0057: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('view' android.view.View)])  (LINE:2272)\l0x0058: CHECK_CAST (r6 I:androidx.constraintlayout.widget.ConstraintHelper) = (androidx.constraintlayout.widget.ConstraintHelper) (r6 I:??[OBJECT, ARRAY]) \l0x005a: INVOKE  \l  (r5 I:androidx.constraintlayout.widget.ConstraintSet$Constraint A[D('constraint' androidx.constraintlayout.widget.ConstraintSet$Constraint)])\l  (r6 I:androidx.constraintlayout.widget.ConstraintHelper A[D('helper' androidx.constraintlayout.widget.ConstraintHelper)])\l  (r4 I:int A[D('id' int)])\l  (r3 I:androidx.constraintlayout.widget.Constraints$LayoutParams A[D('param' androidx.constraintlayout.widget.Constraints$LayoutParams)])\l type: STATIC call: androidx.constraintlayout.widget.ConstraintSet.Constraint.access$700(androidx.constraintlayout.widget.ConstraintSet$Constraint, androidx.constraintlayout.widget.ConstraintHelper, int, androidx.constraintlayout.widget.Constraints$LayoutParams):void A[MD:(androidx.constraintlayout.widget.ConstraintSet$Constraint, androidx.constraintlayout.widget.ConstraintHelper, int, androidx.constraintlayout.widget.Constraints$LayoutParams):void (m)] (LINE:2273)\l}"];
Node_47 [shape=record,label="{47\:\ 0x005d|0x005d: INVOKE  \l  (r5 I:androidx.constraintlayout.widget.ConstraintSet$Constraint A[D('constraint' androidx.constraintlayout.widget.ConstraintSet$Constraint)])\l  (r4 I:int A[D('id' int)])\l  (r3 I:androidx.constraintlayout.widget.Constraints$LayoutParams A[D('param' androidx.constraintlayout.widget.Constraints$LayoutParams)])\l type: STATIC call: androidx.constraintlayout.widget.ConstraintSet.Constraint.access$800(androidx.constraintlayout.widget.ConstraintSet$Constraint, int, androidx.constraintlayout.widget.Constraints$LayoutParams):void A[MD:(androidx.constraintlayout.widget.ConstraintSet$Constraint, int, androidx.constraintlayout.widget.Constraints$LayoutParams):void (m)] (LINE:2275)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0060|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0060|LOOP_END\lLOOP:0: B:30:0x000a\-\>B:48:0x0060\l|0x0060: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:2256)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0060|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0063|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0063|RETURN\l|0x0063: RETURN    (LINE:2277)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.widget.ConstraintSet.clone((r8 'this' I:androidx.constraintlayout.widget.ConstraintSet A[IMMUTABLE_TYPE, THIS]), (r9 I:androidx.constraintlayout.widget.Constraints A[D('constraints' androidx.constraintlayout.widget.Constraints), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:48:0x0060 \-\> B:30:0x000a, CROSS_EDGE: B:45:0x0055 \-\> B:47:0x005d, CROSS_EDGE: B:42:0x0050 \-\> B:48:0x0060, CROSS_EDGE: B:39:0x0034 \-\> B:41:0x0044, CROSS_EDGE: B:32:0x001c \-\> B:38:0x002a, CROSS_EDGE: B:49:0x0063 \-\> B:28:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x005a\-0x005d: r6 'helper' Landroidx\/constraintlayout\/widget\/ConstraintHelper;\l  0x0010\-0x0060: r2 'view' Landroid\/view\/View;\l  0x0016\-0x0060: r3 'param' Landroidx\/constraintlayout\/widget\/Constraints$LayoutParams;\l  0x001a\-0x0060: r4 'id' I\l  0x0050\-0x0060: r5 'constraint' Landroidx\/constraintlayout\/widget\/ConstraintSet$Constraint;\l  0x000a\-0x0063: r1 'i' I\l  0x0004\-0x0063: r0 'count' I\l  \-1 \-0x0063: r9 'constraints' Landroidx\/constraintlayout\/widget\/Constraints;\lMETHOD_PARAMETERS: [constraints]\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_50;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_38;
Node_33 -> Node_34;
Node_34 -> Node_38[style=dashed];
Node_34 -> Node_51;
Node_51 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_28;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_44;
Node_42 -> Node_53[style=dashed];
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_52;
Node_52 -> Node_48;
Node_48 -> Node_30;
Node_53 -> Node_48;
Node_50 -> Node_49;
Node_49 -> Node_28;
}

