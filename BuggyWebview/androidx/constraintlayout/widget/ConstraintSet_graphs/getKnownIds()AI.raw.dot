digraph "CFG forandroidx.constraintlayout.widget.ConstraintSet.getKnownIds()[I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:java.util.HashMap\<java.lang.Integer, androidx.constraintlayout.widget.ConstraintSet$Constraint\>) = (r4 I:androidx.constraintlayout.widget.ConstraintSet) androidx.constraintlayout.widget.ConstraintSet.mConstraints java.util.HashMap  (LINE:5304)\l0x0002: INVOKE  (r0 I:java.util.Set) = (r0 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.keySet():java.util.Set A[MD:():java.util.Set\<K\> (c)]\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: NEW_ARRAY  (r1 I:java.lang.Integer[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Integer[] \l0x0009: INVOKE  (r0 I:java.lang.Object[]) = (r0 I:java.util.Set), (r1 I:java.lang.Object[]) type: INTERFACE call: java.util.Set.toArray(java.lang.Object[]):java.lang.Object[] A[MD:\<T\>:(T[]):T[] (c)]\l0x000d: CHECK_CAST (r0 I:java.lang.Integer[]) = (java.lang.Integer[]) (r0 I:??[OBJECT, ARRAY]) \l0x000f: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[] A[D('arr' java.lang.Integer[])])  (LINE:5305)\l0x0010: NEW_ARRAY  (r1 I:int[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0012: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:5306)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|LOOP_START\lLOOP:0: B:11:0x0013\-\>B:13:0x0016\l|0x0013: ARRAY_LENGTH  (r3 I:int) = (r1 I:??[] A[D('array' int[])]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0014|0x0014: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:15:0x0021 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0016|LOOP_END\lLOOP:0: B:11:0x0013\-\>B:13:0x0016\l|0x0016: AGET  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('arr' java.lang.Integer[])]), (r2 I:??[int, short, byte, char] A[D('i' int)])  (LINE:5307)\l0x0018: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x001c: APUT  \l  (r1 I:??[int, float][] A[D('array' int[])])\l  (r2 I:??[int, short, byte, char] A[D('i' int)])\l  (r3 I:??[int, float, short, byte, char])\l \l0x001e: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:5306)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0021|RETURN\l|0x0021: RETURN  (r1 I:int[] A[D('array' int[])])  (LINE:5309)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int[] androidx.constraintlayout.widget.ConstraintSet.getKnownIds((r4 'this' I:androidx.constraintlayout.widget.ConstraintSet A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x0016 \-\> B:11:0x0013\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0021: r2 'i' I\l  0x000f\-0x0021: r0 'arr' [Ljava\/lang\/Integer;\l  0x0012\-0x0021: r1 'array' [I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_11;
Node_15 -> Node_14;
Node_14 -> Node_9;
}

