digraph "CFG forandroidx.constraintlayout.widget.ConstraintSet.clone(Landroidx\/constraintlayout\/widget\/ConstraintSet;)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: IGET  (r0 I:java.util.HashMap\<java.lang.Integer, androidx.constraintlayout.widget.ConstraintSet$Constraint\>) = (r5 I:androidx.constraintlayout.widget.ConstraintSet) androidx.constraintlayout.widget.ConstraintSet.mConstraints java.util.HashMap  (LINE:2177)\l0x0002: INVOKE  (r0 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.clear():void A[MD:():void (c)]\l0x0005: IGET  (r0 I:java.util.HashMap\<java.lang.Integer, androidx.constraintlayout.widget.ConstraintSet$Constraint\>) = (r6 I:androidx.constraintlayout.widget.ConstraintSet A[D('set' androidx.constraintlayout.widget.ConstraintSet)]) androidx.constraintlayout.widget.ConstraintSet.mConstraints java.util.HashMap  (LINE:2178)\l0x0007: INVOKE  (r0 I:java.util.Set) = (r0 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.keySet():java.util.Set A[MD:():java.util.Set\<K\> (c)]\l0x000b: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|LOOP_START\lLOOP:0: B:18:0x000f\-\>B:27:0x000f\l|0x000f: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|0x0013: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0030 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0015|0x0015: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0019: CHECK_CAST (r1 I:java.lang.Integer) = (java.lang.Integer) (r1 I:??[OBJECT, ARRAY]) \l0x001b: IGET  (r2 I:java.util.HashMap\<java.lang.Integer, androidx.constraintlayout.widget.ConstraintSet$Constraint\>) = (r6 I:androidx.constraintlayout.widget.ConstraintSet A[D('set' androidx.constraintlayout.widget.ConstraintSet)]) androidx.constraintlayout.widget.ConstraintSet.mConstraints java.util.HashMap  (LINE:2179)\l0x001d: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.HashMap), (r1 I:java.lang.Object A[D('key' java.lang.Integer)]) type: VIRTUAL call: java.util.HashMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0021: CHECK_CAST (r2 I:androidx.constraintlayout.widget.ConstraintSet$Constraint) = (androidx.constraintlayout.widget.ConstraintSet$Constraint) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0023|0x0023: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('constraint' androidx.constraintlayout.widget.ConstraintSet$Constraint)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0026  (LINE:2180)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0026|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|0x0026: IGET  (r3 I:java.util.HashMap\<java.lang.Integer, androidx.constraintlayout.widget.ConstraintSet$Constraint\>) = (r5 I:androidx.constraintlayout.widget.ConstraintSet) androidx.constraintlayout.widget.ConstraintSet.mConstraints java.util.HashMap  (LINE:2183)\l0x0028: INVOKE  (r4 I:androidx.constraintlayout.widget.ConstraintSet$Constraint) = \l  (r2 I:androidx.constraintlayout.widget.ConstraintSet$Constraint A[D('constraint' androidx.constraintlayout.widget.ConstraintSet$Constraint)])\l type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintSet.Constraint.clone():androidx.constraintlayout.widget.ConstraintSet$Constraint A[MD:():androidx.constraintlayout.widget.ConstraintSet$Constraint (m)]\l0x002c: INVOKE  (r3 I:java.util.HashMap), (r1 I:java.lang.Object A[D('key' java.lang.Integer)]), (r4 I:java.lang.Object) type: VIRTUAL call: java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x000f|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|LOOP_END\lSYNTHETIC\lLOOP:0: B:18:0x000f\-\>B:27:0x000f\l}"];
Node_28 [shape=record,label="{28\:\ 0x000f|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0030|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0030|RETURN\l|0x0030: RETURN    (LINE:2185)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.widget.ConstraintSet.clone((r5 'this' I:androidx.constraintlayout.widget.ConstraintSet A[IMMUTABLE_TYPE, THIS]), (r6 I:androidx.constraintlayout.widget.ConstraintSet A[D('set' androidx.constraintlayout.widget.ConstraintSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x0026 \-\> B:18:0x000f, BACK_EDGE: B:21:0x0023 \-\> B:18:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x002f: r1 'key' Ljava\/lang\/Integer;\l  0x0023\-0x002f: r2 'constraint' Landroidx\/constraintlayout\/widget\/ConstraintSet$Constraint;\l  \-1 \-0x0030: r6 'set' Landroidx\/constraintlayout\/widget\/ConstraintSet;\lMETHOD_PARAMETERS: [set]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_26;
Node_20 -> Node_21;
Node_21 -> Node_25;
Node_21 -> Node_28[style=dashed];
Node_25 -> Node_23;
Node_23 -> Node_29;
Node_29 -> Node_27;
Node_27 -> Node_18;
Node_28 -> Node_27;
Node_26 -> Node_24;
Node_24 -> Node_16;
}

