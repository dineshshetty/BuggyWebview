digraph "CFG forandroidx.constraintlayout.widget.ConstraintSet.WriteJsonEngine.getName(I)Ljava\/lang\/String;" {
subgraph cluster_Region_521144128 {
label = "R(1:(2:3|4)(1:(1:7)(2:8|9)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_6207230 {
label = "IF [B:14:0x000c] THEN: R(2:3|4) ELSE: R(1:(1:7)(2:8|9))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x000c|if (r4.idMap.containsKey(java.lang.Integer.valueOf(r5)) != false) goto L3\l}"];
subgraph cluster_Region_809009848 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x000e}"];
Node_16 [shape=record,label="{16\:\ 0x002c|RETURN\l|return \"'\" + r4.idMap.get(java.lang.Integer.valueOf(r5)) + \"'\"\l}"];
}
subgraph cluster_Region_744600368 {
label = "R(1:(1:7)(2:8|9)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_861178875 {
label = "IF [B:17:0x002d] THEN: R(1:7) ELSE: R(2:8|9) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x002d|if (r5 == 0) goto L7\l}"];
subgraph cluster_Region_1179136553 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x002f|RETURN\l|return \"'parent'\"\l}"];
}
subgraph cluster_Region_1106322078 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0032|java.lang.String java.lang.String r0 = lookup(r5)\lr4.idMap.put(java.lang.Integer.valueOf(r5), r0)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|RETURN\l|return \"'\" + r0 + \"'\"\l}"];
}
}
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0000}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{java.lang.String androidx.constraintlayout.widget.ConstraintSet.WriteJsonEngine.getName((r4v0 'this' androidx.constraintlayout.widget.ConstraintSet$WriteJsonEngine A[IMMUTABLE_TYPE, THIS]), (r5v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0031 \-\> B:12:?, CROSS_EDGE: B:21:0x0051 \-\> B:12:?\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [id]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_14 -> Node_15;
Node_14 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_17 -> Node_18;
Node_17 -> Node_20[style=dashed];
Node_18 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_11 -> Node_13;
Node_13 -> Node_14;
}

