digraph "CFG forandroidx.constraintlayout.widget.ConstraintSet.WriteJsonEngine.getName(I)Ljava\/lang\/String;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:java.util.HashMap\<java.lang.Integer, java.lang.String\>) = (r4 I:androidx.constraintlayout.widget.ConstraintSet$WriteJsonEngine) androidx.constraintlayout.widget.ConstraintSet.WriteJsonEngine.idMap java.util.HashMap  (LINE:5810)\l0x0002: INVOKE  (r1 I:java.lang.Integer) = (r5 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0006: INVOKE  (r0 I:boolean) = (r0 I:java.util.HashMap), (r1 I:java.lang.Object) type: VIRTUAL call: java.util.HashMap.containsKey(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l0x000a: CONST_STR  (r1 I:java.lang.String) =  \"'\" \l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x002d \l}"];
Node_15 [shape=record,label="{15\:\ 0x000e|0x000e: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:5811)\l0x0010: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0013: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0016: IGET  (r2 I:java.util.HashMap\<java.lang.Integer, java.lang.String\>) = (r4 I:androidx.constraintlayout.widget.ConstraintSet$WriteJsonEngine) androidx.constraintlayout.widget.ConstraintSet.WriteJsonEngine.idMap java.util.HashMap \l0x0018: INVOKE  (r3 I:java.lang.Integer) = (r5 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x001c: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.HashMap), (r3 I:java.lang.Object) type: VIRTUAL call: java.util.HashMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0020: CHECK_CAST (r2 I:java.lang.String) = (java.lang.String) (r2 I:??[OBJECT, ARRAY]) \l0x0022: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0025: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0028: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x002c|RETURN\l|0x002c: RETURN  (r0 I:java.lang.String) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x002d|0x002d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('id' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0032  (LINE:5813)\l}"];
Node_18 [shape=record,label="{18\:\ 0x002f|RETURN\l|0x002f: CONST_STR  (r0 I:java.lang.String) =  \"'parent'\"  (LINE:5814)\l0x0031: RETURN  (r0 I:java.lang.String) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0032|0x0032: INVOKE  (r0 I:java.lang.String) = (r4 I:androidx.constraintlayout.widget.ConstraintSet$WriteJsonEngine), (r5 I:int A[D('id' int)]) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintSet.WriteJsonEngine.lookup(int):java.lang.String A[MD:(int):java.lang.String (m)] (LINE:5816)\l0x0036: IGET  (r2 I:java.util.HashMap\<java.lang.Integer, java.lang.String\>) = (r4 I:androidx.constraintlayout.widget.ConstraintSet$WriteJsonEngine) androidx.constraintlayout.widget.ConstraintSet.WriteJsonEngine.idMap java.util.HashMap  (LINE:5817)\l0x0038: INVOKE  (r3 I:java.lang.Integer) = (r5 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x003c: INVOKE  (r2 I:java.util.HashMap), (r3 I:java.lang.Object), (r0 I:java.lang.Object A[D('name' java.lang.String)]) type: VIRTUAL call: java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l0x003f: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:5818)\l0x0041: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0044: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0047: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String A[D('name' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004a: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004d: INVOKE  (r1 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|RETURN\l|0x0051: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{java.lang.String androidx.constraintlayout.widget.ConstraintSet.WriteJsonEngine.getName((r4 'this' I:androidx.constraintlayout.widget.ConstraintSet$WriteJsonEngine A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0031 \-\> B:12:?, CROSS_EDGE: B:21:0x0051 \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0036\-0x0051: r0 'name' Ljava\/lang\/String;\l  \-1 \-0x0051: r5 'id' I\lMETHOD_PARAMETERS: [id]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

