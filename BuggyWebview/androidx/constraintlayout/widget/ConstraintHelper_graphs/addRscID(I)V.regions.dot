digraph "CFG forandroidx.constraintlayout.widget.ConstraintHelper.addRscID(I)V" {
subgraph cluster_Region_347179034 {
label = "R(1:(2:(1:3)|(3:5|(1:7)|8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1090572863 {
label = "R(2:(1:3)|(3:5|(1:7)|8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1238533393 {
label = "IF [B:13:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0004|if (r4 == getId()) goto L3\l}"];
subgraph cluster_Region_377830146 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0006|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_631514784 {
label = "R(3:5|(1:7)|8)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0007|int int r0 = r3.mCount + 1\lint[] int[] r1 = r3.mIds\l}"];
subgraph cluster_IfRegion_1914203596 {
label = "IF [B:16:0x000e] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x000e|if (r0 \> r1.length) goto L7\l}"];
subgraph cluster_Region_142960770 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0010|r3.mIds = java.util.Arrays.copyOf(r1, r1.length * 2)\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x0019|int[] int[] r0 = r3.mIds\lint int r1 = r3.mCount\lr0[r1] = r4\lr3.mCount = r1 + 1\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0023}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.widget.ConstraintHelper.addRscID((r3v0 'this' androidx.constraintlayout.widget.ConstraintHelper A[IMMUTABLE_TYPE, THIS]), (r4v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0023 \-\> B:11:?, CROSS_EDGE: B:16:0x000e \-\> B:18:0x0019\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [id]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_19 -> Node_11;
}

