digraph "CFG forandroidx.constraintlayout.widget.ConstraintAttribute.getValuesToInterpolate([F)V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000}"];
Node_25 [shape=record,label="{25\:\ 0x000b|switch(r13.mType) \{\l    case 2: goto L14;\l    case 3: goto L12;\l    case 4: goto L10;\l    case 5: goto L10;\l    case 6: goto L8;\l    case 7: goto L6;\l    case 8: goto L3;\l    default: goto L20;\l\}\l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|r14[0] = r13.mFloatValue\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0014|r14[0] = r13.mFloatValue\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ 0x0019|r14[0] = (float) r13.mIntegerValue\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ 0x001f|int r0 = r13.mColorValue\lr2 = (r0 \>\> 24) & 255\lr3 = (r0 \>\> 16) & 255\lr4 = (r0 \>\> 8) & 255\lr0 = r0 & 255\lfloat r5 = (float) java.lang.Math.pow((double) (((float) r3) \/ 255.0f), 2.2d)\lfloat r7 = (float) java.lang.Math.pow((double) (((float) r4) \/ 255.0f), 2.2d)\lfloat r8 = (float) java.lang.Math.pow((double) (((float) r0) \/ 255.0f), 2.2d)\lr14[0] = r5\lr14[1] = r7\lr14[2] = r8\lr14[3] = ((float) r2) \/ 255.0f\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ 0x005c}"];
Node_32 [shape=record,label="{32\:\ 0x0063|throw new java.lang.RuntimeException(\"Color does not have a single color to interpolate\")\l}"];
Node_33 [shape=record,label="{33\:\ 0x0064}"];
Node_34 [shape=record,label="{34\:\ 0x0066|if (r13.mBooleanValue == false) goto L19\l}"];
Node_35 [shape=record,label="{35\:\ 0x0068|r0 = 1.0f\l}"];
Node_37 [shape=record,label="{37\:\ 0x006c|PHI: r0 \l  PHI: (r0v4 float) = (r0v3 float), (r0v5 float) binds: [B:36:0x006b, B:35:0x0068] A[DONT_GENERATE, DONT_INLINE]\l|r14[0] = r0\l}"];
Node_38 [shape=record,label="{38\:\ 0x006f|RETURN\lORIG_RETURN\l|return\l}"];
Node_36 [shape=record,label="{36\:\ 0x006b|r0 = 0.0f\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.widget.ConstraintAttribute.getValuesToInterpolate((r13v0 'this' androidx.constraintlayout.widget.ConstraintAttribute A[IMMUTABLE_TYPE, THIS]), (r14v0 'ret' float[] A[D('ret' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0014 \-\> B:38:0x006f, CROSS_EDGE: B:29:0x0019 \-\> B:38:0x006f, CROSS_EDGE: B:30:0x001f \-\> B:38:0x006f, CROSS_EDGE: B:32:0x0063 \-\> B:23:?, CROSS_EDGE: B:37:0x006c \-\> B:38:0x006f, CROSS_EDGE: B:36:0x006b \-\> B:37:0x006c, CROSS_EDGE: B:25:0x000b \-\> B:38:0x006f\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [ret]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_28;
Node_25 -> Node_29;
Node_25 -> Node_30;
Node_25 -> Node_31;
Node_25 -> Node_33;
Node_25 -> Node_43;
Node_27 -> Node_39;
Node_39 -> Node_23;
Node_28 -> Node_40;
Node_40 -> Node_23;
Node_29 -> Node_41;
Node_41 -> Node_23;
Node_30 -> Node_42;
Node_42 -> Node_23;
Node_31 -> Node_32;
Node_32 -> Node_23;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_23;
Node_36 -> Node_37;
Node_43 -> Node_23;
}

