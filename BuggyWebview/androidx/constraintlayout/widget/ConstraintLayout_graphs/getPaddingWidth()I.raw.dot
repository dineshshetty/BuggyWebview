digraph "CFG forandroidx.constraintlayout.widget.ConstraintLayout.getPaddingWidth()I" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r5 I:androidx.constraintlayout.widget.ConstraintLayout) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintLayout.getPaddingLeft():int A[MD:():int (s)] (LINE:1734)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: INVOKE  (r0 I:int) = (r1 I:int), (r0 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0009: INVOKE  (r2 I:int) = (r5 I:androidx.constraintlayout.widget.ConstraintLayout) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintLayout.getPaddingRight():int A[MD:():int (s)]\l0x000d: INVOKE  (r2 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0011: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l0x0012: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1735)\l0x0013: SGET  (r3 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:1737)\l0x0015: CONST  (r4 I:??[int, float, short, byte, char]) = (17 ??[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|0x0017: IF  (r3 I:??[int, byte, short, char]) \< (r4 I:??[int, byte, short, char])  \-\> B:14:0x002b \l}"];
Node_13 [shape=record,label="{13\:\ 0x0019|0x0019: INVOKE  (r3 I:int) = (r5 I:androidx.constraintlayout.widget.ConstraintLayout) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintLayout.getPaddingStart():int A[MD:():int (s)] (LINE:1738)\l0x001d: INVOKE  (r3 I:int) = (r1 I:int), (r3 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0021: INVOKE  (r4 I:int) = (r5 I:androidx.constraintlayout.widget.ConstraintLayout) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintLayout.getPaddingEnd():int A[MD:():int (s)]\l0x0025: INVOKE  (r1 I:int) = (r1 I:int), (r4 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0029: ARITH  (r2 I:int A[D('rtlPadding' int)]) = (r3 I:int) + (r1 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|0x002b: IF  (r2 I:??[int, byte, short, char] A[D('rtlPadding' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:17:?  (LINE:1740)\l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|0x002d: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthPadding' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('rtlPadding' int)])  (LINE:1741)\l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|RETURN\lORIG_RETURN\l|0x002e: RETURN  (r0 I:int A[D('widthPadding' int)])  (LINE:1743)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|0x002e: RETURN  (r0 I:int A[D('widthPadding' int)]) A[SYNTHETIC] (LINE:1743)\l}"];
MethodNode[shape=record,label="{private int androidx.constraintlayout.widget.ConstraintLayout.getPaddingWidth((r5 'this' I:androidx.constraintlayout.widget.ConstraintLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x002b \-\> B:16:0x002e, CROSS_EDGE: B:12:0x0017 \-\> B:14:0x002b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x002e: r0 'widthPadding' I\l  0x0013\-0x002e: r2 'rtlPadding' I\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_10;
Node_17 -> Node_10;
}

