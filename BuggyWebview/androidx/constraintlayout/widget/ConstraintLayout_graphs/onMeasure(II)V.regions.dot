digraph "CFG forandroidx.constraintlayout.widget.ConstraintLayout.onMeasure(II)V" {
subgraph cluster_Region_1799099077 {
label = "R(3:(0)(0)|(2:9|(1:(2:(1:16)|(2:11|(1:13)(2:15|1)))))(0)|(2:(2:20|21)|(3:23|(2:25|(1:27))|28)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_836800781 {
label = "IF [B:34:0x0006, B:36:0x000a] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0006|if (r11.mOnMeasureWidthMeasureSpec != r12) goto L30\l}"];
Node_36 [shape=record,label="{36\:\ 0x000a|ADDED_TO_REGION\l|if (r11.mOnMeasureHeightMeasureSpec != r13) goto L30\l}"];
subgraph cluster_Region_1309163711 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_95240606 {
label = "R(0)";
node [shape=record,color=blue];
}
}
subgraph cluster_IfRegion_244105684 {
label = "IF [B:40:0x0012, B:41:0x0014] THEN: R(2:9|(1:(2:(1:16)|(2:11|(1:13)(2:15|1))))) ELSE: R(0)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0012|if (r11.mDirtyHierarchy == false) goto L8\l}"];
Node_41 [shape=record,label="{41\:\ 0x0014|ADDED_TO_REGION\l|if (0 == 0) goto L9\l}"];
subgraph cluster_Region_832849675 {
label = "R(2:9|(1:(2:(1:16)|(2:11|(1:13)(2:15|1)))))";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0016|int int r5 = getChildCount()\lint r6 = 0\l}"];
subgraph cluster_LoopRegion_995185137 {
label = "LOOP:0: (1:(2:(1:16)|(2:11|(1:13)(2:15|1))))";
node [shape=record,color=blue];
subgraph cluster_Region_928052124 {
label = "R(1:(2:(1:16)|(2:11|(1:13)(2:15|1))))";
node [shape=record,color=blue];
subgraph cluster_Region_1478423897 {
label = "R(2:(1:16)|(2:11|(1:13)(2:15|1)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1792035480 {
label = "IF [B:43:0x001b] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x001b|LOOP_START\lLOOP:0: B:43:0x001b\-\>B:47:0x002a\lPHI: r6 \l  PHI: (r6v3 'i' int) = (r6v2 'i' int), (r6v4 'i' int) binds: [B:42:0x0016, B:47:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 \>= r5) goto L16\l}"];
subgraph cluster_Region_821304815 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x002d|SYNTHETIC\lEDGE_INSN: B:61:0x002d\-\>B:48:0x002d ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_604367505 {
label = "R(2:11|(1:13)(2:15|1))";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x001d|android.view.View android.view.View r7 = getChildAt(r6)\l}"];
subgraph cluster_IfRegion_931822853 {
label = "IF [B:45:0x0025] THEN: R(1:13) ELSE: R(2:15|1)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0025|if (r7.isLayoutRequested() == false) goto L13\l}"];
subgraph cluster_Region_943649451 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x002a|LOOP_END\lLOOP:0: B:43:0x001b\-\>B:47:0x002a\l|r6++\l}"];
}
subgraph cluster_Region_18554073 {
label = "R(2:15|1)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0027|EDGE_INSN: B:46:0x0027\-\>B:48:0x002d ?: BREAK  \l|r11.mDirtyHierarchy = androidx.constraintlayout.widget.ConstraintLayout.USE_CONSTRAINTS_HELPER\l}"];
Node_InsnContainer_837272437 [shape=record,label="{|break\l}"];
}
}
}
}
}
}
}
subgraph cluster_Region_519851053 {
label = "R(0)";
node [shape=record,color=blue];
}
}
subgraph cluster_Region_242688376 {
label = "R(2:(2:20|21)|(3:23|(2:25|(1:27))|28))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1465059771 {
label = "IF [B:49:0x002f, B:50:0x0031] THEN: R(2:20|21) ELSE: null";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x002f|if (r11.mDirtyHierarchy == false) goto L19\l}"];
Node_50 [shape=record,label="{50\:\ 0x0031|ADDED_TO_REGION\l|if (0 != 0) goto L20\l}"];
subgraph cluster_Region_1486914639 {
label = "R(2:20|21)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0033|resolveMeasuredDimension(r12, r13, r11.mLayoutWidget.getWidth(), r11.mLayoutWidget.getHeight(), r11.mLayoutWidget.isWidthMeasuredTooSmall(), r11.mLayoutWidget.isHeightMeasuredTooSmall())\l}"];
Node_52 [shape=record,label="{52\:\ 0x0051|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_608249426 {
label = "R(3:23|(2:25|(1:27))|28)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0052|r11.mOnMeasureWidthMeasureSpec = r12\lr11.mOnMeasureHeightMeasureSpec = r13\lr11.mLayoutWidget.setRtl(isRtl())\l}"];
subgraph cluster_IfRegion_327855939 {
label = "IF [B:54:0x0061] THEN: R(2:25|(1:27)) ELSE: null";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0061|if (r11.mDirtyHierarchy != false) goto L25\l}"];
subgraph cluster_Region_1557881432 {
label = "R(2:25|(1:27))";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x0063|r11.mDirtyHierarchy = false\l}"];
subgraph cluster_IfRegion_8722288 {
label = "IF [B:56:0x0069] THEN: R(1:27) ELSE: null";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x0069|if (updateHierarchy() != false) goto L27\l}"];
subgraph cluster_Region_760988292 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x006b|r11.mLayoutWidget.updateHierarchy()\l}"];
}
}
}
}
Node_58 [shape=record,label="{58\:\ 0x0070|resolveSystem(r11.mLayoutWidget, r11.mOptimizationLevel, r12, r13)\lresolveMeasuredDimension(r12, r13, r11.mLayoutWidget.getWidth(), r11.mLayoutWidget.getHeight(), r11.mLayoutWidget.isWidthMeasuredTooSmall(), r11.mLayoutWidget.isHeightMeasuredTooSmall())\l}"];
}
}
}
Node_31 [shape=record,color=red,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0000}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0008}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x000c}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x000f}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x0027|SYNTHETIC\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x002d|EDGE_INSN: B:46:0x0027\-\>B:48:0x002d ?: BREAK  , EDGE_INSN: B:61:0x002d\-\>B:48:0x002d ?: BREAK  \l}"];
Node_32 [shape=record,color=red,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x0095}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x000e}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.widget.ConstraintLayout.onMeasure((r11v0 'this' androidx.constraintlayout.widget.ConstraintLayout A[IMMUTABLE_TYPE, THIS]), (r12v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:59:0x0095 \-\> B:32:?, CROSS_EDGE: B:56:0x0069 \-\> B:58:0x0070, CROSS_EDGE: B:54:0x0061 \-\> B:58:0x0070, CROSS_EDGE: B:49:0x002f \-\> B:53:0x0052, BACK_EDGE: B:47:0x002a \-\> B:43:0x001b, CROSS_EDGE: B:43:0x001b \-\> B:48:0x002d, CROSS_EDGE: B:41:0x0014 \-\> B:48:0x002d, CROSS_EDGE: B:40:0x0012 \-\> B:48:0x002d, CROSS_EDGE: B:38:0x000e \-\> B:39:0x000f, CROSS_EDGE: B:34:0x0006 \-\> B:38:0x000e\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [widthMeasureSpec, heightMeasureSpec]\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_31;Node_34 -> Node_35[style=dashed];
Node_34 -> Node_38;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_40 -> Node_41;
Node_40 -> Node_48[style=dashed];
Node_41 -> Node_42;
Node_41 -> Node_48[style=dashed];
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_61;
Node_61 -> Node_48;
Node_44 -> Node_45;
Node_45 -> Node_47;
Node_45 -> Node_60[style=dashed];
Node_47 -> Node_43;
Node_46 -> Node_48;
Node_49 -> Node_50;
Node_49 -> Node_53[style=dashed];
Node_50 -> Node_51;
Node_50 -> Node_53[style=dashed];
Node_51 -> Node_52;
Node_52 -> Node_32;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_54 -> Node_58[style=dashed];
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_56 -> Node_58[style=dashed];
Node_57 -> Node_58;
Node_58 -> Node_59;
Node_31 -> Node_33;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_37 -> Node_39;
Node_39 -> Node_40;
Node_60 -> Node_46;
Node_48 -> Node_49;
Node_59 -> Node_32;
Node_38 -> Node_39;
}

