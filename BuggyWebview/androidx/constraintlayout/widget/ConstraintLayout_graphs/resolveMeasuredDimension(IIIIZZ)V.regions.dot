digraph "CFG forandroidx.constraintlayout.widget.ConstraintLayout.resolveMeasuredDimension(IIIIZZ)V" {
subgraph cluster_Region_1808592921 {
label = "R(4:1|(1:3)|(1:5)|6)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|int int r1 = r8.mMeasurer.paddingHeight\lint int r2 = r8.mMeasurer.paddingWidth\lint int r3 = r11 + r2\lint int r4 = r12 + r1\lint int r5 = resolveSizeAndState(r3, r9, 0)\lint int r6 = resolveSizeAndState(r4, r10, 0 \<\< 16)\lint r5 = r5 & androidx.core.view.ViewCompat.MEASURED_SIZE_MASK\lint r6 = r6 & androidx.core.view.ViewCompat.MEASURED_SIZE_MASK\lint int r5 = java.lang.Math.min(r8.mMaxWidth, r5)\lint int r6 = java.lang.Math.min(r8.mMaxHeight, r6)\l}"];
subgraph cluster_IfRegion_931788751 {
label = "IF [B:12:0x002a] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002a|if (r13 != false) goto L3\l}"];
subgraph cluster_Region_1247973621 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x002c|r5 \|= 16777216\l}"];
}
}
subgraph cluster_IfRegion_811946685 {
label = "IF [B:14:0x002d] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002d|PHI: r5 \l  PHI: (r5v3 'resolvedWidthSize' int) = (r5v2 'resolvedWidthSize' int), (r5v4 'resolvedWidthSize' int) binds: [B:12:0x002a, B:13:0x002c] A[DONT_GENERATE, DONT_INLINE]\l|if (r14 != false) goto L5\l}"];
subgraph cluster_Region_445247455 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002f|r6 \|= 16777216\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x0030|PHI: r6 \l  PHI: (r6v4 'resolvedHeightSize' int) = (r6v3 'resolvedHeightSize' int), (r6v5 'resolvedHeightSize' int) binds: [B:14:0x002d, B:15:0x002f] A[DONT_GENERATE, DONT_INLINE]\l|setMeasuredDimension(r5, r6)\lr8.mLastMeasureWidth = r5\lr8.mLastMeasureHeight = r6\l}"];
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0037}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.widget.ConstraintLayout.resolveMeasuredDimension((r8v0 'this' androidx.constraintlayout.widget.ConstraintLayout A[IMMUTABLE_TYPE, THIS]), (r9v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'measuredWidth' int A[D('measuredWidth' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'measuredHeight' int A[D('measuredHeight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'isWidthMeasuredTooSmall' boolean A[D('isWidthMeasuredTooSmall' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'isHeightMeasuredTooSmall' boolean A[D('isHeightMeasuredTooSmall' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x002d \-\> B:16:0x0030, CROSS_EDGE: B:12:0x002a \-\> B:14:0x002d\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [widthMeasureSpec, heightMeasureSpec, measuredWidth, measuredHeight, isWidthMeasuredTooSmall, isHeightMeasuredTooSmall]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_9 -> Node_11;
Node_17 -> Node_10;
}

