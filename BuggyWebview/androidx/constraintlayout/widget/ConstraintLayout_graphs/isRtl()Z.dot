digraph "CFG forandroidx.constraintlayout.widget.ConstraintLayout.isRtl()Z" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000}"];
Node_19 [shape=record,label="{19\:\ 0x0005|if (android.os.Build.VERSION.SDK_INT \< 17) goto L14\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007}"];
Node_21 [shape=record,label="{21\:\ 0x0015|if ((getContext().getApplicationInfo().flags & 4194304) == 0) goto L13\l}"];
Node_22 [shape=record,label="{22\:\ 0x0017|r0 = androidx.constraintlayout.widget.ConstraintLayout.USE_CONSTRAINTS_HELPER\l}"];
Node_24 [shape=record,label="{24\:\ 0x001a|PHI: r0 \l  PHI: (r0v6 'isRtlSupported' boolean) = (r0v5 'isRtlSupported' boolean), (r0v7 'isRtlSupported' boolean) binds: [B:23:0x0019, B:22:0x0017] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L12\l}"];
Node_25 [shape=record,label="{25\:\ 0x001c}"];
Node_26 [shape=record,label="{26\:\ 0x0020|if (1 != getLayoutDirection()) goto L11\l}"];
Node_27 [shape=record,label="{27\:\ 0x0022|RETURN\lORIG_RETURN\l|return androidx.constraintlayout.widget.ConstraintLayout.USE_CONSTRAINTS_HELPER\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|r0 = false\l}"];
Node_29 [shape=record,label="{29\:\ 0x0024|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.widget.ConstraintLayout.isRtl((r4v0 'this' androidx.constraintlayout.widget.ConstraintLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0020 \-\> B:28:0x0023, CROSS_EDGE: B:24:0x001a \-\> B:28:0x0023, CROSS_EDGE: B:23:0x0019 \-\> B:24:0x001a, CROSS_EDGE: B:29:0x0024 \-\> B:17:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_29;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_30;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_31;
Node_27 -> Node_17;
Node_31 -> Node_17;
Node_30 -> Node_17;
Node_23 -> Node_24;
Node_29 -> Node_17;
}

