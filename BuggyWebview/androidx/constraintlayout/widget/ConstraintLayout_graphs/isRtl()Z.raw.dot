digraph "CFG forandroidx.constraintlayout.widget.ConstraintLayout.isRtl()Z" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:1722)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (17 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|0x0005: IF  (r0 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:29:0x0024 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|0x0007: INVOKE  (r0 I:android.content.Context) = (r4 I:androidx.constraintlayout.widget.ConstraintLayout) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintLayout.getContext():android.content.Context A[MD:():android.content.Context (s)] (LINE:1723)\l0x000b: INVOKE  (r0 I:android.content.pm.ApplicationInfo) = (r0 I:android.content.Context) type: VIRTUAL call: android.content.Context.getApplicationInfo():android.content.pm.ApplicationInfo A[MD:():android.content.pm.ApplicationInfo (c)]\l0x000f: IGET  (r0 I:int) = (r0 I:android.content.pm.ApplicationInfo) android.content.pm.ApplicationInfo.flags int \l0x0011: CONST  (r2 I:??[int, float, short, byte, char]) = (4194304(0x400000, float:5.877472E\-39) ??[int, float, short, byte, char]) \l0x0013: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l0x0014: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|0x0015: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0019 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0017|0x0017: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x001a|0x001a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isRtlSupported' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:?  (LINE:1724)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001c|0x001c: INVOKE  (r3 I:int) = (r4 I:androidx.constraintlayout.widget.ConstraintLayout) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintLayout.getLayoutDirection():int A[MD:():int (s)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|0x0020: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:? \l}"];
Node_27 [shape=record,label="{27\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0023: RETURN  (r1 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0023: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|0x0023: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|0x0019: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0024|RETURN\l|0x0024: RETURN  (r1 I:boolean)  (LINE:1726)\l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.widget.ConstraintLayout.isRtl((r4 'this' I:androidx.constraintlayout.widget.ConstraintLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0020 \-\> B:28:0x0023, CROSS_EDGE: B:24:0x001a \-\> B:28:0x0023, CROSS_EDGE: B:23:0x0019 \-\> B:24:0x001a, CROSS_EDGE: B:29:0x0024 \-\> B:17:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x0024: r0 'isRtlSupported' Z\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_29;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_30;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_31;
Node_27 -> Node_17;
Node_31 -> Node_17;
Node_30 -> Node_17;
Node_23 -> Node_24;
Node_29 -> Node_17;
}

