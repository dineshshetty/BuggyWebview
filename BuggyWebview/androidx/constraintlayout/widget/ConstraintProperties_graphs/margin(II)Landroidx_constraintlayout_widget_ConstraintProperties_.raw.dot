digraph "CFG forandroidx.constraintlayout.widget.ConstraintProperties.margin(II)Landroidx\/constraintlayout\/widget\/ConstraintProperties;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SWITCH  (r3 I:?? A[D('anchor' int)])\l case 1: goto B:12:0x002e\l case 2: goto B:11:0x0029\l case 3: goto B:10:0x0024\l case 4: goto B:9:0x001f\l case 5: goto B:7:0x0017\l case 6: goto B:6:0x0011\l case 7: goto B:5:0x000b\l default: goto B:3:0x0003  (LINE:306)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:328)\l0x0005: CONST_STR  (r1 I:java.lang.String) =  \"unknown constraint\" \l0x0007: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IGET  (r0 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) = (r2 I:androidx.constraintlayout.widget.ConstraintProperties) androidx.constraintlayout.widget.ConstraintProperties.mParams androidx.constraintlayout.widget.ConstraintLayout$LayoutParams  (LINE:325)\l0x000d: INVOKE  (r0 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams), (r4 I:int A[D('value' int)]) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintLayout.LayoutParams.setMarginEnd(int):void A[MD:(int):void (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|RETURN\l|0x0033: RETURN  (r2 I:androidx.constraintlayout.widget.ConstraintProperties)  (LINE:330)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IGET  (r0 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) = (r2 I:androidx.constraintlayout.widget.ConstraintProperties) androidx.constraintlayout.widget.ConstraintProperties.mParams androidx.constraintlayout.widget.ConstraintLayout$LayoutParams  (LINE:322)\l0x0013: INVOKE  (r0 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams), (r4 I:int A[D('value' int)]) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintLayout.LayoutParams.setMarginStart(int):void A[MD:(int):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:320)\l0x0019: CONST_STR  (r1 I:java.lang.String) =  \"baseline does not support margins\" \l0x001b: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: IGET  (r0 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) = (r2 I:androidx.constraintlayout.widget.ConstraintProperties) androidx.constraintlayout.widget.ConstraintProperties.mParams androidx.constraintlayout.widget.ConstraintLayout$LayoutParams  (LINE:317)\l0x0021: IPUT  (r4 I:int A[D('value' int)]), (r0 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) androidx.constraintlayout.widget.ConstraintLayout.LayoutParams.bottomMargin int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: IGET  (r0 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) = (r2 I:androidx.constraintlayout.widget.ConstraintProperties) androidx.constraintlayout.widget.ConstraintProperties.mParams androidx.constraintlayout.widget.ConstraintLayout$LayoutParams  (LINE:314)\l0x0026: IPUT  (r4 I:int A[D('value' int)]), (r0 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) androidx.constraintlayout.widget.ConstraintLayout.LayoutParams.topMargin int \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: IGET  (r0 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) = (r2 I:androidx.constraintlayout.widget.ConstraintProperties) androidx.constraintlayout.widget.ConstraintProperties.mParams androidx.constraintlayout.widget.ConstraintLayout$LayoutParams  (LINE:311)\l0x002b: IPUT  (r4 I:int A[D('value' int)]), (r0 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) androidx.constraintlayout.widget.ConstraintLayout.LayoutParams.rightMargin int \l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: IGET  (r0 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) = (r2 I:androidx.constraintlayout.widget.ConstraintProperties) androidx.constraintlayout.widget.ConstraintProperties.mParams androidx.constraintlayout.widget.ConstraintLayout$LayoutParams  (LINE:308)\l0x0030: IPUT  (r4 I:int A[D('value' int)]), (r0 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) androidx.constraintlayout.widget.ConstraintLayout.LayoutParams.leftMargin int \l}"];
MethodNode[shape=record,label="{public androidx.constraintlayout.widget.ConstraintProperties androidx.constraintlayout.widget.ConstraintProperties.margin((r2 'this' I:androidx.constraintlayout.widget.ConstraintProperties A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('anchor' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('value' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0033 \-\> B:1:?, CROSS_EDGE: B:6:0x0011 \-\> B:13:0x0033, CROSS_EDGE: B:8:0x001e \-\> B:1:?, CROSS_EDGE: B:9:0x001f \-\> B:13:0x0033, CROSS_EDGE: B:10:0x0024 \-\> B:13:0x0033, CROSS_EDGE: B:11:0x0029 \-\> B:13:0x0033, CROSS_EDGE: B:12:0x002e \-\> B:13:0x0033\lDebug Info:\l  \-1 \-0x0045: r3 'anchor' I\l  \-1 \-0x0045: r4 'value' I\lMETHOD_PARAMETERS: [anchor, value]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_2 -> Node_6;
Node_2 -> Node_7;
Node_2 -> Node_9;
Node_2 -> Node_10;
Node_2 -> Node_11;
Node_2 -> Node_12;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_5 -> Node_13;
Node_13 -> Node_1;
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_13;
Node_10 -> Node_13;
Node_11 -> Node_13;
Node_12 -> Node_13;
}

