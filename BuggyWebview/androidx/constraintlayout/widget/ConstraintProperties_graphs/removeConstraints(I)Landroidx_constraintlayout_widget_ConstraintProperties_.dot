digraph "CFG forandroidx.constraintlayout.widget.ConstraintProperties.removeConstraints(I)Landroidx\/constraintlayout\/widget\/ConstraintProperties;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0003|switch(r4) \{\l    case 1: goto L13;\l    case 2: goto L12;\l    case 3: goto L11;\l    case 4: goto L10;\l    case 5: goto L9;\l    case 6: goto L8;\l    case 7: goto L6;\l    default: goto L3;\l\}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006}"];
Node_5 [shape=record,label="{5\:\ 0x000d|throw new java.lang.IllegalArgumentException(\"unknown constraint\")\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|r3.mParams.endToStart = \-1\lr3.mParams.endToEnd = \-1\lr3.mParams.setMarginEnd(\-1)\lr3.mParams.goneEndMargin = Integer.MIN_VALUE\l}"];
Node_13 [shape=record,label="{13\:\ 0x007b|RETURN\l|return r3\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|r3.mParams.startToEnd = \-1\lr3.mParams.startToStart = \-1\lr3.mParams.setMarginStart(\-1)\lr3.mParams.goneStartMargin = Integer.MIN_VALUE\l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|r3.mParams.baselineToBaseline = \-1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|r3.mParams.bottomToTop = \-1\lr3.mParams.bottomToBottom = \-1\lr3.mParams.bottomMargin = \-1\lr3.mParams.goneBottomMargin = Integer.MIN_VALUE\l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|r3.mParams.topToBottom = \-1\lr3.mParams.topToTop = \-1\lr3.mParams.topMargin = \-1\lr3.mParams.goneTopMargin = Integer.MIN_VALUE\l}"];
Node_11 [shape=record,label="{11\:\ 0x0059|r3.mParams.rightToRight = \-1\lr3.mParams.rightToLeft = \-1\lr3.mParams.rightMargin = \-1\lr3.mParams.goneRightMargin = Integer.MIN_VALUE\l}"];
Node_12 [shape=record,label="{12\:\ 0x006a|r3.mParams.leftToRight = \-1\lr3.mParams.leftToLeft = \-1\lr3.mParams.leftMargin = \-1\lr3.mParams.goneLeftMargin = Integer.MIN_VALUE\l}"];
MethodNode[shape=record,label="{public androidx.constraintlayout.widget.ConstraintProperties androidx.constraintlayout.widget.ConstraintProperties.removeConstraints((r3v0 'this' androidx.constraintlayout.widget.ConstraintProperties A[IMMUTABLE_TYPE, THIS]), (r4v0 'anchor' int A[D('anchor' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x007b \-\> B:1:?, CROSS_EDGE: B:7:0x0020 \-\> B:13:0x007b, CROSS_EDGE: B:8:0x0032 \-\> B:13:0x007b, CROSS_EDGE: B:9:0x0037 \-\> B:13:0x007b, CROSS_EDGE: B:10:0x0048 \-\> B:13:0x007b, CROSS_EDGE: B:11:0x0059 \-\> B:13:0x007b, CROSS_EDGE: B:12:0x006a \-\> B:13:0x007b\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [anchor]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_3 -> Node_7;
Node_3 -> Node_8;
Node_3 -> Node_9;
Node_3 -> Node_10;
Node_3 -> Node_11;
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_13;
Node_13 -> Node_1;
Node_7 -> Node_13;
Node_8 -> Node_13;
Node_9 -> Node_13;
Node_10 -> Node_13;
Node_11 -> Node_13;
Node_12 -> Node_13;
}

