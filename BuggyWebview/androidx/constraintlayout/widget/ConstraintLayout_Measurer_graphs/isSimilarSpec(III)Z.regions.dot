digraph "CFG forandroidx.constraintlayout.widget.ConstraintLayout.Measurer.isSimilarSpec(III)Z" {
subgraph cluster_Region_37096939 {
label = "R(1:(2:(1:3)|(2:5|(2:(1:(2:(1:12)|(1:13)))|(1:14)))))";
node [shape=record,color=blue];
subgraph cluster_Region_31466996 {
label = "R(2:(1:3)|(2:5|(2:(1:(2:(1:12)|(1:13)))|(1:14))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_263510303 {
label = "IF [B:19:0x0001] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0001|if (r7 == r8) goto L3\l}"];
subgraph cluster_Region_1037038186 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0003|RETURN\l|return androidx.constraintlayout.widget.ConstraintLayout.USE_CONSTRAINTS_HELPER\l}"];
}
}
subgraph cluster_Region_1413141277 {
label = "R(2:5|(2:(1:(2:(1:12)|(1:13)))|(1:14)))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0004|int int r1 = android.view.View.MeasureSpec.getMode(r7)\landroid.view.View.MeasureSpec.getSize(r7)\lint int r3 = android.view.View.MeasureSpec.getMode(r8)\lint int r4 = android.view.View.MeasureSpec.getSize(r8)\l}"];
subgraph cluster_Region_262469997 {
label = "R(2:(1:(2:(1:12)|(1:13)))|(1:14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1105230487 {
label = "IF [B:22:0x0016] THEN: R(1:(2:(1:12)|(1:13))) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0016|if (r3 == 1073741824) goto L7\l}"];
subgraph cluster_Region_267105000 {
label = "R(1:(2:(1:12)|(1:13)))";
node [shape=record,color=blue];
subgraph cluster_Region_641662507 {
label = "R(2:(1:12)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_260395395 {
label = "IF [B:24:0x001a, B:25:0x001c, B:26:0x001e] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x001a|if (r1 == Integer.MIN_VALUE) goto L11\l}"];
Node_25 [shape=record,label="{25\:\ 0x001c|ADDED_TO_REGION\l|if (r1 == 0) goto L11\l}"];
Node_26 [shape=record,label="{26\:\ 0x001e|ADDED_TO_REGION\l|if (r9 == r4) goto L12\l}"];
subgraph cluster_Region_1679819812 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0020|RETURN\l|return androidx.constraintlayout.widget.ConstraintLayout.USE_CONSTRAINTS_HELPER\l}"];
}
}
subgraph cluster_Region_1281881692 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
}
subgraph cluster_Region_516518346 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0021|RETURN\lORIG_RETURN\l|return false\l}"];
}
}
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0000}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0018}"];
Node_30 [shape=record,color=red,label="{30\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{private boolean androidx.constraintlayout.widget.ConstraintLayout.Measurer.isSimilarSpec((r6v0 'this' androidx.constraintlayout.widget.ConstraintLayout$Measurer A[IMMUTABLE_TYPE, THIS]), (r7v0 'lastMeasureSpec' int A[D('lastMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'spec' int A[D('spec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'widgetSize' int A[D('widgetSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0020 \-\> B:17:?, CROSS_EDGE: B:29:0x0022 \-\> B:17:?, CROSS_EDGE: B:25:0x001c \-\> B:28:0x0021, CROSS_EDGE: B:24:0x001a \-\> B:26:0x001e, CROSS_EDGE: B:22:0x0016 \-\> B:28:0x0021\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [lastMeasureSpec, spec, widgetSize]\l}"];
MethodNode -> Node_16;Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_28[style=dashed];
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_25 -> Node_30[style=dashed];
Node_26 -> Node_27;
Node_26 -> Node_31[style=dashed];
Node_27 -> Node_17;
Node_31 -> Node_17;
Node_28 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_23 -> Node_24;
Node_30 -> Node_17;
}

