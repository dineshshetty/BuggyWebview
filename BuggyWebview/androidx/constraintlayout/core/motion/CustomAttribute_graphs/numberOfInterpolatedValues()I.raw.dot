digraph "CFG forandroidx.constraintlayout.core.motion.CustomAttribute.numberOfInterpolatedValues()I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: SGET  (r0 I:int[]) =  androidx.constraintlayout.core.motion.CustomAttribute.1.$SwitchMap$androidx$constraintlayout$core$motion$CustomAttribute$AttributeType int[]  (LINE:105)\l0x0002: IGET  (r1 I:androidx.constraintlayout.core.motion.CustomAttribute$AttributeType) = (r2 I:androidx.constraintlayout.core.motion.CustomAttribute) androidx.constraintlayout.core.motion.CustomAttribute.mType androidx.constraintlayout.core.motion.CustomAttribute$AttributeType \l0x0004: INVOKE  (r1 I:int) = (r1 I:androidx.constraintlayout.core.motion.CustomAttribute$AttributeType) type: VIRTUAL call: androidx.constraintlayout.core.motion.CustomAttribute.AttributeType.ordinal():int A[MD:():int (c)]\l0x0008: AGET  (r0 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][]), (r1 I:??[int, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x000a|0x000a: SWITCH  (r0 I:??)\l case 4: goto B:14:0x000f\l case 5: goto B:14:0x000f\l default: goto B:12:0x000d \l}"];
Node_12 [shape=record,label="{12\:\ 0x000d|RETURN\l|0x000d: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:110)\l0x000e: RETURN  (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000f|RETURN\l|0x000f: CONST  (r0 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:108)\l0x0010: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int androidx.constraintlayout.core.motion.CustomAttribute.numberOfInterpolatedValues((r2 'this' I:androidx.constraintlayout.core.motion.CustomAttribute A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0010 \-\> B:9:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14;
Node_12 -> Node_9;
Node_14 -> Node_9;
}

