digraph "CFG forandroidx.constraintlayout.core.motion.MotionPaths.setDpDt(FF[F[I[D[D)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r25 I:??[OBJECT, ARRAY] A[D('toUse' int[])])  (LINE:763)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:764)\l0x0004: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:765)\l0x0005: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:766)\l0x0006: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:768)\l0x0007: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:769)\l0x0008: CONST  (r7 I:??[int, float, short, byte, char]) = (2143289344(0x7fc00000, float:NaN) ??[int, float, short, byte, char])  (LINE:771)\l0x000a: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:772)\l0x000b: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:773)\l0x000c: CONST_STR  (r10 I:java.lang.String) =  \" dd = \"  (LINE:775)\l0x000e: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:776)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|LOOP_START\lLOOP:0: B:3:0x000f\-\>B:13:0x0027\l|0x000f: ARRAY_LENGTH  (r12 I:int) = (r0 I:??[]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r11 I:??[int, byte, short, char] A[D('i' int)]) \>= (r12 I:??[int, byte, short, char])  \-\> B:16:0x002a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: AGET  (r12 I:??[long, double]) = (r26 I:??[long, double][] A[D('deltaData' double[])]), (r11 I:??[int, short, byte, char] A[D('i' int)])  (LINE:777)\l0x0014: CAST (r12 I:float) = (float) (r12 I:double) \l0x0015: AGET  (r13 I:??[long, double]) = (r27 I:??[long, double][] A[D('data' double[])]), (r11 I:??[int, short, byte, char] A[D('i' int)])  (LINE:778)\l0x0017: CAST (r13 I:float) = (float) (r13 I:double) \l0x0018: AGET  (r14 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][]), (r11 I:??[int, short, byte, char] A[D('i' int)])  (LINE:782)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: SWITCH  (r14 I:??)\l case 0: goto B:21:0x0027\l case 1: goto B:11:0x0024\l case 2: goto B:10:0x0022\l case 3: goto B:9:0x0020\l case 4: goto B:8:0x001e\l default: goto B:21:0x0027 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('d_height' float)]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('deltaV' float)])  (LINE:795)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0027|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|LOOP_END\lLOOP:0: B:3:0x000f\-\>B:13:0x0027\l|0x0027: ARITH  (r11 I:int) = (r11 I:int A[D('i' int)]) + (1 int)  (LINE:776)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('d_width' float)]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('deltaV' float)])  (LINE:792)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0027|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('d_y' float)]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('deltaV' float)])  (LINE:789)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0027|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|0x0024: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('d_x' float)]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('deltaV' float)])  (LINE:786)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0027|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0027|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x002a|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|0x002a: ARITH  (r11 I:float A[D('i' int)]) = (r5 I:float A[D('deltaScaleX' float)]) * (r3 I:float A[D('d_width' float)])  (LINE:806)\l0x002c: CONST  (r12 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x002e: ARITH  (r11 I:float) = (r11 I:float) \/ (r12 I:float) \l0x002f: ARITH  (r11 I:float) = (r1 I:float A[D('d_x' float)]) \- (r11 I:float) \l0x0031: ARITH  (r13 I:float) = (r6 I:float A[D('deltaScaleY' float)]) * (r4 I:float A[D('d_height' float)])  (LINE:807)\l0x0033: ARITH  (r13 I:float) = (r13 I:float) \/ (r12 I:float) \l0x0034: ARITH  (r12 I:float) = (r2 I:float A[D('d_y' float)]) \- (r13 I:float) \l0x0036: CONST  (r13 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:808)\l0x0038: ARITH  (r14 I:float) = (r5 I:float A[D('deltaScaleX' float)]) + (r13 I:float) \l0x003a: ARITH  (r14 I:float) = (r14 I:float) * (r3 I:float A[D('d_width' float)]) \l0x003c: ARITH  (r15 I:float) = (r6 I:float A[D('deltaScaleY' float)]) + (r13 I:float)  (LINE:809)\l0x003e: ARITH  (r15 I:float) = (r15 I:float) * (r4 I:float A[D('d_height' float)]) \l0x0040: ARITH  (r16 I:float) = (r11 I:float A[D('deltaX' float)]) + (r14 I:float A[D('deltaWidth' float)])  (LINE:810)\l0x0042: ARITH  (r17 I:float) = (r12 I:float A[D('deltaY' float)]) + (r15 I:float A[D('deltaHeight' float)])  (LINE:811)\l0x0044: CONST  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:834)\l0x0046: ARITH  (r19 I:float) = (r13 I:float) \- (r22 I:float A[D('locationX' float)]) \l0x0048: ARITH  (r19 I:float) = (r19 I:float) * (r11 I:float A[D('deltaX' float)]) \l0x004a: ARITH  (r20 I:float) = (r16 I:float A[D('deltaRight' float)]) * (r22 I:float A[D('locationX' float)]) \l0x004c: ARITH  (r19 I:float) = (r19 I:float) + (r20 I:float) \l0x004e: ARITH  (r19 I:float) = (r19 I:float) + (r8 I:float A[D('deltaTranslationX' float)]) \l0x0050: APUT  \l  (r24 I:??[int, float][] A[D('mAnchorDpDt' float[])])\l  (r18 I:??[int, short, byte, char])\l  (r19 I:??[int, float, short, byte, char])\l \l0x0052: ARITH  (r13 I:float) = (r13 I:float) \- (r23 I:float A[D('locationY' float)])  (LINE:835)\l0x0054: ARITH  (r13 I:float) = (r13 I:float) * (r12 I:float A[D('deltaY' float)]) \l0x0056: ARITH  (r18 I:float) = (r17 I:float A[D('deltaBottom' float)]) * (r23 I:float A[D('locationY' float)]) \l0x0058: ARITH  (r13 I:float) = (r13 I:float) + (r18 I:float) \l0x005a: ARITH  (r13 I:float) = (r13 I:float) + (r9 I:float A[D('deltaTranslationY' float)]) \l0x005b: CONST  (r18 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x005d: APUT  \l  (r24 I:??[int, float][] A[D('mAnchorDpDt' float[])])\l  (r18 I:??[int, short, byte, char])\l  (r13 I:??[int, float, short, byte, char])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x005f|RETURN\l|0x005f: RETURN    (LINE:836)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.core.motion.MotionPaths.setDpDt((r21 'this' I:androidx.constraintlayout.core.motion.MotionPaths A[IMMUTABLE_TYPE, THIS]), (r22 I:float A[D('locationX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:float A[D('locationY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:float[] A[D('mAnchorDpDt' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:int[] A[D('toUse' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:double[] A[D('deltaData' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:double[] A[D('data' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x0027 \-\> B:3:0x000f, CROSS_EDGE: B:9:0x0020 \-\> B:13:0x0027, CROSS_EDGE: B:10:0x0022 \-\> B:13:0x0027, CROSS_EDGE: B:11:0x0024 \-\> B:13:0x0027, CROSS_EDGE: B:6:0x001a \-\> B:13:0x0027\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x0027: r12 'deltaV' F\l  0x0018\-0x0027: r13 'value' F\l  0x000f\-0x002a: r11 'i' I\l  0x0003\-0x006d: r1 'd_x' F\l  0x0004\-0x006d: r2 'd_y' F\l  0x0005\-0x006d: r3 'd_width' F\l  0x0006\-0x006d: r4 'd_height' F\l  0x0007\-0x006d: r5 'deltaScaleX' F\l  0x0008\-0x006d: r6 'deltaScaleY' F\l  0x000a\-0x006d: r7 'mPathRotate' F\l  0x000b\-0x006d: r8 'deltaTranslationX' F\l  0x000c\-0x006d: r9 'deltaTranslationY' F\l  0x000e\-0x006d: r10 'mod' Ljava\/lang\/String;\l  0x0031\-0x006d: r11 'deltaX' F\l  0x0036\-0x006d: r12 'deltaY' F\l  0x003c\-0x006d: r14 'deltaWidth' F\l  0x0040\-0x006d: r15 'deltaHeight' F\l  0x0042\-0x006d: r16 'deltaRight' F\l  0x0044\-0x006d: r17 'deltaBottom' F\l  \-1 \-0x006d: r22 'locationX' F\l  \-1 \-0x006d: r23 'locationY' F\l  \-1 \-0x006d: r24 'mAnchorDpDt' [F\l  \-1 \-0x006d: r25 'toUse' [I\l  \-1 \-0x006d: r26 'deltaData' [D\l  \-1 \-0x006d: r27 'data' [D\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_16;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_9;
Node_6 -> Node_10;
Node_6 -> Node_11;
Node_6 -> Node_21;
Node_8 -> Node_17;
Node_17 -> Node_13;
Node_13 -> Node_3;
Node_9 -> Node_18;
Node_18 -> Node_13;
Node_10 -> Node_19;
Node_19 -> Node_13;
Node_11 -> Node_20;
Node_20 -> Node_13;
Node_21 -> Node_13;
Node_16 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
}

