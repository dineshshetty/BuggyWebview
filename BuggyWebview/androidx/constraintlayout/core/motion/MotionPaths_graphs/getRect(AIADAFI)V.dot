digraph "CFG forandroidx.constraintlayout.core.motion.MotionPaths.getRect([I[D[FI)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|float r2 = r41.f18x\lfloat r3 = r41.f19y\lfloat r4 = r41.width\lfloat r5 = r41.height\lr8 = 0.0f\lr9 = false\lr6 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|LOOP_START\lLOOP:0: B:3:0x0024\-\>B:13:0x003f\lPHI: r2 r3 r4 r5 r6 r8 r9 \l  PHI: (r2v1 'v_x' float) = (r2v0 'v_x' float), (r2v10 'v_x' float) binds: [B:2:0x0000, B:13:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'v_y' float) = (r3v0 'v_y' float), (r3v13 'v_y' float) binds: [B:2:0x0000, B:13:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'v_width' float) = (r4v0 'v_width' float), (r4v11 'v_width' float) binds: [B:2:0x0000, B:13:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'v_height' float) = (r5v0 'v_height' float), (r5v3 'v_height' float) binds: [B:2:0x0000, B:13:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v2 'i' int) = (r6v1 'i' int), (r6v15 'i' int) binds: [B:2:0x0000, B:13:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 'alpha' float) = (r8v0 'alpha' float), (r8v14 'alpha' float) binds: [B:2:0x0000, B:13:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 boolean) = (r9v0 boolean), (r9v15 boolean) binds: [B:2:0x0000, B:13:0x003f] A[DONT_GENERATE, DONT_INLINE]\l|r18 = r8\l}"];
Node_4 [shape=record,label="{4\:\ 0x0027|if (r6 \>= r42.length) goto L18\l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|r19 = r9\lfloat r8 = (float) r43[r6]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|switch(r42[r6]) \{\l    case 0: goto L15;\l    case 1: goto L13;\l    case 2: goto L11;\l    case 3: goto L9;\l    case 4: goto L6;\l    default: goto L17;\l\}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|r5 = r8\l}"];
Node_38 [shape=record,label="{38\:\ 0x003f|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x003f|LOOP_END\lLOOP:0: B:3:0x0024\-\>B:13:0x003f\lPHI: r2 r3 r4 r5 \l  PHI: (r2v10 'v_x' float) = (r2v1 'v_x' float), (r2v1 'v_x' float), (r2v9 'v_x' float), (r2v1 'v_x' float), (r2v1 'v_x' float), (r2v1 'v_x' float) binds: [B:42:0x003f, B:37:0x003f, B:41:0x003f, B:40:0x003f, B:39:0x003f, B:38:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v13 'v_y' float) = (r3v1 'v_y' float), (r3v1 'v_y' float), (r3v1 'v_y' float), (r3v12 'v_y' float), (r3v1 'v_y' float), (r3v1 'v_y' float) binds: [B:42:0x003f, B:37:0x003f, B:41:0x003f, B:40:0x003f, B:39:0x003f, B:38:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v11 'v_width' float) = (r4v1 'v_width' float), (r4v1 'v_width' float), (r4v1 'v_width' float), (r4v1 'v_width' float), (r4v10 'v_width' float), (r4v1 'v_width' float) binds: [B:42:0x003f, B:37:0x003f, B:41:0x003f, B:40:0x003f, B:39:0x003f, B:38:0x003f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v3 'v_height' float) = (r5v1 'v_height' float), (r5v1 'v_height' float), (r5v1 'v_height' float), (r5v1 'v_height' float), (r5v1 'v_height' float), (r5v4 'v_height' float) binds: [B:42:0x003f, B:37:0x003f, B:41:0x003f, B:40:0x003f, B:39:0x003f, B:38:0x003f] A[DONT_GENERATE, DONT_INLINE]\l|int r6 = r6 + 1\lr8 = r18\lr9 = r19\l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|r4 = r8\l}"];
Node_39 [shape=record,label="{39\:\ 0x003f|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|r3 = r8\l}"];
Node_40 [shape=record,label="{40\:\ 0x003f|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|r2 = r8\l}"];
Node_41 [shape=record,label="{41\:\ 0x003f|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x003c}"];
Node_37 [shape=record,label="{37\:\ 0x003f|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x003f|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0046|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|androidx.constraintlayout.core.motion.Motion r6 = r41.mRelativeToController\l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|if (r6 == null) goto L41\l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|float r6 = r6.getCenterX()\lfloat r9 = r41.mRelativeToController.getCenterY()\lr20 = r2\lr21 = 0.0f\lfloat r2 = (float) ((((double) r6) + (((double) r20) * java.lang.Math.sin((double) r3))) \- ((double) (r4 \/ 2.0f)))\lr3 = (float) ((((double) r9) \- (((double) r20) * java.lang.Math.cos((double) r3))) \- ((double) (r5 \/ 2.0f)))\lr2 = r2\l}"];
Node_18 [shape=record,label="{18\:\ 0x0099|PHI: r2 r3 r21 \l  PHI: (r2v2 'v_x' float) = (r2v1 'v_x' float), (r2v8 'v_x' float) binds: [B:17:0x0091, B:16:0x004c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 'v_y' float) = (r3v1 'v_y' float), (r3v11 'v_y' float) binds: [B:17:0x0091, B:16:0x004c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r21v1 'angle' float) = (r21v0 'angle' float), (r21v5 'angle' float) binds: [B:17:0x0091, B:16:0x004c] A[DONT_GENERATE, DONT_INLINE]\l|r0 = r2\lr1 = r3\lfloat r6 = r2 + r4\lr7 = r1\lr8 = r6\lfloat r9 = r3 + r5\lr10 = r0\lr20 = r9\lfloat r24 = r0 + (r4 \/ 2.0f)\lfloat r25 = r1 + (r5 \/ 2.0f)\l}"];
Node_19 [shape=record,label="{19\:\ 0x00b2|if (java.lang.Float.isNaN(Float.NaN) != false) goto L25\l}"];
Node_20 [shape=record,label="{20\:\ 0x00b4|float r24 = r0 + ((r6 \- r0) * Float.NaN)\l}"];
Node_21 [shape=record,label="{21\:\ 0x00ba|PHI: r24 \l  PHI: (r24v3 'cx' float) = (r24v2 'cx' float), (r24v4 'cx' float) binds: [B:19:0x00b2, B:20:0x00b4] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x00be|if (java.lang.Float.isNaN(Float.NaN) != false) goto L28\l}"];
Node_23 [shape=record,label="{23\:\ 0x00c0|float r25 = r1 + ((r9 \- r1) * Float.NaN)\l}"];
Node_24 [shape=record,label="{24\:\ 0x00c6|PHI: r25 \l  PHI: (r25v2 'cy' float) = (r25v1 'cy' float), (r25v3 'cy' float) binds: [B:22:0x00be, B:23:0x00c0] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x00ca|if ((1.0f \> 1.0f ? 1 : (1.0f == 1.0f ? 0 : \-1)) == 0) goto L31\l}"];
Node_26 [shape=record,label="{26\:\ 0x00cc|float r27 = (r0 + r6) \/ 2.0f\lfloat r0 = ((r0 \- r27) * 1.0f) + r27\lfloat r6 = ((r6 \- r27) * 1.0f) + r27\lfloat r8 = ((r8 \- r27) * 1.0f) + r27\lfloat r10 = ((r10 \- r27) * 1.0f) + r27\l}"];
Node_27 [shape=record,label="{27\:\ 0x00ea|PHI: r0 r6 r8 r10 \l  PHI: (r0v2 'x1' float) = (r0v1 'x1' float), (r0v6 'x1' float) binds: [B:25:0x00ca, B:26:0x00cc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v5 'x2' float) = (r6v4 'x2' float), (r6v9 'x2' float) binds: [B:25:0x00ca, B:26:0x00cc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v4 'x3' float) = (r8v3 'x3' float), (r8v8 'x3' float) binds: [B:25:0x00ca, B:26:0x00cc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v2 'x4' float) = (r10v1 'x4' float), (r10v6 'x4' float) binds: [B:25:0x00ca, B:26:0x00cc] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x00ec|if ((1.0f \> 1.0f ? 1 : (1.0f == 1.0f ? 0 : \-1)) == 0) goto L34\l}"];
Node_29 [shape=record,label="{29\:\ 0x00ee|float r26 = (r1 + r9) \/ 2.0f\lfloat r1 = ((r1 \- r26) * 1.0f) + r26\lfloat r7 = ((r7 \- r26) * 1.0f) + r26\lfloat r9 = ((r9 \- r26) * 1.0f) + r26\lfloat r20 = ((r20 \- r26) * 1.0f) + r26\l}"];
Node_30 [shape=record,label="{30\:\ 0x010c|PHI: r1 r7 r9 r20 \l  PHI: (r1v2 'y1' float) = (r1v1 'y1' float), (r1v6 'y1' float) binds: [B:28:0x00ec, B:29:0x00ee] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v2 'y2' float) = (r7v1 'y2' float), (r7v6 'y2' float) binds: [B:28:0x00ec, B:29:0x00ee] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v3 'y3' float) = (r9v2 'y3' float), (r9v7 'y3' float) binds: [B:28:0x00ec, B:29:0x00ee] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r20v2 'y4' float) = (r20v1 'y4' float), (r20v6 'y4' float) binds: [B:28:0x00ec, B:29:0x00ee] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0110|if ((r21 \> 0.0f ? 1 : (r21 == 0.0f ? 0 : \-1)) == 0) goto L40\l}"];
Node_32 [shape=record,label="{32\:\ 0x0112|r2 = r21\lfloat r3 = (float) java.lang.Math.sin(java.lang.Math.toRadians((double) r2))\lfloat r4 = (float) java.lang.Math.cos(java.lang.Math.toRadians((double) r2))\lr28 = r24\lr29 = r25\lr30 = r0\lr31 = r1\lfloat r5 = xRotate(r3, r4, r28, r29, r30, r31)\lfloat r34 = yRotate(r3, r4, r28, r29, r30, r31)\lr30 = r6\lr31 = r7\lfloat r35 = xRotate(r3, r4, r28, r29, r30, r31)\lfloat r36 = yRotate(r3, r4, r28, r29, r30, r31)\lr30 = r8\lr31 = r9\lfloat r37 = xRotate(r3, r4, r28, r29, r30, r31)\lfloat r38 = yRotate(r3, r4, r28, r29, r30, r31)\lr30 = r10\lr31 = r20\lfloat r39 = xRotate(r3, r4, r28, r29, r30, r31)\lfloat r26 = yRotate(r3, r4, r28, r29, r30, r31)\lr0 = r5\lr1 = r34\lr6 = r35\lr7 = r36\lr8 = r37\lr9 = r38\lr10 = r39\lr20 = r26\l}"];
Node_34 [shape=record,label="{34\:\ 0x0182|PHI: r0 r1 r6 r7 r8 r9 r10 r20 \l  PHI: (r0v3 'x1' float) = (r0v2 'x1' float), (r0v5 'x1' float) binds: [B:33:0x0178, B:32:0x0112] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v3 'y1' float) = (r1v2 'y1' float), (r1v5 'y1' float) binds: [B:33:0x0178, B:32:0x0112] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v6 'x2' float) = (r6v5 'x2' float), (r6v8 'x2' float) binds: [B:33:0x0178, B:32:0x0112] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v3 'y2' float) = (r7v2 'y2' float), (r7v5 'y2' float) binds: [B:33:0x0178, B:32:0x0112] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v5 'x3' float) = (r8v4 'x3' float), (r8v7 'x3' float) binds: [B:33:0x0178, B:32:0x0112] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v4 'y3' float) = (r9v3 'y3' float), (r9v6 'y3' float) binds: [B:33:0x0178, B:32:0x0112] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v3 'x4' float) = (r10v2 'x4' float), (r10v5 'x4' float) binds: [B:33:0x0178, B:32:0x0112] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r20v3 'y4' float) = (r20v2 'y4' float), (r20v5 'y4' float) binds: [B:33:0x0178, B:32:0x0112] A[DONT_GENERATE, DONT_INLINE]\l|int r3 = r45 + 1\lr44[r45] = r0 + 0.0f\lint r4 = r3 + 1\lr44[r3] = r1 + 0.0f\lint r3 = r4 + 1\lr44[r4] = r6 + 0.0f\lint r4 = r3 + 1\lr44[r3] = r7 + 0.0f\lint r3 = r4 + 1\lr44[r4] = r8 + 0.0f\lint r4 = r3 + 1\lr44[r3] = r9 + 0.0f\lint r3 = r4 + 1\lr44[r4] = r10 + 0.0f\lint r4 = r3 + 1\lr44[r3] = r20 + 0.0f\l}"];
Node_35 [shape=record,label="{35\:\ 0x01ae|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0178}"];
Node_17 [shape=record,label="{17\:\ 0x0091|r21 = 0.0f\l}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.core.motion.MotionPaths.getRect((r41v0 'this' androidx.constraintlayout.core.motion.MotionPaths A[IMMUTABLE_TYPE, THIS]), (r42v0 'toUse' int[] A[D('toUse' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r43v0 'data' double[] A[D('data' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r44v0 'path' float[] A[D('path' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r45v0 'offset' int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x003f \-\> B:3:0x0024, CROSS_EDGE: B:9:0x0036 \-\> B:13:0x003f, CROSS_EDGE: B:10:0x0038 \-\> B:13:0x003f, CROSS_EDGE: B:11:0x003a \-\> B:13:0x003f, CROSS_EDGE: B:12:0x003c \-\> B:13:0x003f, CROSS_EDGE: B:6:0x0030 \-\> B:13:0x003f, CROSS_EDGE: B:33:0x0178 \-\> B:34:0x0182, CROSS_EDGE: B:28:0x00ec \-\> B:30:0x010c, CROSS_EDGE: B:25:0x00ca \-\> B:27:0x00ea, CROSS_EDGE: B:22:0x00be \-\> B:24:0x00c6, CROSS_EDGE: B:19:0x00b2 \-\> B:21:0x00ba, CROSS_EDGE: B:17:0x0091 \-\> B:18:0x0099\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_36;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_9;
Node_6 -> Node_10;
Node_6 -> Node_11;
Node_6 -> Node_12;
Node_6 -> Node_42;
Node_8 -> Node_38;
Node_38 -> Node_13;
Node_13 -> Node_3;
Node_9 -> Node_39;
Node_39 -> Node_13;
Node_10 -> Node_40;
Node_40 -> Node_13;
Node_11 -> Node_41;
Node_41 -> Node_13;
Node_12 -> Node_37;
Node_37 -> Node_13;
Node_42 -> Node_13;
Node_36 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_1;
Node_33 -> Node_34;
Node_17 -> Node_18;
}

