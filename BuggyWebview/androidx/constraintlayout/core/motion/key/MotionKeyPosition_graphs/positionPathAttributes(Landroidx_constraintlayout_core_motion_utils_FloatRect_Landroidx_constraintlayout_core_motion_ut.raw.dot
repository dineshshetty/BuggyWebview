digraph "CFG forandroidx.constraintlayout.core.motion.key.MotionKeyPosition.positionPathAttributes(Landroidx\/constraintlayout\/core\/motion\/utils\/FloatRect;Landroidx\/constraintlayout\/core\/motion\/utils\/FloatRect;FF[Ljava\/lang\/String;[F)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: INVOKE  (r0 I:float) = \l  (r16 I:androidx.constraintlayout.core.motion.utils.FloatRect A[D('start' androidx.constraintlayout.core.motion.utils.FloatRect)])\l type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.FloatRect.centerX():float A[MD:():float (m)] (LINE:108)\l0x0004: INVOKE  (r1 I:float) = \l  (r16 I:androidx.constraintlayout.core.motion.utils.FloatRect A[D('start' androidx.constraintlayout.core.motion.utils.FloatRect)])\l type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.FloatRect.centerY():float A[MD:():float (m)] (LINE:109)\l0x0008: INVOKE  (r2 I:float) = \l  (r17 I:androidx.constraintlayout.core.motion.utils.FloatRect A[D('end' androidx.constraintlayout.core.motion.utils.FloatRect)])\l type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.FloatRect.centerX():float A[MD:():float (m)] (LINE:110)\l0x000c: INVOKE  (r3 I:float) = \l  (r17 I:androidx.constraintlayout.core.motion.utils.FloatRect A[D('end' androidx.constraintlayout.core.motion.utils.FloatRect)])\l type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.FloatRect.centerY():float A[MD:():float (m)] (LINE:111)\l0x0010: ARITH  (r4 I:float) = (r2 I:float A[D('endCenterX' float)]) \- (r0 I:float A[D('startCenterX' float)])  (LINE:112)\l0x0012: ARITH  (r5 I:float) = (r3 I:float A[D('endCenterY' float)]) \- (r1 I:float A[D('startCenterY' float)])  (LINE:113)\l0x0014: CAST (r6 I:double) = (double) (r4 I:float A[D('pathVectorX' float)])  (LINE:114)\l0x0015: CAST (r8 I:double) = (double) (r5 I:float A[D('pathVectorY' float)]) \l0x0016: INVOKE  (r6 I:double) = (r6 I:double), (r8 I:double) type: STATIC call: java.lang.Math.hypot(double, double):double A[MD:(double, double):double (c)]\l0x001a: CAST (r6 I:float) = (float) (r6 I:double) \l0x001b: CAST (r7 I:double) = (double) (r6 I:float A[D('distance' float)])  (LINE:115)\l0x001c: CONST  (r9 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001d: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001e: CONST  (r11 I:??[long, double]) = (4547007122018943789(0x3f1a36e2eb1c432d, double:1.0E\-4) ??[long, double]) \l0x0023: CMP_G  (r13 I:int) = (r7 I:double), (r11 I:double) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0025|0x0025: IF  (r13 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:21:0x0034 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0027|0x0027: SGET  (r7 I:java.io.PrintStream) =  java.lang.System.out java.io.PrintStream  (LINE:116)\l0x0029: CONST_STR  (r8 I:java.lang.String) =  \"distance ~ 0\" \l0x002b: INVOKE  (r7 I:java.io.PrintStream), (r8 I:java.lang.String) type: VIRTUAL call: java.io.PrintStream.println(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x002e: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:117)\l0x002f: APUT  \l  (r21 I:??[int, float][] A[D('value' float[])])\l  (r10 I:??[int, short, byte, char])\l  (r7 I:??[int, float, short, byte, char])\l \l0x0031: APUT  \l  (r21 I:??[int, float][] A[D('value' float[])])\l  (r9 I:??[int, short, byte, char])\l  (r7 I:??[int, float, short, byte, char])\l  (LINE:118)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0033|RETURN\l|0x0033: RETURN    (LINE:119)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0034|0x0034: ARITH  (r7 I:float) = (r4 I:float A[D('pathVectorX' float)]) \/ (r6 I:float A[D('distance' float)])  (LINE:122)\l0x0036: ARITH  (r8 I:float) = (r5 I:float A[D('pathVectorY' float)]) \/ (r6 I:float A[D('distance' float)])  (LINE:123)\l0x0038: ARITH  (r11 I:float) = (r19 I:float A[D('y' float)]) \- (r1 I:float A[D('startCenterY' float)])  (LINE:124)\l0x003a: ARITH  (r11 I:float) = (r11 I:float) * (r7 I:float A[D('dx' float)]) \l0x003c: ARITH  (r12 I:float) = (r18 I:float A[D('x' float)]) \- (r0 I:float A[D('startCenterX' float)]) \l0x003e: ARITH  (r12 I:float) = (r12 I:float) * (r8 I:float A[D('dy' float)]) \l0x0040: ARITH  (r11 I:float) = (r11 I:float) \- (r12 I:float) \l0x0041: ARITH  (r11 I:float) = (r11 I:float) \/ (r6 I:float A[D('distance' float)]) \l0x0042: ARITH  (r12 I:float) = (r18 I:float A[D('x' float)]) \- (r0 I:float A[D('startCenterX' float)])  (LINE:125)\l0x0044: ARITH  (r12 I:float) = (r12 I:float) * (r7 I:float A[D('dx' float)]) \l0x0046: ARITH  (r13 I:float) = (r19 I:float A[D('y' float)]) \- (r1 I:float A[D('startCenterY' float)]) \l0x0048: ARITH  (r13 I:float) = (r13 I:float) * (r8 I:float A[D('dy' float)]) \l0x004a: ARITH  (r12 I:float) = (r12 I:float) + (r13 I:float) \l0x004b: ARITH  (r12 I:float) = (r12 I:float) \/ (r6 I:float A[D('distance' float)]) \l0x004c: AGET  (r13 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY][] A[D('attribute' java.lang.String[])]), (r10 I:??[int, short, byte, char])  (LINE:126)\l0x004e: CONST_STR  (r14 I:java.lang.String) =  \"percentX\" \l}"];
Node_22 [shape=record,label="{22\:\ 0x0050|0x0050: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x005f \l}"];
Node_23 [shape=record,label="{23\:\ 0x0052|0x0052: AGET  (r13 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY][] A[D('attribute' java.lang.String[])]), (r10 I:??[int, short, byte, char])  (LINE:127)\l0x0054: INVOKE  (r13 I:boolean) = (r14 I:java.lang.String), (r13 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0058|0x0058: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:? \l}"];
Node_25 [shape=record,label="{25\:\ 0x005a|0x005a: APUT  \l  (r21 I:??[int, float][] A[D('value' float[])])\l  (r10 I:??[int, short, byte, char])\l  (r12 I:??[int, float, short, byte, char] A[D('dist' float)])\l  (LINE:128)\l0x005c: APUT  \l  (r21 I:??[int, float][] A[D('value' float[])])\l  (r9 I:??[int, short, byte, char])\l  (r11 I:??[int, float, short, byte, char] A[D('perpendicular' float)])\l  (LINE:129)\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x0069: RETURN   A[SYNTHETIC] (LINE:137)\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|0x0069: RETURN   A[SYNTHETIC] (LINE:137)\l}"];
Node_26 [shape=record,label="{26\:\ 0x005f|0x005f: APUT  \l  (r20 I:??[OBJECT, ARRAY][] A[D('attribute' java.lang.String[])])\l  (r10 I:??[int, short, byte, char])\l  (r14 I:??[OBJECT, ARRAY])\l  (LINE:132)\l0x0061: CONST_STR  (r13 I:java.lang.String) =  \"percentY\"  (LINE:133)\l0x0063: APUT  \l  (r20 I:??[OBJECT, ARRAY][] A[D('attribute' java.lang.String[])])\l  (r9 I:??[int, short, byte, char])\l  (r13 I:??[OBJECT, ARRAY])\l \l0x0065: APUT  \l  (r21 I:??[int, float][] A[D('value' float[])])\l  (r10 I:??[int, short, byte, char])\l  (r12 I:??[int, float, short, byte, char] A[D('dist' float)])\l  (LINE:134)\l0x0067: APUT  \l  (r21 I:??[int, float][] A[D('value' float[])])\l  (r9 I:??[int, short, byte, char])\l  (r11 I:??[int, float, short, byte, char] A[D('perpendicular' float)])\l  (LINE:135)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0069|RETURN\lORIG_RETURN\l|0x0069: RETURN    (LINE:137)\l}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.core.motion.key.MotionKeyPosition.positionPathAttributes((r15 'this' I:androidx.constraintlayout.core.motion.key.MotionKeyPosition A[IMMUTABLE_TYPE, THIS]), (r16 I:androidx.constraintlayout.core.motion.utils.FloatRect A[D('start' androidx.constraintlayout.core.motion.utils.FloatRect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:androidx.constraintlayout.core.motion.utils.FloatRect A[D('end' androidx.constraintlayout.core.motion.utils.FloatRect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:float A[D('y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:java.lang.String[] A[D('attribute' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:float[] A[D('value' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0069 \-\> B:16:?, CROSS_EDGE: B:24:0x0058 \-\> B:27:0x0069, CROSS_EDGE: B:26:0x005f \-\> B:27:0x0069\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0069: r0 'startCenterX' F\l  0x0008\-0x0069: r1 'startCenterY' F\l  0x000c\-0x0069: r2 'endCenterX' F\l  0x0010\-0x0069: r3 'endCenterY' F\l  0x0012\-0x0069: r4 'pathVectorX' F\l  0x0014\-0x0069: r5 'pathVectorY' F\l  0x001b\-0x0069: r6 'distance' F\l  0x0036\-0x0069: r7 'dx' F\l  0x0038\-0x0069: r8 'dy' F\l  0x0042\-0x0069: r11 'perpendicular' F\l  0x004c\-0x0069: r12 'dist' F\l  \-1 \-0x0069: r16 'start' Landroidx\/constraintlayout\/core\/motion\/utils\/FloatRect;\l  \-1 \-0x0069: r17 'end' Landroidx\/constraintlayout\/core\/motion\/utils\/FloatRect;\l  \-1 \-0x0069: r18 'x' F\l  \-1 \-0x0069: r19 'y' F\l  \-1 \-0x0069: r20 'attribute' [Ljava\/lang\/String;\l  \-1 \-0x0069: r21 'value' [F\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_16;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_29;
Node_29 -> Node_16;
Node_28 -> Node_16;
Node_26 -> Node_27;
Node_27 -> Node_16;
}

