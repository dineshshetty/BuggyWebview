digraph "CFG forandroidx.constraintlayout.core.motion.key.MotionKeyTrigger.copy(Landroidx\/constraintlayout\/core\/motion\/key\/MotionKey;)Landroidx\/constraintlayout\/core\/motion\/key\/MotionKeyTrigger;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|super.copy(r3)\landroidx.constraintlayout.core.motion.key.MotionKeyTrigger r0 = (androidx.constraintlayout.core.motion.key.MotionKeyTrigger) r3\lr2.mCurveFit = r0.mCurveFit\lr2.mCross = r0.mCross\lr2.mTriggerReceiver = r0.mTriggerReceiver\lr2.mNegativeCross = r0.mNegativeCross\lr2.mPositiveCross = r0.mPositiveCross\lr2.mTriggerID = r0.mTriggerID\lr2.mTriggerCollisionId = r0.mTriggerCollisionId\lr2.mTriggerSlack = r0.mTriggerSlack\lr2.mFireCrossReset = r0.mFireCrossReset\lr2.mFireNegativeReset = r0.mFireNegativeReset\lr2.mFirePositiveReset = r0.mFirePositiveReset\lr2.mFireThreshold = r0.mFireThreshold\lr2.mFireLastPos = r0.mFireLastPos\lr2.mPostLayout = r0.mPostLayout\lr2.mCollisionRect = r0.mCollisionRect\lr2.mTargetRect = r0.mTargetRect\l}"];
Node_7 [shape=record,label="{7\:\ 0x0046|RETURN\l|return r2\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.constraintlayout.core.motion.key.MotionKeyTrigger androidx.constraintlayout.core.motion.key.MotionKeyTrigger.copy((r2v0 'this' androidx.constraintlayout.core.motion.key.MotionKeyTrigger A[IMMUTABLE_TYPE, THIS]), (r3v0 'src' androidx.constraintlayout.core.motion.key.MotionKey A[D('src' androidx.constraintlayout.core.motion.key.MotionKey), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lREPLACED_BY: androidx.constraintlayout.core.motion.key.MotionKeyTrigger.copy(androidx.constraintlayout.core.motion.key.MotionKey):androidx.constraintlayout.core.motion.key.MotionKey\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.key.MotionKey.copy(androidx.constraintlayout.core.motion.key.MotionKey):androidx.constraintlayout.core.motion.key.MotionKey]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

