digraph "CFG forandroidx.constraintlayout.core.motion.MotionWidget.setBounds(IIII)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:androidx.constraintlayout.core.state.WidgetFrame) = (r3 I:androidx.constraintlayout.core.motion.MotionWidget) androidx.constraintlayout.core.motion.MotionWidget.widgetFrame androidx.constraintlayout.core.state.WidgetFrame  (LINE:114)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x000f \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:androidx.constraintlayout.core.state.WidgetFrame) =  androidx.constraintlayout.core.state.WidgetFrame  (LINE:115)\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0008: CHECK_CAST (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget) = (androidx.constraintlayout.core.widgets.ConstraintWidget) (r2 I:??[OBJECT, ARRAY]) \l0x000a: INVOKE  (r0 I:androidx.constraintlayout.core.state.WidgetFrame), (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget) type: DIRECT call: androidx.constraintlayout.core.state.WidgetFrame.\<init\>(androidx.constraintlayout.core.widgets.ConstraintWidget):void A[MD:(androidx.constraintlayout.core.widgets.ConstraintWidget):void (m)]\l0x000d: IPUT  (r0 I:androidx.constraintlayout.core.state.WidgetFrame), (r3 I:androidx.constraintlayout.core.motion.MotionWidget) androidx.constraintlayout.core.motion.MotionWidget.widgetFrame androidx.constraintlayout.core.state.WidgetFrame \l}"];
Node_12 [shape=record,label="{12\:\ 0x000f|0x000f: IGET  (r0 I:androidx.constraintlayout.core.state.WidgetFrame) = (r3 I:androidx.constraintlayout.core.motion.MotionWidget) androidx.constraintlayout.core.motion.MotionWidget.widgetFrame androidx.constraintlayout.core.state.WidgetFrame  (LINE:117)\l0x0011: IPUT  (r5 I:int A[D('top' int)]), (r0 I:androidx.constraintlayout.core.state.WidgetFrame) androidx.constraintlayout.core.state.WidgetFrame.top int \l0x0013: IGET  (r0 I:androidx.constraintlayout.core.state.WidgetFrame) = (r3 I:androidx.constraintlayout.core.motion.MotionWidget) androidx.constraintlayout.core.motion.MotionWidget.widgetFrame androidx.constraintlayout.core.state.WidgetFrame  (LINE:118)\l0x0015: IPUT  (r4 I:int A[D('left' int)]), (r0 I:androidx.constraintlayout.core.state.WidgetFrame) androidx.constraintlayout.core.state.WidgetFrame.left int \l0x0017: IGET  (r0 I:androidx.constraintlayout.core.state.WidgetFrame) = (r3 I:androidx.constraintlayout.core.motion.MotionWidget) androidx.constraintlayout.core.motion.MotionWidget.widgetFrame androidx.constraintlayout.core.state.WidgetFrame  (LINE:119)\l0x0019: IPUT  (r6 I:int A[D('right' int)]), (r0 I:androidx.constraintlayout.core.state.WidgetFrame) androidx.constraintlayout.core.state.WidgetFrame.right int \l0x001b: IGET  (r0 I:androidx.constraintlayout.core.state.WidgetFrame) = (r3 I:androidx.constraintlayout.core.motion.MotionWidget) androidx.constraintlayout.core.motion.MotionWidget.widgetFrame androidx.constraintlayout.core.state.WidgetFrame  (LINE:120)\l0x001d: IPUT  (r7 I:int A[D('bottom' int)]), (r0 I:androidx.constraintlayout.core.state.WidgetFrame) androidx.constraintlayout.core.state.WidgetFrame.bottom int \l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|RETURN\l|0x001f: RETURN    (LINE:121)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.MotionWidget.setBounds((r3 'this' I:androidx.constraintlayout.core.motion.MotionWidget A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0002 \-\> B:12:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001f: r4 'left' I\l  \-1 \-0x001f: r5 'top' I\l  \-1 \-0x001f: r6 'right' I\l  \-1 \-0x001f: r7 'bottom' I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

