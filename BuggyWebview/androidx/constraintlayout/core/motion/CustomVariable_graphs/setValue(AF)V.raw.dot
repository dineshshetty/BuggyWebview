digraph "CFG forandroidx.constraintlayout.core.motion.CustomVariable.setValue([F)V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r10 I:androidx.constraintlayout.core.motion.CustomVariable) androidx.constraintlayout.core.motion.CustomVariable.mType int  (LINE:225)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0003: CONST  (r2 I:??[long, double]) = (4602678819172646912(0x3fe0000000000000, double:0.5) ??[long, double]) \l0x0005: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0006|0x0006: SWITCH  (r0 I:??)\l case 900: goto B:34:0x006d\l case 901: goto B:33:0x0068\l case 902: goto B:32:0x001e\l case 903: goto B:30:0x0016\l case 904: goto B:25:0x000a\l case 905: goto B:33:0x0068\l case 906: goto B:34:0x006d\l default: goto B:39:? \l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|0x000a: AGET  (r0 I:??[int, float, short, byte, char]) = (r11 I:??[int, float][] A[D('value' float[])]), (r4 I:??[int, short, byte, char])  (LINE:247)\l0x000c: CAST (r5 I:double) = (double) (r0 I:float) \l0x000d: CMP_L  (r0 I:int) = (r5 I:double), (r2 I:double) \l}"];
Node_26 [shape=record,label="{26\:\ 0x000f|0x000f: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:28:0x0012 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0012|0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0013|0x0013: IPUT  (r1 I:boolean), (r10 I:androidx.constraintlayout.core.motion.CustomVariable) androidx.constraintlayout.core.motion.CustomVariable.mBooleanValue boolean \l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|0x0073: RETURN   A[SYNTHETIC] (LINE:250)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|0x0016: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:245)\l0x0018: CONST_STR  (r1 I:java.lang.String) =  \"Cannot interpolate String\" \l0x001a: INVOKE  (r0 I:java.lang.RuntimeException), (r1 I:java.lang.String) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x001d|0x001d: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_32 [shape=record,label="{32\:\ 0x001e|0x001e: AGET  (r0 I:??[int, float, short, byte, char]) = (r11 I:??[int, float][] A[D('value' float[])]), (r4 I:??[int, short, byte, char])  (LINE:235)\l0x0020: AGET  (r1 I:??[int, float, short, byte, char]) = (r11 I:??[int, float][] A[D('value' float[])]), (r1 I:??[int, short, byte, char])  (LINE:236)\l0x0022: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:237)\l0x0023: AGET  (r4 I:??[int, float, short, byte, char]) = (r11 I:??[int, float][] A[D('value' float[])]), (r4 I:??[int, short, byte, char]) \l0x0025: CAST (r5 I:double) = (double) (r0 I:float A[D('f_r' float)])  (LINE:238)\l0x0026: INVOKE  (r5 I:double) = (r5 I:double), (r2 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x002a: CAST (r5 I:float) = (float) (r5 I:double) \l0x002b: CONST  (r6 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char]) \l0x002d: ARITH  (r5 I:float) = (r5 I:float) * (r6 I:float) \l0x002f: INVOKE  (r5 I:int) = (r5 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0033: ARITH  (r5 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0035: CAST (r7 I:double) = (double) (r1 I:float A[D('f_g' float)])  (LINE:239)\l0x0036: INVOKE  (r7 I:double) = (r7 I:double), (r2 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x003a: CAST (r7 I:float) = (float) (r7 I:double) \l0x003b: ARITH  (r7 I:float) = (r7 I:float) * (r6 I:float) \l0x003d: INVOKE  (r7 I:int) = (r7 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0041: ARITH  (r7 I:??[int, boolean]) = (r7 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0043: CAST (r8 I:double) = (double) (r4 I:float A[D('f_b' float)])  (LINE:240)\l0x0044: INVOKE  (r2 I:double) = (r8 I:double), (r2 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x0048: CAST (r2 I:float) = (float) (r2 I:double) \l0x0049: ARITH  (r2 I:float) = (r2 I:float) * (r6 I:float) \l0x004b: INVOKE  (r2 I:int) = (r2 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x004f: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0051: CONST  (r3 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:241)\l0x0052: AGET  (r3 I:??[int, float, short, byte, char]) = (r11 I:??[int, float][] A[D('value' float[])]), (r3 I:??[int, short, byte, char]) \l0x0054: ARITH  (r3 I:float) = (r3 I:float) * (r6 I:float) \l0x0056: INVOKE  (r3 I:int) = (r3 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x005a: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x005c: ARITH  (r6 I:int) = (r3 I:int A[D('a' int)]) \<\< (24 int)  (LINE:242)\l0x005e: ARITH  (r8 I:int) = (r5 I:int A[D('r' int)]) \<\< (16 int) \l0x0060: ARITH  (r6 I:??[int, boolean]) = (r6 I:??[int, boolean, short, byte, char]) \| (r8 I:??[int, boolean, short, byte, char]) \l0x0061: ARITH  (r8 I:int) = (r7 I:int A[D('g' int)]) \<\< (8 int) \l0x0063: ARITH  (r6 I:??[int, boolean]) = (r6 I:??[int, boolean, short, byte, char]) \| (r8 I:??[int, boolean, short, byte, char]) \l0x0064: ARITH  (r6 I:??[int, boolean]) = (r6 I:??[int, boolean, short, byte, char]) \| (r2 I:??[int, boolean, short, byte, char] A[D('b' int)]) \l0x0065: IPUT  (r6 I:int), (r10 I:androidx.constraintlayout.core.motion.CustomVariable) androidx.constraintlayout.core.motion.CustomVariable.mIntegerValue int \l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x0073: RETURN   A[SYNTHETIC] (LINE:250)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0068|0x0068: AGET  (r0 I:??[int, float, short, byte, char] A[D('f_r' float)]) = (r11 I:??[int, float][] A[D('value' float[])]), (r4 I:??[int, short, byte, char] A[D('f_b' float)])  (LINE:232)\l0x006a: IPUT  (r0 I:float), (r10 I:androidx.constraintlayout.core.motion.CustomVariable) androidx.constraintlayout.core.motion.CustomVariable.mFloatValue float \l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|0x0073: RETURN   A[SYNTHETIC] (LINE:250)\l}"];
Node_34 [shape=record,label="{34\:\ 0x006d|0x006d: AGET  (r0 I:??[int, float, short, byte, char]) = (r11 I:??[int, float][] A[D('value' float[])]), (r4 I:??[int, short, byte, char])  (LINE:228)\l0x006f: CAST (r0 I:int) = (int) (r0 I:float) \l0x0070: IPUT  (r0 I:int), (r10 I:androidx.constraintlayout.core.motion.CustomVariable) androidx.constraintlayout.core.motion.CustomVariable.mIntegerValue int \l}"];
Node_35 [shape=record,label="{35\:\ 0x0073|RETURN\lORIG_RETURN\l|0x0073: RETURN    (LINE:250)\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x0073: RETURN   A[SYNTHETIC] (LINE:250)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.CustomVariable.setValue((r10 'this' I:androidx.constraintlayout.core.motion.CustomVariable A[IMMUTABLE_TYPE, THIS]), (r11 I:float[] A[D('value' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x000f \-\> B:29:0x0013, CROSS_EDGE: B:31:0x001d \-\> B:21:?, CROSS_EDGE: B:32:0x001e \-\> B:35:0x0073, CROSS_EDGE: B:33:0x0068 \-\> B:35:0x0073, CROSS_EDGE: B:34:0x006d \-\> B:35:0x0073, CROSS_EDGE: B:23:0x0006 \-\> B:35:0x0073\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0020\-0x0068: r0 'f_r' F\l  0x0022\-0x0068: r1 'f_g' F\l  0x0051\-0x0068: r2 'b' I\l  0x005c\-0x0068: r3 'a' I\l  0x0025\-0x0068: r4 'f_b' F\l  0x0035\-0x0068: r5 'r' I\l  0x0043\-0x0068: r7 'g' I\l  \-1 \-0x0085: r11 'value' [F\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_30;
Node_23 -> Node_32;
Node_23 -> Node_33;
Node_23 -> Node_34;
Node_23 -> Node_39;
Node_25 -> Node_26;
Node_26 -> Node_28;
Node_26 -> Node_29[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_36;
Node_36 -> Node_21;
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_32 -> Node_37;
Node_37 -> Node_21;
Node_33 -> Node_38;
Node_38 -> Node_21;
Node_34 -> Node_35;
Node_35 -> Node_21;
Node_39 -> Node_21;
}

