digraph "CFG forandroidx.constraintlayout.core.motion.Motion.getDrawPath()I" {
subgraph cluster_Region_2134597384 {
label = "R(3:1|(1:4)|7)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|int int r0 = r4.mStartMotionPath.mDrawPath\ljava.util.Iterator java.util.Iterator\<androidx.constraintlayout.core.motion.MotionPaths\> r1 = r4.mMotionPaths.iterator()\l}"];
subgraph cluster_LoopRegion_1218107183 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000e|if (r1.hasNext() != false) goto L4\l}"];
subgraph cluster_Region_458965096 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0010|LOOP_END\lLOOP:0: B:12:0x000a\-\>B:14:0x0010\l|androidx.constraintlayout.core.motion.MotionPaths androidx.constraintlayout.core.motion.MotionPaths r2 = r1.next()\lint r0 = java.lang.Math.max(r0, r2.mDrawPath)\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x0025|RETURN\l|return java.lang.Math.max(r0, r4.mEndMotionPath.mDrawPath)\l}"];
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x000a|LOOP_START\lLOOP:0: B:12:0x000a\-\>B:14:0x0010\lPHI: r0 \l  PHI: (r0v2 'mode' int) = (r0v1 'mode' int), (r0v4 'mode' int) binds: [B:11:0x0000, B:14:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x001d|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x001d}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int androidx.constraintlayout.core.motion.Motion.getDrawPath((r4v0 'this' androidx.constraintlayout.core.motion.Motion A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x0010 \-\> B:12:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_14 -> Node_12;
Node_16 -> Node_10;
Node_9 -> Node_11;
Node_12 -> Node_13;
Node_17 -> Node_15;
Node_15 -> Node_16;
}

