digraph "CFG forandroidx.constraintlayout.core.motion.Motion.getDpDt(FFF[F)V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|float r8 = getAdjustedPosition(r13, r12.mVelocity)\landroidx.constraintlayout.core.motion.utils.CurveFit[] r1 = r12.mSpline\l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|if (r1 == null) goto L18\l}"];
Node_24 [shape=record,label="{24\:\ 0x000d|r1[0].getSlope((double) r8, r12.mInterpolateVelocity)\lr12.mSpline[0].getPos((double) r8, r12.mInterpolateData)\lr9 = r12.mVelocity[0]\lr1 = 0\l}"];
Node_25 [shape=record,label="{25\:\ 0x0024|LOOP_START\lLOOP:0: B:25:0x0024\-\>B:27:0x0029\lPHI: r1 \l  PHI: (r1v10 'i' int) = (r1v9 'i' int), (r1v15 'i' int) binds: [B:24:0x000d, B:27:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|double[] r6 = r12.mInterpolateVelocity\l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|if (r1 \>= r6.length) goto L7\l}"];
Node_27 [shape=record,label="{27\:\ 0x0029|LOOP_END\lLOOP:0: B:25:0x0024\-\>B:27:0x0029\l|r6[r1] = r6[r1] * ((double) r9)\lint r1 = r1 + 1\l}"];
Node_38 [shape=record,label="{38\:\ 0x0033|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0033|androidx.constraintlayout.core.motion.utils.CurveFit r1 = r12.mArcSpline\l}"];
Node_29 [shape=record,label="{29\:\ 0x0035|if (r1 == null) goto L16\l}"];
Node_30 [shape=record,label="{30\:\ 0x0037|double[] r2 = r12.mInterpolateData\l}"];
Node_31 [shape=record,label="{31\:\ 0x003a|if (r2.length \<= 0) goto L15\l}"];
Node_32 [shape=record,label="{32\:\ 0x003c|r1.getPos((double) r8, r2)\lr12.mArcSpline.getSlope((double) r8, r12.mInterpolateVelocity)\lr12.mStartMotionPath.setDpDt(r14, r15, r16, r12.mInterpolateVariables, r12.mInterpolateVelocity, r12.mInterpolateData)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0057|RETURN\lORIG_RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_34 [shape=record,label="{34\:\ 0x0058|r12.mStartMotionPath.setDpDt(r14, r15, r16, r12.mInterpolateVariables, r6, r12.mInterpolateData)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0065|RETURN\l|return\l}"];
Node_36 [shape=record,label="{36\:\ 0x0066|float r1 = r12.mEndMotionPath.f18x \- r12.mStartMotionPath.f18x\lfloat r3 = r12.mEndMotionPath.f19y \- r12.mStartMotionPath.f19y\lfloat r4 = r12.mEndMotionPath.width \- r12.mStartMotionPath.width\lfloat r5 = r12.mEndMotionPath.height \- r12.mStartMotionPath.height\lfloat r6 = r1 + r4\lfloat r7 = r3 + r5\lr16[0] = ((1.0f \- r14) * r1) + (r6 * r14)\lr16[1] = ((1.0f \- r15) * r3) + (r7 * r15)\l}"];
Node_37 [shape=record,label="{37\:\ 0x00a2|RETURN\l|return\l}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.core.motion.Motion.getDpDt((r12v0 'this' androidx.constraintlayout.core.motion.Motion A[IMMUTABLE_TYPE, THIS]), (r13v0 'position' float A[D('position' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'locationX' float A[D('locationX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'locationY' float A[D('locationY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'mAnchorDpDt' float[] A[D('mAnchorDpDt' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x0029 \-\> B:25:0x0024, CROSS_EDGE: B:31:0x003a \-\> B:33:0x0057, CROSS_EDGE: B:35:0x0065 \-\> B:21:?, CROSS_EDGE: B:37:0x00a2 \-\> B:21:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_36;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_38;
Node_27 -> Node_25;
Node_38 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_34;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_39;
Node_32 -> Node_33;
Node_33 -> Node_21;
Node_39 -> Node_21;
Node_34 -> Node_35;
Node_35 -> Node_21;
Node_36 -> Node_37;
Node_37 -> Node_21;
}

