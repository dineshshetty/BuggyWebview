digraph "CFG forandroidx.constraintlayout.core.motion.Motion.setValue(II)Z" {
subgraph cluster_Region_1859404425 {
label = "R(1:2)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_605520576 {
label = "Switch: 3
 case 509 -> R(2:6|7)
 case androidx.constraintlayout.core.motion.utils.TypedValues.TransitionType.TYPE_AUTO_TRANSITION :int -> R(1:5)
 case default -> R(1:3)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0001|switch(r2) \{\l    case 509: goto L6;\l    case 704: goto L5;\l    default: goto L3;\l\}\l}"];
subgraph cluster_Region_1924761233 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0007|setPathMotionArc(r3)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|RETURN\l|return true\l}"];
}
subgraph cluster_Region_1675027210 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0006|RETURN\l|return true\l}"];
}
subgraph cluster_Region_794441203 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0004|RETURN\l|return false\l}"];
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0000}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.core.motion.Motion.setValue((r1v0 'this' androidx.constraintlayout.core.motion.Motion A[IMMUTABLE_TYPE, THIS]), (r2v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'value' int A[D('value' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0006 \-\> B:10:?, CROSS_EDGE: B:17:0x000a \-\> B:10:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.TypedValues.setValue(int, int):boolean]\l}"];
MethodNode -> Node_9;Node_12 -> Node_13;
Node_12 -> Node_15;
Node_12 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_10;
Node_15 -> Node_10;
Node_13 -> Node_10;
Node_9 -> Node_11;
Node_11 -> Node_12;
}

