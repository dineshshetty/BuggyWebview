digraph "CFG forandroidx.constraintlayout.core.motion.Motion.getAdjustedPosition(F[F)F" {
Node_45 [shape=record,label="{45\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:1155)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0003|0x0003: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('velocity' float[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0008 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0005|0x0005: APUT  \l  (r11 I:??[int, float][] A[D('velocity' float[])])\l  (r1 I:??[int, short, byte, char])\l  (r0 I:??[int, float, short, byte, char])\l  (LINE:1156)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0028|0x0028: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' float)])  (LINE:1169)\l0x0029: IGET  (r2 I:androidx.constraintlayout.core.motion.MotionPaths) = (r9 I:androidx.constraintlayout.core.motion.Motion) androidx.constraintlayout.core.motion.Motion.mStartMotionPath androidx.constraintlayout.core.motion.MotionPaths  (LINE:1170)\l0x002b: IGET  (r2 I:androidx.constraintlayout.core.motion.utils.Easing) = (r2 I:androidx.constraintlayout.core.motion.MotionPaths) androidx.constraintlayout.core.motion.MotionPaths.mKeyFrameEasing androidx.constraintlayout.core.motion.utils.Easing \l0x002d: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1171)\l0x002e: CONST  (r4 I:??[int, float, short, byte, char]) = (2143289344(0x7fc00000, float:NaN) ??[int, float, short, byte, char])  (LINE:1172)\l0x0030: IGET  (r5 I:java.util.ArrayList\<androidx.constraintlayout.core.motion.MotionPaths\>) = (r9 I:androidx.constraintlayout.core.motion.Motion) androidx.constraintlayout.core.motion.Motion.mMotionPaths java.util.ArrayList  (LINE:1173)\l0x0032: INVOKE  (r5 I:java.util.Iterator) = (r5 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_61 [shape=record,label="{61\:\ 0x0036|LOOP_START\lLOOP:0: B:61:0x0036\-\>B:85:0x0036\l|0x0036: INVOKE  (r6 I:boolean) = (r5 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x003a|0x003a: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x005a \l}"];
Node_63 [shape=record,label="{63\:\ 0x003c|0x003c: INVOKE  (r6 I:java.lang.Object) = (r5 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0040: CHECK_CAST (r6 I:androidx.constraintlayout.core.motion.MotionPaths) = (androidx.constraintlayout.core.motion.MotionPaths) (r6 I:??[OBJECT, ARRAY]) \l0x0042: IGET  (r7 I:androidx.constraintlayout.core.motion.utils.Easing) = \l  (r6 I:androidx.constraintlayout.core.motion.MotionPaths A[D('frame' androidx.constraintlayout.core.motion.MotionPaths)])\l androidx.constraintlayout.core.motion.MotionPaths.mKeyFrameEasing androidx.constraintlayout.core.motion.utils.Easing  (LINE:1174)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0044|0x0044: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:86:0x0036 \l}"];
Node_80 [shape=record,label="{80\:\ 0x0046|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x0046|0x0046: IGET  (r7 I:float) = \l  (r6 I:androidx.constraintlayout.core.motion.MotionPaths A[D('frame' androidx.constraintlayout.core.motion.MotionPaths)])\l androidx.constraintlayout.core.motion.MotionPaths.time float  (LINE:1175)\l0x0048: CMP_G  (r7 I:int) = (r7 I:float), (r10 I:float A[D('position' float)]) \l}"];
Node_66 [shape=record,label="{66\:\ 0x004a|0x004a: IF  (r7 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:82:0x0051 \l}"];
Node_82 [shape=record,label="{82\:\ 0x0051|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x0051|0x0051: INVOKE  (r7 I:boolean) = (r4 I:float A[D('end' float)]) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)] (LINE:1179)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0055|0x0055: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x0036 \l}"];
Node_83 [shape=record,label="{83\:\ 0x0057|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x0057|0x0057: IGET  (r4 I:float A[D('end' float)]) = \l  (r6 I:androidx.constraintlayout.core.motion.MotionPaths A[D('frame' androidx.constraintlayout.core.motion.MotionPaths)])\l androidx.constraintlayout.core.motion.MotionPaths.time float  (LINE:1180)\l}"];
Node_88 [shape=record,label="{88\:\ 0x0036|SYNTHETIC\l}"];
Node_85 [shape=record,label="{85\:\ 0x0036|LOOP_END\lSYNTHETIC\lLOOP:0: B:61:0x0036\-\>B:85:0x0036\l}"];
Node_87 [shape=record,label="{87\:\ 0x0036|SYNTHETIC\l}"];
Node_84 [shape=record,label="{84\:\ 0x004c|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x004c|0x004c: IGET  (r2 I:androidx.constraintlayout.core.motion.utils.Easing A[D('easing' androidx.constraintlayout.core.motion.utils.Easing)]) = \l  (r6 I:androidx.constraintlayout.core.motion.MotionPaths A[D('frame' androidx.constraintlayout.core.motion.MotionPaths)])\l androidx.constraintlayout.core.motion.MotionPaths.mKeyFrameEasing androidx.constraintlayout.core.motion.utils.Easing  (LINE:1176)\l0x004e: IGET  (r3 I:float A[D('start' float)]) = \l  (r6 I:androidx.constraintlayout.core.motion.MotionPaths A[D('frame' androidx.constraintlayout.core.motion.MotionPaths)])\l androidx.constraintlayout.core.motion.MotionPaths.time float  (LINE:1177)\l}"];
Node_89 [shape=record,label="{89\:\ 0x0036|SYNTHETIC\l}"];
Node_86 [shape=record,label="{86\:\ 0x0036|SYNTHETIC\l}"];
Node_81 [shape=record,label="{81\:\ 0x005a|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x005a|0x005a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('easing' androidx.constraintlayout.core.motion.utils.Easing)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:0x007f  (LINE:1186)\l}"];
Node_73 [shape=record,label="{73\:\ 0x005c|0x005c: INVOKE  (r5 I:boolean) = (r4 I:float A[D('end' float)]) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)] (LINE:1187)\l}"];
Node_74 [shape=record,label="{74\:\ 0x0060|0x0060: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:76:0x0064 \l}"];
Node_75 [shape=record,label="{75\:\ 0x0062|0x0062: CONST  (r4 I:??[int, float, short, byte, char] A[D('end' float)]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:1188)\l}"];
Node_76 [shape=record,label="{76\:\ 0x0064|0x0064: ARITH  (r5 I:float) = (r10 I:float A[D('position' float)]) \- (r3 I:float A[D('start' float)])  (LINE:1190)\l0x0066: ARITH  (r6 I:float) = (r4 I:float A[D('end' float)]) \- (r3 I:float A[D('start' float)]) \l0x0068: ARITH  (r5 I:float) = (r5 I:float) \/ (r6 I:float) \l0x0069: CAST (r6 I:double) = (double) (r5 I:float A[D('offset' float)])  (LINE:1191)\l0x006a: INVOKE  (r6 I:double) = \l  (r2 I:androidx.constraintlayout.core.motion.utils.Easing A[D('easing' androidx.constraintlayout.core.motion.utils.Easing)])\l  (r6 I:double)\l type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.Easing.get(double):double A[MD:(double):double (m)]\l0x006e: CAST (r6 I:float) = (float) (r6 I:double) \l0x006f: ARITH  (r7 I:float) = (r4 I:float A[D('end' float)]) \- (r3 I:float A[D('start' float)])  (LINE:1192)\l0x0071: ARITH  (r7 I:float) = (r7 I:float) * (r6 I:float A[D('new_offset' float)]) \l0x0073: ARITH  (r0 I:float A[D('adjusted' float)]) = (r7 I:float) + (r3 I:float A[D('start' float)]) \l}"];
Node_77 [shape=record,label="{77\:\ 0x0075|0x0075: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('velocity' float[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:0x007f  (LINE:1193)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0077|0x0077: CAST (r7 I:double) = (double) (r5 I:float A[D('offset' float)])  (LINE:1194)\l0x0078: INVOKE  (r7 I:double) = \l  (r2 I:androidx.constraintlayout.core.motion.utils.Easing A[D('easing' androidx.constraintlayout.core.motion.utils.Easing)])\l  (r7 I:double)\l type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.Easing.getDiff(double):double A[MD:(double):double (m)]\l0x007c: CAST (r7 I:float) = (float) (r7 I:double) \l0x007d: APUT  \l  (r11 I:??[int, float][] A[D('velocity' float[])])\l  (r1 I:??[int, short, byte, char])\l  (r7 I:??[int, float, short, byte, char])\l \l}"];
Node_79 [shape=record,label="{79\:\ 0x007f|RETURN\l|0x007f: RETURN  (r0 I:float A[D('adjusted' float)])  (LINE:1197)\l}"];
Node_46 [shape=record,label="{46\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_50 [shape=record,label="{50\:\ 0x0008|0x0008: IGET  (r2 I:float) = (r9 I:androidx.constraintlayout.core.motion.Motion) androidx.constraintlayout.core.motion.Motion.mStaggerScale float  (LINE:1157)\l0x000a: CAST (r3 I:double) = (double) (r2 I:float) \l0x000b: CONST  (r5 I:??[long, double]) = (4607182418800017408(0x3ff0000000000000, double:1.0) ??[long, double]) \l0x000d: CMP_L  (r7 I:int) = (r3 I:double), (r5 I:double) \l}"];
Node_51 [shape=record,label="{51\:\ 0x000f|0x000f: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0028 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0011|0x0011: IGET  (r3 I:float) = (r9 I:androidx.constraintlayout.core.motion.Motion) androidx.constraintlayout.core.motion.Motion.mStaggerOffset float  (LINE:1158)\l0x0013: CMP_G  (r4 I:int) = (r10 I:float A[D('position' float)]), (r3 I:float) \l}"];
Node_53 [shape=record,label="{53\:\ 0x0015|0x0015: IF  (r4 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:55:0x0018 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0017|0x0017: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' float)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1159)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0018|0x0018: CMP_L  (r4 I:int) = (r10 I:float A[D('position' float)]), (r3 I:float)  (LINE:1161)\l}"];
Node_56 [shape=record,label="{56\:\ 0x001a|0x001a: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:60:0x0028 \l}"];
Node_57 [shape=record,label="{57\:\ 0x001c|0x001c: CAST (r7 I:double) = (double) (r10 I:float A[D('position' float)]) \l0x001d: CMP_G  (r4 I:int) = (r7 I:double), (r5 I:double) \l}"];
Node_58 [shape=record,label="{58\:\ 0x001f|0x001f: IF  (r4 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:60:0x0028 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0021|0x0021: ARITH  (r10 I:float) = (r10 I:float A[D('position' float)]) \- (r3 I:float)  (LINE:1162)\l0x0022: ARITH  (r10 I:float) = (r10 I:float A[D('position' float)]) * (r2 I:float)  (LINE:1163)\l0x0024: INVOKE  (r10 I:float A[D('position' float)]) = (r10 I:float A[D('position' float)]), (r0 I:float) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)] (LINE:1164)\l}"];
MethodNode[shape=record,label="{private float androidx.constraintlayout.core.motion.Motion.getAdjustedPosition((r9 'this' I:androidx.constraintlayout.core.motion.Motion A[IMMUTABLE_TYPE, THIS]), (r10 I:float A[D('position' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:float[] A[D('velocity' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:67:0x004c \-\> B:61:0x0036, BACK_EDGE: B:70:0x0057 \-\> B:61:0x0036, BACK_EDGE: B:69:0x0055 \-\> B:61:0x0036, BACK_EDGE: B:64:0x0044 \-\> B:61:0x0036, CROSS_EDGE: B:77:0x0075 \-\> B:79:0x007f, CROSS_EDGE: B:74:0x0060 \-\> B:76:0x0064, CROSS_EDGE: B:72:0x005a \-\> B:79:0x007f, CROSS_EDGE: B:59:0x0021 \-\> B:60:0x0028, CROSS_EDGE: B:58:0x001f \-\> B:60:0x0028, CROSS_EDGE: B:56:0x001a \-\> B:60:0x0028, CROSS_EDGE: B:53:0x0015 \-\> B:55:0x0018, CROSS_EDGE: B:51:0x000f \-\> B:60:0x0028\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0042\-0x0059: r6 'frame' Landroidx\/constraintlayout\/core\/motion\/MotionPaths;\l  0x0069\-0x007f: r5 'offset' F\l  0x006f\-0x007f: r6 'new_offset' F\l  0x0029\-0x007f: r0 'adjusted' F\l  0x002d\-0x007f: r2 'easing' Landroidx\/constraintlayout\/core\/motion\/utils\/Easing;\l  0x002e\-0x007f: r3 'start' F\l  0x0030\-0x007f: r4 'end' F\l  \-1 \-0x007f: r10 'position' F\l  \-1 \-0x007f: r11 'velocity' [F\l}"];
MethodNode -> Node_45;Node_45 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_81;
Node_63 -> Node_64;
Node_64 -> Node_80[style=dashed];
Node_64 -> Node_86;
Node_80 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_82;
Node_66 -> Node_84[style=dashed];
Node_82 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_83[style=dashed];
Node_69 -> Node_87;
Node_83 -> Node_70;
Node_70 -> Node_88;
Node_88 -> Node_85;
Node_85 -> Node_61;
Node_87 -> Node_85;
Node_84 -> Node_67;
Node_67 -> Node_89;
Node_89 -> Node_85;
Node_86 -> Node_85;
Node_81 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_79;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_75 -> Node_76;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_79;
Node_78 -> Node_79;
Node_79 -> Node_46;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_60;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_60;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_60;
}

