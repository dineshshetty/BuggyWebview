digraph "CFG forandroidx.constraintlayout.core.motion.utils.SpringStopEngine.compute(D)V" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r25 I:??[OBJECT, ARRAY])  (LINE:101)\l0x0002: IGET  (r1 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mStiffness double \l0x0004: IGET  (r3 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mDamping double  (LINE:102)\l0x0006: IGET  (r5 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mStiffness double  (LINE:104)\l0x0008: IGET  (r7 I:float) = (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mMass float \l0x000a: CAST (r7 I:double) = (double) (r7 I:float) \l0x000b: ARITH  (r5 I:double) = (r5 I:double) \/ (r7 I:double) \l0x000c: INVOKE  (r5 I:double) = (r5 I:double) type: STATIC call: java.lang.Math.sqrt(double):double A[MD:(double):double (c)]\l0x0010: ARITH  (r5 I:double) = (r5 I:double) * (r26 I:double A[D('dt' double)]) \l0x0012: CONST  (r7 I:??[long, double]) = (4616189618054758400(0x4010000000000000, double:4.0) ??[long, double]) \l0x0014: ARITH  (r5 I:double) = (r5 I:double) * (r7 I:double) \l0x0016: CONST  (r7 I:??[long, double]) = (4621256167635550208(0x4022000000000000, double:9.0) ??[long, double]) \l0x0018: ARITH  (r7 I:double) = (r7 I:double) \/ (r5 I:double) \l0x0019: CONST  (r5 I:??[long, double]) = (4607182418800017408(0x3ff0000000000000, double:1.0) ??[long, double]) \l0x001b: ARITH  (r7 I:double) = (r7 I:double) + (r5 I:double) \l0x001c: CAST (r5 I:int) = (int) (r7 I:double) \l0x001d: CAST (r6 I:double) = (double) (r5 I:int A[D('overSample' int)])  (LINE:105)\l0x001e: ARITH  (r6 I:double) = (r26 I:double A[D('dt' double)]) \/ (r6 I:double) \l0x0020: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:107)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0021|LOOP_START\lLOOP:0: B:26:0x0021\-\>B:39:0x009c\l|0x0021: IF  (r8 I:??[int, byte, short, char] A[D('i' int)]) \>= (r5 I:??[int, byte, short, char] A[D('overSample' int)])  \-\> B:41:0x00a6 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0023|0x0023: IGET  (r9 I:float) = (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mPos float  (LINE:108)\l0x0025: CAST (r10 I:double) = (double) (r9 I:float) \l0x0026: IGET  (r12 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mTargetPos double \l0x0028: ARITH  (r10 I:double) = (r10 I:double) \- (r12 I:double) \l0x0029: NEG  (r14 I:double) = (r1 I:double A[D('k' double)])  (LINE:109)\l0x002a: ARITH  (r14 I:double) = (r14 I:double) * (r10 I:double A[D('x' double)]) \l0x002c: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('overSample' int)]) \l0x002e: IGET  (r5 I:float A[D('overSample' int)]) = (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mV float \l0x0030: MOVE  (r26 I:??[long, double]) = (r10 I:??[long, double] A[D('x' double)]) \l0x0032: CAST (r10 I:double A[D('x' double)]) = (double) (r5 I:float) \l0x0033: ARITH  (r10 I:double) = (r10 I:double) * (r3 I:double A[D('c' double)]) \l0x0035: ARITH  (r14 I:double) = (r14 I:double) \- (r10 I:double) \l0x0036: IGET  (r10 I:float) = (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mMass float \l0x0038: MOVE  (r17 I:??[long, double]) = (r3 I:??[long, double] A[D('c' double)]) \l0x003a: CAST (r3 I:double A[D('c' double)]) = (double) (r10 I:float) \l0x003b: ARITH  (r14 I:double) = (r14 I:double) \/ (r3 I:double) \l0x003c: CAST (r3 I:double) = (double) (r5 I:float)  (LINE:111)\l0x003d: ARITH  (r19 I:double) = (r14 I:double A[D('a' double)]) * (r6 I:double A[D('dt' double)]) \l0x003f: CONST  (r21 I:??[long, double]) = (4611686018427387904(0x4000000000000000, double:2.0) ??[long, double]) \l0x0041: ARITH  (r19 I:double) = (r19 I:double) \/ (r21 I:double) \l0x0043: ARITH  (r3 I:double) = (r3 I:double) + (r19 I:double) \l0x0045: MOVE  (r19 I:??[long, double]) = (r14 I:??[long, double] A[D('a' double)])  (LINE:112)\l0x0047: CAST (r14 I:double A[D('a' double)]) = (double) (r9 I:float) \l0x0048: ARITH  (r23 I:double) = (r6 I:double A[D('dt' double)]) * (r3 I:double A[D('avgV' double)]) \l0x004a: ARITH  (r23 I:double) = (r23 I:double) \/ (r21 I:double) \l0x004c: ARITH  (r14 I:double) = (r14 I:double) + (r23 I:double) \l0x004e: ARITH  (r14 I:double) = (r14 I:double) \- (r12 I:double) \l0x004f: NEG  (r11 I:double) = (r14 I:double A[D('avgX' double)])  (LINE:113)\l0x0050: ARITH  (r11 I:double) = (r11 I:double) * (r1 I:double A[D('k' double)]) \l0x0052: ARITH  (r23 I:double) = (r3 I:double A[D('avgV' double)]) * (r17 I:double A[D('c' double)]) \l0x0054: ARITH  (r11 I:double) = (r11 I:double) \- (r23 I:double) \l0x0056: MOVE  (r23 I:??[long, double]) = (r1 I:??[long, double] A[D('k' double)]) \l0x0058: CAST (r1 I:double A[D('k' double)]) = (double) (r10 I:float) \l0x0059: ARITH  (r11 I:double) = (r11 I:double) \/ (r1 I:double) \l0x005a: ARITH  (r1 I:double) = (r11 I:double A[D('a' double)]) * (r6 I:double A[D('dt' double)])  (LINE:115)\l0x005c: MOVE  (r19 I:??[long, double]) = (r3 I:??[long, double] A[D('avgV' double)])  (LINE:116)\l0x005e: CAST (r3 I:double A[D('avgV' double)]) = (double) (r5 I:float) \l0x005f: ARITH  (r21 I:double) = (r1 I:double A[D('dv' double)]) \/ (r21 I:double) \l0x0061: ARITH  (r3 I:double) = (r3 I:double) + (r21 I:double) \l0x0063: MOVE  (r19 I:??[long, double] A[D('avgV' double)]) = (r11 I:??[long, double] A[D('a' double)])  (LINE:117)\l0x0065: CAST (r10 I:double) = (double) (r5 I:float) \l0x0066: ARITH  (r10 I:double) = (r10 I:double) + (r1 I:double A[D('dv' double)]) \l0x0067: CAST (r5 I:float) = (float) (r10 I:double) \l0x0068: IPUT  (r5 I:float), (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mV float \l0x006a: CAST (r9 I:double) = (double) (r9 I:float)  (LINE:118)\l0x006b: ARITH  (r11 I:double) = (r3 I:double A[D('avgV' double)]) * (r6 I:double A[D('dt' double)]) \l0x006d: ARITH  (r9 I:double) = (r9 I:double) + (r11 I:double) \l0x006e: CAST (r9 I:float) = (float) (r9 I:double) \l0x006f: IPUT  (r9 I:float), (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mPos float \l0x0071: IGET  (r10 I:int) = (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mBoundaryMode int  (LINE:119)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0073|0x0073: IF  (r10 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:43:0x009c \l}"];
Node_29 [shape=record,label="{29\:\ 0x0075|0x0075: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:120)\l0x0076: CMP_G  (r11 I:int) = (r9 I:float), (r11 I:float) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0078|0x0078: IF  (r11 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:34:0x0085 \l}"];
Node_31 [shape=record,label="{31\:\ 0x007a|0x007a: ARITH  (r11 I:??[int, boolean]) = (r10 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char]) \l0x007c: CONST  (r12 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x007d|0x007d: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0085 \l}"];
Node_33 [shape=record,label="{33\:\ 0x007f|0x007f: NEG  (r9 I:float) = (r9 I:float)  (LINE:121)\l0x0080: IPUT  (r9 I:float), (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mPos float \l0x0082: NEG  (r5 I:float) = (r5 I:float)  (LINE:122)\l0x0083: IPUT  (r5 I:float), (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mV float \l}"];
Node_34 [shape=record,label="{34\:\ 0x0085|0x0085: IGET  (r5 I:float) = (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mPos float  (LINE:124)\l0x0087: CONST  (r9 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x0089: CMP_L  (r9 I:int) = (r5 I:float), (r9 I:float) \l}"];
Node_35 [shape=record,label="{35\:\ 0x008b|0x008b: IF  (r9 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:44:0x009c \l}"];
Node_36 [shape=record,label="{36\:\ 0x008d|0x008d: ARITH  (r9 I:??[int, boolean]) = (r10 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char]) \l0x008f: CONST  (r10 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0090|0x0090: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x009c \l}"];
Node_38 [shape=record,label="{38\:\ 0x0092|0x0092: CONST  (r9 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:125)\l0x0094: ARITH  (r9 I:float) = (r9 I:float) \- (r5 I:float) \l0x0095: IPUT  (r9 I:float), (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mPos float \l0x0097: IGET  (r5 I:float) = (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mV float  (LINE:126)\l0x0099: NEG  (r5 I:float) = (r5 I:float) \l0x009a: IPUT  (r5 I:float), (r0 I:androidx.constraintlayout.core.motion.utils.SpringStopEngine) androidx.constraintlayout.core.motion.utils.SpringStopEngine.mV float \l}"];
Node_42 [shape=record,label="{42\:\ 0x009c|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x009c|LOOP_END\lLOOP:0: B:26:0x0021\-\>B:39:0x009c\l|0x009c: ARITH  (r8 I:int) = (r8 I:int A[D('i' int)]) + (1 int)  (LINE:107)\l0x009e: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('overSample' int)]) \l0x00a0: MOVE  (r3 I:??[long, double]) = (r17 I:??[long, double] A[D('c' double)]) \l0x00a2: MOVE  (r1 I:??[long, double]) = (r23 I:??[long, double] A[D('k' double)]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x009c|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x009c|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x009c|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x00a6|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x00a6|RETURN\l|0x00a6: RETURN    (LINE:130)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.core.motion.utils.SpringStopEngine.compute((r25 'this' I:androidx.constraintlayout.core.motion.utils.SpringStopEngine A[IMMUTABLE_TYPE, THIS]), (r26 I:double A[D('dt' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:39:0x009c \-\> B:26:0x0021, CROSS_EDGE: B:37:0x0090 \-\> B:39:0x009c, CROSS_EDGE: B:35:0x008b \-\> B:39:0x009c, CROSS_EDGE: B:32:0x007d \-\> B:34:0x0085, CROSS_EDGE: B:30:0x0078 \-\> B:34:0x0085, CROSS_EDGE: B:28:0x0073 \-\> B:39:0x009c\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0020: r26 'dt' D\l  0x001d\-0x002e: r5 'overSample' I\l  0x0029\-0x0032: r10 'x' D\l  0x0006\-0x003a: r3 'c' D\l  0x003c\-0x0047: r14 'a' D\l  0x0004\-0x0058: r1 'k' D\l  0x0047\-0x005a: r19 'a' D\l  0x0045\-0x005e: r3 'avgV' D\l  0x005e\-0x0063: r19 'avgV' D\l  0x005a\-0x0065: r11 'a' D\l  0x005c\-0x009c: r1 'dv' D\l  0x0063\-0x009c: r3 'avgV' D\l  0x004f\-0x009c: r14 'avgX' D\l  0x0065\-0x009c: r19 'a' D\l  0x0032\-0x009c: r26 'x' D\l  0x0021\-0x00a6: r8 'i' I\l  0x002e\-0x00a6: r16 'overSample' I\l  0x003a\-0x00a6: r17 'c' D\l  0x0058\-0x00a6: r23 'k' D\l  0x00a6\-0x00a6: r1 'k' D\l  0x00a6\-0x00a6: r3 'c' D\l  0x00a6\-0x00a6: r5 'overSample' I\l  0x0020\-0x00a6: r6 'dt' D\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_41;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_43;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_44;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_45;
Node_38 -> Node_42;
Node_42 -> Node_39;
Node_39 -> Node_26;
Node_45 -> Node_39;
Node_44 -> Node_39;
Node_43 -> Node_39;
Node_41 -> Node_40;
Node_40 -> Node_24;
}

