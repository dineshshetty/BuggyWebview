digraph "CFG forandroidx.constraintlayout.core.motion.utils.VelocityMatrix.setRotationVelocity(Landroidx\/constraintlayout\/core\/motion\/utils\/SplineSet;F)V" {
Node_6 [shape=record,label="{6\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0000|0x0000: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('rot' androidx.constraintlayout.core.motion.utils.SplineSet)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:?  (LINE:34)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0002|0x0002: INVOKE  (r0 I:float) = \l  (r2 I:androidx.constraintlayout.core.motion.utils.SplineSet A[D('rot' androidx.constraintlayout.core.motion.utils.SplineSet)])\l  (r3 I:float A[D('position' float)])\l type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.SplineSet.getSlope(float):float A[MD:(float):float (m)] (LINE:35)\l0x0006: IPUT  (r0 I:float), (r1 I:androidx.constraintlayout.core.motion.utils.VelocityMatrix) androidx.constraintlayout.core.motion.utils.VelocityMatrix.mDRotate float \l0x0008: INVOKE  (r0 I:float) = \l  (r2 I:androidx.constraintlayout.core.motion.utils.SplineSet A[D('rot' androidx.constraintlayout.core.motion.utils.SplineSet)])\l  (r3 I:float A[D('position' float)])\l type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.SplineSet.get(float):float A[MD:(float):float (m)] (LINE:36)\l0x000c: IPUT  (r0 I:float), (r1 I:androidx.constraintlayout.core.motion.utils.VelocityMatrix) androidx.constraintlayout.core.motion.utils.VelocityMatrix.mRotate float \l}"];
Node_10 [shape=record,label="{10\:\ 0x000e|RETURN\lORIG_RETURN\l|0x000e: RETURN    (LINE:38)\l}"];
Node_7 [shape=record,label="{7\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|0x000e: RETURN   A[SYNTHETIC] (LINE:38)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.VelocityMatrix.setRotationVelocity((r1 'this' I:androidx.constraintlayout.core.motion.utils.VelocityMatrix A[IMMUTABLE_TYPE, THIS]), (r2 I:androidx.constraintlayout.core.motion.utils.SplineSet A[D('rot' androidx.constraintlayout.core.motion.utils.SplineSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:float A[D('position' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0000 \-\> B:10:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000e: r2 'rot' Landroidx\/constraintlayout\/core\/motion\/utils\/SplineSet;\l  \-1 \-0x000e: r3 'position' F\l}"];
MethodNode -> Node_6;Node_6 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_7;
Node_11 -> Node_7;
}

