digraph "CFG forandroidx.constraintlayout.core.motion.utils.VelocityMatrix.applyTransform(FFII[F)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|r4 = r21[0]\lr6 = r21[1]\lfloat r8 = (r17 \- 0.5f) * 2.0f\lfloat r7 = (r18 \- 0.5f) * 2.0f\lfloat r4 = r4 + r16.mDTranslateX\lfloat r6 = r6 + r16.mDTranslateY\lfloat r4 = r4 + (r16.mDScaleX * r8)\lfloat r6 = r6 + (r16.mDScaleY * r7)\lfloat r9 = (float) java.lang.Math.toRadians((double) r16.mRotate)\lfloat r10 = (float) java.lang.Math.toRadians((double) r16.mDRotate)\lfloat r4 = r4 + (((float) ((((double) (((float) (\-r19)) * r8)) * java.lang.Math.sin((double) r9)) \- (((double) (((float) r20) * r7)) * java.lang.Math.cos((double) r9)))) * r10)\lr21[0] = r4\lr21[1] = r6 + (((float) ((((double) (((float) r19) * r8)) * java.lang.Math.cos((double) r9)) \- (((double) (((float) r20) * r7)) * java.lang.Math.sin((double) r9)))) * r10)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0076|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.VelocityMatrix.applyTransform((r16v0 'this' androidx.constraintlayout.core.motion.utils.VelocityMatrix A[IMMUTABLE_TYPE, THIS]), (r17v0 'locationX' float A[D('locationX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'locationY' float A[D('locationY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'width' int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'height' int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'mAnchorDpDt' float[] A[D('mAnchorDpDt' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

