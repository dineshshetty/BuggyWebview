digraph "CFG forandroidx.constraintlayout.core.motion.utils.LinearCurveFit.getPos(D[D)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY])  (LINE:105)\l0x0002: IGET  (r1 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mT double[] \l0x0004: ARRAY_LENGTH  (r2 I:int) = (r1 I:??[]) \l0x0005: IGET  (r3 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:106)\l0x0007: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]) \l0x000a: ARRAY_LENGTH  (r3 I:int) = (r3 I:??[]) \l0x000b: IGET  (r5 I:boolean) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mExtrapolate boolean  (LINE:107)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0069 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: AGET  (r5 I:??[long, double]) = (r1 I:??[long, double][]), (r4 I:??[int, short, byte, char])  (LINE:108)\l0x0011: CMP_G  (r7 I:int) = (r18 I:double A[D('t' double)]), (r5 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r7 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:10:0x0038 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: AGET  (r5 I:??[long, double]) = (r1 I:??[long, double][]), (r4 I:??[int, short, byte, char])  (LINE:109)\l0x0017: IGET  (r1 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mSlopeTemp double[] \l0x0019: INVOKE  (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit), (r5 I:double), (r1 I:double[]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.LinearCurveFit.getSlope(double, double[]):void A[MD:(double, double[]):void (m)]\l0x001c: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:110)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|LOOP_START\lLOOP:0: B:7:0x001d\-\>B:8:0x001f\l|0x001d: IF  (r1 I:??[int, byte, short, char] A[D('j' int)]) \>= (r3 I:??[int, byte, short, char] A[D('dim' int)])  \-\> B:44:0x0037 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|LOOP_END\lLOOP:0: B:7:0x001d\-\>B:8:0x001f\l|0x001f: IGET  (r5 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:111)\l0x0021: AGET  (r5 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]) \l0x0023: AGET  (r6 I:??[long, double]) = (r5 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('j' int)]) \l0x0025: IGET  (r5 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mT double[] \l0x0027: AGET  (r8 I:??[long, double]) = (r5 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l0x0029: ARITH  (r8 I:double) = (r18 I:double A[D('t' double)]) \- (r8 I:double) \l0x002b: IGET  (r5 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mSlopeTemp double[] \l0x002d: AGET  (r10 I:??[long, double]) = (r5 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('j' int)]) \l0x002f: ARITH  (r8 I:double) = (r8 I:double) * (r10 I:double) \l0x0031: ARITH  (r6 I:double) = (r6 I:double) + (r8 I:double) \l0x0032: APUT  (r20 I:??[long, double][] A[D('v' double[])]), (r1 I:??[int, short, byte, char] A[D('j' int)]), (r6 I:??[long, double]) \l0x0034: ARITH  (r1 I:int) = (r1 I:int A[D('j' int)]) + (1 int)  (LINE:110)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0037|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|RETURN\l|0x0037: RETURN    (LINE:113)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: ARITH  (r4 I:int) = (r2 I:int A[D('n' int)]) + (\-1 int)  (LINE:115)\l0x003a: AGET  (r4 I:??[long, double]) = (r1 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l0x003c: CMP_L  (r6 I:int) = (r18 I:double A[D('t' double)]), (r4 I:double) \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|0x003e: IF  (r6 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:28:0x0097 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: ARITH  (r4 I:int) = (r2 I:int A[D('n' int)]) + (\-1 int)  (LINE:116)\l0x0042: AGET  (r4 I:??[long, double]) = (r1 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l0x0044: IGET  (r1 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mSlopeTemp double[] \l0x0046: INVOKE  (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit), (r4 I:double), (r1 I:double[]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.LinearCurveFit.getSlope(double, double[]):void A[MD:(double, double[]):void (m)]\l0x0049: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:117)\l}"];
Node_13 [shape=record,label="{13\:\ 0x004a|LOOP_START\lLOOP:1: B:13:0x004a\-\>B:14:0x004c\l|0x004a: IF  (r1 I:??[int, byte, short, char] A[D('j' int)]) \>= (r3 I:??[int, byte, short, char] A[D('dim' int)])  \-\> B:45:0x0068 \l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|LOOP_END\lLOOP:1: B:13:0x004a\-\>B:14:0x004c\l|0x004c: IGET  (r4 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:118)\l0x004e: ARITH  (r5 I:int) = (r2 I:int A[D('n' int)]) + (\-1 int) \l0x0050: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]) \l0x0052: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('j' int)]) \l0x0054: IGET  (r4 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mT double[] \l0x0056: ARITH  (r7 I:int) = (r2 I:int A[D('n' int)]) + (\-1 int) \l0x0058: AGET  (r7 I:??[long, double]) = (r4 I:??[long, double][]), (r7 I:??[int, short, byte, char]) \l0x005a: ARITH  (r7 I:double) = (r18 I:double A[D('t' double)]) \- (r7 I:double) \l0x005c: IGET  (r4 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mSlopeTemp double[] \l0x005e: AGET  (r9 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('j' int)]) \l0x0060: ARITH  (r7 I:double) = (r7 I:double) * (r9 I:double) \l0x0062: ARITH  (r5 I:double) = (r5 I:double) + (r7 I:double) \l0x0063: APUT  (r20 I:??[long, double][] A[D('v' double[])]), (r1 I:??[int, short, byte, char] A[D('j' int)]), (r5 I:??[long, double]) \l0x0065: ARITH  (r1 I:int) = (r1 I:int A[D('j' int)]) + (1 int)  (LINE:117)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0068|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0068|RETURN\l|0x0068: RETURN    (LINE:120)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0097|0x0097: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:137)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0098|LOOP_START\lLOOP:2: B:29:0x0098\-\>B:42:0x00e5\l|0x0098: ARITH  (r4 I:int) = (r2 I:int A[D('n' int)]) + (\-1 int) \l}"];
Node_30 [shape=record,label="{30\:\ 0x009a|0x009a: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:47:0x00e8 \l}"];
Node_31 [shape=record,label="{31\:\ 0x009c|0x009c: IGET  (r4 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mT double[]  (LINE:138)\l0x009e: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('i' int)]) \l0x00a0: CMP_L  (r4 I:int) = (r18 I:double A[D('t' double)]), (r5 I:double) \l}"];
Node_32 [shape=record,label="{32\:\ 0x00a2|0x00a2: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00b2 \l}"];
Node_33 [shape=record,label="{33\:\ 0x00a4|0x00a4: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:139)\l}"];
Node_34 [shape=record,label="{34\:\ 0x00a5|LOOP_START\lLOOP:3: B:34:0x00a5\-\>B:35:0x00a7\l|0x00a5: IF  (r4 I:??[int, byte, short, char] A[D('j' int)]) \>= (r3 I:??[int, byte, short, char] A[D('dim' int)])  \-\> B:48:0x00b2 \l}"];
Node_35 [shape=record,label="{35\:\ 0x00a7|LOOP_END\lLOOP:3: B:34:0x00a5\-\>B:35:0x00a7\l|0x00a7: IGET  (r5 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:140)\l0x00a9: AGET  (r5 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char] A[D('i' int)]) \l0x00ab: AGET  (r6 I:??[long, double]) = (r5 I:??[long, double][]), (r4 I:??[int, short, byte, char] A[D('j' int)]) \l0x00ad: APUT  (r20 I:??[long, double][] A[D('v' double[])]), (r4 I:??[int, short, byte, char] A[D('j' int)]), (r6 I:??[long, double]) \l0x00af: ARITH  (r4 I:int) = (r4 I:int A[D('j' int)]) + (1 int)  (LINE:139)\l}"];
Node_48 [shape=record,label="{48\:\ 0x00b2|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x00b2|0x00b2: IGET  (r4 I:double[] A[D('j' int)]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mT double[]  (LINE:143)\l0x00b4: ARITH  (r5 I:int) = (r1 I:int A[D('i' int)]) + (1 int) \l0x00b6: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r5 I:??[int, short, byte, char]) \l0x00b8: CMP_G  (r7 I:int) = (r18 I:double A[D('t' double)]), (r5 I:double) \l}"];
Node_37 [shape=record,label="{37\:\ 0x00ba|0x00ba: IF  (r7 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:42:0x00e5 \l}"];
Node_42 [shape=record,label="{42\:\ 0x00e5|LOOP_END\lLOOP:2: B:29:0x0098\-\>B:42:0x00e5\l|0x00e5: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:137)\l}"];
Node_46 [shape=record,label="{46\:\ 0x00bc|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x00bc|0x00bc: ARITH  (r5 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:144)\l0x00be: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r5 I:??[int, short, byte, char]) \l0x00c0: AGET  (r7 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('i' int)]) \l0x00c2: ARITH  (r5 I:double) = (r5 I:double) \- (r7 I:double) \l0x00c3: AGET  (r7 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('i' int)])  (LINE:145)\l0x00c5: ARITH  (r7 I:double) = (r18 I:double A[D('t' double)]) \- (r7 I:double) \l0x00c7: ARITH  (r7 I:double) = (r7 I:double) \/ (r5 I:double A[D('h' double)]) \l0x00c8: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:146)\l}"];
Node_39 [shape=record,label="{39\:\ 0x00c9|LOOP_START\lLOOP:4: B:39:0x00c9\-\>B:40:0x00cb\l|0x00c9: IF  (r4 I:??[int, byte, short, char] A[D('j' int)]) \>= (r3 I:??[int, byte, short, char] A[D('dim' int)])  \-\> B:49:0x00e4 \l}"];
Node_40 [shape=record,label="{40\:\ 0x00cb|LOOP_END\lLOOP:4: B:39:0x00c9\-\>B:40:0x00cb\l|0x00cb: IGET  (r9 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:147)\l0x00cd: AGET  (r10 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char] A[D('i' int)]) \l0x00cf: AGET  (r11 I:??[long, double]) = (r10 I:??[long, double][]), (r4 I:??[int, short, byte, char] A[D('j' int)]) \l0x00d1: ARITH  (r10 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:148)\l0x00d3: AGET  (r9 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY][]), (r10 I:??[int, short, byte, char]) \l0x00d5: AGET  (r13 I:??[long, double]) = (r9 I:??[long, double][]), (r4 I:??[int, short, byte, char] A[D('j' int)]) \l0x00d7: CONST  (r9 I:??[long, double]) = (4607182418800017408(0x3ff0000000000000, double:1.0) ??[long, double])  (LINE:150)\l0x00d9: ARITH  (r9 I:double) = (r9 I:double) \- (r7 I:double A[D('x' double)]) \l0x00da: ARITH  (r9 I:double) = (r9 I:double) * (r11 I:double A[D('y1' double)]) \l0x00dc: ARITH  (r15 I:double) = (r13 I:double A[D('y2' double)]) * (r7 I:double A[D('x' double)]) \l0x00de: ARITH  (r9 I:double) = (r9 I:double) + (r15 I:double) \l0x00df: APUT  (r20 I:??[long, double][] A[D('v' double[])]), (r4 I:??[int, short, byte, char] A[D('j' int)]), (r9 I:??[long, double]) \l0x00e1: ARITH  (r4 I:int) = (r4 I:int A[D('j' int)]) + (1 int)  (LINE:146)\l}"];
Node_49 [shape=record,label="{49\:\ 0x00e4|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x00e4|RETURN\l|0x00e4: RETURN    (LINE:152)\l}"];
Node_47 [shape=record,label="{47\:\ 0x00e8|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x00e8|RETURN\l|0x00e8: RETURN    (LINE:155)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0069|0x0069: AGET  (r5 I:??[long, double]) = (r1 I:??[long, double][]), (r4 I:??[int, short, byte, char])  (LINE:123)\l0x006b: CMP_G  (r7 I:int) = (r18 I:double A[D('t' double)]), (r5 I:double) \l}"];
Node_17 [shape=record,label="{17\:\ 0x006d|0x006d: IF  (r7 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:22:0x007e \l}"];
Node_18 [shape=record,label="{18\:\ 0x006f|0x006f: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:124)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0070|LOOP_START\lLOOP:5: B:19:0x0070\-\>B:20:0x0072\l|0x0070: IF  (r1 I:??[int, byte, short, char] A[D('j' int)]) \>= (r3 I:??[int, byte, short, char] A[D('dim' int)])  \-\> B:50:0x007d \l}"];
Node_20 [shape=record,label="{20\:\ 0x0072|LOOP_END\lLOOP:5: B:19:0x0070\-\>B:20:0x0072\l|0x0072: IGET  (r5 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:125)\l0x0074: AGET  (r5 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]) \l0x0076: AGET  (r6 I:??[long, double]) = (r5 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('j' int)]) \l0x0078: APUT  (r20 I:??[long, double][] A[D('v' double[])]), (r1 I:??[int, short, byte, char] A[D('j' int)]), (r6 I:??[long, double]) \l0x007a: ARITH  (r1 I:int) = (r1 I:int A[D('j' int)]) + (1 int)  (LINE:124)\l}"];
Node_50 [shape=record,label="{50\:\ 0x007d|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x007d|RETURN\l|0x007d: RETURN    (LINE:127)\l}"];
Node_22 [shape=record,label="{22\:\ 0x007e|0x007e: ARITH  (r4 I:int) = (r2 I:int A[D('n' int)]) + (\-1 int)  (LINE:129)\l0x0080: AGET  (r4 I:??[long, double]) = (r1 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l0x0082: CMP_L  (r1 I:int) = (r18 I:double A[D('t' double)]), (r4 I:double) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0084|0x0084: IF  (r1 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:28:0x0097 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0086|0x0086: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:130)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0087|LOOP_START\lLOOP:6: B:25:0x0087\-\>B:26:0x0089\l|0x0087: IF  (r1 I:??[int, byte, short, char] A[D('j' int)]) \>= (r3 I:??[int, byte, short, char] A[D('dim' int)])  \-\> B:51:0x0096 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0089|LOOP_END\lLOOP:6: B:25:0x0087\-\>B:26:0x0089\l|0x0089: IGET  (r4 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:131)\l0x008b: ARITH  (r5 I:int) = (r2 I:int A[D('n' int)]) + (\-1 int) \l0x008d: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]) \l0x008f: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('j' int)]) \l0x0091: APUT  (r20 I:??[long, double][] A[D('v' double[])]), (r1 I:??[int, short, byte, char] A[D('j' int)]), (r5 I:??[long, double]) \l0x0093: ARITH  (r1 I:int) = (r1 I:int A[D('j' int)]) + (1 int)  (LINE:130)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0096|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0096|RETURN\l|0x0096: RETURN    (LINE:133)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.LinearCurveFit.getPos((r17 'this' I:androidx.constraintlayout.core.motion.utils.LinearCurveFit A[IMMUTABLE_TYPE, THIS]), (r18 I:double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:double[] A[D('v' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:8:0x001f \-\> B:7:0x001d, BACK_EDGE: B:14:0x004c \-\> B:13:0x004a, CROSS_EDGE: B:15:0x0068 \-\> B:1:?, BACK_EDGE: B:35:0x00a7 \-\> B:34:0x00a5, BACK_EDGE: B:40:0x00cb \-\> B:39:0x00c9, CROSS_EDGE: B:41:0x00e4 \-\> B:1:?, BACK_EDGE: B:42:0x00e5 \-\> B:29:0x0098, CROSS_EDGE: B:32:0x00a2 \-\> B:36:0x00b2, CROSS_EDGE: B:43:0x00e8 \-\> B:1:?, BACK_EDGE: B:20:0x0072 \-\> B:19:0x0070, CROSS_EDGE: B:21:0x007d \-\> B:1:?, BACK_EDGE: B:26:0x0089 \-\> B:25:0x0087, CROSS_EDGE: B:27:0x0096 \-\> B:1:?, CROSS_EDGE: B:23:0x0084 \-\> B:28:0x0097\lDebug Info:\l  0x001d\-0x0037: r1 'j' I\l  0x004a\-0x0068: r1 'j' I\l  0x0070\-0x007d: r1 'j' I\l  0x0087\-0x0096: r1 'j' I\l  0x00a5\-0x00b2: r4 'j' I\l  0x00d1\-0x00e1: r11 'y1' D\l  0x00d7\-0x00e1: r13 'y2' D\l  0x00c9\-0x00e4: r4 'j' I\l  0x00c3\-0x00e5: r5 'h' D\l  0x00c8\-0x00e5: r7 'x' D\l  0x0098\-0x00e8: r1 'i' I\l  0x0005\-0x00e8: r2 'n' I\l  0x000b\-0x00e8: r3 'dim' I\l  \-1 \-0x00e8: r18 't' D\l  \-1 \-0x00e8: r20 'v' [D\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, double[]):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_16;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_44;
Node_8 -> Node_7;
Node_44 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_28;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_45;
Node_14 -> Node_13;
Node_45 -> Node_15;
Node_15 -> Node_1;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_47;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_36;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_48;
Node_35 -> Node_34;
Node_48 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_42;
Node_37 -> Node_46[style=dashed];
Node_42 -> Node_29;
Node_46 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_49;
Node_40 -> Node_39;
Node_49 -> Node_41;
Node_41 -> Node_1;
Node_47 -> Node_43;
Node_43 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_50;
Node_20 -> Node_19;
Node_50 -> Node_21;
Node_21 -> Node_1;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_51;
Node_26 -> Node_25;
Node_51 -> Node_27;
Node_27 -> Node_1;
}

