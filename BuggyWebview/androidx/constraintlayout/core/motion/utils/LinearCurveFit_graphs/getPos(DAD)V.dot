digraph "CFG forandroidx.constraintlayout.core.motion.utils.LinearCurveFit.getPos(D[D)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|double[] r1 = r17.f28mT\lint r2 = r1.length\lint r3 = r17.f29mY[0].length\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if (r17.mExtrapolate == false) goto L38\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f}"];
Node_5 [shape=record,label="{5\:\ 0x0013|if ((r18 \> r1[0] ? 1 : (r18 == r1[0] ? 0 : \-1)) \> 0) goto L11\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|getSlope(r1[0], r17.mSlopeTemp)\lr1 = 0\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|LOOP_START\lLOOP:0: B:7:0x001d\-\>B:8:0x001f\lPHI: r1 \l  PHI: (r1v17 'j' int) = (r1v16 'j' int), (r1v18 'j' int) binds: [B:6:0x0015, B:8:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r3) goto L8\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|LOOP_END\lLOOP:0: B:7:0x001d\-\>B:8:0x001f\l|r20[r1] = r17.f29mY[0][r1] + ((r18 \- r17.f28mT[0]) * r17.mSlopeTemp[r1])\lint r1 = r1 + 1\l}"];
Node_44 [shape=record,label="{44\:\ 0x0037|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038}"];
Node_11 [shape=record,label="{11\:\ 0x003e|if ((r18 \> r1[r2 + (\-1)] ? 1 : (r18 == r1[r2 + (\-1)] ? 0 : \-1)) \< 0) goto L18\l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|getSlope(r1[r2 + (\-1)], r17.mSlopeTemp)\lr1 = 0\l}"];
Node_13 [shape=record,label="{13\:\ 0x004a|LOOP_START\lLOOP:1: B:13:0x004a\-\>B:14:0x004c\lPHI: r1 \l  PHI: (r1v13 'j' int) = (r1v12 'j' int), (r1v14 'j' int) binds: [B:12:0x0040, B:14:0x004c] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r3) goto L16\l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|LOOP_END\lLOOP:1: B:13:0x004a\-\>B:14:0x004c\l|r20[r1] = r17.f29mY[r2 + (\-1)][r1] + ((r18 \- r17.f28mT[r2 + (\-1)]) * r17.mSlopeTemp[r1])\lint r1 = r1 + 1\l}"];
Node_45 [shape=record,label="{45\:\ 0x0068|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0068|RETURN\l|return\l}"];
Node_28 [shape=record,label="{28\:\ 0x0097|r1 = 0\l}"];
Node_29 [shape=record,label="{29\:\ 0x0098|LOOP_START\lLOOP:2: B:29:0x0098\-\>B:42:0x00e5\lPHI: r1 \l  PHI: (r1v9 'i' int) = (r1v8 'i' int), (r1v10 'i' int) binds: [B:28:0x0097, B:42:0x00e5] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x009a|if (r1 \>= (r2 + (\-1))) goto L36\l}"];
Node_31 [shape=record,label="{31\:\ 0x009c}"];
Node_32 [shape=record,label="{32\:\ 0x00a2|if ((r18 \> r17.f28mT[r1] ? 1 : (r18 == r17.f28mT[r1] ? 0 : \-1)) != 0) goto L27\l}"];
Node_33 [shape=record,label="{33\:\ 0x00a4|r4 = 0\l}"];
Node_34 [shape=record,label="{34\:\ 0x00a5|LOOP_START\lLOOP:3: B:34:0x00a5\-\>B:35:0x00a7\lPHI: r4 \l  PHI: (r4v13 'j' int) = (r4v12 'j' int), (r4v14 'j' int) binds: [B:33:0x00a4, B:35:0x00a7] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \>= r3) goto L26\l}"];
Node_35 [shape=record,label="{35\:\ 0x00a7|LOOP_END\lLOOP:3: B:34:0x00a5\-\>B:35:0x00a7\l|r20[r4] = r17.f29mY[r1][r4]\lint r4 = r4 + 1\l}"];
Node_48 [shape=record,label="{48\:\ 0x00b2|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x00b2|double[] r4 = r17.f28mT\l}"];
Node_37 [shape=record,label="{37\:\ 0x00ba|if ((r18 \> r4[r1 + 1] ? 1 : (r18 == r4[r1 + 1] ? 0 : \-1)) \>= 0) goto L29\l}"];
Node_42 [shape=record,label="{42\:\ 0x00e5|LOOP_END\lLOOP:2: B:29:0x0098\-\>B:42:0x00e5\l|int r1 = r1 + 1\l}"];
Node_46 [shape=record,label="{46\:\ 0x00bc|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x00bc|double r5 = r4[r1 + 1] \- r4[r1]\ldouble r7 = (r18 \- r4[r1]) \/ r5\lr4 = 0\l}"];
Node_39 [shape=record,label="{39\:\ 0x00c9|LOOP_START\lLOOP:4: B:39:0x00c9\-\>B:40:0x00cb\lPHI: r4 \l  PHI: (r4v10 'j' int) = (r4v9 'j' int), (r4v11 'j' int) binds: [B:38:0x00bc, B:40:0x00cb] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \>= r3) goto L34\l}"];
Node_40 [shape=record,label="{40\:\ 0x00cb|LOOP_END\lLOOP:4: B:39:0x00c9\-\>B:40:0x00cb\l|double[][] r9 = r17.f29mY\lr11 = r9[r1][r4]\lr13 = r9[r1 + 1][r4]\lr20[r4] = ((1.0d \- r7) * r11) + (r13 * r7)\lint r4 = r4 + 1\l}"];
Node_49 [shape=record,label="{49\:\ 0x00e4|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x00e4|RETURN\l|return\l}"];
Node_47 [shape=record,label="{47\:\ 0x00e8|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x00e8|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ 0x0069}"];
Node_17 [shape=record,label="{17\:\ 0x006d|if ((r18 \> r1[0] ? 1 : (r18 == r1[0] ? 0 : \-1)) \> 0) goto L45\l}"];
Node_18 [shape=record,label="{18\:\ 0x006f|r1 = 0\l}"];
Node_19 [shape=record,label="{19\:\ 0x0070|LOOP_START\lLOOP:5: B:19:0x0070\-\>B:20:0x0072\lPHI: r1 \l  PHI: (r1v6 'j' int) = (r1v5 'j' int), (r1v7 'j' int) binds: [B:18:0x006f, B:20:0x0072] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r3) goto L43\l}"];
Node_20 [shape=record,label="{20\:\ 0x0072|LOOP_END\lLOOP:5: B:19:0x0070\-\>B:20:0x0072\l|r20[r1] = r17.f29mY[0][r1]\lint r1 = r1 + 1\l}"];
Node_50 [shape=record,label="{50\:\ 0x007d|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x007d|RETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ 0x007e}"];
Node_23 [shape=record,label="{23\:\ 0x0084|if ((r18 \> r1[r2 + (\-1)] ? 1 : (r18 == r1[r2 + (\-1)] ? 0 : \-1)) \< 0) goto L18\l}"];
Node_24 [shape=record,label="{24\:\ 0x0086|r1 = 0\l}"];
Node_25 [shape=record,label="{25\:\ 0x0087|LOOP_START\lLOOP:6: B:25:0x0087\-\>B:26:0x0089\lPHI: r1 \l  PHI: (r1v3 'j' int) = (r1v2 'j' int), (r1v4 'j' int) binds: [B:24:0x0086, B:26:0x0089] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r3) goto L50\l}"];
Node_26 [shape=record,label="{26\:\ 0x0089|LOOP_END\lLOOP:6: B:25:0x0087\-\>B:26:0x0089\l|r20[r1] = r17.f29mY[r2 + (\-1)][r1]\lint r1 = r1 + 1\l}"];
Node_51 [shape=record,label="{51\:\ 0x0096|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0096|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.LinearCurveFit.getPos((r17v0 'this' androidx.constraintlayout.core.motion.utils.LinearCurveFit A[IMMUTABLE_TYPE, THIS]), (r18v0 't' double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'v' double[] A[D('v' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:8:0x001f \-\> B:7:0x001d, BACK_EDGE: B:14:0x004c \-\> B:13:0x004a, CROSS_EDGE: B:15:0x0068 \-\> B:1:?, BACK_EDGE: B:35:0x00a7 \-\> B:34:0x00a5, BACK_EDGE: B:40:0x00cb \-\> B:39:0x00c9, CROSS_EDGE: B:41:0x00e4 \-\> B:1:?, BACK_EDGE: B:42:0x00e5 \-\> B:29:0x0098, CROSS_EDGE: B:32:0x00a2 \-\> B:36:0x00b2, CROSS_EDGE: B:43:0x00e8 \-\> B:1:?, BACK_EDGE: B:20:0x0072 \-\> B:19:0x0070, CROSS_EDGE: B:21:0x007d \-\> B:1:?, BACK_EDGE: B:26:0x0089 \-\> B:25:0x0087, CROSS_EDGE: B:27:0x0096 \-\> B:1:?, CROSS_EDGE: B:23:0x0084 \-\> B:28:0x0097\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, double[]):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_16;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_44;
Node_8 -> Node_7;
Node_44 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_28;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_45;
Node_14 -> Node_13;
Node_45 -> Node_15;
Node_15 -> Node_1;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_47;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_36;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_48;
Node_35 -> Node_34;
Node_48 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_42;
Node_37 -> Node_46[style=dashed];
Node_42 -> Node_29;
Node_46 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_49;
Node_40 -> Node_39;
Node_49 -> Node_41;
Node_41 -> Node_1;
Node_47 -> Node_43;
Node_43 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_50;
Node_20 -> Node_19;
Node_50 -> Node_21;
Node_21 -> Node_1;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_51;
Node_26 -> Node_25;
Node_51 -> Node_27;
Node_27 -> Node_1;
}

