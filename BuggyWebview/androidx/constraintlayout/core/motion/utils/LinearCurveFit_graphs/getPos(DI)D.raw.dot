digraph "CFG forandroidx.constraintlayout.core.motion.utils.LinearCurveFit.getPos(DI)D" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY])  (LINE:211)\l0x0002: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('j' int)]) \l0x0004: IGET  (r2 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mT double[] \l0x0006: ARRAY_LENGTH  (r3 I:int) = (r2 I:??[]) \l0x0007: IGET  (r4 I:boolean) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mExtrapolate boolean  (LINE:212)\l0x0009: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0048 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: AGET  (r6 I:??[long, double]) = (r2 I:??[long, double][]), (r5 I:??[int, short, byte, char])  (LINE:213)\l0x000e: CMP_G  (r4 I:int) = (r19 I:double A[D('t' double)]), (r6 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IF  (r4 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:8:0x0026 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IGET  (r4 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:214)\l0x0014: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]) \l0x0016: AGET  (r6 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l0x0018: AGET  (r8 I:??[long, double]) = (r2 I:??[long, double][]), (r5 I:??[int, short, byte, char]) \l0x001a: ARITH  (r8 I:double) = (r19 I:double A[D('t' double)]) \- (r8 I:double) \l0x001c: AGET  (r4 I:??[long, double]) = (r2 I:??[long, double][]), (r5 I:??[int, short, byte, char]) \l0x001e: INVOKE  (r4 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit), (r4 I:double), (r1 I:int) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.LinearCurveFit.getSlope(double, int):double A[MD:(double, int):double (m)]\l0x0022: ARITH  (r8 I:double) = (r8 I:double) * (r4 I:double) \l0x0024: ARITH  (r6 I:double) = (r6 I:double) + (r8 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|RETURN\l|0x0025: RETURN  (r6 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: ARITH  (r4 I:int) = (r3 I:int A[D('n' int)]) + (\-1 int)  (LINE:216)\l0x0028: AGET  (r4 I:??[long, double]) = (r2 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l0x002a: CMP_L  (r6 I:int) = (r19 I:double A[D('t' double)]), (r4 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: IF  (r6 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:20:0x0066 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: IGET  (r4 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:217)\l0x0030: ARITH  (r5 I:int) = (r3 I:int A[D('n' int)]) + (\-1 int) \l0x0032: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]) \l0x0034: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l0x0036: ARITH  (r4 I:int) = (r3 I:int A[D('n' int)]) + (\-1 int) \l0x0038: AGET  (r7 I:??[long, double]) = (r2 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l0x003a: ARITH  (r7 I:double) = (r19 I:double A[D('t' double)]) \- (r7 I:double) \l0x003c: ARITH  (r4 I:int) = (r3 I:int A[D('n' int)]) + (\-1 int) \l0x003e: AGET  (r9 I:??[long, double]) = (r2 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l0x0040: INVOKE  (r9 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit), (r9 I:double), (r1 I:int) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.LinearCurveFit.getSlope(double, int):double A[MD:(double, int):double (m)]\l0x0044: ARITH  (r7 I:double) = (r7 I:double) * (r9 I:double) \l0x0046: ARITH  (r5 I:double) = (r5 I:double) + (r7 I:double) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|RETURN\l|0x0047: RETURN  (r5 I:double) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0066|0x0066: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:228)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0067|LOOP_START\lLOOP:0: B:21:0x0067\-\>B:31:0x00a4\l|0x0067: ARITH  (r4 I:int) = (r3 I:int A[D('n' int)]) + (\-1 int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0069|0x0069: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:36:0x00a7 \l}"];
Node_23 [shape=record,label="{23\:\ 0x006b|0x006b: IGET  (r4 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mT double[]  (LINE:229)\l0x006d: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x006f: CMP_L  (r7 I:int) = (r19 I:double A[D('t' double)]), (r5 I:double) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0071|0x0071: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x007a \l}"];
Node_27 [shape=record,label="{27\:\ 0x007a|0x007a: ARITH  (r5 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:232)\l0x007c: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r5 I:??[int, short, byte, char]) \l0x007e: CMP_G  (r7 I:int) = (r19 I:double A[D('t' double)]), (r5 I:double) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0080|0x0080: IF  (r7 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:31:0x00a4 \l}"];
Node_31 [shape=record,label="{31\:\ 0x00a4|LOOP_END\lLOOP:0: B:21:0x0067\-\>B:31:0x00a4\l|0x00a4: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:228)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0082|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0082|0x0082: ARITH  (r5 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:233)\l0x0084: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r5 I:??[int, short, byte, char]) \l0x0086: AGET  (r7 I:??[long, double]) = (r4 I:??[long, double][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x0088: ARITH  (r5 I:double) = (r5 I:double) \- (r7 I:double) \l0x0089: AGET  (r7 I:??[long, double]) = (r4 I:??[long, double][]), (r2 I:??[int, short, byte, char] A[D('i' int)])  (LINE:234)\l0x008b: ARITH  (r7 I:double) = (r19 I:double A[D('t' double)]) \- (r7 I:double) \l0x008d: ARITH  (r7 I:double) = (r7 I:double) \/ (r5 I:double A[D('h' double)]) \l0x008e: IGET  (r4 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:235)\l0x0090: AGET  (r9 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x0092: AGET  (r10 I:??[long, double]) = (r9 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l0x0094: ARITH  (r9 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:236)\l0x0096: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r9 I:??[int, short, byte, char]) \l0x0098: AGET  (r12 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l0x009a: CONST  (r14 I:??[long, double]) = (4607182418800017408(0x3ff0000000000000, double:1.0) ??[long, double])  (LINE:237)\l0x009c: ARITH  (r14 I:double) = (r14 I:double) \- (r7 I:double A[D('x' double)]) \l0x009d: ARITH  (r14 I:double) = (r14 I:double) * (r10 I:double A[D('y1' double)]) \l0x009f: ARITH  (r16 I:double) = (r12 I:double A[D('y2' double)]) * (r7 I:double A[D('x' double)]) \l0x00a1: ARITH  (r14 I:double) = (r14 I:double) + (r16 I:double) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00a3|RETURN\l|0x00a3: RETURN  (r14 I:double) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0073|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0073|0x0073: IGET  (r4 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:230)\l0x0075: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x0077: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0079|RETURN\l|0x0079: RETURN  (r5 I:double) \l}"];
Node_36 [shape=record,label="{36\:\ 0x00a7|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x00a7|RETURN\l|0x00a7: CONST  (r4 I:??[long, double]) = (0 ??[long, double])  (LINE:241)\l0x00a9: RETURN  (r4 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0048|0x0048: AGET  (r6 I:??[long, double]) = (r2 I:??[long, double][]), (r5 I:??[int, short, byte, char])  (LINE:220)\l0x004a: CMP_G  (r4 I:int) = (r19 I:double A[D('t' double)]), (r6 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x004c|0x004c: IF  (r4 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:16:0x0055 \l}"];
Node_14 [shape=record,label="{14\:\ 0x004e|0x004e: IGET  (r2 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:221)\l0x0050: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]) \l0x0052: AGET  (r4 I:??[long, double]) = (r2 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0054|RETURN\l|0x0054: RETURN  (r4 I:double) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0055|0x0055: ARITH  (r4 I:int) = (r3 I:int A[D('n' int)]) + (\-1 int)  (LINE:223)\l0x0057: AGET  (r4 I:??[long, double]) = (r2 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l0x0059: CMP_L  (r2 I:int) = (r19 I:double A[D('t' double)]), (r4 I:double) \l}"];
Node_17 [shape=record,label="{17\:\ 0x005b|0x005b: IF  (r2 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:20:0x0066 \l}"];
Node_18 [shape=record,label="{18\:\ 0x005d|0x005d: IGET  (r2 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:224)\l0x005f: ARITH  (r4 I:int) = (r3 I:int A[D('n' int)]) + (\-1 int) \l0x0061: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]) \l0x0063: AGET  (r4 I:??[long, double]) = (r2 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0065|RETURN\l|0x0065: RETURN  (r4 I:double) \l}"];
MethodNode[shape=record,label="{public double androidx.constraintlayout.core.motion.utils.LinearCurveFit.getPos((r18 'this' I:androidx.constraintlayout.core.motion.utils.LinearCurveFit A[IMMUTABLE_TYPE, THIS]), (r19 I:double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:int A[D('j' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0047 \-\> B:1:?, CROSS_EDGE: B:26:0x0079 \-\> B:1:?, CROSS_EDGE: B:30:0x00a3 \-\> B:1:?, BACK_EDGE: B:31:0x00a4 \-\> B:21:0x0067, CROSS_EDGE: B:33:0x00a9 \-\> B:1:?, CROSS_EDGE: B:15:0x0054 \-\> B:1:?, CROSS_EDGE: B:19:0x0065 \-\> B:1:?, CROSS_EDGE: B:17:0x005b \-\> B:20:0x0066\lDebug Info:\l  0x0089\-0x00a4: r5 'h' D\l  0x008e\-0x00a4: r7 'x' D\l  0x0094\-0x00a4: r10 'y1' D\l  0x009a\-0x00a4: r12 'y2' D\l  0x0067\-0x00a7: r2 'i' I\l  0x0007\-0x00a9: r3 'n' I\l  \-1 \-0x00a9: r19 't' D\l  \-1 \-0x00a9: r21 'j' I\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, int):double]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_20;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_36;
Node_23 -> Node_24;
Node_24 -> Node_27;
Node_24 -> Node_35[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_31;
Node_28 -> Node_34[style=dashed];
Node_31 -> Node_21;
Node_34 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_1;
Node_35 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_1;
Node_36 -> Node_32;
Node_32 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_1;
}

