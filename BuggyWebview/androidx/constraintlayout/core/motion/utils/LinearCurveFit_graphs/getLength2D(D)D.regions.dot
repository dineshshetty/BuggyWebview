digraph "CFG forandroidx.constraintlayout.core.motion.utils.LinearCurveFit.getLength2D(D)D" {
subgraph cluster_Region_1555939944 {
label = "R(1:(2:(1:3)|(2:5|(2:(1:7)|(1:(2:(1:11)|(3:12|(4:15|(1:28)(1:17)|18|(2:(1:27)|(1:(2:(2:24|25)|(1:22)))))|30))))))) | DECL_VAR: double px\l";
node [shape=record,color=blue];
subgraph cluster_Region_791449798 {
label = "R(2:(1:3)|(2:5|(2:(1:7)|(1:(2:(1:11)|(3:12|(4:15|(1:28)(1:17)|18|(2:(1:27)|(1:(2:(2:24|25)|(1:22)))))|30))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_42485986 {
label = "IF [B:3:0x000a] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|if (java.lang.Double.isNaN(r34.mTotalLength) == true) goto L3\l}"];
subgraph cluster_Region_983043411 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|RETURN\l|return 0.0d\l}"];
}
}
subgraph cluster_Region_552873175 {
label = "R(2:5|(2:(1:7)|(1:(2:(1:11)|(3:12|(4:15|(1:28)(1:17)|18|(2:(1:27)|(1:(2:(2:24|25)|(1:22)))))|30)))))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|double[] double[] r1 = r34.f28mT\lint int r4 = r1.length\l}"];
subgraph cluster_Region_142882538 {
label = "R(2:(1:7)|(1:(2:(1:11)|(3:12|(4:15|(1:28)(1:17)|18|(2:(1:27)|(1:(2:(2:24|25)|(1:22)))))|30))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_306196754 {
label = "IF [B:6:0x0015] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|if (r35 \<= r1[0]) goto L7\l}"];
subgraph cluster_Region_1139096988 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0017|RETURN\l|return 0.0d\l}"];
}
}
subgraph cluster_Region_57324122 {
label = "R(1:(2:(1:11)|(3:12|(4:15|(1:28)(1:17)|18|(2:(1:27)|(1:(2:(2:24|25)|(1:22)))))|30)))";
node [shape=record,color=blue];
subgraph cluster_Region_2044904945 {
label = "R(2:(1:11)|(3:12|(4:15|(1:28)(1:17)|18|(2:(1:27)|(1:(2:(2:24|25)|(1:22)))))|30))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_798502297 {
label = "IF [B:9:0x001e] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001e|if (r35 \>= r1[r4 \- 1]) goto L10\l}"];
subgraph cluster_Region_1358466881 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0022|RETURN\l|return r34.mTotalLength\l}"];
}
}
subgraph cluster_Region_776991962 {
label = "R(3:12|(4:15|(1:28)(1:17)|18|(2:(1:27)|(1:(2:(2:24|25)|(1:22)))))|30)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0023|double r6 = 0.0d\ldouble r8 = 0.0d\ldouble r10 = 0.0d\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_794617714 {
label = "LOOP:0: (4:15|(1:28)(1:17)|18|(2:(1:27)|(1:(2:(2:24|25)|(1:22)))))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002c|if (r1 \< (r4 \- 1)) goto L15\l}"];
subgraph cluster_Region_1243171456 {
label = "R(4:15|(1:28)(1:17)|18|(2:(1:27)|(1:(2:(2:24|25)|(1:22)))))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002e|double[][] double[][] r12 = r34.f29mY\ldouble r14 = r12[r1][0]\ldouble r16 = r12[r1][1]\l}"];
subgraph cluster_IfRegion_1946882961 {
label = "IF [B:16:0x0039] THEN: R(1:28) ELSE: R(1:17)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0039|if (r1 \<= 0) goto L28\l}"];
subgraph cluster_Region_948771620 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0047|r20 = r14\l}"];
}
subgraph cluster_Region_1024759968 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x003b|r20 = r14\lr6 += java.lang.Math.hypot(r14 \- r8, r16 \- r10)\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x0049|PHI: r6 r20 \l  PHI: (r6v5 'sum' double) = (r6v4 'sum' double), (r6v7 'sum' double) binds: [B:18:0x0047, B:17:0x003b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r20v1 'px' double) = (r20v0 'px' double), (r20v2 'px' double) binds: [B:18:0x0047, B:17:0x003b] A[DONT_GENERATE, DONT_INLINE]\l|r8 = r20\lr10 = r16\ldouble[] double[] r2 = r34.f28mT\l}"];
subgraph cluster_Region_974864671 {
label = "R(2:(1:27)|(1:(2:(2:24|25)|(1:22))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1671289054 {
label = "IF [B:20:0x0053] THEN: R(1:27) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0053|if (r35 == r2[r1]) goto L26\l}"];
subgraph cluster_Region_1401855614 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0055|RETURN\l|return r6\l}"];
}
}
subgraph cluster_Region_1815469156 {
label = "R(1:(2:(2:24|25)|(1:22)))";
node [shape=record,color=blue];
subgraph cluster_Region_51855710 {
label = "R(2:(2:24|25)|(1:22))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1674625895 {
label = "IF [B:23:0x005c] THEN: R(2:24|25) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x005c|if (r35 \< r2[r1 + 1]) goto L23\l}"];
subgraph cluster_Region_463574026 {
label = "R(2:24|25)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x005e|double double r13 = r2[r1 + 1] \- r2[r1]\ldouble double r2 = (r35 \- r2[r1]) \/ r13\ldouble[][] double[][] r15 = r34.f29mY\ldouble r22 = r15[r1][0]\ldouble r24 = r15[r1 + 1][0]\ldouble r18 = r15[r1][1]\ldouble r26 = r15[r1 + 1][1]\l}"];
Node_25 [shape=record,label="{25\:\ 0x00a0|RETURN\l|return r6 + java.lang.Math.hypot(r16 \- (((1.0d \- r2) * r18) + (r26 * r2)), r20 \- (((1.0d \- r2) * r22) + (r24 * r2)))\l}"];
}
}
subgraph cluster_Region_1406212859 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x00a1|LOOP_END\lLOOP:0: B:13:0x002a\-\>B:26:0x00a1\l|r1++\l}"];
}
}
}
}
}
}
Node_27 [shape=record,label="{27\:\ 0x00a7|RETURN\l|return 0.0d\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0018}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0020}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002a|LOOP_START\lLOOP:0: B:13:0x002a\-\>B:26:0x00a1\lPHI: r1 r6 r8 r10 \l  PHI: (r1v5 'i' int) = (r1v4 'i' int), (r1v7 'i' int) binds: [B:12:0x0023, B:26:0x00a1] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v4 'sum' double) = (r6v3 'sum' double), (r6v5 'sum' double) binds: [B:12:0x0023, B:26:0x00a1] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v2 'last_x' double) = (r8v1 'last_x' double), (r8v3 'last_x' double) binds: [B:12:0x0023, B:26:0x00a1] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 'last_y' double) = (r10v0 'last_y' double), (r10v2 'last_y' double) binds: [B:12:0x0023, B:26:0x00a1] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0056}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x005e|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0055|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x00a7|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private double androidx.constraintlayout.core.motion.utils.LinearCurveFit.getLength2D((r34v0 'this' androidx.constraintlayout.core.motion.utils.LinearCurveFit A[IMMUTABLE_TYPE, THIS]), (r35v0 't' double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0017 \-\> B:1:?, CROSS_EDGE: B:11:0x0022 \-\> B:1:?, CROSS_EDGE: B:21:0x0055 \-\> B:1:?, CROSS_EDGE: B:25:0x00a0 \-\> B:1:?, BACK_EDGE: B:26:0x00a1 \-\> B:13:0x002a, CROSS_EDGE: B:18:0x0047 \-\> B:19:0x0049, CROSS_EDGE: B:28:0x00a9 \-\> B:1:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_1;
Node_9 -> Node_10;
Node_9 -> Node_12[style=dashed];
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_14 -> Node_31[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_22[style=dashed];
Node_20 -> Node_29;
Node_21 -> Node_1;
Node_23 -> Node_26[style=dashed];
Node_23 -> Node_30;
Node_24 -> Node_25;
Node_25 -> Node_1;
Node_26 -> Node_13;
Node_27 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_22 -> Node_23;
Node_30 -> Node_24;
Node_29 -> Node_21;
Node_31 -> Node_27;
}

