digraph "CFG forandroidx.constraintlayout.core.motion.utils.LinearCurveFit.getSlope(DI)D" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY])  (LINE:270)\l0x0002: IGET  (r1 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mT double[] \l0x0004: ARRAY_LENGTH  (r2 I:int) = (r1 I:??[]) \l0x0005: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:272)\l0x0006: AGET  (r4 I:??[long, double]) = (r1 I:??[long, double][]), (r3 I:??[int, short, byte, char]) \l0x0008: CMP_G  (r6 I:int) = (r18 I:double A[D('t' double)]), (r4 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r6 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: AGET  (r3 I:??[long, double]) = (r1 I:??[long, double][]), (r3 I:??[int, short, byte, char])  (LINE:273)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:277)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|LOOP_START\lLOOP:0: B:10:0x001f\-\>B:16:0x0049\l|0x001f: ARITH  (r5 I:int) = (r2 I:int A[D('n' int)]) + (\-1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r5 I:??[int, byte, short, char])  \-\> B:19:0x004c \l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|0x0023: IGET  (r5 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mT double[]  (LINE:278)\l0x0025: ARITH  (r6 I:int) = (r1 I:int A[D('i' int)]) + (1 int) \l0x0027: AGET  (r6 I:??[long, double]) = (r5 I:??[long, double][]), (r6 I:??[int, short, byte, char]) \l0x0029: CMP_G  (r8 I:int) = (r3 I:double A[D('t' double)]), (r6 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: IF  (r8 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:16:0x0049 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|LOOP_END\lLOOP:0: B:10:0x001f\-\>B:16:0x0049\l|0x0049: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:277)\l}"];
Node_20 [shape=record,label="{20\:\ 0x002d|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|0x002d: ARITH  (r6 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:279)\l0x002f: AGET  (r6 I:??[long, double]) = (r5 I:??[long, double][]), (r6 I:??[int, short, byte, char]) \l0x0031: AGET  (r8 I:??[long, double]) = (r5 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('i' int)]) \l0x0033: ARITH  (r6 I:double) = (r6 I:double) \- (r8 I:double) \l0x0034: AGET  (r8 I:??[long, double]) = (r5 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('i' int)])  (LINE:280)\l0x0036: ARITH  (r8 I:double) = (r3 I:double A[D('t' double)]) \- (r8 I:double) \l0x0038: ARITH  (r8 I:double) = (r8 I:double) \/ (r6 I:double A[D('h' double)]) \l0x0039: IGET  (r5 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:281)\l0x003b: AGET  (r10 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char] A[D('i' int)]) \l0x003d: AGET  (r11 I:??[long, double]) = (r10 I:??[long, double][]), (r20 I:??[int, short, byte, char] A[D('j' int)]) \l0x003f: ARITH  (r10 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:282)\l0x0041: AGET  (r5 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][]), (r10 I:??[int, short, byte, char]) \l0x0043: AGET  (r13 I:??[long, double]) = (r5 I:??[long, double][]), (r20 I:??[int, short, byte, char] A[D('j' int)]) \l0x0045: ARITH  (r15 I:double) = (r13 I:double A[D('y2' double)]) \- (r11 I:double A[D('y1' double)])  (LINE:283)\l0x0047: ARITH  (r15 I:double) = (r15 I:double) \/ (r6 I:double A[D('h' double)]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|RETURN\l|0x0048: RETURN  (r15 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x004c|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x004c|RETURN\l|0x004c: CONST  (r5 I:??[long, double]) = (0 ??[long, double])  (LINE:286)\l0x004e: RETURN  (r5 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: ARITH  (r3 I:int A[D('t' double)]) = (r2 I:int A[D('n' int)]) + (\-1 int)  (LINE:274)\l0x0011: AGET  (r3 I:??[long, double]) = (r1 I:??[long, double][]), (r3 I:??[int, short, byte, char]) \l0x0013: CMP_L  (r5 I:int) = (r18 I:double A[D('t' double)]), (r3 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r5 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:8:0x001c \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: ARITH  (r3 I:int) = (r2 I:int A[D('n' int)]) + (\-1 int)  (LINE:275)\l0x0019: AGET  (r3 I:??[long, double]) = (r1 I:??[long, double][]), (r3 I:??[int, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: MOVE  (r3 I:??[long, double] A[D('t' double)]) = (r18 I:??[long, double] A[D('t' double)])  (LINE:274)\l}"];
MethodNode[shape=record,label="{public double androidx.constraintlayout.core.motion.utils.LinearCurveFit.getSlope((r17 'this' I:androidx.constraintlayout.core.motion.utils.LinearCurveFit A[IMMUTABLE_TYPE, THIS]), (r18 I:double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[D('j' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:16:0x0049 \-\> B:10:0x001f, CROSS_EDGE: B:18:0x004e \-\> B:1:?, CROSS_EDGE: B:7:0x0017 \-\> B:9:0x001e, CROSS_EDGE: B:8:0x001c \-\> B:9:0x001e\lDebug Info:\l  \-1 \-0x000e: r18 't' D\l  0x000e\-0x000f: r3 't' D\l  0x000f\-0x001b: r18 't' D\l  0x001b\-0x001c: r3 't' D\l  0x001c\-0x001e: r18 't' D\l  0x0034\-0x0049: r6 'h' D\l  0x0039\-0x0049: r8 'x' D\l  0x003f\-0x0049: r11 'y1' D\l  0x0045\-0x0049: r13 'y2' D\l  0x001f\-0x004c: r1 'i' I\l  0x0005\-0x004e: r2 'n' I\l  0x001e\-0x004e: r3 't' D\l  \-1 \-0x004e: r20 'j' I\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getSlope(double, int):double]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_16;
Node_13 -> Node_20[style=dashed];
Node_16 -> Node_10;
Node_20 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_19 -> Node_17;
Node_17 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
}

