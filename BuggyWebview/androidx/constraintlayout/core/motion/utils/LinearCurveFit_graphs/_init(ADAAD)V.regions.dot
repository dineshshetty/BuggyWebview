digraph "CFG forandroidx.constraintlayout.core.motion.utils.LinearCurveFit.\<init\>([D[[D)V" {
subgraph cluster_Region_1211235102 {
label = "R(2:1|(1:(3:3|(3:6|(1:11)(1:8)|10)|14))) | DECL_VAR: int dim, double px\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|r21.mTotalLength = Double.NaN\lint int r3 = r22.length\lchar r4 = 0\lint int r5 = r23[0].length\lr21.mSlopeTemp = new double[r5]\lr21.f28mT = r22\lr21.f29mY = r23\l}"];
subgraph cluster_Region_1015055629 {
label = "R(1:(3:3|(3:6|(1:11)(1:8)|10)|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1481414881 {
label = "IF [B:3:0x001e] THEN: R(3:3|(3:6|(1:11)(1:8)|10)|14) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001e|if (r5 \> 2) goto L3\l}"];
subgraph cluster_Region_517810814 {
label = "R(3:3|(3:6|(1:11)(1:8)|10)|14)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0020|double r6 = 0.0d\ldouble r8 = 0.0d\ldouble r10 = 0.0d\lint r12 = 0\l}"];
subgraph cluster_LoopRegion_577385172 {
label = "LOOP:0: (3:6|(1:11)(1:8)|10)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0028|if (r12 \< r22.length) goto L6\l}"];
subgraph cluster_Region_1569119661 {
label = "R(3:6|(1:11)(1:8)|10)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002a|double r14 = r23[r12][r4]\ldouble r16 = r23[r12][r4]\l}"];
subgraph cluster_IfRegion_147263409 {
label = "IF [B:8:0x0032] THEN: R(1:11) ELSE: R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0032|if (r12 \<= 0) goto L11\l}"];
subgraph cluster_Region_854789782 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0042|r18 = r5\lr19 = r14\l}"];
}
subgraph cluster_Region_1977481949 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0034|r18 = r5\lr19 = r14\lr6 += java.lang.Math.hypot(r14 \- r8, r16 \- r10)\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0046|LOOP_END\lLOOP:0: B:5:0x0027\-\>B:11:0x0046\lPHI: r6 r18 r19 \l  PHI: (r6v4 'sum' double) = (r6v3 'sum' double), (r6v5 'sum' double) binds: [B:16:0x0046, B:17:0x0046] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v3 'dim' int) = (r18v2 'dim' int), (r18v4 'dim' int) binds: [B:16:0x0046, B:17:0x0046] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r19v1 'px' double) = (r19v0 'px' double), (r19v2 'px' double) binds: [B:16:0x0046, B:17:0x0046] A[DONT_GENERATE, DONT_INLINE]\l|r8 = r19\lr10 = r16\lr12++\lr5 = r18\lr4 = 0\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0050|r21.mTotalLength = 0.0d\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0027|LOOP_START\lLOOP:0: B:5:0x0027\-\>B:11:0x0046\lPHI: r4 r5 r6 r8 r10 r12 \l  PHI: (r4v1 char) = (r4v0 char), (r4v3 char) binds: [B:4:0x0020, B:11:0x0046] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 'dim' int) = (r5v1 'dim' int), (r5v3 'dim' int) binds: [B:4:0x0020, B:11:0x0046] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v3 'sum' double) = (r6v2 'sum' double), (r6v4 'sum' double) binds: [B:4:0x0020, B:11:0x0046] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 'lastx' double) = (r8v0 'lastx' double), (r8v2 'lastx' double) binds: [B:4:0x0020, B:11:0x0046] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 'lasty' double) = (r10v0 'lasty' double), (r10v2 'lasty' double) binds: [B:4:0x0020, B:11:0x0046] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 'i' int) = (r12v0 'i' int), (r12v2 'i' int) binds: [B:4:0x0020, B:11:0x0046] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0046|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0046|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0050|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0057}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0059|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.LinearCurveFit.\<init\>((r21v0 'this' androidx.constraintlayout.core.motion.utils.LinearCurveFit A[IMMUTABLE_TYPE, THIS]), (r22v0 'time' double[] A[D('time' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'y' double[][] A[D('y' double[][]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x0046 \-\> B:5:0x0027, CROSS_EDGE: B:10:0x0042 \-\> B:11:0x0046, CROSS_EDGE: B:13:0x0057 \-\> B:14:0x0059\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_13[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_15[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_16;
Node_9 -> Node_17;
Node_11 -> Node_5;
Node_12 -> Node_18;
Node_0 -> Node_2;
Node_5 -> Node_6;
Node_17 -> Node_11;
Node_16 -> Node_11;
Node_15 -> Node_12;
Node_18 -> Node_1;
Node_13 -> Node_14;
Node_14 -> Node_1;
}

