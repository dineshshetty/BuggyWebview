digraph "CFG forandroidx.constraintlayout.core.motion.utils.LinearCurveFit.getSlope(D[D)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY])  (LINE:245)\l0x0002: IGET  (r1 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mT double[] \l0x0004: ARRAY_LENGTH  (r2 I:int) = (r1 I:??[]) \l0x0005: IGET  (r3 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:246)\l0x0007: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]) \l0x000a: ARRAY_LENGTH  (r3 I:int) = (r3 I:??[]) \l0x000b: AGET  (r5 I:??[long, double]) = (r1 I:??[long, double][]), (r4 I:??[int, short, byte, char])  (LINE:247)\l0x000d: CMP_G  (r7 I:int) = (r18 I:double A[D('t' double)]), (r5 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r7 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:5:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: AGET  (r4 I:??[long, double]) = (r1 I:??[long, double][]), (r4 I:??[int, short, byte, char])  (LINE:248)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:253)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|LOOP_START\lLOOP:0: B:10:0x0024\-\>B:18:0x0056\l|0x0024: ARITH  (r6 I:int) = (r2 I:int A[D('n' int)]) + (\-1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r6 I:??[int, byte, short, char])  \-\> B:21:0x0059 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: IGET  (r6 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mT double[]  (LINE:254)\l0x002a: ARITH  (r7 I:int) = (r1 I:int A[D('i' int)]) + (1 int) \l0x002c: AGET  (r7 I:??[long, double]) = (r6 I:??[long, double][]), (r7 I:??[int, short, byte, char]) \l0x002e: CMP_G  (r9 I:int) = (r4 I:double A[D('t' double)]), (r7 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: IF  (r9 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:18:0x0056 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|LOOP_END\lLOOP:0: B:10:0x0024\-\>B:18:0x0056\l|0x0056: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:253)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0032|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: ARITH  (r7 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:255)\l0x0034: AGET  (r7 I:??[long, double]) = (r6 I:??[long, double][]), (r7 I:??[int, short, byte, char]) \l0x0036: AGET  (r9 I:??[long, double]) = (r6 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('i' int)]) \l0x0038: ARITH  (r7 I:double) = (r7 I:double) \- (r9 I:double) \l0x0039: AGET  (r9 I:??[long, double]) = (r6 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('i' int)])  (LINE:256)\l0x003b: ARITH  (r9 I:double) = (r4 I:double A[D('t' double)]) \- (r9 I:double) \l0x003d: ARITH  (r9 I:double) = (r9 I:double) \/ (r7 I:double A[D('h' double)]) \l0x003e: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:257)\l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|LOOP_START\lLOOP:1: B:15:0x003f\-\>B:16:0x0041\l|0x003f: IF  (r6 I:??[int, byte, short, char] A[D('j' int)]) \>= (r3 I:??[int, byte, short, char] A[D('dim' int)])  \-\> B:22:0x0059 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|LOOP_END\lLOOP:1: B:15:0x003f\-\>B:16:0x0041\l|0x0041: IGET  (r11 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.LinearCurveFit) androidx.constraintlayout.core.motion.utils.LinearCurveFit.mY double[][]  (LINE:258)\l0x0043: AGET  (r12 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char] A[D('i' int)]) \l0x0045: AGET  (r13 I:??[long, double]) = (r12 I:??[long, double][]), (r6 I:??[int, short, byte, char] A[D('j' int)]) \l0x0047: ARITH  (r12 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:259)\l0x0049: AGET  (r11 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY][]), (r12 I:??[int, short, byte, char]) \l0x004b: AGET  (r15 I:??[long, double]) = (r11 I:??[long, double][]), (r6 I:??[int, short, byte, char] A[D('j' int)]) \l0x004d: ARITH  (r11 I:double) = (r15 I:double A[D('y2' double)]) \- (r13 I:double A[D('y1' double)])  (LINE:261)\l0x004f: ARITH  (r11 I:double) = (r11 I:double) \/ (r7 I:double A[D('h' double)]) \l0x0050: APUT  \l  (r20 I:??[long, double][] A[D('v' double[])])\l  (r6 I:??[int, short, byte, char] A[D('j' int)])\l  (r11 I:??[long, double])\l \l0x0052: ARITH  (r6 I:int) = (r6 I:int A[D('j' int)]) + (1 int)  (LINE:257)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0059|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0059: RETURN   A[SYNTHETIC] (LINE:266)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0059|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0059|RETURN\lORIG_RETURN\l|0x0059: RETURN    (LINE:266)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: ARITH  (r4 I:int A[D('t' double)]) = (r2 I:int A[D('n' int)]) + (\-1 int)  (LINE:249)\l0x0016: AGET  (r4 I:??[long, double]) = (r1 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l0x0018: CMP_L  (r6 I:int) = (r18 I:double A[D('t' double)]), (r4 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IF  (r6 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: ARITH  (r4 I:int) = (r2 I:int A[D('n' int)]) + (\-1 int)  (LINE:250)\l0x001e: AGET  (r4 I:??[long, double]) = (r1 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: MOVE  (r4 I:??[long, double] A[D('t' double)]) = (r18 I:??[long, double] A[D('t' double)])  (LINE:249)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.LinearCurveFit.getSlope((r17 'this' I:androidx.constraintlayout.core.motion.utils.LinearCurveFit A[IMMUTABLE_TYPE, THIS]), (r18 I:double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:double[] A[D('v' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:16:0x0041 \-\> B:15:0x003f, BACK_EDGE: B:18:0x0056 \-\> B:10:0x0024, CROSS_EDGE: B:11:0x0026 \-\> B:19:0x0059, CROSS_EDGE: B:7:0x001c \-\> B:9:0x0023, CROSS_EDGE: B:8:0x0021 \-\> B:9:0x0023\lDebug Info:\l  \-1 \-0x0013: r18 't' D\l  0x0013\-0x0014: r4 't' D\l  0x0014\-0x0020: r18 't' D\l  0x0020\-0x0021: r4 't' D\l  0x0021\-0x0023: r18 't' D\l  0x0047\-0x0052: r13 'y1' D\l  0x004d\-0x0052: r15 'y2' D\l  0x003f\-0x0055: r6 'j' I\l  0x0039\-0x0056: r7 'h' D\l  0x003e\-0x0056: r9 'x' D\l  0x0024\-0x0059: r1 'i' I\l  0x0005\-0x0059: r2 'n' I\l  0x000b\-0x0059: r3 'dim' I\l  0x0023\-0x0059: r4 't' D\l  \-1 \-0x0059: r20 'v' [D\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getSlope(double, double[]):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_13;
Node_13 -> Node_18;
Node_13 -> Node_20[style=dashed];
Node_18 -> Node_10;
Node_20 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_15;
Node_22 -> Node_23;
Node_23 -> Node_1;
Node_21 -> Node_19;
Node_19 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
}

