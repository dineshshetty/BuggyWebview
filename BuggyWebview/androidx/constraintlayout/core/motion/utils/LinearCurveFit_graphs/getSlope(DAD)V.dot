digraph "CFG forandroidx.constraintlayout.core.motion.utils.LinearCurveFit.getSlope(D[D)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|double[] r1 = r17.f28mT\lint r2 = r1.length\lint r3 = r17.f29mY[0].length\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|if ((r18 \> r1[0] ? 1 : (r18 == r1[0] ? 0 : \-1)) \> 0) goto L19\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|r4 = r1[0]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|PHI: r4 \l  PHI: (r4v6 't' double) = (r4v3 't' double), (r4v5 't' double), (r4v7 't' double) binds: [B:8:0x0021, B:7:0x001c, B:4:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|r1 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|LOOP_START\lLOOP:0: B:10:0x0024\-\>B:18:0x0056\lPHI: r1 \l  PHI: (r1v2 'i' int) = (r1v1 'i' int), (r1v3 'i' int) binds: [B:9:0x0023, B:18:0x0056] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|if (r1 \>= (r2 + (\-1))) goto L17\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|double[] r6 = r17.f28mT\l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|if ((r4 \> r6[r1 + 1] ? 1 : (r4 == r6[r1 + 1] ? 0 : \-1)) \> 0) goto L9\l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|LOOP_END\lLOOP:0: B:10:0x0024\-\>B:18:0x0056\l|int r1 = r1 + 1\l}"];
Node_20 [shape=record,label="{20\:\ 0x0032|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|double r7 = r6[r1 + 1] \- r6[r1]\ldouble r9 = (r4 \- r6[r1]) \/ r7\lr6 = 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|LOOP_START\lLOOP:1: B:15:0x003f\-\>B:16:0x0041\lPHI: r6 \l  PHI: (r6v4 'j' int) = (r6v3 'j' int), (r6v5 'j' int) binds: [B:14:0x0032, B:16:0x0041] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 \>= r3) goto L14\l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|LOOP_END\lLOOP:1: B:15:0x003f\-\>B:16:0x0041\l|double[][] r11 = r17.f29mY\lr13 = r11[r1][r6]\lr15 = r11[r1 + 1][r6]\lr20[r6] = (r15 \- r13) \/ r7\lint r6 = r6 + 1\l}"];
Node_22 [shape=record,label="{22\:\ 0x0059|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0059|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0059|RETURN\lORIG_RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014}"];
Node_6 [shape=record,label="{6\:\ 0x001a|if ((r18 \> r1[r2 + (\-1)] ? 1 : (r18 == r1[r2 + (\-1)] ? 0 : \-1)) \< 0) goto L22\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|r4 = r1[r2 + (\-1)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|r4 = r18\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.LinearCurveFit.getSlope((r17v0 'this' androidx.constraintlayout.core.motion.utils.LinearCurveFit A[IMMUTABLE_TYPE, THIS]), (r18v0 't' double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'v' double[] A[D('v' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:16:0x0041 \-\> B:15:0x003f, BACK_EDGE: B:18:0x0056 \-\> B:10:0x0024, CROSS_EDGE: B:11:0x0026 \-\> B:19:0x0059, CROSS_EDGE: B:7:0x001c \-\> B:9:0x0023, CROSS_EDGE: B:8:0x0021 \-\> B:9:0x0023\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getSlope(double, double[]):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_13;
Node_13 -> Node_18;
Node_13 -> Node_20[style=dashed];
Node_18 -> Node_10;
Node_20 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_15;
Node_22 -> Node_23;
Node_23 -> Node_1;
Node_21 -> Node_19;
Node_19 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
}

