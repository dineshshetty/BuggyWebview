digraph "CFG forandroidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.CustomSet.setup(I)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY])  (LINE:116)\l0x0002: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray) = (r0 I:androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet) androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.CustomSet.mConstraintAttributeList androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray \l0x0004: INVOKE  (r1 I:int) = (r1 I:androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.KeyFrameArray.CustomArray.size():int A[MD:():int (m)]\l0x0008: IGET  (r2 I:androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray) = (r0 I:androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet) androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.CustomSet.mConstraintAttributeList androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray  (LINE:117)\l0x000a: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r2 I:androidx.constraintlayout.core.motion.CustomAttribute) = (r2 I:androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray), (r3 I:int) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.KeyFrameArray.CustomArray.valueAt(int):androidx.constraintlayout.core.motion.CustomAttribute A[MD:(int):androidx.constraintlayout.core.motion.CustomAttribute (m)]\l0x000f: INVOKE  (r2 I:int) = (r2 I:androidx.constraintlayout.core.motion.CustomAttribute) type: VIRTUAL call: androidx.constraintlayout.core.motion.CustomAttribute.numberOfInterpolatedValues():int A[MD:():int (m)]\l0x0013: NEW_ARRAY  (r4 I:double[]) = (r1 I:int A[D('size' int), IMMUTABLE_TYPE]) type: double[]  (LINE:118)\l0x0015: ARITH  (r5 I:int) = (r2 I:int A[D('dimensionality' int)]) + (2 int)  (LINE:119)\l0x0017: NEW_ARRAY  (r5 I:float[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0019: IPUT  (r5 I:float[]), (r0 I:androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet) androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.CustomSet.mTempValues float[] \l0x001b: NEW_ARRAY  (r5 I:float[]) = (r2 I:int A[D('dimensionality' int), IMMUTABLE_TYPE]) type: float[]  (LINE:120)\l0x001d: IPUT  (r5 I:float[]), (r0 I:androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet) androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.CustomSet.mCache float[] \l0x001f: ARITH  (r5 I:int) = (r2 I:int A[D('dimensionality' int)]) + (2 int)  (LINE:121)\l0x0021: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0022: NEW_ARRAY  (r6 I:int[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0024: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0025: APUT  (r6 I:??[int, float][]), (r7 I:??[int, short, byte, char]), (r5 I:??[int, float, short, byte, char]) \l0x0027: APUT  (r6 I:??[int, float][]), (r3 I:??[int, short, byte, char]), (r1 I:??[int, float, short, byte, char] A[D('size' int)]) \l0x0029: CONST_CLASS  (r5 I:java.lang.Class\<double\>) =  double.class \l0x002b: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.lang.Class), (r6 I:int[]) type: STATIC call: java.lang.reflect.Array.newInstance(java.lang.Class, int[]):java.lang.Object A[MD:(java.lang.Class\<?\>, int[]):java.lang.Object VARARG throws java.lang.IllegalArgumentException, java.lang.NegativeArraySizeException (c)]\l0x002f: CHECK_CAST (r5 I:double[][]) = (double[][]) (r5 I:??[OBJECT, ARRAY]) \l0x0031: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:122)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|LOOP_START\lLOOP:0: B:16:0x0032\-\>B:21:0x0065\l|0x0032: IF  (r6 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:24:0x0078 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0034|0x0034: IGET  (r8 I:androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray) = (r0 I:androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet) androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.CustomSet.mConstraintAttributeList androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray  (LINE:123)\l0x0036: INVOKE  (r8 I:int) = (r8 I:androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray), (r6 I:int A[D('i' int)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.KeyFrameArray.CustomArray.keyAt(int):int A[MD:(int):int (m)]\l0x003a: IGET  (r9 I:androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray) = (r0 I:androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet) androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.CustomSet.mConstraintAttributeList androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray  (LINE:124)\l0x003c: INVOKE  (r9 I:androidx.constraintlayout.core.motion.CustomAttribute) = (r9 I:androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray), (r6 I:int A[D('i' int)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.KeyFrameArray.CustomArray.valueAt(int):androidx.constraintlayout.core.motion.CustomAttribute A[MD:(int):androidx.constraintlayout.core.motion.CustomAttribute (m)]\l0x0040: IGET  (r10 I:androidx.constraintlayout.core.motion.utils.KeyFrameArray$FloatArray) = (r0 I:androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet) androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.CustomSet.mWaveProperties androidx.constraintlayout.core.motion.utils.KeyFrameArray$FloatArray  (LINE:125)\l0x0042: INVOKE  (r10 I:float[]) = (r10 I:androidx.constraintlayout.core.motion.utils.KeyFrameArray$FloatArray), (r6 I:int A[D('i' int)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.KeyFrameArray.FloatArray.valueAt(int):float[] A[MD:(int):float[] (m)]\l0x0046: CAST (r11 I:double) = (double) (r8 I:int A[D('key' int)])  (LINE:126)\l0x0047: CONST  (r13 I:??[long, double]) = (4576918229304087675(0x3f847ae147ae147b, double:0.01) ??[long, double]) \l0x004c: ARITH  (r11 I:double) = (r11 I:double) * (r13 I:double) \l0x004e: APUT  \l  (r4 I:??[long, double][] A[D('time' double[])])\l  (r6 I:??[int, short, byte, char] A[D('i' int)])\l  (r11 I:??[long, double])\l \l0x0050: IGET  (r11 I:float[]) = (r0 I:androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet) androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.CustomSet.mTempValues float[]  (LINE:127)\l0x0052: INVOKE  \l  (r9 I:androidx.constraintlayout.core.motion.CustomAttribute A[D('ca' androidx.constraintlayout.core.motion.CustomAttribute)])\l  (r11 I:float[])\l type: VIRTUAL call: androidx.constraintlayout.core.motion.CustomAttribute.getValuesToInterpolate(float[]):void A[MD:(float[]):void (m)]\l0x0055: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:128)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|LOOP_START\lLOOP:1: B:18:0x0056\-\>B:20:0x005b\l|0x0056: IGET  (r12 I:float[]) = (r0 I:androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet) androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.CustomSet.mTempValues float[] \l0x0058: ARRAY_LENGTH  (r13 I:int) = (r12 I:??[]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0059|0x0059: IF  (r11 I:??[int, byte, short, char] A[D('k' int)]) \>= (r13 I:??[int, byte, short, char])  \-\> B:25:0x0065 \l}"];
Node_20 [shape=record,label="{20\:\ 0x005b|LOOP_END\lLOOP:1: B:18:0x0056\-\>B:20:0x005b\l|0x005b: AGET  (r13 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][] A[D('values' double[][])]), (r6 I:??[int, short, byte, char] A[D('i' int)])  (LINE:129)\l0x005d: AGET  (r12 I:??[int, float, short, byte, char]) = (r12 I:??[int, float][]), (r11 I:??[int, short, byte, char] A[D('k' int)]) \l0x005f: CAST (r14 I:double) = (double) (r12 I:float) \l0x0060: APUT  (r13 I:??[long, double][]), (r11 I:??[int, short, byte, char] A[D('k' int)]), (r14 I:??[long, double]) \l0x0062: ARITH  (r11 I:int) = (r11 I:int A[D('k' int)]) + (1 int)  (LINE:128)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0065|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0065|LOOP_END\lLOOP:0: B:16:0x0032\-\>B:21:0x0065\l|0x0065: AGET  (r11 I:??[OBJECT, ARRAY] A[D('k' int)]) = (r5 I:??[OBJECT, ARRAY][] A[D('values' double[][])]), (r6 I:??[int, short, byte, char] A[D('i' int)])  (LINE:131)\l0x0067: AGET  (r12 I:??[int, float, short, byte, char]) = (r10 I:??[int, float][] A[D('waveProp' float[])]), (r3 I:??[int, short, byte, char]) \l0x0069: CAST (r12 I:double) = (double) (r12 I:float) \l0x006a: APUT  (r11 I:??[long, double][]), (r2 I:??[int, short, byte, char] A[D('dimensionality' int)]), (r12 I:??[long, double]) \l0x006c: AGET  (r11 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][] A[D('values' double[][])]), (r6 I:??[int, short, byte, char] A[D('i' int)])  (LINE:132)\l0x006e: ARITH  (r12 I:int) = (r2 I:int A[D('dimensionality' int)]) + (1 int) \l0x0070: AGET  (r13 I:??[int, float, short, byte, char]) = (r10 I:??[int, float][] A[D('waveProp' float[])]), (r7 I:??[int, short, byte, char]) \l0x0072: CAST (r13 I:double) = (double) (r13 I:float) \l0x0073: APUT  (r11 I:??[long, double][]), (r12 I:??[int, short, byte, char]), (r13 I:??[long, double]) \l0x0075: ARITH  (r6 I:int) = (r6 I:int A[D('i' int)]) + (1 int)  (LINE:122)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0078|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0078|0x0078: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('curveType' int)])  (LINE:134)\l0x007a: INVOKE  (r6 I:androidx.constraintlayout.core.motion.utils.CurveFit) = (r3 I:int), (r4 I:double[] A[D('time' double[])]), (r5 I:double[][] A[D('values' double[][])]) type: STATIC call: androidx.constraintlayout.core.motion.utils.CurveFit.get(int, double[], double[][]):androidx.constraintlayout.core.motion.utils.CurveFit A[MD:(int, double[], double[][]):androidx.constraintlayout.core.motion.utils.CurveFit (m)]\l0x007e: IPUT  \l  (r6 I:androidx.constraintlayout.core.motion.utils.CurveFit)\l  (r0 I:androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet)\l androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.CustomSet.mCurveFit androidx.constraintlayout.core.motion.utils.CurveFit \l}"];
Node_23 [shape=record,label="{23\:\ 0x0080|RETURN\l|0x0080: RETURN    (LINE:135)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.CustomSet.setup((r16 'this' I:androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet A[IMMUTABLE_TYPE, THIS]), (r17 I:int A[D('curveType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x005b \-\> B:18:0x0056, BACK_EDGE: B:21:0x0065 \-\> B:16:0x0032\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0056\-0x0065: r11 'k' I\l  0x003a\-0x0075: r8 'key' I\l  0x0040\-0x0075: r9 'ca' Landroidx\/constraintlayout\/core\/motion\/CustomAttribute;\l  0x0046\-0x0075: r10 'waveProp' [F\l  0x0032\-0x0078: r6 'i' I\l  0x0008\-0x0080: r1 'size' I\l  0x0013\-0x0080: r2 'dimensionality' I\l  0x0015\-0x0080: r4 'time' [D\l  0x0031\-0x0080: r5 'values' [[D\l  \-1 \-0x0080: r17 'curveType' I\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.setup(int):void]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_18;
Node_25 -> Node_21;
Node_21 -> Node_16;
Node_24 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_14;
}

