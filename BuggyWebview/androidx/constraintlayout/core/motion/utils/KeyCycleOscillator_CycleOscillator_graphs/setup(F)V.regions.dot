digraph "CFG forandroidx.constraintlayout.core.motion.utils.KeyCycleOscillator.CycleOscillator.setup(F)V" {
subgraph cluster_Region_1111148210 {
label = "R(8:1|(1:3)|4|(1:6)|7|(1:10)|12|(1:14)(1:17))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0000|r10.mPathLength = r11\ldouble[][] double[][] r0 = (double[][]) java.lang.reflect.Array.newInstance(double.class, r10.mPosition.length, 3)\lfloat[] float[] r2 = r10.mValues\lr10.mSplineValueCache = new double[r2.length + 2]\lr10.mSplineSlopeCache = new double[r2.length + 2]\l}"];
subgraph cluster_IfRegion_913372734 {
label = "IF [B:22:0x002d] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x002d|if (r10.mPosition[0] \> 0.0d) goto L3\l}"];
subgraph cluster_Region_1900020489 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x002f|r10.mOscillator.addPoint(0.0d, r10.mPeriod[0])\l}"];
}
}
Node_24 [shape=record,label="{24\:\ 0x0038|double[] double[] r2 = r10.mPosition\lint int r5 = r2.length \- 1\l}"];
subgraph cluster_IfRegion_768468587 {
label = "IF [B:25:0x0042] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0042|if (r2[r5] \< 1.0d) goto L6\l}"];
subgraph cluster_Region_1954282776 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0044|r10.mOscillator.addPoint(1.0d, r10.mPeriod[r5])\l}"];
}
}
Node_27 [shape=record,label="{27\:\ 0x004d|int r2 = 0\l}"];
subgraph cluster_LoopRegion_1814477099 {
label = "LOOP:0: (1:10)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x004f|if (r2 \< r0.length) goto L10\l}"];
subgraph cluster_Region_1979591109 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0051|LOOP_END\lLOOP:0: B:28:0x004e\-\>B:30:0x0051\l|r0[r2][0] = r10.mOffset[r2]\lr0[r2][1] = r10.mPhase[r2]\lr0[r2][2] = r10.mValues[r2]\lr10.mOscillator.addPoint(r10.mPosition[r2], r10.mPeriod[r2])\lr2++\l}"];
}
}
Node_31 [shape=record,label="{31\:\ 0x007c|r10.mOscillator.normalize()\ldouble[] double[] r1 = r10.mPosition\l}"];
subgraph cluster_IfRegion_1884246611 {
label = "IF [B:32:0x0084] THEN: R(1:14) ELSE: R(1:17)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0084|if (r1.length \> 1) goto L14\l}"];
subgraph cluster_Region_970369205 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0086|r10.mCurveFit = androidx.constraintlayout.core.motion.utils.CurveFit.get(0, r1, r0)\l}"];
}
subgraph cluster_Region_401331968 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x008d|r10.mCurveFit = null\l}"];
}
}
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x004e|LOOP_START\lLOOP:0: B:28:0x004e\-\>B:30:0x0051\lPHI: r2 \l  PHI: (r2v10 'i' int) = (r2v9 'i' int), (r2v12 'i' int) binds: [B:27:0x004d, B:30:0x0051] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x007c|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ ?|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0090|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.CycleOscillator.setup((r10v0 'this' androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator A[IMMUTABLE_TYPE, THIS]), (r11v0 'pathLength' float A[D('pathLength' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:30:0x0051 \-\> B:28:0x004e, CROSS_EDGE: B:34:0x008d \-\> B:35:0x0090, CROSS_EDGE: B:25:0x0042 \-\> B:27:0x004d, CROSS_EDGE: B:22:0x002d \-\> B:24:0x0038\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_19;Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_27[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_29 -> Node_36[style=dashed];
Node_30 -> Node_28;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_19 -> Node_21;
Node_28 -> Node_29;
Node_36 -> Node_31;
Node_37 -> Node_20;
Node_35 -> Node_20;
}

