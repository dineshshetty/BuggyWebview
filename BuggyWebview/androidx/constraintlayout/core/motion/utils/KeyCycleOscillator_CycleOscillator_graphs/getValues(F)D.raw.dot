digraph "CFG forandroidx.constraintlayout.core.motion.utils.KeyCycleOscillator.CycleOscillator.getValues(F)D" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.CurveFit) = (r9 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator) androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.CycleOscillator.mCurveFit androidx.constraintlayout.core.motion.utils.CurveFit  (LINE:333)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0003: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0004: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x000e \l}"];
Node_12 [shape=record,label="{12\:\ 0x0007|0x0007: CAST (r4 I:double) = (double) (r10 I:float A[D('time' float)])  (LINE:334)\l0x0008: IGET  (r6 I:double[]) = (r9 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator) androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.CycleOscillator.mSplineValueCache double[] \l0x000a: INVOKE  (r0 I:androidx.constraintlayout.core.motion.utils.CurveFit), (r4 I:double), (r6 I:double[]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, double[]):void A[MD:(double, double[]):void (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|0x0025: IGET  (r0 I:double[]) = (r9 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator) androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.CycleOscillator.mSplineValueCache double[]  (LINE:341)\l0x0027: AGET  (r3 I:??[long, double]) = (r0 I:??[long, double][]), (r3 I:??[int, short, byte, char]) \l0x0029: AGET  (r5 I:??[long, double]) = (r0 I:??[long, double][]), (r2 I:??[int, short, byte, char])  (LINE:342)\l0x002b: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.Oscillator) = (r9 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator) androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.CycleOscillator.mOscillator androidx.constraintlayout.core.motion.utils.Oscillator  (LINE:343)\l0x002d: CAST (r7 I:double) = (double) (r10 I:float A[D('time' float)]) \l0x002e: INVOKE  (r7 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.Oscillator), (r7 I:double), (r5 I:double A[D('phase' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.Oscillator.getValue(double, double):double A[MD:(double, double):double (m)]\l0x0032: IGET  (r0 I:double[]) = (r9 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator) androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.CycleOscillator.mSplineValueCache double[]  (LINE:344)\l0x0034: AGET  (r1 I:??[long, double]) = (r0 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l0x0036: ARITH  (r1 I:double) = (r1 I:double) * (r7 I:double A[D('waveValue' double)]) \l0x0038: ARITH  (r1 I:double) = (r1 I:double) + (r3 I:double A[D('offset' double)]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|RETURN\l|0x0039: RETURN  (r1 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x000e|0x000e: IGET  (r0 I:double[]) = (r9 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator) androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.CycleOscillator.mSplineValueCache double[]  (LINE:336)\l0x0010: IGET  (r4 I:float[]) = (r9 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator) androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.CycleOscillator.mOffset float[] \l0x0012: AGET  (r4 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][]), (r3 I:??[int, short, byte, char]) \l0x0014: CAST (r4 I:double) = (double) (r4 I:float) \l0x0015: APUT  (r0 I:??[long, double][]), (r3 I:??[int, short, byte, char]), (r4 I:??[long, double]) \l0x0017: IGET  (r4 I:float[]) = (r9 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator) androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.CycleOscillator.mPhase float[]  (LINE:337)\l0x0019: AGET  (r4 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][]), (r3 I:??[int, short, byte, char]) \l0x001b: CAST (r4 I:double) = (double) (r4 I:float) \l0x001c: APUT  (r0 I:??[long, double][]), (r2 I:??[int, short, byte, char]), (r4 I:??[long, double]) \l0x001e: IGET  (r4 I:float[]) = (r9 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator) androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.CycleOscillator.mValues float[]  (LINE:338)\l0x0020: AGET  (r4 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][]), (r3 I:??[int, short, byte, char]) \l0x0022: CAST (r4 I:double) = (double) (r4 I:float) \l0x0023: APUT  (r0 I:??[long, double][]), (r1 I:??[int, short, byte, char]), (r4 I:??[long, double]) \l}"];
MethodNode[shape=record,label="{public double androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.CycleOscillator.getValues((r9 'this' I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator A[IMMUTABLE_TYPE, THIS]), (r10 I:float A[D('time' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000e \-\> B:14:0x0025\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0029\-0x0039: r3 'offset' D\l  0x002b\-0x0039: r5 'phase' D\l  0x0032\-0x0039: r7 'waveValue' D\l  \-1 \-0x0039: r10 'time' F\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

