digraph "CFG forandroidx.constraintlayout.core.motion.utils.KeyCycleOscillator.setPoint(IILjava\/lang\/String;IFFFF)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY])  (LINE:177)\l0x0001: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('variesBy' int)]) \l0x0002: IGET  (r2 I:java.util.ArrayList\<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint\>) = (r0 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator) androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.mWavePoints java.util.ArrayList \l0x0004: NEW_INSTANCE  (r9 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint) =  androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint \l0x0006: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY]) \l0x0007: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('framePosition' int)]) \l0x0008: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('period' float)]) \l0x0009: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('offset' float)]) \l0x000b: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('phase' float)]) \l0x000d: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('value' float)]) \l0x000f: INVOKE  \l  (r3 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint)\l  (r4 I:int)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:float)\l type: DIRECT call: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.WavePoint.\<init\>(int, float, float, float, float):void A[MD:(int, float, float, float, float):void (m)]\l0x0012: INVOKE  (r2 I:java.util.ArrayList), (r9 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0015: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:178)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|0x0016: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001a \l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|0x0018: IPUT  (r1 I:int), (r0 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator) androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.mVariesBy int  (LINE:179)\l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|0x001a: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('shape' int)])  (LINE:181)\l0x001b: IPUT  (r2 I:int), (r0 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator) androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.mWaveShape int \l0x001d: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY] A[D('waveString' java.lang.String)])  (LINE:182)\l0x001e: IPUT  (r3 I:java.lang.String), (r0 I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator) androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.mWaveString java.lang.String \l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|RETURN\l|0x0020: RETURN    (LINE:183)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.setPoint((r10 'this' I:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator A[IMMUTABLE_TYPE, THIS]), (r11 I:int A[D('framePosition' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('shape' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.String A[D('waveString' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('variesBy' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:float A[D('period' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:float A[D('offset' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:float A[D('phase' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:float A[D('value' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0016 \-\> B:12:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0020: r11 'framePosition' I\l  \-1 \-0x0020: r12 'shape' I\l  \-1 \-0x0020: r13 'waveString' Ljava\/lang\/String;\l  \-1 \-0x0020: r14 'variesBy' I\l  \-1 \-0x0020: r15 'period' F\l  \-1 \-0x0020: r16 'offset' F\l  \-1 \-0x0020: r17 'phase' F\l  \-1 \-0x0020: r18 'value' F\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

