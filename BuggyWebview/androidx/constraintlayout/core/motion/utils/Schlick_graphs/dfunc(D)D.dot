digraph "CFG forandroidx.constraintlayout.core.motion.utils.Schlick.dfunc(D)D" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|double r0 = r12.f33mT\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if ((r13 \> r0 ? 1 : (r13 == r0 ? 0 : \-1)) \>= 0) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|double r2 = r12.f32mS\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|RETURN\l|return ((r2 * r0) * r0) \/ ((((r0 \- r13) * r2) + r13) * ((r2 * (r0 \- r13)) + r13))\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|double r2 = r12.f32mS\l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|RETURN\l|return (((r0 \- 1.0d) * r2) * (r0 \- 1.0d)) \/ (((((\-r2) * (r0 \- r13)) \- r13) + 1.0d) * ((((\-r2) * (r0 \- r13)) \- r13) + 1.0d))\l}"];
MethodNode[shape=record,label="{private double androidx.constraintlayout.core.motion.utils.Schlick.dfunc((r12v0 'this' androidx.constraintlayout.core.motion.utils.Schlick A[IMMUTABLE_TYPE, THIS]), (r13v0 'x' double A[D('x' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0035 \-\> B:1:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

