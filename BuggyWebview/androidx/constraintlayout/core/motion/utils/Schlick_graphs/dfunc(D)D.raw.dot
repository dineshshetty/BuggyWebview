digraph "CFG forandroidx.constraintlayout.core.motion.utils.Schlick.dfunc(D)D" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:double) = (r12 I:androidx.constraintlayout.core.motion.utils.Schlick) androidx.constraintlayout.core.motion.utils.Schlick.mT double  (LINE:48)\l0x0002: CMP_G  (r2 I:int) = (r13 I:double A[D('x' double)]), (r0 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r2 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:6:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r2 I:double) = (r12 I:androidx.constraintlayout.core.motion.utils.Schlick) androidx.constraintlayout.core.motion.utils.Schlick.mS double  (LINE:49)\l0x0008: ARITH  (r4 I:double) = (r2 I:double) * (r0 I:double) \l0x000a: ARITH  (r4 I:double) = (r4 I:double) * (r0 I:double) \l0x000c: ARITH  (r6 I:double) = (r0 I:double) \- (r13 I:double A[D('x' double)]) \l0x000e: ARITH  (r6 I:double) = (r6 I:double) * (r2 I:double) \l0x0010: ARITH  (r6 I:double) = (r6 I:double) + (r13 I:double A[D('x' double)]) \l0x0011: ARITH  (r0 I:double) = (r0 I:double) \- (r13 I:double A[D('x' double)]) \l0x0012: ARITH  (r2 I:double) = (r2 I:double) * (r0 I:double) \l0x0014: ARITH  (r2 I:double) = (r2 I:double) + (r13 I:double A[D('x' double)]) \l0x0015: ARITH  (r6 I:double) = (r6 I:double) * (r2 I:double) \l0x0017: ARITH  (r4 I:double) = (r4 I:double) \/ (r6 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|RETURN\l|0x0018: RETURN  (r4 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IGET  (r2 I:double) = (r12 I:androidx.constraintlayout.core.motion.utils.Schlick) androidx.constraintlayout.core.motion.utils.Schlick.mS double  (LINE:51)\l0x001b: CONST  (r4 I:??[long, double]) = (4607182418800017408(0x3ff0000000000000, double:1.0) ??[long, double]) \l0x001d: ARITH  (r6 I:double) = (r0 I:double) \- (r4 I:double) \l0x001f: ARITH  (r6 I:double) = (r6 I:double) * (r2 I:double) \l0x0021: ARITH  (r8 I:double) = (r0 I:double) \- (r4 I:double) \l0x0023: ARITH  (r6 I:double) = (r6 I:double) * (r8 I:double) \l0x0025: NEG  (r8 I:double) = (r2 I:double) \l0x0026: ARITH  (r10 I:double) = (r0 I:double) \- (r13 I:double A[D('x' double)]) \l0x0028: ARITH  (r8 I:double) = (r8 I:double) * (r10 I:double) \l0x002a: ARITH  (r8 I:double) = (r8 I:double) \- (r13 I:double A[D('x' double)]) \l0x002b: ARITH  (r8 I:double) = (r8 I:double) + (r4 I:double) \l0x002c: NEG  (r2 I:double) = (r2 I:double) \l0x002d: ARITH  (r0 I:double) = (r0 I:double) \- (r13 I:double A[D('x' double)]) \l0x002e: ARITH  (r2 I:double) = (r2 I:double) * (r0 I:double) \l0x0030: ARITH  (r2 I:double) = (r2 I:double) \- (r13 I:double A[D('x' double)]) \l0x0031: ARITH  (r2 I:double) = (r2 I:double) + (r4 I:double) \l0x0032: ARITH  (r8 I:double) = (r8 I:double) * (r2 I:double) \l0x0034: ARITH  (r6 I:double) = (r6 I:double) \/ (r8 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|RETURN\l|0x0035: RETURN  (r6 I:double) \l}"];
MethodNode[shape=record,label="{private double androidx.constraintlayout.core.motion.utils.Schlick.dfunc((r12 'this' I:androidx.constraintlayout.core.motion.utils.Schlick A[IMMUTABLE_TYPE, THIS]), (r13 I:double A[D('x' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0035 \-\> B:1:?\lDebug Info:\l  \-1 \-0x0035: r13 'x' D\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

