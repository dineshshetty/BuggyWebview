digraph "CFG forandroidx.constraintlayout.core.motion.utils.StepCurve.genSpline([D)Landroidx\/constraintlayout\/core\/motion\/utils\/MonotonicCurveFit;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|int r1 = (r18.length * 3) \- 2\lint r3 = r18.length \- 1\ldouble r5 = 1.0d \/ ((double) r3)\ldouble[][] r2 = (double[][]) java.lang.reflect.Array.newInstance(double.class, new int[]\{r1, 1\})\ldouble[] r9 = new double[r1]\lr10 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|LOOP_START\lLOOP:0: B:3:0x0021\-\>B:8:0x005c\lPHI: r10 \l  PHI: (r10v1 'i' int) = (r10v0 'i' int), (r10v3 'i' int) binds: [B:2:0x0000, B:8:0x005c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|if (r10 \>= r18.length) goto L10\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|r11 = r18[r10]\lr2[r10 + r3][0] = r11\lr9[r10 + r3] = ((double) r10) * r5\l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|if (r10 \<= 0) goto L9\l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|r2[(r3 * 2) + r10][0] = r11 + 1.0d\lr9[(r3 * 2) + r10] = (((double) r10) * r5) + 1.0d\lr2[r10 + (\-1)][0] = (r11 \- 1.0d) \- r5\lr9[r10 + (\-1)] = ((((double) r10) * r5) + (\-1.0d)) \- r5\l}"];
Node_12 [shape=record,label="{12\:\ 0x005c|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x005c|LOOP_END\lLOOP:0: B:3:0x0021\-\>B:8:0x005c\l|int r10 = r10 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x005c|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x005f|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x005f|androidx.constraintlayout.core.motion.utils.MonotonicCurveFit r10 = new androidx.constraintlayout.core.motion.utils.MonotonicCurveFit(r9, r2)\ljava.io.PrintStream r11 = java.lang.System.out\ljava.lang.StringBuilder r12 = new java.lang.StringBuilder()\lr12.append(\" 0 \")\lr12.append(r10.getPos(0.0d, 0))\lr11.println(r12.toString())\ljava.io.PrintStream r11 = java.lang.System.out\ljava.lang.StringBuilder r12 = new java.lang.StringBuilder()\lr12.append(\" 1 \")\lr12.append(r10.getPos(1.0d, 0))\lr11.println(r12.toString())\l}"];
Node_10 [shape=record,label="{10\:\ 0x009a|RETURN\l|return r10\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static androidx.constraintlayout.core.motion.utils.MonotonicCurveFit androidx.constraintlayout.core.motion.utils.StepCurve.genSpline((r18v0 'values' double[] A[D('values' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:8:0x005c \-\> B:3:0x0021, CROSS_EDGE: B:6:0x0033 \-\> B:8:0x005c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_12;
Node_12 -> Node_8;
Node_8 -> Node_3;
Node_13 -> Node_8;
Node_11 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

