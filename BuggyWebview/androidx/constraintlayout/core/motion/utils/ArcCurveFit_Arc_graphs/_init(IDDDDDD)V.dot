digraph "CFG forandroidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.\<init\>(IDDDDDD)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|r0 = false\lr22.linear = false\lr15 = 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|if (r23 != 1) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|r0 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v0 boolean), (r0v19 boolean) binds: [B:3:0x0017, B:4:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|r22.mVertical = r0\lr22.mTime1 = r24\lr22.mTime2 = r26\lr22.mOneOverDeltaTime = 1.0d \/ (r26 \- r24)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|if (3 != r23) goto L7\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|r22.linear = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|double r11 = r32 \- r28\ldouble r13 = r34 \- r30\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|if (r22.linear != false) goto L34\l}"];
Node_10 [shape=record,label="{10\:\ 0x0035}"];
Node_11 [shape=record,label="{11\:\ 0x0040|if ((java.lang.Math.abs(r11) \> androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.EPSILON ? 1 : (java.lang.Math.abs(r11) == androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.EPSILON ? 0 : \-1)) \< 0) goto L34\l}"];
Node_12 [shape=record,label="{12\:\ 0x0042}"];
Node_13 [shape=record,label="{13\:\ 0x0048|if ((java.lang.Math.abs(r13) \> androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.EPSILON ? 1 : (java.lang.Math.abs(r13) == androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.EPSILON ? 0 : \-1)) \>= 0) goto L17\l}"];
Node_14 [shape=record,label="{14\:\ 0x004a|r20 = r11\lr18 = r13\lr12 = r32\lr14 = r30\lr10 = r28\l}"];
Node_33 [shape=record,label="{33\:\ 0x00a4|PHI: r10 r12 r14 r18 r20 \l  PHI: (r10v2 double) = (r10v1 double), (r10v7 double) binds: [B:32:0x009d, B:14:0x004a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 double) = (r12v0 double), (r12v3 double) binds: [B:32:0x009d, B:14:0x004a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v1 double) = (r14v0 double), (r14v3 double) binds: [B:32:0x009d, B:14:0x004a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v2 'dy' double) = (r18v1 'dy' double), (r18v5 'dy' double) binds: [B:32:0x009d, B:14:0x004a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r20v1 'dx' double) = (r20v0 'dx' double), (r20v3 'dx' double) binds: [B:32:0x009d, B:14:0x004a] A[DONT_GENERATE, DONT_INLINE]\l|r22.linear = true\lr22.mX1 = r10\lr22.mX2 = r12\lr22.mY1 = r14\lr22.mY2 = r34\lr4 = r18\lr2 = r20\ldouble r6 = java.lang.Math.hypot(r4, r2)\lr22.mArcDistance = r6\lr22.mArcVelocity = r6 * r22.mOneOverDeltaTime\ldouble r6 = r22.mTime2\ldouble r10 = r22.mTime1\lr22.mEllipseCenterX = r2 \/ (r6 \- r10)\lr22.mEllipseCenterY = r4 \/ (r6 \- r10)\l}"];
Node_34 [shape=record,label="{34\:\ 0x00d0|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0052|r22.mLut = new double[101]\lboolean r0 = r22.mVertical\l}"];
Node_16 [shape=record,label="{16\:\ 0x005c|if (r0 == false) goto L20\l}"];
Node_17 [shape=record,label="{17\:\ 0x005e|r15 = \-1\l}"];
Node_18 [shape=record,label="{18\:\ 0x005f|PHI: r15 \l  PHI: (r15v1 int) = (r15v0 int), (r15v6 int) binds: [B:16:0x005c, B:17:0x005e] A[DONT_GENERATE, DONT_INLINE]\l|r22.mEllipseA = ((double) r15) * r11\l}"];
Node_19 [shape=record,label="{19\:\ 0x0064|if (r0 == false) goto L33\l}"];
Node_20 [shape=record,label="{20\:\ 0x0066|r15 = 1\l}"];
Node_22 [shape=record,label="{22\:\ 0x0069|PHI: r15 \l  PHI: (r15v3 int) = (r15v2 int), (r15v5 int) binds: [B:21:0x0068, B:20:0x0066] A[DONT_GENERATE, DONT_INLINE]\l|r22.mEllipseB = ((double) r15) * r13\l}"];
Node_23 [shape=record,label="{23\:\ 0x006e|if (r0 == false) goto L32\l}"];
Node_24 [shape=record,label="{24\:\ 0x0070|r1 = r32\l}"];
Node_26 [shape=record,label="{26\:\ 0x0073|PHI: r1 \l  PHI: (r1v6 double) = (r1v5 double), (r1v8 double) binds: [B:25:0x0072, B:24:0x0070] A[DONT_GENERATE, DONT_INLINE]\l|r22.mEllipseCenterX = r1\l}"];
Node_27 [shape=record,label="{27\:\ 0x0075|if (r0 == false) goto L31\l}"];
Node_28 [shape=record,label="{28\:\ 0x0077|r0 = r30\l}"];
Node_30 [shape=record,label="{30\:\ 0x007b|PHI: r0 \l  PHI: (r0v14 double) = (r0v13 double), (r0v18 double) binds: [B:29:0x0079, B:28:0x0077] A[DONT_GENERATE, DONT_INLINE]\l|r22.mEllipseCenterY = r0\lbuildTable(r28, r30, r32, r34)\lr22.mArcVelocity = r22.mArcDistance * r22.mOneOverDeltaTime\l}"];
Node_31 [shape=record,label="{31\:\ 0x009c|RETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ 0x0079|r0 = r34\l}"];
Node_25 [shape=record,label="{25\:\ 0x0072|r1 = r28\l}"];
Node_21 [shape=record,label="{21\:\ 0x0068|r15 = \-1\l}"];
Node_32 [shape=record,label="{32\:\ 0x009d|r20 = r11\lr18 = r13\lr12 = r32\lr14 = r30\lr10 = r28\l}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.\<init\>((r22v0 'this' androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc A[IMMUTABLE_TYPE, THIS]), (r23v0 'mode' int A[D('mode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 't1' double A[D('t1' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 't2' double A[D('t2' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28v0 'x1' double A[D('x1' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30v0 'y1' double A[D('y1' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 'x2' double A[D('x2' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34v0 'y2' double A[D('y2' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x009c \-\> B:1:?, CROSS_EDGE: B:29:0x0079 \-\> B:30:0x007b, CROSS_EDGE: B:25:0x0072 \-\> B:26:0x0073, CROSS_EDGE: B:21:0x0068 \-\> B:22:0x0069, CROSS_EDGE: B:16:0x005c \-\> B:18:0x005f, CROSS_EDGE: B:32:0x009d \-\> B:33:0x00a4, CROSS_EDGE: B:9:0x0033 \-\> B:32:0x009d, CROSS_EDGE: B:6:0x0029 \-\> B:8:0x002d, CROSS_EDGE: B:3:0x0017 \-\> B:5:0x001a\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_32;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_32;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_1;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_1;
Node_29 -> Node_30;
Node_25 -> Node_26;
Node_21 -> Node_22;
Node_32 -> Node_33;
}

