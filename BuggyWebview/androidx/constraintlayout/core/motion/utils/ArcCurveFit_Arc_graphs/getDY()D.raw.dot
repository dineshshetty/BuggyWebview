digraph "CFG forandroidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getDY()D" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:double) = (r8 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mEllipseA double  (LINE:358)\l0x0002: IGET  (r2 I:double) = (r8 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTmpCosAngle double \l0x0004: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x0006: IGET  (r2 I:double) = (r8 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mEllipseB double  (LINE:359)\l0x0008: NEG  (r2 I:double) = (r2 I:double) \l0x0009: IGET  (r4 I:double) = (r8 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTmpSinAngle double \l0x000b: ARITH  (r2 I:double) = (r2 I:double) * (r4 I:double) \l0x000d: IGET  (r4 I:double) = (r8 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mArcVelocity double  (LINE:360)\l0x000f: INVOKE  (r6 I:double) = (r0 I:double A[D('vx' double)]), (r2 I:double A[D('vy' double)]) type: STATIC call: java.lang.Math.hypot(double, double):double A[MD:(double, double):double (c)]\l0x0013: ARITH  (r4 I:double) = (r4 I:double) \/ (r6 I:double) \l0x0014: IGET  (r6 I:boolean) = (r8 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mVertical boolean  (LINE:361)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: NEG  (r6 I:double) = (r2 I:double A[D('vy' double)]) \l0x0019: ARITH  (r6 I:double) = (r6 I:double) * (r4 I:double A[D('norm' double)]) \l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|0x001e: RETURN  (r6 I:double) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: ARITH  (r6 I:double) = (r2 I:double A[D('vy' double)]) * (r4 I:double A[D('norm' double)]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|RETURN\lORIG_RETURN\l|0x001e: RETURN  (r6 I:double) \l}"];
MethodNode[shape=record,label="{double androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getDY((r8 'this' I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x001c \-\> B:6:0x001e\lDebug Info:\l  0x0006\-0x001e: r0 'vx' D\l  0x000d\-0x001e: r2 'vy' D\l  0x0014\-0x001e: r4 'norm' D\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

