digraph "CFG forandroidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.setPoint(D)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mVertical boolean  (LINE:335)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0008 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: IGET  (r0 I:double) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x0006: ARITH  (r0 I:double) = (r0 I:double) \- (r7 I:double A[D('time' double)]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IGET  (r2 I:double) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mOneOverDeltaTime double \l0x000e: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x0010: CONST  (r2 I:??[long, double]) = (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ??[long, double])  (LINE:336)\l0x0015: INVOKE  (r4 I:double) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r0 I:double A[D('percent' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.lookup(double):double A[MD:(double):double (m)]\l0x0019: ARITH  (r4 I:double) = (r4 I:double) * (r2 I:double) \l0x001b: INVOKE  (r2 I:double) = (r4 I:double A[D('angle' double)]) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)] (LINE:338)\l0x001f: IPUT  (r2 I:double), (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTmpSinAngle double \l0x0021: INVOKE  (r2 I:double) = (r4 I:double A[D('angle' double)]) type: STATIC call: java.lang.Math.cos(double):double A[MD:(double):double (c)] (LINE:339)\l0x0025: IPUT  (r2 I:double), (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTmpCosAngle double \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|RETURN\l|0x0027: RETURN    (LINE:340)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: IGET  (r0 I:double) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x000a: ARITH  (r0 I:double) = (r7 I:double A[D('time' double)]) \- (r0 I:double) \l}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.setPoint((r6 'this' I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc A[IMMUTABLE_TYPE, THIS]), (r7 I:double A[D('time' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0008 \-\> B:6:0x000c\lDebug Info:\l  0x0010\-0x0027: r0 'percent' D\l  0x001b\-0x0027: r4 'angle' D\l  \-1 \-0x0027: r7 'time' D\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
}

