digraph "CFG forandroidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.calcWave(F)F" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('period' float)])  (LINE:65)\l0x0001: IGET  (r1 I:int) = (r5 I:androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet) androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.mWaveShape int  (LINE:66)\l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0005: CONST  (r3 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|0x0007: SWITCH  (r1 I:??)\l case 1: goto B:34:0x0042\l case 2: goto B:32:0x003c\l case 3: goto B:30:0x0036\l case 4: goto B:28:0x0030\l case 5: goto B:26:0x0025\l case 6: goto B:24:0x0015\l default: goto B:22:0x000a \l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|0x000a: SGET  (r1 I:float) =  androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.VAL_2PI float  (LINE:69)\l0x000c: ARITH  (r1 I:float) = (r1 I:float) * (r0 I:float A[D('p' float)]) \l0x000e: CAST (r1 I:double) = (double) (r1 I:float) \l0x000f: INVOKE  (r1 I:double) = (r1 I:double) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)]\l0x0013: CAST (r1 I:float) = (float) (r1 I:double) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|RETURN\l|0x0014: RETURN  (r1 I:float) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0015|0x0015: CONST  (r1 I:??[int, float, short, byte, char]) = (1082130432(0x40800000, float:4.0) ??[int, float, short, byte, char])  (LINE:81)\l0x0017: ARITH  (r4 I:float) = (r0 I:float A[D('p' float)]) * (r1 I:float) \l0x0019: ARITH  (r4 I:float) = (r4 I:float) % (r1 I:float) \l0x001a: ARITH  (r4 I:float) = (r4 I:float) \- (r2 I:float) \l0x001b: INVOKE  (r1 I:float) = (r4 I:float) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x001f: ARITH  (r1 I:float) = (r3 I:float) \- (r1 I:float) \l0x0021: ARITH  (r2 I:float) = (r1 I:float A[D('x' float)]) * (r1 I:float A[D('x' float)])  (LINE:82)\l0x0023: ARITH  (r3 I:float) = (r3 I:float) \- (r2 I:float) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0024|RETURN\l|0x0024: RETURN  (r3 I:float) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0025|0x0025: SGET  (r1 I:float A[D('x' float)]) =  androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.VAL_2PI float  (LINE:79)\l0x0027: ARITH  (r1 I:float) = (r1 I:float) * (r0 I:float A[D('p' float)]) \l0x0029: CAST (r1 I:double) = (double) (r1 I:float) \l0x002a: INVOKE  (r1 I:double) = (r1 I:double) type: STATIC call: java.lang.Math.cos(double):double A[MD:(double):double (c)]\l0x002e: CAST (r1 I:float) = (float) (r1 I:double) \l}"];
Node_27 [shape=record,label="{27\:\ 0x002f|RETURN\l|0x002f: RETURN  (r1 I:float) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0030|0x0030: ARITH  (r1 I:float) = (r0 I:float A[D('p' float)]) * (r2 I:float)  (LINE:77)\l0x0032: ARITH  (r1 I:float) = (r1 I:float) + (r3 I:float) \l0x0033: ARITH  (r1 I:float) = (r1 I:float) % (r2 I:float) \l0x0034: ARITH  (r3 I:float) = (r3 I:float) \- (r1 I:float) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0035|RETURN\l|0x0035: RETURN  (r3 I:float) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0036|0x0036: ARITH  (r1 I:float) = (r0 I:float A[D('p' float)]) * (r2 I:float)  (LINE:75)\l0x0038: ARITH  (r1 I:float) = (r1 I:float) + (r3 I:float) \l0x0039: ARITH  (r1 I:float) = (r1 I:float) % (r2 I:float) \l0x003a: ARITH  (r1 I:float) = (r1 I:float) \- (r3 I:float) \l}"];
Node_31 [shape=record,label="{31\:\ 0x003b|RETURN\l|0x003b: RETURN  (r1 I:float) \l}"];
Node_32 [shape=record,label="{32\:\ 0x003c|0x003c: INVOKE  (r1 I:float) = (r0 I:float A[D('p' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)] (LINE:73)\l0x0040: ARITH  (r3 I:float) = (r3 I:float) \- (r1 I:float) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0041|RETURN\l|0x0041: RETURN  (r3 I:float) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0042|0x0042: SGET  (r1 I:float) =  androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.VAL_2PI float  (LINE:71)\l0x0044: ARITH  (r1 I:float) = (r1 I:float) * (r0 I:float A[D('p' float)]) \l0x0046: INVOKE  (r1 I:float) = (r1 I:float) type: STATIC call: java.lang.Math.signum(float):float A[MD:(float):float (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x004a|RETURN\l|0x004a: RETURN  (r1 I:float) \l}"];
MethodNode[shape=record,label="{public float androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.calcWave((r5 'this' I:androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet A[IMMUTABLE_TYPE, THIS]), (r6 I:float A[D('period' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0024 \-\> B:19:?, CROSS_EDGE: B:27:0x002f \-\> B:19:?, CROSS_EDGE: B:29:0x0035 \-\> B:19:?, CROSS_EDGE: B:31:0x003b \-\> B:19:?, CROSS_EDGE: B:33:0x0041 \-\> B:19:?, CROSS_EDGE: B:35:0x004a \-\> B:19:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x0025: r1 'x' F\l  0x0001\-0x005b: r0 'p' F\l  \-1 \-0x005b: r6 'period' F\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_24;
Node_21 -> Node_26;
Node_21 -> Node_28;
Node_21 -> Node_30;
Node_21 -> Node_32;
Node_21 -> Node_34;
Node_22 -> Node_23;
Node_23 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_19;
Node_26 -> Node_27;
Node_27 -> Node_19;
Node_28 -> Node_29;
Node_29 -> Node_19;
Node_30 -> Node_31;
Node_31 -> Node_19;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_34 -> Node_35;
Node_35 -> Node_19;
}

