digraph "CFG forandroidx.constraintlayout.core.motion.utils.Oscillator.getSlope(DDD)D" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY])  (LINE:168)\l0x0002: INVOKE  (r1 I:double) = (r16 I:androidx.constraintlayout.core.motion.utils.Oscillator), (r17 I:double A[D('time' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.Oscillator.getP(double):double A[MD:(double):double (m)]\l0x0006: ARITH  (r1 I:double) = (r19 I:double A[D('phase' double)]) + (r1 I:double) \l0x0008: INVOKE  (r3 I:double) = (r16 I:androidx.constraintlayout.core.motion.utils.Oscillator), (r17 I:double A[D('time' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.Oscillator.getDP(double):double A[MD:(double):double (m)] (LINE:170)\l0x000c: ARITH  (r3 I:double) = (r3 I:double) + (r21 I:double A[D('dphase' double)]) \l0x000e: IGET  (r5 I:int) = (r0 I:androidx.constraintlayout.core.motion.utils.Oscillator) androidx.constraintlayout.core.motion.utils.Oscillator.mType int  (LINE:171)\l0x0010: CONST  (r6 I:??[long, double]) = (4611686018427387904(0x4000000000000000, double:2.0) ??[long, double]) \l0x0012: CONST  (r8 I:??[long, double]) = (4616189618054758400(0x4010000000000000, double:4.0) ??[long, double]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|0x0014: SWITCH  (r5 I:??)\l case 1: goto B:38:0x005f\l case 2: goto B:36:0x004f\l case 3: goto B:34:0x004c\l case 4: goto B:32:0x0048\l case 5: goto B:30:0x003a\l case 6: goto B:28:0x0030\l case 7: goto B:26:0x0024\l default: goto B:24:0x0017 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|0x0017: IGET  (r5 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.Oscillator) androidx.constraintlayout.core.motion.utils.Oscillator.PI2 double  (LINE:174)\l0x0019: ARITH  (r7 I:double) = (r5 I:double) * (r3 I:double A[D('dangle_dtime' double)]) \l0x001b: ARITH  (r5 I:double) = (r5 I:double) * (r1 I:double A[D('angle' double)]) \l0x001d: INVOKE  (r5 I:double) = (r5 I:double) type: STATIC call: java.lang.Math.cos(double):double A[MD:(double):double (c)]\l0x0021: ARITH  (r7 I:double) = (r7 I:double) * (r5 I:double) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0023|RETURN\l|0x0023: RETURN  (r7 I:double) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0024|0x0024: IGET  (r5 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) = (r0 I:androidx.constraintlayout.core.motion.utils.Oscillator) androidx.constraintlayout.core.motion.utils.Oscillator.mCustomCurve androidx.constraintlayout.core.motion.utils.MonotonicCurveFit  (LINE:188)\l0x0026: CONST  (r6 I:??[long, double]) = (4607182418800017408(0x3ff0000000000000, double:1.0) ??[long, double]) \l0x0028: ARITH  (r6 I:double) = (r1 I:double A[D('angle' double)]) % (r6 I:double) \l0x002a: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002b: INVOKE  (r5 I:double) = (r5 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit), (r6 I:double), (r8 I:int) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getSlope(double, int):double A[MD:(double, int):double (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x002f|RETURN\l|0x002f: RETURN  (r5 I:double) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0030|0x0030: ARITH  (r10 I:double) = (r3 I:double A[D('dangle_dtime' double)]) * (r8 I:double)  (LINE:186)\l0x0032: ARITH  (r12 I:double) = (r1 I:double A[D('angle' double)]) * (r8 I:double) \l0x0034: ARITH  (r12 I:double) = (r12 I:double) + (r6 I:double) \l0x0035: ARITH  (r12 I:double) = (r12 I:double) % (r8 I:double) \l0x0036: ARITH  (r12 I:double) = (r12 I:double) \- (r6 I:double) \l0x0037: ARITH  (r10 I:double) = (r10 I:double) * (r12 I:double) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0039|RETURN\l|0x0039: RETURN  (r10 I:double) \l}"];
Node_30 [shape=record,label="{30\:\ 0x003a|0x003a: IGET  (r5 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.Oscillator) androidx.constraintlayout.core.motion.utils.Oscillator.PI2 double  (LINE:184)\l0x003c: NEG  (r7 I:double) = (r5 I:double) \l0x003d: ARITH  (r7 I:double) = (r7 I:double) * (r3 I:double A[D('dangle_dtime' double)]) \l0x003f: ARITH  (r5 I:double) = (r5 I:double) * (r1 I:double A[D('angle' double)]) \l0x0041: INVOKE  (r5 I:double) = (r5 I:double) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)]\l0x0045: ARITH  (r7 I:double) = (r7 I:double) * (r5 I:double) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0047|RETURN\l|0x0047: RETURN  (r7 I:double) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0048|0x0048: NEG  (r8 I:double) = (r3 I:double A[D('dangle_dtime' double)])  (LINE:182)\l0x0049: ARITH  (r8 I:double) = (r8 I:double) * (r6 I:double) \l}"];
Node_33 [shape=record,label="{33\:\ 0x004b|RETURN\l|0x004b: RETURN  (r8 I:double) \l}"];
Node_34 [shape=record,label="{34\:\ 0x004c|0x004c: ARITH  (r6 I:double) = (r6 I:double) * (r3 I:double A[D('dangle_dtime' double)])  (LINE:180)\l}"];
Node_35 [shape=record,label="{35\:\ 0x004e|RETURN\l|0x004e: RETURN  (r6 I:double) \l}"];
Node_36 [shape=record,label="{36\:\ 0x004f|0x004f: ARITH  (r10 I:double) = (r3 I:double A[D('dangle_dtime' double)]) * (r8 I:double)  (LINE:178)\l0x0051: ARITH  (r12 I:double) = (r1 I:double A[D('angle' double)]) * (r8 I:double) \l0x0053: CONST  (r14 I:??[long, double]) = (4613937818241073152(0x4008000000000000, double:3.0) ??[long, double]) \l0x0055: ARITH  (r12 I:double) = (r12 I:double) + (r14 I:double) \l0x0056: ARITH  (r12 I:double) = (r12 I:double) % (r8 I:double) \l0x0057: ARITH  (r12 I:double) = (r12 I:double) \- (r6 I:double) \l0x0058: INVOKE  (r5 I:double) = (r12 I:double) type: STATIC call: java.lang.Math.signum(double):double A[MD:(double):double (c)]\l0x005c: ARITH  (r10 I:double) = (r10 I:double) * (r5 I:double) \l}"];
Node_37 [shape=record,label="{37\:\ 0x005e|RETURN\l|0x005e: RETURN  (r10 I:double) \l}"];
Node_38 [shape=record,label="{38\:\ 0x005f|RETURN\l|0x005f: CONST  (r5 I:??[long, double]) = (0 ??[long, double])  (LINE:176)\l0x0061: RETURN  (r5 I:double) \l}"];
MethodNode[shape=record,label="{public double androidx.constraintlayout.core.motion.utils.Oscillator.getSlope((r16 'this' I:androidx.constraintlayout.core.motion.utils.Oscillator A[IMMUTABLE_TYPE, THIS]), (r17 I:double A[D('time' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:double A[D('phase' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:double A[D('dphase' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x002f \-\> B:21:?, CROSS_EDGE: B:29:0x0039 \-\> B:21:?, CROSS_EDGE: B:31:0x0047 \-\> B:21:?, CROSS_EDGE: B:33:0x004b \-\> B:21:?, CROSS_EDGE: B:35:0x004e \-\> B:21:?, CROSS_EDGE: B:37:0x005e \-\> B:21:?, CROSS_EDGE: B:39:0x0061 \-\> B:21:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x0073: r1 'angle' D\l  0x000e\-0x0073: r3 'dangle_dtime' D\l  \-1 \-0x0073: r17 'time' D\l  \-1 \-0x0073: r19 'phase' D\l  \-1 \-0x0073: r21 'dphase' D\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_26;
Node_23 -> Node_28;
Node_23 -> Node_30;
Node_23 -> Node_32;
Node_23 -> Node_34;
Node_23 -> Node_36;
Node_23 -> Node_38;
Node_24 -> Node_25;
Node_25 -> Node_21;
Node_26 -> Node_27;
Node_27 -> Node_21;
Node_28 -> Node_29;
Node_29 -> Node_21;
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_32 -> Node_33;
Node_33 -> Node_21;
Node_34 -> Node_35;
Node_35 -> Node_21;
Node_36 -> Node_37;
Node_37 -> Node_21;
Node_38 -> Node_21;
}

