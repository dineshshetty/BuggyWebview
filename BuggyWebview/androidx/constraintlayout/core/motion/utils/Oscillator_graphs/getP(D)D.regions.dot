digraph "CFG forandroidx.constraintlayout.core.motion.utils.Oscillator.getP(D)D" {
subgraph cluster_Region_612175886 {
label = "R(3:(1:3)(1:(1:17)(1:16))|4|(2:(1:7)|(1:(2:(1:13)|(2:10|11))))) | DECL_VAR: double time\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_74485299 {
label = "IF [B:21:0x0006] THEN: R(1:3) ELSE: R(1:(1:17)(1:16))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0006|if (r20 \< 0.0d) goto L3\l}"];
subgraph cluster_Region_2039877745 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0008|r1 = 0.0d\l}"];
}
subgraph cluster_Region_994607366 {
label = "R(1:(1:17)(1:16)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_806413632 {
label = "IF [B:24:0x000f] THEN: R(1:17) ELSE: R(1:16) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x000f|if (r20 \<= 1.0d) goto L17\l}"];
subgraph cluster_Region_1947133292 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0014|r1 = r20\l}"];
}
subgraph cluster_Region_727713888 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0011|r1 = 1.0d\l}"];
}
}
}
}
Node_27 [shape=record,label="{27\:\ 0x0016|PHI: r1 \l  PHI: (r1v4 'time' double) = (r1v2 'time' double), (r1v3 'time' double), (r1v5 'time' double) binds: [B:26:0x0014, B:25:0x0011, B:22:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|int int r3 = java.util.Arrays.binarySearch(r19.mPosition, r1)\l}"];
subgraph cluster_Region_1968296499 {
label = "R(2:(1:7)|(1:(2:(1:13)|(2:10|11))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_660317288 {
label = "IF [B:28:0x001e] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x001e|if (r3 \> 0) goto L6\l}"];
subgraph cluster_Region_1968233404 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return 1.0d\l}"];
}
}
subgraph cluster_Region_175060129 {
label = "R(1:(2:(1:13)|(2:10|11)))";
node [shape=record,color=blue];
subgraph cluster_Region_1038285385 {
label = "R(2:(1:13)|(2:10|11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_206805995 {
label = "IF [B:30:0x0025] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0025|if (r3 == 0) goto L12\l}"];
subgraph cluster_Region_1180268428 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0073|RETURN\lORIG_RETURN\l|return 0.0d\l}"];
}
}
subgraph cluster_Region_1158612872 {
label = "R(2:10|11)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0027|int int r3 = (\-r3) \- 1\ldouble r6 = r1\lfloat[] float[] r8 = r19.mPeriod\ldouble[] double[] r11 = r19.mPosition\ldouble double r9 = (r8[r3] \- r8[r3 \- 1]) \/ (r11[r3] \- r11[r3 \- 1])\ldouble double r4 = r19.mArea[r3 \- 1] + ((r8[r3 \- 1] \- (r11[r3 \- 1] * r9)) * (r6 \- r11[r3 \- 1])) + ((((r6 * r6) \- (r11[r3 \- 1] * r11[r3 \- 1])) * r9) \/ 2.0d)\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return r4\l}"];
}
}
}
}
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0000}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0020}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0071}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x000b}"];
MethodNode[shape=record,label="{double androidx.constraintlayout.core.motion.utils.Oscillator.getP((r19v0 'this' androidx.constraintlayout.core.motion.utils.Oscillator A[IMMUTABLE_TYPE, THIS]), (r20v0 'time' double A[D('time' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0027 \-\> B:33:0x0073, CROSS_EDGE: B:32:0x0071 \-\> B:33:0x0073, CROSS_EDGE: B:25:0x0011 \-\> B:27:0x0016, CROSS_EDGE: B:26:0x0014 \-\> B:27:0x0016\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_18;Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_30[style=dashed];
Node_34 -> Node_19;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_33 -> Node_19;
Node_31 -> Node_35;
Node_35 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_29 -> Node_34;
Node_32 -> Node_33;
Node_23 -> Node_24;
}

