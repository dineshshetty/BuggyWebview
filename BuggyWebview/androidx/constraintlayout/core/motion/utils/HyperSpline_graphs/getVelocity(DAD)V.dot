digraph "CFG forandroidx.constraintlayout.core.motion.utils.HyperSpline.getVelocity(D[D)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|double r0 = r10.mTotalLength * r11\lr4 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|LOOP_START\lLOOP:0: B:3:0x0007\-\>B:7:0x0014\lPHI: r0 r4 \l  PHI: (r0v2 'pos' double) = (r0v1 'pos' double), (r0v3 'pos' double) binds: [B:2:0x0000, B:7:0x0014] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'k' int) = (r4v0 'k' int), (r4v2 'k' int) binds: [B:2:0x0000, B:7:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|double[] r5 = r10.mCurveLength\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|if (r4 \>= (r5.length + (\-1))) goto L15\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e}"];
Node_6 [shape=record,label="{6\:\ 0x0012|if ((r5[r4] \> r0 ? 1 : (r5[r4] == r0 ? 0 : \-1)) \>= 0) goto L7\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|LOOP_END\lLOOP:0: B:3:0x0007\-\>B:7:0x0014\l|double r0 = r0 \- r5[r4]\lint r4 = r4 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x001a|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|r5 = 0\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|LOOP_START\lLOOP:1: B:9:0x001b\-\>B:11:0x001e\lPHI: r5 \l  PHI: (r5v2 'i' int) = (r5v1 'i' int), (r5v3 'i' int) binds: [B:8:0x001a, B:11:0x001e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|if (r5 \>= r13.length) goto L12\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|LOOP_END\lLOOP:1: B:9:0x001b\-\>B:11:0x001e\l|r13[r5] = r10.mCurve[r5][r4].vel(r0 \/ r10.mCurveLength[r4])\lint r5 = r5 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x001a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.HyperSpline.getVelocity((r10v0 'this' androidx.constraintlayout.core.motion.utils.HyperSpline A[IMMUTABLE_TYPE, THIS]), (r11v0 'p' double A[D('p' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'v' double[] A[D('v' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:7:0x0014 \-\> B:3:0x0007, BACK_EDGE: B:11:0x001e \-\> B:9:0x001b, CROSS_EDGE: B:4:0x000c \-\> B:8:0x001a\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_3;
Node_13 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_9;
Node_15 -> Node_12;
Node_12 -> Node_1;
Node_14 -> Node_8;
}

