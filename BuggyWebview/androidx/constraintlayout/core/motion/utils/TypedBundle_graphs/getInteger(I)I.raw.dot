digraph "CFG forandroidx.constraintlayout.core.motion.utils.TypedBundle.getInteger(I)I" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:41)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0001|LOOP_START\lLOOP:0: B:17:0x0001\-\>B:23:0x0010\l|0x0001: IGET  (r1 I:int) = (r2 I:androidx.constraintlayout.core.motion.utils.TypedBundle) androidx.constraintlayout.core.motion.utils.TypedBundle.mCountInt int \l}"];
Node_18 [shape=record,label="{18\:\ 0x0003|0x0003: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:26:0x0013 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|0x0005: IGET  (r1 I:int[]) = (r2 I:androidx.constraintlayout.core.motion.utils.TypedBundle) androidx.constraintlayout.core.motion.utils.TypedBundle.mTypeInt int[]  (LINE:42)\l0x0007: AGET  (r1 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)])  \-\> B:23:0x0010 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|LOOP_END\lLOOP:0: B:17:0x0001\-\>B:23:0x0010\l|0x0010: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:41)\l}"];
Node_27 [shape=record,label="{27\:\ 0x000b|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|0x000b: IGET  (r1 I:int[]) = (r2 I:androidx.constraintlayout.core.motion.utils.TypedBundle) androidx.constraintlayout.core.motion.utils.TypedBundle.mValueInt int[]  (LINE:43)\l0x000d: AGET  (r1 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x000f|RETURN\l|0x000f: RETURN  (r1 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0013|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|RETURN\l|0x0013: CONST  (r0 I:??[int, float, short, byte, char] A[D('i' int)]) = (\-1 ??[int, float, short, byte, char])  (LINE:46)\l0x0014: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int androidx.constraintlayout.core.motion.utils.TypedBundle.getInteger((r2 'this' I:androidx.constraintlayout.core.motion.utils.TypedBundle A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x0010 \-\> B:17:0x0001, CROSS_EDGE: B:25:0x0014 \-\> B:15:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0013: r0 'i' I\l  \-1 \-0x0014: r3 'type' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_23;
Node_20 -> Node_27[style=dashed];
Node_23 -> Node_17;
Node_27 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_15;
Node_26 -> Node_24;
Node_24 -> Node_15;
}

