digraph "CFG forandroidx.constraintlayout.core.motion.utils.ArcCurveFit.getSlope(DI)D" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:229)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0005: IGET  (r2 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x0007: CMP_G  (r0 I:int) = (r5 I:double A[D('t' double)]), (r2 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:230)\l0x000d: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x000f: IGET  (r5 I:double A[D('t' double)]) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:232)\l0x0013: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[]) \l0x0014: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x0016: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0018: IGET  (r0 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x001a: CMP_L  (r2 I:int) = (r5 I:double A[D('t' double)]), (r0 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:8:0x0027 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:233)\l0x0020: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[]) \l0x0021: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x0023: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0025: IGET  (r5 I:double A[D('t' double)]) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:236)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|LOOP_START\lLOOP:0: B:9:0x0028\-\>B:26:0x006c\l|0x0028: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x002a: ARRAY_LENGTH  (r2 I:int) = (r1 I:??[]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:30:0x006f \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)])  (LINE:237)\l0x002f: IGET  (r1 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x0031: CMP_G  (r3 I:int) = (r5 I:double A[D('t' double)]), (r1 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: IF  (r3 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:26:0x006c \l}"];
Node_26 [shape=record,label="{26\:\ 0x006c|LOOP_END\lLOOP:0: B:9:0x0028\-\>B:26:0x006c\l|0x006c: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:236)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0035|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:238)\l0x0037: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0039: IGET  (r1 I:boolean) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.linear boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|0x003b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0051 \l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('j' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0048  (LINE:239)\l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:240)\l0x0041: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0043: INVOKE  (r1 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r5 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDX(double):double A[MD:(double):double (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|RETURN\l|0x0047: RETURN  (r1 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|0x0048: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:242)\l0x004a: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x004c: INVOKE  (r1 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r5 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDY(double):double A[MD:(double):double (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0050|RETURN\l|0x0050: RETURN  (r1 I:double) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0051|0x0051: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:244)\l0x0053: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0055: INVOKE  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r5 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.setPoint(double):void A[MD:(double):void (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0058|0x0058: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('j' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0063  (LINE:245)\l}"];
Node_22 [shape=record,label="{22\:\ 0x005a|0x005a: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:246)\l0x005c: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x005e: INVOKE  (r1 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getDX():double A[MD:():double (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0062|RETURN\l|0x0062: RETURN  (r1 I:double) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0063|0x0063: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:248)\l0x0065: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0067: INVOKE  (r1 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getDY():double A[MD:():double (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x006b|RETURN\l|0x006b: RETURN  (r1 I:double) \l}"];
Node_30 [shape=record,label="{30\:\ 0x006f|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x006f|RETURN\l|0x006f: CONST  (r0 I:??[long, double] A[D('i' int)]) = (9221120237041090560(0x7ff8000000000000, double:NaN) ??[long, double])  (LINE:251)\l0x0071: RETURN  (r0 I:double) \l}"];
MethodNode[shape=record,label="{public double androidx.constraintlayout.core.motion.utils.ArcCurveFit.getSlope((r4 'this' I:androidx.constraintlayout.core.motion.utils.ArcCurveFit A[IMMUTABLE_TYPE, THIS]), (r5 I:double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('j' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0050 \-\> B:1:?, CROSS_EDGE: B:23:0x0062 \-\> B:1:?, CROSS_EDGE: B:25:0x006b \-\> B:1:?, BACK_EDGE: B:26:0x006c \-\> B:9:0x0028, CROSS_EDGE: B:28:0x0071 \-\> B:1:?, CROSS_EDGE: B:6:0x001c \-\> B:8:0x0027, CROSS_EDGE: B:3:0x0009 \-\> B:5:0x0011\lDebug Info:\l  0x0028\-0x006f: r0 'i' I\l  \-1 \-0x0071: r5 't' D\l  \-1 \-0x0071: r7 'j' I\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getSlope(double, int):double]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_30;
Node_11 -> Node_12;
Node_12 -> Node_26;
Node_12 -> Node_29[style=dashed];
Node_26 -> Node_9;
Node_29 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_1;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_1;
Node_24 -> Node_25;
Node_25 -> Node_1;
Node_30 -> Node_27;
Node_27 -> Node_1;
}

