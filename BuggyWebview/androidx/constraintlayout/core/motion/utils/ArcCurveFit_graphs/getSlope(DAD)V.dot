digraph "CFG forandroidx.constraintlayout.core.motion.utils.ArcCurveFit.getSlope(D[D)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if ((r7 \> r6.mArcs[0].mTime1 ? 1 : (r7 == r6.mArcs[0].mTime1 ? 0 : \-1)) \>= 0) goto L20\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|double r7 = r6.mArcs[0].mTime1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|PHI: r7 \l  PHI: (r7v2 't' double) = (r7v0 't' double), (r7v1 't' double), (r7v3 't' double) binds: [B:6:0x001d, B:7:0x001f, B:4:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|r2 = 0\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|LOOP_START\lLOOP:0: B:9:0x0028\-\>B:19:0x006e\lPHI: r2 \l  PHI: (r2v7 'i' int) = (r2v6 'i' int), (r2v8 'i' int) binds: [B:8:0x0027, B:19:0x006e] A[DONT_GENERATE, DONT_INLINE]\l|androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] r3 = r6.mArcs\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|if (r2 \>= r3.length) goto L18\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d}"];
Node_12 [shape=record,label="{12\:\ 0x0033|if ((r7 \> r3[r2].mTime2 ? 1 : (r7 == r3[r2].mTime2 ? 0 : \-1)) \> 0) goto L9\l}"];
Node_19 [shape=record,label="{19\:\ 0x006e|LOOP_END\lLOOP:0: B:9:0x0028\-\>B:19:0x006e\l|int r2 = r2 + 1\l}"];
Node_21 [shape=record,label="{21\:\ 0x0035|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035}"];
Node_14 [shape=record,label="{14\:\ 0x003b|if (r6.mArcs[r2].linear == false) goto L16\l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|r9[0] = r6.mArcs[r2].getLinearDX(r7)\lr9[1] = r6.mArcs[r2].getLinearDY(r7)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0052|r6.mArcs[r2].setPoint(r7)\lr9[0] = r6.mArcs[r2].getDX()\lr9[1] = r6.mArcs[r2].getDY()\l}"];
Node_18 [shape=record,label="{18\:\ 0x006d|RETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ 0x0071|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0071|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] r2 = r6.mArcs\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|if ((r7 \> r2[r2.length \- 1].mTime2 ? 1 : (r7 == r2[r2.length \- 1].mTime2 ? 0 : \-1)) \<= 0) goto L4\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] r2 = r6.mArcs\ldouble r7 = r2[r2.length \- 1].mTime2\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.ArcCurveFit.getSlope((r6v0 'this' androidx.constraintlayout.core.motion.utils.ArcCurveFit A[IMMUTABLE_TYPE, THIS]), (r7v0 't' double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'v' double[] A[D('v' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x006d \-\> B:1:?, BACK_EDGE: B:19:0x006e \-\> B:9:0x0028, CROSS_EDGE: B:20:0x0071 \-\> B:1:?, CROSS_EDGE: B:7:0x001f \-\> B:8:0x0027, CROSS_EDGE: B:6:0x001d \-\> B:8:0x0027\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getSlope(double, double[]):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_22;
Node_11 -> Node_12;
Node_12 -> Node_19;
Node_12 -> Node_21[style=dashed];
Node_19 -> Node_9;
Node_21 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_22 -> Node_20;
Node_20 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

