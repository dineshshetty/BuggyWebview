digraph "CFG forandroidx.constraintlayout.core.motion.utils.ArcCurveFit.getPos(D[F)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mExtrapolate boolean  (LINE:96)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x00f3 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:97)\l0x0008: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x000a: IGET  (r3 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x000c: CMP_G  (r0 I:int) = (r13 I:double A[D('t' double)]), (r3 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:11:0x0088 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:98)\l0x0012: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0014: IGET  (r3 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x0016: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:99)\l0x0018: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x001a: IGET  (r5 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x001c: ARITH  (r5 I:double) = (r13 I:double A[D('t' double)]) \- (r5 I:double) \l0x001e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:100)\l0x001f: IGET  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:101)\l0x0021: AGET  (r7 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x0023: IGET  (r7 I:boolean) = (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.linear boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0054 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: IGET  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:102)\l0x0029: AGET  (r7 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x002b: INVOKE  (r7 I:double) = (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearX(double):double A[MD:(double):double (m)]\l0x002f: IGET  (r9 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0031: AGET  (r9 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x0033: INVOKE  (r9 I:double) = (r9 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDX(double):double A[MD:(double):double (m)]\l0x0037: ARITH  (r9 I:double) = (r9 I:double) * (r5 I:double A[D('dt' double)]) \l0x0039: ARITH  (r7 I:double) = (r7 I:double) + (r9 I:double) \l0x003a: CAST (r7 I:float) = (float) (r7 I:double) \l0x003b: APUT  (r15 I:??[int, float][] A[D('v' float[])]), (r1 I:??[int, short, byte, char]), (r7 I:??[int, float, short, byte, char]) \l0x003d: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:103)\l0x003f: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x0041: INVOKE  (r7 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearY(double):double A[MD:(double):double (m)]\l0x0045: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0047: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x0049: INVOKE  (r9 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDY(double):double A[MD:(double):double (m)]\l0x004d: ARITH  (r9 I:double) = (r9 I:double) * (r5 I:double A[D('dt' double)]) \l0x004f: ARITH  (r7 I:double) = (r7 I:double) + (r9 I:double) \l0x0050: CAST (r1 I:float) = (float) (r7 I:double) \l0x0051: APUT  (r15 I:??[int, float][] A[D('v' float[])]), (r2 I:??[int, short, byte, char]), (r1 I:??[int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x0087: RETURN   A[SYNTHETIC] (LINE:109)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0054|0x0054: IGET  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:105)\l0x0056: AGET  (r7 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x0058: INVOKE  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.setPoint(double):void A[MD:(double):void (m)]\l0x005b: IGET  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:106)\l0x005d: AGET  (r7 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x005f: INVOKE  (r7 I:double) = (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getX():double A[MD:():double (m)]\l0x0063: IGET  (r9 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0065: AGET  (r9 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x0067: INVOKE  (r9 I:double) = (r9 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getDX():double A[MD:():double (m)]\l0x006b: ARITH  (r9 I:double) = (r9 I:double) * (r5 I:double A[D('dt' double)]) \l0x006d: ARITH  (r7 I:double) = (r7 I:double) + (r9 I:double) \l0x006e: CAST (r7 I:float) = (float) (r7 I:double) \l0x006f: APUT  (r15 I:??[int, float][] A[D('v' float[])]), (r1 I:??[int, short, byte, char]), (r7 I:??[int, float, short, byte, char]) \l0x0071: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:107)\l0x0073: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x0075: INVOKE  (r7 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getY():double A[MD:():double (m)]\l0x0079: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x007b: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x007d: INVOKE  (r9 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getDY():double A[MD:():double (m)]\l0x0081: ARITH  (r9 I:double) = (r9 I:double) * (r5 I:double A[D('dt' double)]) \l0x0083: ARITH  (r7 I:double) = (r7 I:double) + (r9 I:double) \l0x0084: CAST (r1 I:float) = (float) (r7 I:double) \l0x0085: APUT  (r15 I:??[int, float][] A[D('v' float[])]), (r2 I:??[int, short, byte, char]), (r1 I:??[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0087|RETURN\lORIG_RETURN\l|0x0087: RETURN    (LINE:109)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0088|0x0088: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] A[D('p' int)]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:111)\l0x008a: ARRAY_LENGTH  (r3 I:int) = (r0 I:??[]) \l0x008b: ARITH  (r3 I:int) = (r3 I:int) \- (r2 I:int) \l0x008c: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x008e: IGET  (r3 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x0090: CMP_L  (r0 I:int) = (r13 I:double A[D('t' double)]), (r3 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0092|0x0092: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:24:0x0118 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0094|0x0094: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:112)\l0x0096: ARRAY_LENGTH  (r3 I:int) = (r0 I:??[]) \l0x0097: ARITH  (r3 I:int) = (r3 I:int) \- (r2 I:int) \l0x0098: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x009a: IGET  (r3 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x009c: ARITH  (r5 I:double) = (r13 I:double A[D('t' double)]) \- (r3 I:double A[D('t0' double)])  (LINE:113)\l0x009e: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:114)\l0x00a0: ARRAY_LENGTH  (r7 I:int) = (r0 I:??[]) \l0x00a1: ARITH  (r7 I:int) = (r7 I:int) \- (r2 I:int) \l0x00a2: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)])  (LINE:115)\l0x00a4: IGET  (r0 I:boolean) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.linear boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x00a6|0x00a6: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x00d5 \l}"];
Node_15 [shape=record,label="{15\:\ 0x00a8|0x00a8: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:116)\l0x00aa: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00ac: INVOKE  (r8 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearX(double):double A[MD:(double):double (m)]\l0x00b0: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x00b2: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00b4: INVOKE  (r10 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDX(double):double A[MD:(double):double (m)]\l0x00b8: ARITH  (r10 I:double) = (r10 I:double) * (r5 I:double A[D('dt' double)]) \l0x00ba: ARITH  (r8 I:double) = (r8 I:double) + (r10 I:double) \l0x00bb: CAST (r0 I:float) = (float) (r8 I:double) \l0x00bc: APUT  (r15 I:??[int, float][] A[D('v' float[])]), (r1 I:??[int, short, byte, char]), (r0 I:??[int, float, short, byte, char]) \l0x00be: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:117)\l0x00c0: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00c2: INVOKE  (r0 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearY(double):double A[MD:(double):double (m)]\l0x00c6: IGET  (r8 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x00c8: AGET  (r8 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00ca: INVOKE  (r8 I:double) = (r8 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDY(double):double A[MD:(double):double (m)]\l0x00ce: ARITH  (r8 I:double) = (r8 I:double) * (r5 I:double A[D('dt' double)]) \l0x00d0: ARITH  (r0 I:double) = (r0 I:double) + (r8 I:double) \l0x00d1: CAST (r0 I:float) = (float) (r0 I:double) \l0x00d2: APUT  (r15 I:??[int, float][] A[D('v' float[])]), (r2 I:??[int, short, byte, char]), (r0 I:??[int, float, short, byte, char]) \l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|0x00f2: RETURN   A[SYNTHETIC] (LINE:123)\l}"];
Node_16 [shape=record,label="{16\:\ 0x00d5|0x00d5: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:119)\l0x00d7: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00d9: INVOKE  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r13 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.setPoint(double):void A[MD:(double):void (m)]\l0x00dc: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:120)\l0x00de: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00e0: INVOKE  (r8 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getX():double A[MD:():double (m)]\l0x00e4: CAST (r0 I:float) = (float) (r8 I:double) \l0x00e5: APUT  (r15 I:??[int, float][] A[D('v' float[])]), (r1 I:??[int, short, byte, char]), (r0 I:??[int, float, short, byte, char]) \l0x00e7: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:121)\l0x00e9: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00eb: INVOKE  (r0 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getY():double A[MD:():double (m)]\l0x00ef: CAST (r0 I:float) = (float) (r0 I:double) \l0x00f0: APUT  (r15 I:??[int, float][] A[D('v' float[])]), (r2 I:??[int, short, byte, char]), (r0 I:??[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x00f2|RETURN\lORIG_RETURN\l|0x00f2: RETURN    (LINE:123)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0118|0x0118: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:132)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0119|LOOP_START\lLOOP:0: B:25:0x0119\-\>B:35:0x0163\l|0x0119: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x011b: ARRAY_LENGTH  (r4 I:int) = (r3 I:??[]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x011c|0x011c: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:38:0x0166 \l}"];
Node_27 [shape=record,label="{27\:\ 0x011e|0x011e: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)])  (LINE:133)\l0x0120: IGET  (r3 I:double) = (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x0122: CMP_G  (r5 I:int) = (r13 I:double A[D('t' double)]), (r3 I:double) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0124|0x0124: IF  (r5 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:35:0x0163 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0163|LOOP_END\lLOOP:0: B:25:0x0119\-\>B:35:0x0163\l|0x0163: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:132)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0126|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0126|0x0126: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:134)\l0x0128: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x012a: IGET  (r3 I:boolean) = (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.linear boolean \l}"];
Node_30 [shape=record,label="{30\:\ 0x012c|0x012c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0145 \l}"];
Node_31 [shape=record,label="{31\:\ 0x012e|0x012e: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:135)\l0x0130: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0132: INVOKE  (r3 I:double) = (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r13 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearX(double):double A[MD:(double):double (m)]\l0x0136: CAST (r3 I:float) = (float) (r3 I:double) \l0x0137: APUT  (r15 I:??[int, float][] A[D('v' float[])]), (r1 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l0x0139: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:136)\l0x013b: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x013d: INVOKE  (r3 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r13 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearY(double):double A[MD:(double):double (m)]\l0x0141: CAST (r1 I:float) = (float) (r3 I:double) \l0x0142: APUT  (r15 I:??[int, float][] A[D('v' float[])]), (r2 I:??[int, short, byte, char]), (r1 I:??[int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0144|RETURN\l|0x0144: RETURN    (LINE:137)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0145|0x0145: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:139)\l0x0147: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0149: INVOKE  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r13 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.setPoint(double):void A[MD:(double):void (m)]\l0x014c: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:140)\l0x014e: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0150: INVOKE  (r3 I:double) = (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getX():double A[MD:():double (m)]\l0x0154: CAST (r3 I:float) = (float) (r3 I:double) \l0x0155: APUT  (r15 I:??[int, float][] A[D('v' float[])]), (r1 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l0x0157: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:141)\l0x0159: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x015b: INVOKE  (r3 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getY():double A[MD:():double (m)]\l0x015f: CAST (r1 I:float) = (float) (r3 I:double) \l0x0160: APUT  (r15 I:??[int, float][] A[D('v' float[])]), (r2 I:??[int, short, byte, char]), (r1 I:??[int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0162|RETURN\l|0x0162: RETURN    (LINE:142)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0166|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0166|RETURN\l|0x0166: RETURN    (LINE:145)\l}"];
Node_18 [shape=record,label="{18\:\ 0x00f3|0x00f3: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:126)\l0x00f5: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x00f7: IGET  (r3 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x00f9: CMP_G  (r0 I:int) = (r13 I:double A[D('t' double)]), (r3 I:double) \l}"];
Node_19 [shape=record,label="{19\:\ 0x00fb|0x00fb: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:21:0x0104 \l}"];
Node_20 [shape=record,label="{20\:\ 0x00fd|0x00fd: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:127)\l0x00ff: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0101: IGET  (r13 I:double A[D('t' double)]) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l}"];
Node_21 [shape=record,label="{21\:\ 0x0104|0x0104: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:128)\l0x0106: ARRAY_LENGTH  (r3 I:int) = (r0 I:??[]) \l0x0107: ARITH  (r3 I:int) = (r3 I:int) \- (r2 I:int) \l0x0108: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x010a: IGET  (r3 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x010c: CMP_L  (r0 I:int) = (r13 I:double A[D('t' double)]), (r3 I:double) \l}"];
Node_22 [shape=record,label="{22\:\ 0x010e|0x010e: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:24:0x0118 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0110|0x0110: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:129)\l0x0112: ARRAY_LENGTH  (r3 I:int) = (r0 I:??[]) \l0x0113: ARITH  (r3 I:int) = (r3 I:int) \- (r2 I:int) \l0x0114: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x0116: IGET  (r13 I:double A[D('t' double)]) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.ArcCurveFit.getPos((r12 'this' I:androidx.constraintlayout.core.motion.utils.ArcCurveFit A[IMMUTABLE_TYPE, THIS]), (r13 I:double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:float[] A[D('v' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0054 \-\> B:10:0x0087, CROSS_EDGE: B:17:0x00f2 \-\> B:1:?, CROSS_EDGE: B:16:0x00d5 \-\> B:17:0x00f2, CROSS_EDGE: B:32:0x0144 \-\> B:1:?, CROSS_EDGE: B:34:0x0162 \-\> B:1:?, BACK_EDGE: B:35:0x0163 \-\> B:25:0x0119, CROSS_EDGE: B:36:0x0166 \-\> B:1:?, CROSS_EDGE: B:20:0x00fd \-\> B:24:0x0118, CROSS_EDGE: B:23:0x0110 \-\> B:24:0x0118, CROSS_EDGE: B:22:0x010e \-\> B:24:0x0118\lDebug Info:\l  0x001f\-0x0088: r0 'p' I\l  0x0016\-0x0088: r3 't0' D\l  0x001e\-0x0088: r5 'dt' D\l  0x009c\-0x00f3: r3 't0' D\l  0x009e\-0x00f3: r5 'dt' D\l  0x00a2\-0x00f3: r7 'p' I\l  0x0119\-0x0166: r0 'i' I\l  \-1 \-0x0166: r13 't' D\l  \-1 \-0x0166: r15 'v' [F\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, float[]):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_39;
Node_39 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_24;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_40;
Node_40 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_38;
Node_27 -> Node_28;
Node_28 -> Node_35;
Node_28 -> Node_37[style=dashed];
Node_35 -> Node_25;
Node_37 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_1;
Node_33 -> Node_34;
Node_34 -> Node_1;
Node_38 -> Node_36;
Node_36 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
}

