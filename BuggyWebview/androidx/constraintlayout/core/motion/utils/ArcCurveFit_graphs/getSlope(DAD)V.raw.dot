digraph "CFG forandroidx.constraintlayout.core.motion.utils.ArcCurveFit.getSlope(D[D)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:149)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0005: IGET  (r2 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x0007: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0008: CMP_G  (r4 I:int) = (r7 I:double A[D('t' double)]), (r2 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r4 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:5:0x0013 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IGET  (r2 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:150)\l0x000e: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0010: IGET  (r7 I:double A[D('t' double)]) = (r2 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:155)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|LOOP_START\lLOOP:0: B:9:0x0028\-\>B:19:0x006e\l|0x0028: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x002a: ARRAY_LENGTH  (r4 I:int) = (r3 I:??[]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:22:0x0071 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char] A[D('i' int)])  (LINE:156)\l0x002f: IGET  (r3 I:double) = (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x0031: CMP_G  (r5 I:int) = (r7 I:double A[D('t' double)]), (r3 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: IF  (r5 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:19:0x006e \l}"];
Node_19 [shape=record,label="{19\:\ 0x006e|LOOP_END\lLOOP:0: B:9:0x0028\-\>B:19:0x006e\l|0x006e: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:155)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0035|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:157)\l0x0037: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x0039: IGET  (r3 I:boolean) = (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.linear boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|0x003b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0052 \l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:158)\l0x003f: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x0041: INVOKE  (r3 I:double) = (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r7 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDX(double):double A[MD:(double):double (m)]\l0x0045: APUT  (r9 I:??[long, double][] A[D('v' double[])]), (r1 I:??[int, short, byte, char]), (r3 I:??[long, double]) \l0x0047: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:159)\l0x0049: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x004b: INVOKE  (r3 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r7 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDY(double):double A[MD:(double):double (m)]\l0x004f: APUT  (r9 I:??[long, double][] A[D('v' double[])]), (r0 I:??[int, short, byte, char]), (r3 I:??[long, double]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|RETURN\l|0x0051: RETURN    (LINE:160)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0052|0x0052: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:162)\l0x0054: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x0056: INVOKE  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r7 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.setPoint(double):void A[MD:(double):void (m)]\l0x0059: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:163)\l0x005b: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x005d: INVOKE  (r3 I:double) = (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getDX():double A[MD:():double (m)]\l0x0061: APUT  (r9 I:??[long, double][] A[D('v' double[])]), (r1 I:??[int, short, byte, char]), (r3 I:??[long, double]) \l0x0063: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:164)\l0x0065: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x0067: INVOKE  (r3 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getDY():double A[MD:():double (m)]\l0x006b: APUT  (r9 I:??[long, double][] A[D('v' double[])]), (r0 I:??[int, short, byte, char]), (r3 I:??[long, double]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x006d|RETURN\l|0x006d: RETURN    (LINE:165)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0071|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0071|RETURN\l|0x0071: RETURN    (LINE:168)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IGET  (r2 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:151)\l0x0015: ARRAY_LENGTH  (r3 I:int) = (r2 I:??[]) \l0x0016: ARITH  (r3 I:int) = (r3 I:int) \- (r0 I:int) \l0x0017: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x0019: IGET  (r2 I:double) = (r2 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x001b: CMP_L  (r4 I:int) = (r7 I:double A[D('t' double)]), (r2 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:8:0x0027 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: IGET  (r2 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:152)\l0x0021: ARRAY_LENGTH  (r3 I:int) = (r2 I:??[]) \l0x0022: ARITH  (r3 I:int) = (r3 I:int) \- (r0 I:int) \l0x0023: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x0025: IGET  (r7 I:double A[D('t' double)]) = (r2 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.ArcCurveFit.getSlope((r6 'this' I:androidx.constraintlayout.core.motion.utils.ArcCurveFit A[IMMUTABLE_TYPE, THIS]), (r7 I:double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:double[] A[D('v' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x006d \-\> B:1:?, BACK_EDGE: B:19:0x006e \-\> B:9:0x0028, CROSS_EDGE: B:20:0x0071 \-\> B:1:?, CROSS_EDGE: B:7:0x001f \-\> B:8:0x0027, CROSS_EDGE: B:6:0x001d \-\> B:8:0x0027\lDebug Info:\l  0x0028\-0x0071: r2 'i' I\l  \-1 \-0x0071: r7 't' D\l  \-1 \-0x0071: r9 'v' [D\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getSlope(double, double[]):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_22;
Node_11 -> Node_12;
Node_12 -> Node_19;
Node_12 -> Node_21[style=dashed];
Node_19 -> Node_9;
Node_21 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_22 -> Node_20;
Node_20 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

