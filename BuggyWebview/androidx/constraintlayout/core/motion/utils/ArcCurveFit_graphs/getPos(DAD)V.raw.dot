digraph "CFG forandroidx.constraintlayout.core.motion.utils.ArcCurveFit.getPos(D[D)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mExtrapolate boolean  (LINE:41)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0101 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:42)\l0x0008: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x000a: IGET  (r3 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x000c: CMP_G  (r0 I:int) = (r13 I:double A[D('t' double)]), (r3 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:11:0x0084 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:43)\l0x0012: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0014: IGET  (r3 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x0016: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:44)\l0x0018: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x001a: IGET  (r5 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x001c: ARITH  (r5 I:double) = (r13 I:double A[D('t' double)]) \- (r5 I:double) \l0x001e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:45)\l0x001f: IGET  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:46)\l0x0021: AGET  (r7 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x0023: IGET  (r7 I:boolean) = (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.linear boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0052 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: IGET  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:47)\l0x0029: AGET  (r7 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x002b: INVOKE  (r7 I:double) = (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearX(double):double A[MD:(double):double (m)]\l0x002f: IGET  (r9 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0031: AGET  (r9 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x0033: INVOKE  (r9 I:double) = (r9 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDX(double):double A[MD:(double):double (m)]\l0x0037: ARITH  (r9 I:double) = (r9 I:double) * (r5 I:double A[D('dt' double)]) \l0x0039: ARITH  (r7 I:double) = (r7 I:double) + (r9 I:double) \l0x003a: APUT  (r15 I:??[long, double][] A[D('v' double[])]), (r1 I:??[int, short, byte, char]), (r7 I:??[long, double]) \l0x003c: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:48)\l0x003e: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x0040: INVOKE  (r7 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearY(double):double A[MD:(double):double (m)]\l0x0044: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0046: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x0048: INVOKE  (r9 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDY(double):double A[MD:(double):double (m)]\l0x004c: ARITH  (r9 I:double) = (r9 I:double) * (r5 I:double A[D('dt' double)]) \l0x004e: ARITH  (r7 I:double) = (r7 I:double) + (r9 I:double) \l0x004f: APUT  (r15 I:??[long, double][] A[D('v' double[])]), (r2 I:??[int, short, byte, char]), (r7 I:??[long, double]) \l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x0083: RETURN   A[SYNTHETIC] (LINE:54)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0052|0x0052: IGET  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:50)\l0x0054: AGET  (r7 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x0056: INVOKE  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.setPoint(double):void A[MD:(double):void (m)]\l0x0059: IGET  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:51)\l0x005b: AGET  (r7 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x005d: INVOKE  (r7 I:double) = (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getX():double A[MD:():double (m)]\l0x0061: IGET  (r9 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0063: AGET  (r9 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x0065: INVOKE  (r9 I:double) = (r9 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getDX():double A[MD:():double (m)]\l0x0069: ARITH  (r9 I:double) = (r9 I:double) * (r5 I:double A[D('dt' double)]) \l0x006b: ARITH  (r7 I:double) = (r7 I:double) + (r9 I:double) \l0x006c: APUT  (r15 I:??[long, double][] A[D('v' double[])]), (r1 I:??[int, short, byte, char]), (r7 I:??[long, double]) \l0x006e: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:52)\l0x0070: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x0072: INVOKE  (r7 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getY():double A[MD:():double (m)]\l0x0076: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0078: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('p' int)]) \l0x007a: INVOKE  (r9 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getDY():double A[MD:():double (m)]\l0x007e: ARITH  (r9 I:double) = (r9 I:double) * (r5 I:double A[D('dt' double)]) \l0x0080: ARITH  (r7 I:double) = (r7 I:double) + (r9 I:double) \l0x0081: APUT  (r15 I:??[long, double][] A[D('v' double[])]), (r2 I:??[int, short, byte, char]), (r7 I:??[long, double]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0083|RETURN\lORIG_RETURN\l|0x0083: RETURN    (LINE:54)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0084|0x0084: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] A[D('p' int)]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:56)\l0x0086: ARRAY_LENGTH  (r3 I:int) = (r0 I:??[]) \l0x0087: ARITH  (r3 I:int) = (r3 I:int) \- (r2 I:int) \l0x0088: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x008a: IGET  (r3 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x008c: CMP_L  (r0 I:int) = (r13 I:double A[D('t' double)]), (r3 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x008e|0x008e: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:24:0x0125 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0090|0x0090: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:57)\l0x0092: ARRAY_LENGTH  (r3 I:int) = (r0 I:??[]) \l0x0093: ARITH  (r3 I:int) = (r3 I:int) \- (r2 I:int) \l0x0094: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x0096: IGET  (r3 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x0098: ARITH  (r5 I:double) = (r13 I:double A[D('t' double)]) \- (r3 I:double A[D('t0' double)])  (LINE:58)\l0x009a: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:59)\l0x009c: ARRAY_LENGTH  (r7 I:int) = (r0 I:??[]) \l0x009d: ARITH  (r7 I:int) = (r7 I:int) \- (r2 I:int) \l0x009e: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)])  (LINE:60)\l0x00a0: IGET  (r0 I:boolean) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.linear boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x00a2|0x00a2: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x00cf \l}"];
Node_15 [shape=record,label="{15\:\ 0x00a4|0x00a4: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:61)\l0x00a6: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00a8: INVOKE  (r8 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearX(double):double A[MD:(double):double (m)]\l0x00ac: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x00ae: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00b0: INVOKE  (r10 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDX(double):double A[MD:(double):double (m)]\l0x00b4: ARITH  (r10 I:double) = (r10 I:double) * (r5 I:double A[D('dt' double)]) \l0x00b6: ARITH  (r8 I:double) = (r8 I:double) + (r10 I:double) \l0x00b7: APUT  (r15 I:??[long, double][] A[D('v' double[])]), (r1 I:??[int, short, byte, char]), (r8 I:??[long, double]) \l0x00b9: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:62)\l0x00bb: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00bd: INVOKE  (r0 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearY(double):double A[MD:(double):double (m)]\l0x00c1: IGET  (r8 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x00c3: AGET  (r8 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00c5: INVOKE  (r8 I:double) = (r8 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r3 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDY(double):double A[MD:(double):double (m)]\l0x00c9: ARITH  (r8 I:double) = (r8 I:double) * (r5 I:double A[D('dt' double)]) \l0x00cb: ARITH  (r0 I:double) = (r0 I:double) + (r8 I:double) \l0x00cc: APUT  (r15 I:??[long, double][] A[D('v' double[])]), (r2 I:??[int, short, byte, char]), (r0 I:??[long, double]) \l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|0x0100: RETURN   A[SYNTHETIC] (LINE:68)\l}"];
Node_16 [shape=record,label="{16\:\ 0x00cf|0x00cf: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:64)\l0x00d1: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00d3: INVOKE  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r13 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.setPoint(double):void A[MD:(double):void (m)]\l0x00d6: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:65)\l0x00d8: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00da: INVOKE  (r8 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getX():double A[MD:():double (m)]\l0x00de: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x00e0: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00e2: INVOKE  (r10 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getDX():double A[MD:():double (m)]\l0x00e6: ARITH  (r10 I:double) = (r10 I:double) * (r5 I:double A[D('dt' double)]) \l0x00e8: ARITH  (r8 I:double) = (r8 I:double) + (r10 I:double) \l0x00e9: APUT  (r15 I:??[long, double][] A[D('v' double[])]), (r1 I:??[int, short, byte, char]), (r8 I:??[long, double]) \l0x00eb: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:66)\l0x00ed: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00ef: INVOKE  (r0 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getY():double A[MD:():double (m)]\l0x00f3: IGET  (r8 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x00f5: AGET  (r8 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('p' int)]) \l0x00f7: INVOKE  (r8 I:double) = (r8 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getDY():double A[MD:():double (m)]\l0x00fb: ARITH  (r8 I:double) = (r8 I:double) * (r5 I:double A[D('dt' double)]) \l0x00fd: ARITH  (r0 I:double) = (r0 I:double) + (r8 I:double) \l0x00fe: APUT  (r15 I:??[long, double][] A[D('v' double[])]), (r2 I:??[int, short, byte, char]), (r0 I:??[long, double]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0100|RETURN\lORIG_RETURN\l|0x0100: RETURN    (LINE:68)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0125|0x0125: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:79)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0126|LOOP_START\lLOOP:0: B:25:0x0126\-\>B:35:0x016c\l|0x0126: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0128: ARRAY_LENGTH  (r4 I:int) = (r3 I:??[]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0129|0x0129: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:38:0x016f \l}"];
Node_27 [shape=record,label="{27\:\ 0x012b|0x012b: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)])  (LINE:80)\l0x012d: IGET  (r3 I:double) = (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x012f: CMP_G  (r5 I:int) = (r13 I:double A[D('t' double)]), (r3 I:double) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0131|0x0131: IF  (r5 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:35:0x016c \l}"];
Node_35 [shape=record,label="{35\:\ 0x016c|LOOP_END\lLOOP:0: B:25:0x0126\-\>B:35:0x016c\l|0x016c: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:79)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0133|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0133|0x0133: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:81)\l0x0135: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0137: IGET  (r3 I:boolean) = (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.linear boolean \l}"];
Node_30 [shape=record,label="{30\:\ 0x0139|0x0139: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0150 \l}"];
Node_31 [shape=record,label="{31\:\ 0x013b|0x013b: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:82)\l0x013d: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x013f: INVOKE  (r3 I:double) = (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r13 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearX(double):double A[MD:(double):double (m)]\l0x0143: APUT  (r15 I:??[long, double][] A[D('v' double[])]), (r1 I:??[int, short, byte, char]), (r3 I:??[long, double]) \l0x0145: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:83)\l0x0147: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0149: INVOKE  (r3 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r13 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearY(double):double A[MD:(double):double (m)]\l0x014d: APUT  (r15 I:??[long, double][] A[D('v' double[])]), (r2 I:??[int, short, byte, char]), (r3 I:??[long, double]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x014f|RETURN\l|0x014f: RETURN    (LINE:84)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0150|0x0150: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:86)\l0x0152: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0154: INVOKE  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r13 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.setPoint(double):void A[MD:(double):void (m)]\l0x0157: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:87)\l0x0159: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x015b: INVOKE  (r3 I:double) = (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getX():double A[MD:():double (m)]\l0x015f: APUT  (r15 I:??[long, double][] A[D('v' double[])]), (r1 I:??[int, short, byte, char]), (r3 I:??[long, double]) \l0x0161: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:88)\l0x0163: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0165: INVOKE  (r3 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getY():double A[MD:():double (m)]\l0x0169: APUT  (r15 I:??[long, double][] A[D('v' double[])]), (r2 I:??[int, short, byte, char]), (r3 I:??[long, double]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x016b|RETURN\l|0x016b: RETURN    (LINE:89)\l}"];
Node_38 [shape=record,label="{38\:\ 0x016f|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x016f|RETURN\l|0x016f: RETURN    (LINE:92)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0101|0x0101: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:71)\l0x0103: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0105: IGET  (r3 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x0107: CMP_G  (r0 I:int) = (r13 I:double A[D('t' double)]), (r3 I:double) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0109|0x0109: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:21:0x0111 \l}"];
Node_20 [shape=record,label="{20\:\ 0x010b|0x010b: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:72)\l0x010d: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x010f: IGET  (r13 I:double A[D('t' double)]) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l}"];
Node_21 [shape=record,label="{21\:\ 0x0111|0x0111: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:74)\l0x0113: ARRAY_LENGTH  (r3 I:int) = (r0 I:??[]) \l0x0114: ARITH  (r3 I:int) = (r3 I:int) \- (r2 I:int) \l0x0115: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x0117: IGET  (r3 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x0119: CMP_L  (r0 I:int) = (r13 I:double A[D('t' double)]), (r3 I:double) \l}"];
Node_22 [shape=record,label="{22\:\ 0x011b|0x011b: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:24:0x0125 \l}"];
Node_23 [shape=record,label="{23\:\ 0x011d|0x011d: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r12 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:75)\l0x011f: ARRAY_LENGTH  (r3 I:int) = (r0 I:??[]) \l0x0120: ARITH  (r3 I:int) = (r3 I:int) \- (r2 I:int) \l0x0121: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x0123: IGET  (r13 I:double A[D('t' double)]) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.ArcCurveFit.getPos((r12 'this' I:androidx.constraintlayout.core.motion.utils.ArcCurveFit A[IMMUTABLE_TYPE, THIS]), (r13 I:double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:double[] A[D('v' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0052 \-\> B:10:0x0083, CROSS_EDGE: B:17:0x0100 \-\> B:1:?, CROSS_EDGE: B:16:0x00cf \-\> B:17:0x0100, CROSS_EDGE: B:32:0x014f \-\> B:1:?, CROSS_EDGE: B:34:0x016b \-\> B:1:?, BACK_EDGE: B:35:0x016c \-\> B:25:0x0126, CROSS_EDGE: B:36:0x016f \-\> B:1:?, CROSS_EDGE: B:23:0x011d \-\> B:24:0x0125, CROSS_EDGE: B:22:0x011b \-\> B:24:0x0125, CROSS_EDGE: B:19:0x0109 \-\> B:21:0x0111\lDebug Info:\l  0x001f\-0x0084: r0 'p' I\l  0x0016\-0x0084: r3 't0' D\l  0x001e\-0x0084: r5 'dt' D\l  0x0098\-0x0101: r3 't0' D\l  0x009a\-0x0101: r5 'dt' D\l  0x009e\-0x0101: r7 'p' I\l  0x0126\-0x016f: r0 'i' I\l  \-1 \-0x016f: r13 't' D\l  \-1 \-0x016f: r15 'v' [D\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, double[]):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_39;
Node_39 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_24;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_40;
Node_40 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_38;
Node_27 -> Node_28;
Node_28 -> Node_35;
Node_28 -> Node_37[style=dashed];
Node_35 -> Node_25;
Node_37 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_1;
Node_33 -> Node_34;
Node_34 -> Node_1;
Node_38 -> Node_36;
Node_36 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
}

