digraph "CFG forandroidx.constraintlayout.core.motion.utils.ArcCurveFit.getPos(D[F)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r12.mExtrapolate == false) goto L35\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if ((r13 \> r12.mArcs[0].mTime1 ? 1 : (r13 == r12.mArcs[0].mTime1 ? 0 : \-1)) \>= 0) goto L12\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|double r3 = r12.mArcs[0].mTime1\ldouble r5 = r13 \- r12.mArcs[0].mTime1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|if (r12.mArcs[0].linear == false) goto L10\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|r15[0] = (float) (r12.mArcs[0].getLinearX(r3) + (r12.mArcs[0].getLinearDX(r3) * r5))\lr15[1] = (float) (r12.mArcs[0].getLinearY(r3) + (r12.mArcs[0].getLinearDY(r3) * r5))\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0054|r12.mArcs[0].setPoint(r3)\lr15[0] = (float) (r12.mArcs[0].getX() + (r12.mArcs[0].getDX() * r5))\lr15[1] = (float) (r12.mArcs[0].getY() + (r12.mArcs[0].getDY() * r5))\l}"];
Node_10 [shape=record,label="{10\:\ 0x0087|RETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x0088|androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] r0 = r12.mArcs\l}"];
Node_12 [shape=record,label="{12\:\ 0x0092|if ((r13 \> r0[r0.length \- 1].mTime2 ? 1 : (r13 == r0[r0.length \- 1].mTime2 ? 0 : \-1)) \<= 0) goto L20\l}"];
Node_13 [shape=record,label="{13\:\ 0x0094|androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] r0 = r12.mArcs\ldouble r3 = r0[r0.length \- 1].mTime2\ldouble r5 = r13 \- r3\landroidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] r0 = r12.mArcs\lint r7 = r0.length \- 1\l}"];
Node_14 [shape=record,label="{14\:\ 0x00a6|if (r0[r7].linear == false) goto L18\l}"];
Node_15 [shape=record,label="{15\:\ 0x00a8|r15[0] = (float) (r12.mArcs[r7].getLinearX(r3) + (r12.mArcs[r7].getLinearDX(r3) * r5))\lr15[1] = (float) (r12.mArcs[r7].getLinearY(r3) + (r12.mArcs[r7].getLinearDY(r3) * r5))\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ 0x00d5|r12.mArcs[r7].setPoint(r13)\lr15[0] = (float) r12.mArcs[r7].getX()\lr15[1] = (float) r12.mArcs[r7].getY()\l}"];
Node_17 [shape=record,label="{17\:\ 0x00f2|RETURN\lORIG_RETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ 0x0118|PHI: r13 \l  PHI: (r13v3 't' double) = (r13v0 't' double), (r13v1 't' double), (r13v2 't' double), (r13v0 't' double) binds: [B:22:0x010e, B:23:0x0110, B:20:0x00fd, B:12:0x0092] A[DONT_GENERATE, DONT_INLINE]\l|r0 = 0\l}"];
Node_25 [shape=record,label="{25\:\ 0x0119|LOOP_START\lLOOP:0: B:25:0x0119\-\>B:35:0x0163\lPHI: r0 \l  PHI: (r0v12 'i' int) = (r0v11 'i' int), (r0v13 'i' int) binds: [B:24:0x0118, B:35:0x0163] A[DONT_GENERATE, DONT_INLINE]\l|androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] r3 = r12.mArcs\l}"];
Node_26 [shape=record,label="{26\:\ 0x011c|if (r0 \>= r3.length) goto L33\l}"];
Node_27 [shape=record,label="{27\:\ 0x011e}"];
Node_28 [shape=record,label="{28\:\ 0x0124|if ((r13 \> r3[r0].mTime2 ? 1 : (r13 == r3[r0].mTime2 ? 0 : \-1)) \> 0) goto L25\l}"];
Node_35 [shape=record,label="{35\:\ 0x0163|LOOP_END\lLOOP:0: B:25:0x0119\-\>B:35:0x0163\l|int r0 = r0 + 1\l}"];
Node_37 [shape=record,label="{37\:\ 0x0126|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0126}"];
Node_30 [shape=record,label="{30\:\ 0x012c|if (r12.mArcs[r0].linear == false) goto L31\l}"];
Node_31 [shape=record,label="{31\:\ 0x012e|r15[0] = (float) r12.mArcs[r0].getLinearX(r13)\lr15[1] = (float) r12.mArcs[r0].getLinearY(r13)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0144|RETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ 0x0145|r12.mArcs[r0].setPoint(r13)\lr15[0] = (float) r12.mArcs[r0].getX()\lr15[1] = (float) r12.mArcs[r0].getY()\l}"];
Node_34 [shape=record,label="{34\:\ 0x0162|RETURN\l|return\l}"];
Node_38 [shape=record,label="{38\:\ 0x0166|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0166|RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ 0x00f3}"];
Node_19 [shape=record,label="{19\:\ 0x00fb|if ((r13 \> r12.mArcs[0].mTime1 ? 1 : (r13 == r12.mArcs[0].mTime1 ? 0 : \-1)) \>= 0) goto L38\l}"];
Node_20 [shape=record,label="{20\:\ 0x00fd|double r13 = r12.mArcs[0].mTime1\l}"];
Node_21 [shape=record,label="{21\:\ 0x0104|androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] r0 = r12.mArcs\l}"];
Node_22 [shape=record,label="{22\:\ 0x010e|if ((r13 \> r0[r0.length \- 1].mTime2 ? 1 : (r13 == r0[r0.length \- 1].mTime2 ? 0 : \-1)) \<= 0) goto L20\l}"];
Node_23 [shape=record,label="{23\:\ 0x0110|androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] r0 = r12.mArcs\ldouble r13 = r0[r0.length \- 1].mTime2\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.ArcCurveFit.getPos((r12v0 'this' androidx.constraintlayout.core.motion.utils.ArcCurveFit A[IMMUTABLE_TYPE, THIS]), (r13v0 't' double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'v' float[] A[D('v' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0054 \-\> B:10:0x0087, CROSS_EDGE: B:17:0x00f2 \-\> B:1:?, CROSS_EDGE: B:16:0x00d5 \-\> B:17:0x00f2, CROSS_EDGE: B:32:0x0144 \-\> B:1:?, CROSS_EDGE: B:34:0x0162 \-\> B:1:?, BACK_EDGE: B:35:0x0163 \-\> B:25:0x0119, CROSS_EDGE: B:36:0x0166 \-\> B:1:?, CROSS_EDGE: B:20:0x00fd \-\> B:24:0x0118, CROSS_EDGE: B:23:0x0110 \-\> B:24:0x0118, CROSS_EDGE: B:22:0x010e \-\> B:24:0x0118\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, float[]):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_39;
Node_39 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_24;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_40;
Node_40 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_38;
Node_27 -> Node_28;
Node_28 -> Node_35;
Node_28 -> Node_37[style=dashed];
Node_35 -> Node_25;
Node_37 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_1;
Node_33 -> Node_34;
Node_34 -> Node_1;
Node_38 -> Node_36;
Node_36 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
}

