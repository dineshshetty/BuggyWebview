digraph "CFG forandroidx.constraintlayout.core.motion.utils.ArcCurveFit.getPos(DI)D" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mExtrapolate boolean  (LINE:172)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x00c4 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:173)\l0x0007: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0009: IGET  (r2 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x000b: CMP_G  (r0 I:int) = (r11 I:double A[D('t' double)]), (r2 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:19:0x0081 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:174)\l0x0011: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0013: IGET  (r2 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x0015: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:175)\l0x0017: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0019: IGET  (r0 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x001b: ARITH  (r0 I:double) = (r11 I:double A[D('t' double)]) \- (r0 I:double) \l0x001d: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:176)\l0x001e: IGET  (r5 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:177)\l0x0020: AGET  (r5 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('p' int)]) \l0x0022: IGET  (r5 I:boolean) = (r5 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.linear boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0050 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('j' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003c  (LINE:178)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: IGET  (r5 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:179)\l0x002a: AGET  (r5 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('p' int)]) \l0x002c: INVOKE  (r5 I:double) = (r5 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r2 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearX(double):double A[MD:(double):double (m)]\l0x0030: IGET  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0032: AGET  (r7 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('p' int)]) \l0x0034: INVOKE  (r7 I:double) = (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r2 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDX(double):double A[MD:(double):double (m)]\l0x0038: ARITH  (r7 I:double) = (r7 I:double) * (r0 I:double A[D('dt' double)]) \l0x003a: ARITH  (r5 I:double) = (r5 I:double) + (r7 I:double) \l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|RETURN\l|0x003b: RETURN  (r5 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|0x003c: IGET  (r5 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:181)\l0x003e: AGET  (r5 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('p' int)]) \l0x0040: INVOKE  (r5 I:double) = (r5 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r2 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearY(double):double A[MD:(double):double (m)]\l0x0044: IGET  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0046: AGET  (r7 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('p' int)]) \l0x0048: INVOKE  (r7 I:double) = (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r2 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDY(double):double A[MD:(double):double (m)]\l0x004c: ARITH  (r7 I:double) = (r7 I:double) * (r0 I:double A[D('dt' double)]) \l0x004e: ARITH  (r5 I:double) = (r5 I:double) + (r7 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x004f|RETURN\l|0x004f: RETURN  (r5 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0050|0x0050: IGET  (r5 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:183)\l0x0052: AGET  (r5 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('p' int)]) \l0x0054: INVOKE  (r5 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r2 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.setPoint(double):void A[MD:(double):void (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0057|0x0057: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('j' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x006d  (LINE:184)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0059|0x0059: IGET  (r5 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:185)\l0x005b: AGET  (r5 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('p' int)]) \l0x005d: INVOKE  (r5 I:double) = (r5 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getX():double A[MD:():double (m)]\l0x0061: IGET  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0063: AGET  (r7 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('p' int)]) \l0x0065: INVOKE  (r7 I:double) = (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getDX():double A[MD:():double (m)]\l0x0069: ARITH  (r7 I:double) = (r7 I:double) * (r0 I:double A[D('dt' double)]) \l0x006b: ARITH  (r5 I:double) = (r5 I:double) + (r7 I:double) \l}"];
Node_16 [shape=record,label="{16\:\ 0x006c|RETURN\l|0x006c: RETURN  (r5 I:double) \l}"];
Node_17 [shape=record,label="{17\:\ 0x006d|0x006d: IGET  (r5 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:187)\l0x006f: AGET  (r5 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('p' int)]) \l0x0071: INVOKE  (r5 I:double) = (r5 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getY():double A[MD:():double (m)]\l0x0075: IGET  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0077: AGET  (r7 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char] A[D('p' int)]) \l0x0079: INVOKE  (r7 I:double) = (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getDY():double A[MD:():double (m)]\l0x007d: ARITH  (r7 I:double) = (r7 I:double) * (r0 I:double A[D('dt' double)]) \l0x007f: ARITH  (r5 I:double) = (r5 I:double) + (r7 I:double) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0080|RETURN\l|0x0080: RETURN  (r5 I:double) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0081|0x0081: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] A[D('dt' double)]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:190)\l0x0083: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[]) \l0x0084: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x0086: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0088: IGET  (r0 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x008a: CMP_L  (r2 I:int) = (r11 I:double A[D('t' double)]), (r0 I:double) \l}"];
Node_20 [shape=record,label="{20\:\ 0x008c|0x008c: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:33:0x00eb \l}"];
Node_21 [shape=record,label="{21\:\ 0x008e|0x008e: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:191)\l0x0090: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[]) \l0x0091: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x0093: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0095: IGET  (r0 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x0097: ARITH  (r2 I:double) = (r11 I:double A[D('t' double)]) \- (r0 I:double A[D('t0' double)])  (LINE:192)\l0x0099: IGET  (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:193)\l0x009b: ARRAY_LENGTH  (r5 I:int) = (r4 I:??[]) \l0x009c: ARITH  (r5 I:int) = (r5 I:int) + (\-1 int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x009e|0x009e: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('j' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x00b2  (LINE:194)\l}"];
Node_23 [shape=record,label="{23\:\ 0x00a0|0x00a0: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char] A[D('p' int)])  (LINE:195)\l0x00a2: INVOKE  (r6 I:double) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r0 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearX(double):double A[MD:(double):double (m)]\l0x00a6: IGET  (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x00a8: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char] A[D('p' int)]) \l0x00aa: INVOKE  (r8 I:double) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r0 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDX(double):double A[MD:(double):double (m)]\l0x00ae: ARITH  (r8 I:double) = (r8 I:double) * (r2 I:double A[D('dt' double)]) \l0x00b0: ARITH  (r6 I:double) = (r6 I:double) + (r8 I:double) \l}"];
Node_24 [shape=record,label="{24\:\ 0x00b1|RETURN\l|0x00b1: RETURN  (r6 I:double) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00b2|0x00b2: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char] A[D('p' int)])  (LINE:197)\l0x00b4: INVOKE  (r6 I:double) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r0 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearY(double):double A[MD:(double):double (m)]\l0x00b8: IGET  (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x00ba: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char] A[D('p' int)]) \l0x00bc: INVOKE  (r8 I:double) = (r4 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r0 I:double A[D('t0' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearDY(double):double A[MD:(double):double (m)]\l0x00c0: ARITH  (r8 I:double) = (r8 I:double) * (r2 I:double A[D('dt' double)]) \l0x00c2: ARITH  (r6 I:double) = (r6 I:double) + (r8 I:double) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00c3|RETURN\l|0x00c3: RETURN  (r6 I:double) \l}"];
Node_33 [shape=record,label="{33\:\ 0x00eb|0x00eb: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:207)\l}"];
Node_34 [shape=record,label="{34\:\ 0x00ec|LOOP_START\lLOOP:0: B:34:0x00ec\-\>B:51:0x0130\l|0x00ec: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x00ee: ARRAY_LENGTH  (r2 I:int) = (r1 I:??[]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x00ef|0x00ef: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:55:0x0133 \l}"];
Node_36 [shape=record,label="{36\:\ 0x00f1|0x00f1: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)])  (LINE:208)\l0x00f3: IGET  (r1 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x00f5: CMP_G  (r3 I:int) = (r11 I:double A[D('t' double)]), (r1 I:double) \l}"];
Node_37 [shape=record,label="{37\:\ 0x00f7|0x00f7: IF  (r3 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:51:0x0130 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0130|LOOP_END\lLOOP:0: B:34:0x00ec\-\>B:51:0x0130\l|0x0130: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:207)\l}"];
Node_54 [shape=record,label="{54\:\ 0x00f9|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x00f9|0x00f9: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:210)\l0x00fb: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x00fd: IGET  (r1 I:boolean) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.linear boolean \l}"];
Node_39 [shape=record,label="{39\:\ 0x00ff|0x00ff: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0115 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0101|0x0101: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('j' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x010c  (LINE:211)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0103|0x0103: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:212)\l0x0105: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0107: INVOKE  (r1 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r11 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearX(double):double A[MD:(double):double (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x010b|RETURN\l|0x010b: RETURN  (r1 I:double) \l}"];
Node_43 [shape=record,label="{43\:\ 0x010c|0x010c: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:214)\l0x010e: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0110: INVOKE  (r1 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r11 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getLinearY(double):double A[MD:(double):double (m)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0114|RETURN\l|0x0114: RETURN  (r1 I:double) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0115|0x0115: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:216)\l0x0117: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0119: INVOKE  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc), (r11 I:double A[D('t' double)]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.setPoint(double):void A[MD:(double):void (m)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x011c|0x011c: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('j' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0127  (LINE:218)\l}"];
Node_47 [shape=record,label="{47\:\ 0x011e|0x011e: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:219)\l0x0120: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0122: INVOKE  (r1 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getX():double A[MD:():double (m)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0126|RETURN\l|0x0126: RETURN  (r1 I:double) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0127|0x0127: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:221)\l0x0129: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x012b: INVOKE  (r1 I:double) = (r1 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.getY():double A[MD:():double (m)]\l}"];
Node_50 [shape=record,label="{50\:\ 0x012f|RETURN\l|0x012f: RETURN  (r1 I:double) \l}"];
Node_55 [shape=record,label="{55\:\ 0x0133|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x0133|RETURN\l|0x0133: CONST  (r0 I:??[long, double] A[D('i' int)]) = (9221120237041090560(0x7ff8000000000000, double:NaN) ??[long, double])  (LINE:224)\l0x0135: RETURN  (r0 I:double) \l}"];
Node_27 [shape=record,label="{27\:\ 0x00c4|0x00c4: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] A[D('t0' double)]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:200)\l0x00c6: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x00c8: IGET  (r2 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l0x00ca: CMP_G  (r0 I:int) = (r11 I:double A[D('t' double)]), (r2 I:double) \l}"];
Node_28 [shape=record,label="{28\:\ 0x00cc|0x00cc: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:30:0x00d5 \l}"];
Node_29 [shape=record,label="{29\:\ 0x00ce|0x00ce: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:201)\l0x00d0: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x00d2: IGET  (r11 I:double A[D('t' double)]) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime1 double \l}"];
Node_30 [shape=record,label="{30\:\ 0x00d5|0x00d5: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:202)\l0x00d7: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[]) \l0x00d8: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x00da: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x00dc: IGET  (r0 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l0x00de: CMP_L  (r2 I:int) = (r11 I:double A[D('t' double)]), (r0 I:double) \l}"];
Node_31 [shape=record,label="{31\:\ 0x00e0|0x00e0: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:33:0x00eb \l}"];
Node_32 [shape=record,label="{32\:\ 0x00e2|0x00e2: IGET  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r10 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]  (LINE:203)\l0x00e4: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[]) \l0x00e5: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x00e7: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x00e9: IGET  (r11 I:double A[D('t' double)]) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.mTime2 double \l}"];
MethodNode[shape=record,label="{public double androidx.constraintlayout.core.motion.utils.ArcCurveFit.getPos((r10 'this' I:androidx.constraintlayout.core.motion.utils.ArcCurveFit A[IMMUTABLE_TYPE, THIS]), (r11 I:double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('j' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x004f \-\> B:1:?, CROSS_EDGE: B:16:0x006c \-\> B:1:?, CROSS_EDGE: B:18:0x0080 \-\> B:1:?, CROSS_EDGE: B:24:0x00b1 \-\> B:1:?, CROSS_EDGE: B:26:0x00c3 \-\> B:1:?, CROSS_EDGE: B:42:0x010b \-\> B:1:?, CROSS_EDGE: B:44:0x0114 \-\> B:1:?, CROSS_EDGE: B:48:0x0126 \-\> B:1:?, CROSS_EDGE: B:50:0x012f \-\> B:1:?, BACK_EDGE: B:51:0x0130 \-\> B:34:0x00ec, CROSS_EDGE: B:53:0x0135 \-\> B:1:?, CROSS_EDGE: B:29:0x00ce \-\> B:33:0x00eb, CROSS_EDGE: B:32:0x00e2 \-\> B:33:0x00eb, CROSS_EDGE: B:31:0x00e0 \-\> B:33:0x00eb\lDebug Info:\l  0x001d\-0x0081: r0 'dt' D\l  0x0015\-0x0081: r2 't0' D\l  0x001e\-0x0081: r4 'p' I\l  0x0097\-0x00c4: r0 't0' D\l  0x0099\-0x00c4: r2 'dt' D\l  0x009e\-0x00c4: r5 'p' I\l  0x00ec\-0x0133: r0 'i' I\l  \-1 \-0x0135: r11 't' D\l  \-1 \-0x0135: r13 'j' I\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, int):double]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_27;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_19;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_33;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_1;
Node_25 -> Node_26;
Node_26 -> Node_1;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_55;
Node_36 -> Node_37;
Node_37 -> Node_51;
Node_37 -> Node_54[style=dashed];
Node_51 -> Node_34;
Node_54 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_45;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_41 -> Node_42;
Node_42 -> Node_1;
Node_43 -> Node_44;
Node_44 -> Node_1;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_49;
Node_47 -> Node_48;
Node_48 -> Node_1;
Node_49 -> Node_50;
Node_50 -> Node_1;
Node_55 -> Node_52;
Node_52 -> Node_1;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
}

