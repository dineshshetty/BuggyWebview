digraph "CFG forandroidx.constraintlayout.core.motion.utils.ArcCurveFit.getSlope(DI)D" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if ((r5 \> r4.mArcs[0].mTime1 ? 1 : (r5 == r4.mArcs[0].mTime1 ? 0 : \-1)) \>= 0) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|double r5 = r4.mArcs[0].mTime1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|PHI: r5 \l  PHI: (r5v1 't' double) = (r5v0 't' double), (r5v4 't' double) binds: [B:3:0x0009, B:4:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] r0 = r4.mArcs\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|if ((r5 \> r0[r0.length + (\-1)].mTime2 ? 1 : (r5 == r0[r0.length + (\-1)].mTime2 ? 0 : \-1)) \<= 0) goto L7\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] r0 = r4.mArcs\ldouble r5 = r0[r0.length + (\-1)].mTime2\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|PHI: r5 \l  PHI: (r5v2 't' double) = (r5v1 't' double), (r5v3 't' double) binds: [B:6:0x001c, B:7:0x001e] A[DONT_GENERATE, DONT_INLINE]\l|r0 = 0\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|LOOP_START\lLOOP:0: B:9:0x0028\-\>B:26:0x006c\lPHI: r0 \l  PHI: (r0v7 'i' int) = (r0v6 'i' int), (r0v9 'i' int) binds: [B:8:0x0027, B:26:0x006c] A[DONT_GENERATE, DONT_INLINE]\l|androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] r1 = r4.mArcs\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|if (r0 \>= r1.length) goto L28\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d}"];
Node_12 [shape=record,label="{12\:\ 0x0033|if ((r5 \> r1[r0].mTime2 ? 1 : (r5 == r1[r0].mTime2 ? 0 : \-1)) \> 0) goto L12\l}"];
Node_26 [shape=record,label="{26\:\ 0x006c|LOOP_END\lLOOP:0: B:9:0x0028\-\>B:26:0x006c\l|int r0 = r0 + 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x0035|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035}"];
Node_14 [shape=record,label="{14\:\ 0x003b|if (r4.mArcs[r0].linear == false) goto L22\l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|if (r7 != 0) goto L20\l}"];
Node_16 [shape=record,label="{16\:\ 0x003f}"];
Node_17 [shape=record,label="{17\:\ 0x0047|RETURN\l|return r4.mArcs[r0].getLinearDX(r5)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0048}"];
Node_19 [shape=record,label="{19\:\ 0x0050|RETURN\l|return r4.mArcs[r0].getLinearDY(r5)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0051|r4.mArcs[r0].setPoint(r5)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0058|if (r7 != 0) goto L26\l}"];
Node_22 [shape=record,label="{22\:\ 0x005a}"];
Node_23 [shape=record,label="{23\:\ 0x0062|RETURN\l|return r4.mArcs[r0].getDX()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0063}"];
Node_25 [shape=record,label="{25\:\ 0x006b|RETURN\l|return r4.mArcs[r0].getDY()\l}"];
Node_30 [shape=record,label="{30\:\ 0x006f|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x006f|RETURN\l|return Double.NaN\l}"];
MethodNode[shape=record,label="{public double androidx.constraintlayout.core.motion.utils.ArcCurveFit.getSlope((r4v0 'this' androidx.constraintlayout.core.motion.utils.ArcCurveFit A[IMMUTABLE_TYPE, THIS]), (r5v0 't' double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'j' int A[D('j' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0050 \-\> B:1:?, CROSS_EDGE: B:23:0x0062 \-\> B:1:?, CROSS_EDGE: B:25:0x006b \-\> B:1:?, BACK_EDGE: B:26:0x006c \-\> B:9:0x0028, CROSS_EDGE: B:28:0x0071 \-\> B:1:?, CROSS_EDGE: B:6:0x001c \-\> B:8:0x0027, CROSS_EDGE: B:3:0x0009 \-\> B:5:0x0011\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getSlope(double, int):double]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_30;
Node_11 -> Node_12;
Node_12 -> Node_26;
Node_12 -> Node_29[style=dashed];
Node_26 -> Node_9;
Node_29 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_1;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_1;
Node_24 -> Node_25;
Node_25 -> Node_1;
Node_30 -> Node_27;
Node_27 -> Node_1;
}

