digraph "CFG forandroidx.constraintlayout.core.motion.utils.ArcCurveFit.\<init\>([I[D[[D)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r22 I:??[OBJECT, ARRAY])  (LINE:259)\l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r24 I:??[OBJECT, ARRAY] A[D('time' double[])]) \l0x0004: INVOKE  (r22 I:androidx.constraintlayout.core.motion.utils.CurveFit) type: DIRECT call: androidx.constraintlayout.core.motion.utils.CurveFit.\<init\>():void A[MD:():void (m)]\l0x0007: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:37)\l0x0008: IPUT  (r2 I:boolean), (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mExtrapolate boolean \l0x000a: IPUT  (r1 I:double[]), (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mTime double[]  (LINE:260)\l0x000c: ARRAY_LENGTH  (r3 I:int) = (r1 I:??[])  (LINE:261)\l0x000d: ARITH  (r3 I:int) = (r3 I:int) \- (r2 I:int) \l0x000e: NEW_ARRAY  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0010: IPUT  \l  (r3 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[])\l  (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit)\l androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0012: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:262)\l0x0013: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:263)\l0x0014: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:264)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|LOOP_START\lLOOP:0: B:3:0x0015\-\>B:15:0x002f\l|0x0015: IGET  (r6 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[]) = (r0 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit) androidx.constraintlayout.core.motion.utils.ArcCurveFit.mArcs androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc[] \l0x0017: ARRAY_LENGTH  (r7 I:int) = (r6 I:??[]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IF  (r5 I:??[int, byte, short, char] A[D('i' int)]) \>= (r7 I:??[int, byte, short, char])  \-\> B:17:0x0057 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: AGET  (r7 I:??[int, float, short, byte, char]) = (r23 I:??[int, float][] A[D('arcModes' int[])]), (r5 I:??[int, short, byte, char] A[D('i' int)])  (LINE:265)\l0x001c: CONST  (r8 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: SWITCH  (r7 I:??)\l case 0: goto B:14:0x002e\l case 1: goto B:13:0x002b\l case 2: goto B:12:0x0028\l case 3: goto B:8:0x0021\l default: goto B:22:0x002f \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('last' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0024  (LINE:273)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('mode' int)]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0026: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('last' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('mode' int)])  (LINE:274)\l}"];
Node_19 [shape=record,label="{19\:\ 0x002f|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|LOOP_END\lLOOP:0: B:3:0x0015\-\>B:15:0x002f\l|0x002f: NEW_INSTANCE  (r21 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc) =  androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc  (LINE:279)\l0x0031: AGET  (r9 I:??[long, double]) = (r1 I:??[long, double][]), (r5 I:??[int, short, byte, char] A[D('i' int)]) \l0x0033: ARITH  (r7 I:int) = (r5 I:int A[D('i' int)]) + (1 int) \l0x0035: AGET  (r11 I:??[long, double]) = (r1 I:??[long, double][]), (r7 I:??[int, short, byte, char]) \l0x0037: AGET  (r7 I:??[OBJECT, ARRAY]) = (r25 I:??[OBJECT, ARRAY][] A[D('y' double[][])]), (r5 I:??[int, short, byte, char] A[D('i' int)]) \l0x0039: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x003a: AGET  (r13 I:??[long, double]) = (r7 I:??[long, double][]), (r8 I:??[int, short, byte, char]) \l0x003c: AGET  (r7 I:??[OBJECT, ARRAY]) = (r25 I:??[OBJECT, ARRAY][] A[D('y' double[][])]), (r5 I:??[int, short, byte, char] A[D('i' int)]) \l0x003e: AGET  (r15 I:??[long, double]) = (r7 I:??[long, double][]), (r2 I:??[int, short, byte, char]) \l0x0040: ARITH  (r7 I:int) = (r5 I:int A[D('i' int)]) + (1 int) \l0x0042: AGET  (r7 I:??[OBJECT, ARRAY]) = (r25 I:??[OBJECT, ARRAY][] A[D('y' double[][])]), (r7 I:??[int, short, byte, char]) \l0x0044: AGET  (r17 I:??[long, double]) = (r7 I:??[long, double][]), (r8 I:??[int, short, byte, char]) \l0x0046: ARITH  (r7 I:int) = (r5 I:int A[D('i' int)]) + (1 int) \l0x0048: AGET  (r7 I:??[OBJECT, ARRAY]) = (r25 I:??[OBJECT, ARRAY][] A[D('y' double[][])]), (r7 I:??[int, short, byte, char]) \l0x004a: AGET  (r19 I:??[long, double]) = (r7 I:??[long, double][]), (r2 I:??[int, short, byte, char]) \l0x004c: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r21 I:??[OBJECT, ARRAY]) \l0x004e: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('mode' int)]) \l0x004f: INVOKE  \l  (r7 I:androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc)\l  (r8 I:int)\l  (r9 I:double)\l  (r11 I:double)\l  (r13 I:double)\l  (r15 I:double)\l  (r17 I:double)\l  (r19 I:double)\l type: DIRECT call: androidx.constraintlayout.core.motion.utils.ArcCurveFit.Arc.\<init\>(int, double, double, double, double, double, double):void A[MD:(int, double, double, double, double, double, double):void (m)]\l0x0052: APUT  (r6 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char] A[D('i' int)]), (r21 I:??[OBJECT, ARRAY]) \l0x0054: ARITH  (r5 I:int) = (r5 I:int A[D('i' int)]) + (1 int)  (LINE:264)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('mode' int)]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:270)\l0x0029: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('last' int)]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x002f|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('mode' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:267)\l0x002c: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('last' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x002f|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|0x002e: CONST  (r3 I:??[int, float, short, byte, char] A[D('mode' int)]) = (3 ??[int, float, short, byte, char])  (LINE:277)\l}"];
Node_18 [shape=record,label="{18\:\ 0x002f|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x002f|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0057|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0057|RETURN\l|0x0057: RETURN    (LINE:281)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.ArcCurveFit.\<init\>((r22 'this' I:androidx.constraintlayout.core.motion.utils.ArcCurveFit A[IMMUTABLE_TYPE, THIS]), (r23 I:int[] A[D('arcModes' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:double[] A[D('time' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:double[][] A[D('y' double[][]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:15:0x002f \-\> B:3:0x0015, CROSS_EDGE: B:8:0x0021 \-\> B:11:0x0025, CROSS_EDGE: B:12:0x0028 \-\> B:15:0x002f, CROSS_EDGE: B:13:0x002b \-\> B:15:0x002f, CROSS_EDGE: B:14:0x002e \-\> B:15:0x002f, CROSS_EDGE: B:6:0x001d \-\> B:15:0x002f\lDebug Info:\l  0x0015\-0x0057: r5 'i' I\l  0x0013\-0x0063: r3 'mode' I\l  0x0014\-0x0063: r4 'last' I\l  \-1 \-0x0063: r23 'arcModes' [I\l  \-1 \-0x0063: r24 'time' [D\l  \-1 \-0x0063: r25 'y' [[D\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_12;
Node_6 -> Node_13;
Node_6 -> Node_14;
Node_6 -> Node_22;
Node_8 -> Node_10;
Node_8 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_19;
Node_19 -> Node_15;
Node_15 -> Node_3;
Node_12 -> Node_20;
Node_20 -> Node_15;
Node_13 -> Node_21;
Node_21 -> Node_15;
Node_14 -> Node_18;
Node_18 -> Node_15;
Node_22 -> Node_15;
Node_17 -> Node_16;
Node_16 -> Node_1;
}

