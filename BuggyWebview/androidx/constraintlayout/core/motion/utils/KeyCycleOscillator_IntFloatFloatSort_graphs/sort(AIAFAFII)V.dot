digraph "CFG forandroidx.constraintlayout.core.motion.utils.KeyCycleOscillator.IntFloatFloatSort.sort([I[F[FII)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|int[] r0 = new int[r5.length + 10]\lint r2 = 0 + 1\lr0[0] = r9\lint r1 = r2 + 1\lr0[r2] = r8\l}"];
Node_16 [shape=record,label="{16\:\ 0x000e|LOOP_START\lLOOP:0: B:16:0x000e\-\>B:23:0x000e\lPHI: r1 \l  PHI: (r1v2 'count' int) = (r1v1 'count' int), (r1v5 'count' int) binds: [B:15:0x0000, B:23:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \<= 0) goto L10\l}"];
Node_17 [shape=record,label="{17\:\ 0x0010|int r1 = r1 + (\-1)\lr8 = r0[r1]\lint r1 = r1 + (\-1)\lr9 = r0[r1]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0018|if (r8 \>= r9) goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x001a|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x001a|int r2 = partition(r5, r6, r7, r8, r9)\lint r3 = r1 + 1\lr0[r1] = r2 + (\-1)\lint r1 = r3 + 1\lr0[r3] = r8\lint r3 = r1 + 1\lr0[r1] = r9\lint r1 = r3 + 1\lr0[r3] = r2 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|LOOP_END\lSYNTHETIC\lLOOP:0: B:16:0x000e\-\>B:23:0x000e\lPHI: r1 \l  PHI: (r1v5 'count' int) = (r1v4 'count' int), (r1v7 'count' int) binds: [B:24:0x000e, B:25:0x000e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0033|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0033|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void androidx.constraintlayout.core.motion.utils.KeyCycleOscillator.IntFloatFloatSort.sort((r5v0 'key' int[] A[D('key' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'value1' float[] A[D('value1' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'value2' float[] A[D('value2' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'low' int A[D('low' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'hi' int A[D('hi' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:18:0x0018 \-\> B:16:0x000e, BACK_EDGE: B:19:0x001a \-\> B:16:0x000e\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_22;
Node_17 -> Node_18;
Node_18 -> Node_21[style=dashed];
Node_18 -> Node_24;
Node_21 -> Node_19;
Node_19 -> Node_25;
Node_25 -> Node_23;
Node_23 -> Node_16;
Node_24 -> Node_23;
Node_22 -> Node_20;
Node_20 -> Node_14;
}

