digraph "CFG forandroidx.constraintlayout.core.motion.utils.MonotonicCurveFit.buildWave(Ljava\/lang\/String;)Landroidx\/constraintlayout\/core\/motion\/utils\/MonotonicCurveFit;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('configString' java.lang.String)])  (LINE:309)\l0x0001: INVOKE  (r1 I:int) = (r0 I:java.lang.String A[D('str' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)] (LINE:310)\l0x0005: ARITH  (r1 I:int) = (r1 I:int) \/ (2 int) \l0x0007: NEW_ARRAY  (r1 I:double[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: double[] \l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (40 ??[int, float, short, byte, char])  (LINE:311)\l0x000b: INVOKE  (r2 I:int) = (r10 I:java.lang.String A[D('configString' java.lang.String)]), (r2 I:int) type: VIRTUAL call: java.lang.String.indexOf(int):int A[MD:(int):int (c)]\l0x000f: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0011: CONST  (r3 I:??[int, float, short, byte, char]) = (44 ??[int, float, short, byte, char])  (LINE:312)\l0x0013: INVOKE  (r4 I:int) = (r10 I:java.lang.String A[D('configString' java.lang.String)]), (r3 I:int), (r2 I:int A[D('start' int)]) type: VIRTUAL call: java.lang.String.indexOf(int, int):int A[MD:(int, int):int (c)]\l0x0017: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:313)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|LOOP_START\lLOOP:0: B:12:0x0018\-\>B:14:0x001b\l|0x0018: CONST  (r6 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:314)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0019|0x0019: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('off1' int)]) == (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0034 \l}"];
Node_14 [shape=record,label="{14\:\ 0x001b|LOOP_END\lLOOP:0: B:12:0x0018\-\>B:14:0x001b\l|0x001b: INVOKE  (r6 I:java.lang.String) = \l  (r10 I:java.lang.String A[D('configString' java.lang.String)])\l  (r2 I:int A[D('start' int)])\l  (r4 I:int A[D('off1' int)])\l type: VIRTUAL call: java.lang.String.substring(int, int):java.lang.String A[MD:(int, int):java.lang.String (c)] (LINE:315)\l0x001f: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.String) type: VIRTUAL call: java.lang.String.trim():java.lang.String A[MD:():java.lang.String (c)]\l0x0023: ARITH  (r7 I:int) = (r5 I:int A[D('count' int)]) + (1 int)  (LINE:316)\l0x0025: INVOKE  (r8 I:double) = (r6 I:java.lang.String A[D('tmp' java.lang.String)]) type: STATIC call: java.lang.Double.parseDouble(java.lang.String):double A[MD:(java.lang.String):double throws java.lang.NumberFormatException (c)]\l0x0029: APUT  (r1 I:??[long, double][] A[D('values' double[])]), (r5 I:??[int, short, byte, char]), (r8 I:??[long, double]) \l0x002b: ARITH  (r5 I:int) = (r4 I:int A[D('off1' int)]) + (1 int)  (LINE:317)\l0x002d: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('start' int)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002e: INVOKE  (r4 I:int A[D('off1' int)]) = (r10 I:java.lang.String A[D('configString' java.lang.String)]), (r3 I:int), (r5 I:int) type: VIRTUAL call: java.lang.String.indexOf(int, int):int A[MD:(int, int):int (c)]\l0x0032: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('count' int)])  (LINE:318)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0034|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|0x0034: CONST  (r3 I:??[int, float, short, byte, char]) = (41 ??[int, float, short, byte, char])  (LINE:319)\l0x0036: INVOKE  (r3 I:int) = (r10 I:java.lang.String A[D('configString' java.lang.String)]), (r3 I:int), (r2 I:int A[D('start' int)]) type: VIRTUAL call: java.lang.String.indexOf(int, int):int A[MD:(int, int):int (c)]\l0x003a: INVOKE  (r4 I:java.lang.String) = \l  (r10 I:java.lang.String A[D('configString' java.lang.String)])\l  (r2 I:int A[D('start' int)])\l  (r3 I:int A[D('off1' int)])\l type: VIRTUAL call: java.lang.String.substring(int, int):java.lang.String A[MD:(int, int):java.lang.String (c)] (LINE:320)\l0x003e: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String) type: VIRTUAL call: java.lang.String.trim():java.lang.String A[MD:():java.lang.String (c)]\l0x0042: ARITH  (r6 I:int) = (r5 I:int A[D('count' int)]) + (1 int)  (LINE:321)\l0x0044: INVOKE  (r7 I:double) = (r4 I:java.lang.String A[D('tmp' java.lang.String)]) type: STATIC call: java.lang.Double.parseDouble(java.lang.String):double A[MD:(java.lang.String):double throws java.lang.NumberFormatException (c)]\l0x0048: APUT  (r1 I:??[long, double][] A[D('values' double[])]), (r5 I:??[int, short, byte, char]), (r7 I:??[long, double]) \l0x004a: INVOKE  (r5 I:double[]) = (r1 I:double[] A[D('values' double[])]), (r6 I:int A[D('count' int)]) type: STATIC call: java.util.Arrays.copyOf(double[], int):double[] A[MD:(double[], int):double[] (c)] (LINE:323)\l0x004e: INVOKE  (r5 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) = (r5 I:double[]) type: STATIC call: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.buildWave(double[]):androidx.constraintlayout.core.motion.utils.MonotonicCurveFit A[MD:(double[]):androidx.constraintlayout.core.motion.utils.MonotonicCurveFit (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0052|RETURN\l|0x0052: RETURN  (r5 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) \l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static androidx.constraintlayout.core.motion.utils.MonotonicCurveFit androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.buildWave((r10 I:java.lang.String A[D('configString' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x001b \-\> B:12:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0018\-0x0025: r5 'count' I\l  0x0023\-0x0032: r6 'tmp' Ljava\/lang\/String;\l  0x0025\-0x0034: r7 'count' I\l  0x0017\-0x003a: r4 'off1' I\l  0x0034\-0x0044: r5 'count' I\l  0x0001\-0x0052: r0 'str' Ljava\/lang\/String;\l  0x0009\-0x0052: r1 'values' [D\l  0x0011\-0x0052: r2 'start' I\l  0x003a\-0x0052: r3 'off1' I\l  0x0042\-0x0052: r4 'tmp' Ljava\/lang\/String;\l  0x0044\-0x0052: r6 'count' I\l  \-1 \-0x0052: r10 'configString' Ljava\/lang\/String;\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_12;
Node_17 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_10;
}

