digraph "CFG forandroidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getPos(D[D)V" {
Node_52 [shape=record,label="{52\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_54 [shape=record,label="{54\:\ 0x0000|double[] r1 = r29.f30mT\lint r2 = r1.length\lint r3 = r29.f31mY[0].length\l}"];
Node_55 [shape=record,label="{55\:\ 0x000d|if (r29.mExtrapolate == false) goto L38\l}"];
Node_56 [shape=record,label="{56\:\ 0x000f}"];
Node_57 [shape=record,label="{57\:\ 0x0013|if ((r30 \> r1[0] ? 1 : (r30 == r1[0] ? 0 : \-1)) \> 0) goto L11\l}"];
Node_58 [shape=record,label="{58\:\ 0x0015|getSlope(r1[0], r29.mSlopeTemp)\lr1 = 0\l}"];
Node_59 [shape=record,label="{59\:\ 0x001d|LOOP_START\lLOOP:0: B:59:0x001d\-\>B:60:0x001f\lPHI: r1 \l  PHI: (r1v17 'j' int) = (r1v16 'j' int), (r1v18 'j' int) binds: [B:58:0x0015, B:60:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r3) goto L8\l}"];
Node_60 [shape=record,label="{60\:\ 0x001f|LOOP_END\lLOOP:0: B:59:0x001d\-\>B:60:0x001f\l|r32[r1] = r29.f31mY[0][r1] + ((r30 \- r29.f30mT[0]) * r29.mSlopeTemp[r1])\lint r1 = r1 + 1\l}"];
Node_96 [shape=record,label="{96\:\ 0x0037|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0037|RETURN\l|return\l}"];
Node_53 [shape=record,label="{53\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_62 [shape=record,label="{62\:\ 0x0038}"];
Node_63 [shape=record,label="{63\:\ 0x003e|if ((r30 \> r1[r2 + (\-1)] ? 1 : (r30 == r1[r2 + (\-1)] ? 0 : \-1)) \< 0) goto L18\l}"];
Node_64 [shape=record,label="{64\:\ 0x0040|getSlope(r1[r2 + (\-1)], r29.mSlopeTemp)\lr1 = 0\l}"];
Node_65 [shape=record,label="{65\:\ 0x004a|LOOP_START\lLOOP:1: B:65:0x004a\-\>B:66:0x004c\lPHI: r1 \l  PHI: (r1v13 'j' int) = (r1v12 'j' int), (r1v14 'j' int) binds: [B:64:0x0040, B:66:0x004c] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r3) goto L16\l}"];
Node_66 [shape=record,label="{66\:\ 0x004c|LOOP_END\lLOOP:1: B:65:0x004a\-\>B:66:0x004c\l|r32[r1] = r29.f31mY[r2 + (\-1)][r1] + ((r30 \- r29.f30mT[r2 + (\-1)]) * r29.mSlopeTemp[r1])\lint r1 = r1 + 1\l}"];
Node_97 [shape=record,label="{97\:\ 0x0068|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x0068|RETURN\l|return\l}"];
Node_80 [shape=record,label="{80\:\ 0x0097|r1 = 0\l}"];
Node_81 [shape=record,label="{81\:\ 0x0098|LOOP_START\lLOOP:2: B:81:0x0098\-\>B:94:0x00f7\lPHI: r1 \l  PHI: (r1v9 'i' int) = (r1v8 'i' int), (r1v10 'i' int) binds: [B:80:0x0097, B:94:0x00f7] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_82 [shape=record,label="{82\:\ 0x009a|if (r1 \>= (r2 + (\-1))) goto L36\l}"];
Node_83 [shape=record,label="{83\:\ 0x009c}"];
Node_84 [shape=record,label="{84\:\ 0x00a2|if ((r30 \> r29.f30mT[r1] ? 1 : (r30 == r29.f30mT[r1] ? 0 : \-1)) != 0) goto L27\l}"];
Node_85 [shape=record,label="{85\:\ 0x00a4|r4 = 0\l}"];
Node_86 [shape=record,label="{86\:\ 0x00a5|LOOP_START\lLOOP:3: B:86:0x00a5\-\>B:87:0x00a7\lPHI: r4 \l  PHI: (r4v13 'j' int) = (r4v12 'j' int), (r4v14 'j' int) binds: [B:85:0x00a4, B:87:0x00a7] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \>= r3) goto L26\l}"];
Node_87 [shape=record,label="{87\:\ 0x00a7|LOOP_END\lLOOP:3: B:86:0x00a5\-\>B:87:0x00a7\l|r32[r4] = r29.f31mY[r1][r4]\lint r4 = r4 + 1\l}"];
Node_100 [shape=record,label="{100\:\ 0x00b2|SYNTHETIC\l}"];
Node_88 [shape=record,label="{88\:\ 0x00b2|double[] r4 = r29.f30mT\l}"];
Node_89 [shape=record,label="{89\:\ 0x00ba|if ((r30 \> r4[r1 + 1] ? 1 : (r30 == r4[r1 + 1] ? 0 : \-1)) \>= 0) goto L29\l}"];
Node_94 [shape=record,label="{94\:\ 0x00f7|LOOP_END\lLOOP:2: B:81:0x0098\-\>B:94:0x00f7\l|int r1 = r1 + 1\l}"];
Node_98 [shape=record,label="{98\:\ 0x00bc|SYNTHETIC\l}"];
Node_90 [shape=record,label="{90\:\ 0x00bc|double r5 = r4[r1 + 1] \- r4[r1]\ldouble r7 = (r30 \- r4[r1]) \/ r5\lr4 = 0\l}"];
Node_91 [shape=record,label="{91\:\ 0x00c9|LOOP_START\lLOOP:4: B:91:0x00c9\-\>B:92:0x00cb\lPHI: r4 \l  PHI: (r4v10 'j' int) = (r4v9 'j' int), (r4v11 'j' int) binds: [B:90:0x00bc, B:92:0x00cb] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \>= r3) goto L34\l}"];
Node_92 [shape=record,label="{92\:\ 0x00cb|LOOP_END\lLOOP:4: B:91:0x00c9\-\>B:92:0x00cb\l|double[][] r9 = r29.f31mY\lr21 = r9[r1][r4]\lr23 = r9[r1 + 1][r4]\ldouble[][] r9 = r29.mTangent\lr25 = r9[r1][r4]\lr27 = r9[r1 + 1][r4]\lr32[r4] = interpolate(r5, r7, r21, r23, r25, r27)\lint r4 = r4 + 1\l}"];
Node_101 [shape=record,label="{101\:\ 0x00f6|SYNTHETIC\l}"];
Node_93 [shape=record,label="{93\:\ 0x00f6|RETURN\l|return\l}"];
Node_99 [shape=record,label="{99\:\ 0x00fa|SYNTHETIC\l}"];
Node_95 [shape=record,label="{95\:\ 0x00fa|RETURN\l|return\l}"];
Node_68 [shape=record,label="{68\:\ 0x0069}"];
Node_69 [shape=record,label="{69\:\ 0x006d|if ((r30 \> r1[0] ? 1 : (r30 == r1[0] ? 0 : \-1)) \> 0) goto L45\l}"];
Node_70 [shape=record,label="{70\:\ 0x006f|r1 = 0\l}"];
Node_71 [shape=record,label="{71\:\ 0x0070|LOOP_START\lLOOP:5: B:71:0x0070\-\>B:72:0x0072\lPHI: r1 \l  PHI: (r1v6 'j' int) = (r1v5 'j' int), (r1v7 'j' int) binds: [B:70:0x006f, B:72:0x0072] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r3) goto L43\l}"];
Node_72 [shape=record,label="{72\:\ 0x0072|LOOP_END\lLOOP:5: B:71:0x0070\-\>B:72:0x0072\l|r32[r1] = r29.f31mY[0][r1]\lint r1 = r1 + 1\l}"];
Node_102 [shape=record,label="{102\:\ 0x007d|SYNTHETIC\l}"];
Node_73 [shape=record,label="{73\:\ 0x007d|RETURN\l|return\l}"];
Node_74 [shape=record,label="{74\:\ 0x007e}"];
Node_75 [shape=record,label="{75\:\ 0x0084|if ((r30 \> r1[r2 + (\-1)] ? 1 : (r30 == r1[r2 + (\-1)] ? 0 : \-1)) \< 0) goto L18\l}"];
Node_76 [shape=record,label="{76\:\ 0x0086|r1 = 0\l}"];
Node_77 [shape=record,label="{77\:\ 0x0087|LOOP_START\lLOOP:6: B:77:0x0087\-\>B:78:0x0089\lPHI: r1 \l  PHI: (r1v3 'j' int) = (r1v2 'j' int), (r1v4 'j' int) binds: [B:76:0x0086, B:78:0x0089] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r3) goto L50\l}"];
Node_78 [shape=record,label="{78\:\ 0x0089|LOOP_END\lLOOP:6: B:77:0x0087\-\>B:78:0x0089\l|r32[r1] = r29.f31mY[r2 + (\-1)][r1]\lint r1 = r1 + 1\l}"];
Node_103 [shape=record,label="{103\:\ 0x0096|SYNTHETIC\l}"];
Node_79 [shape=record,label="{79\:\ 0x0096|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getPos((r29v0 'this' androidx.constraintlayout.core.motion.utils.MonotonicCurveFit A[IMMUTABLE_TYPE, THIS]), (r30v0 't' double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 'v' double[] A[D('v' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:60:0x001f \-\> B:59:0x001d, BACK_EDGE: B:66:0x004c \-\> B:65:0x004a, CROSS_EDGE: B:67:0x0068 \-\> B:53:?, BACK_EDGE: B:87:0x00a7 \-\> B:86:0x00a5, BACK_EDGE: B:92:0x00cb \-\> B:91:0x00c9, CROSS_EDGE: B:93:0x00f6 \-\> B:53:?, BACK_EDGE: B:94:0x00f7 \-\> B:81:0x0098, CROSS_EDGE: B:84:0x00a2 \-\> B:88:0x00b2, CROSS_EDGE: B:95:0x00fa \-\> B:53:?, BACK_EDGE: B:72:0x0072 \-\> B:71:0x0070, CROSS_EDGE: B:73:0x007d \-\> B:53:?, BACK_EDGE: B:78:0x0089 \-\> B:77:0x0087, CROSS_EDGE: B:79:0x0096 \-\> B:53:?, CROSS_EDGE: B:75:0x0084 \-\> B:80:0x0097\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, double[]):void]\l}"];
MethodNode -> Node_52;Node_52 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_68;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_62;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_96;
Node_60 -> Node_59;
Node_96 -> Node_61;
Node_61 -> Node_53;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_80;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_97;
Node_66 -> Node_65;
Node_97 -> Node_67;
Node_67 -> Node_53;
Node_80 -> Node_81;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_99;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_88;
Node_85 -> Node_86;
Node_86 -> Node_87[style=dashed];
Node_86 -> Node_100;
Node_87 -> Node_86;
Node_100 -> Node_88;
Node_88 -> Node_89;
Node_89 -> Node_94;
Node_89 -> Node_98[style=dashed];
Node_94 -> Node_81;
Node_98 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_92[style=dashed];
Node_91 -> Node_101;
Node_92 -> Node_91;
Node_101 -> Node_93;
Node_93 -> Node_53;
Node_99 -> Node_95;
Node_95 -> Node_53;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_74;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_102;
Node_72 -> Node_71;
Node_102 -> Node_73;
Node_73 -> Node_53;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_80;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_103;
Node_78 -> Node_77;
Node_103 -> Node_79;
Node_79 -> Node_53;
}

