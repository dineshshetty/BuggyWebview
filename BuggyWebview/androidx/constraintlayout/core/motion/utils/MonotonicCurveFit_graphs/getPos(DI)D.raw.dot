digraph "CFG forandroidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getPos(DI)D" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r29 I:??[OBJECT, ARRAY])  (LINE:187)\l0x0002: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r32 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('j' int)]) \l0x0004: IGET  (r2 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mT double[] \l0x0006: ARRAY_LENGTH  (r3 I:int) = (r2 I:??[]) \l0x0007: IGET  (r4 I:boolean) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mExtrapolate boolean  (LINE:188)\l0x0009: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x000a|0x000a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0048 \l}"];
Node_41 [shape=record,label="{41\:\ 0x000c|0x000c: AGET  (r6 I:??[long, double]) = (r2 I:??[long, double][]), (r5 I:??[int, short, byte, char])  (LINE:189)\l0x000e: CMP_G  (r4 I:int) = (r30 I:double A[D('t' double)]), (r6 I:double) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0010|0x0010: IF  (r4 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:45:0x0026 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0012|0x0012: IGET  (r4 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mY double[][]  (LINE:190)\l0x0014: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]) \l0x0016: AGET  (r6 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l0x0018: AGET  (r8 I:??[long, double]) = (r2 I:??[long, double][]), (r5 I:??[int, short, byte, char]) \l0x001a: ARITH  (r8 I:double) = (r30 I:double A[D('t' double)]) \- (r8 I:double) \l0x001c: AGET  (r4 I:??[long, double]) = (r2 I:??[long, double][]), (r5 I:??[int, short, byte, char]) \l0x001e: INVOKE  (r4 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit), (r4 I:double), (r1 I:int) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getSlope(double, int):double A[MD:(double, int):double (m)]\l0x0022: ARITH  (r8 I:double) = (r8 I:double) * (r4 I:double) \l0x0024: ARITH  (r6 I:double) = (r6 I:double) + (r8 I:double) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0025|RETURN\l|0x0025: RETURN  (r6 I:double) \l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0026|0x0026: ARITH  (r4 I:int) = (r3 I:int A[D('n' int)]) + (\-1 int)  (LINE:192)\l0x0028: AGET  (r4 I:??[long, double]) = (r2 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l0x002a: CMP_L  (r6 I:int) = (r30 I:double A[D('t' double)]), (r4 I:double) \l}"];
Node_46 [shape=record,label="{46\:\ 0x002c|0x002c: IF  (r6 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:57:0x0066 \l}"];
Node_47 [shape=record,label="{47\:\ 0x002e|0x002e: IGET  (r4 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mY double[][]  (LINE:193)\l0x0030: ARITH  (r5 I:int) = (r3 I:int A[D('n' int)]) + (\-1 int) \l0x0032: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]) \l0x0034: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l0x0036: ARITH  (r4 I:int) = (r3 I:int A[D('n' int)]) + (\-1 int) \l0x0038: AGET  (r7 I:??[long, double]) = (r2 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l0x003a: ARITH  (r7 I:double) = (r30 I:double A[D('t' double)]) \- (r7 I:double) \l0x003c: ARITH  (r4 I:int) = (r3 I:int A[D('n' int)]) + (\-1 int) \l0x003e: AGET  (r9 I:??[long, double]) = (r2 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l0x0040: INVOKE  (r9 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit), (r9 I:double), (r1 I:int) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getSlope(double, int):double A[MD:(double, int):double (m)]\l0x0044: ARITH  (r7 I:double) = (r7 I:double) * (r9 I:double) \l0x0046: ARITH  (r5 I:double) = (r5 I:double) + (r7 I:double) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0047|RETURN\l|0x0047: RETURN  (r5 I:double) \l}"];
Node_57 [shape=record,label="{57\:\ 0x0066|0x0066: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:204)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0067|LOOP_START\lLOOP:0: B:58:0x0067\-\>B:68:0x00b5\l|0x0067: ARITH  (r4 I:int) = (r3 I:int A[D('n' int)]) + (\-1 int) \l}"];
Node_59 [shape=record,label="{59\:\ 0x0069|0x0069: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:73:0x00b8 \l}"];
Node_60 [shape=record,label="{60\:\ 0x006b|0x006b: IGET  (r4 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mT double[]  (LINE:205)\l0x006d: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x006f: CMP_L  (r7 I:int) = (r30 I:double A[D('t' double)]), (r5 I:double) \l}"];
Node_61 [shape=record,label="{61\:\ 0x0071|0x0071: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x007a \l}"];
Node_64 [shape=record,label="{64\:\ 0x007a|0x007a: ARITH  (r5 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:208)\l0x007c: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r5 I:??[int, short, byte, char]) \l0x007e: CMP_G  (r7 I:int) = (r30 I:double A[D('t' double)]), (r5 I:double) \l}"];
Node_65 [shape=record,label="{65\:\ 0x0080|0x0080: IF  (r7 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:68:0x00b5 \l}"];
Node_68 [shape=record,label="{68\:\ 0x00b5|LOOP_END\lLOOP:0: B:58:0x0067\-\>B:68:0x00b5\l|0x00b5: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:204)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0082|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0082|0x0082: ARITH  (r5 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:209)\l0x0084: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r5 I:??[int, short, byte, char]) \l0x0086: AGET  (r7 I:??[long, double]) = (r4 I:??[long, double][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x0088: ARITH  (r5 I:double) = (r5 I:double) \- (r7 I:double) \l0x0089: AGET  (r7 I:??[long, double]) = (r4 I:??[long, double][]), (r2 I:??[int, short, byte, char] A[D('i' int)])  (LINE:210)\l0x008b: ARITH  (r7 I:double) = (r30 I:double A[D('t' double)]) \- (r7 I:double) \l0x008d: ARITH  (r7 I:double) = (r7 I:double) \/ (r5 I:double A[D('h' double)]) \l0x008e: IGET  (r4 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mY double[][]  (LINE:211)\l0x0090: AGET  (r9 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x0092: AGET  (r21 I:??[long, double]) = (r9 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l0x0094: ARITH  (r9 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:212)\l0x0096: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r9 I:??[int, short, byte, char]) \l0x0098: AGET  (r23 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l0x009a: IGET  (r4 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mTangent double[][]  (LINE:213)\l0x009c: AGET  (r9 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x009e: AGET  (r25 I:??[long, double]) = (r9 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l0x00a0: ARITH  (r9 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:214)\l0x00a2: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r9 I:??[int, short, byte, char]) \l0x00a4: AGET  (r27 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l0x00a6: MOVE  (r9 I:??[long, double]) = (r5 I:??[long, double] A[D('h' double)])  (LINE:215)\l0x00a7: MOVE  (r11 I:??[long, double]) = (r7 I:??[long, double] A[D('x' double)]) \l0x00a8: MOVE  (r13 I:??[long, double]) = (r21 I:??[long, double] A[D('y1' double)]) \l0x00aa: MOVE  (r15 I:??[long, double]) = (r23 I:??[long, double] A[D('y2' double)]) \l0x00ac: MOVE  (r17 I:??[long, double]) = (r25 I:??[long, double] A[D('t1' double)]) \l0x00ae: MOVE  (r19 I:??[long, double]) = (r27 I:??[long, double] A[D('t2' double)]) \l0x00b0: INVOKE  (r9 I:double) = (r9 I:double), (r11 I:double), (r13 I:double), (r15 I:double), (r17 I:double), (r19 I:double) type: STATIC call: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.interpolate(double, double, double, double, double, double):double A[MD:(double, double, double, double, double, double):double (m)]\l}"];
Node_67 [shape=record,label="{67\:\ 0x00b4|RETURN\l|0x00b4: RETURN  (r9 I:double) \l}"];
Node_72 [shape=record,label="{72\:\ 0x0073|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0073|0x0073: IGET  (r4 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mY double[][]  (LINE:206)\l0x0075: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x0077: AGET  (r5 I:??[long, double]) = (r4 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l}"];
Node_63 [shape=record,label="{63\:\ 0x0079|RETURN\l|0x0079: RETURN  (r5 I:double) \l}"];
Node_73 [shape=record,label="{73\:\ 0x00b8|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x00b8|RETURN\l|0x00b8: CONST  (r4 I:??[long, double]) = (0 ??[long, double])  (LINE:219)\l0x00ba: RETURN  (r4 I:double) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0048|0x0048: AGET  (r6 I:??[long, double]) = (r2 I:??[long, double][]), (r5 I:??[int, short, byte, char])  (LINE:196)\l0x004a: CMP_G  (r4 I:int) = (r30 I:double A[D('t' double)]), (r6 I:double) \l}"];
Node_50 [shape=record,label="{50\:\ 0x004c|0x004c: IF  (r4 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:53:0x0055 \l}"];
Node_51 [shape=record,label="{51\:\ 0x004e|0x004e: IGET  (r2 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mY double[][]  (LINE:197)\l0x0050: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]) \l0x0052: AGET  (r4 I:??[long, double]) = (r2 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0054|RETURN\l|0x0054: RETURN  (r4 I:double) \l}"];
Node_53 [shape=record,label="{53\:\ 0x0055|0x0055: ARITH  (r4 I:int) = (r3 I:int A[D('n' int)]) + (\-1 int)  (LINE:199)\l0x0057: AGET  (r4 I:??[long, double]) = (r2 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l0x0059: CMP_L  (r2 I:int) = (r30 I:double A[D('t' double)]), (r4 I:double) \l}"];
Node_54 [shape=record,label="{54\:\ 0x005b|0x005b: IF  (r2 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:57:0x0066 \l}"];
Node_55 [shape=record,label="{55\:\ 0x005d|0x005d: IGET  (r2 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mY double[][]  (LINE:200)\l0x005f: ARITH  (r4 I:int) = (r3 I:int A[D('n' int)]) + (\-1 int) \l0x0061: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]) \l0x0063: AGET  (r4 I:??[long, double]) = (r2 I:??[long, double][]), (r1 I:??[int, short, byte, char]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0065|RETURN\l|0x0065: RETURN  (r4 I:double) \l}"];
MethodNode[shape=record,label="{public double androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getPos((r29 'this' I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit A[IMMUTABLE_TYPE, THIS]), (r30 I:double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32 I:int A[D('j' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:48:0x0047 \-\> B:38:?, CROSS_EDGE: B:63:0x0079 \-\> B:38:?, CROSS_EDGE: B:67:0x00b4 \-\> B:38:?, BACK_EDGE: B:68:0x00b5 \-\> B:58:0x0067, CROSS_EDGE: B:70:0x00ba \-\> B:38:?, CROSS_EDGE: B:52:0x0054 \-\> B:38:?, CROSS_EDGE: B:56:0x0065 \-\> B:38:?, CROSS_EDGE: B:54:0x005b \-\> B:57:0x0066\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0089\-0x00b5: r5 'h' D\l  0x008e\-0x00b5: r7 'x' D\l  0x0094\-0x00b5: r21 'y1' D\l  0x009a\-0x00b5: r23 'y2' D\l  0x00a0\-0x00b5: r25 't1' D\l  0x00a6\-0x00b5: r27 't2' D\l  0x0067\-0x00b8: r2 'i' I\l  0x0007\-0x00ba: r3 'n' I\l  \-1 \-0x00ba: r30 't' D\l  \-1 \-0x00ba: r32 'j' I\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, int):double]\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_49;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_45;
Node_43 -> Node_44;
Node_44 -> Node_38;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_57;
Node_47 -> Node_48;
Node_48 -> Node_38;
Node_57 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_73;
Node_60 -> Node_61;
Node_61 -> Node_64;
Node_61 -> Node_72[style=dashed];
Node_64 -> Node_65;
Node_65 -> Node_68;
Node_65 -> Node_71[style=dashed];
Node_68 -> Node_58;
Node_71 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_38;
Node_72 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_38;
Node_73 -> Node_69;
Node_69 -> Node_38;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_53;
Node_51 -> Node_52;
Node_52 -> Node_38;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_57;
Node_55 -> Node_56;
Node_56 -> Node_38;
}

