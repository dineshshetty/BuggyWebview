digraph "CFG forandroidx.constraintlayout.core.motion.utils.MonotonicCurveFit.buildWave([D)Landroidx\/constraintlayout\/core\/motion\/utils\/MonotonicCurveFit;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|int r1 = (r18.length * 3) \- 2\lint r3 = r18.length \- 1\ldouble r5 = 1.0d \/ ((double) r3)\ldouble[][] r2 = (double[][]) java.lang.reflect.Array.newInstance(double.class, new int[]\{r1, 1\})\ldouble[] r9 = new double[r1]\lr10 = 0\l}"];
Node_17 [shape=record,label="{17\:\ 0x0021|LOOP_START\lLOOP:0: B:17:0x0021\-\>B:22:0x005c\lPHI: r10 \l  PHI: (r10v1 'i' int) = (r10v0 'i' int), (r10v2 'i' int) binds: [B:16:0x0000, B:22:0x005c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0022|if (r10 \>= r18.length) goto L10\l}"];
Node_19 [shape=record,label="{19\:\ 0x0024|r11 = r18[r10]\lr2[r10 + r3][0] = r11\lr9[r10 + r3] = ((double) r10) * r5\l}"];
Node_20 [shape=record,label="{20\:\ 0x0033|if (r10 \<= 0) goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x0035|r2[(r3 * 2) + r10][0] = r11 + 1.0d\lr9[(r3 * 2) + r10] = (((double) r10) * r5) + 1.0d\lr2[r10 + (\-1)][0] = (r11 \- 1.0d) \- r5\lr9[r10 + (\-1)] = ((((double) r10) * r5) + (\-1.0d)) \- r5\l}"];
Node_26 [shape=record,label="{26\:\ 0x005c|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x005c|LOOP_END\lLOOP:0: B:17:0x0021\-\>B:22:0x005c\l|int r10 = r10 + 1\l}"];
Node_27 [shape=record,label="{27\:\ 0x005c|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x005f|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x005f}"];
Node_24 [shape=record,label="{24\:\ 0x0064|RETURN\l|return new androidx.constraintlayout.core.motion.utils.MonotonicCurveFit(r9, r2)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static androidx.constraintlayout.core.motion.utils.MonotonicCurveFit androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.buildWave((r18v0 'values' double[] A[D('values' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:22:0x005c \-\> B:17:0x0021, CROSS_EDGE: B:20:0x0033 \-\> B:22:0x005c\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_21 -> Node_26;
Node_26 -> Node_22;
Node_22 -> Node_17;
Node_27 -> Node_22;
Node_25 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_15;
}

