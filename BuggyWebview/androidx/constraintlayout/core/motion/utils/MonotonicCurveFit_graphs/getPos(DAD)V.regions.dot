digraph "CFG forandroidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getPos(D[D)V" {
subgraph cluster_Region_1852026728 {
label = "R(4:1|(1:(3:5|(1:7)|9)(1:(3:13|(1:15)|17)))(1:(3:40|(1:42)|44)(1:(3:47|(1:49)|51)))|18|(3:(2:23|(1:25))|27|(2:(3:31|(1:33)|35)|(1:29))))";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0000|double[] double[] r1 = r29.f30mT\lint int r2 = r1.length\lint int r3 = r29.f31mY[0].length\l}"];
subgraph cluster_IfRegion_1273234902 {
label = "IF [B:55:0x000d] THEN: R(1:(3:5|(1:7)|9)(1:(3:13|(1:15)|17))) ELSE: R(1:(3:40|(1:42)|44)(1:(3:47|(1:49)|51)))";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x000d|if (r29.mExtrapolate != false) goto L3\l}"];
subgraph cluster_Region_227993067 {
label = "R(1:(3:5|(1:7)|9)(1:(3:13|(1:15)|17)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_986884862 {
label = "IF [B:57:0x0013] THEN: R(3:5|(1:7)|9) ELSE: R(1:(3:13|(1:15)|17))";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0013|if (r30 \<= r1[0]) goto L5\l}"];
subgraph cluster_Region_1852067722 {
label = "R(3:5|(1:7)|9)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0015|getSlope(r1[0], r29.mSlopeTemp)\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_452104925 {
label = "LOOP:0: (1:7)";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x001d|LOOP_START\lLOOP:0: B:59:0x001d\-\>B:60:0x001f\lPHI: r1 \l  PHI: (r1v17 'j' int) = (r1v16 'j' int), (r1v18 'j' int) binds: [B:58:0x0015, B:60:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \< r3) goto L7\l}"];
subgraph cluster_Region_1581827946 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x001f|LOOP_END\lLOOP:0: B:59:0x001d\-\>B:60:0x001f\l|r32[r1] = r29.f31mY[0][r1] + ((r30 \- r29.f30mT[0]) * r29.mSlopeTemp[r1])\lr1++\l}"];
}
}
Node_61 [shape=record,label="{61\:\ 0x0037|RETURN\l|return\l}"];
}
subgraph cluster_Region_1972016689 {
label = "R(1:(3:13|(1:15)|17)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1254384467 {
label = "IF [B:63:0x003e] THEN: R(3:13|(1:15)|17) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x003e|if (r30 \>= r1[r2 \- 1]) goto L13\l}"];
subgraph cluster_Region_967806348 {
label = "R(3:13|(1:15)|17)";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x0040|getSlope(r1[r2 \- 1], r29.mSlopeTemp)\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_442576023 {
label = "LOOP:1: (1:15)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x004a|LOOP_START\lLOOP:1: B:65:0x004a\-\>B:66:0x004c\lPHI: r1 \l  PHI: (r1v13 'j' int) = (r1v12 'j' int), (r1v14 'j' int) binds: [B:64:0x0040, B:66:0x004c] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \< r3) goto L15\l}"];
subgraph cluster_Region_870743738 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_66 [shape=record,label="{66\:\ 0x004c|LOOP_END\lLOOP:1: B:65:0x004a\-\>B:66:0x004c\l|r32[r1] = r29.f31mY[r2 \- 1][r1] + ((r30 \- r29.f30mT[r2 \- 1]) * r29.mSlopeTemp[r1])\lr1++\l}"];
}
}
Node_67 [shape=record,label="{67\:\ 0x0068|RETURN\l|return\l}"];
}
}
}
}
}
subgraph cluster_Region_803430473 {
label = "R(1:(3:40|(1:42)|44)(1:(3:47|(1:49)|51))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_369444125 {
label = "IF [B:69:0x006d] THEN: R(3:40|(1:42)|44) ELSE: R(1:(3:47|(1:49)|51)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x006d|if (r30 \<= r1[0]) goto L40\l}"];
subgraph cluster_Region_1857136776 {
label = "R(3:40|(1:42)|44)";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x006f|int r1 = 0\l}"];
subgraph cluster_LoopRegion_1858114562 {
label = "LOOP:5: (1:42)";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x0070|LOOP_START\lLOOP:5: B:71:0x0070\-\>B:72:0x0072\lPHI: r1 \l  PHI: (r1v6 'j' int) = (r1v5 'j' int), (r1v7 'j' int) binds: [B:70:0x006f, B:72:0x0072] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \< r3) goto L42\l}"];
subgraph cluster_Region_53375627 {
label = "R(1:42)";
node [shape=record,color=blue];
Node_72 [shape=record,label="{72\:\ 0x0072|LOOP_END\lLOOP:5: B:71:0x0070\-\>B:72:0x0072\l|r32[r1] = r29.f31mY[0][r1]\lr1++\l}"];
}
}
Node_73 [shape=record,label="{73\:\ 0x007d|RETURN\l|return\l}"];
}
subgraph cluster_Region_1153571542 {
label = "R(1:(3:47|(1:49)|51)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1523667016 {
label = "IF [B:75:0x0084] THEN: R(3:47|(1:49)|51) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_75 [shape=record,label="{75\:\ 0x0084|if (r30 \>= r1[r2 \- 1]) goto L47\l}"];
subgraph cluster_Region_1564820103 {
label = "R(3:47|(1:49)|51)";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x0086|int r1 = 0\l}"];
subgraph cluster_LoopRegion_716385921 {
label = "LOOP:6: (1:49)";
node [shape=record,color=blue];
Node_77 [shape=record,label="{77\:\ 0x0087|LOOP_START\lLOOP:6: B:77:0x0087\-\>B:78:0x0089\lPHI: r1 \l  PHI: (r1v3 'j' int) = (r1v2 'j' int), (r1v4 'j' int) binds: [B:76:0x0086, B:78:0x0089] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \< r3) goto L49\l}"];
subgraph cluster_Region_1994409639 {
label = "R(1:49)";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x0089|LOOP_END\lLOOP:6: B:77:0x0087\-\>B:78:0x0089\l|r32[r1] = r29.f31mY[r2 \- 1][r1]\lr1++\l}"];
}
}
Node_79 [shape=record,label="{79\:\ 0x0096|RETURN\l|return\l}"];
}
}
}
}
}
}
Node_80 [shape=record,label="{80\:\ 0x0097|int r1 = 0\l}"];
subgraph cluster_LoopRegion_1248970955 {
label = "LOOP:2: (3:(2:23|(1:25))|27|(2:(3:31|(1:33)|35)|(1:29)))";
node [shape=record,color=blue];
Node_82 [shape=record,label="{82\:\ 0x009a|if (r1 \< (r2 \- 1)) goto L21\l}"];
subgraph cluster_Region_1427285308 {
label = "R(3:(2:23|(1:25))|27|(2:(3:31|(1:33)|35)|(1:29)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1049262254 {
label = "IF [B:84:0x00a2] THEN: R(2:23|(1:25)) ELSE: null";
node [shape=record,color=blue];
Node_84 [shape=record,label="{84\:\ 0x00a2|if (r30 == r29.f30mT[r1]) goto L23\l}"];
subgraph cluster_Region_1326886930 {
label = "R(2:23|(1:25))";
node [shape=record,color=blue];
Node_85 [shape=record,label="{85\:\ 0x00a4|int r4 = 0\l}"];
subgraph cluster_LoopRegion_609822064 {
label = "LOOP:3: (1:25)";
node [shape=record,color=blue];
Node_86 [shape=record,label="{86\:\ 0x00a5|LOOP_START\lLOOP:3: B:86:0x00a5\-\>B:87:0x00a7\lPHI: r4 \l  PHI: (r4v13 'j' int) = (r4v12 'j' int), (r4v14 'j' int) binds: [B:85:0x00a4, B:87:0x00a7] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \< r3) goto L25\l}"];
subgraph cluster_Region_1570529823 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_87 [shape=record,label="{87\:\ 0x00a7|LOOP_END\lLOOP:3: B:86:0x00a5\-\>B:87:0x00a7\l|r32[r4] = r29.f31mY[r1][r4]\lr4++\l}"];
}
}
}
}
Node_88 [shape=record,label="{88\:\ 0x00b2|double[] double[] r4 = r29.f30mT\l}"];
subgraph cluster_Region_2126579224 {
label = "R(2:(3:31|(1:33)|35)|(1:29))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_769059085 {
label = "IF [B:89:0x00ba] THEN: R(3:31|(1:33)|35) ELSE: null";
node [shape=record,color=blue];
Node_89 [shape=record,label="{89\:\ 0x00ba|if (r30 \< r4[r1 + 1]) goto L30\l}"];
subgraph cluster_Region_109246907 {
label = "R(3:31|(1:33)|35)";
node [shape=record,color=blue];
Node_90 [shape=record,label="{90\:\ 0x00bc|double double r5 = r4[r1 + 1] \- r4[r1]\ldouble double r7 = (r30 \- r4[r1]) \/ r5\lint r4 = 0\l}"];
subgraph cluster_LoopRegion_936358136 {
label = "LOOP:4: (1:33)";
node [shape=record,color=blue];
Node_91 [shape=record,label="{91\:\ 0x00c9|LOOP_START\lLOOP:4: B:91:0x00c9\-\>B:92:0x00cb\lPHI: r4 \l  PHI: (r4v10 'j' int) = (r4v9 'j' int), (r4v11 'j' int) binds: [B:90:0x00bc, B:92:0x00cb] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \< r3) goto L33\l}"];
subgraph cluster_Region_1805696717 {
label = "R(1:33)";
node [shape=record,color=blue];
Node_92 [shape=record,label="{92\:\ 0x00cb|LOOP_END\lLOOP:4: B:91:0x00c9\-\>B:92:0x00cb\l|double[][] double[][] r9 = r29.f31mY\ldouble r21 = r9[r1][r4]\ldouble r23 = r9[r1 + 1][r4]\ldouble[][] double[][] r9 = r29.mTangent\ldouble r25 = r9[r1][r4]\ldouble r27 = r9[r1 + 1][r4]\lr32[r4] = interpolate(r5, r7, r21, r23, r25, r27)\lr4++\l}"];
}
}
Node_93 [shape=record,label="{93\:\ 0x00f6|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1236032102 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_94 [shape=record,label="{94\:\ 0x00f7|LOOP_END\lLOOP:2: B:81:0x0098\-\>B:94:0x00f7\l|r1++\l}"];
}
}
}
}
}
Node_52 [shape=record,color=red,label="{52\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x000f}"];
Node_96 [shape=record,color=red,label="{96\:\ 0x0037|SYNTHETIC\l}"];
Node_53 [shape=record,color=red,label="{53\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x0038}"];
Node_97 [shape=record,color=red,label="{97\:\ 0x0068|SYNTHETIC\l}"];
Node_81 [shape=record,color=red,label="{81\:\ 0x0098|LOOP_START\lLOOP:2: B:81:0x0098\-\>B:94:0x00f7\lPHI: r1 \l  PHI: (r1v9 'i' int) = (r1v8 'i' int), (r1v10 'i' int) binds: [B:80:0x0097, B:94:0x00f7] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_83 [shape=record,color=red,label="{83\:\ 0x009c}"];
Node_100 [shape=record,color=red,label="{100\:\ 0x00b2|SYNTHETIC\l}"];
Node_98 [shape=record,color=red,label="{98\:\ 0x00bc|SYNTHETIC\l}"];
Node_101 [shape=record,color=red,label="{101\:\ 0x00f6|SYNTHETIC\l}"];
Node_99 [shape=record,color=red,label="{99\:\ 0x00fa|SYNTHETIC\l}"];
Node_95 [shape=record,color=red,label="{95\:\ 0x00fa}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x0069}"];
Node_102 [shape=record,color=red,label="{102\:\ 0x007d|SYNTHETIC\l}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x007e}"];
Node_103 [shape=record,color=red,label="{103\:\ 0x0096|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getPos((r29v0 'this' androidx.constraintlayout.core.motion.utils.MonotonicCurveFit A[IMMUTABLE_TYPE, THIS]), (r30v0 't' double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 'v' double[] A[D('v' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:60:0x001f \-\> B:59:0x001d, BACK_EDGE: B:66:0x004c \-\> B:65:0x004a, CROSS_EDGE: B:67:0x0068 \-\> B:53:?, BACK_EDGE: B:87:0x00a7 \-\> B:86:0x00a5, BACK_EDGE: B:92:0x00cb \-\> B:91:0x00c9, CROSS_EDGE: B:93:0x00f6 \-\> B:53:?, BACK_EDGE: B:94:0x00f7 \-\> B:81:0x0098, CROSS_EDGE: B:84:0x00a2 \-\> B:88:0x00b2, CROSS_EDGE: B:95:0x00fa \-\> B:53:?, BACK_EDGE: B:72:0x0072 \-\> B:71:0x0070, CROSS_EDGE: B:73:0x007d \-\> B:53:?, BACK_EDGE: B:78:0x0089 \-\> B:77:0x0087, CROSS_EDGE: B:79:0x0096 \-\> B:53:?, CROSS_EDGE: B:75:0x0084 \-\> B:80:0x0097\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, double[]):void]\l}"];
MethodNode -> Node_52;Node_54 -> Node_55;
Node_55 -> Node_56;
Node_55 -> Node_68[style=dashed];
Node_57 -> Node_58;
Node_57 -> Node_62[style=dashed];
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_59 -> Node_96[style=dashed];
Node_60 -> Node_59;
Node_61 -> Node_53;
Node_63 -> Node_64;
Node_63 -> Node_80[style=dashed];
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_65 -> Node_97[style=dashed];
Node_66 -> Node_65;
Node_67 -> Node_53;
Node_69 -> Node_70;
Node_69 -> Node_74[style=dashed];
Node_70 -> Node_71;
Node_71 -> Node_72;
Node_71 -> Node_102[style=dashed];
Node_72 -> Node_71;
Node_73 -> Node_53;
Node_75 -> Node_76;
Node_75 -> Node_80[style=dashed];
Node_76 -> Node_77;
Node_77 -> Node_78;
Node_77 -> Node_103[style=dashed];
Node_78 -> Node_77;
Node_79 -> Node_53;
Node_80 -> Node_81;
Node_82 -> Node_83;
Node_82 -> Node_99[style=dashed];
Node_84 -> Node_85;
Node_84 -> Node_88[style=dashed];
Node_85 -> Node_86;
Node_86 -> Node_87;
Node_86 -> Node_100[style=dashed];
Node_87 -> Node_86;
Node_88 -> Node_89;
Node_89 -> Node_94[style=dashed];
Node_89 -> Node_98;
Node_90 -> Node_91;
Node_91 -> Node_92;
Node_91 -> Node_101[style=dashed];
Node_92 -> Node_91;
Node_93 -> Node_53;
Node_94 -> Node_81;
Node_52 -> Node_54;
Node_56 -> Node_57;
Node_96 -> Node_61;
Node_62 -> Node_63;
Node_97 -> Node_67;
Node_81 -> Node_82;
Node_83 -> Node_84;
Node_100 -> Node_88;
Node_98 -> Node_90;
Node_101 -> Node_93;
Node_99 -> Node_95;
Node_95 -> Node_53;
Node_68 -> Node_69;
Node_102 -> Node_73;
Node_74 -> Node_75;
Node_103 -> Node_79;
}

