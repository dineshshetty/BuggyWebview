digraph "CFG forandroidx.constraintlayout.core.motion.utils.MonotonicCurveFit.buildWave([D)Landroidx\/constraintlayout\/core\/motion\/utils\/MonotonicCurveFit;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY] A[D('values' double[])])  (LINE:327)\l0x0002: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[]) \l0x0003: ARITH  (r1 I:int) = (r1 I:int) * (3 int) \l0x0005: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0006: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0007: ARRAY_LENGTH  (r3 I:int) = (r0 I:??[])  (LINE:328)\l0x0008: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0009: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) \l0x000a: CAST (r5 I:double) = (double) (r3 I:int A[D('len' int)])  (LINE:329)\l0x000b: CONST  (r7 I:??[long, double]) = (4607182418800017408(0x3ff0000000000000, double:1.0) ??[long, double]) \l0x000d: ARITH  (r5 I:double) = (r7 I:double) \/ (r5 I:double) \l0x000f: NEW_ARRAY  (r2 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[]  (LINE:330)\l0x0011: APUT  (r2 I:??[int, float][]), (r4 I:??[int, short, byte, char]), (r4 I:??[int, float, short, byte, char]) \l0x0013: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: APUT  (r2 I:??[int, float][]), (r4 I:??[int, short, byte, char]), (r1 I:??[int, float, short, byte, char] A[D('length' int)]) \l0x0016: CONST_CLASS  (r9 I:java.lang.Class\<double\>) =  double.class \l0x0018: INVOKE  (r2 I:java.lang.Object) = (r9 I:java.lang.Class), (r2 I:int[]) type: STATIC call: java.lang.reflect.Array.newInstance(java.lang.Class, int[]):java.lang.Object A[MD:(java.lang.Class\<?\>, int[]):java.lang.Object VARARG throws java.lang.IllegalArgumentException, java.lang.NegativeArraySizeException (c)]\l0x001c: CHECK_CAST (r2 I:double[][]) = (double[][]) (r2 I:??[OBJECT, ARRAY]) \l0x001e: NEW_ARRAY  (r9 I:double[]) = (r1 I:int A[D('length' int), IMMUTABLE_TYPE]) type: double[]  (LINE:331)\l0x0020: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:332)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0021|LOOP_START\lLOOP:0: B:17:0x0021\-\>B:22:0x005c\l|0x0021: ARRAY_LENGTH  (r11 I:int) = (r0 I:??[]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0022|0x0022: IF  (r10 I:??[int, byte, short, char] A[D('i' int)]) \>= (r11 I:??[int, byte, short, char])  \-\> B:25:0x005f \l}"];
Node_19 [shape=record,label="{19\:\ 0x0024|0x0024: AGET  (r11 I:??[long, double]) = (r0 I:??[long, double][]), (r10 I:??[int, short, byte, char] A[D('i' int)])  (LINE:333)\l0x0026: ARITH  (r13 I:int) = (r10 I:int A[D('i' int)]) + (r3 I:int A[D('len' int)])  (LINE:334)\l0x0028: AGET  (r13 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][] A[D('points' double[][])]), (r13 I:??[int, short, byte, char]) \l0x002a: APUT  (r13 I:??[long, double][]), (r4 I:??[int, short, byte, char]), (r11 I:??[long, double] A[D('v' double)]) \l0x002c: ARITH  (r13 I:int) = (r10 I:int A[D('i' int)]) + (r3 I:int A[D('len' int)])  (LINE:335)\l0x002e: CAST (r14 I:double) = (double) (r10 I:int A[D('i' int)]) \l0x002f: ARITH  (r14 I:double) = (r14 I:double) * (r5 I:double A[D('gap' double)]) \l0x0031: APUT  (r9 I:??[long, double][] A[D('time' double[])]), (r13 I:??[int, short, byte, char]), (r14 I:??[long, double]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0033|0x0033: IF  (r10 I:??[int, byte, short, char] A[D('i' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:27:0x005c  (LINE:336)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0035|0x0035: ARITH  (r13 I:int) = (r3 I:int A[D('len' int)]) * (2 int)  (LINE:337)\l0x0037: ARITH  (r13 I:int) = (r13 I:int) + (r10 I:int A[D('i' int)]) \l0x0038: AGET  (r13 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][] A[D('points' double[][])]), (r13 I:??[int, short, byte, char]) \l0x003a: ARITH  (r14 I:double) = (r11 I:double A[D('v' double)]) + (r7 I:double) \l0x003c: APUT  (r13 I:??[long, double][]), (r4 I:??[int, short, byte, char]), (r14 I:??[long, double]) \l0x003e: ARITH  (r13 I:int) = (r3 I:int A[D('len' int)]) * (2 int)  (LINE:338)\l0x0040: ARITH  (r13 I:int) = (r13 I:int) + (r10 I:int A[D('i' int)]) \l0x0041: CAST (r14 I:double) = (double) (r10 I:int A[D('i' int)]) \l0x0042: ARITH  (r14 I:double) = (r14 I:double) * (r5 I:double A[D('gap' double)]) \l0x0044: ARITH  (r14 I:double) = (r14 I:double) + (r7 I:double) \l0x0045: APUT  (r9 I:??[long, double][] A[D('time' double[])]), (r13 I:??[int, short, byte, char]), (r14 I:??[long, double]) \l0x0047: ARITH  (r13 I:int) = (r10 I:int A[D('i' int)]) + (\-1 int)  (LINE:340)\l0x0049: AGET  (r13 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][] A[D('points' double[][])]), (r13 I:??[int, short, byte, char]) \l0x004b: ARITH  (r14 I:double) = (r11 I:double A[D('v' double)]) \- (r7 I:double) \l0x004d: ARITH  (r14 I:double) = (r14 I:double) \- (r5 I:double A[D('gap' double)]) \l0x004e: APUT  (r13 I:??[long, double][]), (r4 I:??[int, short, byte, char]), (r14 I:??[long, double]) \l0x0050: ARITH  (r13 I:int) = (r10 I:int A[D('i' int)]) + (\-1 int)  (LINE:341)\l0x0052: CAST (r14 I:double) = (double) (r10 I:int A[D('i' int)]) \l0x0053: ARITH  (r14 I:double) = (r14 I:double) * (r5 I:double A[D('gap' double)]) \l0x0055: CONST  (r16 I:??[long, double]) = (\-4616189618054758400(0xbff0000000000000, double:\-1.0) ??[long, double]) \l0x0057: ARITH  (r14 I:double) = (r14 I:double) + (r16 I:double) \l0x0059: ARITH  (r14 I:double) = (r14 I:double) \- (r5 I:double A[D('gap' double)]) \l0x005a: APUT  (r9 I:??[long, double][] A[D('time' double[])]), (r13 I:??[int, short, byte, char]), (r14 I:??[long, double]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x005c|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x005c|LOOP_END\lLOOP:0: B:17:0x0021\-\>B:22:0x005c\l|0x005c: ARITH  (r10 I:int) = (r10 I:int A[D('i' int)]) + (1 int)  (LINE:332)\l}"];
Node_27 [shape=record,label="{27\:\ 0x005c|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x005f|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x005f|0x005f: NEW_INSTANCE  (r4 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) =  androidx.constraintlayout.core.motion.utils.MonotonicCurveFit  (LINE:345)\l0x0061: INVOKE  \l  (r4 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit)\l  (r9 I:double[] A[D('time' double[])])\l  (r2 I:double[][] A[D('points' double[][])])\l type: DIRECT call: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.\<init\>(double[], double[][]):void A[MD:(double[], double[][]):void (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0064|RETURN\l|0x0064: RETURN  (r4 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static androidx.constraintlayout.core.motion.utils.MonotonicCurveFit androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.buildWave((r18 I:double[] A[D('values' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:22:0x005c \-\> B:17:0x0021, CROSS_EDGE: B:20:0x0033 \-\> B:22:0x005c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0026\-0x005c: r11 'v' D\l  0x0021\-0x005f: r10 'i' I\l  0x0007\-0x0064: r1 'length' I\l  0x001e\-0x0064: r2 'points' [[D\l  0x000a\-0x0064: r3 'len' I\l  0x000f\-0x0064: r5 'gap' D\l  0x0020\-0x0064: r9 'time' [D\l  \-1 \-0x0064: r18 'values' [D\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_21 -> Node_26;
Node_26 -> Node_22;
Node_22 -> Node_17;
Node_27 -> Node_22;
Node_25 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_15;
}

