digraph "CFG forandroidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getSlope(D[D)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r31 I:??[OBJECT, ARRAY])  (LINE:224)\l0x0002: IGET  (r1 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mT double[] \l0x0004: ARRAY_LENGTH  (r2 I:int) = (r1 I:??[]) \l0x0005: IGET  (r3 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mY double[][]  (LINE:225)\l0x0007: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]) \l0x000a: ARRAY_LENGTH  (r3 I:int) = (r3 I:??[]) \l0x000b: AGET  (r5 I:??[long, double]) = (r1 I:??[long, double][]), (r4 I:??[int, short, byte, char])  (LINE:226)\l0x000d: CMP_G  (r7 I:int) = (r32 I:double A[D('t' double)]), (r5 I:double) \l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|0x000f: IF  (r7 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:29:0x0014 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0011|0x0011: AGET  (r4 I:??[long, double]) = (r1 I:??[long, double][]), (r4 I:??[int, short, byte, char])  (LINE:227)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0023|0x0023: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:232)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0024|LOOP_START\lLOOP:0: B:34:0x0024\-\>B:42:0x006e\l|0x0024: ARITH  (r6 I:int) = (r2 I:int A[D('n' int)]) + (\-1 int) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0026|0x0026: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r6 I:??[int, byte, short, char])  \-\> B:45:0x0071 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0028|0x0028: IGET  (r6 I:double[]) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mT double[]  (LINE:233)\l0x002a: ARITH  (r7 I:int) = (r1 I:int A[D('i' int)]) + (1 int) \l0x002c: AGET  (r7 I:??[long, double]) = (r6 I:??[long, double][]), (r7 I:??[int, short, byte, char]) \l0x002e: CMP_G  (r9 I:int) = (r4 I:double A[D('t' double)]), (r7 I:double) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0030|0x0030: IF  (r9 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:42:0x006e \l}"];
Node_42 [shape=record,label="{42\:\ 0x006e|LOOP_END\lLOOP:0: B:34:0x0024\-\>B:42:0x006e\l|0x006e: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:232)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0032|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0032|0x0032: ARITH  (r7 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:234)\l0x0034: AGET  (r7 I:??[long, double]) = (r6 I:??[long, double][]), (r7 I:??[int, short, byte, char]) \l0x0036: AGET  (r9 I:??[long, double]) = (r6 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('i' int)]) \l0x0038: ARITH  (r7 I:double) = (r7 I:double) \- (r9 I:double) \l0x0039: AGET  (r9 I:??[long, double]) = (r6 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('i' int)])  (LINE:235)\l0x003b: ARITH  (r9 I:double) = (r4 I:double A[D('t' double)]) \- (r9 I:double) \l0x003d: ARITH  (r9 I:double) = (r9 I:double) \/ (r7 I:double A[D('h' double)]) \l0x003e: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:236)\l}"];
Node_39 [shape=record,label="{39\:\ 0x003f|LOOP_START\lLOOP:1: B:39:0x003f\-\>B:40:0x0041\l|0x003f: IF  (r6 I:??[int, byte, short, char] A[D('j' int)]) \>= (r3 I:??[int, byte, short, char] A[D('dim' int)])  \-\> B:46:0x0071 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0041|LOOP_END\lLOOP:1: B:39:0x003f\-\>B:40:0x0041\l|0x0041: IGET  (r11 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mY double[][]  (LINE:237)\l0x0043: AGET  (r12 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char] A[D('i' int)]) \l0x0045: AGET  (r23 I:??[long, double]) = (r12 I:??[long, double][]), (r6 I:??[int, short, byte, char] A[D('j' int)]) \l0x0047: ARITH  (r12 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:238)\l0x0049: AGET  (r11 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY][]), (r12 I:??[int, short, byte, char]) \l0x004b: AGET  (r25 I:??[long, double]) = (r11 I:??[long, double][]), (r6 I:??[int, short, byte, char] A[D('j' int)]) \l0x004d: IGET  (r11 I:double[][]) = (r0 I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit) androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.mTangent double[][]  (LINE:239)\l0x004f: AGET  (r12 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char] A[D('i' int)]) \l0x0051: AGET  (r27 I:??[long, double]) = (r12 I:??[long, double][]), (r6 I:??[int, short, byte, char] A[D('j' int)]) \l0x0053: ARITH  (r12 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:240)\l0x0055: AGET  (r11 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY][]), (r12 I:??[int, short, byte, char]) \l0x0057: AGET  (r29 I:??[long, double]) = (r11 I:??[long, double][]), (r6 I:??[int, short, byte, char] A[D('j' int)]) \l0x0059: MOVE  (r11 I:??[long, double]) = (r7 I:??[long, double] A[D('h' double)])  (LINE:241)\l0x005a: MOVE  (r13 I:??[long, double]) = (r9 I:??[long, double] A[D('x' double)]) \l0x005b: MOVE  (r15 I:??[long, double]) = (r23 I:??[long, double] A[D('y1' double)]) \l0x005d: MOVE  (r17 I:??[long, double]) = (r25 I:??[long, double] A[D('y2' double)]) \l0x005f: MOVE  (r19 I:??[long, double]) = (r27 I:??[long, double] A[D('t1' double)]) \l0x0061: MOVE  (r21 I:??[long, double]) = (r29 I:??[long, double] A[D('t2' double)]) \l0x0063: INVOKE  (r11 I:double) = (r11 I:double), (r13 I:double), (r15 I:double), (r17 I:double), (r19 I:double), (r21 I:double) type: STATIC call: androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.diff(double, double, double, double, double, double):double A[MD:(double, double, double, double, double, double):double (m)]\l0x0067: ARITH  (r11 I:double) = (r11 I:double) \/ (r7 I:double A[D('h' double)]) \l0x0068: APUT  \l  (r34 I:??[long, double][] A[D('v' double[])])\l  (r6 I:??[int, short, byte, char] A[D('j' int)])\l  (r11 I:??[long, double])\l \l0x006a: ARITH  (r6 I:int) = (r6 I:int A[D('j' int)]) + (1 int)  (LINE:236)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0071|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|0x0071: RETURN   A[SYNTHETIC] (LINE:246)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0071|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0071|RETURN\lORIG_RETURN\l|0x0071: RETURN    (LINE:246)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0014|0x0014: ARITH  (r4 I:int A[D('t' double)]) = (r2 I:int A[D('n' int)]) + (\-1 int)  (LINE:228)\l0x0016: AGET  (r4 I:??[long, double]) = (r1 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l0x0018: CMP_L  (r6 I:int) = (r32 I:double A[D('t' double)]), (r4 I:double) \l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|0x001a: IF  (r6 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:32:0x0021 \l}"];
Node_31 [shape=record,label="{31\:\ 0x001c|0x001c: ARITH  (r4 I:int) = (r2 I:int A[D('n' int)]) + (\-1 int)  (LINE:229)\l0x001e: AGET  (r4 I:??[long, double]) = (r1 I:??[long, double][]), (r4 I:??[int, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0021|0x0021: MOVE  (r4 I:??[long, double] A[D('t' double)]) = (r32 I:??[long, double] A[D('t' double)])  (LINE:228)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getSlope((r31 'this' I:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit A[IMMUTABLE_TYPE, THIS]), (r32 I:double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34 I:double[] A[D('v' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:40:0x0041 \-\> B:39:0x003f, BACK_EDGE: B:42:0x006e \-\> B:34:0x0024, CROSS_EDGE: B:35:0x0026 \-\> B:43:0x0071, CROSS_EDGE: B:31:0x001c \-\> B:33:0x0023, CROSS_EDGE: B:32:0x0021 \-\> B:33:0x0023\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0013: r32 't' D\l  0x0013\-0x0014: r4 't' D\l  0x0014\-0x0020: r32 't' D\l  0x0020\-0x0021: r4 't' D\l  0x0021\-0x0023: r32 't' D\l  0x0047\-0x006a: r23 'y1' D\l  0x004d\-0x006a: r25 'y2' D\l  0x0053\-0x006a: r27 't1' D\l  0x0059\-0x006a: r29 't2' D\l  0x003f\-0x006d: r6 'j' I\l  0x0039\-0x006e: r7 'h' D\l  0x003e\-0x006e: r9 'x' D\l  0x0024\-0x0071: r1 'i' I\l  0x0005\-0x0071: r2 'n' I\l  0x000b\-0x0071: r3 'dim' I\l  0x0023\-0x0071: r4 't' D\l  \-1 \-0x0071: r34 'v' [D\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getSlope(double, double[]):void]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_45;
Node_36 -> Node_37;
Node_37 -> Node_42;
Node_37 -> Node_44[style=dashed];
Node_42 -> Node_34;
Node_44 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_46;
Node_40 -> Node_39;
Node_46 -> Node_47;
Node_47 -> Node_25;
Node_45 -> Node_43;
Node_43 -> Node_25;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_32 -> Node_33;
}

