digraph "CFG forandroidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getPos(DI)D" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|double[] r2 = r29.f30mT\lint r3 = r2.length\l}"];
Node_40 [shape=record,label="{40\:\ 0x000a|if (r29.mExtrapolate == false) goto L28\l}"];
Node_41 [shape=record,label="{41\:\ 0x000c}"];
Node_42 [shape=record,label="{42\:\ 0x0010|if ((r30 \> r2[0] ? 1 : (r30 == r2[0] ? 0 : \-1)) \> 0) goto L8\l}"];
Node_43 [shape=record,label="{43\:\ 0x0012}"];
Node_44 [shape=record,label="{44\:\ 0x0025|RETURN\l|return r29.f31mY[0][r32] + ((r30 \- r2[0]) * getSlope(r2[0], r32))\l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0026}"];
Node_46 [shape=record,label="{46\:\ 0x002c|if ((r30 \> r2[r3 + (\-1)] ? 1 : (r30 == r2[r3 + (\-1)] ? 0 : \-1)) \< 0) goto L12\l}"];
Node_47 [shape=record,label="{47\:\ 0x002e}"];
Node_48 [shape=record,label="{48\:\ 0x0047|RETURN\l|return r29.f31mY[r3 + (\-1)][r32] + ((r30 \- r2[r3 + (\-1)]) * getSlope(r2[r3 + (\-1)], r32))\l}"];
Node_57 [shape=record,label="{57\:\ 0x0066|r2 = 0\l}"];
Node_58 [shape=record,label="{58\:\ 0x0067|LOOP_START\lLOOP:0: B:58:0x0067\-\>B:68:0x00b5\lPHI: r2 \l  PHI: (r2v7 'i' int) = (r2v6 'i' int), (r2v8 'i' int) binds: [B:57:0x0066, B:68:0x00b5] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_59 [shape=record,label="{59\:\ 0x0069|if (r2 \>= (r3 + (\-1))) goto L26\l}"];
Node_60 [shape=record,label="{60\:\ 0x006b|double[] r4 = r29.f30mT\l}"];
Node_61 [shape=record,label="{61\:\ 0x0071|if ((r30 \> r4[r2] ? 1 : (r30 == r4[r2] ? 0 : \-1)) != 0) goto L17\l}"];
Node_64 [shape=record,label="{64\:\ 0x007a}"];
Node_65 [shape=record,label="{65\:\ 0x0080|if ((r30 \> r4[r2 + 1] ? 1 : (r30 == r4[r2 + 1] ? 0 : \-1)) \>= 0) goto L19\l}"];
Node_68 [shape=record,label="{68\:\ 0x00b5|LOOP_END\lLOOP:0: B:58:0x0067\-\>B:68:0x00b5\l|int r2 = r2 + 1\l}"];
Node_71 [shape=record,label="{71\:\ 0x0082|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0082|double r5 = r4[r2 + 1] \- r4[r2]\ldouble r7 = (r30 \- r4[r2]) \/ r5\ldouble[][] r4 = r29.f31mY\lr21 = r4[r2][r32]\lr23 = r4[r2 + 1][r32]\ldouble[][] r4 = r29.mTangent\lr25 = r4[r2][r32]\lr27 = r4[r2 + 1][r32]\l}"];
Node_67 [shape=record,label="{67\:\ 0x00b4|RETURN\l|return interpolate(r5, r7, r21, r23, r25, r27)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0073|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0073}"];
Node_63 [shape=record,label="{63\:\ 0x0079|RETURN\l|return r29.f31mY[r2][r32]\l}"];
Node_73 [shape=record,label="{73\:\ 0x00b8|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x00b8|RETURN\l|return 0.0d\l}"];
Node_49 [shape=record,label="{49\:\ 0x0048}"];
Node_50 [shape=record,label="{50\:\ 0x004c|if ((r30 \> r2[0] ? 1 : (r30 == r2[0] ? 0 : \-1)) \> 0) goto L32\l}"];
Node_51 [shape=record,label="{51\:\ 0x004e}"];
Node_52 [shape=record,label="{52\:\ 0x0054|RETURN\l|return r29.f31mY[0][r32]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0055}"];
Node_54 [shape=record,label="{54\:\ 0x005b|if ((r30 \> r2[r3 + (\-1)] ? 1 : (r30 == r2[r3 + (\-1)] ? 0 : \-1)) \< 0) goto L12\l}"];
Node_55 [shape=record,label="{55\:\ 0x005d}"];
Node_56 [shape=record,label="{56\:\ 0x0065|RETURN\l|return r29.f31mY[r3 + (\-1)][r32]\l}"];
MethodNode[shape=record,label="{public double androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getPos((r29v0 'this' androidx.constraintlayout.core.motion.utils.MonotonicCurveFit A[IMMUTABLE_TYPE, THIS]), (r30v0 't' double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 'j' int A[D('j' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:48:0x0047 \-\> B:38:?, CROSS_EDGE: B:63:0x0079 \-\> B:38:?, CROSS_EDGE: B:67:0x00b4 \-\> B:38:?, BACK_EDGE: B:68:0x00b5 \-\> B:58:0x0067, CROSS_EDGE: B:70:0x00ba \-\> B:38:?, CROSS_EDGE: B:52:0x0054 \-\> B:38:?, CROSS_EDGE: B:56:0x0065 \-\> B:38:?, CROSS_EDGE: B:54:0x005b \-\> B:57:0x0066\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, int):double]\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_49;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_45;
Node_43 -> Node_44;
Node_44 -> Node_38;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_57;
Node_47 -> Node_48;
Node_48 -> Node_38;
Node_57 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_73;
Node_60 -> Node_61;
Node_61 -> Node_64;
Node_61 -> Node_72[style=dashed];
Node_64 -> Node_65;
Node_65 -> Node_68;
Node_65 -> Node_71[style=dashed];
Node_68 -> Node_58;
Node_71 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_38;
Node_72 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_38;
Node_73 -> Node_69;
Node_69 -> Node_38;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_53;
Node_51 -> Node_52;
Node_52 -> Node_38;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_57;
Node_55 -> Node_56;
Node_56 -> Node_38;
}

