digraph "CFG forandroidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getSlope(D[D)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|double[] r1 = r31.f30mT\lint r2 = r1.length\lint r3 = r31.f31mY[0].length\l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|if ((r32 \> r1[0] ? 1 : (r32 == r1[0] ? 0 : \-1)) \> 0) goto L19\l}"];
Node_28 [shape=record,label="{28\:\ 0x0011|r4 = r1[0]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0023|PHI: r4 \l  PHI: (r4v6 't' double) = (r4v3 't' double), (r4v5 't' double), (r4v7 't' double) binds: [B:32:0x0021, B:31:0x001c, B:28:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|r1 = 0\l}"];
Node_34 [shape=record,label="{34\:\ 0x0024|LOOP_START\lLOOP:0: B:34:0x0024\-\>B:42:0x006e\lPHI: r1 \l  PHI: (r1v2 'i' int) = (r1v1 'i' int), (r1v3 'i' int) binds: [B:33:0x0023, B:42:0x006e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0026|if (r1 \>= (r2 + (\-1))) goto L17\l}"];
Node_36 [shape=record,label="{36\:\ 0x0028|double[] r6 = r31.f30mT\l}"];
Node_37 [shape=record,label="{37\:\ 0x0030|if ((r4 \> r6[r1 + 1] ? 1 : (r4 == r6[r1 + 1] ? 0 : \-1)) \> 0) goto L9\l}"];
Node_42 [shape=record,label="{42\:\ 0x006e|LOOP_END\lLOOP:0: B:34:0x0024\-\>B:42:0x006e\l|int r1 = r1 + 1\l}"];
Node_44 [shape=record,label="{44\:\ 0x0032|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0032|double r7 = r6[r1 + 1] \- r6[r1]\ldouble r9 = (r4 \- r6[r1]) \/ r7\lr6 = 0\l}"];
Node_39 [shape=record,label="{39\:\ 0x003f|LOOP_START\lLOOP:1: B:39:0x003f\-\>B:40:0x0041\lPHI: r6 \l  PHI: (r6v4 'j' int) = (r6v3 'j' int), (r6v5 'j' int) binds: [B:38:0x0032, B:40:0x0041] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 \>= r3) goto L14\l}"];
Node_40 [shape=record,label="{40\:\ 0x0041|LOOP_END\lLOOP:1: B:39:0x003f\-\>B:40:0x0041\l|double[][] r11 = r31.f31mY\lr23 = r11[r1][r6]\lr25 = r11[r1 + 1][r6]\ldouble[][] r11 = r31.mTangent\lr27 = r11[r1][r6]\lr29 = r11[r1 + 1][r6]\lr34[r6] = diff(r7, r9, r23, r25, r27, r29) \/ r7\lint r6 = r6 + 1\l}"];
Node_46 [shape=record,label="{46\:\ 0x0071|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0071|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0071|RETURN\lORIG_RETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ 0x0014}"];
Node_30 [shape=record,label="{30\:\ 0x001a|if ((r32 \> r1[r2 + (\-1)] ? 1 : (r32 == r1[r2 + (\-1)] ? 0 : \-1)) \< 0) goto L22\l}"];
Node_31 [shape=record,label="{31\:\ 0x001c|r4 = r1[r2 + (\-1)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0021|r4 = r32\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.MonotonicCurveFit.getSlope((r31v0 'this' androidx.constraintlayout.core.motion.utils.MonotonicCurveFit A[IMMUTABLE_TYPE, THIS]), (r32v0 't' double A[D('t' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34v0 'v' double[] A[D('v' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:40:0x0041 \-\> B:39:0x003f, BACK_EDGE: B:42:0x006e \-\> B:34:0x0024, CROSS_EDGE: B:35:0x0026 \-\> B:43:0x0071, CROSS_EDGE: B:31:0x001c \-\> B:33:0x0023, CROSS_EDGE: B:32:0x0021 \-\> B:33:0x0023\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.CurveFit.getSlope(double, double[]):void]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_45;
Node_36 -> Node_37;
Node_37 -> Node_42;
Node_37 -> Node_44[style=dashed];
Node_42 -> Node_34;
Node_44 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_46;
Node_40 -> Node_39;
Node_46 -> Node_47;
Node_47 -> Node_25;
Node_45 -> Node_43;
Node_43 -> Node_25;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_32 -> Node_33;
}

