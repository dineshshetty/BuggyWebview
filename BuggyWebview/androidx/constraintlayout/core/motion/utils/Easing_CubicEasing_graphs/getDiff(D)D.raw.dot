digraph "CFG forandroidx.constraintlayout.core.motion.utils.Easing.CubicEasing.getDiff(D)D" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY])  (LINE:155)\l0x0002: CONST  (r1 I:??[long, double]) = (4602678819172646912(0x3fe0000000000000, double:0.5) ??[long, double]) \l0x0004: CONST  (r3 I:??[long, double]) = (4602678819172646912(0x3fe0000000000000, double:0.5) ??[long, double])  (LINE:156)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|LOOP_START\lLOOP:0: B:21:0x0006\-\>B:33:0x0006\l|0x0006: SGET  (r5 I:double) =  androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.d_error double  (LINE:157)\l0x0008: CMP_L  (r7 I:int) = (r3 I:double A[D('range' double)]), (r5 I:double) \l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|0x000a: IF  (r7 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:31:0x001c \l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|0x000c: INVOKE  (r5 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.Easing$CubicEasing), (r1 I:double A[D('t' double)]) type: DIRECT call: androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.getX(double):double A[MD:(double):double (m)] (LINE:158)\l0x0010: CONST  (r7 I:??[long, double]) = (4602678819172646912(0x3fe0000000000000, double:0.5) ??[long, double])  (LINE:159)\l0x0012: ARITH  (r3 I:double) = (r3 I:double A[D('range' double)]) * (r7 I:double) \l0x0014: CMP_G  (r7 I:int) = (r5 I:double A[D('tx' double)]), (r18 I:double A[D('x' double)])  (LINE:160)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|0x0016: IF  (r7 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:30:0x001a \l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|0x001a: ARITH  (r1 I:double) = (r1 I:double A[D('t' double)]) \- (r3 I:double A[D('range' double)])  (LINE:163)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0006|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:21:0x0006\-\>B:33:0x0006\l}"];
Node_32 [shape=record,label="{32\:\ 0x0018|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|0x0018: ARITH  (r1 I:double) = (r1 I:double A[D('t' double)]) + (r3 I:double A[D('range' double)])  (LINE:161)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0006|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x001c|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x001c|0x001c: ARITH  (r5 I:double) = (r1 I:double A[D('t' double)]) \- (r3 I:double A[D('range' double)])  (LINE:167)\l0x001e: INVOKE  (r5 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.Easing$CubicEasing), (r5 I:double) type: DIRECT call: androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.getX(double):double A[MD:(double):double (m)]\l0x0022: ARITH  (r7 I:double) = (r1 I:double A[D('t' double)]) + (r3 I:double A[D('range' double)])  (LINE:168)\l0x0024: INVOKE  (r7 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.Easing$CubicEasing), (r7 I:double) type: DIRECT call: androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.getX(double):double A[MD:(double):double (m)]\l0x0028: ARITH  (r9 I:double) = (r1 I:double A[D('t' double)]) \- (r3 I:double A[D('range' double)])  (LINE:169)\l0x002a: INVOKE  (r9 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.Easing$CubicEasing), (r9 I:double) type: DIRECT call: androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.getY(double):double A[MD:(double):double (m)]\l0x002e: ARITH  (r11 I:double) = (r1 I:double A[D('t' double)]) + (r3 I:double A[D('range' double)])  (LINE:170)\l0x0030: INVOKE  (r11 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.Easing$CubicEasing), (r11 I:double) type: DIRECT call: androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.getY(double):double A[MD:(double):double (m)]\l0x0034: ARITH  (r13 I:double) = (r11 I:double A[D('y2' double)]) \- (r9 I:double A[D('y1' double)])  (LINE:172)\l0x0036: ARITH  (r15 I:double) = (r7 I:double A[D('x2' double)]) \- (r5 I:double A[D('x1' double)]) \l0x0038: ARITH  (r13 I:double) = (r13 I:double) \/ (r15 I:double) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0039|RETURN\l|0x0039: RETURN  (r13 I:double) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public double androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.getDiff((r17 'this' I:androidx.constraintlayout.core.motion.utils.Easing$CubicEasing A[IMMUTABLE_TYPE, THIS]), (r18 I:double A[D('x' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x0018 \-\> B:21:0x0006, BACK_EDGE: B:26:0x001a \-\> B:21:0x0006\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0010\-0x001b: r5 'tx' D\l  0x0004\-0x0039: r1 't' D\l  0x0006\-0x0039: r3 'range' D\l  0x0022\-0x0039: r5 'x1' D\l  0x0028\-0x0039: r7 'x2' D\l  0x002e\-0x0039: r9 'y1' D\l  0x0034\-0x0039: r11 'y2' D\l  \-1 \-0x0039: r18 'x' D\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.Easing.getDiff(double):double]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_31;
Node_23 -> Node_24;
Node_24 -> Node_30;
Node_24 -> Node_32[style=dashed];
Node_30 -> Node_26;
Node_26 -> Node_34;
Node_34 -> Node_33;
Node_33 -> Node_21;
Node_32 -> Node_25;
Node_25 -> Node_35;
Node_35 -> Node_33;
Node_31 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_19;
}

