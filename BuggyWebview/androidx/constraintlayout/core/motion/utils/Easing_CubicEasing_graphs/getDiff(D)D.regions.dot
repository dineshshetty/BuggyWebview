digraph "CFG forandroidx.constraintlayout.core.motion.utils.Easing.CubicEasing.getDiff(D)D" {
subgraph cluster_Region_983975276 {
label = "R(4:1|(2:4|(1:11)(1:7))|14|15)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0000|double r1 = 0.5d\ldouble r3 = 0.5d\l}"];
subgraph cluster_LoopRegion_2028490092 {
label = "LOOP:0: (2:4|(1:11)(1:7))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000a|if (r3 \> androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.d_error) goto L4\l}"];
subgraph cluster_Region_1894640440 {
label = "R(2:4|(1:11)(1:7))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000c|double double r5 = getX(r1)\lr3 *= 0.5d\l}"];
subgraph cluster_IfRegion_981012875 {
label = "IF [B:24:0x0016] THEN: R(1:11) ELSE: R(1:7)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0016|if (r5 \< r18) goto L10\l}"];
subgraph cluster_Region_1154531434 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0018|r1 += r3\l}"];
}
subgraph cluster_Region_1953854991 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x001a|r1 \-= r3\l}"];
}
}
}
}
Node_28 [shape=record,label="{28\:\ 0x001c|double double r5 = getX(r1 \- r3)\ldouble double r7 = getX(r1 + r3)\ldouble double r9 = getY(r1 \- r3)\ldouble double r11 = getY(r1 + r3)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0039|RETURN\l|return (r11 \- r9) \/ (r7 \- r5)\l}"];
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0006|LOOP_START\lLOOP:0: B:21:0x0006\-\>B:33:0x0006\lPHI: r1 r3 \l  PHI: (r1v1 't' double) = (r1v0 't' double), (r1v3 't' double) binds: [B:20:0x0000, B:33:0x0006] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'range' double) = (r3v0 'range' double), (r3v2 'range' double) binds: [B:20:0x0000, B:33:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x001a|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0006|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:21:0x0006\-\>B:33:0x0006\lPHI: r1 \l  PHI: (r1v3 't' double) = (r1v2 't' double), (r1v4 't' double) binds: [B:35:0x0006, B:34:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0018|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0006|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x001c|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public double androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.getDiff((r17v0 'this' androidx.constraintlayout.core.motion.utils.Easing$CubicEasing A[IMMUTABLE_TYPE, THIS]), (r18v0 'x' double A[D('x' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x0018 \-\> B:21:0x0006, BACK_EDGE: B:26:0x001a \-\> B:21:0x0006\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.Easing.getDiff(double):double]\l}"];
MethodNode -> Node_18;Node_20 -> Node_21;
Node_22 -> Node_23;
Node_22 -> Node_31[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_30[style=dashed];
Node_24 -> Node_32;
Node_25 -> Node_35;
Node_26 -> Node_34;
Node_28 -> Node_29;
Node_29 -> Node_19;
Node_18 -> Node_20;
Node_21 -> Node_22;
Node_30 -> Node_26;
Node_34 -> Node_33;
Node_33 -> Node_21;
Node_32 -> Node_25;
Node_35 -> Node_33;
Node_31 -> Node_28;
}

