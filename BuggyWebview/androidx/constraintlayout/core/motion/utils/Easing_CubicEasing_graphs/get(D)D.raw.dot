digraph "CFG forandroidx.constraintlayout.core.motion.utils.Easing.CubicEasing.get(D)D" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY])  (LINE:180)\l0x0002: CONST  (r1 I:??[long, double]) = (0 ??[long, double]) \l0x0004: CMP_G  (r3 I:int) = (r18 I:double A[D('x' double)]), (r1 I:double) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|0x0006: IF  (r3 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:29:0x0009 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0008|RETURN\l|0x0008: RETURN  (r1 I:double)  (LINE:181)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0009|0x0009: CONST  (r1 I:??[long, double]) = (4607182418800017408(0x3ff0000000000000, double:1.0) ??[long, double])  (LINE:183)\l0x000b: CMP_L  (r3 I:int) = (r18 I:double A[D('x' double)]), (r1 I:double) \l}"];
Node_30 [shape=record,label="{30\:\ 0x000d|0x000d: IF  (r3 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:32:0x0010 \l}"];
Node_31 [shape=record,label="{31\:\ 0x000f|RETURN\l|0x000f: RETURN  (r1 I:double)  (LINE:184)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0010|0x0010: CONST  (r1 I:??[long, double]) = (4602678819172646912(0x3fe0000000000000, double:0.5) ??[long, double])  (LINE:186)\l0x0012: CONST  (r3 I:??[long, double]) = (4602678819172646912(0x3fe0000000000000, double:0.5) ??[long, double])  (LINE:187)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0014|LOOP_START\lLOOP:0: B:33:0x0014\-\>B:45:0x0014\l|0x0014: SGET  (r5 I:double) =  androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.error double  (LINE:188)\l0x0016: CMP_L  (r7 I:int) = (r3 I:double A[D('range' double)]), (r5 I:double) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0018|0x0018: IF  (r7 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:43:0x002a \l}"];
Node_35 [shape=record,label="{35\:\ 0x001a|0x001a: INVOKE  (r5 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.Easing$CubicEasing), (r1 I:double A[D('t' double)]) type: DIRECT call: androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.getX(double):double A[MD:(double):double (m)] (LINE:189)\l0x001e: CONST  (r7 I:??[long, double]) = (4602678819172646912(0x3fe0000000000000, double:0.5) ??[long, double])  (LINE:190)\l0x0020: ARITH  (r3 I:double) = (r3 I:double A[D('range' double)]) * (r7 I:double) \l0x0022: CMP_G  (r7 I:int) = (r5 I:double A[D('tx' double)]), (r18 I:double A[D('x' double)])  (LINE:191)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0024|0x0024: IF  (r7 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:42:0x0028 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0028|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0028|0x0028: ARITH  (r1 I:double) = (r1 I:double A[D('t' double)]) \- (r3 I:double A[D('range' double)])  (LINE:194)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0014|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0014|LOOP_END\lSYNTHETIC\lLOOP:0: B:33:0x0014\-\>B:45:0x0014\l}"];
Node_44 [shape=record,label="{44\:\ 0x0026|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0026|0x0026: ARITH  (r1 I:double) = (r1 I:double A[D('t' double)]) + (r3 I:double A[D('range' double)])  (LINE:192)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0014|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x002a|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x002a|0x002a: ARITH  (r5 I:double) = (r1 I:double A[D('t' double)]) \- (r3 I:double A[D('range' double)])  (LINE:198)\l0x002c: INVOKE  (r5 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.Easing$CubicEasing), (r5 I:double) type: DIRECT call: androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.getX(double):double A[MD:(double):double (m)]\l0x0030: ARITH  (r7 I:double) = (r1 I:double A[D('t' double)]) + (r3 I:double A[D('range' double)])  (LINE:199)\l0x0032: INVOKE  (r7 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.Easing$CubicEasing), (r7 I:double) type: DIRECT call: androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.getX(double):double A[MD:(double):double (m)]\l0x0036: ARITH  (r9 I:double) = (r1 I:double A[D('t' double)]) \- (r3 I:double A[D('range' double)])  (LINE:200)\l0x0038: INVOKE  (r9 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.Easing$CubicEasing), (r9 I:double) type: DIRECT call: androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.getY(double):double A[MD:(double):double (m)]\l0x003c: ARITH  (r11 I:double) = (r1 I:double A[D('t' double)]) + (r3 I:double A[D('range' double)])  (LINE:201)\l0x003e: INVOKE  (r11 I:double) = (r0 I:androidx.constraintlayout.core.motion.utils.Easing$CubicEasing), (r11 I:double) type: DIRECT call: androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.getY(double):double A[MD:(double):double (m)]\l0x0042: ARITH  (r13 I:double) = (r11 I:double A[D('y2' double)]) \- (r9 I:double A[D('y1' double)])  (LINE:203)\l0x0044: ARITH  (r15 I:double) = (r18 I:double A[D('x' double)]) \- (r5 I:double A[D('x1' double)]) \l0x0046: ARITH  (r13 I:double) = (r13 I:double) * (r15 I:double) \l0x0048: ARITH  (r15 I:double) = (r7 I:double A[D('x2' double)]) \- (r5 I:double A[D('x1' double)]) \l0x004a: ARITH  (r13 I:double) = (r13 I:double) \/ (r15 I:double) \l0x004b: ARITH  (r13 I:double) = (r13 I:double) + (r9 I:double A[D('y1' double)]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x004c|RETURN\l|0x004c: RETURN  (r13 I:double) \l}"];
MethodNode[shape=record,label="{public double androidx.constraintlayout.core.motion.utils.Easing.CubicEasing.get((r17 'this' I:androidx.constraintlayout.core.motion.utils.Easing$CubicEasing A[IMMUTABLE_TYPE, THIS]), (r18 I:double A[D('x' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x000f \-\> B:25:?, BACK_EDGE: B:37:0x0026 \-\> B:33:0x0014, BACK_EDGE: B:38:0x0028 \-\> B:33:0x0014, CROSS_EDGE: B:41:0x004c \-\> B:25:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x0029: r5 'tx' D\l  0x0012\-0x004c: r1 't' D\l  0x0014\-0x004c: r3 'range' D\l  0x0030\-0x004c: r5 'x1' D\l  0x0036\-0x004c: r7 'x2' D\l  0x003c\-0x004c: r9 'y1' D\l  0x0042\-0x004c: r11 'y2' D\l  \-1 \-0x004c: r18 'x' D\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.Easing.get(double):double]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_25;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_25;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_43;
Node_35 -> Node_36;
Node_36 -> Node_42;
Node_36 -> Node_44[style=dashed];
Node_42 -> Node_38;
Node_38 -> Node_46;
Node_46 -> Node_45;
Node_45 -> Node_33;
Node_44 -> Node_37;
Node_37 -> Node_47;
Node_47 -> Node_45;
Node_43 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_25;
}

