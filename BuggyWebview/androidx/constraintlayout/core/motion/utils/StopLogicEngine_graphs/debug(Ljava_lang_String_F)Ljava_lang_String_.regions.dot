digraph "CFG forandroidx.constraintlayout.core.motion.utils.StopLogicEngine.debug(Ljava\/lang\/String;F)Ljava\/lang\/String;" {
subgraph cluster_Region_1331951718 {
label = "R(6:1|4|(1:6)|(1:9)|10|(2:(2:12|13)|(2:15|(2:(2:17|18)|(2:19|(2:21|22)(1:(2:24|25)(1:(2:28|29)(2:30|31))))))))";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0000|java.lang.String java.lang.String r0 = r9 + \" ===== \" + r8.mType + \"n\"\ljava.lang.StringBuilder java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(r0)\lr2.append(r9)\l}"];
Node_39 [shape=record,label="{39\:\ 0x002f|PHI: r3 \l  PHI: (r3v2 java.lang.String A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r2.append(r8.mBackwards ? \"backwards\" : \"forward \")\lr2.append(\" time = \")\lr2.append(r10)\lr2.append(\"  stages \")\lr2.append(r8.mNumberOfStages)\lr2.append(\"n\")\ljava.lang.String java.lang.String r0 = r2.toString()\ljava.lang.String java.lang.String r0 = r0 + r9 + \" dur \" + r8.mStage1Duration + \" vel \" + r8.mStage1Velocity + \" pos \" + r8.mStage1EndPosition + \"n\"\l}"];
subgraph cluster_IfRegion_271513774 {
label = "IF [B:40:0x007e] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x007e|if (r8.mNumberOfStages \> 1) goto L6\l}"];
subgraph cluster_Region_1270154176 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0080|java.lang.String r0 = r0 + r9 + \" dur \" + r8.mStage2Duration + \" vel \" + r8.mStage2Velocity + \" pos \" + r8.mStage2EndPosition + \"n\"\l}"];
}
}
subgraph cluster_IfRegion_240098502 {
label = "IF [B:43:0x00ad] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x00ad|if (r8.mNumberOfStages \> 2) goto L9\l}"];
subgraph cluster_Region_1070536256 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x00af|java.lang.String r0 = r0 + r9 + \" dur \" + r8.mStage3Duration + \" vel \" + r8.mStage3Velocity + \" pos \" + r8.mStage3EndPosition + \"n\"\l}"];
}
}
Node_45 [shape=record,label="{45\:\ 0x00d9|PHI: r0 \l  PHI: (r0v5 'ret' java.lang.String) = (r0v4 'ret' java.lang.String), (r0v12 'ret' java.lang.String) binds: [B:43:0x00ad, B:44:0x00af] A[DONT_GENERATE, DONT_INLINE]\l|float float r1 = r8.mStage1Duration\l}"];
subgraph cluster_Region_1892867116 {
label = "R(2:(2:12|13)|(2:15|(2:(2:17|18)|(2:19|(2:21|22)(1:(2:24|25)(1:(2:28|29)(2:30|31)))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_560698950 {
label = "IF [B:46:0x00dd] THEN: R(2:12|13) ELSE: null";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x00dd|if (r10 \<= r1) goto L12\l}"];
subgraph cluster_Region_1015558531 {
label = "R(2:12|13)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x00df}"];
Node_48 [shape=record,label="{48\:\ 0x00f3|RETURN\l|return r0 + r9 + \"stage 0n\"\l}"];
}
}
subgraph cluster_Region_360920342 {
label = "R(2:15|(2:(2:17|18)|(2:19|(2:21|22)(1:(2:24|25)(1:(2:28|29)(2:30|31))))))";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x00f4|int int r2 = r8.mNumberOfStages\l}"];
subgraph cluster_Region_983784885 {
label = "R(2:(2:17|18)|(2:19|(2:21|22)(1:(2:24|25)(1:(2:28|29)(2:30|31)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_174759347 {
label = "IF [B:50:0x00f6] THEN: R(2:17|18) ELSE: null";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x00f6|if (r2 == 1) goto L17\l}"];
subgraph cluster_Region_1828212412 {
label = "R(2:17|18)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x00f8}"];
Node_52 [shape=record,label="{52\:\ 0x010c|RETURN\l|return r0 + r9 + \"end stage 0n\"\l}"];
}
}
subgraph cluster_Region_1028866896 {
label = "R(2:19|(2:21|22)(1:(2:24|25)(1:(2:28|29)(2:30|31))))";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x010d|float float r10 = r10 \- r1\lfloat float r1 = r8.mStage2Duration\l}"];
subgraph cluster_IfRegion_1344300916 {
label = "IF [B:54:0x0112] THEN: R(2:21|22) ELSE: R(1:(2:24|25)(1:(2:28|29)(2:30|31)))";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0112|if (r10 \< r1) goto L21\l}"];
subgraph cluster_Region_734144629 {
label = "R(2:21|22)";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x0114}"];
Node_56 [shape=record,label="{56\:\ 0x0128|RETURN\l|return r0 + r9 + \" stage 1n\"\l}"];
}
subgraph cluster_Region_1571760583 {
label = "R(1:(2:24|25)(1:(2:28|29)(2:30|31))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2010051358 {
label = "IF [B:57:0x0129] THEN: R(2:24|25) ELSE: R(1:(2:28|29)(2:30|31)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0129|if (r2 == 2) goto L24\l}"];
subgraph cluster_Region_1208649166 {
label = "R(2:24|25)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x012b}"];
Node_59 [shape=record,label="{59\:\ 0x013f|RETURN\l|return r0 + r9 + \"end stage 1n\"\l}"];
}
subgraph cluster_Region_804529944 {
label = "R(1:(2:28|29)(2:30|31)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1544012771 {
label = "IF [B:61:0x0145] THEN: R(2:28|29) ELSE: R(2:30|31) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x0145|if ((r10 \- r1) \< r8.mStage3Duration) goto L28\l}"];
subgraph cluster_Region_905159013 {
label = "R(2:28|29)";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x0147}"];
Node_63 [shape=record,label="{63\:\ 0x015b|RETURN\l|return r0 + r9 + \" stage 2n\"\l}"];
}
subgraph cluster_Region_466654409 {
label = "R(2:30|31)";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x015c}"];
Node_65 [shape=record,label="{65\:\ 0x0170|RETURN\l|return r0 + r9 + \" end stage 2n\"\l}"];
}
}
}
}
}
}
}
}
}
}
}
Node_33 [shape=record,color=red,label="{33\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0028}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x002a}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x00aa|PHI: r0 \l  PHI: (r0v4 'ret' java.lang.String) = (r0v3 'ret' java.lang.String), (r0v13 'ret' java.lang.String) binds: [B:40:0x007e, B:41:0x0080] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,color=red,label="{34\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x0140}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x002d}"];
MethodNode[shape=record,label="{public java.lang.String androidx.constraintlayout.core.motion.utils.StopLogicEngine.debug((r8v0 'this' androidx.constraintlayout.core.motion.utils.StopLogicEngine A[IMMUTABLE_TYPE, THIS]), (r9v0 'desc' java.lang.String A[D('desc' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'time' float A[D('time' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:52:0x010c \-\> B:34:?, CROSS_EDGE: B:56:0x0128 \-\> B:34:?, CROSS_EDGE: B:59:0x013f \-\> B:34:?, CROSS_EDGE: B:63:0x015b \-\> B:34:?, CROSS_EDGE: B:65:0x0170 \-\> B:34:?, CROSS_EDGE: B:43:0x00ad \-\> B:45:0x00d9, CROSS_EDGE: B:40:0x007e \-\> B:42:0x00aa, CROSS_EDGE: B:38:0x002d \-\> B:39:0x002f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.StopEngine.debug(java.lang.String, float):java.lang.String]\l}"];
MethodNode -> Node_33;Node_35 -> Node_36;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_42[style=dashed];
Node_41 -> Node_42;
Node_43 -> Node_44;
Node_43 -> Node_45[style=dashed];
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_46 -> Node_49[style=dashed];
Node_47 -> Node_48;
Node_48 -> Node_34;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_50 -> Node_53[style=dashed];
Node_51 -> Node_52;
Node_52 -> Node_34;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_54 -> Node_57[style=dashed];
Node_55 -> Node_56;
Node_56 -> Node_34;
Node_57 -> Node_58;
Node_57 -> Node_60[style=dashed];
Node_58 -> Node_59;
Node_59 -> Node_34;
Node_61 -> Node_62;
Node_61 -> Node_64[style=dashed];
Node_62 -> Node_63;
Node_63 -> Node_34;
Node_64 -> Node_65;
Node_65 -> Node_34;
Node_33 -> Node_35;
Node_36 -> Node_37;
Node_36 -> Node_38;
Node_37 -> Node_39;
Node_42 -> Node_43;
Node_60 -> Node_61;
Node_38 -> Node_39;
}

