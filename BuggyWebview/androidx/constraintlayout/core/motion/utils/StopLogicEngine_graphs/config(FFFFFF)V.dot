digraph "CFG forandroidx.constraintlayout.core.motion.utils.StopLogicEngine.config(FFFFFF)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|r0 = false\lr6.mDone = false\lr6.mStartPosition = r7\l}"];
Node_14 [shape=record,label="{14\:\ 0x0007|if ((r7 \> r8 ? 1 : (r7 == r8 ? 0 : \-1)) \<= 0) goto L4\l}"];
Node_15 [shape=record,label="{15\:\ 0x0009|r0 = true\l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v0 boolean), (r0v4 boolean) binds: [B:14:0x0007, B:15:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|r6.mBackwards = r0\l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|if (r0 == false) goto L9\l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|setup(\-r9, r7 \- r8, r11, r12, r10)\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|setup(r9, r8 \- r7, r11, r12, r10)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0023|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.motion.utils.StopLogicEngine.config((r6v0 'this' androidx.constraintlayout.core.motion.utils.StopLogicEngine A[IMMUTABLE_TYPE, THIS]), (r7v0 'currentPos' float A[D('currentPos' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'destination' float A[D('destination' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'currentVelocity' float A[D('currentVelocity' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'maxTime' float A[D('maxTime' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'maxAcceleration' float A[D('maxAcceleration' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'maxVelocity' float A[D('maxVelocity' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0019 \-\> B:20:0x0023, CROSS_EDGE: B:14:0x0007 \-\> B:16:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_21;
Node_21 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
}

