digraph "CFG forandroidx.constraintlayout.core.state.ConstraintReference.margin(Ljava\/lang\/Object;)Landroidx\/constraintlayout\/core\/state\/ConstraintReference;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:androidx.constraintlayout.core.state.State) = (r1 I:androidx.constraintlayout.core.state.ConstraintReference) androidx.constraintlayout.core.state.ConstraintReference.mState androidx.constraintlayout.core.state.State  (LINE:578)\l0x0002: INVOKE  (r0 I:int) = (r0 I:androidx.constraintlayout.core.state.State), (r2 I:java.lang.Object A[D('marginValue' java.lang.Object)]) type: VIRTUAL call: androidx.constraintlayout.core.state.State.convertDimension(java.lang.Object):int A[MD:(java.lang.Object):int (m)]\l0x0006: INVOKE  (r0 I:androidx.constraintlayout.core.state.ConstraintReference) = (r1 I:androidx.constraintlayout.core.state.ConstraintReference), (r0 I:int) type: VIRTUAL call: androidx.constraintlayout.core.state.ConstraintReference.margin(int):androidx.constraintlayout.core.state.ConstraintReference A[MD:(int):androidx.constraintlayout.core.state.ConstraintReference (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:androidx.constraintlayout.core.state.ConstraintReference) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.constraintlayout.core.state.ConstraintReference androidx.constraintlayout.core.state.ConstraintReference.margin((r1 'this' I:androidx.constraintlayout.core.state.ConstraintReference A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Object A[D('marginValue' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000a: r2 'marginValue' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.state.ConstraintReference.margin(java.lang.Object):androidx.constraintlayout.core.state.ConstraintReference]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

