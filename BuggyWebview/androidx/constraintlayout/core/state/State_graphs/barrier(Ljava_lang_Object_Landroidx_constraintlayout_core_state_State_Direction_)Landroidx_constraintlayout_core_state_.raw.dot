digraph "CFG forandroidx.constraintlayout.core.state.State.barrier(Ljava\/lang\/Object;Landroidx\/constraintlayout\/core\/state\/State$Direction;)Landroidx\/constraintlayout\/core\/state\/helpers\/BarrierReference;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: INVOKE  (r0 I:androidx.constraintlayout.core.state.ConstraintReference) = (r2 I:androidx.constraintlayout.core.state.State), (r3 I:java.lang.Object A[D('key' java.lang.Object)]) type: VIRTUAL call: androidx.constraintlayout.core.state.State.constraints(java.lang.Object):androidx.constraintlayout.core.state.ConstraintReference A[MD:(java.lang.Object):androidx.constraintlayout.core.state.ConstraintReference (m)] (LINE:233)\l0x0004: INVOKE  (r1 I:androidx.constraintlayout.core.state.helpers.Facade) = \l  (r0 I:androidx.constraintlayout.core.state.ConstraintReference A[D('reference' androidx.constraintlayout.core.state.ConstraintReference)])\l type: VIRTUAL call: androidx.constraintlayout.core.state.ConstraintReference.getFacade():androidx.constraintlayout.core.state.helpers.Facade A[MD:():androidx.constraintlayout.core.state.helpers.Facade (m)] (LINE:234)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0012 \l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|0x000a: INVOKE  (r1 I:androidx.constraintlayout.core.state.helpers.Facade) = \l  (r0 I:androidx.constraintlayout.core.state.ConstraintReference A[D('reference' androidx.constraintlayout.core.state.ConstraintReference)])\l type: VIRTUAL call: androidx.constraintlayout.core.state.ConstraintReference.getFacade():androidx.constraintlayout.core.state.helpers.Facade A[MD:():androidx.constraintlayout.core.state.helpers.Facade (m)]\l0x000e: INSTANCE_OF  (r1 I:boolean) = (r1 I:??[OBJECT, ARRAY]) androidx.constraintlayout.core.state.helpers.BarrierReference \l}"];
Node_14 [shape=record,label="{14\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x001d \l}"];
Node_16 [shape=record,label="{16\:\ 0x001d|0x001d: INVOKE  (r1 I:androidx.constraintlayout.core.state.helpers.Facade) = \l  (r0 I:androidx.constraintlayout.core.state.ConstraintReference A[D('reference' androidx.constraintlayout.core.state.ConstraintReference)])\l type: VIRTUAL call: androidx.constraintlayout.core.state.ConstraintReference.getFacade():androidx.constraintlayout.core.state.helpers.Facade A[MD:():androidx.constraintlayout.core.state.helpers.Facade (m)] (LINE:239)\l0x0021: CHECK_CAST (r1 I:androidx.constraintlayout.core.state.helpers.BarrierReference) = (androidx.constraintlayout.core.state.helpers.BarrierReference) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0023|RETURN\l|0x0023: RETURN  (r1 I:androidx.constraintlayout.core.state.helpers.BarrierReference) \l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0012|0x0012: NEW_INSTANCE  (r1 I:androidx.constraintlayout.core.state.helpers.BarrierReference) =  androidx.constraintlayout.core.state.helpers.BarrierReference  (LINE:235)\l0x0014: INVOKE  (r1 I:androidx.constraintlayout.core.state.helpers.BarrierReference), (r2 I:androidx.constraintlayout.core.state.State) type: DIRECT call: androidx.constraintlayout.core.state.helpers.BarrierReference.\<init\>(androidx.constraintlayout.core.state.State):void A[MD:(androidx.constraintlayout.core.state.State):void (m)]\l0x0017: INVOKE  \l  (r1 I:androidx.constraintlayout.core.state.helpers.BarrierReference A[D('barrierReference' androidx.constraintlayout.core.state.helpers.BarrierReference)])\l  (r4 I:androidx.constraintlayout.core.state.State$Direction A[D('direction' androidx.constraintlayout.core.state.State$Direction)])\l type: VIRTUAL call: androidx.constraintlayout.core.state.helpers.BarrierReference.setBarrierDirection(androidx.constraintlayout.core.state.State$Direction):void A[MD:(androidx.constraintlayout.core.state.State$Direction):void (m)] (LINE:236)\l0x001a: INVOKE  \l  (r0 I:androidx.constraintlayout.core.state.ConstraintReference A[D('reference' androidx.constraintlayout.core.state.ConstraintReference)])\l  (r1 I:androidx.constraintlayout.core.state.helpers.Facade A[D('barrierReference' androidx.constraintlayout.core.state.helpers.BarrierReference)])\l type: VIRTUAL call: androidx.constraintlayout.core.state.ConstraintReference.setFacade(androidx.constraintlayout.core.state.helpers.Facade):void A[MD:(androidx.constraintlayout.core.state.helpers.Facade):void (m)] (LINE:237)\l}"];
MethodNode[shape=record,label="{public androidx.constraintlayout.core.state.helpers.BarrierReference androidx.constraintlayout.core.state.State.barrier((r2 'this' I:androidx.constraintlayout.core.state.State A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[D('key' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:androidx.constraintlayout.core.state.State$Direction A[D('direction' androidx.constraintlayout.core.state.State$Direction), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x0010 \-\> B:16:0x001d, CROSS_EDGE: B:12:0x0008 \-\> B:15:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0017\-0x001d: r1 'barrierReference' Landroidx\/constraintlayout\/core\/state\/helpers\/BarrierReference;\l  0x0004\-0x0023: r0 'reference' Landroidx\/constraintlayout\/core\/state\/ConstraintReference;\l  \-1 \-0x0023: r3 'key' Ljava\/lang\/Object;\l  \-1 \-0x0023: r4 'direction' Landroidx\/constraintlayout\/core\/state\/State$Direction;\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_10;
Node_15 -> Node_16;
}

