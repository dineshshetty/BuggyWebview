digraph "CFG forandroidx.constraintlayout.core.state.State.helper(Ljava\/lang\/Object;Landroidx\/constraintlayout\/core\/state\/State$Helper;)Landroidx\/constraintlayout\/core\/state\/HelperReference;" {
subgraph cluster_Region_520121481 {
label = "R(4:(1:2)|3|(2:6|8)|14)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_513044043 {
label = "IF [B:18:0x0000] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0000|if (r4 == null) goto L2\l}"];
subgraph cluster_Region_359510996 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0002|java.lang.String r4 = createHelperKey()\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x0006|PHI: r4 \l  PHI: (r4v1 'key' java.lang.Object) = (r4v0 'key' java.lang.Object), (r4v2 'key' java.lang.Object) binds: [B:18:0x0000, B:19:0x0002] A[DONT_GENERATE, DONT_INLINE]\l|androidx.constraintlayout.core.state.HelperReference androidx.constraintlayout.core.state.HelperReference r0 = r3.mHelperReferences.get(r4)\l}"];
subgraph cluster_IfRegion_1952310110 {
label = "IF [B:21:0x000e] THEN: R(2:6|8) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x000e|if (r0 == null) goto L5\l}"];
subgraph cluster_Region_1537906450 {
label = "R(2:6|8)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_664535079 {
label = "Switch: 6
 case 1 -> R(2:13|1)
 case 2 -> R(2:12|1)
 case 3 -> R(2:11|1)
 case 4 -> R(2:10|1)
 case 5 -> R(2:9|1)
 case default -> R(2:7|1)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0018|switch(androidx.constraintlayout.core.state.State.C01351.$SwitchMap$androidx$constraintlayout$core$state$State$Helper[r5.ordinal()]) \{\l    case 1: goto L13;\l    case 2: goto L12;\l    case 3: goto L11;\l    case 4: goto L10;\l    case 5: goto L9;\l    default: goto L7;\l\}\l}"];
subgraph cluster_Region_76672273 {
label = "R(2:13|1)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x003e|r0 = new androidx.constraintlayout.core.state.helpers.HorizontalChainReference(r3)\l}"];
Node_InsnContainer_1630934416 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_838435703 {
label = "R(2:12|1)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0037|r0 = new androidx.constraintlayout.core.state.helpers.VerticalChainReference(r3)\l}"];
Node_InsnContainer_1559087563 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1869862694 {
label = "R(2:11|1)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0030|r0 = new androidx.constraintlayout.core.state.helpers.AlignHorizontallyReference(r3)\l}"];
Node_InsnContainer_610673297 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1938524773 {
label = "R(2:10|1)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0029|r0 = new androidx.constraintlayout.core.state.helpers.AlignVerticallyReference(r3)\l}"];
Node_InsnContainer_1664910082 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_2021202016 {
label = "R(2:9|1)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0022|r0 = new androidx.constraintlayout.core.state.helpers.BarrierReference(r3)\l}"];
Node_InsnContainer_846696544 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_99012131 {
label = "R(2:7|1)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x001b|r0 = new androidx.constraintlayout.core.state.HelperReference(r3, r5)\l}"];
Node_InsnContainer_15115380 [shape=record,label="{|break\l}"];
}
}
Node_30 [shape=record,label="{30\:\ 0x0045|PHI: r0 \l  PHI: (r0v9 'reference' androidx.constraintlayout.core.state.HelperReference) = (r0v4 'reference' androidx.constraintlayout.core.state.HelperReference), (r0v5 'reference' androidx.constraintlayout.core.state.HelperReference), (r0v6 'reference' androidx.constraintlayout.core.state.HelperReference), (r0v7 'reference' androidx.constraintlayout.core.state.HelperReference), (r0v8 'reference' androidx.constraintlayout.core.state.HelperReference), (r0v10 'reference' androidx.constraintlayout.core.state.HelperReference) binds: [B:29:0x003e, B:28:0x0037, B:27:0x0030, B:26:0x0029, B:25:0x0022, B:24:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|r0.setKey(r4)\lr3.mHelperReferences.put(r4, r0)\l}"];
}
}
Node_31 [shape=record,label="{31\:\ 0x004d|RETURN\lPHI: r0 \l  PHI: (r0v3 'reference' androidx.constraintlayout.core.state.HelperReference) = (r0v2 'reference' androidx.constraintlayout.core.state.HelperReference), (r0v9 'reference' androidx.constraintlayout.core.state.HelperReference) binds: [B:21:0x000e, B:30:0x0045] A[DONT_GENERATE, DONT_INLINE]\l|return r0\l}"];
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0010}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.constraintlayout.core.state.HelperReference androidx.constraintlayout.core.state.State.helper((r3v0 'this' androidx.constraintlayout.core.state.State A[IMMUTABLE_TYPE, THIS]), (r4v0 'key' java.lang.Object A[D('key' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'type' androidx.constraintlayout.core.state.State$Helper A[D('type' androidx.constraintlayout.core.state.State$Helper), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0022 \-\> B:30:0x0045, CROSS_EDGE: B:26:0x0029 \-\> B:30:0x0045, CROSS_EDGE: B:27:0x0030 \-\> B:30:0x0045, CROSS_EDGE: B:28:0x0037 \-\> B:30:0x0045, CROSS_EDGE: B:29:0x003e \-\> B:30:0x0045, CROSS_EDGE: B:21:0x000e \-\> B:31:0x004d, CROSS_EDGE: B:18:0x0000 \-\> B:20:0x0006\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_31[style=dashed];
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_23 -> Node_26;
Node_23 -> Node_27;
Node_23 -> Node_28;
Node_23 -> Node_29;
Node_29 -> Node_30;
Node_28 -> Node_30;
Node_27 -> Node_30;
Node_26 -> Node_30;
Node_25 -> Node_30;
Node_24 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_17;
Node_16 -> Node_18;
Node_22 -> Node_23;
}

