digraph "CFG forandroidx.constraintlayout.core.state.Dimension.equalsFixedValue(I)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object) = (r1 I:androidx.constraintlayout.core.state.Dimension) androidx.constraintlayout.core.state.Dimension.mInitialValue java.lang.Object  (LINE:53)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: IGET  (r0 I:int) = (r1 I:androidx.constraintlayout.core.state.Dimension) androidx.constraintlayout.core.state.Dimension.mValue int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' int)])  \-\> B:10:? \l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|RETURN\l|0x0008: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:55)\l0x0009: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:57)\l0x000b: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_8 [shape=record,label="{8\:\ 0x000a|RETURN\lORIG_RETURN\l|0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:57)\l0x000b: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.core.state.Dimension.equalsFixedValue((r1 'this' I:androidx.constraintlayout.core.state.Dimension A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('value' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x000b \-\> B:1:?, CROSS_EDGE: B:3:0x0002 \-\> B:8:0x000a\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000b: r2 'value' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_1;
Node_10 -> Node_1;
Node_8 -> Node_1;
}

