digraph "CFG forandroidx.constraintlayout.core.LinearSystem.minimizeGoal(Landroidx\/constraintlayout\/core\/LinearSystem$Row;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: SGET  (r0 I:androidx.constraintlayout.core.Metrics) =  androidx.constraintlayout.core.LinearSystem.sMetrics androidx.constraintlayout.core.Metrics  (LINE:494)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0025 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IGET  (r1 I:long) = (r0 I:androidx.constraintlayout.core.Metrics) androidx.constraintlayout.core.Metrics.minimizeGoal long  (LINE:495)\l0x0006: CONST  (r3 I:??[long, double]) = (1 ??[long, double]) \l0x0008: ARITH  (r1 I:long) = (r1 I:long) + (r3 I:long) \l0x0009: IPUT  (r1 I:long), (r0 I:androidx.constraintlayout.core.Metrics) androidx.constraintlayout.core.Metrics.minimizeGoal long \l0x000b: SGET  (r0 I:androidx.constraintlayout.core.Metrics) =  androidx.constraintlayout.core.LinearSystem.sMetrics androidx.constraintlayout.core.Metrics  (LINE:496)\l0x000d: IGET  (r1 I:long) = (r0 I:androidx.constraintlayout.core.Metrics) androidx.constraintlayout.core.Metrics.maxVariables long \l0x000f: IGET  (r3 I:int) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mNumColumns int \l0x0011: CAST (r3 I:long) = (long) (r3 I:int) \l0x0012: INVOKE  (r1 I:long) = (r1 I:long), (r3 I:long) type: STATIC call: java.lang.Math.max(long, long):long A[MD:(long, long):long (c)]\l0x0016: IPUT  (r1 I:long), (r0 I:androidx.constraintlayout.core.Metrics) androidx.constraintlayout.core.Metrics.maxVariables long \l0x0018: SGET  (r0 I:androidx.constraintlayout.core.Metrics) =  androidx.constraintlayout.core.LinearSystem.sMetrics androidx.constraintlayout.core.Metrics  (LINE:497)\l0x001a: IGET  (r1 I:long) = (r0 I:androidx.constraintlayout.core.Metrics) androidx.constraintlayout.core.Metrics.maxRows long \l0x001c: IGET  (r3 I:int) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mNumRows int \l0x001e: CAST (r3 I:long) = (long) (r3 I:int) \l0x001f: INVOKE  (r1 I:long) = (r1 I:long), (r3 I:long) type: STATIC call: java.lang.Math.max(long, long):long A[MD:(long, long):long (c)]\l0x0023: IPUT  (r1 I:long), (r0 I:androidx.constraintlayout.core.Metrics) androidx.constraintlayout.core.Metrics.maxRows long \l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: INVOKE  \l  (r5 I:androidx.constraintlayout.core.LinearSystem)\l  (r6 I:androidx.constraintlayout.core.LinearSystem$Row A[D('goal' androidx.constraintlayout.core.LinearSystem$Row)])\l type: DIRECT call: androidx.constraintlayout.core.LinearSystem.enforceBFS(androidx.constraintlayout.core.LinearSystem$Row):int A[MD:(androidx.constraintlayout.core.LinearSystem$Row):int throws java.lang.Exception (m)] (LINE:509)\l0x0028: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:514)\l0x0029: INVOKE  \l  (r5 I:androidx.constraintlayout.core.LinearSystem)\l  (r6 I:androidx.constraintlayout.core.LinearSystem$Row A[D('goal' androidx.constraintlayout.core.LinearSystem$Row)])\l  (r0 I:boolean)\l type: DIRECT call: androidx.constraintlayout.core.LinearSystem.optimize(androidx.constraintlayout.core.LinearSystem$Row, boolean):int A[MD:(androidx.constraintlayout.core.LinearSystem$Row, boolean):int (m)]\l0x002c: INVOKE  (r5 I:androidx.constraintlayout.core.LinearSystem) type: DIRECT call: androidx.constraintlayout.core.LinearSystem.computeValues():void A[MD:():void (m)] (LINE:519)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|RETURN\l|0x002f: RETURN    (LINE:520)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.core.LinearSystem.minimizeGoal((r5 'this' I:androidx.constraintlayout.core.LinearSystem A[IMMUTABLE_TYPE, THIS]), (r6 I:androidx.constraintlayout.core.LinearSystem$Row A[D('goal' androidx.constraintlayout.core.LinearSystem$Row), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0002 \-\> B:12:0x0025\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002f: r6 'goal' Landroidx\/constraintlayout\/core\/LinearSystem$Row;\lEXCEPTIONS:[Ljava\/lang\/Exception;]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

