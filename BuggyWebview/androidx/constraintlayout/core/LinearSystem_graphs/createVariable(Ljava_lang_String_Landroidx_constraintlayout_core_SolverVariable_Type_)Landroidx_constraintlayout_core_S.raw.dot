digraph "CFG forandroidx.constraintlayout.core.LinearSystem.createVariable(Ljava\/lang\/String;Landroidx\/constraintlayout\/core\/SolverVariable$Type;)Landroidx\/constraintlayout\/core\/SolverVariable;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: SGET  (r0 I:androidx.constraintlayout.core.Metrics) =  androidx.constraintlayout.core.LinearSystem.sMetrics androidx.constraintlayout.core.Metrics  (LINE:328)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000b \l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IGET  (r1 I:long) = (r0 I:androidx.constraintlayout.core.Metrics) androidx.constraintlayout.core.Metrics.variables long  (LINE:329)\l0x0006: CONST  (r3 I:??[long, double]) = (1 ??[long, double]) \l0x0008: ARITH  (r1 I:long) = (r1 I:long) + (r3 I:long) \l0x0009: IPUT  (r1 I:long), (r0 I:androidx.constraintlayout.core.Metrics) androidx.constraintlayout.core.Metrics.variables long \l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: IGET  (r0 I:int) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mNumColumns int  (LINE:331)\l0x000d: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x000f: IGET  (r1 I:int) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mMaxColumns int \l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|0x0011: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:21:0x0016 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|0x0013: INVOKE  (r5 I:androidx.constraintlayout.core.LinearSystem) type: DIRECT call: androidx.constraintlayout.core.LinearSystem.increaseTableSize():void A[MD:():void (m)] (LINE:332)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|0x0016: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:334)\l0x0017: INVOKE  (r0 I:androidx.constraintlayout.core.SolverVariable) = \l  (r5 I:androidx.constraintlayout.core.LinearSystem)\l  (r7 I:androidx.constraintlayout.core.SolverVariable$Type A[D('type' androidx.constraintlayout.core.SolverVariable$Type)])\l  (r0 I:java.lang.String)\l type: DIRECT call: androidx.constraintlayout.core.LinearSystem.acquireSolverVariable(androidx.constraintlayout.core.SolverVariable$Type, java.lang.String):androidx.constraintlayout.core.SolverVariable A[MD:(androidx.constraintlayout.core.SolverVariable$Type, java.lang.String):androidx.constraintlayout.core.SolverVariable (m)]\l0x001b: INVOKE  \l  (r0 I:androidx.constraintlayout.core.SolverVariable A[D('variable' androidx.constraintlayout.core.SolverVariable)])\l  (r6 I:java.lang.String A[D('name' java.lang.String)])\l type: VIRTUAL call: androidx.constraintlayout.core.SolverVariable.setName(java.lang.String):void A[MD:(java.lang.String):void (m)] (LINE:335)\l0x001e: IGET  (r1 I:int) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mVariablesID int  (LINE:336)\l0x0020: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0022: IPUT  (r1 I:int), (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mVariablesID int \l0x0024: IGET  (r2 I:int) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mNumColumns int  (LINE:337)\l0x0026: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0028: IPUT  (r2 I:int), (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mNumColumns int \l0x002a: IPUT  \l  (r1 I:int)\l  (r0 I:androidx.constraintlayout.core.SolverVariable A[D('variable' androidx.constraintlayout.core.SolverVariable)])\l androidx.constraintlayout.core.SolverVariable.id int  (LINE:338)\l0x002c: IGET  (r1 I:java.util.HashMap\<java.lang.String, androidx.constraintlayout.core.SolverVariable\>) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mVariables java.util.HashMap  (LINE:339)\l}"];
Node_22 [shape=record,label="{22\:\ 0x002e|0x002e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0037 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0030|0x0030: NEW_INSTANCE  (r1 I:java.util.HashMap) =  java.util.HashMap  (LINE:340)\l0x0032: INVOKE  (r1 I:java.util.HashMap) type: DIRECT call: java.util.HashMap.\<init\>():void A[MD:():void (c)]\l0x0035: IPUT  \l  (r1 I:java.util.HashMap\<java.lang.String, androidx.constraintlayout.core.SolverVariable\>)\l  (r5 I:androidx.constraintlayout.core.LinearSystem)\l androidx.constraintlayout.core.LinearSystem.mVariables java.util.HashMap \l}"];
Node_24 [shape=record,label="{24\:\ 0x0037|0x0037: IGET  (r1 I:java.util.HashMap\<java.lang.String, androidx.constraintlayout.core.SolverVariable\>) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mVariables java.util.HashMap  (LINE:342)\l0x0039: INVOKE  \l  (r1 I:java.util.HashMap)\l  (r6 I:java.lang.Object A[D('name' java.lang.String)])\l  (r0 I:java.lang.Object A[D('variable' androidx.constraintlayout.core.SolverVariable)])\l type: VIRTUAL call: java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l0x003c: IGET  (r1 I:androidx.constraintlayout.core.Cache) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mCache androidx.constraintlayout.core.Cache  (LINE:343)\l0x003e: IGET  (r1 I:androidx.constraintlayout.core.SolverVariable[]) = (r1 I:androidx.constraintlayout.core.Cache) androidx.constraintlayout.core.Cache.mIndexedVariables androidx.constraintlayout.core.SolverVariable[] \l0x0040: IGET  (r2 I:int) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mVariablesID int \l0x0042: APUT  \l  (r1 I:??[OBJECT, ARRAY][])\l  (r2 I:??[int, short, byte, char])\l  (r0 I:??[OBJECT, ARRAY] A[D('variable' androidx.constraintlayout.core.SolverVariable)])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x0044|RETURN\l|0x0044: RETURN  (r0 I:androidx.constraintlayout.core.SolverVariable A[D('variable' androidx.constraintlayout.core.SolverVariable)])  (LINE:344)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private androidx.constraintlayout.core.SolverVariable androidx.constraintlayout.core.LinearSystem.createVariable((r5 'this' I:androidx.constraintlayout.core.LinearSystem A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:androidx.constraintlayout.core.SolverVariable$Type A[D('type' androidx.constraintlayout.core.SolverVariable$Type), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x002e \-\> B:24:0x0037, CROSS_EDGE: B:19:0x0011 \-\> B:21:0x0016, CROSS_EDGE: B:16:0x0002 \-\> B:18:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x0044: r0 'variable' Landroidx\/constraintlayout\/core\/SolverVariable;\l  \-1 \-0x0044: r6 'name' Ljava\/lang\/String;\l  \-1 \-0x0044: r7 'type' Landroidx\/constraintlayout\/core\/SolverVariable$Type;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

