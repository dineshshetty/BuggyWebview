digraph "CFG forandroidx.constraintlayout.core.LinearSystem.createSlackVariable()Landroidx\/constraintlayout\/core\/SolverVariable;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|androidx.constraintlayout.core.Metrics r0 = androidx.constraintlayout.core.LinearSystem.sMetrics\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|if (r0 == null) goto L4\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|r0.slackvariables = r0.slackvariables + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x000b}"];
Node_16 [shape=record,label="{16\:\ 0x0011|if ((r5.mNumColumns + 1) \< r5.mMaxColumns) goto L7\l}"];
Node_17 [shape=record,label="{17\:\ 0x0013|increaseTableSize()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0016|androidx.constraintlayout.core.SolverVariable r0 = acquireSolverVariable(androidx.constraintlayout.core.SolverVariable.Type.SLACK, null)\lint r1 = r5.mVariablesID + 1\lr5.mVariablesID = r1\lr5.mNumColumns = r5.mNumColumns + 1\lr0.f13id = r1\lr5.mCache.mIndexedVariables[r5.mVariablesID] = r0\l}"];
Node_19 [shape=record,label="{19\:\ 0x0033|RETURN\l|return r0\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.constraintlayout.core.SolverVariable androidx.constraintlayout.core.LinearSystem.createSlackVariable((r5v0 'this' androidx.constraintlayout.core.LinearSystem A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0011 \-\> B:18:0x0016, CROSS_EDGE: B:13:0x0002 \-\> B:15:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

