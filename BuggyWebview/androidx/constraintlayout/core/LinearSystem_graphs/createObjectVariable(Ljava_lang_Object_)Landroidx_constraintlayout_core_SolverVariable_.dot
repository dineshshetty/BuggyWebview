digraph "CFG forandroidx.constraintlayout.core.LinearSystem.createObjectVariable(Ljava\/lang\/Object;)Landroidx\/constraintlayout\/core\/SolverVariable;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|if (r5 != null) goto L4\l}"];
Node_27 [shape=record,label="{27\:\ 0x0002|RETURN\l|return null\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0004}"];
Node_30 [shape=record,label="{30\:\ 0x000a|if ((r4.mNumColumns + 1) \< r4.mMaxColumns) goto L7\l}"];
Node_31 [shape=record,label="{31\:\ 0x000c|increaseTableSize()\l}"];
Node_32 [shape=record,label="{32\:\ 0x000f|r0 = null\l}"];
Node_33 [shape=record,label="{33\:\ 0x0012|if ((r5 instanceof androidx.constraintlayout.core.widgets.ConstraintAnchor) == false) goto L22\l}"];
Node_34 [shape=record,label="{34\:\ 0x0014|androidx.constraintlayout.core.SolverVariable r0 = ((androidx.constraintlayout.core.widgets.ConstraintAnchor) r5).getSolverVariable()\l}"];
Node_35 [shape=record,label="{35\:\ 0x001b|if (r0 != null) goto L12\l}"];
Node_36 [shape=record,label="{36\:\ 0x001d|((androidx.constraintlayout.core.widgets.ConstraintAnchor) r5).resetSolverVariable(r4.mCache)\landroidx.constraintlayout.core.SolverVariable r0 = ((androidx.constraintlayout.core.widgets.ConstraintAnchor) r5).getSolverVariable()\l}"];
Node_37 [shape=record,label="{37\:\ 0x002c|PHI: r0 \l  PHI: (r0v5 'variable' androidx.constraintlayout.core.SolverVariable) = (r0v4 'variable' androidx.constraintlayout.core.SolverVariable), (r0v6 'variable' androidx.constraintlayout.core.SolverVariable) binds: [B:35:0x001b, B:36:0x001d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_38 [shape=record,label="{38\:\ 0x002f|if (r0.f13id == (\-1)) goto L18\l}"];
Node_39 [shape=record,label="{39\:\ 0x0031}"];
Node_40 [shape=record,label="{40\:\ 0x0035|if (r0.f13id \> r4.mVariablesID) goto L18\l}"];
Node_41 [shape=record,label="{41\:\ 0x0037}"];
Node_42 [shape=record,label="{42\:\ 0x003f|if (r4.mCache.mIndexedVariables[r0.f13id] != null) goto L22\l}"];
Node_43 [shape=record,label="{43\:\ 0x0041}"];
Node_44 [shape=record,label="{44\:\ 0x0043|if (r0.f13id == (\-1)) goto L21\l}"];
Node_45 [shape=record,label="{45\:\ 0x0045|r0.reset()\l}"];
Node_46 [shape=record,label="{46\:\ 0x0048|int r1 = r4.mVariablesID + 1\lr4.mVariablesID = r1\lr4.mNumColumns = r4.mNumColumns + 1\lr0.f13id = r1\lr0.mType = androidx.constraintlayout.core.SolverVariable.Type.UNRESTRICTED\lr4.mCache.mIndexedVariables[r4.mVariablesID] = r0\l}"];
Node_47 [shape=record,label="{47\:\ 0x0062|RETURN\lPHI: r0 \l  PHI: (r0v3 'variable' androidx.constraintlayout.core.SolverVariable) = (r0v2 'variable' androidx.constraintlayout.core.SolverVariable), (r0v5 'variable' androidx.constraintlayout.core.SolverVariable), (r0v5 'variable' androidx.constraintlayout.core.SolverVariable) binds: [B:33:0x0012, B:46:0x0048, B:42:0x003f] A[DONT_GENERATE, DONT_INLINE]\l|return r0\l}"];
MethodNode[shape=record,label="{public androidx.constraintlayout.core.SolverVariable androidx.constraintlayout.core.LinearSystem.createObjectVariable((r4v0 'this' androidx.constraintlayout.core.LinearSystem A[IMMUTABLE_TYPE, THIS]), (r5v0 'anchor' java.lang.Object A[D('anchor' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:47:0x0062 \-\> B:25:?, CROSS_EDGE: B:44:0x0043 \-\> B:46:0x0048, CROSS_EDGE: B:42:0x003f \-\> B:47:0x0062, CROSS_EDGE: B:40:0x0035 \-\> B:43:0x0041, CROSS_EDGE: B:38:0x002f \-\> B:43:0x0041, CROSS_EDGE: B:35:0x001b \-\> B:37:0x002c, CROSS_EDGE: B:33:0x0012 \-\> B:47:0x0062, CROSS_EDGE: B:30:0x000a \-\> B:32:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_25;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_47;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_43;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_47;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_25;
}

