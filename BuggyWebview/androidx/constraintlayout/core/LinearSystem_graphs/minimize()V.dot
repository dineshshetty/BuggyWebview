digraph "CFG forandroidx.constraintlayout.core.LinearSystem.minimize()V" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|androidx.constraintlayout.core.Metrics r0 = androidx.constraintlayout.core.LinearSystem.sMetrics\l}"];
Node_40 [shape=record,label="{40\:\ 0x0004|if (r0 == null) goto L4\l}"];
Node_41 [shape=record,label="{41\:\ 0x0006|r0.minimize = r0.minimize + 1\l}"];
Node_42 [shape=record,label="{42\:\ 0x000b}"];
Node_43 [shape=record,label="{43\:\ 0x0011|if (r6.mGoal.isEmpty() == false) goto L9\l}"];
Node_44 [shape=record,label="{44\:\ 0x0013|computeValues()\l}"];
Node_45 [shape=record,label="{45\:\ 0x0016|RETURN\l|return\l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x0017}"];
Node_47 [shape=record,label="{47\:\ 0x0019|if (r6.graphOptimizer != false) goto L15\l}"];
Node_48 [shape=record,label="{48\:\ 0x001b}"];
Node_49 [shape=record,label="{49\:\ 0x001d|if (r6.newgraphOptimizer == false) goto L13\l}"];
Node_51 [shape=record,label="{51\:\ 0x0020|minimizeGoal(r6.mGoal)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0057|RETURN\lORIG_RETURN\l|return\l}"];
Node_52 [shape=record,label="{52\:\ 0x0026|androidx.constraintlayout.core.Metrics r0 = androidx.constraintlayout.core.LinearSystem.sMetrics\l}"];
Node_53 [shape=record,label="{53\:\ 0x0028|if (r0 == null) goto L18\l}"];
Node_54 [shape=record,label="{54\:\ 0x002a|r0.graphOptimizer = r0.graphOptimizer + 1\l}"];
Node_55 [shape=record,label="{55\:\ 0x002f|r0 = true\lr3 = 0\l}"];
Node_56 [shape=record,label="{56\:\ 0x0031|LOOP_START\lLOOP:0: B:56:0x0031\-\>B:61:0x003f\lPHI: r3 \l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v3 'i' int) binds: [B:55:0x002f, B:61:0x003f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0033|if (r3 \>= r6.mNumRows) goto L34\l}"];
Node_58 [shape=record,label="{58\:\ 0x0035|r4 = r6.mRows[r3]\l}"];
Node_59 [shape=record,label="{59\:\ 0x003b|if (r4.isSimpleDefinition != false) goto L23\l}"];
Node_61 [shape=record,label="{61\:\ 0x003f|LOOP_END\lLOOP:0: B:56:0x0031\-\>B:61:0x003f\l|int r3 = r3 + 1\l}"];
Node_71 [shape=record,label="{71\:\ 0x003d|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x003d|r0 = false\l}"];
Node_62 [shape=record,label="{62\:\ 0x0042|PHI: r0 \l  PHI: (r0v6 'fullySolved' boolean) = (r0v5 'fullySolved' boolean), (r0v7 'fullySolved' boolean) binds: [B:70:0x0042, B:60:0x003d] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != false) goto L29\l}"];
Node_63 [shape=record,label="{63\:\ 0x0044|minimizeGoal(r6.mGoal)\l}"];
Node_73 [shape=record,label="{73\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_64 [shape=record,label="{64\:\ 0x004a|androidx.constraintlayout.core.Metrics r3 = androidx.constraintlayout.core.LinearSystem.sMetrics\l}"];
Node_65 [shape=record,label="{65\:\ 0x004c|if (r3 == null) goto L32\l}"];
Node_66 [shape=record,label="{66\:\ 0x004e|r3.fullySolved = r3.fullySolved + 1\l}"];
Node_67 [shape=record,label="{67\:\ 0x0053|computeValues()\l}"];
Node_72 [shape=record,label="{72\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_70 [shape=record,label="{70\:\ 0x0042|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.LinearSystem.minimize((r6v0 'this' androidx.constraintlayout.core.LinearSystem A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:69:0x0057 \-\> B:38:?, CROSS_EDGE: B:63:0x0044 \-\> B:69:0x0057, CROSS_EDGE: B:67:0x0053 \-\> B:69:0x0057, CROSS_EDGE: B:65:0x004c \-\> B:67:0x0053, BACK_EDGE: B:61:0x003f \-\> B:56:0x0031, CROSS_EDGE: B:57:0x0033 \-\> B:62:0x0042, CROSS_EDGE: B:53:0x0028 \-\> B:55:0x002f, CROSS_EDGE: B:47:0x0019 \-\> B:52:0x0026, CROSS_EDGE: B:40:0x0004 \-\> B:42:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Ljava\/lang\/Exception;]\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_46;
Node_44 -> Node_45;
Node_45 -> Node_38;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_52;
Node_48 -> Node_49;
Node_49 -> Node_51;
Node_49 -> Node_52[style=dashed];
Node_51 -> Node_69;
Node_69 -> Node_38;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_70;
Node_58 -> Node_59;
Node_59 -> Node_61;
Node_59 -> Node_71[style=dashed];
Node_61 -> Node_56;
Node_71 -> Node_60;
Node_60 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_73;
Node_73 -> Node_38;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_67;
Node_66 -> Node_67;
Node_67 -> Node_72;
Node_72 -> Node_38;
Node_70 -> Node_62;
}

