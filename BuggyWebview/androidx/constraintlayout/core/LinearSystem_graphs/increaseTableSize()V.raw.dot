digraph "CFG forandroidx.constraintlayout.core.LinearSystem.increaseTableSize()V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.TABLE_SIZE int  (LINE:140)\l0x0002: ARITH  (r0 I:int) = (r0 I:int) * (2 int) \l0x0004: IPUT  (r0 I:int), (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.TABLE_SIZE int \l0x0006: IGET  (r1 I:androidx.constraintlayout.core.ArrayRow[]) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mRows androidx.constraintlayout.core.ArrayRow[]  (LINE:141)\l0x0008: INVOKE  (r0 I:java.lang.Object[]) = (r1 I:java.lang.Object[]), (r0 I:int) type: STATIC call: java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] A[MD:\<T\>:(T[], int):T[] (c)]\l0x000c: CHECK_CAST (r0 I:androidx.constraintlayout.core.ArrayRow[]) = (androidx.constraintlayout.core.ArrayRow[]) (r0 I:??[OBJECT, ARRAY]) \l0x000e: IPUT  (r0 I:androidx.constraintlayout.core.ArrayRow[]), (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mRows androidx.constraintlayout.core.ArrayRow[] \l0x0010: IGET  (r0 I:androidx.constraintlayout.core.Cache) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mCache androidx.constraintlayout.core.Cache  (LINE:142)\l0x0012: IGET  (r1 I:androidx.constraintlayout.core.SolverVariable[]) = (r0 I:androidx.constraintlayout.core.Cache) androidx.constraintlayout.core.Cache.mIndexedVariables androidx.constraintlayout.core.SolverVariable[] \l0x0014: IGET  (r2 I:int) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.TABLE_SIZE int \l0x0016: INVOKE  (r1 I:java.lang.Object[]) = (r1 I:java.lang.Object[]), (r2 I:int) type: STATIC call: java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] A[MD:\<T\>:(T[], int):T[] (c)]\l0x001a: CHECK_CAST (r1 I:androidx.constraintlayout.core.SolverVariable[]) = (androidx.constraintlayout.core.SolverVariable[]) (r1 I:??[OBJECT, ARRAY]) \l0x001c: IPUT  (r1 I:androidx.constraintlayout.core.SolverVariable[]), (r0 I:androidx.constraintlayout.core.Cache) androidx.constraintlayout.core.Cache.mIndexedVariables androidx.constraintlayout.core.SolverVariable[] \l0x001e: IGET  (r0 I:int) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.TABLE_SIZE int  (LINE:143)\l0x0020: NEW_ARRAY  (r1 I:boolean[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: boolean[] \l0x0022: IPUT  (r1 I:boolean[]), (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mAlreadyTestedCandidates boolean[] \l0x0024: IPUT  (r0 I:int), (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mMaxColumns int  (LINE:144)\l0x0026: IPUT  (r0 I:int), (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mMaxRows int  (LINE:145)\l0x0028: SGET  (r0 I:androidx.constraintlayout.core.Metrics) =  androidx.constraintlayout.core.LinearSystem.sMetrics androidx.constraintlayout.core.Metrics  (LINE:146)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: IGET  (r1 I:long) = (r0 I:androidx.constraintlayout.core.Metrics) androidx.constraintlayout.core.Metrics.tableSizeIncrease long  (LINE:147)\l0x002e: CONST  (r3 I:??[long, double]) = (1 ??[long, double]) \l0x0030: ARITH  (r1 I:long) = (r1 I:long) + (r3 I:long) \l0x0031: IPUT  (r1 I:long), (r0 I:androidx.constraintlayout.core.Metrics) androidx.constraintlayout.core.Metrics.tableSizeIncrease long \l0x0033: SGET  (r0 I:androidx.constraintlayout.core.Metrics) =  androidx.constraintlayout.core.LinearSystem.sMetrics androidx.constraintlayout.core.Metrics  (LINE:148)\l0x0035: IGET  (r1 I:long) = (r0 I:androidx.constraintlayout.core.Metrics) androidx.constraintlayout.core.Metrics.maxTableSize long \l0x0037: IGET  (r3 I:int) = (r5 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.TABLE_SIZE int \l0x0039: CAST (r3 I:long) = (long) (r3 I:int) \l0x003a: INVOKE  (r1 I:long) = (r1 I:long), (r3 I:long) type: STATIC call: java.lang.Math.max(long, long):long A[MD:(long, long):long (c)]\l0x003e: IPUT  (r1 I:long), (r0 I:androidx.constraintlayout.core.Metrics) androidx.constraintlayout.core.Metrics.maxTableSize long \l0x0040: SGET  (r0 I:androidx.constraintlayout.core.Metrics) =  androidx.constraintlayout.core.LinearSystem.sMetrics androidx.constraintlayout.core.Metrics  (LINE:149)\l0x0042: IGET  (r1 I:long) = (r0 I:androidx.constraintlayout.core.Metrics) androidx.constraintlayout.core.Metrics.maxTableSize long \l0x0044: IPUT  (r1 I:long), (r0 I:androidx.constraintlayout.core.Metrics) androidx.constraintlayout.core.Metrics.lastTableSize long \l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|RETURN\lORIG_RETURN\l|0x0046: RETURN    (LINE:151)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0046: RETURN   A[SYNTHETIC] (LINE:151)\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.core.LinearSystem.increaseTableSize((r5 'this' I:androidx.constraintlayout.core.LinearSystem A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x002a \-\> B:12:0x0046\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

