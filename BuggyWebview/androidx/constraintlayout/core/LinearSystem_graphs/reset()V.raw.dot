digraph "CFG forandroidx.constraintlayout.core.LinearSystem.reset()V" {
Node_31 [shape=record,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:185)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0001|LOOP_START\lLOOP:0: B:34:0x0001\-\>B:39:0x0013\l|0x0001: IGET  (r1 I:androidx.constraintlayout.core.Cache) = (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mCache androidx.constraintlayout.core.Cache \l0x0003: IGET  (r1 I:androidx.constraintlayout.core.SolverVariable[]) = (r1 I:androidx.constraintlayout.core.Cache) androidx.constraintlayout.core.Cache.mIndexedVariables androidx.constraintlayout.core.SolverVariable[] \l0x0005: ARRAY_LENGTH  (r1 I:int) = (r1 I:??[]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0006|0x0006: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:55:0x0016 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0008|0x0008: IGET  (r1 I:androidx.constraintlayout.core.Cache) = (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mCache androidx.constraintlayout.core.Cache  (LINE:186)\l0x000a: IGET  (r1 I:androidx.constraintlayout.core.SolverVariable[]) = (r1 I:androidx.constraintlayout.core.Cache) androidx.constraintlayout.core.Cache.mIndexedVariables androidx.constraintlayout.core.SolverVariable[] \l0x000c: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('variable' androidx.constraintlayout.core.SolverVariable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0013  (LINE:187)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0010|0x0010: INVOKE  (r1 I:androidx.constraintlayout.core.SolverVariable A[D('variable' androidx.constraintlayout.core.SolverVariable)]) type: VIRTUAL call: androidx.constraintlayout.core.SolverVariable.reset():void A[MD:():void (m)] (LINE:188)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0013|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0013|LOOP_END\lLOOP:0: B:34:0x0001\-\>B:39:0x0013\l|0x0013: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:185)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0013|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0016|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0016|0x0016: IGET  (r0 I:androidx.constraintlayout.core.Cache A[D('i' int)]) = (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mCache androidx.constraintlayout.core.Cache  (LINE:191)\l0x0018: IGET  (r0 I:androidx.constraintlayout.core.Pools$Pool\<androidx.constraintlayout.core.SolverVariable\>) = (r0 I:androidx.constraintlayout.core.Cache) androidx.constraintlayout.core.Cache.solverVariablePool androidx.constraintlayout.core.Pools$Pool \l0x001a: IGET  (r1 I:androidx.constraintlayout.core.SolverVariable[]) = (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mPoolVariables androidx.constraintlayout.core.SolverVariable[] \l0x001c: IGET  (r2 I:int) = (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mPoolVariablesCount int \l0x001e: INVOKE  (r0 I:androidx.constraintlayout.core.Pools$Pool), (r1 I:java.lang.Object[]), (r2 I:int) type: INTERFACE call: androidx.constraintlayout.core.Pools.Pool.releaseAll(java.lang.Object[], int):void A[MD:(T[], int):void (m)]\l0x0021: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:192)\l0x0022: IPUT  (r0 I:int), (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mPoolVariablesCount int \l0x0024: IGET  (r1 I:androidx.constraintlayout.core.Cache) = (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mCache androidx.constraintlayout.core.Cache  (LINE:194)\l0x0026: IGET  (r1 I:androidx.constraintlayout.core.SolverVariable[]) = (r1 I:androidx.constraintlayout.core.Cache) androidx.constraintlayout.core.Cache.mIndexedVariables androidx.constraintlayout.core.SolverVariable[] \l0x0028: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0029: INVOKE  (r1 I:java.lang.Object[]), (r2 I:java.lang.Object) type: STATIC call: java.util.Arrays.fill(java.lang.Object[], java.lang.Object):void A[MD:(java.lang.Object[], java.lang.Object):void (c)]\l0x002c: IGET  (r1 I:java.util.HashMap\<java.lang.String, androidx.constraintlayout.core.SolverVariable\>) = (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mVariables java.util.HashMap  (LINE:195)\l}"];
Node_41 [shape=record,label="{41\:\ 0x002e|0x002e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0033 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0030|0x0030: INVOKE  (r1 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.clear():void A[MD:():void (c)] (LINE:196)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0033|0x0033: IPUT  (r0 I:int), (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mVariablesID int  (LINE:198)\l0x0035: IGET  (r1 I:androidx.constraintlayout.core.LinearSystem$Row) = (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mGoal androidx.constraintlayout.core.LinearSystem$Row  (LINE:199)\l0x0037: INVOKE  (r1 I:androidx.constraintlayout.core.LinearSystem$Row) type: INTERFACE call: androidx.constraintlayout.core.LinearSystem.Row.clear():void A[MD:():void (m)]\l0x003a: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:200)\l0x003b: IPUT  (r1 I:int), (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mNumColumns int \l0x003d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:201)\l}"];
Node_44 [shape=record,label="{44\:\ 0x003e|LOOP_START\lLOOP:1: B:44:0x003e\-\>B:49:0x004c\l|0x003e: IGET  (r2 I:int) = (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mNumRows int \l}"];
Node_45 [shape=record,label="{45\:\ 0x0040|0x0040: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:58:0x004f \l}"];
Node_46 [shape=record,label="{46\:\ 0x0042|0x0042: IGET  (r2 I:androidx.constraintlayout.core.ArrayRow[]) = (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mRows androidx.constraintlayout.core.ArrayRow[]  (LINE:202)\l0x0044: AGET  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char] A[D('i' int)]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0046|0x0046: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x004c \l}"];
Node_48 [shape=record,label="{48\:\ 0x0048|0x0048: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char] A[D('i' int)])  (LINE:203)\l0x004a: IPUT  (r0 I:boolean), (r2 I:androidx.constraintlayout.core.ArrayRow) androidx.constraintlayout.core.ArrayRow.used boolean \l}"];
Node_59 [shape=record,label="{59\:\ 0x004c|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x004c|LOOP_END\lLOOP:1: B:44:0x003e\-\>B:49:0x004c\l|0x004c: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:201)\l}"];
Node_60 [shape=record,label="{60\:\ 0x004c|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x004f|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x004f|0x004f: INVOKE  (r4 I:androidx.constraintlayout.core.LinearSystem) type: DIRECT call: androidx.constraintlayout.core.LinearSystem.releaseRows():void A[MD:():void (m)] (LINE:206)\l0x0052: IPUT  (r0 I:int), (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mNumRows int  (LINE:207)\l0x0054: SGET  (r0 I:boolean) =  androidx.constraintlayout.core.LinearSystem.OPTIMIZED_ENGINE boolean  (LINE:208)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0056|0x0056: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0062 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0058|0x0058: NEW_INSTANCE  (r0 I:androidx.constraintlayout.core.LinearSystem$ValuesRow) =  androidx.constraintlayout.core.LinearSystem$ValuesRow  (LINE:209)\l0x005a: IGET  (r1 I:androidx.constraintlayout.core.Cache) = (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mCache androidx.constraintlayout.core.Cache \l0x005c: INVOKE  \l  (r0 I:androidx.constraintlayout.core.LinearSystem$ValuesRow)\l  (r4 I:androidx.constraintlayout.core.LinearSystem)\l  (r1 I:androidx.constraintlayout.core.Cache)\l type: DIRECT call: androidx.constraintlayout.core.LinearSystem.ValuesRow.\<init\>(androidx.constraintlayout.core.LinearSystem, androidx.constraintlayout.core.Cache):void A[MD:(androidx.constraintlayout.core.LinearSystem, androidx.constraintlayout.core.Cache):void (m)]\l0x005f: IPUT  (r0 I:androidx.constraintlayout.core.LinearSystem$Row), (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mTempGoal androidx.constraintlayout.core.LinearSystem$Row \l}"];
Node_61 [shape=record,label="{61\:\ ?|SYNTHETIC\lRETURN\l|0x006b: RETURN   A[SYNTHETIC] (LINE:213)\l}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_53 [shape=record,label="{53\:\ 0x0062|0x0062: NEW_INSTANCE  (r0 I:androidx.constraintlayout.core.ArrayRow) =  androidx.constraintlayout.core.ArrayRow  (LINE:211)\l0x0064: IGET  (r1 I:androidx.constraintlayout.core.Cache) = (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mCache androidx.constraintlayout.core.Cache \l0x0066: INVOKE  (r0 I:androidx.constraintlayout.core.ArrayRow), (r1 I:androidx.constraintlayout.core.Cache) type: DIRECT call: androidx.constraintlayout.core.ArrayRow.\<init\>(androidx.constraintlayout.core.Cache):void A[MD:(androidx.constraintlayout.core.Cache):void (m)]\l0x0069: IPUT  (r0 I:androidx.constraintlayout.core.LinearSystem$Row), (r4 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mTempGoal androidx.constraintlayout.core.LinearSystem$Row \l}"];
Node_54 [shape=record,label="{54\:\ 0x006b|RETURN\lORIG_RETURN\l|0x006b: RETURN    (LINE:213)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.LinearSystem.reset((r4 'this' I:androidx.constraintlayout.core.LinearSystem A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:39:0x0013 \-\> B:34:0x0001, CROSS_EDGE: B:37:0x000e \-\> B:39:0x0013, BACK_EDGE: B:49:0x004c \-\> B:44:0x003e, CROSS_EDGE: B:47:0x0046 \-\> B:49:0x004c, CROSS_EDGE: B:53:0x0062 \-\> B:54:0x006b, CROSS_EDGE: B:41:0x002e \-\> B:43:0x0033\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000e\-0x0013: r1 'variable' Landroidx\/constraintlayout\/core\/SolverVariable;\l  0x0001\-0x0016: r0 'i' I\l  0x003e\-0x004f: r1 'i' I\l}"];
MethodNode -> Node_31;Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_55;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_57;
Node_38 -> Node_56;
Node_56 -> Node_39;
Node_39 -> Node_34;
Node_57 -> Node_39;
Node_55 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_58;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_60;
Node_48 -> Node_59;
Node_59 -> Node_49;
Node_49 -> Node_44;
Node_60 -> Node_49;
Node_58 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_61;
Node_61 -> Node_32;
Node_53 -> Node_54;
Node_54 -> Node_32;
}

