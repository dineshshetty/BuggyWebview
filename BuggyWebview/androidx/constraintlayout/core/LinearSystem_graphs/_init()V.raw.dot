digraph "CFG forandroidx.constraintlayout.core.LinearSystem.\<init\>()V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r3 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:94)\l0x0003: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:48)\l0x0004: IPUT  (r0 I:boolean), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.hasSimpleDefinition boolean \l0x0006: IPUT  (r0 I:int), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mVariablesID int  (LINE:53)\l0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:58)\l0x0009: IPUT  \l  (r1 I:java.util.HashMap\<java.lang.String, androidx.constraintlayout.core.SolverVariable\>)\l  (r3 I:androidx.constraintlayout.core.LinearSystem)\l androidx.constraintlayout.core.LinearSystem.mVariables java.util.HashMap \l0x000b: CONST  (r2 I:??[int, float, short, byte, char]) = (32 ??[int, float, short, byte, char])  (LINE:65)\l0x000d: IPUT  (r2 I:int), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.TABLE_SIZE int \l0x000f: IPUT  (r2 I:int), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mMaxColumns int  (LINE:66)\l0x0011: IPUT  (r1 I:androidx.constraintlayout.core.ArrayRow[]), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mRows androidx.constraintlayout.core.ArrayRow[]  (LINE:67)\l0x0013: IPUT  (r0 I:boolean), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.graphOptimizer boolean  (LINE:70)\l0x0015: IPUT  (r0 I:boolean), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.newgraphOptimizer boolean  (LINE:71)\l0x0017: NEW_ARRAY  (r1 I:boolean[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: boolean[]  (LINE:74)\l0x0019: IPUT  (r1 I:boolean[]), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mAlreadyTestedCandidates boolean[] \l0x001b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:76)\l0x001c: IPUT  (r1 I:int), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mNumColumns int \l0x001e: IPUT  (r0 I:int), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mNumRows int  (LINE:77)\l0x0020: IPUT  (r2 I:int), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mMaxRows int  (LINE:78)\l0x0022: SGET  (r1 I:int) =  androidx.constraintlayout.core.LinearSystem.POOL_SIZE int  (LINE:82)\l0x0024: NEW_ARRAY  (r1 I:androidx.constraintlayout.core.SolverVariable[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: androidx.constraintlayout.core.SolverVariable[] \l0x0026: IPUT  (r1 I:androidx.constraintlayout.core.SolverVariable[]), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mPoolVariables androidx.constraintlayout.core.SolverVariable[] \l0x0028: IPUT  (r0 I:int), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mPoolVariablesCount int  (LINE:83)\l0x002a: NEW_ARRAY  (r0 I:androidx.constraintlayout.core.ArrayRow[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: androidx.constraintlayout.core.ArrayRow[]  (LINE:95)\l0x002c: IPUT  (r0 I:androidx.constraintlayout.core.ArrayRow[]), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mRows androidx.constraintlayout.core.ArrayRow[] \l0x002e: INVOKE  (r3 I:androidx.constraintlayout.core.LinearSystem) type: DIRECT call: androidx.constraintlayout.core.LinearSystem.releaseRows():void A[MD:():void (m)] (LINE:96)\l0x0031: NEW_INSTANCE  (r0 I:androidx.constraintlayout.core.Cache) =  androidx.constraintlayout.core.Cache  (LINE:97)\l0x0033: INVOKE  (r0 I:androidx.constraintlayout.core.Cache) type: DIRECT call: androidx.constraintlayout.core.Cache.\<init\>():void A[MD:():void (m)]\l0x0036: IPUT  (r0 I:androidx.constraintlayout.core.Cache), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mCache androidx.constraintlayout.core.Cache \l0x0038: NEW_INSTANCE  (r1 I:androidx.constraintlayout.core.PriorityGoalRow) =  androidx.constraintlayout.core.PriorityGoalRow  (LINE:98)\l0x003a: INVOKE  (r1 I:androidx.constraintlayout.core.PriorityGoalRow), (r0 I:androidx.constraintlayout.core.Cache) type: DIRECT call: androidx.constraintlayout.core.PriorityGoalRow.\<init\>(androidx.constraintlayout.core.Cache):void A[MD:(androidx.constraintlayout.core.Cache):void (m)]\l0x003d: IPUT  (r1 I:androidx.constraintlayout.core.LinearSystem$Row), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mGoal androidx.constraintlayout.core.LinearSystem$Row \l0x003f: SGET  (r1 I:boolean) =  androidx.constraintlayout.core.LinearSystem.OPTIMIZED_ENGINE boolean  (LINE:99)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0041|0x0041: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x004b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|0x0043: NEW_INSTANCE  (r1 I:androidx.constraintlayout.core.LinearSystem$ValuesRow) =  androidx.constraintlayout.core.LinearSystem$ValuesRow  (LINE:100)\l0x0045: INVOKE  \l  (r1 I:androidx.constraintlayout.core.LinearSystem$ValuesRow)\l  (r3 I:androidx.constraintlayout.core.LinearSystem)\l  (r0 I:androidx.constraintlayout.core.Cache)\l type: DIRECT call: androidx.constraintlayout.core.LinearSystem.ValuesRow.\<init\>(androidx.constraintlayout.core.LinearSystem, androidx.constraintlayout.core.Cache):void A[MD:(androidx.constraintlayout.core.LinearSystem, androidx.constraintlayout.core.Cache):void (m)]\l0x0048: IPUT  (r1 I:androidx.constraintlayout.core.LinearSystem$Row), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mTempGoal androidx.constraintlayout.core.LinearSystem$Row \l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0052: RETURN   A[SYNTHETIC] (LINE:104)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x004b|0x004b: NEW_INSTANCE  (r1 I:androidx.constraintlayout.core.ArrayRow) =  androidx.constraintlayout.core.ArrayRow  (LINE:102)\l0x004d: INVOKE  (r1 I:androidx.constraintlayout.core.ArrayRow), (r0 I:androidx.constraintlayout.core.Cache) type: DIRECT call: androidx.constraintlayout.core.ArrayRow.\<init\>(androidx.constraintlayout.core.Cache):void A[MD:(androidx.constraintlayout.core.Cache):void (m)]\l0x0050: IPUT  (r1 I:androidx.constraintlayout.core.LinearSystem$Row), (r3 I:androidx.constraintlayout.core.LinearSystem) androidx.constraintlayout.core.LinearSystem.mTempGoal androidx.constraintlayout.core.LinearSystem$Row \l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|RETURN\lORIG_RETURN\l|0x0052: RETURN    (LINE:104)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.LinearSystem.\<init\>((r3 'this' I:androidx.constraintlayout.core.LinearSystem A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x004b \-\> B:14:0x0052\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

