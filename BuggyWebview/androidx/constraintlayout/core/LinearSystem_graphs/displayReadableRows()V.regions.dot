digraph "CFG forandroidx.constraintlayout.core.LinearSystem.displayReadableRows()V" {
subgraph cluster_Region_674665874 {
label = "R(8:1|(3:4|(1:8)|10)|14|(3:17|(1:21)|23)|27|(1:30)|(1:34)|35)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0000|displaySolverVariables()\ljava.lang.String java.lang.String r0 = \" num vars \" + r9.mVariablesID + \"n\"\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1099388376 {
label = "LOOP:0: (3:4|(1:8)|10)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0024|if (r2 \< (r9.mVariablesID + 1)) goto L4\l}"];
subgraph cluster_Region_995310260 {
label = "R(3:4|(1:8)|10)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0026|androidx.constraintlayout.core.SolverVariable r3 = r9.mCache.mIndexedVariables[r2]\l}"];
subgraph cluster_IfRegion_682541171 {
label = "IF [B:44:0x002c, B:46:0x0030] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x002c|if (r3 != null) goto L6\l}"];
Node_46 [shape=record,label="{46\:\ 0x0030|ADDED_TO_REGION\l|if (r3.isFinalValue != false) goto L8\l}"];
subgraph cluster_Region_1992377057 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x0032|java.lang.String r0 = r0 + \" $[\" + r2 + \"] =\> \" + r3 + \" = \" + r3.computedValue + \"n\"\l}"];
}
}
Node_48 [shape=record,label="{48\:\ 0x0057|LOOP_END\lLOOP:0: B:41:0x001c\-\>B:48:0x0057\lPHI: r0 \l  PHI: (r0v13 's' java.lang.String) = (r0v2 's' java.lang.String), (r0v2 's' java.lang.String), (r0v14 's' java.lang.String) binds: [B:69:0x0057, B:70:0x0057, B:68:0x0057] A[DONT_GENERATE, DONT_INLINE]\l|r2++\l}"];
}
}
Node_49 [shape=record,label="{49\:\ 0x005a|java.lang.String java.lang.String r0 = r0 + \"n\"\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1535060488 {
label = "LOOP:1: (3:17|(1:21)|23)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x006e|if (r2 \< (r9.mVariablesID + 1)) goto L17\l}"];
subgraph cluster_Region_539860266 {
label = "R(3:17|(1:21)|23)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x0070|androidx.constraintlayout.core.SolverVariable r3 = r9.mCache.mIndexedVariables[r2]\l}"];
subgraph cluster_IfRegion_1715560503 {
label = "IF [B:53:0x0076, B:55:0x007a] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0076|if (r3 != null) goto L19\l}"];
Node_55 [shape=record,label="{55\:\ 0x007a|ADDED_TO_REGION\l|if (r3.isSynonym != false) goto L21\l}"];
subgraph cluster_Region_659923529 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x007c|androidx.constraintlayout.core.SolverVariable r6 = r9.mCache.mIndexedVariables[r3.synonym]\ljava.lang.String r0 = r0 + \" ~[\" + r2 + \"] =\> \" + r3 + \" = \" + r6 + \" + \" + r3.synonymDelta + \"n\"\l}"];
}
}
Node_57 [shape=record,label="{57\:\ 0x00b1|LOOP_END\lLOOP:1: B:50:0x006a\-\>B:57:0x00b1\lPHI: r0 \l  PHI: (r0v11 's' java.lang.String) = (r0v4 's' java.lang.String), (r0v4 's' java.lang.String), (r0v12 's' java.lang.String) binds: [B:73:0x00b1, B:74:0x00b1, B:72:0x00b1] A[DONT_GENERATE, DONT_INLINE]\l|r2++\l}"];
}
}
Node_58 [shape=record,label="{58\:\ 0x00b4|java.lang.String java.lang.String r0 = r0 + \"nn #  \"\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_717843593 {
label = "LOOP:2: (1:30)";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x00c8|if (r2 \< r9.mNumRows) goto L30\l}"];
subgraph cluster_Region_138688739 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x00ca|LOOP_END\lLOOP:2: B:59:0x00c6\-\>B:61:0x00ca\l|java.lang.String r0 = (r0 + r9.mRows[r2].toReadableString()) + \"n #  \"\lr2++\l}"];
}
}
subgraph cluster_IfRegion_1056853075 {
label = "IF [B:63:0x00f7] THEN: R(1:34) ELSE: null";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x00f7|if (r9.mGoal != null) goto L34\l}"];
subgraph cluster_Region_34178305 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x00f9|java.lang.String r0 = r0 + \"Goal: \" + r9.mGoal + \"n\"\l}"];
}
}
Node_65 [shape=record,label="{65\:\ 0x0112|PHI: r0 \l  PHI: (r0v7 's' java.lang.String) = (r0v6 's' java.lang.String), (r0v8 's' java.lang.String) binds: [B:63:0x00f7, B:64:0x00f9] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.System.out.println(r0)\l}"];
}
Node_38 [shape=record,color=red,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x001c|LOOP_START\lLOOP:0: B:41:0x001c\-\>B:48:0x0057\lPHI: r0 r2 \l  PHI: (r0v2 's' java.lang.String) = (r0v1 's' java.lang.String), (r0v13 's' java.lang.String) binds: [B:40:0x0000, B:48:0x0057] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v12 'i' int) binds: [B:40:0x0000, B:48:0x0057] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x002e}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x0057|SYNTHETIC\l}"];
Node_70 [shape=record,color=red,label="{70\:\ 0x0057|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x0057|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x005a|SYNTHETIC\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x006a|LOOP_START\lLOOP:1: B:50:0x006a\-\>B:57:0x00b1\lPHI: r0 r2 \l  PHI: (r0v4 's' java.lang.String) = (r0v3 's' java.lang.String), (r0v11 's' java.lang.String) binds: [B:49:0x005a, B:57:0x00b1] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v4 'i' int) = (r2v3 'i' int), (r2v11 'i' int) binds: [B:49:0x005a, B:57:0x00b1] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x0078}"];
Node_72 [shape=record,color=red,label="{72\:\ 0x00b1|SYNTHETIC\l}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x00b1|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_73 [shape=record,color=red,label="{73\:\ 0x00b1|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_71 [shape=record,color=red,label="{71\:\ 0x00b4|SYNTHETIC\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x00c6|LOOP_START\lLOOP:2: B:59:0x00c6\-\>B:61:0x00ca\lPHI: r0 r2 \l  PHI: (r0v6 's' java.lang.String) = (r0v5 's' java.lang.String), (r0v10 's' java.lang.String) binds: [B:58:0x00b4, B:61:0x00ca] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v7 'i' int) = (r2v6 'i' int), (r2v10 'i' int) binds: [B:58:0x00b4, B:61:0x00ca] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_75 [shape=record,color=red,label="{75\:\ 0x00f5|SYNTHETIC\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x00f5}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0117}"];
Node_39 [shape=record,color=red,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.LinearSystem.displayReadableRows((r9v0 'this' androidx.constraintlayout.core.LinearSystem A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:48:0x0057 \-\> B:41:0x001c, CROSS_EDGE: B:46:0x0030 \-\> B:48:0x0057, CROSS_EDGE: B:44:0x002c \-\> B:48:0x0057, BACK_EDGE: B:57:0x00b1 \-\> B:50:0x006a, CROSS_EDGE: B:55:0x007a \-\> B:57:0x00b1, CROSS_EDGE: B:53:0x0076 \-\> B:57:0x00b1, BACK_EDGE: B:61:0x00ca \-\> B:59:0x00c6, CROSS_EDGE: B:63:0x00f7 \-\> B:65:0x0112\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_38;Node_40 -> Node_41;
Node_42 -> Node_43;
Node_42 -> Node_67[style=dashed];
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_44 -> Node_69[style=dashed];
Node_46 -> Node_47;
Node_46 -> Node_70[style=dashed];
Node_47 -> Node_68;
Node_48 -> Node_41;
Node_49 -> Node_50;
Node_51 -> Node_52;
Node_51 -> Node_71[style=dashed];
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_53 -> Node_73[style=dashed];
Node_55 -> Node_56;
Node_55 -> Node_74[style=dashed];
Node_56 -> Node_72;
Node_57 -> Node_50;
Node_58 -> Node_59;
Node_60 -> Node_61;
Node_60 -> Node_75[style=dashed];
Node_61 -> Node_59;
Node_63 -> Node_64;
Node_63 -> Node_65[style=dashed];
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_38 -> Node_40;
Node_41 -> Node_42;
Node_45 -> Node_46;
Node_68 -> Node_48;
Node_70 -> Node_48;
Node_69 -> Node_48;
Node_67 -> Node_49;
Node_50 -> Node_51;
Node_54 -> Node_55;
Node_72 -> Node_57;
Node_74 -> Node_57;
Node_73 -> Node_57;
Node_71 -> Node_58;
Node_59 -> Node_60;
Node_75 -> Node_62;
Node_62 -> Node_63;
Node_66 -> Node_39;
}

