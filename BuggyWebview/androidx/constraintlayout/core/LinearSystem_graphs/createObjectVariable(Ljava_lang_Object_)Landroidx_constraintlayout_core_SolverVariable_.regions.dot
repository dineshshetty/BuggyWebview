digraph "CFG forandroidx.constraintlayout.core.LinearSystem.createObjectVariable(Ljava\/lang\/Object;)Landroidx\/constraintlayout\/core\/SolverVariable;" {
subgraph cluster_Region_567730569 {
label = "R(1:(2:(1:2)|(4:(1:6)|7|(3:9|(1:11)|(2:(1:20)|21))|22)))";
node [shape=record,color=blue];
subgraph cluster_Region_1951209874 {
label = "R(2:(1:2)|(4:(1:6)|7|(3:9|(1:11)|(2:(1:20)|21))|22))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1241279847 {
label = "IF [B:26:0x0000] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0000|if (r5 == null) goto L2\l}"];
subgraph cluster_Region_1364735472 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0002|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_819009845 {
label = "R(4:(1:6)|7|(3:9|(1:11)|(2:(1:20)|21))|22)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1192516859 {
label = "IF [B:30:0x000a] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x000a|if ((r4.mNumColumns + 1) \>= r4.mMaxColumns) goto L6\l}"];
subgraph cluster_Region_1535728642 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x000c|increaseTableSize()\l}"];
}
}
Node_32 [shape=record,label="{32\:\ 0x000f|androidx.constraintlayout.core.SolverVariable r0 = null\l}"];
subgraph cluster_IfRegion_1899271489 {
label = "IF [B:33:0x0012] THEN: R(3:9|(1:11)|(2:(1:20)|21)) ELSE: null";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0012|if ((r5 instanceof androidx.constraintlayout.core.widgets.ConstraintAnchor) != false) goto L9\l}"];
subgraph cluster_Region_972297458 {
label = "R(3:9|(1:11)|(2:(1:20)|21))";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0014|androidx.constraintlayout.core.SolverVariable r0 = ((androidx.constraintlayout.core.widgets.ConstraintAnchor) r5).getSolverVariable()\l}"];
subgraph cluster_IfRegion_1734157222 {
label = "IF [B:35:0x001b] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x001b|if (r0 == null) goto L11\l}"];
subgraph cluster_Region_283713123 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x001d|((androidx.constraintlayout.core.widgets.ConstraintAnchor) r5).resetSolverVariable(r4.mCache)\landroidx.constraintlayout.core.SolverVariable r0 = ((androidx.constraintlayout.core.widgets.ConstraintAnchor) r5).getSolverVariable()\l}"];
}
}
subgraph cluster_IfRegion_1610454729 {
label = "IF [B:38:0x002f, B:40:0x0035, B:42:0x003f] THEN: R(2:(1:20)|21) ELSE: null";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x002f|if (r0.f13id == (\-1)) goto L18\l}"];
Node_40 [shape=record,label="{40\:\ 0x0035|ADDED_TO_REGION\l|if (r0.f13id \> r4.mVariablesID) goto L18\l}"];
Node_42 [shape=record,label="{42\:\ 0x003f|ADDED_TO_REGION\l|if (r4.mCache.mIndexedVariables[r0.f13id] == null) goto L18\l}"];
subgraph cluster_Region_280694424 {
label = "R(2:(1:20)|21)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1186417216 {
label = "IF [B:44:0x0043] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0043|if (r0.f13id != (\-1)) goto L20\l}"];
subgraph cluster_Region_519397107 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0045|r0.reset()\l}"];
}
}
Node_46 [shape=record,label="{46\:\ 0x0048|int int r1 = r4.mVariablesID + 1\lr4.mVariablesID = r1\lr4.mNumColumns++\lr0.f13id = r1\lr0.mType = androidx.constraintlayout.core.SolverVariable.Type.UNRESTRICTED\lr4.mCache.mIndexedVariables[r4.mVariablesID] = r0\l}"];
}
}
}
}
Node_47 [shape=record,label="{47\:\ 0x0062|RETURN\lPHI: r0 \l  PHI: (r0v3 'variable' androidx.constraintlayout.core.SolverVariable) = (r0v2 'variable' androidx.constraintlayout.core.SolverVariable), (r0v5 'variable' androidx.constraintlayout.core.SolverVariable), (r0v5 'variable' androidx.constraintlayout.core.SolverVariable) binds: [B:33:0x0012, B:46:0x0048, B:42:0x003f] A[DONT_GENERATE, DONT_INLINE]\l|return r0\l}"];
}
}
}
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0004}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x002c|PHI: r0 \l  PHI: (r0v5 'variable' androidx.constraintlayout.core.SolverVariable) = (r0v4 'variable' androidx.constraintlayout.core.SolverVariable), (r0v6 'variable' androidx.constraintlayout.core.SolverVariable) binds: [B:35:0x001b, B:36:0x001d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0031}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0037}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0041}"];
MethodNode[shape=record,label="{public androidx.constraintlayout.core.SolverVariable androidx.constraintlayout.core.LinearSystem.createObjectVariable((r4v0 'this' androidx.constraintlayout.core.LinearSystem A[IMMUTABLE_TYPE, THIS]), (r5v0 'anchor' java.lang.Object A[D('anchor' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:47:0x0062 \-\> B:25:?, CROSS_EDGE: B:44:0x0043 \-\> B:46:0x0048, CROSS_EDGE: B:42:0x003f \-\> B:47:0x0062, CROSS_EDGE: B:40:0x0035 \-\> B:43:0x0041, CROSS_EDGE: B:38:0x002f \-\> B:43:0x0041, CROSS_EDGE: B:35:0x001b \-\> B:37:0x002c, CROSS_EDGE: B:33:0x0012 \-\> B:47:0x0062, CROSS_EDGE: B:30:0x000a \-\> B:32:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_24;Node_26 -> Node_27;
Node_26 -> Node_29[style=dashed];
Node_27 -> Node_25;
Node_30 -> Node_31;
Node_30 -> Node_32[style=dashed];
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_47[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_37[style=dashed];
Node_36 -> Node_37;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_43;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_42 -> Node_43;
Node_42 -> Node_47[style=dashed];
Node_44 -> Node_45;
Node_44 -> Node_46[style=dashed];
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_25;
Node_24 -> Node_26;
Node_29 -> Node_30;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_41 -> Node_42;
Node_43 -> Node_44;
}

