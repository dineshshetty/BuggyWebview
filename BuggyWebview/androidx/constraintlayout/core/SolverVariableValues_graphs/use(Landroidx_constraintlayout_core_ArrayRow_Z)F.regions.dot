digraph "CFG forandroidx.constraintlayout.core.SolverVariableValues.use(Landroidx\/constraintlayout\/core\/ArrayRow;Z)F" {
subgraph cluster_Region_1502990314 {
label = "R(3:1|(2:(1:5)(0)|7)|10)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|float float r0 = get(r9.variable)\lremove(r9.variable, r10)\landroidx.constraintlayout.core.SolverVariableValues androidx.constraintlayout.core.SolverVariableValues r1 = (androidx.constraintlayout.core.SolverVariableValues) r9.variables\lint int r2 = r1.getCurrentSize()\lint int r3 = r1.head\lint r3 = 0\lint r4 = 0\l}"];
subgraph cluster_LoopRegion_1405112801 {
label = "LOOP:0: (2:(1:5)(0)|7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0017|LOOP_START\lLOOP:0: B:15:0x0017\-\>B:19:0x0035\lPHI: r3 r4 \l  PHI: (r3v2 'j' int) = (r3v1 'j' int), (r3v3 'j' int) binds: [B:14:0x0000, B:19:0x0035] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'i' int) = (r4v0 'i' int), (r4v2 'i' int) binds: [B:14:0x0000, B:19:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r2) goto L3\l}"];
subgraph cluster_Region_618475244 {
label = "R(2:(1:5)(0)|7)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1264439410 {
label = "IF [B:17:0x001e] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x001e|if (r1.variables[r4] != (\-1)) goto L5\l}"];
subgraph cluster_Region_128824338 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0020|float r5 = r1.values[r4]\landroidx.constraintlayout.core.SolverVariable r6 = r8.mCache.mIndexedVariables[r1.variables[r4]]\ladd(r6, r5 * r0, r10)\lr3++\l}"];
}
subgraph cluster_Region_551359699 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_19 [shape=record,label="{19\:\ 0x0035|LOOP_END\lLOOP:0: B:15:0x0017\-\>B:19:0x0035\lPHI: r3 \l  PHI: (r3v3 'j' int) = (r3v2 'j' int), (r3v4 'j' int) binds: [B:23:0x0035, B:22:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|r4++\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x0038|RETURN\l|return r0\l}"];
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0019}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0035|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0035|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0038|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public float androidx.constraintlayout.core.SolverVariableValues.use((r8v0 'this' androidx.constraintlayout.core.SolverVariableValues A[IMMUTABLE_TYPE, THIS]), (r9v0 'def' androidx.constraintlayout.core.ArrayRow A[D('def' androidx.constraintlayout.core.ArrayRow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'removeFromDefinition' boolean A[D('removeFromDefinition' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0035 \-\> B:15:0x0017, CROSS_EDGE: B:17:0x001e \-\> B:19:0x0035\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.ArrayRow.ArrayRowVariables.use(androidx.constraintlayout.core.ArrayRow, boolean):float]\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_21[style=dashed];
Node_17 -> Node_18;
Node_17 -> Node_23[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_15;
Node_20 -> Node_13;
Node_12 -> Node_14;
Node_16 -> Node_17;
Node_22 -> Node_19;
Node_23 -> Node_19;
Node_21 -> Node_20;
}

