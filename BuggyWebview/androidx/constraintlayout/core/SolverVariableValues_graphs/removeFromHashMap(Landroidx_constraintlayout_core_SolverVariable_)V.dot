digraph "CFG forandroidx.constraintlayout.core.SolverVariableValues.removeFromHashMap(Landroidx\/constraintlayout\/core\/SolverVariable;)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|int r0 = r8.f13id % r7.HASH_SIZE\lr1 = r7.keys[r0]\l}"];
Node_27 [shape=record,label="{27\:\ 0x000a|if (r1 != (\-1)) goto L5\l}"];
Node_28 [shape=record,label="{28\:\ 0x000c|RETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x000d|int r3 = r8.f13id\l}"];
Node_30 [shape=record,label="{30\:\ 0x0013|if (r7.variables[r1] != r3) goto L9\l}"];
Node_31 [shape=record,label="{31\:\ 0x0015|int[] r4 = r7.keys\lint[] r5 = r7.nextKeys\lr4[r0] = r5[r1]\lr5[r1] = \-1\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ 0x0020|LOOP_START\lLOOP:0: B:32:0x0020\-\>B:36:0x002e\lPHI: r1 \l  PHI: (r1v3 'key' int) = (r1v2 'key' int), (r1v4 'key' int) binds: [B:30:0x0013, B:36:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|int[] r4 = r7.nextKeys\l}"];
Node_33 [shape=record,label="{33\:\ 0x0024|if (r4[r1] == (\-1)) goto L23\l}"];
Node_34 [shape=record,label="{34\:\ 0x0026}"];
Node_35 [shape=record,label="{35\:\ 0x002c|if (r7.variables[r4[r1]] == r3) goto L14\l}"];
Node_36 [shape=record,label="{36\:\ 0x002e|LOOP_END\lLOOP:0: B:32:0x0020\-\>B:36:0x002e\l|r1 = r4[r1]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0031|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0031|r5 = r4[r1]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0033|if (r5 == (\-1)) goto L22\l}"];
Node_39 [shape=record,label="{39\:\ 0x0035}"];
Node_40 [shape=record,label="{40\:\ 0x0039|if (r7.variables[r5] != r3) goto L21\l}"];
Node_41 [shape=record,label="{41\:\ 0x003b|r4[r1] = r4[r5]\lr4[r5] = \-1\l}"];
Node_42 [shape=record,label="{42\:\ 0x0041|RETURN\lORIG_RETURN\l|return\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_43 [shape=record,label="{43\:\ 0x0031|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.core.SolverVariableValues.removeFromHashMap((r7v0 'this' androidx.constraintlayout.core.SolverVariableValues A[IMMUTABLE_TYPE, THIS]), (r8v0 'variable' androidx.constraintlayout.core.SolverVariable A[D('variable' androidx.constraintlayout.core.SolverVariable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:42:0x0041 \-\> B:25:?, BACK_EDGE: B:36:0x002e \-\> B:32:0x0020, CROSS_EDGE: B:41:0x003b \-\> B:42:0x0041, CROSS_EDGE: B:40:0x0039 \-\> B:42:0x0041, CROSS_EDGE: B:38:0x0033 \-\> B:42:0x0041, CROSS_EDGE: B:33:0x0024 \-\> B:37:0x0031\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_25;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_45;
Node_45 -> Node_25;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_43;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_44;
Node_36 -> Node_32;
Node_44 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_46;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_47;
Node_41 -> Node_42;
Node_42 -> Node_25;
Node_47 -> Node_25;
Node_46 -> Node_25;
Node_43 -> Node_37;
}

