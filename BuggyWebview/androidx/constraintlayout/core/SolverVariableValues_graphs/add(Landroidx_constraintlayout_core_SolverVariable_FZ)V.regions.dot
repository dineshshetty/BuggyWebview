digraph "CFG forandroidx.constraintlayout.core.SolverVariableValues.add(Landroidx\/constraintlayout\/core\/SolverVariable;FZ)V" {
subgraph cluster_Region_1631978034 {
label = "R(2:1|(2:(1:5)|(2:7|(2:(2:9|10)|(2:11|(1:(1:15)))))))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0000|float float r0 = androidx.constraintlayout.core.SolverVariableValues.epsilon\l}"];
subgraph cluster_Region_1580759591 {
label = "R(2:(1:5)|(2:7|(2:(2:9|10)|(2:11|(1:(1:15))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1545882949 {
label = "IF [B:22:0x0005, B:24:0x0009] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0005|if (r7 \> (\-r0)) goto L3\l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|ADDED_TO_REGION\l|if (r7 \< r0) goto L5\l}"];
subgraph cluster_Region_801957720 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x000b|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_883099129 {
label = "R(2:7|(2:(2:9|10)|(2:11|(1:(1:15)))))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x000c|int int r0 = indexOf(r6)\l}"];
subgraph cluster_Region_610797165 {
label = "R(2:(2:9|10)|(2:11|(1:(1:15))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1137401324 {
label = "IF [B:27:0x0011] THEN: R(2:9|10) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0011|if (r0 == (\-1)) goto L9\l}"];
subgraph cluster_Region_2081588618 {
label = "R(2:9|10)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0013|put(r6, r7)\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_307073077 {
label = "R(2:11|(1:(1:15)))";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0017|float[] float[] r1 = r5.values\lr1[r0] = r1[r0] + r7\lfloat r2 = r1[r0]\lfloat float r3 = androidx.constraintlayout.core.SolverVariableValues.epsilon\l}"];
subgraph cluster_Region_1634083181 {
label = "R(1:(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1820174684 {
label = "IF [B:30:0x0025, B:32:0x002b] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0025|if (r2 \> (\-r3)) goto L13\l}"];
Node_32 [shape=record,label="{32\:\ 0x002b|ADDED_TO_REGION\l|if (r1[r0] \< r3) goto L15\l}"];
subgraph cluster_Region_1079899623 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x002d|r1[r0] = 0.0f\lremove(r6, r8)\l}"];
}
}
}
}
}
}
}
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0007}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0027}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0033|ORIG_RETURN\l}"];
Node_37 [shape=record,color=red,label="{37\:\ ?|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.SolverVariableValues.add((r5v0 'this' androidx.constraintlayout.core.SolverVariableValues A[IMMUTABLE_TYPE, THIS]), (r6v0 'v' androidx.constraintlayout.core.SolverVariable A[D('v' androidx.constraintlayout.core.SolverVariable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'value' float A[D('value' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'removeFromDefinition' boolean A[D('removeFromDefinition' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0033 \-\> B:20:?, CROSS_EDGE: B:33:0x002d \-\> B:34:0x0033, CROSS_EDGE: B:32:0x002b \-\> B:34:0x0033, CROSS_EDGE: B:30:0x0025 \-\> B:34:0x0033, CROSS_EDGE: B:22:0x0005 \-\> B:26:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.ArrayRow.ArrayRowVariables.add(androidx.constraintlayout.core.SolverVariable, float, boolean):void]\l}"];
MethodNode -> Node_19;Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_26[style=dashed];
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_20;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_35;
Node_35 -> Node_20;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_36[style=dashed];
Node_32 -> Node_33;
Node_32 -> Node_37[style=dashed];
Node_33 -> Node_34;
Node_19 -> Node_21;
Node_23 -> Node_24;
Node_31 -> Node_32;
Node_34 -> Node_20;
Node_37 -> Node_20;
Node_36 -> Node_20;
}

