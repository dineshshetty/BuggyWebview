digraph "CFG forandroidx.constraintlayout.core.SolverVariableValues.use(Landroidx\/constraintlayout\/core\/ArrayRow;Z)F" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IGET  (r0 I:androidx.constraintlayout.core.SolverVariable) = (r9 I:androidx.constraintlayout.core.ArrayRow A[D('def' androidx.constraintlayout.core.ArrayRow)]) androidx.constraintlayout.core.ArrayRow.variable androidx.constraintlayout.core.SolverVariable  (LINE:427)\l0x0002: INVOKE  (r0 I:float) = (r8 I:androidx.constraintlayout.core.SolverVariableValues), (r0 I:androidx.constraintlayout.core.SolverVariable) type: VIRTUAL call: androidx.constraintlayout.core.SolverVariableValues.get(androidx.constraintlayout.core.SolverVariable):float A[MD:(androidx.constraintlayout.core.SolverVariable):float (m)]\l0x0006: IGET  (r1 I:androidx.constraintlayout.core.SolverVariable) = (r9 I:androidx.constraintlayout.core.ArrayRow A[D('def' androidx.constraintlayout.core.ArrayRow)]) androidx.constraintlayout.core.ArrayRow.variable androidx.constraintlayout.core.SolverVariable  (LINE:428)\l0x0008: INVOKE  \l  (r8 I:androidx.constraintlayout.core.SolverVariableValues)\l  (r1 I:androidx.constraintlayout.core.SolverVariable)\l  (r10 I:boolean A[D('removeFromDefinition' boolean)])\l type: VIRTUAL call: androidx.constraintlayout.core.SolverVariableValues.remove(androidx.constraintlayout.core.SolverVariable, boolean):float A[MD:(androidx.constraintlayout.core.SolverVariable, boolean):float (m)]\l0x000b: IGET  (r1 I:androidx.constraintlayout.core.ArrayRow$ArrayRowVariables) = (r9 I:androidx.constraintlayout.core.ArrayRow A[D('def' androidx.constraintlayout.core.ArrayRow)]) androidx.constraintlayout.core.ArrayRow.variables androidx.constraintlayout.core.ArrayRow$ArrayRowVariables  (LINE:439)\l0x000d: CHECK_CAST (r1 I:androidx.constraintlayout.core.SolverVariableValues) = (androidx.constraintlayout.core.SolverVariableValues) (r1 I:??[OBJECT, ARRAY]) \l0x000f: INVOKE  (r2 I:int) = \l  (r1 I:androidx.constraintlayout.core.SolverVariableValues A[D('definition' androidx.constraintlayout.core.SolverVariableValues)])\l type: VIRTUAL call: androidx.constraintlayout.core.SolverVariableValues.getCurrentSize():int A[MD:():int (m)] (LINE:440)\l0x0013: IGET  (r3 I:int) = \l  (r1 I:androidx.constraintlayout.core.SolverVariableValues A[D('definition' androidx.constraintlayout.core.SolverVariableValues)])\l androidx.constraintlayout.core.SolverVariableValues.head int  (LINE:441)\l0x0015: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('j' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:453)\l0x0016: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:454)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0017|LOOP_START\lLOOP:0: B:15:0x0017\-\>B:19:0x0035\l|0x0017: IF  (r3 I:??[int, byte, short, char] A[D('j' int)]) \>= (r2 I:??[int, byte, short, char] A[D('definitionSize' int)])  \-\> B:21:0x0038 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0019|0x0019: IGET  (r5 I:int[]) = \l  (r1 I:androidx.constraintlayout.core.SolverVariableValues A[D('definition' androidx.constraintlayout.core.SolverVariableValues)])\l androidx.constraintlayout.core.SolverVariableValues.variables int[]  (LINE:455)\l0x001b: AGET  (r5 I:??[int, float, short, byte, char]) = (r5 I:??[int, float][]), (r4 I:??[int, short, byte, char] A[D('i' int)]) \l0x001d: CONST  (r6 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x001e|0x001e: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0035 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0020|0x0020: IGET  (r5 I:float[]) = \l  (r1 I:androidx.constraintlayout.core.SolverVariableValues A[D('definition' androidx.constraintlayout.core.SolverVariableValues)])\l androidx.constraintlayout.core.SolverVariableValues.values float[]  (LINE:456)\l0x0022: AGET  (r5 I:??[int, float, short, byte, char]) = (r5 I:??[int, float][]), (r4 I:??[int, short, byte, char] A[D('i' int)]) \l0x0024: IGET  (r6 I:androidx.constraintlayout.core.Cache) = (r8 I:androidx.constraintlayout.core.SolverVariableValues) androidx.constraintlayout.core.SolverVariableValues.mCache androidx.constraintlayout.core.Cache  (LINE:457)\l0x0026: IGET  (r6 I:androidx.constraintlayout.core.SolverVariable[]) = (r6 I:androidx.constraintlayout.core.Cache) androidx.constraintlayout.core.Cache.mIndexedVariables androidx.constraintlayout.core.SolverVariable[] \l0x0028: IGET  (r7 I:int[]) = \l  (r1 I:androidx.constraintlayout.core.SolverVariableValues A[D('definition' androidx.constraintlayout.core.SolverVariableValues)])\l androidx.constraintlayout.core.SolverVariableValues.variables int[] \l0x002a: AGET  (r7 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r4 I:??[int, short, byte, char] A[D('i' int)]) \l0x002c: AGET  (r6 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char]) \l0x002e: ARITH  (r7 I:float) = (r5 I:float A[D('definitionValue' float)]) * (r0 I:float A[D('value' float)])  (LINE:458)\l0x0030: INVOKE  \l  (r8 I:androidx.constraintlayout.core.SolverVariableValues)\l  (r6 I:androidx.constraintlayout.core.SolverVariable A[D('definitionVariable' androidx.constraintlayout.core.SolverVariable)])\l  (r7 I:float)\l  (r10 I:boolean A[D('removeFromDefinition' boolean)])\l type: VIRTUAL call: androidx.constraintlayout.core.SolverVariableValues.add(androidx.constraintlayout.core.SolverVariable, float, boolean):void A[MD:(androidx.constraintlayout.core.SolverVariable, float, boolean):void (m)]\l0x0033: ARITH  (r3 I:int) = (r3 I:int A[D('j' int)]) + (1 int)  (LINE:459)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0035|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0035|LOOP_END\lLOOP:0: B:15:0x0017\-\>B:19:0x0035\l|0x0035: ARITH  (r4 I:int) = (r4 I:int A[D('i' int)]) + (1 int)  (LINE:454)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0035|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0038|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0038|RETURN\l|0x0038: RETURN  (r0 I:float A[D('value' float)])  (LINE:463)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public float androidx.constraintlayout.core.SolverVariableValues.use((r8 'this' I:androidx.constraintlayout.core.SolverVariableValues A[IMMUTABLE_TYPE, THIS]), (r9 I:androidx.constraintlayout.core.ArrayRow A[D('def' androidx.constraintlayout.core.ArrayRow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[D('removeFromDefinition' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0035 \-\> B:15:0x0017, CROSS_EDGE: B:17:0x001e \-\> B:19:0x0035\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0024\-0x0035: r5 'definitionValue' F\l  0x002e\-0x0035: r6 'definitionVariable' Landroidx\/constraintlayout\/core\/SolverVariable;\l  0x0017\-0x0038: r4 'i' I\l  0x0006\-0x0038: r0 'value' F\l  0x000f\-0x0038: r1 'definition' Landroidx\/constraintlayout\/core\/SolverVariableValues;\l  0x0013\-0x0038: r2 'definitionSize' I\l  0x0015\-0x0038: r3 'j' I\l  \-1 \-0x0038: r9 'def' Landroidx\/constraintlayout\/core\/ArrayRow;\l  \-1 \-0x0038: r10 'removeFromDefinition' Z\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.ArrayRow.ArrayRowVariables.use(androidx.constraintlayout.core.ArrayRow, boolean):float]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_22;
Node_22 -> Node_19;
Node_19 -> Node_15;
Node_23 -> Node_19;
Node_21 -> Node_20;
Node_20 -> Node_13;
}

