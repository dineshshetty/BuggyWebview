digraph "CFG forandroidx.constraintlayout.core.SolverVariableValues.getVariable(I)Landroidx\/constraintlayout\/core\/SolverVariable;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|int r0 = r6.mCount\l}"];
Node_23 [shape=record,label="{23\:\ 0x0003|if (r0 != 0) goto L5\l}"];
Node_24 [shape=record,label="{24\:\ 0x0005|RETURN\l|return null\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0006|int r2 = r6.head\lr3 = 0\l}"];
Node_26 [shape=record,label="{26\:\ 0x0009|LOOP_START\lLOOP:0: B:26:0x0009\-\>B:35:0x0022\lPHI: r2 r3 \l  PHI: (r2v1 'j' int) = (r2v0 'j' int), (r2v2 'j' int) binds: [B:25:0x0006, B:35:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v2 'i' int) binds: [B:25:0x0006, B:35:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \>= r0) goto L18\l}"];
Node_27 [shape=record,label="{27\:\ 0x000b}"];
Node_28 [shape=record,label="{28\:\ 0x000c|if (r3 != r7) goto L13\l}"];
Node_29 [shape=record,label="{29\:\ 0x000e|if (r2 == (\-1)) goto L13\l}"];
Node_38 [shape=record,label="{38\:\ 0x0010|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0010}"];
Node_31 [shape=record,label="{31\:\ 0x001a|RETURN\l|return r6.mCache.mIndexedVariables[r6.variables[r2]]\l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|r2 = r6.next[r2]\l}"];
Node_33 [shape=record,label="{33\:\ 0x001f|if (r2 != (\-1)) goto L15\l}"];
Node_35 [shape=record,label="{35\:\ 0x0022|LOOP_END\lLOOP:0: B:26:0x0009\-\>B:35:0x0022\l|int r3 = r3 + 1\l}"];
Node_39 [shape=record,label="{39\:\ 0x0025|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0025|RETURN\l|return null\l}"];
Node_37 [shape=record,label="{37\:\ 0x0025|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public androidx.constraintlayout.core.SolverVariable androidx.constraintlayout.core.SolverVariableValues.getVariable((r6v0 'this' androidx.constraintlayout.core.SolverVariableValues A[IMMUTABLE_TYPE, THIS]), (r7v0 'index' int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x001a \-\> B:21:?, BACK_EDGE: B:35:0x0022 \-\> B:26:0x0009, CROSS_EDGE: B:36:0x0025 \-\> B:21:?, CROSS_EDGE: B:28:0x000c \-\> B:32:0x001b, CROSS_EDGE: B:26:0x0009 \-\> B:36:0x0025\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.ArrayRow.ArrayRowVariables.getVariable(int):androidx.constraintlayout.core.SolverVariable]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_21;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_37;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_32;
Node_29 -> Node_32;
Node_29 -> Node_38[style=dashed];
Node_38 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_32 -> Node_33;
Node_33 -> Node_35;
Node_33 -> Node_39[style=dashed];
Node_35 -> Node_26;
Node_39 -> Node_36;
Node_36 -> Node_21;
Node_37 -> Node_36;
}

