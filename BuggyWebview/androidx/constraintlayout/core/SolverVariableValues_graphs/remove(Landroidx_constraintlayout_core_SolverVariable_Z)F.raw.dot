digraph "CFG forandroidx.constraintlayout.core.SolverVariableValues.remove(Landroidx\/constraintlayout\/core\/SolverVariable;Z)F" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = \l  (r7 I:androidx.constraintlayout.core.SolverVariableValues)\l  (r8 I:androidx.constraintlayout.core.SolverVariable A[D('v' androidx.constraintlayout.core.SolverVariable)])\l type: VIRTUAL call: androidx.constraintlayout.core.SolverVariableValues.indexOf(androidx.constraintlayout.core.SolverVariable):int A[MD:(androidx.constraintlayout.core.SolverVariable):int (m)] (LINE:381)\l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:382)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0009 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0007|RETURN\l|0x0007: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:383)\l0x0008: RETURN  (r1 I:float) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0009|0x0009: INVOKE  \l  (r7 I:androidx.constraintlayout.core.SolverVariableValues)\l  (r8 I:androidx.constraintlayout.core.SolverVariable A[D('v' androidx.constraintlayout.core.SolverVariable)])\l type: DIRECT call: androidx.constraintlayout.core.SolverVariableValues.removeFromHashMap(androidx.constraintlayout.core.SolverVariable):void A[MD:(androidx.constraintlayout.core.SolverVariable):void (m)] (LINE:385)\l0x000c: IGET  (r2 I:float[]) = (r7 I:androidx.constraintlayout.core.SolverVariableValues) androidx.constraintlayout.core.SolverVariableValues.values float[]  (LINE:386)\l0x000e: AGET  (r2 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][]), (r0 I:??[int, short, byte, char] A[D('index' int)]) \l0x0010: IGET  (r3 I:int) = (r7 I:androidx.constraintlayout.core.SolverVariableValues) androidx.constraintlayout.core.SolverVariableValues.head int  (LINE:387)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0012|0x0012: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)])  \-\> B:28:0x001a \l}"];
Node_27 [shape=record,label="{27\:\ 0x0014|0x0014: IGET  (r3 I:int[]) = (r7 I:androidx.constraintlayout.core.SolverVariableValues) androidx.constraintlayout.core.SolverVariableValues.next int[]  (LINE:388)\l0x0016: AGET  (r3 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][]), (r0 I:??[int, short, byte, char] A[D('index' int)]) \l0x0018: IPUT  (r3 I:int), (r7 I:androidx.constraintlayout.core.SolverVariableValues) androidx.constraintlayout.core.SolverVariableValues.head int \l}"];
Node_28 [shape=record,label="{28\:\ 0x001a|0x001a: IGET  (r3 I:int[]) = (r7 I:androidx.constraintlayout.core.SolverVariableValues) androidx.constraintlayout.core.SolverVariableValues.variables int[]  (LINE:390)\l0x001c: APUT  (r3 I:??[int, float][]), (r0 I:??[int, short, byte, char] A[D('index' int)]), (r1 I:??[int, float, short, byte, char]) \l0x001e: IGET  (r3 I:int[]) = (r7 I:androidx.constraintlayout.core.SolverVariableValues) androidx.constraintlayout.core.SolverVariableValues.previous int[]  (LINE:391)\l0x0020: AGET  (r4 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][]), (r0 I:??[int, short, byte, char] A[D('index' int)]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0022|0x0022: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x002c \l}"];
Node_30 [shape=record,label="{30\:\ 0x0024|0x0024: IGET  (r4 I:int[]) = (r7 I:androidx.constraintlayout.core.SolverVariableValues) androidx.constraintlayout.core.SolverVariableValues.next int[]  (LINE:392)\l0x0026: AGET  (r5 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][]), (r0 I:??[int, short, byte, char] A[D('index' int)]) \l0x0028: AGET  (r6 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][]), (r0 I:??[int, short, byte, char] A[D('index' int)]) \l0x002a: APUT  (r4 I:??[int, float][]), (r5 I:??[int, short, byte, char]), (r6 I:??[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x002c|0x002c: IGET  (r4 I:int[]) = (r7 I:androidx.constraintlayout.core.SolverVariableValues) androidx.constraintlayout.core.SolverVariableValues.next int[]  (LINE:394)\l0x002e: AGET  (r5 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][]), (r0 I:??[int, short, byte, char] A[D('index' int)]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0030|0x0030: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0038 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0032|0x0032: AGET  (r1 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][]), (r0 I:??[int, short, byte, char] A[D('index' int)])  (LINE:395)\l0x0034: AGET  (r4 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][]), (r0 I:??[int, short, byte, char] A[D('index' int)]) \l0x0036: APUT  (r3 I:??[int, float][]), (r1 I:??[int, short, byte, char]), (r4 I:??[int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0038|0x0038: IGET  (r1 I:int) = (r7 I:androidx.constraintlayout.core.SolverVariableValues) androidx.constraintlayout.core.SolverVariableValues.mCount int  (LINE:397)\l0x003a: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x003c: IPUT  (r1 I:int), (r7 I:androidx.constraintlayout.core.SolverVariableValues) androidx.constraintlayout.core.SolverVariableValues.mCount int \l0x003e: IGET  (r1 I:int) = (r8 I:androidx.constraintlayout.core.SolverVariable A[D('v' androidx.constraintlayout.core.SolverVariable)]) androidx.constraintlayout.core.SolverVariable.usageInRowCount int  (LINE:398)\l0x0040: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x0042: IPUT  \l  (r1 I:int)\l  (r8 I:androidx.constraintlayout.core.SolverVariable A[D('v' androidx.constraintlayout.core.SolverVariable)])\l androidx.constraintlayout.core.SolverVariable.usageInRowCount int \l}"];
Node_35 [shape=record,label="{35\:\ 0x0044|0x0044: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('removeFromDefinition' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x004b  (LINE:399)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0046|0x0046: IGET  (r1 I:androidx.constraintlayout.core.ArrayRow) = (r7 I:androidx.constraintlayout.core.SolverVariableValues) androidx.constraintlayout.core.SolverVariableValues.mRow androidx.constraintlayout.core.ArrayRow  (LINE:400)\l0x0048: INVOKE  \l  (r8 I:androidx.constraintlayout.core.SolverVariable A[D('v' androidx.constraintlayout.core.SolverVariable)])\l  (r1 I:androidx.constraintlayout.core.ArrayRow)\l type: VIRTUAL call: androidx.constraintlayout.core.SolverVariable.removeFromRow(androidx.constraintlayout.core.ArrayRow):void A[MD:(androidx.constraintlayout.core.ArrayRow):void (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x004b|RETURN\l|0x004b: RETURN  (r2 I:float A[D('value' float)])  (LINE:402)\l}"];
MethodNode[shape=record,label="{public float androidx.constraintlayout.core.SolverVariableValues.remove((r7 'this' I:androidx.constraintlayout.core.SolverVariableValues A[IMMUTABLE_TYPE, THIS]), (r8 I:androidx.constraintlayout.core.SolverVariable A[D('v' androidx.constraintlayout.core.SolverVariable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('removeFromDefinition' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x004b \-\> B:20:?, CROSS_EDGE: B:35:0x0044 \-\> B:37:0x004b, CROSS_EDGE: B:32:0x0030 \-\> B:34:0x0038, CROSS_EDGE: B:29:0x0022 \-\> B:31:0x002c, CROSS_EDGE: B:26:0x0012 \-\> B:28:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x004b: r0 'index' I\l  0x0010\-0x004b: r2 'value' F\l  \-1 \-0x004b: r8 'v' Landroidx\/constraintlayout\/core\/SolverVariable;\l  \-1 \-0x004b: r9 'removeFromDefinition' Z\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.ArrayRow.ArrayRowVariables.remove(androidx.constraintlayout.core.SolverVariable, boolean):float]\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_20;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_20;
}

