digraph "CFG forandroidx.constraintlayout.core.SolverVariableValues.addVariable(ILandroidx\/constraintlayout\/core\/SolverVariable;F)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|r2.variables[r3] = r4.f13id\lr2.values[r3] = r5\lr2.previous[r3] = \-1\lr2.next[r3] = \-1\lr4.addToRow(r2.mRow)\lr4.usageInRowCount = r4.usageInRowCount + 1\lr2.mCount = r2.mCount + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.core.SolverVariableValues.addVariable((r2v0 'this' androidx.constraintlayout.core.SolverVariableValues A[IMMUTABLE_TYPE, THIS]), (r3v0 'index' int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'variable' androidx.constraintlayout.core.SolverVariable A[D('variable' androidx.constraintlayout.core.SolverVariable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'value' float A[D('value' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

