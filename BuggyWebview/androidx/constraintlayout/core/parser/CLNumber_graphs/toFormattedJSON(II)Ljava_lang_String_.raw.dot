digraph "CFG forandroidx.constraintlayout.core.parser.CLNumber.toFormattedJSON(II)Ljava\/lang\/String;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:44)\l0x0002: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0005: INVOKE  \l  (r4 I:androidx.constraintlayout.core.parser.CLNumber)\l  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)])\l  (r5 I:int A[D('indent' int)])\l type: VIRTUAL call: androidx.constraintlayout.core.parser.CLNumber.addIndent(java.lang.StringBuilder, int):void A[MD:(java.lang.StringBuilder, int):void (m)] (LINE:45)\l0x0008: INVOKE  (r1 I:float) = (r4 I:androidx.constraintlayout.core.parser.CLNumber) type: VIRTUAL call: androidx.constraintlayout.core.parser.CLNumber.getFloat():float A[MD:():float (m)] (LINE:46)\l0x000c: CAST (r2 I:int) = (int) (r1 I:float A[D('value' float)])  (LINE:47)\l0x000d: CAST (r3 I:float) = (float) (r2 I:int A[D('intValue' int)])  (LINE:48)\l0x000e: CMP_L  (r3 I:int) = (r3 I:float), (r1 I:float A[D('value' float)]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0010|0x0010: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0016 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|0x0012: INVOKE  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]), (r2 I:int A[D('intValue' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)] (LINE:49)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0019|0x0019: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)] (LINE:53)\l}"];
Node_15 [shape=record,label="{15\:\ 0x001d|RETURN\l|0x001d: RETURN  (r3 I:java.lang.String) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0016|0x0016: INVOKE  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]), (r1 I:float A[D('value' float)]) type: VIRTUAL call: java.lang.StringBuilder.append(float):java.lang.StringBuilder A[MD:(float):java.lang.StringBuilder (c)] (LINE:51)\l}"];
MethodNode[shape=record,label="{protected java.lang.String androidx.constraintlayout.core.parser.CLNumber.toFormattedJSON((r4 'this' I:androidx.constraintlayout.core.parser.CLNumber A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('indent' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('forceIndent' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0016 \-\> B:14:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x001d: r0 'json' Ljava\/lang\/StringBuilder;\l  0x000c\-0x001d: r1 'value' F\l  0x000d\-0x001d: r2 'intValue' I\l  \-1 \-0x001d: r5 'indent' I\l  \-1 \-0x001d: r6 'forceIndent' I\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.parser.CLElement.toFormattedJSON(int, int):java.lang.String]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

