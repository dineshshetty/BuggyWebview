digraph "CFG forandroidx.constraintlayout.core.parser.CLKey.toFormattedJSON(II)Ljava\/lang\/String;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|java.lang.StringBuilder r0 = new java.lang.StringBuilder(getDebugName())\laddIndent(r0, r7)\ljava.lang.String r1 = content()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|if (r6.mElements.size() \<= 0) goto L16\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|r0.append(r1)\lr0.append(\": \")\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|if (androidx.constraintlayout.core.parser.CLKey.sections.contains(r1) == false) goto L6\l}"];
Node_24 [shape=record,label="{24\:\ 0x0028|r8 = 3\l}"];
Node_25 [shape=record,label="{25\:\ 0x0029|PHI: r8 \l  PHI: (r8v1 'forceIndent' int) = (r8v0 'forceIndent' int), (r8v2 'forceIndent' int) binds: [B:23:0x0026, B:24:0x0028] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x002a|if (r8 \<= 0) goto L12\l}"];
Node_27 [shape=record,label="{27\:\ 0x002c|r0.append(r6.mElements.get(0).toFormattedJSON(r7, r8 + (\-1)))\l}"];
Node_32 [shape=record,label="{32\:\ 0x0068}"];
Node_33 [shape=record,label="{33\:\ 0x006c|RETURN\l|return r0.toString()\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x003e|java.lang.String r3 = r6.mElements.get(0).toJSON()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0051|if ((r3.length() + r7) \>= androidx.constraintlayout.core.parser.CLKey.MAX_LINE) goto L15\l}"];
Node_30 [shape=record,label="{30\:\ 0x0053|r0.append(r3)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0057|r0.append(r6.mElements.get(0).toFormattedJSON(r7, r8 + (\-1)))\l}"];
Node_34 [shape=record,label="{34\:\ 0x006d|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(r1)\lr2.append(\": \<\> \")\l}"];
Node_35 [shape=record,label="{35\:\ 0x007e|RETURN\l|return r2.toString()\l}"];
MethodNode[shape=record,label="{public java.lang.String androidx.constraintlayout.core.parser.CLKey.toFormattedJSON((r6v0 'this' androidx.constraintlayout.core.parser.CLKey A[IMMUTABLE_TYPE, THIS]), (r7v0 'indent' int A[D('indent' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'forceIndent' int A[D('forceIndent' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0053 \-\> B:32:0x0068, CROSS_EDGE: B:31:0x0057 \-\> B:32:0x0068, CROSS_EDGE: B:23:0x0026 \-\> B:25:0x0029, CROSS_EDGE: B:35:0x007e \-\> B:19:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.parser.CLElement.toFormattedJSON(int, int):java.lang.String]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_34;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_34 -> Node_35;
Node_35 -> Node_19;
}

