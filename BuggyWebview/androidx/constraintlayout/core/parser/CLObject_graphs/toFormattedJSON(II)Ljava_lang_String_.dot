digraph "CFG forandroidx.constraintlayout.core.parser.CLObject.toFormattedJSON(II)Ljava\/lang\/String;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|java.lang.StringBuilder r0 = new java.lang.StringBuilder(getDebugName())\lr0.append(\"\{n\")\lr1 = true\ljava.util.Iterator r2 = r6.mElements.iterator()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0015|LOOP_START\lLOOP:0: B:18:0x0015\-\>B:24:0x002a\lPHI: r1 \l  PHI: (r1v3 'first' boolean) = (r1v2 'first' boolean), (r1v5 'first' boolean) binds: [B:17:0x0000, B:24:0x002a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|if (r2.hasNext() == false) goto L11\l}"];
Node_20 [shape=record,label="{20\:\ 0x001b|androidx.constraintlayout.core.parser.CLElement r3 = r2.next()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0021|if (r1 != false) goto L9\l}"];
Node_22 [shape=record,label="{22\:\ 0x0023|r0.append(\",n\")\l}"];
Node_29 [shape=record,label="{29\:\ 0x002a|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x002a|LOOP_END\lLOOP:0: B:18:0x0015\-\>B:24:0x002a\lPHI: r1 \l  PHI: (r1v5 'first' boolean) = (r1v4 'first' boolean), (r1v3 'first' boolean) binds: [B:28:0x002a, B:29:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|r0.append(r3.toFormattedJSON(androidx.constraintlayout.core.parser.CLObject.BASE_INDENT + r7, r8 + (\-1)))\l}"];
Node_23 [shape=record,label="{23\:\ 0x0029|r1 = false\l}"];
Node_28 [shape=record,label="{28\:\ 0x002a|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0037|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0037|r0.append(\"n\")\laddIndent(r0, r7)\lr0.append(\"\}\")\l}"];
Node_26 [shape=record,label="{26\:\ 0x0048|RETURN\l|return r0.toString()\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.String androidx.constraintlayout.core.parser.CLObject.toFormattedJSON((r6v0 'this' androidx.constraintlayout.core.parser.CLObject A[IMMUTABLE_TYPE, THIS]), (r7v0 'indent' int A[D('indent' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'forceIndent' int A[D('forceIndent' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x002a \-\> B:18:0x0015, CROSS_EDGE: B:23:0x0029 \-\> B:24:0x002a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.parser.CLElement.toFormattedJSON(int, int):java.lang.String]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_29;
Node_29 -> Node_24;
Node_24 -> Node_18;
Node_23 -> Node_28;
Node_28 -> Node_24;
Node_27 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_16;
}

