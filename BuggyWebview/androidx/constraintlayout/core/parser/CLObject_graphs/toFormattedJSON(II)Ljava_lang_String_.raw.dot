digraph "CFG forandroidx.constraintlayout.core.parser.CLObject.toFormattedJSON(II)Ljava\/lang\/String;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:50)\l0x0002: INVOKE  (r1 I:java.lang.String) = (r6 I:androidx.constraintlayout.core.parser.CLObject) type: VIRTUAL call: androidx.constraintlayout.core.parser.CLObject.getDebugName():java.lang.String A[MD:():java.lang.String (m)]\l0x0006: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: DIRECT call: java.lang.StringBuilder.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x0009: CONST_STR  (r1 I:java.lang.String) =  \"\{n\"  (LINE:51)\l0x000b: INVOKE  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x000e: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:52)\l0x000f: IGET  (r2 I:java.util.ArrayList\<androidx.constraintlayout.core.parser.CLElement\>) = (r6 I:androidx.constraintlayout.core.parser.CLObject) androidx.constraintlayout.core.parser.CLObject.mElements java.util.ArrayList  (LINE:53)\l0x0011: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0015|LOOP_START\lLOOP:0: B:18:0x0015\-\>B:24:0x002a\l|0x0015: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|0x0019: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0037 \l}"];
Node_20 [shape=record,label="{20\:\ 0x001b|0x001b: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001f: CHECK_CAST (r3 I:androidx.constraintlayout.core.parser.CLElement) = (androidx.constraintlayout.core.parser.CLElement) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0021|0x0021: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('first' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0029  (LINE:54)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0023|0x0023: CONST_STR  (r4 I:java.lang.String) =  \",n\"  (LINE:55)\l0x0025: INVOKE  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x002a|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x002a|LOOP_END\lLOOP:0: B:18:0x0015\-\>B:24:0x002a\l|0x002a: SGET  (r4 I:int) =  androidx.constraintlayout.core.parser.CLObject.BASE_INDENT int  (LINE:59)\l0x002c: ARITH  (r4 I:int) = (r4 I:int) + (r7 I:int A[D('indent' int)]) \l0x002d: ARITH  (r5 I:int) = (r8 I:int A[D('forceIndent' int)]) + (\-1 int) \l0x002f: INVOKE  (r4 I:java.lang.String) = \l  (r3 I:androidx.constraintlayout.core.parser.CLElement A[D('element' androidx.constraintlayout.core.parser.CLElement)])\l  (r4 I:int)\l  (r5 I:int)\l type: VIRTUAL call: androidx.constraintlayout.core.parser.CLElement.toFormattedJSON(int, int):java.lang.String A[MD:(int, int):java.lang.String (m)]\l0x0033: INVOKE  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0029|0x0029: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('first' boolean)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:57)\l}"];
Node_28 [shape=record,label="{28\:\ 0x002a|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0037|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0037|0x0037: CONST_STR  (r2 I:java.lang.String) =  \"n\"  (LINE:61)\l0x0039: INVOKE  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003c: INVOKE  \l  (r6 I:androidx.constraintlayout.core.parser.CLObject)\l  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)])\l  (r7 I:int A[D('indent' int)])\l type: VIRTUAL call: androidx.constraintlayout.core.parser.CLObject.addIndent(java.lang.StringBuilder, int):void A[MD:(java.lang.StringBuilder, int):void (m)] (LINE:62)\l0x003f: CONST_STR  (r2 I:java.lang.String) =  \"\}\"  (LINE:63)\l0x0041: INVOKE  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0044: INVOKE  (r2 I:java.lang.String) = (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)] (LINE:64)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0048|RETURN\l|0x0048: RETURN  (r2 I:java.lang.String) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.String androidx.constraintlayout.core.parser.CLObject.toFormattedJSON((r6 'this' I:androidx.constraintlayout.core.parser.CLObject A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('indent' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('forceIndent' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x002a \-\> B:18:0x0015, CROSS_EDGE: B:23:0x0029 \-\> B:24:0x002a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x0036: r3 'element' Landroidx\/constraintlayout\/core\/parser\/CLElement;\l  0x0009\-0x0048: r0 'json' Ljava\/lang\/StringBuilder;\l  0x000f\-0x0048: r1 'first' Z\l  \-1 \-0x0048: r7 'indent' I\l  \-1 \-0x0048: r8 'forceIndent' I\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.parser.CLElement.toFormattedJSON(int, int):java.lang.String]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_29;
Node_29 -> Node_24;
Node_24 -> Node_18;
Node_23 -> Node_28;
Node_28 -> Node_24;
Node_27 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_16;
}

