digraph "CFG forandroidx.constraintlayout.core.parser.CLArray.toFormattedJSON(II)Ljava\/lang\/String;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\ljava.lang.String r1 = toJSON()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|if (r9 \> 0) goto L9\l}"];
Node_25 [shape=record,label="{25\:\ 0x000b}"];
Node_26 [shape=record,label="{26\:\ 0x0012|if ((r1.length() + r8) \>= androidx.constraintlayout.core.parser.CLArray.MAX_LINE) goto L9\l}"];
Node_27 [shape=record,label="{27\:\ 0x0014|r0.append(r1)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0059}"];
Node_38 [shape=record,label="{38\:\ 0x005d|RETURN\l|return r0.toString()\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|r0.append(\"[n\")\lr2 = true\ljava.util.Iterator r3 = r7.mElements.iterator()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0024|LOOP_START\lLOOP:0: B:29:0x0024\-\>B:35:0x0039\lPHI: r2 \l  PHI: (r2v2 'first' boolean) = (r2v1 'first' boolean), (r2v4 'first' boolean) binds: [B:28:0x0018, B:35:0x0039] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0028|if (r3.hasNext() == false) goto L19\l}"];
Node_31 [shape=record,label="{31\:\ 0x002a|androidx.constraintlayout.core.parser.CLElement r4 = r3.next()\l}"];
Node_32 [shape=record,label="{32\:\ 0x0030|if (r2 != false) goto L17\l}"];
Node_33 [shape=record,label="{33\:\ 0x0032|r0.append(\",n\")\l}"];
Node_41 [shape=record,label="{41\:\ 0x0039|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0039|LOOP_END\lLOOP:0: B:29:0x0024\-\>B:35:0x0039\lPHI: r2 \l  PHI: (r2v4 'first' boolean) = (r2v3 'first' boolean), (r2v2 'first' boolean) binds: [B:40:0x0039, B:41:0x0039] A[DONT_GENERATE, DONT_INLINE]\l|addIndent(r0, androidx.constraintlayout.core.parser.CLArray.BASE_INDENT + r8)\lr0.append(r4.toFormattedJSON(androidx.constraintlayout.core.parser.CLArray.BASE_INDENT + r8, r9 + (\-1)))\l}"];
Node_34 [shape=record,label="{34\:\ 0x0038|r2 = false\l}"];
Node_40 [shape=record,label="{40\:\ 0x0039|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x004c|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x004c|r0.append(\"n\")\laddIndent(r0, r8)\lr0.append(\"]\")\l}"];
MethodNode[shape=record,label="{public java.lang.String androidx.constraintlayout.core.parser.CLArray.toFormattedJSON((r7v0 'this' androidx.constraintlayout.core.parser.CLArray A[IMMUTABLE_TYPE, THIS]), (r8v0 'indent' int A[D('indent' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'forceIndent' int A[D('forceIndent' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:35:0x0039 \-\> B:29:0x0024, CROSS_EDGE: B:34:0x0038 \-\> B:35:0x0039, CROSS_EDGE: B:36:0x004c \-\> B:37:0x0059, CROSS_EDGE: B:24:0x0009 \-\> B:28:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.parser.CLElement.toFormattedJSON(int, int):java.lang.String]\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_22;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_39;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_41;
Node_41 -> Node_35;
Node_35 -> Node_29;
Node_34 -> Node_40;
Node_40 -> Node_35;
Node_39 -> Node_36;
Node_36 -> Node_37;
}

