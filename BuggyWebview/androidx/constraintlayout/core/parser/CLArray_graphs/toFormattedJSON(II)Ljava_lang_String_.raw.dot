digraph "CFG forandroidx.constraintlayout.core.parser.CLArray.toFormattedJSON(II)Ljava\/lang\/String;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:42)\l0x0002: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0005: INVOKE  (r1 I:java.lang.String) = (r7 I:androidx.constraintlayout.core.parser.CLArray) type: VIRTUAL call: androidx.constraintlayout.core.parser.CLArray.toJSON():java.lang.String A[MD:():java.lang.String (m)] (LINE:43)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|0x0009: IF  (r9 I:??[int, byte, short, char] A[D('forceIndent' int)]) \> (0 ??[int, byte, short, char])  \-\> B:28:0x0018  (LINE:44)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000b|0x000b: INVOKE  (r2 I:int) = (r1 I:java.lang.String A[D('val' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)]\l0x000f: ARITH  (r2 I:int) = (r2 I:int) + (r8 I:int A[D('indent' int)]) \l0x0010: SGET  (r3 I:int) =  androidx.constraintlayout.core.parser.CLArray.MAX_LINE int \l}"];
Node_26 [shape=record,label="{26\:\ 0x0012|0x0012: IF  (r2 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:28:0x0018 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0014|0x0014: INVOKE  \l  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)])\l  (r1 I:java.lang.String A[D('val' java.lang.String)])\l type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)] (LINE:45)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0059|0x0059: INVOKE  (r2 I:java.lang.String) = (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)] (LINE:62)\l}"];
Node_38 [shape=record,label="{38\:\ 0x005d|RETURN\l|0x005d: RETURN  (r2 I:java.lang.String) \l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|0x0018: CONST_STR  (r2 I:java.lang.String) =  \"[n\"  (LINE:47)\l0x001a: INVOKE  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001d: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:48)\l0x001e: IGET  (r3 I:java.util.ArrayList\<androidx.constraintlayout.core.parser.CLElement\>) = (r7 I:androidx.constraintlayout.core.parser.CLArray) androidx.constraintlayout.core.parser.CLArray.mElements java.util.ArrayList  (LINE:49)\l0x0020: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0024|LOOP_START\lLOOP:0: B:29:0x0024\-\>B:35:0x0039\l|0x0024: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0028|0x0028: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x004c \l}"];
Node_31 [shape=record,label="{31\:\ 0x002a|0x002a: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x002e: CHECK_CAST (r4 I:androidx.constraintlayout.core.parser.CLElement) = (androidx.constraintlayout.core.parser.CLElement) (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0030|0x0030: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('first' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0038  (LINE:50)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0032|0x0032: CONST_STR  (r5 I:java.lang.String) =  \",n\"  (LINE:51)\l0x0034: INVOKE  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0039|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0039|LOOP_END\lLOOP:0: B:29:0x0024\-\>B:35:0x0039\l|0x0039: SGET  (r5 I:int) =  androidx.constraintlayout.core.parser.CLArray.BASE_INDENT int  (LINE:55)\l0x003b: ARITH  (r5 I:int) = (r5 I:int) + (r8 I:int A[D('indent' int)]) \l0x003c: INVOKE  \l  (r7 I:androidx.constraintlayout.core.parser.CLArray)\l  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)])\l  (r5 I:int)\l type: VIRTUAL call: androidx.constraintlayout.core.parser.CLArray.addIndent(java.lang.StringBuilder, int):void A[MD:(java.lang.StringBuilder, int):void (m)]\l0x003f: SGET  (r5 I:int) =  androidx.constraintlayout.core.parser.CLArray.BASE_INDENT int  (LINE:56)\l0x0041: ARITH  (r5 I:int) = (r5 I:int) + (r8 I:int A[D('indent' int)]) \l0x0042: ARITH  (r6 I:int) = (r9 I:int A[D('forceIndent' int)]) + (\-1 int) \l0x0044: INVOKE  (r5 I:java.lang.String) = \l  (r4 I:androidx.constraintlayout.core.parser.CLElement A[D('element' androidx.constraintlayout.core.parser.CLElement)])\l  (r5 I:int)\l  (r6 I:int)\l type: VIRTUAL call: androidx.constraintlayout.core.parser.CLElement.toFormattedJSON(int, int):java.lang.String A[MD:(int, int):java.lang.String (m)]\l0x0048: INVOKE  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0038|0x0038: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('first' boolean)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:53)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0039|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x004c|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x004c|0x004c: CONST_STR  (r3 I:java.lang.String) =  \"n\"  (LINE:58)\l0x004e: INVOKE  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0051: INVOKE  \l  (r7 I:androidx.constraintlayout.core.parser.CLArray)\l  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)])\l  (r8 I:int A[D('indent' int)])\l type: VIRTUAL call: androidx.constraintlayout.core.parser.CLArray.addIndent(java.lang.StringBuilder, int):void A[MD:(java.lang.StringBuilder, int):void (m)] (LINE:59)\l0x0054: CONST_STR  (r3 I:java.lang.String) =  \"]\"  (LINE:60)\l0x0056: INVOKE  (r0 I:java.lang.StringBuilder A[D('json' java.lang.StringBuilder)]), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
MethodNode[shape=record,label="{public java.lang.String androidx.constraintlayout.core.parser.CLArray.toFormattedJSON((r7 'this' I:androidx.constraintlayout.core.parser.CLArray A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('indent' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('forceIndent' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:35:0x0039 \-\> B:29:0x0024, CROSS_EDGE: B:34:0x0038 \-\> B:35:0x0039, CROSS_EDGE: B:36:0x004c \-\> B:37:0x0059, CROSS_EDGE: B:24:0x0009 \-\> B:28:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0030\-0x004b: r4 'element' Landroidx\/constraintlayout\/core\/parser\/CLElement;\l  0x001e\-0x0059: r2 'first' Z\l  0x0005\-0x005d: r0 'json' Ljava\/lang\/StringBuilder;\l  0x0009\-0x005d: r1 'val' Ljava\/lang\/String;\l  \-1 \-0x005d: r8 'indent' I\l  \-1 \-0x005d: r9 'forceIndent' I\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.parser.CLElement.toFormattedJSON(int, int):java.lang.String]\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_22;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_39;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_41;
Node_41 -> Node_35;
Node_35 -> Node_29;
Node_34 -> Node_40;
Node_40 -> Node_35;
Node_39 -> Node_36;
Node_36 -> Node_37;
}

