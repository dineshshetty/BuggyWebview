digraph "CFG forandroidx.constraintlayout.core.parser.CLToken.getBoolean()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r3.type != androidx.constraintlayout.core.parser.CLToken.Type.TRUE) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|return true\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008}"];
Node_7 [shape=record,label="{7\:\ 0x000c|if (r3.type != androidx.constraintlayout.core.parser.CLToken.Type.FALSE) goto L8\l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|RETURN\l|return false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0010|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"this token is not a boolean: \<\")\lr1.append(content())\lr1.append(\"\>\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|throw new androidx.constraintlayout.core.parser.CLParsingException(r1.toString(), r3)\l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.core.parser.CLToken.getBoolean((r3v0 'this' androidx.constraintlayout.core.parser.CLToken A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x000f \-\> B:1:?, CROSS_EDGE: B:11:0x002f \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Landroidx\/constraintlayout\/core\/parser\/CLParsingException;]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_1;
}

