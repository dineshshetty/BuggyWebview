digraph "CFG forandroidx.constraintlayout.core.parser.CLToken.allocate([C)Landroidx\/constraintlayout\/core\/parser\/CLElement;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:androidx.constraintlayout.core.parser.CLToken) =  androidx.constraintlayout.core.parser.CLToken  (LINE:50)\l0x0002: INVOKE  (r0 I:androidx.constraintlayout.core.parser.CLToken), (r1 I:char[] A[D('content' char[])]) type: DIRECT call: androidx.constraintlayout.core.parser.CLToken.\<init\>(char[]):void A[MD:(char[]):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|RETURN\l|0x0005: RETURN  (r0 I:androidx.constraintlayout.core.parser.CLElement) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static androidx.constraintlayout.core.parser.CLElement androidx.constraintlayout.core.parser.CLToken.allocate((r1 I:char[] A[D('content' char[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0005: r1 'content' [C\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

