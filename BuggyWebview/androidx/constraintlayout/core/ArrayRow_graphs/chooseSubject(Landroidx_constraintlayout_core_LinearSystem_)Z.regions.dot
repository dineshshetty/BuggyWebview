digraph "CFG forandroidx.constraintlayout.core.ArrayRow.chooseSubject(Landroidx\/constraintlayout\/core\/LinearSystem;)Z" {
subgraph cluster_Region_1461447397 {
label = "R(4:1|(1:3)(1:9)|(1:6)|7)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|boolean r0 = false\landroidx.constraintlayout.core.SolverVariable androidx.constraintlayout.core.SolverVariable r1 = chooseSubjectInVariables(r4)\l}"];
subgraph cluster_IfRegion_715574266 {
label = "IF [B:13:0x0005] THEN: R(1:3) ELSE: R(1:9)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0005|if (r1 == null) goto L3\l}"];
subgraph cluster_Region_1184245066 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0007|r0 = true\l}"];
}
subgraph cluster_Region_1610631734 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0009|pivot(r1)\l}"];
}
}
subgraph cluster_IfRegion_519136527 {
label = "IF [B:17:0x0012] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0012|if (r3.variables.getCurrentSize() == 0) goto L6\l}"];
subgraph cluster_Region_142415686 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0014|r3.isSimpleDefinition = true\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x0017|RETURN\l|return r0\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000c|PHI: r0 \l  PHI: (r0v1 'addedExtra' boolean) = (r0v0 'addedExtra' boolean), (r0v2 'addedExtra' boolean) binds: [B:15:0x0009, B:14:0x0007] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.core.ArrayRow.chooseSubject((r3v0 'this' androidx.constraintlayout.core.ArrayRow A[IMMUTABLE_TYPE, THIS]), (r4v0 'system' androidx.constraintlayout.core.LinearSystem A[D('system' androidx.constraintlayout.core.LinearSystem), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0012 \-\> B:19:0x0017, CROSS_EDGE: B:15:0x0009 \-\> B:16:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_11;
Node_10 -> Node_12;
Node_16 -> Node_17;
}

