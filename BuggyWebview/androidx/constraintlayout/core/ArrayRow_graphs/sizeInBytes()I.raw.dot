digraph "CFG forandroidx.constraintlayout.core.ArrayRow.sizeInBytes()I" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:402)\l0x0001: IGET  (r1 I:androidx.constraintlayout.core.SolverVariable) = (r2 I:androidx.constraintlayout.core.ArrayRow) androidx.constraintlayout.core.ArrayRow.variable androidx.constraintlayout.core.SolverVariable  (LINE:403)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0003|0x0003: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0007 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0005|0x0005: ARITH  (r0 I:int) = (r0 I:int A[D('size' int)]) + (4 int)  (LINE:404)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0007|0x0007: ARITH  (r0 I:int) = (r0 I:int A[D('size' int)]) + (4 int)  (LINE:406)\l0x0009: ARITH  (r0 I:int) = (r0 I:int A[D('size' int)]) + (4 int)  (LINE:407)\l0x000b: IGET  (r1 I:androidx.constraintlayout.core.ArrayRow$ArrayRowVariables) = (r2 I:androidx.constraintlayout.core.ArrayRow) androidx.constraintlayout.core.ArrayRow.variables androidx.constraintlayout.core.ArrayRow$ArrayRowVariables  (LINE:409)\l0x000d: INVOKE  (r1 I:int) = (r1 I:androidx.constraintlayout.core.ArrayRow$ArrayRowVariables) type: INTERFACE call: androidx.constraintlayout.core.ArrayRow.ArrayRowVariables.sizeInBytes():int A[MD:():int (m)]\l0x0011: ARITH  (r0 I:int) = (r0 I:int A[D('size' int)]) + (r1 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0012|RETURN\l|0x0012: RETURN  (r0 I:int A[D('size' int)])  (LINE:410)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int androidx.constraintlayout.core.ArrayRow.sizeInBytes((r2 'this' I:androidx.constraintlayout.core.ArrayRow A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0003 \-\> B:12:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0012: r0 'size' I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

