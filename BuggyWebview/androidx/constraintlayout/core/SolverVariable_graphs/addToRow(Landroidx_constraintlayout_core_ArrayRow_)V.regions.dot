digraph "CFG forandroidx.constraintlayout.core.SolverVariable.addToRow(Landroidx\/constraintlayout\/core\/ArrayRow;)V" {
subgraph cluster_Region_302516110 {
label = "R(2:1|(2:2|(1:(1:6)(1:8))(4:11|(1:13)|14|15)))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0000|int r0 = 0\l}"];
subgraph cluster_LoopRegion_1569112097 {
label = "LOOP:0: (2:2|(1:(1:6)(1:8))(4:11|(1:13)|14|15))";
node [shape=record,color=blue];
subgraph cluster_Region_1111995490 {
label = "R(2:2|(1:(1:6)(1:8))(4:11|(1:13)|14|15))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0001|LOOP_START\lLOOP:0: B:19:0x0001\-\>B:24:0x000c\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v6 'i' int) binds: [B:18:0x0000, B:24:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|int int r1 = r3.mClientEquationsCount\l}"];
subgraph cluster_IfRegion_1762838894 {
label = "IF [B:20:0x0003] THEN: R(1:(1:6)(1:8)) ELSE: R(4:11|(1:13)|14|15)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0003|if (r0 \< r1) goto L4\l}"];
subgraph cluster_Region_632886156 {
label = "R(1:(1:6)(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_279045519 {
label = "IF [B:22:0x0009] THEN: R(1:6) ELSE: R(1:8)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0009|if (r3.mClientEquations[r0] != r4) goto L6\l}"];
subgraph cluster_Region_439270835 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x000c|LOOP_END\lLOOP:0: B:19:0x0001\-\>B:24:0x000c\l|r0++\l}"];
}
subgraph cluster_Region_1992325441 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000b|RETURN\l|return\l}"];
}
}
}
subgraph cluster_Region_1380827094 {
label = "R(4:11|(1:13)|14|15)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x000f|androidx.constraintlayout.core.ArrayRow[] androidx.constraintlayout.core.ArrayRow[] r0 = r3.mClientEquations\l}"];
subgraph cluster_IfRegion_770398908 {
label = "IF [B:26:0x0012] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0012|if (r1 \>= r0.length) goto L13\l}"];
subgraph cluster_Region_1298118029 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0014|r3.mClientEquations = (androidx.constraintlayout.core.ArrayRow[]) java.util.Arrays.copyOf(r0, r0.length * 2)\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x001f|androidx.constraintlayout.core.ArrayRow[] androidx.constraintlayout.core.ArrayRow[] r0 = r3.mClientEquations\lint int r1 = r3.mClientEquationsCount\lr0[r1] = r4\lr3.mClientEquationsCount = r1 + 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x0029|RETURN\l|return\l}"];
}
}
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0005}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x000b|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x000f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final void androidx.constraintlayout.core.SolverVariable.addToRow((r3v0 'this' androidx.constraintlayout.core.SolverVariable A[IMMUTABLE_TYPE, THIS]), (r4v0 'row' androidx.constraintlayout.core.ArrayRow A[D('row' androidx.constraintlayout.core.ArrayRow), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x000c \-\> B:19:0x0001, CROSS_EDGE: B:29:0x0029 \-\> B:17:?, CROSS_EDGE: B:26:0x0012 \-\> B:28:0x001f\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_16;Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_30[style=dashed];
Node_22 -> Node_24;
Node_22 -> Node_31[style=dashed];
Node_24 -> Node_19;
Node_23 -> Node_17;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_17;
Node_16 -> Node_18;
Node_21 -> Node_22;
Node_31 -> Node_23;
Node_30 -> Node_25;
}

