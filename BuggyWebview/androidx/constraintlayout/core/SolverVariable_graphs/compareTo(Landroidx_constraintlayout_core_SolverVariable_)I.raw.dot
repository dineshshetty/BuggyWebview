digraph "CFG forandroidx.constraintlayout.core.SolverVariable.compareTo(Landroidx\/constraintlayout\/core\/SolverVariable;)I" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r2 I:androidx.constraintlayout.core.SolverVariable) androidx.constraintlayout.core.SolverVariable.id int  (LINE:300)\l0x0002: IGET  (r1 I:int) = (r3 I:androidx.constraintlayout.core.SolverVariable A[D('v' androidx.constraintlayout.core.SolverVariable)]) androidx.constraintlayout.core.SolverVariable.id int \l0x0004: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0005|RETURN\l|0x0005: RETURN  (r0 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int androidx.constraintlayout.core.SolverVariable.compareTo((r2 'this' I:androidx.constraintlayout.core.SolverVariable A[IMMUTABLE_TYPE, THIS]), (r3 I:androidx.constraintlayout.core.SolverVariable A[D('v' androidx.constraintlayout.core.SolverVariable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0005: r3 'v' Landroidx\/constraintlayout\/core\/SolverVariable;\lREPLACED_BY: androidx.constraintlayout.core.SolverVariable.compareTo(androidx.constraintlayout.core.SolverVariable):int\lBRIDGED_BY: androidx.constraintlayout.core.SolverVariable.compareTo(androidx.constraintlayout.core.SolverVariable):int\lMETHOD_OVERRIDE: [ClspMth\{java.lang.Comparable.compareTo(T):int\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

