digraph "CFG forandroidx.constraintlayout.core.SolverVariable.getUniqueName(Landroidx\/constraintlayout\/core\/SolverVariable$Type;Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('prefix' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0014  (LINE:103)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0002|0x0002: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:104)\l0x0004: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0007: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String A[D('prefix' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x000a: SGET  (r1 I:int) =  androidx.constraintlayout.core.SolverVariable.uniqueErrorId int \l0x000c: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x000f: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:java.lang.String) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0014|0x0014: SGET  (r0 I:int[]) =  androidx.constraintlayout.core.SolverVariable.1.$SwitchMap$androidx$constraintlayout$core$SolverVariable$Type int[]  (LINE:106)\l0x0016: INVOKE  (r1 I:int) = \l  (r2 I:androidx.constraintlayout.core.SolverVariable$Type A[D('type' androidx.constraintlayout.core.SolverVariable$Type)])\l type: VIRTUAL call: androidx.constraintlayout.core.SolverVariable.Type.ordinal():int A[MD:():int (c)]\l0x001a: AGET  (r0 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][]), (r1 I:??[int, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x001c|0x001c: SWITCH  (r0 I:??)\l case 1: goto B:36:0x0089\l case 2: goto B:34:0x0071\l case 3: goto B:32:0x0059\l case 4: goto B:30:0x0041\l case 5: goto B:28:0x0029\l default: goto B:26:0x001f \l}"];
Node_26 [shape=record,label="{26\:\ 0x001f|0x001f: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError  (LINE:116)\l0x0021: INVOKE  (r1 I:java.lang.String) = \l  (r2 I:androidx.constraintlayout.core.SolverVariable$Type A[D('type' androidx.constraintlayout.core.SolverVariable$Type)])\l type: VIRTUAL call: androidx.constraintlayout.core.SolverVariable.Type.name():java.lang.String A[MD:():java.lang.String (c)]\l0x0025: INVOKE  (r0 I:java.lang.AssertionError), (r1 I:java.lang.Object) type: DIRECT call: java.lang.AssertionError.\<init\>(java.lang.Object):void A[MD:(java.lang.Object):void (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0028|0x0028: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0029|0x0029: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:114)\l0x002b: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x002e: CONST_STR  (r1 I:java.lang.String) =  \"V\" \l0x0030: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0033: SGET  (r1 I:int) =  androidx.constraintlayout.core.SolverVariable.uniqueId int \l0x0035: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0037: SPUT  (r1 I:int) androidx.constraintlayout.core.SolverVariable.uniqueId int \l0x0039: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x003c: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0040|RETURN\l|0x0040: RETURN  (r0 I:java.lang.String) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0041|0x0041: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:111)\l0x0043: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0046: CONST_STR  (r1 I:java.lang.String) =  \"e\" \l0x0048: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004b: SGET  (r1 I:int) =  androidx.constraintlayout.core.SolverVariable.uniqueErrorId int \l0x004d: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x004f: SPUT  (r1 I:int) androidx.constraintlayout.core.SolverVariable.uniqueErrorId int \l0x0051: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0054: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0058|RETURN\l|0x0058: RETURN  (r0 I:java.lang.String) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0059|0x0059: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:109)\l0x005b: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x005e: CONST_STR  (r1 I:java.lang.String) =  \"S\" \l0x0060: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0063: SGET  (r1 I:int) =  androidx.constraintlayout.core.SolverVariable.uniqueSlackId int \l0x0065: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0067: SPUT  (r1 I:int) androidx.constraintlayout.core.SolverVariable.uniqueSlackId int \l0x0069: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x006c: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0070|RETURN\l|0x0070: RETURN  (r0 I:java.lang.String) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0071|0x0071: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:108)\l0x0073: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0076: CONST_STR  (r1 I:java.lang.String) =  \"C\" \l0x0078: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x007b: SGET  (r1 I:int) =  androidx.constraintlayout.core.SolverVariable.uniqueConstantId int \l0x007d: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x007f: SPUT  (r1 I:int) androidx.constraintlayout.core.SolverVariable.uniqueConstantId int \l0x0081: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0084: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0088|RETURN\l|0x0088: RETURN  (r0 I:java.lang.String) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0089|0x0089: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:107)\l0x008b: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x008e: CONST_STR  (r1 I:java.lang.String) =  \"U\" \l0x0090: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0093: SGET  (r1 I:int) =  androidx.constraintlayout.core.SolverVariable.uniqueUnrestrictedId int \l0x0095: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0097: SPUT  (r1 I:int) androidx.constraintlayout.core.SolverVariable.uniqueUnrestrictedId int \l0x0099: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x009c: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x00a0|RETURN\l|0x00a0: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{private static java.lang.String androidx.constraintlayout.core.SolverVariable.getUniqueName((r2 I:androidx.constraintlayout.core.SolverVariable$Type A[D('type' androidx.constraintlayout.core.SolverVariable$Type), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[D('prefix' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0028 \-\> B:20:?, CROSS_EDGE: B:29:0x0040 \-\> B:20:?, CROSS_EDGE: B:31:0x0058 \-\> B:20:?, CROSS_EDGE: B:33:0x0070 \-\> B:20:?, CROSS_EDGE: B:35:0x0088 \-\> B:20:?, CROSS_EDGE: B:37:0x00a0 \-\> B:20:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x00af: r2 'type' Landroidx\/constraintlayout\/core\/SolverVariable$Type;\l  \-1 \-0x00af: r3 'prefix' Ljava\/lang\/String;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_20;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_25 -> Node_30;
Node_25 -> Node_32;
Node_25 -> Node_34;
Node_25 -> Node_36;
Node_26 -> Node_27;
Node_27 -> Node_20;
Node_28 -> Node_29;
Node_29 -> Node_20;
Node_30 -> Node_31;
Node_31 -> Node_20;
Node_32 -> Node_33;
Node_33 -> Node_20;
Node_34 -> Node_35;
Node_35 -> Node_20;
Node_36 -> Node_37;
Node_37 -> Node_20;
}

