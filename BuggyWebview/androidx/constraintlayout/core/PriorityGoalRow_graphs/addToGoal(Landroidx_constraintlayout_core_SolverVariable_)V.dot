digraph "CFG forandroidx.constraintlayout.core.PriorityGoalRow.addToGoal(Landroidx\/constraintlayout\/core\/SolverVariable;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|int r0 = r5.numGoals + 1\landroidx.constraintlayout.core.SolverVariable[] r2 = r5.arrayGoals\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r0 \<= r2.length) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|androidx.constraintlayout.core.SolverVariable[] r0 = (androidx.constraintlayout.core.SolverVariable[]) java.util.Arrays.copyOf(r2, r2.length * 2)\lr5.arrayGoals = r0\lr5.sortArray = (androidx.constraintlayout.core.SolverVariable[]) java.util.Arrays.copyOf(r0, r0.length * 2)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|androidx.constraintlayout.core.SolverVariable[] r0 = r5.arrayGoals\lint r2 = r5.numGoals\lr0[r2] = r6\lint r2 = r2 + 1\lr5.numGoals = r2\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|if (r2 \<= 1) goto L18\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a}"];
Node_8 [shape=record,label="{8\:\ 0x0031|if (r0[r2 \- 1].f13id \<= r6.f13id) goto L18\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|r0 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|LOOP_START\lLOOP:0: B:10:0x0034\-\>B:12:0x0038\lPHI: r0 \l  PHI: (r0v6 'i' int) = (r0v5 'i' int), (r0v11 'i' int) binds: [B:9:0x0033, B:12:0x0038] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = r5.numGoals\l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|if (r0 \>= r2) goto L12\l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|LOOP_END\lLOOP:0: B:10:0x0034\-\>B:12:0x0038\l|r5.sortArray[r0] = r5.arrayGoals[r0]\lint r0 = r0 + 1\l}"];
Node_19 [shape=record,label="{19\:\ 0x0043|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|java.util.Arrays.sort(r5.sortArray, 0, r2, new androidx.constraintlayout.core.PriorityGoalRow.C01271(r5))\lr0 = 0\l}"];
Node_14 [shape=record,label="{14\:\ 0x004f|LOOP_START\lLOOP:1: B:14:0x004f\-\>B:16:0x0053\lPHI: r0 \l  PHI: (r0v9 'i' int) = (r0v8 'i' int), (r0v10 'i' int) binds: [B:13:0x0043, B:16:0x0053] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0051|if (r0 \>= r5.numGoals) goto L17\l}"];
Node_16 [shape=record,label="{16\:\ 0x0053|LOOP_END\lLOOP:1: B:14:0x004f\-\>B:16:0x0053\l|r5.arrayGoals[r0] = r5.sortArray[r0]\lint r0 = r0 + 1\l}"];
Node_20 [shape=record,label="{20\:\ 0x005e|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x005e|r6.inGoal = true\lr6.addToRow(r5)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0063|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private final void androidx.constraintlayout.core.PriorityGoalRow.addToGoal((r5v0 'this' androidx.constraintlayout.core.PriorityGoalRow A[IMMUTABLE_TYPE, THIS]), (r6v0 'variable' androidx.constraintlayout.core.SolverVariable A[D('variable' androidx.constraintlayout.core.SolverVariable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x0038 \-\> B:10:0x0034, BACK_EDGE: B:16:0x0053 \-\> B:14:0x004f, CROSS_EDGE: B:8:0x0031 \-\> B:17:0x005e, CROSS_EDGE: B:6:0x0028 \-\> B:17:0x005e, CROSS_EDGE: B:3:0x0007 \-\> B:5:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_17;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_10;
Node_19 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_14;
Node_20 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_1;
}

