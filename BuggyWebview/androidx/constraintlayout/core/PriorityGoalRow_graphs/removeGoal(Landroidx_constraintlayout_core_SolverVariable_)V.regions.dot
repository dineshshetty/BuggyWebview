digraph "CFG forandroidx.constraintlayout.core.PriorityGoalRow.removeGoal(Landroidx\/constraintlayout\/core\/SolverVariable;)V" {
subgraph cluster_Region_24868495 {
label = "R(2:1|(1:(2:8|(2:9|(1:11)(2:13|14)))(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|int r0 = 0\l}"];
subgraph cluster_LoopRegion_503396698 {
label = "LOOP:0: (1:(2:8|(2:9|(1:11)(2:13|14)))(1:6))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0003|if (r0 \< r4.numGoals) goto L4\l}"];
subgraph cluster_Region_326157878 {
label = "R(1:(2:8|(2:9|(1:11)(2:13|14)))(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_36805682 {
label = "IF [B:6:0x0009] THEN: R(2:8|(2:9|(1:11)(2:13|14))) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0009|if (r4.arrayGoals[r0] == r5) goto L7\l}"];
subgraph cluster_Region_1487166965 {
label = "R(2:8|(2:9|(1:11)(2:13|14)))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000b|int r1 = r0\l}"];
subgraph cluster_LoopRegion_1742649687 {
label = "LOOP:1: (2:9|(1:11)(2:13|14))";
node [shape=record,color=blue];
subgraph cluster_Region_2098863550 {
label = "R(2:9|(1:11)(2:13|14))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x000c|LOOP_START\lLOOP:1: B:8:0x000c\-\>B:10:0x0012\lPHI: r1 \l  PHI: (r1v4 'j' int) = (r1v3 'j' int), (r1v6 'j' int) binds: [B:7:0x000b, B:10:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|int int r2 = r4.numGoals\l}"];
subgraph cluster_IfRegion_1933893608 {
label = "IF [B:9:0x0010] THEN: R(1:11) ELSE: R(2:13|14)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0010|if (r1 \< (r2 \- 1)) goto L11\l}"];
subgraph cluster_Region_1333294162 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0012|LOOP_END\lLOOP:1: B:8:0x000c\-\>B:10:0x0012\l|androidx.constraintlayout.core.SolverVariable[] androidx.constraintlayout.core.SolverVariable[] r2 = r4.arrayGoals\lr2[r1] = r2[r1 + 1]\lr1++\l}"];
}
subgraph cluster_Region_120302621 {
label = "R(2:13|14)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001d|r4.numGoals = r2 \- 1\lr5.inGoal = false\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|RETURN\l|return\l}"];
}
}
}
}
}
subgraph cluster_Region_542349943 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0025|LOOP_END\lLOOP:0: B:3:0x0001\-\>B:13:0x0025\l|r0++\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0001|LOOP_START\lLOOP:0: B:3:0x0001\-\>B:13:0x0025\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:2:0x0000, B:13:0x0025] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0005}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000b|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x001d|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0028|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0028}"];
MethodNode[shape=record,label="{public final void androidx.constraintlayout.core.PriorityGoalRow.removeGoal((r4v0 'this' androidx.constraintlayout.core.PriorityGoalRow A[IMMUTABLE_TYPE, THIS]), (r5v0 'variable' androidx.constraintlayout.core.SolverVariable A[D('variable' androidx.constraintlayout.core.SolverVariable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:10:0x0012 \-\> B:8:0x000c, BACK_EDGE: B:13:0x0025 \-\> B:3:0x0001, CROSS_EDGE: B:14:0x0028 \-\> B:1:?\lINLINE_NOT_NEEDED\lJadxCommentsAttr\{\l INFO: \l \-\> Access modifiers changed from: private\}\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_15[style=dashed];
Node_6 -> Node_13[style=dashed];
Node_6 -> Node_16;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_17[style=dashed];
Node_10 -> Node_8;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_13 -> Node_3;
Node_0 -> Node_2;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_16 -> Node_7;
Node_17 -> Node_11;
Node_15 -> Node_14;
Node_14 -> Node_1;
}

