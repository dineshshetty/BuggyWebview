digraph "CFG forandroidx.constraintlayout.core.widgets.WidgetContainer.setOffset(II)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r5 I:androidx.constraintlayout.core.widgets.ConstraintWidget), (r6 I:int A[D('x' int)]), (r7 I:int A[D('y' int)]) type: SUPER call: androidx.constraintlayout.core.widgets.ConstraintWidget.setOffset(int, int):void A[MD:(int, int):void (m)] (LINE:146)\l0x0003: IGET  (r0 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.ConstraintWidget\>) = (r5 I:androidx.constraintlayout.core.widgets.WidgetContainer) androidx.constraintlayout.core.widgets.WidgetContainer.mChildren java.util.ArrayList  (LINE:147)\l0x0005: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:148)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000a|LOOP_START\lLOOP:0: B:10:0x000a\-\>B:11:0x000c\l|0x000a: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:13:0x0022 \l}"];
Node_11 [shape=record,label="{11\:\ 0x000c|LOOP_END\lLOOP:0: B:10:0x000a\-\>B:11:0x000c\l|0x000c: IGET  (r2 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.ConstraintWidget\>) = (r5 I:androidx.constraintlayout.core.widgets.WidgetContainer) androidx.constraintlayout.core.widgets.WidgetContainer.mChildren java.util.ArrayList  (LINE:149)\l0x000e: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.ArrayList), (r1 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0012: CHECK_CAST (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget) = (androidx.constraintlayout.core.widgets.ConstraintWidget) (r2 I:??[OBJECT, ARRAY]) \l0x0014: INVOKE  (r3 I:int) = (r5 I:androidx.constraintlayout.core.widgets.WidgetContainer) type: VIRTUAL call: androidx.constraintlayout.core.widgets.WidgetContainer.getRootX():int A[MD:():int (m)] (LINE:150)\l0x0018: INVOKE  (r4 I:int) = (r5 I:androidx.constraintlayout.core.widgets.WidgetContainer) type: VIRTUAL call: androidx.constraintlayout.core.widgets.WidgetContainer.getRootY():int A[MD:():int (m)]\l0x001c: INVOKE  \l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l  (r3 I:int)\l  (r4 I:int)\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.setOffset(int, int):void A[MD:(int, int):void (m)]\l0x001f: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:148)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|RETURN\l|0x0022: RETURN    (LINE:152)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.WidgetContainer.setOffset((r5 'this' I:androidx.constraintlayout.core.widgets.WidgetContainer A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x000c \-\> B:10:0x000a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x001f: r2 'widget' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  0x000a\-0x0022: r1 'i' I\l  0x0009\-0x0022: r0 'count' I\l  \-1 \-0x0022: r6 'x' I\l  \-1 \-0x0022: r7 'y' I\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.widgets.ConstraintWidget.setOffset(int, int):void]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_10;
Node_13 -> Node_12;
Node_12 -> Node_8;
}

