digraph "CFG forandroidx.constraintlayout.core.widgets.ConstraintWidget.getHorizontalMargin()I" {
subgraph cluster_Region_602781255 {
label = "R(4:1|2|4|(2:(1:7)|(1:9)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|androidx.constraintlayout.core.widgets.ConstraintAnchor androidx.constraintlayout.core.widgets.ConstraintAnchor r1 = r2.mLeft\l}"];
Node_13 [shape=record,label="{13\:\ 0x0003|int r0 = r1 != null ? 0 + r1.mMargin : 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|PHI: r0 \l  PHI: (r0v1 'margin' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|androidx.constraintlayout.core.widgets.ConstraintAnchor androidx.constraintlayout.core.widgets.ConstraintAnchor r1 = r2.mRight\l}"];
subgraph cluster_Region_1846905619 {
label = "R(2:(1:7)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_603420646 {
label = "IF [B:16:0x000a] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x000a|if (r1 != null) goto L6\l}"];
subgraph cluster_Region_984710780 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000f|RETURN\lORIG_RETURN\l|return r0 + r1.mMargin\l}"];
}
}
subgraph cluster_Region_210787531 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0005}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x000c}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int androidx.constraintlayout.core.widgets.ConstraintWidget.getHorizontalMargin((r2v0 'this' androidx.constraintlayout.core.widgets.ConstraintWidget A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x000a \-\> B:18:0x000f, CROSS_EDGE: B:13:0x0003 \-\> B:15:0x0008\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_19[style=dashed];
Node_18 -> Node_11;
Node_19 -> Node_11;
Node_10 -> Node_12;
Node_14 -> Node_15;
Node_17 -> Node_18;
}

