digraph "CFG forandroidx.constraintlayout.core.widgets.ConstraintWidget.getOptimizerWrapWidth()I" {
subgraph cluster_Region_173457847 {
label = "R(2:1|(2:(3:(1:5)(1:(1:16)(1:17))|6|(2:(1:10)|(1:12)))|(1:18))) | DECL_VAR: int w\l";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0000|int int r0 = r3.mWidth\l}"];
subgraph cluster_Region_435754926 {
label = "R(2:(3:(1:5)(1:(1:16)(1:17))|6|(2:(1:10)|(1:12)))|(1:18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1343645122 {
label = "IF [B:22:0x0009] THEN: R(3:(1:5)(1:(1:16)(1:17))|6|(2:(1:10)|(1:12))) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0009|if (r3.mListDimensionBehaviors[0] == androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L3\l}"];
subgraph cluster_Region_269849545 {
label = "R(3:(1:5)(1:(1:16)(1:17))|6|(2:(1:10)|(1:12)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_634996311 {
label = "IF [B:24:0x000e] THEN: R(1:5) ELSE: R(1:(1:16)(1:17))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x000e|if (r3.mMatchConstraintDefaultWidth == 1) goto L5\l}"];
subgraph cluster_Region_609131809 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0010|int r0 = java.lang.Math.max(r3.mMatchConstraintMinWidth, r0)\l}"];
}
subgraph cluster_Region_1028570997 {
label = "R(1:(1:16)(1:17)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1817942805 {
label = "IF [B:27:0x0019] THEN: R(1:16) ELSE: R(1:17) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0019|if (r3.mMatchConstraintMinWidth \> 0) goto L16\l}"];
subgraph cluster_Region_1088596321 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x001b|int r0 = r3.mMatchConstraintMinWidth\lr3.mWidth = r0\l}"];
}
subgraph cluster_Region_2080740399 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0020|r0 = 0\l}"];
}
}
}
}
Node_30 [shape=record,label="{30\:\ 0x0021|PHI: r0 \l  PHI: (r0v3 'w' int) = (r0v1 'w' int), (r0v2 'w' int), (r0v5 'w' int) binds: [B:29:0x0020, B:28:0x001b, B:25:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|int int r1 = r3.mMatchConstraintMaxWidth\l}"];
subgraph cluster_Region_251714345 {
label = "R(2:(1:10)|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1829718708 {
label = "IF [B:31:0x0023, B:32:0x0025] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0023|if (r1 \> 0) goto L8\l}"];
Node_32 [shape=record,label="{32\:\ 0x0025|ADDED_TO_REGION\l|if (r1 \< r0) goto L9\l}"];
subgraph cluster_Region_1619316576 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0029|RETURN\lORIG_RETURN\l|return r3.mMatchConstraintMaxWidth\l}"];
}
}
subgraph cluster_Region_679043346 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
}
}
}
subgraph cluster_Region_1422206019 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
}
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x000b}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0027}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,color=red,label="{36\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return r0\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0017}"];
MethodNode[shape=record,label="{public int androidx.constraintlayout.core.widgets.ConstraintWidget.getOptimizerWrapWidth((r3v0 'this' androidx.constraintlayout.core.widgets.ConstraintWidget A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x0025 \-\> B:34:0x0029, CROSS_EDGE: B:31:0x0023 \-\> B:34:0x0029, CROSS_EDGE: B:28:0x001b \-\> B:30:0x0021, CROSS_EDGE: B:29:0x0020 \-\> B:30:0x0021, CROSS_EDGE: B:22:0x0009 \-\> B:34:0x0029\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_19;Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_35[style=dashed];
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_36[style=dashed];
Node_32 -> Node_33;
Node_32 -> Node_37[style=dashed];
Node_34 -> Node_20;
Node_37 -> Node_20;
Node_35 -> Node_20;
Node_19 -> Node_21;
Node_23 -> Node_24;
Node_33 -> Node_34;
Node_36 -> Node_20;
Node_26 -> Node_27;
}

