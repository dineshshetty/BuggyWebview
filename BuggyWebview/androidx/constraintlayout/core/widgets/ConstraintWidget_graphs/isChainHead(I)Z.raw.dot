digraph "CFG forandroidx.constraintlayout.core.widgets.ConstraintWidget.isChainHead(I)Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: ARITH  (r0 I:int) = (r5 I:int A[D('orientation' int)]) * (2 int)  (LINE:2385)\l0x0002: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor[]) = (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget) androidx.constraintlayout.core.widgets.ConstraintWidget.mListAnchors androidx.constraintlayout.core.widgets.ConstraintAnchor[]  (LINE:2386)\l0x0004: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('offset' int)]) \l0x0006: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor \l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0034 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|0x000a: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor[]) = (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget) androidx.constraintlayout.core.widgets.ConstraintWidget.mListAnchors androidx.constraintlayout.core.widgets.ConstraintAnchor[] \l0x000c: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('offset' int)]) \l0x000e: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x0010: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x0012: IGET  (r2 I:androidx.constraintlayout.core.widgets.ConstraintAnchor[]) = (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget) androidx.constraintlayout.core.widgets.ConstraintWidget.mListAnchors androidx.constraintlayout.core.widgets.ConstraintAnchor[] \l0x0014: AGET  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('offset' int)]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0016|0x0016: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0034 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0018|0x0018: ARITH  (r1 I:int) = (r0 I:int A[D('offset' int)]) + (1 int) \l0x001a: AGET  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x001c: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor \l}"];
Node_21 [shape=record,label="{21\:\ 0x001e|0x001e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0034 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0020|0x0020: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor[]) = (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget) androidx.constraintlayout.core.widgets.ConstraintWidget.mListAnchors androidx.constraintlayout.core.widgets.ConstraintAnchor[] \l0x0022: ARITH  (r2 I:int) = (r0 I:int A[D('offset' int)]) + (1 int) \l0x0024: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]) \l0x0026: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x0028: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x002a: IGET  (r2 I:androidx.constraintlayout.core.widgets.ConstraintAnchor[]) = (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget) androidx.constraintlayout.core.widgets.ConstraintWidget.mListAnchors androidx.constraintlayout.core.widgets.ConstraintAnchor[] \l0x002c: ARITH  (r3 I:int) = (r0 I:int A[D('offset' int)]) + (1 int) \l0x002e: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0030|0x0030: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0034 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0032|SYNTHETIC\lRETURN\l|0x0032: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0035: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0034|RETURN\lORIG_RETURN\l|0x0034: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0035: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean androidx.constraintlayout.core.widgets.ConstraintWidget.isChainHead((r4 'this' I:androidx.constraintlayout.core.widgets.ConstraintWidget A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0034 \-\> B:26:0x0035, CROSS_EDGE: B:21:0x001e \-\> B:25:0x0034, CROSS_EDGE: B:19:0x0016 \-\> B:25:0x0034, CROSS_EDGE: B:17:0x0008 \-\> B:25:0x0034\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x0035: r0 'offset' I\l  \-1 \-0x0035: r5 'orientation' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_15;
Node_25 -> Node_15;
}

