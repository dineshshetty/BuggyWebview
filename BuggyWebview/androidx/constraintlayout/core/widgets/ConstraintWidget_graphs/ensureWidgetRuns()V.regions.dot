digraph "CFG forandroidx.constraintlayout.core.widgets.ConstraintWidget.ensureWidgetRuns()V" {
subgraph cluster_Region_2071363091 {
label = "R(2:(1:3)|(1:(1:6)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_700831377 {
label = "IF [B:13:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|if (r1.horizontalRun == null) goto L3\l}"];
subgraph cluster_Region_1015581248 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0004|r1.horizontalRun = new androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun(r1)\l}"];
}
}
subgraph cluster_Region_1886057424 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_941923624 {
label = "IF [B:16:0x000d] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x000d|if (r1.verticalRun == null) goto L6\l}"];
subgraph cluster_Region_1062381027 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000f|r1.verticalRun = new androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun(r1)\l}"];
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000b}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0016|ORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.ConstraintWidget.ensureWidgetRuns((r1v0 'this' androidx.constraintlayout.core.widgets.ConstraintWidget A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x000d \-\> B:18:0x0016, CROSS_EDGE: B:13:0x0002 \-\> B:15:0x000b\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

