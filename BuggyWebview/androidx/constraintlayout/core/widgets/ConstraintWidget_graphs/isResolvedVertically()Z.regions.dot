digraph "CFG forandroidx.constraintlayout.core.widgets.ConstraintWidget.isResolvedVertically()Z" {
subgraph cluster_Region_2145204485 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0002|RETURN\l|return r1.resolvedVertical \|\| (r1.mTop.hasFinalValue() && r1.mBottom.hasFinalValue())\l}"];
}
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0000}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0004}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x000a|REMOVE\lADDED_TO_REGION\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000c}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0012|REMOVE\lADDED_TO_REGION\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0015|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0017|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.core.widgets.ConstraintWidget.isResolvedVertically((r1v0 'this' androidx.constraintlayout.core.widgets.ConstraintWidget A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0017 \-\> B:24:0x0018, CROSS_EDGE: B:18:0x000a \-\> B:22:0x0015, CROSS_EDGE: B:16:0x0002 \-\> B:23:0x0017\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.widgets.ConstraintWidget.isResolvedVertically():boolean]\l}"];
MethodNode -> Node_13;Node_16 -> Node_17;
Node_16 -> Node_23;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_23;
Node_22 -> Node_14;
Node_23 -> Node_14;
}

