digraph "CFG forandroidx.constraintlayout.core.widgets.ConstraintWidget.oppositeDimensionDependsOn(I)Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:707)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('orientation' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0006 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|0x0004: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|0x0007: IGET  (r3 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[]) = (r6 I:androidx.constraintlayout.core.widgets.ConstraintWidget) androidx.constraintlayout.core.widgets.ConstraintWidget.mListDimensionBehaviors androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[]  (LINE:708)\l0x0009: AGET  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('orientation' int)]) \l0x000b: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char] A[D('oppositeOrientation' int)])  (LINE:709)\l0x000d: SGET  (r5 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour  (LINE:710)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|0x000f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('dimensionBehaviour' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0016 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: SGET  (r5 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_23 [shape=record,label="{23\:\ 0x0013|0x0013: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('oppositeDimensionBehaviour' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0016 \l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0017: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0016|RETURN\lORIG_RETURN\l|0x0016: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: RETURN  (r0 I:boolean) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.core.widgets.ConstraintWidget.oppositeDimensionDependsOn((r6 'this' I:androidx.constraintlayout.core.widgets.ConstraintWidget A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0013 \-\> B:26:0x0017, CROSS_EDGE: B:21:0x000f \-\> B:25:0x0016, CROSS_EDGE: B:19:0x0006 \-\> B:20:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x0017: r2 'oppositeOrientation' I\l  0x000d\-0x0017: r3 'oppositeDimensionBehaviour' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;\l  0x000b\-0x0017: r4 'dimensionBehaviour' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;\l  \-1 \-0x0017: r7 'orientation' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_27[style=dashed];
Node_27 -> Node_15;
Node_25 -> Node_15;
Node_19 -> Node_20;
}

