digraph "CFG forandroidx.constraintlayout.core.widgets.ConstraintWidget.oppositeDimensionsTied()Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[]) = (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget) androidx.constraintlayout.core.widgets.ConstraintWidget.mListDimensionBehaviors androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[]  (LINE:716)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0005: SGET  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l0x0007: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:? \l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|0x000a: IGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[]) = (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget) androidx.constraintlayout.core.widgets.ConstraintWidget.mListDimensionBehaviors androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] \l0x000c: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x000e: SGET  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_15 [shape=record,label="{15\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:? \l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0013: RETURN  (r1 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0013: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|0x0013: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.core.widgets.ConstraintWidget.oppositeDimensionsTied((r4 'this' I:androidx.constraintlayout.core.widgets.ConstraintWidget A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0010 \-\> B:17:0x0013, CROSS_EDGE: B:13:0x0008 \-\> B:17:0x0013\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

