digraph "CFG forandroidx.constraintlayout.core.widgets.ConstraintWidget.setRelativePositioning(II)V" {
subgraph cluster_Region_1667903713 {
label = "R(1:(1:2)(1:(1:7)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1325904622 {
label = "IF [B:12:0x0000] THEN: R(1:2) ELSE: R(1:(1:7)(0))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|if (r3 == 0) goto L2\l}"];
subgraph cluster_Region_1133905538 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|r1.mRelX = r2\l}"];
}
subgraph cluster_Region_732743744 {
label = "R(1:(1:7)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_435357932 {
label = "IF [B:15:0x0006] THEN: R(1:7) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0006|if (r3 == 1) goto L7\l}"];
subgraph cluster_Region_1804687870 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0008|r1.mRelY = r2\l}"];
}
subgraph cluster_Region_415297560 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0005}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x000a|ORIG_RETURN\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.core.widgets.ConstraintWidget.setRelativePositioning((r1v0 'this' androidx.constraintlayout.core.widgets.ConstraintWidget A[IMMUTABLE_TYPE, THIS]), (r2v0 'offset' int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'orientation' int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0008 \-\> B:17:0x000a, CROSS_EDGE: B:15:0x0006 \-\> B:17:0x000a\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_15 -> Node_16;
Node_15 -> Node_19[style=dashed];
Node_16 -> Node_17;
Node_10 -> Node_12;
Node_18 -> Node_11;
Node_14 -> Node_15;
Node_17 -> Node_11;
Node_19 -> Node_11;
}

