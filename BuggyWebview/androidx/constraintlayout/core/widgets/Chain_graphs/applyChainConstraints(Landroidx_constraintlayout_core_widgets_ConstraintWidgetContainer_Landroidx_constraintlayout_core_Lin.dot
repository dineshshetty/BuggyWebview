digraph "CFG forandroidx.constraintlayout.core.widgets.Chain.applyChainConstraints(Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidgetContainer;Landroidx\/constraintlayout\/core\/LinearSystem;Ljava\/util\/ArrayList;I)V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000}"];
Node_23 [shape=record,label="{23\:\ 0x0003|if (r9 != 0) goto L19\l}"];
Node_24 [shape=record,label="{24\:\ 0x0005|r0 = 0\lint r1 = r6.mHorizontalChainsSize\landroidx.constraintlayout.core.widgets.ChainHead[] r2 = r6.mHorizontalChainsArray\l}"];
Node_26 [shape=record,label="{26\:\ 0x0010|PHI: r0 r1 r2 \l  PHI: (r0v2 'offset' int) = (r0v1 'offset' int), (r0v3 'offset' int) binds: [B:25:0x000b, B:24:0x0005] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 'chainsSize' int) = (r1v1 'chainsSize' int), (r1v3 'chainsSize' int) binds: [B:25:0x000b, B:24:0x0005] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 'chainsArray' androidx.constraintlayout.core.widgets.ChainHead[]) = (r2v1 'chainsArray' androidx.constraintlayout.core.widgets.ChainHead[]), (r2v3 'chainsArray' androidx.constraintlayout.core.widgets.ChainHead[]) binds: [B:25:0x000b, B:24:0x0005] A[DONT_GENERATE, DONT_INLINE]\l|r3 = 0\l}"];
Node_27 [shape=record,label="{27\:\ 0x0011|LOOP_START\lLOOP:0: B:27:0x0011\-\>B:34:0x0027\lPHI: r3 \l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v2 'i' int) binds: [B:26:0x0010, B:34:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \>= r1) goto L16\l}"];
Node_28 [shape=record,label="{28\:\ 0x0013|r4 = r2[r3]\lr4.define()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0018|if (r8 == null) goto L14\l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|if (r8 == null) goto L13\l}"];
Node_31 [shape=record,label="{31\:\ 0x001c}"];
Node_32 [shape=record,label="{32\:\ 0x0022|if (r8.contains(r4.mFirst) == false) goto L11\l}"];
Node_39 [shape=record,label="{39\:\ 0x0027|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0027|LOOP_END\lLOOP:0: B:27:0x0011\-\>B:34:0x0027\l|int r3 = r3 + 1\l}"];
Node_38 [shape=record,label="{38\:\ 0x0027|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0024|applyChainConstraints(r6, r7, r9, r0, r4)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0027|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x002a|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x002a|RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x000b|r0 = 2\lint r1 = r6.mVerticalChainsSize\landroidx.constraintlayout.core.widgets.ChainHead[] r2 = r6.mVerticalChainsArray\l}"];
MethodNode[shape=record,label="{public static void androidx.constraintlayout.core.widgets.Chain.applyChainConstraints((r6v0 'constraintWidgetContainer' androidx.constraintlayout.core.widgets.ConstraintWidgetContainer A[D('constraintWidgetContainer' androidx.constraintlayout.core.widgets.ConstraintWidgetContainer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'system' androidx.constraintlayout.core.LinearSystem A[D('system' androidx.constraintlayout.core.LinearSystem), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'widgets' java.util.ArrayList\<androidx.constraintlayout.core.widgets.ConstraintWidget\> A[D('widgets' java.util.ArrayList\<androidx.constraintlayout.core.widgets.ConstraintWidget\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'orientation' int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x0027 \-\> B:27:0x0011, CROSS_EDGE: B:32:0x0022 \-\> B:34:0x0027, CROSS_EDGE: B:30:0x001a \-\> B:34:0x0027, CROSS_EDGE: B:29:0x0018 \-\> B:33:0x0024, CROSS_EDGE: B:25:0x000b \-\> B:26:0x0010\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidgetContainer;Landroidx\/constraintlayout\/core\/LinearSystem;Ljava\/util\/ArrayList\<Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\>;I)V\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_36;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_38;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_39;
Node_39 -> Node_34;
Node_34 -> Node_27;
Node_38 -> Node_34;
Node_33 -> Node_37;
Node_37 -> Node_34;
Node_36 -> Node_35;
Node_35 -> Node_21;
Node_25 -> Node_26;
}

