digraph "CFG forandroidx.constraintlayout.core.widgets.Flow.WidgetsList.measureMatchConstraints(I)V" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r10 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mNbMatchConstraintsWidgets int  (LINE:710)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0005 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0004|RETURN\l|0x0004: RETURN    (LINE:711)\l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0005|0x0005: IGET  (r1 I:int) = (r10 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mCount int  (LINE:713)\l0x0007: ARITH  (r0 I:int) = (r11 I:int A[D('availableSpace' int)]) \/ (r0 I:int)  (LINE:714)\l0x0009: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:715)\l0x000a: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x000b|LOOP_START\lLOOP:0: B:43:0x000b\-\>B:61:0x0067\l|0x000b: IF  (r8 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:64:0x006a \l}"];
Node_44 [shape=record,label="{44\:\ 0x000d|0x000d: IGET  (r2 I:int) = (r10 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mStartIndex int  (LINE:716)\l0x000f: ARITH  (r2 I:int) = (r2 I:int) + (r8 I:int A[D('i' int)]) \l0x0010: IGET  (r3 I:androidx.constraintlayout.core.widgets.Flow) = (r10 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.this$0 androidx.constraintlayout.core.widgets.Flow \l0x0012: INVOKE  (r3 I:int) = (r3 I:androidx.constraintlayout.core.widgets.Flow) type: STATIC call: androidx.constraintlayout.core.widgets.Flow.access$400(androidx.constraintlayout.core.widgets.Flow):int A[MD:(androidx.constraintlayout.core.widgets.Flow):int (m)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0016|0x0016: IF  (r2 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:47:0x0019 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0019|0x0019: IGET  (r2 I:androidx.constraintlayout.core.widgets.Flow) = (r10 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.this$0 androidx.constraintlayout.core.widgets.Flow  (LINE:719)\l0x001b: INVOKE  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget[]) = (r2 I:androidx.constraintlayout.core.widgets.Flow) type: STATIC call: androidx.constraintlayout.core.widgets.Flow.access$500(androidx.constraintlayout.core.widgets.Flow):androidx.constraintlayout.core.widgets.ConstraintWidget[] A[MD:(androidx.constraintlayout.core.widgets.Flow):androidx.constraintlayout.core.widgets.ConstraintWidget[] (m)]\l0x001f: IGET  (r3 I:int) = (r10 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mStartIndex int \l0x0021: ARITH  (r3 I:int) = (r3 I:int) + (r8 I:int A[D('i' int)]) \l0x0022: AGET  (r9 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x0024: IGET  (r2 I:int) = (r10 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mOrientation int  (LINE:720)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0026|0x0026: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0048 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0028|0x0028: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x0067  (LINE:721)\l}"];
Node_50 [shape=record,label="{50\:\ 0x002a|0x002a: INVOKE  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) = \l  (r9 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getHorizontalDimensionBehaviour():androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour A[MD:():androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour (m)]\l0x002e: SGET  (r3 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_51 [shape=record,label="{51\:\ 0x0030|0x0030: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x0067 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0032|0x0032: IGET  (r2 I:int) = \l  (r9 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mMatchConstraintDefaultWidth int  (LINE:722)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0034|0x0034: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0067 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0036|0x0036: IGET  (r2 I:androidx.constraintlayout.core.widgets.Flow) = (r10 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.this$0 androidx.constraintlayout.core.widgets.Flow  (LINE:723)\l0x0038: SGET  (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l0x003a: INVOKE  (r6 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) = \l  (r9 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getVerticalDimensionBehaviour():androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour A[MD:():androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour (m)]\l0x003e: INVOKE  (r7 I:int) = \l  (r9 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getHeight():int A[MD:():int (m)]\l0x0042: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)]) \l0x0043: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widgetSize' int)]) \l0x0044: INVOKE  \l  (r2 I:androidx.constraintlayout.core.widgets.Flow)\l  (r3 I:androidx.constraintlayout.core.widgets.ConstraintWidget)\l  (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)\l  (r5 I:int)\l  (r6 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)\l  (r7 I:int)\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.Flow.measure(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int):void A[MD:(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int):void (m)]\l}"];
Node_70 [shape=record,label="{70\:\ 0x0067|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0067|LOOP_END\lLOOP:0: B:43:0x000b\-\>B:61:0x0067\l|0x0067: ARITH  (r8 I:int) = (r8 I:int A[D('i' int)]) + (1 int)  (LINE:715)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0067|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x0067|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x0067|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0048|0x0048: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x0067  (LINE:727)\l}"];
Node_56 [shape=record,label="{56\:\ 0x004a|0x004a: INVOKE  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) = \l  (r9 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getVerticalDimensionBehaviour():androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour A[MD:():androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour (m)]\l0x004e: SGET  (r3 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_57 [shape=record,label="{57\:\ 0x0050|0x0050: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0067 \l}"];
Node_58 [shape=record,label="{58\:\ 0x0052|0x0052: IGET  (r2 I:int) = \l  (r9 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mMatchConstraintDefaultHeight int  (LINE:728)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0054|0x0054: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:73:0x0067 \l}"];
Node_60 [shape=record,label="{60\:\ 0x0056|0x0056: IGET  (r2 I:androidx.constraintlayout.core.widgets.Flow) = (r10 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.this$0 androidx.constraintlayout.core.widgets.Flow  (LINE:729)\l0x0058: INVOKE  (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) = \l  (r9 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getHorizontalDimensionBehaviour():androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour A[MD:():androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour (m)]\l0x005c: INVOKE  (r5 I:int) = \l  (r9 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getWidth():int A[MD:():int (m)]\l0x0060: SGET  (r6 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l0x0062: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)]) \l0x0063: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widgetSize' int)]) \l0x0064: INVOKE  \l  (r2 I:androidx.constraintlayout.core.widgets.Flow)\l  (r3 I:androidx.constraintlayout.core.widgets.ConstraintWidget)\l  (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)\l  (r5 I:int)\l  (r6 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)\l  (r7 I:int)\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.Flow.measure(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int):void A[MD:(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int):void (m)]\l}"];
Node_66 [shape=record,label="{66\:\ 0x0067|SYNTHETIC\l}"];
Node_73 [shape=record,label="{73\:\ 0x0067|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x0067|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ 0x0067|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x006a|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x006a|0x006a: INVOKE  (r10 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) type: DIRECT call: androidx.constraintlayout.core.widgets.Flow.WidgetsList.recomputeDimensions():void A[MD:():void (m)] (LINE:734)\l}"];
Node_63 [shape=record,label="{63\:\ 0x006d|RETURN\l|0x006d: RETURN    (LINE:735)\l}"];
Node_64 [shape=record,label="{64\:\ 0x006a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.Flow.WidgetsList.measureMatchConstraints((r10 'this' I:androidx.constraintlayout.core.widgets.Flow$WidgetsList A[IMMUTABLE_TYPE, THIS]), (r11 I:int A[D('availableSpace' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:61:0x0067 \-\> B:43:0x000b, CROSS_EDGE: B:53:0x0034 \-\> B:61:0x0067, CROSS_EDGE: B:51:0x0030 \-\> B:61:0x0067, CROSS_EDGE: B:49:0x0028 \-\> B:61:0x0067, CROSS_EDGE: B:60:0x0056 \-\> B:61:0x0067, CROSS_EDGE: B:59:0x0054 \-\> B:61:0x0067, CROSS_EDGE: B:57:0x0050 \-\> B:61:0x0067, CROSS_EDGE: B:55:0x0048 \-\> B:61:0x0067, CROSS_EDGE: B:63:0x006d \-\> B:38:?, CROSS_EDGE: B:43:0x000b \-\> B:62:0x006a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0024\-0x0067: r9 'widget' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  0x000b\-0x006a: r8 'i' I\l  0x0009\-0x006d: r0 'widgetSize' I\l  0x0007\-0x006d: r1 'count' I\l  \-1 \-0x006d: r11 'availableSpace' I\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_38;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_64;
Node_44 -> Node_45;
Node_45 -> Node_47;
Node_45 -> Node_65[style=dashed];
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_55;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_67;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_68;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_69;
Node_54 -> Node_70;
Node_70 -> Node_61;
Node_61 -> Node_43;
Node_69 -> Node_61;
Node_68 -> Node_61;
Node_67 -> Node_61;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_71;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_72;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_73;
Node_60 -> Node_66;
Node_66 -> Node_61;
Node_73 -> Node_61;
Node_72 -> Node_61;
Node_71 -> Node_61;
Node_65 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_38;
Node_64 -> Node_62;
}

