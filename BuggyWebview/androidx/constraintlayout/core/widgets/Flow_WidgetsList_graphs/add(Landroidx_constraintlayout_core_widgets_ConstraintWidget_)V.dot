digraph "CFG forandroidx.constraintlayout.core.widgets.Flow.WidgetsList.add(Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;)V" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000}"];
Node_32 [shape=record,label="{32\:\ 0x0004|if (r5.mOrientation != 0) goto L17\l}"];
Node_33 [shape=record,label="{33\:\ 0x0006|int r0 = androidx.constraintlayout.core.widgets.Flow.this.getWidgetWidth(r6, r5.mMax)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0014|if (r6.getHorizontalDimensionBehaviour() != androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L6\l}"];
Node_35 [shape=record,label="{35\:\ 0x0016|r5.mNbMatchConstraintsWidgets = r5.mNbMatchConstraintsWidgets + 1\lr0 = 0\l}"];
Node_36 [shape=record,label="{36\:\ 0x001d|PHI: r0 \l  PHI: (r0v7 'width' int) = (r0v6 'width' int), (r0v8 'width' int) binds: [B:34:0x0014, B:35:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = androidx.constraintlayout.core.widgets.Flow.this.mHorizontalGap\l}"];
Node_37 [shape=record,label="{37\:\ 0x0027|if (r6.getVisibility() != 8) goto L9\l}"];
Node_38 [shape=record,label="{38\:\ 0x0029|r2 = 0\l}"];
Node_39 [shape=record,label="{39\:\ 0x002a|PHI: r2 \l  PHI: (r2v9 'gap' int) = (r2v8 'gap' int), (r2v10 'gap' int) binds: [B:37:0x0027, B:38:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|r5.mWidth = r5.mWidth + (r0 + r2)\lint r1 = androidx.constraintlayout.core.widgets.Flow.this.getWidgetHeight(r6, r5.mMax)\l}"];
Node_40 [shape=record,label="{40\:\ 0x003b|if (r5.biggest == null) goto L16\l}"];
Node_41 [shape=record,label="{41\:\ 0x003d}"];
Node_42 [shape=record,label="{42\:\ 0x003f|if (r5.biggestDimension \>= r1) goto L13\l}"];
Node_56 [shape=record,label="{56\:\ 0x0089|r5.mCount = r5.mCount + 1\l}"];
Node_57 [shape=record,label="{57\:\ 0x008f|RETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x0041|r5.biggest = r6\lr5.biggestDimension = r1\lr5.mHeight = r1\l}"];
Node_45 [shape=record,label="{45\:\ 0x0048|int r0 = androidx.constraintlayout.core.widgets.Flow.this.getWidgetWidth(r6, r5.mMax)\lint r2 = androidx.constraintlayout.core.widgets.Flow.this.getWidgetHeight(r6, r5.mMax)\l}"];
Node_46 [shape=record,label="{46\:\ 0x005e|if (r6.getVerticalDimensionBehaviour() != androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L20\l}"];
Node_47 [shape=record,label="{47\:\ 0x0060|r5.mNbMatchConstraintsWidgets = r5.mNbMatchConstraintsWidgets + 1\lr2 = 0\l}"];
Node_48 [shape=record,label="{48\:\ 0x0067|PHI: r2 \l  PHI: (r2v3 'height' int) = (r2v2 'height' int), (r2v4 'height' int) binds: [B:46:0x005e, B:47:0x0060] A[DONT_GENERATE, DONT_INLINE]\l|int r3 = androidx.constraintlayout.core.widgets.Flow.this.mVerticalGap\l}"];
Node_49 [shape=record,label="{49\:\ 0x0071|if (r6.getVisibility() != 8) goto L23\l}"];
Node_50 [shape=record,label="{50\:\ 0x0073|r3 = 0\l}"];
Node_51 [shape=record,label="{51\:\ 0x0074|PHI: r3 \l  PHI: (r3v4 'gap' int) = (r3v3 'gap' int), (r3v5 'gap' int) binds: [B:49:0x0071, B:50:0x0073] A[DONT_GENERATE, DONT_INLINE]\l|r5.mHeight = r5.mHeight + (r2 + r3)\l}"];
Node_52 [shape=record,label="{52\:\ 0x007d|if (r5.biggest == null) goto L27\l}"];
Node_53 [shape=record,label="{53\:\ 0x007f}"];
Node_54 [shape=record,label="{54\:\ 0x0081|if (r5.biggestDimension \>= r0) goto L13\l}"];
Node_55 [shape=record,label="{55\:\ 0x0083|r5.biggest = r6\lr5.biggestDimension = r0\lr5.mWidth = r0\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.Flow.WidgetsList.add((r5v0 'this' androidx.constraintlayout.core.widgets.Flow$WidgetsList A[IMMUTABLE_TYPE, THIS]), (r6v0 'widget' androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:42:0x003f \-\> B:56:0x0089, CROSS_EDGE: B:40:0x003b \-\> B:43:0x0041, CROSS_EDGE: B:37:0x0027 \-\> B:39:0x002a, CROSS_EDGE: B:34:0x0014 \-\> B:36:0x001d, CROSS_EDGE: B:55:0x0083 \-\> B:56:0x0089, CROSS_EDGE: B:54:0x0081 \-\> B:56:0x0089, CROSS_EDGE: B:52:0x007d \-\> B:55:0x0083, CROSS_EDGE: B:49:0x0071 \-\> B:51:0x0074, CROSS_EDGE: B:46:0x005e \-\> B:48:0x0067\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_45;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_30;
Node_43 -> Node_56;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_55;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_56;
}

