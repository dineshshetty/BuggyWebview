digraph "CFG forandroidx.constraintlayout.core.widgets.Flow.WidgetsList.recomputeDimensions()V" {
Node_35 [shape=record,label="{35\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:738)\l0x0001: IPUT  (r0 I:int), (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mWidth int \l0x0003: IPUT  (r0 I:int), (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mHeight int  (LINE:739)\l0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:740)\l0x0006: IPUT  \l  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget)\l  (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList)\l androidx.constraintlayout.core.widgets.Flow.WidgetsList.biggest androidx.constraintlayout.core.widgets.ConstraintWidget \l0x0008: IPUT  (r0 I:int), (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.biggestDimension int  (LINE:741)\l0x000a: IGET  (r0 I:int) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mCount int  (LINE:742)\l0x000c: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:743)\l}"];
Node_38 [shape=record,label="{38\:\ 0x000d|LOOP_START\lLOOP:0: B:38:0x000d\-\>B:61:0x008e\l|0x000d: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:63:0x0092 \l}"];
Node_39 [shape=record,label="{39\:\ 0x000f|0x000f: IGET  (r2 I:int) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mStartIndex int  (LINE:744)\l0x0011: ARITH  (r2 I:int) = (r2 I:int) + (r1 I:int A[D('i' int)]) \l0x0012: IGET  (r3 I:androidx.constraintlayout.core.widgets.Flow) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.this$0 androidx.constraintlayout.core.widgets.Flow \l0x0014: INVOKE  (r3 I:int) = (r3 I:androidx.constraintlayout.core.widgets.Flow) type: STATIC call: androidx.constraintlayout.core.widgets.Flow.access$400(androidx.constraintlayout.core.widgets.Flow):int A[MD:(androidx.constraintlayout.core.widgets.Flow):int (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0018|0x0018: IF  (r2 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:42:0x001c \l}"];
Node_42 [shape=record,label="{42\:\ 0x001c|0x001c: IGET  (r2 I:androidx.constraintlayout.core.widgets.Flow) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.this$0 androidx.constraintlayout.core.widgets.Flow  (LINE:747)\l0x001e: INVOKE  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget[]) = (r2 I:androidx.constraintlayout.core.widgets.Flow) type: STATIC call: androidx.constraintlayout.core.widgets.Flow.access$500(androidx.constraintlayout.core.widgets.Flow):androidx.constraintlayout.core.widgets.ConstraintWidget[] A[MD:(androidx.constraintlayout.core.widgets.Flow):androidx.constraintlayout.core.widgets.ConstraintWidget[] (m)]\l0x0022: IGET  (r3 I:int) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mStartIndex int \l0x0024: ARITH  (r3 I:int) = (r3 I:int) + (r1 I:int A[D('i' int)]) \l0x0025: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l0x0027: IGET  (r3 I:int) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mOrientation int  (LINE:748)\l0x0029: CONST  (r4 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x002b|0x002b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x005c \l}"];
Node_44 [shape=record,label="{44\:\ 0x002d|0x002d: INVOKE  (r3 I:int) = \l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getWidth():int A[MD:():int (m)] (LINE:749)\l0x0031: IGET  (r5 I:androidx.constraintlayout.core.widgets.Flow) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.this$0 androidx.constraintlayout.core.widgets.Flow  (LINE:750)\l0x0033: INVOKE  (r5 I:int) = (r5 I:androidx.constraintlayout.core.widgets.Flow) type: STATIC call: androidx.constraintlayout.core.widgets.Flow.access$000(androidx.constraintlayout.core.widgets.Flow):int A[MD:(androidx.constraintlayout.core.widgets.Flow):int (m)]\l0x0037: INVOKE  (r6 I:int) = \l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getVisibility():int A[MD:():int (m)] (LINE:751)\l}"];
Node_45 [shape=record,label="{45\:\ 0x003b|0x003b: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x003e \l}"];
Node_46 [shape=record,label="{46\:\ 0x003d|0x003d: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('gap' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:752)\l}"];
Node_47 [shape=record,label="{47\:\ 0x003e|0x003e: IGET  (r4 I:int) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mWidth int  (LINE:754)\l0x0040: ARITH  (r6 I:int) = (r3 I:int A[D('width' int)]) + (r5 I:int A[D('gap' int)]) \l0x0042: ARITH  (r4 I:int) = (r4 I:int) + (r6 I:int) \l0x0043: IPUT  (r4 I:int), (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mWidth int \l0x0045: IGET  (r4 I:androidx.constraintlayout.core.widgets.Flow) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.this$0 androidx.constraintlayout.core.widgets.Flow  (LINE:755)\l0x0047: IGET  (r6 I:int) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mMax int \l0x0049: INVOKE  (r4 I:int) = \l  (r4 I:androidx.constraintlayout.core.widgets.Flow)\l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l  (r6 I:int)\l type: STATIC call: androidx.constraintlayout.core.widgets.Flow.access$300(androidx.constraintlayout.core.widgets.Flow, androidx.constraintlayout.core.widgets.ConstraintWidget, int):int A[MD:(androidx.constraintlayout.core.widgets.Flow, androidx.constraintlayout.core.widgets.ConstraintWidget, int):int (m)]\l0x004d: IGET  (r6 I:androidx.constraintlayout.core.widgets.ConstraintWidget) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.biggest androidx.constraintlayout.core.widgets.ConstraintWidget  (LINE:756)\l}"];
Node_48 [shape=record,label="{48\:\ 0x004f|0x004f: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0055 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0051|0x0051: IGET  (r6 I:int) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.biggestDimension int \l}"];
Node_50 [shape=record,label="{50\:\ 0x0053|0x0053: IF  (r6 I:??[int, byte, short, char]) \>= (r4 I:??[int, byte, short, char] A[D('height' int)])  \-\> B:68:0x008e \l}"];
Node_68 [shape=record,label="{68\:\ 0x008e|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x008e|LOOP_END\lLOOP:0: B:38:0x000d\-\>B:61:0x008e\l|0x008e: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:743)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0055|0x0055: IPUT  \l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l  (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList)\l androidx.constraintlayout.core.widgets.Flow.WidgetsList.biggest androidx.constraintlayout.core.widgets.ConstraintWidget  (LINE:757)\l0x0057: IPUT  (r4 I:int A[D('height' int)]), (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.biggestDimension int  (LINE:758)\l0x0059: IPUT  (r4 I:int A[D('height' int)]), (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mHeight int  (LINE:759)\l}"];
Node_67 [shape=record,label="{67\:\ 0x008e|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x005c|0x005c: IGET  (r3 I:androidx.constraintlayout.core.widgets.Flow) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.this$0 androidx.constraintlayout.core.widgets.Flow  (LINE:762)\l0x005e: IGET  (r5 I:int) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mMax int \l0x0060: INVOKE  (r3 I:int) = \l  (r3 I:androidx.constraintlayout.core.widgets.Flow)\l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l  (r5 I:int)\l type: STATIC call: androidx.constraintlayout.core.widgets.Flow.access$200(androidx.constraintlayout.core.widgets.Flow, androidx.constraintlayout.core.widgets.ConstraintWidget, int):int A[MD:(androidx.constraintlayout.core.widgets.Flow, androidx.constraintlayout.core.widgets.ConstraintWidget, int):int (m)]\l0x0064: IGET  (r5 I:androidx.constraintlayout.core.widgets.Flow) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.this$0 androidx.constraintlayout.core.widgets.Flow  (LINE:763)\l0x0066: IGET  (r6 I:int) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mMax int \l0x0068: INVOKE  (r5 I:int) = \l  (r5 I:androidx.constraintlayout.core.widgets.Flow)\l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l  (r6 I:int)\l type: STATIC call: androidx.constraintlayout.core.widgets.Flow.access$300(androidx.constraintlayout.core.widgets.Flow, androidx.constraintlayout.core.widgets.ConstraintWidget, int):int A[MD:(androidx.constraintlayout.core.widgets.Flow, androidx.constraintlayout.core.widgets.ConstraintWidget, int):int (m)]\l0x006c: IGET  (r6 I:androidx.constraintlayout.core.widgets.Flow) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.this$0 androidx.constraintlayout.core.widgets.Flow  (LINE:764)\l0x006e: INVOKE  (r6 I:int) = (r6 I:androidx.constraintlayout.core.widgets.Flow) type: STATIC call: androidx.constraintlayout.core.widgets.Flow.access$100(androidx.constraintlayout.core.widgets.Flow):int A[MD:(androidx.constraintlayout.core.widgets.Flow):int (m)]\l0x0072: INVOKE  (r7 I:int) = \l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getVisibility():int A[MD:():int (m)] (LINE:765)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0076|0x0076: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0079 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0078|0x0078: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('gap' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:766)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0079|0x0079: IGET  (r4 I:int) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mHeight int  (LINE:768)\l0x007b: ARITH  (r7 I:int) = (r5 I:int A[D('height' int)]) + (r6 I:int A[D('gap' int)]) \l0x007d: ARITH  (r4 I:int) = (r4 I:int) + (r7 I:int) \l0x007e: IPUT  (r4 I:int), (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mHeight int \l0x0080: IGET  (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.biggest androidx.constraintlayout.core.widgets.ConstraintWidget  (LINE:769)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0082|0x0082: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0088 \l}"];
Node_58 [shape=record,label="{58\:\ 0x0084|0x0084: IGET  (r4 I:int) = (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.biggestDimension int \l}"];
Node_59 [shape=record,label="{59\:\ 0x0086|0x0086: IF  (r4 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char] A[D('width' int)])  \-\> B:66:0x008e \l}"];
Node_66 [shape=record,label="{66\:\ 0x008e|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x0088|0x0088: IPUT  \l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l  (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList)\l androidx.constraintlayout.core.widgets.Flow.WidgetsList.biggest androidx.constraintlayout.core.widgets.ConstraintWidget  (LINE:770)\l0x008a: IPUT  (r3 I:int A[D('width' int)]), (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.biggestDimension int  (LINE:771)\l0x008c: IPUT  (r3 I:int A[D('width' int)]), (r8 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) androidx.constraintlayout.core.widgets.Flow.WidgetsList.mWidth int  (LINE:772)\l}"];
Node_65 [shape=record,label="{65\:\ 0x008e|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x0092|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ ?|SYNTHETIC\lRETURN\l|0x0092: RETURN   A[SYNTHETIC] (LINE:776)\l}"];
Node_36 [shape=record,label="{36\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_63 [shape=record,label="{63\:\ 0x0092|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0092|RETURN\lORIG_RETURN\l|0x0092: RETURN    (LINE:776)\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.core.widgets.Flow.WidgetsList.recomputeDimensions((r8 'this' I:androidx.constraintlayout.core.widgets.Flow$WidgetsList A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:61:0x008e \-\> B:38:0x000d, CROSS_EDGE: B:50:0x0053 \-\> B:61:0x008e, CROSS_EDGE: B:48:0x004f \-\> B:51:0x0055, CROSS_EDGE: B:45:0x003b \-\> B:47:0x003e, CROSS_EDGE: B:60:0x0088 \-\> B:61:0x008e, CROSS_EDGE: B:59:0x0086 \-\> B:61:0x008e, CROSS_EDGE: B:57:0x0082 \-\> B:60:0x0088, CROSS_EDGE: B:54:0x0076 \-\> B:56:0x0079, CROSS_EDGE: B:38:0x000d \-\> B:62:0x0092\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0031\-0x005b: r3 'width' I\l  0x004d\-0x005b: r4 'height' I\l  0x0037\-0x005b: r5 'gap' I\l  0x0027\-0x008e: r2 'widget' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  0x0064\-0x008e: r3 'width' I\l  0x006c\-0x008e: r5 'height' I\l  0x0072\-0x008e: r6 'gap' I\l  0x000d\-0x0092: r1 'i' I\l  0x000c\-0x0092: r0 'count' I\l}"];
MethodNode -> Node_35;Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_63;
Node_39 -> Node_40;
Node_40 -> Node_42;
Node_40 -> Node_64[style=dashed];
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_53;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_51;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_68;
Node_68 -> Node_61;
Node_61 -> Node_38;
Node_51 -> Node_67;
Node_67 -> Node_61;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_60;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_66;
Node_66 -> Node_61;
Node_60 -> Node_65;
Node_65 -> Node_61;
Node_64 -> Node_69;
Node_69 -> Node_36;
Node_63 -> Node_62;
Node_62 -> Node_36;
}

