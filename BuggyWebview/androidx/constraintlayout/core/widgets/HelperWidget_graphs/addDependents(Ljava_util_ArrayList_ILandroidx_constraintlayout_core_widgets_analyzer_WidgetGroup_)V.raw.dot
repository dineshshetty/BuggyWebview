digraph "CFG forandroidx.constraintlayout.core.widgets.HelperWidget.addDependents(Ljava\/util\/ArrayList;ILandroidx\/constraintlayout\/core\/widgets\/analyzer\/WidgetGroup;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:74)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0001|LOOP_START\lLOOP:0: B:16:0x0001\-\>B:18:0x0005\l|0x0001: IGET  (r1 I:int) = (r2 I:androidx.constraintlayout.core.widgets.HelperWidget) androidx.constraintlayout.core.widgets.HelperWidget.mWidgetsCount int \l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|0x0003: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:24:0x000f \l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|LOOP_END\lLOOP:0: B:16:0x0001\-\>B:18:0x0005\l|0x0005: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget[]) = (r2 I:androidx.constraintlayout.core.widgets.HelperWidget) androidx.constraintlayout.core.widgets.HelperWidget.mWidgets androidx.constraintlayout.core.widgets.ConstraintWidget[]  (LINE:75)\l0x0007: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0009: INVOKE  \l  (r5 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup A[D('group' androidx.constraintlayout.core.widgets.analyzer.WidgetGroup)])\l  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.add(androidx.constraintlayout.core.widgets.ConstraintWidget):boolean A[MD:(androidx.constraintlayout.core.widgets.ConstraintWidget):boolean (m)] (LINE:76)\l0x000c: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:74)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000f|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:78)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|LOOP_START\lLOOP:1: B:20:0x0010\-\>B:22:0x0014\l|0x0010: IGET  (r1 I:int) = (r2 I:androidx.constraintlayout.core.widgets.HelperWidget) androidx.constraintlayout.core.widgets.HelperWidget.mWidgetsCount int \l}"];
Node_21 [shape=record,label="{21\:\ 0x0012|0x0012: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:25:0x001e \l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|LOOP_END\lLOOP:1: B:20:0x0010\-\>B:22:0x0014\l|0x0014: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget[]) = (r2 I:androidx.constraintlayout.core.widgets.HelperWidget) androidx.constraintlayout.core.widgets.HelperWidget.mWidgets androidx.constraintlayout.core.widgets.ConstraintWidget[]  (LINE:79)\l0x0016: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0018: INVOKE  \l  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l  (r4 I:int A[D('orientation' int)])\l  (r3 I:java.util.ArrayList A[D('dependencyLists' java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetGroup\>)])\l  (r5 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup A[D('group' androidx.constraintlayout.core.widgets.analyzer.WidgetGroup)])\l type: STATIC call: androidx.constraintlayout.core.widgets.analyzer.Grouping.findDependents(androidx.constraintlayout.core.widgets.ConstraintWidget, int, java.util.ArrayList, androidx.constraintlayout.core.widgets.analyzer.WidgetGroup):androidx.constraintlayout.core.widgets.analyzer.WidgetGroup A[MD:(androidx.constraintlayout.core.widgets.ConstraintWidget, int, java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetGroup\>, androidx.constraintlayout.core.widgets.analyzer.WidgetGroup):androidx.constraintlayout.core.widgets.analyzer.WidgetGroup (m)] (LINE:80)\l0x001b: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:78)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001e|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x001e|RETURN\l|0x001e: RETURN    (LINE:82)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.HelperWidget.addDependents((r2 'this' I:androidx.constraintlayout.core.widgets.HelperWidget A[IMMUTABLE_TYPE, THIS]), (r3 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetGroup\> A[D('dependencyLists' java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetGroup\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup A[D('group' androidx.constraintlayout.core.widgets.analyzer.WidgetGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:18:0x0005 \-\> B:16:0x0001, BACK_EDGE: B:22:0x0014 \-\> B:20:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x000c: r1 'widget' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  0x0001\-0x000f: r0 'i' I\l  0x0018\-0x001b: r1 'widget' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  0x0010\-0x001e: r0 'i' I\l  0x0000\-0x001e: r3 'dependencyLists' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroidx\/constraintlayout\/core\/widgets\/analyzer\/WidgetGroup;\>;\l  \-1 \-0x001e: r4 'orientation' I\l  \-1 \-0x001e: r5 'group' Landroidx\/constraintlayout\/core\/widgets\/analyzer\/WidgetGroup;\lSIGNATURE: (Ljava\/util\/ArrayList\<Landroidx\/constraintlayout\/core\/widgets\/analyzer\/WidgetGroup;\>;ILandroidx\/constraintlayout\/core\/widgets\/analyzer\/WidgetGroup;)V\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_16;
Node_24 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_20;
Node_25 -> Node_23;
Node_23 -> Node_14;
}

