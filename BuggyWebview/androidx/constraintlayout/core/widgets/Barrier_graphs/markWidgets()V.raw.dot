digraph "CFG forandroidx.constraintlayout.core.widgets.Barrier.markWidgets()V" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:111)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0001|LOOP_START\lLOOP:0: B:30:0x0001\-\>B:47:0x002a\l|0x0001: IGET  (r1 I:int) = (r5 I:androidx.constraintlayout.core.widgets.Barrier) androidx.constraintlayout.core.widgets.Barrier.mWidgetsCount int \l}"];
Node_31 [shape=record,label="{31\:\ 0x0003|0x0003: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:49:0x002d \l}"];
Node_32 [shape=record,label="{32\:\ 0x0005|0x0005: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget[]) = (r5 I:androidx.constraintlayout.core.widgets.Barrier) androidx.constraintlayout.core.widgets.Barrier.mWidgets androidx.constraintlayout.core.widgets.ConstraintWidget[]  (LINE:112)\l0x0007: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0009: IGET  (r2 I:boolean) = (r5 I:androidx.constraintlayout.core.widgets.Barrier) androidx.constraintlayout.core.widgets.Barrier.mAllowsGoneWidget boolean  (LINE:113)\l}"];
Node_33 [shape=record,label="{33\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0014 \l}"];
Node_34 [shape=record,label="{34\:\ 0x000d|0x000d: INVOKE  (r2 I:boolean) = \l  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.allowedInBarrier():boolean A[MD:():boolean (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0011|0x0011: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0014 \l}"];
Node_53 [shape=record,label="{53\:\ 0x002a|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x002a|LOOP_END\lLOOP:0: B:30:0x0001\-\>B:47:0x002a\l|0x002a: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:111)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0014|0x0014: IGET  (r2 I:int) = (r5 I:androidx.constraintlayout.core.widgets.Barrier) androidx.constraintlayout.core.widgets.Barrier.mBarrierType int  (LINE:116)\l0x0016: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0017|0x0017: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0026 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0019|0x0019: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x001c \l}"];
Node_41 [shape=record,label="{41\:\ 0x001c|0x001c: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:118)\l}"];
Node_42 [shape=record,label="{42\:\ 0x001d|0x001d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0022 \l}"];
Node_43 [shape=record,label="{43\:\ 0x001f|0x001f: CONST  (r4 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0020|0x0020: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x002a \l}"];
Node_51 [shape=record,label="{51\:\ 0x002a|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0022|0x0022: INVOKE  \l  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l  (r3 I:int)\l  (r3 I:boolean)\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.setInBarrier(int, boolean):void A[MD:(int, boolean):void (m)] (LINE:119)\l}"];
Node_52 [shape=record,label="{52\:\ 0x002a|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0026|0x0026: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:117)\l0x0027: INVOKE  \l  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l  (r2 I:int)\l  (r3 I:boolean)\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.setInBarrier(int, boolean):void A[MD:(int, boolean):void (m)]\l}"];
Node_50 [shape=record,label="{50\:\ 0x002a|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x002d|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x002d|RETURN\l|0x002d: RETURN    (LINE:122)\l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.Barrier.markWidgets((r5 'this' I:androidx.constraintlayout.core.widgets.Barrier A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:47:0x002a \-\> B:30:0x0001, CROSS_EDGE: B:44:0x0020 \-\> B:47:0x002a, CROSS_EDGE: B:42:0x001d \-\> B:45:0x0022, CROSS_EDGE: B:46:0x0026 \-\> B:47:0x002a, CROSS_EDGE: B:38:0x0017 \-\> B:46:0x0026, CROSS_EDGE: B:35:0x0011 \-\> B:47:0x002a, CROSS_EDGE: B:33:0x000b \-\> B:37:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x002a: r1 'widget' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  0x0001\-0x002d: r0 'i' I\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_49;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_53[style=dashed];
Node_53 -> Node_47;
Node_47 -> Node_30;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_46;
Node_39 -> Node_41;
Node_39 -> Node_46[style=dashed];
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_45;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_51;
Node_51 -> Node_47;
Node_45 -> Node_52;
Node_52 -> Node_47;
Node_46 -> Node_50;
Node_50 -> Node_47;
Node_49 -> Node_48;
Node_48 -> Node_28;
}

