digraph "CFG forandroidx.constraintlayout.core.widgets.Placeholder.addToSolver(Landroidx\/constraintlayout\/core\/LinearSystem;Z)V" {
subgraph cluster_Region_2124687882 {
label = "R(2:1|(1:(1:3)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|super.addToSolver(r4, r5)\l}"];
subgraph cluster_Region_1317378575 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1216847552 {
label = "IF [B:10:0x0005] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0005|if (r3.mWidgetsCount \> 0) goto L3\l}"];
subgraph cluster_Region_538105596 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0007|androidx.constraintlayout.core.widgets.ConstraintWidget r0 = r3.mWidgets[0]\lr0.resetAllConstraints()\lr0.connect(androidx.constraintlayout.core.widgets.ConstraintAnchor.Type.LEFT, r3, androidx.constraintlayout.core.widgets.ConstraintAnchor.Type.LEFT)\lr0.connect(androidx.constraintlayout.core.widgets.ConstraintAnchor.Type.RIGHT, r3, androidx.constraintlayout.core.widgets.ConstraintAnchor.Type.RIGHT)\lr0.connect(androidx.constraintlayout.core.widgets.ConstraintAnchor.Type.TOP, r3, androidx.constraintlayout.core.widgets.ConstraintAnchor.Type.TOP)\lr0.connect(androidx.constraintlayout.core.widgets.ConstraintAnchor.Type.BOTTOM, r3, androidx.constraintlayout.core.widgets.ConstraintAnchor.Type.BOTTOM)\l}"];
}
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x002b|ORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.Placeholder.addToSolver((r3v0 'this' androidx.constraintlayout.core.widgets.Placeholder A[IMMUTABLE_TYPE, THIS]), (r4v0 'system' androidx.constraintlayout.core.LinearSystem A[D('system' androidx.constraintlayout.core.LinearSystem), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'optimize' boolean A[D('optimize' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0005 \-\> B:12:0x002b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.widgets.ConstraintWidget.addToSolver(androidx.constraintlayout.core.LinearSystem, boolean):void]\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_7 -> Node_9;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

