digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.BasicMeasure.measure(Landroidx\/constraintlayout\/core\/widgets\/analyzer\/BasicMeasure$Measurer;Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;I)Z" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure r0 = r8.mMeasure\lr0.horizontalBehavior = r10.getHorizontalDimensionBehaviour()\landroidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure r0 = r8.mMeasure\lr0.verticalBehavior = r10.getVerticalDimensionBehaviour()\landroidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure r0 = r8.mMeasure\lr0.horizontalDimension = r10.getWidth()\landroidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure r0 = r8.mMeasure\lr0.verticalDimension = r10.getHeight()\lr8.mMeasure.measuredNeedsSolverPass = false\lr8.mMeasure.measureStrategy = r11\l}"];
Node_35 [shape=record,label="{35\:\ 0x0030|if (r8.mMeasure.horizontalBehavior != androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L31\l}"];
Node_36 [shape=record,label="{36\:\ 0x0032|r0 = true\l}"];
Node_38 [shape=record,label="{38\:\ 0x0035|PHI: r0 \l  PHI: (r0v9 'horizontalMatchConstraints' boolean) = (r0v8 'horizontalMatchConstraints' boolean), (r0v10 'horizontalMatchConstraints' boolean) binds: [B:37:0x0034, B:36:0x0032] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_39 [shape=record,label="{39\:\ 0x003b|if (r8.mMeasure.verticalBehavior != androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L30\l}"];
Node_40 [shape=record,label="{40\:\ 0x003d|r2 = true\l}"];
Node_42 [shape=record,label="{42\:\ 0x0040|PHI: r2 \l  PHI: (r2v4 'verticalMatchConstraints' boolean) = (r2v3 'verticalMatchConstraints' boolean), (r2v5 'verticalMatchConstraints' boolean) binds: [B:41:0x003f, B:40:0x003d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0041|if (r0 == false) goto L29\l}"];
Node_44 [shape=record,label="{44\:\ 0x0043}"];
Node_45 [shape=record,label="{45\:\ 0x0047|if ((r10.mDimensionRatio \> 0.0f ? 1 : (r10.mDimensionRatio == 0.0f ? 0 : \-1)) \<= 0) goto L29\l}"];
Node_46 [shape=record,label="{46\:\ 0x0049|r5 = true\l}"];
Node_48 [shape=record,label="{48\:\ 0x004c|PHI: r5 \l  PHI: (r5v1 'horizontalUseRatio' boolean) = (r5v0 'horizontalUseRatio' boolean), (r5v4 'horizontalUseRatio' boolean) binds: [B:47:0x004b, B:46:0x0049] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == false) goto L28\l}"];
Node_49 [shape=record,label="{49\:\ 0x004e}"];
Node_50 [shape=record,label="{50\:\ 0x0052|if ((r10.mDimensionRatio \> 0.0f ? 1 : (r10.mDimensionRatio == 0.0f ? 0 : \-1)) \<= 0) goto L28\l}"];
Node_51 [shape=record,label="{51\:\ 0x0054|r4 = true\l}"];
Node_53 [shape=record,label="{53\:\ 0x0057|PHI: r4 \l  PHI: (r4v3 'verticalUseRatio' boolean) = (r4v2 'verticalUseRatio' boolean), (r4v5 'verticalUseRatio' boolean) binds: [B:52:0x0056, B:51:0x0054] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_54 [shape=record,label="{54\:\ 0x0058|if (r5 == false) goto L21\l}"];
Node_55 [shape=record,label="{55\:\ 0x005a}"];
Node_56 [shape=record,label="{56\:\ 0x005e|if (r10.mResolvedMatchConstraintDefault[0] != 4) goto L21\l}"];
Node_57 [shape=record,label="{57\:\ 0x0060|androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure r1 = r8.mMeasure\lr1.horizontalBehavior = androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED\l}"];
Node_58 [shape=record,label="{58\:\ 0x0066|if (r4 == false) goto L25\l}"];
Node_59 [shape=record,label="{59\:\ 0x0068}"];
Node_60 [shape=record,label="{60\:\ 0x006c|if (r10.mResolvedMatchConstraintDefault[1] != 4) goto L25\l}"];
Node_61 [shape=record,label="{61\:\ 0x006e|androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure r1 = r8.mMeasure\lr1.verticalBehavior = androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED\l}"];
Node_62 [shape=record,label="{62\:\ 0x0074|r9.measure(r10, r8.mMeasure)\lr10.setWidth(r8.mMeasure.measuredWidth)\lr10.setHeight(r8.mMeasure.measuredHeight)\lr10.setHasBaseline(r8.mMeasure.measuredHasBaseline)\lr10.setBaselineDistance(r8.mMeasure.measuredBaseline)\landroidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure r1 = r8.mMeasure\lr1.measureStrategy = androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.Measure.SELF_DIMENSIONS\l}"];
Node_63 [shape=record,label="{63\:\ 0x009f|RETURN\l|return r8.mMeasure.measuredNeedsSolverPass\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_52 [shape=record,label="{52\:\ 0x0056|r4 = false\l}"];
Node_47 [shape=record,label="{47\:\ 0x004b|r5 = false\l}"];
Node_41 [shape=record,label="{41\:\ 0x003f|r2 = false\l}"];
Node_37 [shape=record,label="{37\:\ 0x0034|r0 = false\l}"];
MethodNode[shape=record,label="{private boolean androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.measure((r8v0 'this' androidx.constraintlayout.core.widgets.analyzer.BasicMeasure A[IMMUTABLE_TYPE, THIS]), (r9v0 'measurer' androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer A[D('measurer' androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'widget' androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'measureStrategy' int A[D('measureStrategy' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:60:0x006c \-\> B:62:0x0074, CROSS_EDGE: B:58:0x0066 \-\> B:62:0x0074, CROSS_EDGE: B:56:0x005e \-\> B:58:0x0066, CROSS_EDGE: B:54:0x0058 \-\> B:58:0x0066, CROSS_EDGE: B:52:0x0056 \-\> B:53:0x0057, CROSS_EDGE: B:48:0x004c \-\> B:52:0x0056, CROSS_EDGE: B:47:0x004b \-\> B:48:0x004c, CROSS_EDGE: B:43:0x0041 \-\> B:47:0x004b, CROSS_EDGE: B:41:0x003f \-\> B:42:0x0040, CROSS_EDGE: B:37:0x0034 \-\> B:38:0x0035\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_47;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_52;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_58;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_62;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_33;
Node_52 -> Node_53;
Node_47 -> Node_48;
Node_41 -> Node_42;
Node_37 -> Node_38;
}

