digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.BasicMeasure.updateHierarchy(Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidgetContainer;)V" {
subgraph cluster_Region_2009862500 {
label = "R(3:1|(3:3|(1:9)(0)|8)|12)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0000|r5.mVariableDimensionsWidgets.clear()\lint int r0 = r6.mChildren.size()\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_1986296997 {
label = "LOOP:0: (3:3|(1:9)(0)|8)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000c|LOOP_START\lLOOP:0: B:18:0x000c\-\>B:24:0x002b\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:17:0x0000, B:24:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \< r0) goto L3\l}"];
subgraph cluster_Region_1192920490 {
label = "R(3:3|(1:9)(0)|8)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x000e|androidx.constraintlayout.core.widgets.ConstraintWidget androidx.constraintlayout.core.widgets.ConstraintWidget r2 = r6.mChildren.get(r1)\l}"];
subgraph cluster_IfRegion_1902452883 {
label = "IF [B:20:0x001c, B:22:0x0024] THEN: R(1:9) ELSE: R(0)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x001c|if (r2.getHorizontalDimensionBehaviour() == androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L9\l}"];
Node_22 [shape=record,label="{22\:\ 0x0024|ADDED_TO_REGION\l|if (r2.getVerticalDimensionBehaviour() == androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L9\l}"];
subgraph cluster_Region_1723160810 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0026|r5.mVariableDimensionsWidgets.add(r2)\l}"];
}
subgraph cluster_Region_952231337 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_24 [shape=record,label="{24\:\ 0x002b|LOOP_END\lLOOP:0: B:18:0x000c\-\>B:24:0x002b\l|r1++\l}"];
}
}
Node_25 [shape=record,label="{25\:\ 0x002e|r6.invalidateGraph()\l}"];
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x001e}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x002b|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x002b|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x002e|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0031}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.updateHierarchy((r5v0 'this' androidx.constraintlayout.core.widgets.analyzer.BasicMeasure A[IMMUTABLE_TYPE, THIS]), (r6v0 'layout' androidx.constraintlayout.core.widgets.ConstraintWidgetContainer A[D('layout' androidx.constraintlayout.core.widgets.ConstraintWidgetContainer), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x002b \-\> B:18:0x000c, CROSS_EDGE: B:22:0x0024 \-\> B:24:0x002b, CROSS_EDGE: B:20:0x001c \-\> B:23:0x0026\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_27[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_22 -> Node_23;
Node_22 -> Node_29[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_18;
Node_25 -> Node_26;
Node_15 -> Node_17;
Node_21 -> Node_22;
Node_29 -> Node_24;
Node_28 -> Node_24;
Node_27 -> Node_25;
Node_26 -> Node_16;
}

