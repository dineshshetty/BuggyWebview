digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.WidgetRun.getTarget(Landroidx\/constraintlayout\/core\/widgets\/ConstraintAnchor;I)Landroidx\/constraintlayout\/core\/widgets\/analyzer\/DependencyNode;" {
subgraph cluster_Region_232429139 {
label = "R(1:(2:(1:3)|(4:5|6|8|9)))";
node [shape=record,color=blue];
subgraph cluster_Region_1557243787 {
label = "R(2:(1:3)|(4:5|6|8|9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1842826016 {
label = "IF [B:21:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0002|if (r7.mTarget == null) goto L3\l}"];
subgraph cluster_Region_1576132379 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0004|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_339383462 {
label = "R(4:5|6|8|9)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0006|androidx.constraintlayout.core.widgets.ConstraintWidget androidx.constraintlayout.core.widgets.ConstraintWidget r1 = r7.mTarget.mOwner\l}"];
Node_25 [shape=record,label="{25\:\ 0x000b|androidx.constraintlayout.core.widgets.analyzer.WidgetRun r2 = r8 == 0 ? r1.horizontalRun : r1.verticalRun\l}"];
Node_28 [shape=record,label="{28\:\ 0x0012|PHI: r2 \l  PHI: (r2v1 'run' androidx.constraintlayout.core.widgets.analyzer.WidgetRun) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|androidx.constraintlayout.core.widgets.ConstraintAnchor$Type androidx.constraintlayout.core.widgets.ConstraintAnchor.Type r3 = r7.mTarget.mType\l}"];
subgraph cluster_SwitchRegion_1779501843 {
label = "Switch: 3
 case 1, 3 -> R(2:12|13)
 case 2, 5 -> R(2:10|11)
 case 4, default -> R(1:14)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x001e|switch(androidx.constraintlayout.core.widgets.analyzer.WidgetRun.C01441.f48x6930e354[r3.ordinal()]) \{\l    case 1: goto L12;\l    case 2: goto L10;\l    case 3: goto L12;\l    case 4: goto L14;\l    case 5: goto L10;\l    default: goto L14;\l\}\l}"];
subgraph cluster_Region_2009872083 {
label = "R(2:12|13)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0025|androidx.constraintlayout.core.widgets.analyzer.DependencyNode androidx.constraintlayout.core.widgets.analyzer.DependencyNode r0 = r2.start\l}"];
Node_33 [shape=record,label="{33\:\ 0x0028|RETURN\lORIG_RETURN\l|return r0\l}"];
}
subgraph cluster_Region_1847898256 {
label = "R(2:10|11)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0022|androidx.constraintlayout.core.widgets.analyzer.DependencyNode androidx.constraintlayout.core.widgets.analyzer.DependencyNode r0 = r2.end\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
subgraph cluster_Region_79733496 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
}
}
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0000}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x000d}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0010}"];
MethodNode[shape=record,label="{public final androidx.constraintlayout.core.widgets.analyzer.DependencyNode androidx.constraintlayout.core.widgets.analyzer.WidgetRun.getTarget((r6v0 'this' androidx.constraintlayout.core.widgets.analyzer.WidgetRun A[IMMUTABLE_TYPE, THIS]), (r7v0 'anchor' androidx.constraintlayout.core.widgets.ConstraintAnchor A[D('anchor' androidx.constraintlayout.core.widgets.ConstraintAnchor), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'orientation' int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0028 \-\> B:19:?, CROSS_EDGE: B:32:0x0025 \-\> B:33:0x0028, CROSS_EDGE: B:29:0x001e \-\> B:33:0x0028, CROSS_EDGE: B:27:0x0010 \-\> B:28:0x0012\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_21 -> Node_22;
Node_21 -> Node_24[style=dashed];
Node_22 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_27;
Node_28 -> Node_29;
Node_29 -> Node_31;
Node_29 -> Node_32;
Node_29 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_31 -> Node_34;
Node_34 -> Node_19;
Node_35 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_26 -> Node_28;
Node_27 -> Node_28;
}

