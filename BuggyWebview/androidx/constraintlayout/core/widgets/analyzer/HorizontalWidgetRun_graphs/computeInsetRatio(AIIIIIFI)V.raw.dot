digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun.computeInsetRatio([IIIIIFI)V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: ARITH  (r0 I:int) = (r12 I:int A[D('x2' int)]) \- (r11 I:int A[D('x1' int)])  (LINE:277)\l0x0002: ARITH  (r1 I:int) = (r14 I:int A[D('y2' int)]) \- (r13 I:int A[D('y1' int)])  (LINE:278)\l0x0004: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:279)\l0x0005: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: CONST  (r4 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|0x0008: SWITCH  (r16 I:?? A[D('side' int)])\l case \-1: goto B:29:0x0020\l case 0: goto B:28:0x0016\l case 1: goto B:27:0x000c\l default: goto B:39:? \l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|0x000c: CAST (r5 I:float) = (float) (r0 I:int A[D('dx' int)])  (LINE:301)\l0x000d: ARITH  (r5 I:float) = (r5 I:float) * (r15 I:float A[D('ratio' float)]) \l0x000f: ARITH  (r5 I:float) = (r5 I:float) + (r4 I:float) \l0x0010: CAST (r4 I:int) = (int) (r5 I:float) \l0x0011: APUT  \l  (r10 I:??[int, float][] A[D('dimensions' int[])])\l  (r3 I:??[int, short, byte, char])\l  (r0 I:??[int, float, short, byte, char] A[D('dx' int)])\l  (LINE:302)\l0x0013: APUT  \l  (r10 I:??[int, float][] A[D('dimensions' int[])])\l  (r2 I:??[int, short, byte, char])\l  (r4 I:??[int, float, short, byte, char] A[D('verticalSide' int)])\l  (LINE:303)\l}"];
Node_37 [shape=record,label="{37\:\ 0x003d|RETURN\lORIG_RETURN\l|0x003d: RETURN    (LINE:308)\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0016|0x0016: CAST (r5 I:float) = (float) (r1 I:int A[D('dy' int)])  (LINE:295)\l0x0017: ARITH  (r5 I:float) = (r5 I:float) * (r15 I:float A[D('ratio' float)]) \l0x0019: ARITH  (r5 I:float) = (r5 I:float) + (r4 I:float) \l0x001a: CAST (r4 I:int) = (int) (r5 I:float) \l0x001b: APUT  \l  (r10 I:??[int, float][] A[D('dimensions' int[])])\l  (r3 I:??[int, short, byte, char])\l  (r4 I:??[int, float, short, byte, char] A[D('horizontalSide' int)])\l  (LINE:296)\l0x001d: APUT  \l  (r10 I:??[int, float][] A[D('dimensions' int[])])\l  (r2 I:??[int, short, byte, char])\l  (r1 I:??[int, float, short, byte, char] A[D('dy' int)])\l  (LINE:297)\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|0x003d: RETURN   A[SYNTHETIC] (LINE:308)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0020|0x0020: CAST (r5 I:float) = (float) (r1 I:int A[D('dy' int)])  (LINE:281)\l0x0021: ARITH  (r5 I:float) = (r5 I:float) * (r15 I:float A[D('ratio' float)]) \l0x0023: ARITH  (r5 I:float) = (r5 I:float) + (r4 I:float) \l0x0024: CAST (r5 I:int) = (int) (r5 I:float) \l0x0025: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dy' int)])  (LINE:282)\l0x0026: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dx' int)])  (LINE:283)\l0x0027: CAST (r8 I:float) = (float) (r0 I:int A[D('dx' int)])  (LINE:284)\l0x0028: ARITH  (r8 I:float) = (r8 I:float) \/ (r15 I:float A[D('ratio' float)]) \l0x0029: ARITH  (r8 I:float) = (r8 I:float) + (r4 I:float) \l0x002a: CAST (r4 I:int) = (int) (r8 I:float) \l}"];
Node_30 [shape=record,label="{30\:\ 0x002b|0x002b: IF  (r5 I:??[int, byte, short, char] A[D('candidateX1' int)]) \> (r0 I:??[int, byte, short, char] A[D('dx' int)])  \-\> B:33:0x0034  (LINE:285)\l}"];
Node_31 [shape=record,label="{31\:\ 0x002d|0x002d: IF  (r6 I:??[int, byte, short, char] A[D('candidateY1' int)]) \> (r1 I:??[int, byte, short, char] A[D('dy' int)])  \-\> B:33:0x0034 \l}"];
Node_32 [shape=record,label="{32\:\ 0x002f|0x002f: APUT  \l  (r10 I:??[int, float][] A[D('dimensions' int[])])\l  (r3 I:??[int, short, byte, char])\l  (r5 I:??[int, float, short, byte, char] A[D('candidateX1' int)])\l  (LINE:286)\l0x0031: APUT  \l  (r10 I:??[int, float][] A[D('dimensions' int[])])\l  (r2 I:??[int, short, byte, char])\l  (r6 I:??[int, float, short, byte, char] A[D('candidateY1' int)])\l  (LINE:287)\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|0x003d: RETURN   A[SYNTHETIC] (LINE:308)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0034|0x0034: IF  (r7 I:??[int, byte, short, char] A[D('candidateX2' int)]) \> (r0 I:??[int, byte, short, char] A[D('dx' int)])  \-\> B:42:?  (LINE:288)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0036|0x0036: IF  (r4 I:??[int, byte, short, char] A[D('candidateY2' int)]) \> (r1 I:??[int, byte, short, char] A[D('dy' int)])  \-\> B:43:? \l}"];
Node_35 [shape=record,label="{35\:\ 0x0038|0x0038: APUT  \l  (r10 I:??[int, float][] A[D('dimensions' int[])])\l  (r3 I:??[int, short, byte, char])\l  (r7 I:??[int, float, short, byte, char] A[D('candidateX2' int)])\l  (LINE:289)\l0x003a: APUT  \l  (r10 I:??[int, float][] A[D('dimensions' int[])])\l  (r2 I:??[int, short, byte, char])\l  (r4 I:??[int, float, short, byte, char] A[D('candidateY2' int)])\l  (LINE:290)\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|0x003d: RETURN   A[SYNTHETIC] (LINE:308)\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|0x003d: RETURN   A[SYNTHETIC] (LINE:308)\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|0x003d: RETURN   A[SYNTHETIC] (LINE:308)\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x003d: RETURN   A[SYNTHETIC] (LINE:308)\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun.computeInsetRatio((r9 'this' I:androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun A[IMMUTABLE_TYPE, THIS]), (r10 I:int[] A[D('dimensions' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('x1' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('x2' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('y1' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('y2' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:float A[D('ratio' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:int A[D('side' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0016 \-\> B:37:0x003d, CROSS_EDGE: B:32:0x002f \-\> B:37:0x003d, CROSS_EDGE: B:35:0x0038 \-\> B:37:0x003d, CROSS_EDGE: B:34:0x0036 \-\> B:37:0x003d, CROSS_EDGE: B:33:0x0034 \-\> B:37:0x003d, CROSS_EDGE: B:30:0x002b \-\> B:33:0x0034, CROSS_EDGE: B:25:0x0008 \-\> B:37:0x003d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0015: r4 'verticalSide' I\l  0x001b\-0x001f: r4 'horizontalSide' I\l  0x002b\-0x003c: r4 'candidateY2' I\l  0x0025\-0x003c: r5 'candidateX1' I\l  0x0026\-0x003c: r6 'candidateY1' I\l  0x0027\-0x003c: r7 'candidateX2' I\l  0x0002\-0x0047: r0 'dx' I\l  0x0004\-0x0047: r1 'dy' I\l  \-1 \-0x0047: r10 'dimensions' [I\l  \-1 \-0x0047: r11 'x1' I\l  \-1 \-0x0047: r12 'x2' I\l  \-1 \-0x0047: r13 'y1' I\l  \-1 \-0x0047: r14 'y2' I\l  \-1 \-0x0047: r15 'ratio' F\l  \-1 \-0x0047: r16 'side' I\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_28;
Node_25 -> Node_29;
Node_25 -> Node_39;
Node_27 -> Node_37;
Node_37 -> Node_23;
Node_28 -> Node_38;
Node_38 -> Node_23;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_41;
Node_41 -> Node_23;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_42;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_43;
Node_35 -> Node_40;
Node_40 -> Node_23;
Node_43 -> Node_23;
Node_42 -> Node_23;
Node_39 -> Node_23;
}

