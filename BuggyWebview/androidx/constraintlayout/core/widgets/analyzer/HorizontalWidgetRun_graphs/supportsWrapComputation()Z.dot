digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun.supportsWrapComputation()Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000}"];
Node_13 [shape=record,label="{13\:\ 0x0005|if (r3.dimensionBehavior != androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L8\l}"];
Node_14 [shape=record,label="{14\:\ 0x0007}"];
Node_15 [shape=record,label="{15\:\ 0x000b|if (r3.widget.mMatchConstraintDefaultWidth != 0) goto L7\l}"];
Node_16 [shape=record,label="{16\:\ 0x000d|RETURN\l|return true\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|RETURN\l|return false\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{boolean androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun.supportsWrapComputation((r3v0 'this' androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x000f \-\> B:11:?, CROSS_EDGE: B:19:0x0010 \-\> B:11:?\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.widgets.analyzer.WidgetRun.supportsWrapComputation():boolean]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
Node_19 -> Node_11;
}

