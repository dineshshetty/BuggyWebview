digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun.computeInsetRatio([IIIIIFI)V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|int r0 = r12 \- r11\lint r1 = r14 \- r13\l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|switch(r16) \{\l    case \-1: goto L8;\l    case 0: goto L6;\l    case 1: goto L3;\l    default: goto L19;\l\}\l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|int r4 = (int) ((((float) r0) * r15) + 0.5f)\lr10[0] = r0\lr10[1] = r4\l}"];
Node_37 [shape=record,label="{37\:\ 0x003d|RETURN\lORIG_RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0016|int r4 = (int) ((((float) r1) * r15) + 0.5f)\lr10[0] = r4\lr10[1] = r1\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ 0x0020|int r5 = (int) ((((float) r1) * r15) + 0.5f)\lint r4 = (int) ((((float) r0) \/ r15) + 0.5f)\l}"];
Node_30 [shape=record,label="{30\:\ 0x002b|if (r5 \> r0) goto L13\l}"];
Node_31 [shape=record,label="{31\:\ 0x002d|if (r1 \> r1) goto L13\l}"];
Node_32 [shape=record,label="{32\:\ 0x002f|r10[0] = r5\lr10[1] = r1\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ 0x0034|if (r0 \> r0) goto L18\l}"];
Node_34 [shape=record,label="{34\:\ 0x0036|if (r4 \> r1) goto L17\l}"];
Node_35 [shape=record,label="{35\:\ 0x0038|r10[0] = r0\lr10[1] = r4\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun.computeInsetRatio((r9v0 'this' androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun A[IMMUTABLE_TYPE, THIS]), (r10v0 'dimensions' int[] A[D('dimensions' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'x1' int A[D('x1' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'x2' int A[D('x2' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'y1' int A[D('y1' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'y2' int A[D('y2' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'ratio' float A[D('ratio' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'side' int A[D('side' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0016 \-\> B:37:0x003d, CROSS_EDGE: B:32:0x002f \-\> B:37:0x003d, CROSS_EDGE: B:35:0x0038 \-\> B:37:0x003d, CROSS_EDGE: B:34:0x0036 \-\> B:37:0x003d, CROSS_EDGE: B:33:0x0034 \-\> B:37:0x003d, CROSS_EDGE: B:30:0x002b \-\> B:33:0x0034, CROSS_EDGE: B:25:0x0008 \-\> B:37:0x003d\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_28;
Node_25 -> Node_29;
Node_25 -> Node_39;
Node_27 -> Node_37;
Node_37 -> Node_23;
Node_28 -> Node_38;
Node_38 -> Node_23;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_41;
Node_41 -> Node_23;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_42;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_43;
Node_35 -> Node_40;
Node_40 -> Node_23;
Node_43 -> Node_23;
Node_42 -> Node_23;
Node_39 -> Node_23;
}

