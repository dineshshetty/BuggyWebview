digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.Grouping.validInGroup(Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour  (LINE:48)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('widgetHorizontal' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) == (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: SGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('widgetHorizontal' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) == (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0015 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: SGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_PARENT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|0x000c: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('widgetHorizontal' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0013 \l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|0x000e: SGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_9 [shape=record,label="{9\:\ 0x0010|0x0010: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('layoutHorizontal' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) == (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0013 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|0x0013: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0016|0x0016: SGET  (r3 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour  (LINE:50)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|0x0018: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('widgetVertical' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0029 \l}"];
Node_15 [shape=record,label="{15\:\ 0x001a|0x001a: SGET  (r3 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_16 [shape=record,label="{16\:\ 0x001c|0x001c: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('widgetVertical' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0029 \l}"];
Node_17 [shape=record,label="{17\:\ 0x001e|0x001e: SGET  (r3 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_PARENT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_18 [shape=record,label="{18\:\ 0x0020|0x0020: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('widgetVertical' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0027 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0022|0x0022: SGET  (r3 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_20 [shape=record,label="{20\:\ 0x0024|0x0024: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('layoutVertical' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0027 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0027|0x0027: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x002a|0x002a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fixedHorizontal' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0030  (LINE:52)\l}"];
Node_25 [shape=record,label="{25\:\ 0x002c|0x002c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fixedVertical' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x002f \l}"];
Node_27 [shape=record,label="{27\:\ 0x002f|RETURN\l|0x002f: RETURN  (r1 I:boolean)  (LINE:55)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0030|RETURN\l|0x0030: RETURN  (r2 I:boolean)  (LINE:53)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0029|0x0029: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|0x0015: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public static boolean androidx.constraintlayout.core.widgets.analyzer.Grouping.validInGroup((r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour A[D('layoutHorizontal' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour A[D('layoutVertical' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour A[D('widgetHorizontal' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour A[D('widgetVertical' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0030 \-\> B:1:?, CROSS_EDGE: B:24:0x002a \-\> B:28:0x0030, CROSS_EDGE: B:23:0x0029 \-\> B:24:0x002a, CROSS_EDGE: B:18:0x0020 \-\> B:22:0x0027, CROSS_EDGE: B:16:0x001c \-\> B:23:0x0029, CROSS_EDGE: B:14:0x0018 \-\> B:23:0x0029, CROSS_EDGE: B:12:0x0015 \-\> B:13:0x0016, CROSS_EDGE: B:7:0x000c \-\> B:11:0x0013, CROSS_EDGE: B:5:0x0008 \-\> B:12:0x0015, CROSS_EDGE: B:3:0x0004 \-\> B:12:0x0015\lDebug Info:\l  0x0016\-0x0030: r0 'fixedHorizontal' Z\l  0x002a\-0x0030: r3 'fixedVertical' Z\l  \-1 \-0x0030: r4 'layoutHorizontal' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;\l  \-1 \-0x0030: r5 'layoutVertical' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;\l  \-1 \-0x0030: r6 'widgetHorizontal' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;\l  \-1 \-0x0030: r7 'widgetVertical' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_23;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_27;
Node_25 -> Node_28[style=dashed];
Node_27 -> Node_1;
Node_28 -> Node_1;
Node_23 -> Node_24;
Node_12 -> Node_13;
}

