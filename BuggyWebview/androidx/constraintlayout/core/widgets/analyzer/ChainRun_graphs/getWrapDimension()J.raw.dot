digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.ChainRun.getWrapDimension()J" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetRun\>) = (r7 I:androidx.constraintlayout.core.widgets.analyzer.ChainRun) androidx.constraintlayout.core.widgets.analyzer.ChainRun.widgets java.util.ArrayList  (LINE:66)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0006: CONST  (r1 I:??[long, double]) = (0 ??[long, double])  (LINE:67)\l0x0008: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:68)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0009|LOOP_START\lLOOP:0: B:10:0x0009\-\>B:11:0x000b\l|0x0009: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:13:0x0027 \l}"];
Node_11 [shape=record,label="{11\:\ 0x000b|LOOP_END\lLOOP:0: B:10:0x0009\-\>B:11:0x000b\l|0x000b: IGET  (r4 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetRun\>) = (r7 I:androidx.constraintlayout.core.widgets.analyzer.ChainRun) androidx.constraintlayout.core.widgets.analyzer.ChainRun.widgets java.util.ArrayList  (LINE:69)\l0x000d: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.ArrayList), (r3 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0011: CHECK_CAST (r4 I:androidx.constraintlayout.core.widgets.analyzer.WidgetRun) = (androidx.constraintlayout.core.widgets.analyzer.WidgetRun) (r4 I:??[OBJECT, ARRAY]) \l0x0013: IGET  (r5 I:androidx.constraintlayout.core.widgets.analyzer.DependencyNode) = \l  (r4 I:androidx.constraintlayout.core.widgets.analyzer.WidgetRun A[D('run' androidx.constraintlayout.core.widgets.analyzer.WidgetRun)])\l androidx.constraintlayout.core.widgets.analyzer.WidgetRun.start androidx.constraintlayout.core.widgets.analyzer.DependencyNode  (LINE:70)\l0x0015: IGET  (r5 I:int) = (r5 I:androidx.constraintlayout.core.widgets.analyzer.DependencyNode) androidx.constraintlayout.core.widgets.analyzer.DependencyNode.margin int \l0x0017: CAST (r5 I:long) = (long) (r5 I:int) \l0x0018: ARITH  (r1 I:long) = (r1 I:long A[D('wrapDimension' long)]) + (r5 I:long) \l0x0019: INVOKE  (r5 I:long) = \l  (r4 I:androidx.constraintlayout.core.widgets.analyzer.WidgetRun A[D('run' androidx.constraintlayout.core.widgets.analyzer.WidgetRun)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.analyzer.WidgetRun.getWrapDimension():long A[MD:():long (m)] (LINE:71)\l0x001d: ARITH  (r1 I:long) = (r1 I:long A[D('wrapDimension' long)]) + (r5 I:long) \l0x001e: IGET  (r5 I:androidx.constraintlayout.core.widgets.analyzer.DependencyNode) = \l  (r4 I:androidx.constraintlayout.core.widgets.analyzer.WidgetRun A[D('run' androidx.constraintlayout.core.widgets.analyzer.WidgetRun)])\l androidx.constraintlayout.core.widgets.analyzer.WidgetRun.end androidx.constraintlayout.core.widgets.analyzer.DependencyNode  (LINE:72)\l0x0020: IGET  (r5 I:int) = (r5 I:androidx.constraintlayout.core.widgets.analyzer.DependencyNode) androidx.constraintlayout.core.widgets.analyzer.DependencyNode.margin int \l0x0022: CAST (r5 I:long) = (long) (r5 I:int) \l0x0023: ARITH  (r1 I:long) = (r1 I:long A[D('wrapDimension' long)]) + (r5 I:long) \l0x0024: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:68)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|RETURN\l|0x0027: RETURN  (r1 I:long A[D('wrapDimension' long)])  (LINE:74)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public long androidx.constraintlayout.core.widgets.analyzer.ChainRun.getWrapDimension((r7 'this' I:androidx.constraintlayout.core.widgets.analyzer.ChainRun A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x000b \-\> B:10:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0024: r4 'run' Landroidx\/constraintlayout\/core\/widgets\/analyzer\/WidgetRun;\l  0x0009\-0x0027: r3 'i' I\l  0x0006\-0x0027: r0 'count' I\l  0x0008\-0x0027: r1 'wrapDimension' J\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.widgets.analyzer.WidgetRun.getWrapDimension():long]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_10;
Node_13 -> Node_12;
Node_12 -> Node_8;
}

