digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.ChainRun.getWrapDimension()J" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|int r0 = r7.widgets.size()\lr1 = 0\lr3 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0009|LOOP_START\lLOOP:0: B:10:0x0009\-\>B:11:0x000b\lPHI: r1 r3 \l  PHI: (r1v1 'wrapDimension' long) = (r1v0 'wrapDimension' long), (r1v4 'wrapDimension' long) binds: [B:9:0x0000, B:11:0x000b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v2 'i' int) binds: [B:9:0x0000, B:11:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \>= r0) goto L4\l}"];
Node_11 [shape=record,label="{11\:\ 0x000b|LOOP_END\lLOOP:0: B:10:0x0009\-\>B:11:0x000b\l|androidx.constraintlayout.core.widgets.analyzer.WidgetRun r4 = r7.widgets.get(r3)\llong r1 = ((r1 + ((long) r4.start.margin)) + r4.getWrapDimension()) + ((long) r4.end.margin)\lint r3 = r3 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|RETURN\l|return r1\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public long androidx.constraintlayout.core.widgets.analyzer.ChainRun.getWrapDimension((r7v0 'this' androidx.constraintlayout.core.widgets.analyzer.ChainRun A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x000b \-\> B:10:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.widgets.analyzer.WidgetRun.getWrapDimension():long]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_10;
Node_13 -> Node_12;
Node_12 -> Node_8;
}

