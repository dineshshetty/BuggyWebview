digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.WidgetGroup.solverMeasure(Landroidx\/constraintlayout\/core\/LinearSystem;Ljava\/util\/ArrayList;I)I" {
subgraph cluster_Region_434695934 {
label = "R(8:1|(1:4)|(1:9)|(1:14)|(1:16)|17|(1:20)|(2:(2:23|24)|(2:26|27)))";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0000|androidx.constraintlayout.core.widgets.ConstraintWidgetContainer androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r1 = (androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) r8.get(0).getParent()\lr7.reset()\lr1.addToSolver(r7, false)\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_70426721 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0019|if (r3 \< r8.size()) goto L4\l}"];
subgraph cluster_Region_1440310665 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x001b|LOOP_END\lLOOP:0: B:35:0x0015\-\>B:37:0x001b\l|androidx.constraintlayout.core.widgets.ConstraintWidget androidx.constraintlayout.core.widgets.ConstraintWidget r4 = r8.get(r3)\lr4.addToSolver(r7, false)\lr3++\l}"];
}
}
subgraph cluster_IfRegion_1559419888 {
label = "IF [B:38:0x0027, B:40:0x002b] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0027|if (r9 == 0) goto L7\l}"];
Node_40 [shape=record,label="{40\:\ 0x002b|ADDED_TO_REGION\l|if (r1.mHorizontalChainsSize \> 0) goto L9\l}"];
subgraph cluster_Region_683998950 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x002d|androidx.constraintlayout.core.widgets.Chain.applyChainConstraints(r1, r7, r8, 0)\l}"];
}
}
subgraph cluster_IfRegion_482604409 {
label = "IF [B:43:0x0031, B:45:0x0035] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0031|if (r9 == 1) goto L12\l}"];
Node_45 [shape=record,label="{45\:\ 0x0035|ADDED_TO_REGION\l|if (r1.mVerticalChainsSize \> 0) goto L14\l}"];
subgraph cluster_Region_1115842305 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0037|androidx.constraintlayout.core.widgets.Chain.applyChainConstraints(r1, r7, r8, 1)\l}"];
}
}
subgraph cluster_TryCatchRegion_1014576230 {
label = "Try: R(1:16) catches: R(2:29|30)";
node [shape=record,color=blue];
subgraph cluster_Region_25134865 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x003a|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x003e, blocks: (B:47:0x003a), top: B:60:0x003a \}\lCatch: Exception \-\> 0x003e\l|r7.minimize()     \/\/ Catch: java.lang.Exception \-\> L3e\l}"];
}
subgraph cluster_Region_1606682180 {
label = "R(2:29|30) | ExcHandler: Exception \-\> 0x003e\l";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x003e|ExcHandler: Exception \-\> 0x003e\l}"];
Node_50 [shape=record,label="{50\:\ 0x003f|r0.printStackTrace()\l}"];
}
}
Node_51 [shape=record,label="{51\:\ 0x0042|r6.results = new java.util.ArrayList\<\>()\lint r0 = 0\l}"];
subgraph cluster_LoopRegion_1976769537 {
label = "LOOP:1: (1:20)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x004e|if (r0 \< r8.size()) goto L20\l}"];
subgraph cluster_Region_1030512736 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0050|LOOP_END\lLOOP:1: B:52:0x004a\-\>B:54:0x0050\l|androidx.constraintlayout.core.widgets.ConstraintWidget androidx.constraintlayout.core.widgets.ConstraintWidget r3 = r8.get(r0)\landroidx.constraintlayout.core.widgets.analyzer.WidgetGroup$MeasureResult androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.MeasureResult r4 = new androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.MeasureResult(r3, r7, r9)\lr6.results.add(r4)\lr0++\l}"];
}
}
subgraph cluster_Region_1217259917 {
label = "R(2:(2:23|24)|(2:26|27))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1025650430 {
label = "IF [B:55:0x0063] THEN: R(2:23|24) ELSE: null";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x0063|if (r9 == 0) goto L23\l}"];
subgraph cluster_Region_140843514 {
label = "R(2:23|24)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x0065|int int r0 = r7.getObjectVariableValue(r1.mLeft)\lint int r3 = r7.getObjectVariableValue(r1.mRight)\lr7.reset()\l}"];
Node_57 [shape=record,label="{57\:\ 0x0076|RETURN\l|return r3 \- r0\l}"];
}
}
subgraph cluster_Region_131724766 {
label = "R(2:26|27)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0077|int int r0 = r7.getObjectVariableValue(r1.mTop)\lint int r3 = r7.getObjectVariableValue(r1.mBottom)\lr7.reset()\l}"];
Node_59 [shape=record,label="{59\:\ 0x0088|RETURN\l|return r3 \- r0\l}"];
}
}
}
subgraph cluster_Region_1606682180 {
label = "R(2:29|30) | ExcHandler: Exception \-\> 0x003e\l";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x003e|ExcHandler: Exception \-\> 0x003e\l}"];
Node_50 [shape=record,label="{50\:\ 0x003f|r0.printStackTrace()\l}"];
}
Node_32 [shape=record,color=red,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0015|LOOP_START\lLOOP:0: B:35:0x0015\-\>B:37:0x001b\lPHI: r3 \l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v11 'i' int) binds: [B:34:0x0000, B:37:0x001b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x0027|SYNTHETIC\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0029}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0030}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0033}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x003a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x004a|LOOP_START\lLOOP:1: B:52:0x004a\-\>B:54:0x0050\lPHI: r0 \l  PHI: (r0v5 'i' int) = (r0v4 'i' int), (r0v10 'i' int) binds: [B:51:0x0042, B:54:0x0050] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0063|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_61 [shape=record,color=red,label="{61\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
MethodNode[shape=record,label="{private int androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.solverMeasure((r6v0 'this' androidx.constraintlayout.core.widgets.analyzer.WidgetGroup A[IMMUTABLE_TYPE, THIS]), (r7v0 'system' androidx.constraintlayout.core.LinearSystem A[D('system' androidx.constraintlayout.core.LinearSystem), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'widgets' java.util.ArrayList\<androidx.constraintlayout.core.widgets.ConstraintWidget\> A[D('widgets' java.util.ArrayList\<androidx.constraintlayout.core.widgets.ConstraintWidget\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'orientation' int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:37:0x001b \-\> B:35:0x0015, BACK_EDGE: B:54:0x0050 \-\> B:52:0x004a, CROSS_EDGE: B:59:0x0088 \-\> B:33:?, CROSS_EDGE: B:50:0x003f \-\> B:51:0x0042, CROSS_EDGE: B:60:0x003a \-\> B:49:0x003e, CROSS_EDGE: B:45:0x0035 \-\> B:60:0x003a, CROSS_EDGE: B:43:0x0031 \-\> B:60:0x003a, CROSS_EDGE: B:40:0x002b \-\> B:42:0x0030, CROSS_EDGE: B:38:0x0027 \-\> B:42:0x0030\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x003e, blocks: (B:47:0x003a), top: B:60:0x003a \}\lTYPE_VARS: EMPTY\lSIGNATURE: (Landroidx\/constraintlayout\/core\/LinearSystem;Ljava\/util\/ArrayList\<Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\>;I)I\l}"];
MethodNode -> Node_32;Node_34 -> Node_35;
Node_36 -> Node_37;
Node_36 -> Node_62[style=dashed];
Node_37 -> Node_35;
Node_38 -> Node_39;
Node_38 -> Node_42[style=dashed];
Node_40 -> Node_41;
Node_40 -> Node_42[style=dashed];
Node_41 -> Node_42;
Node_43 -> Node_44;
Node_43 -> Node_60[style=dashed];
Node_45 -> Node_46;
Node_45 -> Node_60[style=dashed];
Node_46 -> Node_60;
Node_47 -> Node_51;
Node_47 -> Node_61;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_53 -> Node_54;
Node_53 -> Node_63[style=dashed];
Node_54 -> Node_52;
Node_55 -> Node_56;
Node_55 -> Node_58[style=dashed];
Node_56 -> Node_57;
Node_57 -> Node_33;
Node_58 -> Node_59;
Node_59 -> Node_33;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_32 -> Node_34;
Node_35 -> Node_36;
Node_62 -> Node_38;
Node_39 -> Node_40;
Node_42 -> Node_43;
Node_44 -> Node_45;
Node_60 -> Node_47;
Node_60 -> Node_49;
Node_52 -> Node_53;
Node_63 -> Node_55;
Node_61 -> Node_49;
}

