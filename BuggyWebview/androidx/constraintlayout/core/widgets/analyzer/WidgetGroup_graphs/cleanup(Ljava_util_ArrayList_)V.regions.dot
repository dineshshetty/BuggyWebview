digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.WidgetGroup.cleanup(Ljava\/util\/ArrayList;)V" {
subgraph cluster_Region_1491344812 {
label = "R(3:1|(2:4|(3:7|(1:9)(0)|11))|(1:(1:15)))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0000|int int r0 = r5.widgets.size()\l}"];
subgraph cluster_IfRegion_426763269 {
label = "IF [B:22:0x0009, B:23:0x000b] THEN: R(2:4|(3:7|(1:9)(0)|11)) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0009|if (r5.moveTo != (\-1)) goto L3\l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|ADDED_TO_REGION\l|if (r0 \> 0) goto L4\l}"];
subgraph cluster_Region_1183175516 {
label = "R(2:4|(3:7|(1:9)(0)|11))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x000d|int r1 = 0\l}"];
subgraph cluster_LoopRegion_1056227165 {
label = "LOOP:0: (3:7|(1:9)(0)|11)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0012|if (r1 \< r6.size()) goto L7\l}"];
subgraph cluster_Region_1482500938 {
label = "R(3:7|(1:9)(0)|11)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0014|androidx.constraintlayout.core.widgets.analyzer.WidgetGroup androidx.constraintlayout.core.widgets.analyzer.WidgetGroup r2 = r6.get(r1)\l}"];
subgraph cluster_IfRegion_2086394447 {
label = "IF [B:28:0x001e] THEN: R(1:9) ELSE: R(0)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x001e|if (r5.moveTo == r2.f47id) goto L9\l}"];
subgraph cluster_Region_346876331 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0020|moveTo(r5.orientation, r2)\l}"];
}
subgraph cluster_Region_31049341 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_30 [shape=record,label="{30\:\ 0x0025|LOOP_END\lLOOP:0: B:25:0x000e\-\>B:30:0x0025\l|r1++\l}"];
}
}
}
}
subgraph cluster_Region_1038990784 {
label = "R(1:(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_601942102 {
label = "IF [B:31:0x0028] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0028|if (r0 == 0) goto L15\l}"];
subgraph cluster_Region_898386929 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x002a|r6.remove(r5)\l}"];
}
}
}
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x000e|LOOP_START\lLOOP:0: B:25:0x000e\-\>B:30:0x0025\lPHI: r1 \l  PHI: (r1v2 'i' int) = (r1v1 'i' int), (r1v3 'i' int) binds: [B:24:0x000d, B:30:0x0025] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0025|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0025|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0028|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x002d}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x002e}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.cleanup((r5v0 'this' androidx.constraintlayout.core.widgets.analyzer.WidgetGroup A[IMMUTABLE_TYPE, THIS]), (r6v0 'dependencyLists' java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetGroup\> A[D('dependencyLists' java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetGroup\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:30:0x0025 \-\> B:25:0x000e, CROSS_EDGE: B:28:0x001e \-\> B:30:0x0025, CROSS_EDGE: B:34:0x002e \-\> B:20:?, CROSS_EDGE: B:23:0x000b \-\> B:31:0x0028, CROSS_EDGE: B:22:0x0009 \-\> B:31:0x0028\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/util\/ArrayList\<Landroidx\/constraintlayout\/core\/widgets\/analyzer\/WidgetGroup;\>;)V\l}"];
MethodNode -> Node_19;Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_31[style=dashed];
Node_23 -> Node_24;
Node_23 -> Node_31[style=dashed];
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_26 -> Node_35[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_37[style=dashed];
Node_29 -> Node_36;
Node_30 -> Node_25;
Node_31 -> Node_32;
Node_31 -> Node_34[style=dashed];
Node_32 -> Node_33;
Node_19 -> Node_21;
Node_25 -> Node_26;
Node_36 -> Node_30;
Node_37 -> Node_30;
Node_35 -> Node_31;
Node_33 -> Node_20;
Node_34 -> Node_20;
}

