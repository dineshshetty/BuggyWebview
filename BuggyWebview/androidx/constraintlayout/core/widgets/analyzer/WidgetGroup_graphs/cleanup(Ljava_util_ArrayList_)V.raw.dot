digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.WidgetGroup.cleanup(Ljava\/util\/ArrayList;)V" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: IGET  (r0 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.ConstraintWidget\>) = (r5 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.widgets java.util.ArrayList  (LINE:210)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0006: IGET  (r1 I:int) = (r5 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.moveTo int  (LINE:211)\l0x0008: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|0x0009: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0028 \l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|0x000b: IF  (r0 I:??[int, byte, short, char] A[D('count' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:31:0x0028 \l}"];
Node_24 [shape=record,label="{24\:\ 0x000d|0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:212)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|LOOP_START\lLOOP:0: B:25:0x000e\-\>B:30:0x0025\l|0x000e: INVOKE  (r2 I:int) = \l  (r6 I:java.util.ArrayList A[D('dependencyLists' java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetGroup\>)])\l type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0012|0x0012: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:35:0x0028 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0014|0x0014: INVOKE  (r2 I:java.lang.Object) = \l  (r6 I:java.util.ArrayList A[D('dependencyLists' java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetGroup\>)])\l  (r1 I:int A[D('i' int)])\l type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:213)\l0x0018: CHECK_CAST (r2 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) = (androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) (r2 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r3 I:int) = (r5 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.moveTo int  (LINE:214)\l0x001c: IGET  (r4 I:int) = \l  (r2 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup A[D('group' androidx.constraintlayout.core.widgets.analyzer.WidgetGroup)])\l androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.id int \l}"];
Node_28 [shape=record,label="{28\:\ 0x001e|0x001e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0025 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0020|0x0020: IGET  (r3 I:int) = (r5 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.orientation int  (LINE:215)\l0x0022: INVOKE  \l  (r5 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup)\l  (r3 I:int)\l  (r2 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup A[D('group' androidx.constraintlayout.core.widgets.analyzer.WidgetGroup)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.moveTo(int, androidx.constraintlayout.core.widgets.analyzer.WidgetGroup):void A[MD:(int, androidx.constraintlayout.core.widgets.analyzer.WidgetGroup):void (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0025|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0025|LOOP_END\lLOOP:0: B:25:0x000e\-\>B:30:0x0025\l|0x0025: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:212)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0025|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0028|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0028|0x0028: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('count' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x002e  (LINE:219)\l}"];
Node_32 [shape=record,label="{32\:\ 0x002a|0x002a: INVOKE  \l  (r6 I:java.util.ArrayList A[D('dependencyLists' java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetGroup\>)])\l  (r5 I:java.lang.Object)\l type: VIRTUAL call: java.util.ArrayList.remove(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:220)\l}"];
Node_33 [shape=record,label="{33\:\ 0x002d|RETURN\l|0x002d: RETURN    (LINE:221)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x002e|RETURN\l|0x002e: RETURN    (LINE:223)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.cleanup((r5 'this' I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup A[IMMUTABLE_TYPE, THIS]), (r6 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetGroup\> A[D('dependencyLists' java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetGroup\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:30:0x0025 \-\> B:25:0x000e, CROSS_EDGE: B:28:0x001e \-\> B:30:0x0025, CROSS_EDGE: B:34:0x002e \-\> B:20:?, CROSS_EDGE: B:23:0x000b \-\> B:31:0x0028, CROSS_EDGE: B:22:0x0009 \-\> B:31:0x0028\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x0025: r2 'group' Landroidx\/constraintlayout\/core\/widgets\/analyzer\/WidgetGroup;\l  0x000e\-0x0028: r1 'i' I\l  0x0006\-0x002e: r0 'count' I\l  0x0000\-0x002e: r6 'dependencyLists' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroidx\/constraintlayout\/core\/widgets\/analyzer\/WidgetGroup;\>;\lSIGNATURE: (Ljava\/util\/ArrayList\<Landroidx\/constraintlayout\/core\/widgets\/analyzer\/WidgetGroup;\>;)V\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_31;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_31;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_35;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_37;
Node_29 -> Node_36;
Node_36 -> Node_30;
Node_30 -> Node_25;
Node_37 -> Node_30;
Node_35 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_20;
Node_34 -> Node_20;
}

