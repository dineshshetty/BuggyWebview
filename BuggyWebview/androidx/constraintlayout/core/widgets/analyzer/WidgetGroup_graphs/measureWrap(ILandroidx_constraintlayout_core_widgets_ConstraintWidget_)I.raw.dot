digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.WidgetGroup.measureWrap(ILandroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;)I" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: INVOKE  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) = \l  (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l  (r3 I:int A[D('orientation' int)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getDimensionBehaviour(int):androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour A[MD:(int):androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour (m)] (LINE:103)\l0x0004: SGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour  (LINE:104)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('behaviour' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0013 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|0x0008: SGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_PARENT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('behaviour' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0013 \l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: SGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('behaviour' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0011 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0011|RETURN\l|0x0011: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:115)\l0x0012: RETURN  (r1 I:int) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0013|0x0013: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('orientation' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x001a  (LINE:108)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0015|0x0015: INVOKE  (r1 I:int) = \l  (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getWidth():int A[MD:():int (m)] (LINE:109)\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x001e: RETURN  (r1 I:int A[D('dimension' int)]) A[SYNTHETIC] (LINE:113)\l}"];
Node_29 [shape=record,label="{29\:\ 0x001a|0x001a: INVOKE  (r1 I:int) = \l  (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getHeight():int A[MD:():int (m)] (LINE:111)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001e|RETURN\lORIG_RETURN\l|0x001e: RETURN  (r1 I:int A[D('dimension' int)])  (LINE:113)\l}"];
MethodNode[shape=record,label="{private int androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.measureWrap((r2 'this' I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x001e \-\> B:17:?, CROSS_EDGE: B:29:0x001a \-\> B:30:0x001e, CROSS_EDGE: B:21:0x000a \-\> B:27:0x0013, CROSS_EDGE: B:19:0x0006 \-\> B:27:0x0013\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0019\-0x001a: r1 'dimension' I\l  0x0004\-0x001e: r0 'behaviour' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;\l  0x001e\-0x001e: r1 'dimension' I\l  \-1 \-0x001e: r3 'orientation' I\l  \-1 \-0x001e: r4 'widget' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_27[style=dashed];
Node_25 -> Node_17;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_31;
Node_31 -> Node_17;
Node_29 -> Node_30;
Node_30 -> Node_17;
}

