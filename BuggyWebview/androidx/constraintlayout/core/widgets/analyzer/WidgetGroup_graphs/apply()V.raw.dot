digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.WidgetGroup.apply()V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetGroup$MeasureResult\>) = (r2 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.results java.util.ArrayList  (LINE:179)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0005 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|RETURN\l|0x0004: RETURN    (LINE:180)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|0x0005: IGET  (r0 I:boolean) = (r2 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.authoritative boolean  (LINE:182)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x000a \l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:183)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:185)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|LOOP_START\lLOOP:0: B:23:0x000b\-\>B:25:0x0013\l|0x000b: IGET  (r1 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetGroup$MeasureResult\>) = (r2 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.results java.util.ArrayList \l0x000d: INVOKE  (r1 I:int) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|0x0011: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:27:0x0021 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0013|LOOP_END\lLOOP:0: B:23:0x000b\-\>B:25:0x0013\l|0x0013: IGET  (r1 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.WidgetGroup$MeasureResult\>) = (r2 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.results java.util.ArrayList  (LINE:186)\l0x0015: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.ArrayList), (r0 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0019: CHECK_CAST (r1 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup$MeasureResult) = (androidx.constraintlayout.core.widgets.analyzer.WidgetGroup$MeasureResult) (r1 I:??[OBJECT, ARRAY]) \l0x001b: INVOKE  \l  (r1 I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup$MeasureResult A[D('result' androidx.constraintlayout.core.widgets.analyzer.WidgetGroup$MeasureResult)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.MeasureResult.apply():void A[MD:():void (m)] (LINE:187)\l0x001e: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:185)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0021|RETURN\l|0x0021: RETURN    (LINE:189)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.analyzer.WidgetGroup.apply((r2 'this' I:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0009 \-\> B:15:?, BACK_EDGE: B:25:0x0013 \-\> B:23:0x000b, CROSS_EDGE: B:26:0x0021 \-\> B:15:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x001e: r1 'result' Landroidx\/constraintlayout\/core\/widgets\/analyzer\/WidgetGroup$MeasureResult;\l  0x000b\-0x0021: r0 'i' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_15;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_23;
Node_27 -> Node_26;
Node_26 -> Node_15;
}

