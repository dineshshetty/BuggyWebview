digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.Direct.solveVerticalMatchConstraint(ILandroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;Landroidx\/constraintlayout\/core\/widgets\/analyzer\/BasicMeasure$Measurer;Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:float) = \l  (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getVerticalBiasPercent():float A[MD:():float (m)] (LINE:723)\l0x0004: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = \l  (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mTop androidx.constraintlayout.core.widgets.ConstraintAnchor  (LINE:724)\l0x0006: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x0008: INVOKE  (r1 I:int) = (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintAnchor.getFinalValue():int A[MD:():int (m)]\l0x000c: IGET  (r2 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = \l  (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mTop androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x000e: INVOKE  (r2 I:int) = (r2 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintAnchor.getMargin():int A[MD:():int (m)]\l0x0012: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0013: IGET  (r2 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = \l  (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mBottom androidx.constraintlayout.core.widgets.ConstraintAnchor  (LINE:725)\l0x0015: IGET  (r2 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r2 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x0017: INVOKE  (r2 I:int) = (r2 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintAnchor.getFinalValue():int A[MD:():int (m)]\l0x001b: IGET  (r3 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = \l  (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mBottom androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x001d: INVOKE  (r3 I:int) = (r3 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintAnchor.getMargin():int A[MD:():int (m)]\l0x0021: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|0x0022: IF  (r2 I:??[int, byte, short, char] A[D('s2' int)]) \< (r1 I:??[int, byte, short, char] A[D('s1' int)])  \-\> B:22:?  (LINE:726)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: INVOKE  (r3 I:int) = \l  (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getHeight():int A[MD:():int (m)] (LINE:727)\l0x0028: INVOKE  (r4 I:int) = \l  (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getVisibility():int A[MD:():int (m)] (LINE:728)\l0x002c: CONST  (r5 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l0x002e: CONST  (r6 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0030|0x0030: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0068 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|0x0032: IGET  (r4 I:int) = \l  (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mMatchConstraintDefaultHeight int  (LINE:729)\l0x0034: CONST  (r5 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0050 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|0x0037: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:730)\l0x0038: INSTANCE_OF  (r5 I:boolean) = (r10 I:??[OBJECT, ARRAY] A[D('layout' androidx.constraintlayout.core.widgets.ConstraintWidget)]) androidx.constraintlayout.core.widgets.ConstraintWidgetContainer  (LINE:731)\l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|0x003a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0041 \l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|0x003c: INVOKE  (r4 I:int A[D('parentHeight' int)]) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('layout' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getHeight():int A[MD:():int (m)] (LINE:732)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|0x0049: ARITH  (r5 I:float) = (r0 I:float A[D('bias' float)]) * (r6 I:float)  (LINE:736)\l0x004b: CAST (r7 I:float) = (float) (r4 I:int A[D('parentHeight' int)]) \l0x004c: ARITH  (r5 I:float) = (r5 I:float) * (r7 I:float) \l0x004e: CAST (r3 I:int A[D('height' int)]) = (int) (r5 I:float) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0058|0x0058: IGET  (r4 I:int) = \l  (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mMatchConstraintMinHeight int  (LINE:740)\l0x005a: INVOKE  (r3 I:int A[D('height' int)]) = (r4 I:int), (r3 I:int A[D('height' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x005e: IGET  (r4 I:int) = \l  (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mMatchConstraintMaxHeight int  (LINE:741)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0060|0x0060: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:20:0x0068 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0062|0x0062: IGET  (r4 I:int) = \l  (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mMatchConstraintMaxHeight int  (LINE:742)\l0x0064: INVOKE  (r3 I:int A[D('height' int)]) = (r4 I:int), (r3 I:int A[D('height' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0041|0x0041: INVOKE  (r5 I:androidx.constraintlayout.core.widgets.ConstraintWidget) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('layout' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getParent():androidx.constraintlayout.core.widgets.ConstraintWidget A[MD:():androidx.constraintlayout.core.widgets.ConstraintWidget (m)] (LINE:734)\l0x0045: INVOKE  (r4 I:int A[D('parentHeight' int)]) = (r5 I:androidx.constraintlayout.core.widgets.ConstraintWidget) type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getHeight():int A[MD:():int (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0050|0x0050: IGET  (r4 I:int) = \l  (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mMatchConstraintDefaultHeight int  (LINE:737)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|0x0052: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0058 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0054|0x0054: ARITH  (r3 I:int A[D('height' int)]) = (r2 I:int A[D('s2' int)]) \- (r1 I:int A[D('s1' int)])  (LINE:738)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0068|0x0068: ARITH  (r4 I:int) = (r2 I:int A[D('s2' int)]) \- (r1 I:int A[D('s1' int)])  (LINE:745)\l0x006a: ARITH  (r4 I:int) = (r4 I:int) \- (r3 I:int A[D('height' int)]) \l0x006b: CAST (r5 I:float) = (float) (r4 I:int A[D('distance' int)])  (LINE:746)\l0x006c: ARITH  (r5 I:float) = (r5 I:float) * (r0 I:float A[D('bias' float)]) \l0x006e: ARITH  (r5 I:float) = (r5 I:float) + (r6 I:float) \l0x006f: CAST (r5 I:int) = (int) (r5 I:float) \l0x0070: ARITH  (r6 I:int) = (r1 I:int A[D('s1' int)]) + (r5 I:int A[D('d1' int)])  (LINE:747)\l0x0072: ARITH  (r7 I:int) = (r6 I:int A[D('y1' int)]) + (r3 I:int A[D('height' int)])  (LINE:748)\l0x0074: INVOKE  \l  (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l  (r6 I:int A[D('y1' int)])\l  (r7 I:int A[D('y2' int)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.setFinalVertical(int, int):void A[MD:(int, int):void (m)] (LINE:749)\l0x0077: ARITH  (r8 I:int) = (r9 I:int A[D('level' int)]) + (1 int)  (LINE:750)\l0x0079: INVOKE  \l  (r8 I:int)\l  (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l  (r11 I:androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer A[D('measurer' androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer)])\l type: STATIC call: androidx.constraintlayout.core.widgets.analyzer.Direct.verticalSolvingPass(int, androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer):void A[MD:(int, androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer):void (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x007c|RETURN\lORIG_RETURN\l|0x007c: RETURN    (LINE:752)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|0x007c: RETURN   A[SYNTHETIC] (LINE:752)\l}"];
MethodNode[shape=record,label="{private static void androidx.constraintlayout.core.widgets.analyzer.Direct.solveVerticalMatchConstraint((r9 I:int A[D('level' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('layout' androidx.constraintlayout.core.widgets.ConstraintWidget), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer A[D('measurer' androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0060 \-\> B:20:0x0068, CROSS_EDGE: B:11:0x0041 \-\> B:12:0x0049, CROSS_EDGE: B:15:0x0054 \-\> B:17:0x0058, CROSS_EDGE: B:14:0x0052 \-\> B:17:0x0058, CROSS_EDGE: B:5:0x0030 \-\> B:20:0x0068, CROSS_EDGE: B:3:0x0022 \-\> B:21:0x007c\lDebug Info:\l  0x0038\-0x004f: r4 'parentHeight' I\l  0x0028\-0x007c: r3 'height' I\l  0x006b\-0x007c: r4 'distance' I\l  0x0070\-0x007c: r5 'd1' I\l  0x0072\-0x007c: r6 'y1' I\l  0x0074\-0x007c: r7 'y2' I\l  0x0004\-0x007c: r0 'bias' F\l  0x0013\-0x007c: r1 's1' I\l  0x0022\-0x007c: r2 's2' I\l  \-1 \-0x007c: r9 'level' I\l  \-1 \-0x007c: r10 'layout' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  \-1 \-0x007c: r11 'measurer' Landroidx\/constraintlayout\/core\/widgets\/analyzer\/BasicMeasure$Measurer;\l  \-1 \-0x007c: r12 'widget' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_22;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_20;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_17;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_22 -> Node_1;
}

