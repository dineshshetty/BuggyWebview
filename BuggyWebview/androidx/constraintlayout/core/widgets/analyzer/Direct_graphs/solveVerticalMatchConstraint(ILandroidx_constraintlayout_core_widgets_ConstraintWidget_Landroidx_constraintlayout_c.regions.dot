digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.Direct.solveVerticalMatchConstraint(ILandroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;Landroidx\/constraintlayout\/core\/widgets\/analyzer\/BasicMeasure$Measurer;Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;)V" {
subgraph cluster_Region_1769237949 {
label = "R(2:1|(1:(3:3|(3:(2:(1:9)(1:14)|10)(1:(1:17))|11|(1:13))|18))) | DECL_VAR: int parentHeight\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|float float r0 = r12.getVerticalBiasPercent()\lint int r1 = r12.mTop.mTarget.getFinalValue() + r12.mTop.getMargin()\lint int r2 = r12.mBottom.mTarget.getFinalValue() \- r12.mBottom.getMargin()\l}"];
subgraph cluster_Region_1397690314 {
label = "R(1:(3:3|(3:(2:(1:9)(1:14)|10)(1:(1:17))|11|(1:13))|18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1367269298 {
label = "IF [B:3:0x0022] THEN: R(3:3|(3:(2:(1:9)(1:14)|10)(1:(1:17))|11|(1:13))|18) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0022|if (r2 \>= r1) goto L3\l}"];
subgraph cluster_Region_1153783747 {
label = "R(3:3|(3:(2:(1:9)(1:14)|10)(1:(1:17))|11|(1:13))|18)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0024|int int r3 = r12.getHeight()\l}"];
subgraph cluster_IfRegion_671582091 {
label = "IF [B:5:0x0030] THEN: R(3:(2:(1:9)(1:14)|10)(1:(1:17))|11|(1:13)) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0030|if (r12.getVisibility() != 8) goto L5\l}"];
subgraph cluster_Region_1016359989 {
label = "R(3:(2:(1:9)(1:14)|10)(1:(1:17))|11|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_205802489 {
label = "IF [B:7:0x0035] THEN: R(2:(1:9)(1:14)|10) ELSE: R(1:(1:17))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0035|if (r12.mMatchConstraintDefaultHeight == 2) goto L7\l}"];
subgraph cluster_Region_1704480973 {
label = "R(2:(1:9)(1:14)|10)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1755806344 {
label = "IF [B:9:0x003a] THEN: R(1:9) ELSE: R(1:14)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x003a|if ((r10 instanceof androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) != false) goto L9\l}"];
subgraph cluster_Region_70518518 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x003c|int r4 = r10.getHeight()\l}"];
}
subgraph cluster_Region_1965398406 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0041|int r4 = r10.getParent().getHeight()\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0049|PHI: r4 \l  PHI: (r4v10 'parentHeight' int) = (r4v9 'parentHeight' int), (r4v11 'parentHeight' int) binds: [B:11:0x0041, B:10:0x003c] A[DONT_GENERATE, DONT_INLINE]\l|int r3 = (int) (r0 * 0.5f * r4)\l}"];
}
subgraph cluster_Region_1128073481 {
label = "R(1:(1:17)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1469244730 {
label = "IF [B:14:0x0052] THEN: R(1:17) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0052|if (r12.mMatchConstraintDefaultHeight == 0) goto L17\l}"];
subgraph cluster_Region_455956901 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0054|int r3 = r2 \- r1\l}"];
}
}
}
}
Node_17 [shape=record,label="{17\:\ 0x0058|PHI: r3 \l  PHI: (r3v5 'height' int) = (r3v2 'height' int), (r3v4 'height' int), (r3v8 'height' int) binds: [B:14:0x0052, B:15:0x0054, B:12:0x0049] A[DONT_GENERATE, DONT_INLINE]\l|int r3 = java.lang.Math.max(r12.mMatchConstraintMinHeight, r3)\l}"];
subgraph cluster_IfRegion_2032625586 {
label = "IF [B:18:0x0060] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0060|if (r12.mMatchConstraintMaxHeight \> 0) goto L13\l}"];
subgraph cluster_Region_1384210219 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0062|int r3 = java.lang.Math.min(r12.mMatchConstraintMaxHeight, r3)\l}"];
}
}
}
}
Node_20 [shape=record,label="{20\:\ 0x0068|PHI: r3 \l  PHI: (r3v3 'height' int) = (r3v2 'height' int), (r3v6 'height' int), (r3v7 'height' int) binds: [B:5:0x0030, B:18:0x0060, B:19:0x0062] A[DONT_GENERATE, DONT_INLINE]\l|int int r4 = (r2 \- r1) \- r3\lint int r5 = (int) ((r4 * r0) + 0.5f)\lint int r6 = r1 + r5\lint int r7 = r6 + r3\lr12.setFinalVertical(r6, r7)\lverticalSolvingPass(r9 + 1, r12, r11)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0032}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0037}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0050}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x007c|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void androidx.constraintlayout.core.widgets.analyzer.Direct.solveVerticalMatchConstraint((r9v0 'level' int A[D('level' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'layout' androidx.constraintlayout.core.widgets.ConstraintWidget A[D('layout' androidx.constraintlayout.core.widgets.ConstraintWidget), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'measurer' androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer A[D('measurer' androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'widget' androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0060 \-\> B:20:0x0068, CROSS_EDGE: B:11:0x0041 \-\> B:12:0x0049, CROSS_EDGE: B:15:0x0054 \-\> B:17:0x0058, CROSS_EDGE: B:14:0x0052 \-\> B:17:0x0058, CROSS_EDGE: B:5:0x0030 \-\> B:20:0x0068, CROSS_EDGE: B:3:0x0022 \-\> B:21:0x007c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_22[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_20[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_13[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_17;
Node_14 -> Node_15;
Node_14 -> Node_17[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_0 -> Node_2;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_13 -> Node_14;
Node_21 -> Node_1;
Node_22 -> Node_1;
}

