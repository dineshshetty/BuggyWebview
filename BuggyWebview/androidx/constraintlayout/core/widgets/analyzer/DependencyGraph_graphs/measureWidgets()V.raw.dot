digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.DependencyGraph.measureWidgets()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY])  (LINE:565)\l0x0002: IGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) = (r6 I:androidx.constraintlayout.core.widgets.analyzer.DependencyGraph) androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.container androidx.constraintlayout.core.widgets.ConstraintWidgetContainer \l0x0004: IGET  (r0 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.ConstraintWidget\>) = (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) androidx.constraintlayout.core.widgets.ConstraintWidgetContainer.mChildren java.util.ArrayList \l0x0006: INVOKE  (r7 I:java.util.Iterator) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|LOOP_START\lLOOP:0: B:3:0x000a\-\>B:50:0x000a\l|0x000a: INVOKE  (r0 I:boolean) = (r7 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0101 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: INVOKE  (r0 I:java.lang.Object) = (r7 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0014: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0015: CHECK_CAST (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget) = (androidx.constraintlayout.core.widgets.ConstraintWidget) (r8 I:??[OBJECT, ARRAY]) \l0x0017: IGET  (r0 I:boolean) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.measured boolean  (LINE:566)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x001c \l}"];
Node_46 [shape=record,label="{46\:\ 0x001c|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[]) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mListDimensionBehaviors androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[]  (LINE:569)\l0x001e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001f: AGET  (r9 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0021: IGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[]) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mListDimensionBehaviors androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[]  (LINE:570)\l0x0023: CONST  (r10 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0024: AGET  (r11 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r10 I:??[int, short, byte, char]) \l0x0026: IGET  (r12 I:int) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mMatchConstraintDefaultWidth int  (LINE:571)\l0x0028: IGET  (r13 I:int) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mMatchConstraintDefaultHeight int  (LINE:572)\l0x002a: SGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour  (LINE:574)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('horiz' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) == (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0037 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: SGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('horiz' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0035 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|0x0032: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('horizMatchConstraintsType' int)]) != (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0035 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|0x0035: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|0x0038: MOVE  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0039: SGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour  (LINE:577)\l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|0x003b: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('vert' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) == (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0043 \l}"];
Node_18 [shape=record,label="{18\:\ 0x003d|0x003d: SGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|0x003f: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('vert' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0044 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|0x0041: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('vertMatchConstraintsType' int)]) != (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0044 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0044|0x0044: MOVE  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0045: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.horizontalRun androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun  (LINE:580)\l0x0047: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun) androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun.dimension androidx.constraintlayout.core.widgets.analyzer.DimensionDependency \l0x0049: IGET  (r5 I:boolean) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) androidx.constraintlayout.core.widgets.analyzer.DimensionDependency.resolved boolean \l0x004b: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.verticalRun androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun  (LINE:581)\l0x004d: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun.dimension androidx.constraintlayout.core.widgets.analyzer.DimensionDependency \l0x004f: IGET  (r4 I:boolean) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) androidx.constraintlayout.core.widgets.analyzer.DimensionDependency.resolved boolean \l}"];
Node_23 [shape=record,label="{23\:\ 0x0051|0x0051: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('horizResolved' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0079  (LINE:583)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0053|0x0053: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('vertResolved' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0079 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0055|0x0055: SGET  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour  (LINE:584)\l0x0057: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.horizontalRun androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun \l0x0059: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun) androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun.dimension androidx.constraintlayout.core.widgets.analyzer.DimensionDependency \l0x005b: IGET  (r3 I:int) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) androidx.constraintlayout.core.widgets.analyzer.DimensionDependency.value int \l0x005d: SGET  (r16 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l0x005f: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.verticalRun androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun \l0x0061: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun.dimension androidx.constraintlayout.core.widgets.analyzer.DimensionDependency \l0x0063: IGET  (r1 I:int) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) androidx.constraintlayout.core.widgets.analyzer.DimensionDependency.value int \l0x0065: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY]) \l0x0067: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0069: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)]) \l0x006a: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('vertResolved' boolean)]) \l0x006c: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('vertResolved' boolean)]) = (r16 I:??[OBJECT, ARRAY]) \l0x006e: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('horizResolved' boolean)]) \l0x0070: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('horizResolved' boolean)]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0072: INVOKE  \l  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DependencyGraph)\l  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget)\l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)\l  (r3 I:int)\l  (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)\l  (r5 I:int)\l type: DIRECT call: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.measure(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int):void A[MD:(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int):void (m)]\l0x0075: IPUT  \l  (r10 I:boolean)\l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.measured boolean  (LINE:586)\l}"];
Node_39 [shape=record,label="{39\:\ 0x00ea|0x00ea: IGET  (r0 I:boolean) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.measured boolean  (LINE:606)\l}"];
Node_40 [shape=record,label="{40\:\ 0x00ec|0x00ec: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x000a \l}"];
Node_48 [shape=record,label="{48\:\ 0x00ee|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x00ee|0x00ee: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.verticalRun androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun \l0x00f0: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun.baselineDimension androidx.constraintlayout.core.widgets.analyzer.DimensionDependency \l}"];
Node_42 [shape=record,label="{42\:\ 0x00f2|0x00f2: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x000a \l}"];
Node_49 [shape=record,label="{49\:\ 0x00f4|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x00f4|0x00f4: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.verticalRun androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun  (LINE:607)\l0x00f6: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun.baselineDimension androidx.constraintlayout.core.widgets.analyzer.DimensionDependency \l0x00f8: INVOKE  (r1 I:int) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getBaselineDistance():int A[MD:():int (m)]\l0x00fc: INVOKE  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency), (r1 I:int) type: VIRTUAL call: androidx.constraintlayout.core.widgets.analyzer.DimensionDependency.resolve(int):void A[MD:(int):void (m)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x000a|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x000a|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x000a\-\>B:50:0x000a\l}"];
Node_53 [shape=record,label="{53\:\ 0x000a|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x000a|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0079|0x0079: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('vertResolved' boolean)]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('vertResolved' boolean)])  (LINE:583)\l0x007b: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('horizResolved' boolean)]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x007d|0x007d: IF  (r16 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('horizResolved' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00b4  (LINE:587)\l}"];
Node_28 [shape=record,label="{28\:\ 0x007f|0x007f: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('vertWrap' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00b4 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0081|0x0081: SGET  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour  (LINE:588)\l0x0083: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.horizontalRun androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun \l0x0085: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun) androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun.dimension androidx.constraintlayout.core.widgets.analyzer.DimensionDependency \l0x0087: IGET  (r3 I:int) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) androidx.constraintlayout.core.widgets.analyzer.DimensionDependency.value int \l0x0089: SGET  (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l0x008b: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.verticalRun androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun \l0x008d: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun.dimension androidx.constraintlayout.core.widgets.analyzer.DimensionDependency \l0x008f: IGET  (r5 I:int) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) androidx.constraintlayout.core.widgets.analyzer.DimensionDependency.value int \l0x0091: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY]) \l0x0093: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)]) \l0x0094: INVOKE  \l  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DependencyGraph)\l  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget)\l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)\l  (r3 I:int)\l  (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)\l  (r5 I:int)\l type: DIRECT call: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.measure(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int):void A[MD:(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int):void (m)]\l0x0097: SGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour  (LINE:590)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0099|0x0099: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('vert' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x00a6 \l}"];
Node_31 [shape=record,label="{31\:\ 0x009b|0x009b: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.verticalRun androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun  (LINE:591)\l0x009d: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun.dimension androidx.constraintlayout.core.widgets.analyzer.DimensionDependency \l0x009f: INVOKE  (r1 I:int) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getHeight():int A[MD:():int (m)]\l0x00a3: IPUT  (r1 I:int), (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) androidx.constraintlayout.core.widgets.analyzer.DimensionDependency.wrapValue int \l}"];
Node_32 [shape=record,label="{32\:\ 0x00a6|0x00a6: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.verticalRun androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun  (LINE:593)\l0x00a8: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun.dimension androidx.constraintlayout.core.widgets.analyzer.DimensionDependency \l0x00aa: INVOKE  (r1 I:int) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getHeight():int A[MD:():int (m)]\l0x00ae: INVOKE  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency), (r1 I:int) type: VIRTUAL call: androidx.constraintlayout.core.widgets.analyzer.DimensionDependency.resolve(int):void A[MD:(int):void (m)]\l0x00b1: IPUT  \l  (r10 I:boolean)\l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.measured boolean  (LINE:594)\l}"];
Node_33 [shape=record,label="{33\:\ 0x00b4|0x00b4: IF  (r18 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('vertResolved' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x00ea  (LINE:596)\l}"];
Node_34 [shape=record,label="{34\:\ 0x00b6|0x00b6: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('horizWrap' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x00ea \l}"];
Node_35 [shape=record,label="{35\:\ 0x00b8|0x00b8: SGET  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour  (LINE:597)\l0x00ba: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.horizontalRun androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun \l0x00bc: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun) androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun.dimension androidx.constraintlayout.core.widgets.analyzer.DimensionDependency \l0x00be: IGET  (r3 I:int) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) androidx.constraintlayout.core.widgets.analyzer.DimensionDependency.value int \l0x00c0: SGET  (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l0x00c2: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.verticalRun androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun \l0x00c4: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun) androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun.dimension androidx.constraintlayout.core.widgets.analyzer.DimensionDependency \l0x00c6: IGET  (r5 I:int) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) androidx.constraintlayout.core.widgets.analyzer.DimensionDependency.value int \l0x00c8: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY]) \l0x00ca: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)]) \l0x00cb: INVOKE  \l  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DependencyGraph)\l  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget)\l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)\l  (r3 I:int)\l  (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)\l  (r5 I:int)\l type: DIRECT call: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.measure(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int):void A[MD:(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int):void (m)]\l0x00ce: SGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour  (LINE:599)\l}"];
Node_36 [shape=record,label="{36\:\ 0x00d0|0x00d0: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('horiz' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x00dd \l}"];
Node_37 [shape=record,label="{37\:\ 0x00d2|0x00d2: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.horizontalRun androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun  (LINE:600)\l0x00d4: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun) androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun.dimension androidx.constraintlayout.core.widgets.analyzer.DimensionDependency \l0x00d6: INVOKE  (r1 I:int) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getWidth():int A[MD:():int (m)]\l0x00da: IPUT  (r1 I:int), (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) androidx.constraintlayout.core.widgets.analyzer.DimensionDependency.wrapValue int \l}"];
Node_38 [shape=record,label="{38\:\ 0x00dd|0x00dd: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.horizontalRun androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun  (LINE:602)\l0x00df: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun) androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun.dimension androidx.constraintlayout.core.widgets.analyzer.DimensionDependency \l0x00e1: INVOKE  (r1 I:int) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getWidth():int A[MD:():int (m)]\l0x00e5: INVOKE  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DimensionDependency), (r1 I:int) type: VIRTUAL call: androidx.constraintlayout.core.widgets.analyzer.DimensionDependency.resolve(int):void A[MD:(int):void (m)]\l0x00e8: IPUT  \l  (r10 I:boolean)\l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.measured boolean  (LINE:603)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0043|0x0043: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|0x0037: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x000a|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0101|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0101|RETURN\l|0x0101: RETURN    (LINE:610)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.measureWidgets((r19 'this' I:androidx.constraintlayout.core.widgets.analyzer.DependencyGraph A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:43:0x00f4 \-\> B:3:0x000a, BACK_EDGE: B:42:0x00f2 \-\> B:3:0x000a, BACK_EDGE: B:40:0x00ec \-\> B:3:0x000a, CROSS_EDGE: B:31:0x009b \-\> B:39:0x00ea, CROSS_EDGE: B:32:0x00a6 \-\> B:39:0x00ea, CROSS_EDGE: B:37:0x00d2 \-\> B:39:0x00ea, CROSS_EDGE: B:38:0x00dd \-\> B:39:0x00ea, CROSS_EDGE: B:34:0x00b6 \-\> B:39:0x00ea, CROSS_EDGE: B:33:0x00b4 \-\> B:39:0x00ea, CROSS_EDGE: B:27:0x007d \-\> B:33:0x00b4, CROSS_EDGE: B:23:0x0051 \-\> B:26:0x0079, CROSS_EDGE: B:20:0x0041 \-\> B:22:0x0044, CROSS_EDGE: B:19:0x003f \-\> B:22:0x0044, CROSS_EDGE: B:17:0x003b \-\> B:21:0x0043, CROSS_EDGE: B:15:0x0037 \-\> B:16:0x0038, CROSS_EDGE: B:11:0x0030 \-\> B:14:0x0035, CROSS_EDGE: B:9:0x002c \-\> B:15:0x0037, BACK_EDGE: B:6:0x0019 \-\> B:3:0x000a\lDebug Info:\l  0x0051\-0x006c: r4 'vertResolved' Z\l  0x004b\-0x0070: r5 'horizResolved' Z\l  0x0070\-0x0079: r16 'horizResolved' Z\l  0x006c\-0x0079: r18 'vertResolved' Z\l  0x0079\-0x007d: r4 'vertResolved' Z\l  0x0079\-0x007d: r5 'horizResolved' Z\l  0x0017\-0x00ff: r8 'widget' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  0x0021\-0x00ff: r9 'horiz' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;\l  0x0026\-0x00ff: r11 'vert' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;\l  0x0028\-0x00ff: r12 'horizMatchConstraintsType' I\l  0x002a\-0x00ff: r13 'vertMatchConstraintsType' I\l  0x0039\-0x00ff: r14 'horizWrap' Z\l  0x0045\-0x00ff: r15 'vertWrap' Z\l  0x007d\-0x00ff: r16 'horizResolved' Z\l  0x007d\-0x00ff: r18 'vertResolved' Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_47;
Node_5 -> Node_6;
Node_6 -> Node_46;
Node_6 -> Node_51[style=dashed];
Node_46 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_14;
Node_12 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_48[style=dashed];
Node_40 -> Node_52;
Node_48 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_49[style=dashed];
Node_42 -> Node_53;
Node_49 -> Node_43;
Node_43 -> Node_54;
Node_54 -> Node_50;
Node_50 -> Node_3;
Node_53 -> Node_50;
Node_52 -> Node_50;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_33;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_33;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_39;
Node_32 -> Node_39;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_39;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_39;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_21 -> Node_22;
Node_15 -> Node_16;
Node_51 -> Node_50;
Node_47 -> Node_45;
Node_45 -> Node_1;
}

