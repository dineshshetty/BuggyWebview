digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.DependencyGraph.defineTerminalWidgets(Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r7 I:androidx.constraintlayout.core.widgets.analyzer.DependencyGraph) androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.mNeedBuildGraph boolean  (LINE:82)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0052 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: INVOKE  (r7 I:androidx.constraintlayout.core.widgets.analyzer.DependencyGraph) type: VIRTUAL call: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.buildGraph():void A[MD:():void (m)] (LINE:83)\l0x0007: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:86)\l0x0008: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) = (r7 I:androidx.constraintlayout.core.widgets.analyzer.DependencyGraph) androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.container androidx.constraintlayout.core.widgets.ConstraintWidgetContainer  (LINE:87)\l0x000a: IGET  (r1 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.ConstraintWidget\>) = (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) androidx.constraintlayout.core.widgets.ConstraintWidgetContainer.mChildren java.util.ArrayList \l0x000c: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|LOOP_START\lLOOP:0: B:5:0x0010\-\>B:27:0x0010\l|0x0010: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l0x0014: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x002c \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001c: CHECK_CAST (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget) = (androidx.constraintlayout.core.widgets.ConstraintWidget) (r2 I:??[OBJECT, ARRAY]) \l0x001e: IGET  (r5 I:boolean[]) = \l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.isTerminalWidget boolean[]  (LINE:88)\l0x0020: APUT  (r5 I:boolean[] A[IMMUTABLE_TYPE]), (r3 I:??[int, short, byte, char]), (r4 I:boolean A[IMMUTABLE_TYPE]) \l0x0022: IGET  (r3 I:boolean[]) = \l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.isTerminalWidget boolean[]  (LINE:89)\l0x0024: APUT  (r3 I:boolean[] A[IMMUTABLE_TYPE]), (r4 I:??[int, short, byte, char]), (r4 I:boolean A[IMMUTABLE_TYPE]) \l0x0026: INSTANCE_OF  (r3 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)]) androidx.constraintlayout.core.widgets.Barrier  (LINE:90)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0010 \l}"];
Node_26 [shape=record,label="{26\:\ 0x002a|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('hasBarrier' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:91)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0010|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|LOOP_END\lSYNTHETIC\lLOOP:0: B:5:0x0010\-\>B:27:0x0010\l}"];
Node_28 [shape=record,label="{28\:\ 0x0010|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x002c|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasBarrier' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:?  (LINE:94)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: IGET  (r1 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.analyzer.RunGroup\>) = (r7 I:androidx.constraintlayout.core.widgets.analyzer.DependencyGraph) androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.mGroups java.util.ArrayList  (LINE:95)\l0x0030: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|LOOP_START\lLOOP:1: B:13:0x0034\-\>B:23:0x004e\l|0x0034: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|0x0038: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0052 \l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|0x003a: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x003e: CHECK_CAST (r2 I:androidx.constraintlayout.core.widgets.analyzer.RunGroup) = (androidx.constraintlayout.core.widgets.analyzer.RunGroup) (r2 I:??[OBJECT, ARRAY]) \l0x0040: SGET  (r5 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour  (LINE:96)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0042|0x0042: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('horizontalBehavior' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0046 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|0x0044: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0047|0x0047: SGET  (r6 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_20 [shape=record,label="{20\:\ 0x0049|0x0049: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('verticalBehavior' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x004d \l}"];
Node_21 [shape=record,label="{21\:\ 0x004b|0x004b: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x004e|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x004e|LOOP_END\lLOOP:1: B:13:0x0034\-\>B:23:0x004e\l|0x004e: INVOKE  \l  (r2 I:androidx.constraintlayout.core.widgets.analyzer.RunGroup A[D('group' androidx.constraintlayout.core.widgets.analyzer.RunGroup)])\l  (r5 I:boolean)\l  (r6 I:boolean)\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.analyzer.RunGroup.defineTerminalWidgets(boolean, boolean):void A[MD:(boolean, boolean):void (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x004d|0x004d: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x004e|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|0x0046: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0052|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|0x0052: RETURN   A[SYNTHETIC] (LINE:101)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0052: RETURN   A[SYNTHETIC] (LINE:101)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0052|RETURN\lORIG_RETURN\l|0x0052: RETURN    (LINE:101)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.defineTerminalWidgets((r7 'this' I:androidx.constraintlayout.core.widgets.analyzer.DependencyGraph A[IMMUTABLE_TYPE, THIS]), (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour A[D('horizontalBehavior' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour A[D('verticalBehavior' androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:9:0x002a \-\> B:5:0x0010, BACK_EDGE: B:8:0x0028 \-\> B:5:0x0010, BACK_EDGE: B:23:0x004e \-\> B:13:0x0034, CROSS_EDGE: B:22:0x004d \-\> B:23:0x004e, CROSS_EDGE: B:18:0x0046 \-\> B:19:0x0047, CROSS_EDGE: B:11:0x002c \-\> B:24:0x0052, CROSS_EDGE: B:3:0x0002 \-\> B:24:0x0052\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x002b: r2 'widget' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  0x0040\-0x0051: r2 'group' Landroidx\/constraintlayout\/core\/widgets\/analyzer\/RunGroup;\l  0x0008\-0x0052: r0 'hasBarrier' Z\l  \-1 \-0x0052: r8 'horizontalBehavior' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;\l  \-1 \-0x0052: r9 'verticalBehavior' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget$DimensionBehaviour;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_24;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_25;
Node_7 -> Node_8;
Node_8 -> Node_26[style=dashed];
Node_8 -> Node_28;
Node_26 -> Node_9;
Node_9 -> Node_29;
Node_29 -> Node_27;
Node_27 -> Node_5;
Node_28 -> Node_27;
Node_25 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_33;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_30;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_32;
Node_32 -> Node_23;
Node_23 -> Node_13;
Node_22 -> Node_31;
Node_31 -> Node_23;
Node_18 -> Node_19;
Node_30 -> Node_34;
Node_34 -> Node_1;
Node_33 -> Node_1;
Node_24 -> Node_1;
}

