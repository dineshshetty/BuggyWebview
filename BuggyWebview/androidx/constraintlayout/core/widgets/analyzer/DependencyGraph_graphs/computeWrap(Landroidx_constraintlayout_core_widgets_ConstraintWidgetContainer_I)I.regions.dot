digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.DependencyGraph.computeWrap(Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidgetContainer;I)I" {
subgraph cluster_Region_1498636408 {
label = "R(4:1|(1:3)|5|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|int int r0 = r7.mGroups.size()\llong r1 = 0\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_2034396819 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|LOOP_START\lLOOP:0: B:3:0x0009\-\>B:4:0x000b\lPHI: r1 r3 \l  PHI: (r1v1 'wrapSize' long) = (r1v0 'wrapSize' long), (r1v2 'wrapSize' long) binds: [B:2:0x0000, B:4:0x000b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v3 'i' int) binds: [B:2:0x0000, B:4:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r0) goto L3\l}"];
subgraph cluster_Region_2129068903 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|LOOP_END\lLOOP:0: B:3:0x0009\-\>B:4:0x000b\l|androidx.constraintlayout.core.widgets.analyzer.RunGroup androidx.constraintlayout.core.widgets.analyzer.RunGroup r4 = r7.mGroups.get(r3)\llong long r5 = r4.computeWrapSize(r8, r9)\llong r1 = java.lang.Math.max(r1, r5)\lr3++\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x001e|int int r3 = (int) r1\l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|RETURN\l|return r3\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001e|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private int androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.computeWrap((r7v0 'this' androidx.constraintlayout.core.widgets.analyzer.DependencyGraph A[IMMUTABLE_TYPE, THIS]), (r8v0 'container' androidx.constraintlayout.core.widgets.ConstraintWidgetContainer A[D('container' androidx.constraintlayout.core.widgets.ConstraintWidgetContainer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'orientation' int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:4:0x000b \-\> B:3:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_3;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_0 -> Node_2;
Node_7 -> Node_5;
}

