digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.DependencyGraph.directMeasureSetup(Z)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r4.mNeedBuildGraph == false) goto L9\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|java.util.Iterator r0 = r4.container.mChildren.iterator()\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|LOOP_START\lLOOP:0: B:5:0x000d\-\>B:7:0x0013\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|if (r0.hasNext() == false) goto L7\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|LOOP_END\lLOOP:0: B:5:0x000d\-\>B:7:0x0013\l|androidx.constraintlayout.core.widgets.ConstraintWidget r2 = r0.next()\lr2.ensureWidgetRuns()\lr2.measured = false\lr2.horizontalRun.dimension.resolved = false\lr2.horizontalRun.resolved = false\lr2.horizontalRun.reset()\lr2.verticalRun.dimension.resolved = false\lr2.verticalRun.resolved = false\lr2.verticalRun.reset()\l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x003d|r4.container.ensureWidgetRuns()\lr4.container.measured = false\lr4.container.horizontalRun.dimension.resolved = false\lr4.container.horizontalRun.resolved = false\lr4.container.horizontalRun.reset()\lr4.container.verticalRun.dimension.resolved = false\lr4.container.verticalRun.resolved = false\lr4.container.verticalRun.reset()\lbuildGraph()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0073|boolean r0 = basicMeasureWidgets(r4.mContainer)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0079|if (r0 == false) goto L13\l}"];
Node_11 [shape=record,label="{11\:\ 0x007b|RETURN\l|return false\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x007c|r4.container.setX(0)\lr4.container.setY(0)\lr4.container.horizontalRun.start.resolve(0)\lr4.container.verticalRun.start.resolve(0)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0099|RETURN\l|return androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.USE_GROUPS\l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.directMeasureSetup((r4v0 'this' androidx.constraintlayout.core.widgets.analyzer.DependencyGraph A[IMMUTABLE_TYPE, THIS]), (r5v0 'optimizeWrap' boolean A[D('optimizeWrap' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:7:0x0013 \-\> B:5:0x000d, CROSS_EDGE: B:13:0x0099 \-\> B:1:?, CROSS_EDGE: B:3:0x0003 \-\> B:9:0x0073\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_5;
Node_14 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_1;
}

