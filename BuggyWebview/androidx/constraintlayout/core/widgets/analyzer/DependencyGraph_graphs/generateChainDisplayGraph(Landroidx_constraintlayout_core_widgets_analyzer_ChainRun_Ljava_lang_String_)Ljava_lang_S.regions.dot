digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.DependencyGraph.generateChainDisplayGraph(Landroidx\/constraintlayout\/core\/widgets\/analyzer\/ChainRun;Ljava\/lang\/String;)Ljava\/lang\/String;" {
subgraph cluster_Region_1076428498 {
label = "R(6:1|(1:3)(1:18)|4|(3:7|(1:9)(1:12)|11)|15|16)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|int int r0 = r7.orientation\ljava.lang.StringBuilder java.lang.StringBuilder r1 = new java.lang.StringBuilder(\"subgraph \")\lr1.append(\"cluster_\")\lr1.append(r7.widget.getDebugName())\l}"];
subgraph cluster_IfRegion_1808221502 {
label = "IF [B:3:0x0017] THEN: R(1:3) ELSE: R(1:18)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0017|if (r0 == 0) goto L3\l}"];
subgraph cluster_Region_382506676 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0019|r1.append(\"_h\")\l}"];
}
subgraph cluster_Region_294986961 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001f|r1.append(\"_v\")\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0024|r1.append(\" \{n\")\ljava.lang.String java.lang.String r2 = \"\"\ljava.util.Iterator java.util.Iterator\<androidx.constraintlayout.core.widgets.analyzer.WidgetRun\> r3 = r7.widgets.iterator()\l}"];
subgraph cluster_LoopRegion_1676804182 {
label = "LOOP:0: (3:7|(1:9)(1:12)|11)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0035|if (r3.hasNext() != false) goto L7\l}"];
subgraph cluster_Region_1084910952 {
label = "R(3:7|(1:9)(1:12)|11)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0037|androidx.constraintlayout.core.widgets.analyzer.WidgetRun androidx.constraintlayout.core.widgets.analyzer.WidgetRun r4 = r3.next()\lr1.append(r4.widget.getDebugName())\l}"];
subgraph cluster_IfRegion_1185280671 {
label = "IF [B:10:0x0046] THEN: R(1:9) ELSE: R(1:12)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0046|if (r0 == 0) goto L9\l}"];
subgraph cluster_Region_695361256 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0048|r1.append(\"_HORIZONTAL\")\l}"];
}
subgraph cluster_Region_1534657604 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x004e|r1.append(\"_VERTICAL\")\l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x0053|LOOP_END\lLOOP:0: B:7:0x0031\-\>B:13:0x0053\l|r1.append(\";n\")\ljava.lang.String r2 = generateDisplayGraph(r4, r2)\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x005d|r1.append(\"\}n\")\l}"];
Node_15 [shape=record,label="{15\:\ 0x0074|RETURN\l|return r8 + r2 + ((java.lang.Object) r1)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0031|LOOP_START\lLOOP:0: B:7:0x0031\-\>B:13:0x0053\lPHI: r2 \l  PHI: (r2v7 'definitions' java.lang.String) = (r2v6 'definitions' java.lang.String), (r2v8 'definitions' java.lang.String) binds: [B:6:0x0024, B:13:0x0053] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0053|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0053|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x005d|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private java.lang.String androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.generateChainDisplayGraph((r6v0 'this' androidx.constraintlayout.core.widgets.analyzer.DependencyGraph A[IMMUTABLE_TYPE, THIS]), (r7v0 'chain' androidx.constraintlayout.core.widgets.analyzer.ChainRun A[D('chain' androidx.constraintlayout.core.widgets.analyzer.ChainRun), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'content' java.lang.String A[D('content' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x0053 \-\> B:7:0x0031, CROSS_EDGE: B:12:0x004e \-\> B:13:0x0053, CROSS_EDGE: B:5:0x001f \-\> B:6:0x0024\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_16[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_17;
Node_13 -> Node_7;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_0 -> Node_2;
Node_7 -> Node_8;
Node_18 -> Node_13;
Node_17 -> Node_13;
Node_16 -> Node_14;
}

