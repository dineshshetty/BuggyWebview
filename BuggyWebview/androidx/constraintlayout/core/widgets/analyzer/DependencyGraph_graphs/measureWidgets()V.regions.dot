digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.DependencyGraph.measureWidgets()V" {
subgraph cluster_Region_390728605 {
label = "R(2:1|(2:4|(6:7|13|(1:46)|18|(1:21)(1:(2:36|(1:38)(1:39))(1:(2:42|(1:44)(1:45))))|(1:28))(0)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|java.util.Iterator java.util.Iterator\<androidx.constraintlayout.core.widgets.ConstraintWidget\> r7 = r19.container.mChildren.iterator()\l}"];
subgraph cluster_LoopRegion_1247003771 {
label = "LOOP:0: (2:4|(6:7|13|(1:46)|18|(1:21)(1:(2:36|(1:38)(1:39))(1:(2:42|(1:44)(1:45))))|(1:28))(0))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r7.hasNext() != false) goto L4\l}"];
subgraph cluster_Region_1732801019 {
label = "R(2:4|(6:7|13|(1:46)|18|(1:21)(1:(2:36|(1:38)(1:39))(1:(2:42|(1:44)(1:45))))|(1:28))(0))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|androidx.constraintlayout.core.widgets.ConstraintWidget androidx.constraintlayout.core.widgets.ConstraintWidget r8 = r7.next()\l}"];
subgraph cluster_IfRegion_1620725442 {
label = "IF [B:6:0x0019] THEN: R(6:7|13|(1:46)|18|(1:21)(1:(2:36|(1:38)(1:39))(1:(2:42|(1:44)(1:45))))|(1:28)) ELSE: R(0)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0019|if (r8.measured == false) goto L6\l}"];
subgraph cluster_Region_659273647 {
label = "R(6:7|13|(1:46)|18|(1:21)(1:(2:36|(1:38)(1:39))(1:(2:42|(1:44)(1:45))))|(1:28))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001c|boolean r1 = false\landroidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour r9 = r8.mListDimensionBehaviors[0]\landroidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour r11 = r8.mListDimensionBehaviors[1]\lint int r12 = r8.mMatchConstraintDefaultWidth\lint int r13 = r8.mMatchConstraintDefaultHeight\l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|PHI: r0 \l  PHI: (r0v9 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|boolean r14 = (r9 == androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT \|\| (r9 == androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT && r12 == 1)) ? androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.USE_GROUPS : false\l}"];
subgraph cluster_IfRegion_2064296112 {
label = "IF [B:17:0x003b, B:19:0x003f, B:20:0x0041] THEN: R(1:46) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x003b|if (r11 == androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT) goto L46\l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|ADDED_TO_REGION\l|if (r11 == androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L17\l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|ADDED_TO_REGION\l|if (r13 == 1) goto L46\l}"];
subgraph cluster_Region_942898406 {
label = "R(1:46)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0043|r1 = androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.USE_GROUPS\l}"];
}
}
Node_22 [shape=record,label="{22\:\ 0x0044|PHI: r1 \l  PHI: (r1v2 boolean) = (r1v1 boolean), (r1v0 boolean), (r1v0 boolean) binds: [B:21:0x0043, B:19:0x003f, B:20:0x0041] A[DONT_GENERATE, DONT_INLINE]\l|boolean r15 = r1\lboolean boolean r5 = r8.horizontalRun.dimension.resolved\lboolean boolean r4 = r8.verticalRun.dimension.resolved\l}"];
subgraph cluster_IfRegion_145661678 {
label = "IF [B:23:0x0051, B:24:0x0053] THEN: R(1:21) ELSE: R(1:(2:36|(1:38)(1:39))(1:(2:42|(1:44)(1:45))))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0051|if (r5 != false) goto L20\l}"];
Node_24 [shape=record,label="{24\:\ 0x0053|ADDED_TO_REGION\l|if (r4 != false) goto L21\l}"];
subgraph cluster_Region_1945095969 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0055|measure(r8, androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED, r8.horizontalRun.dimension.value, androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED, r8.verticalRun.dimension.value)\lr8.measured = androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.USE_GROUPS\l}"];
}
subgraph cluster_Region_911995286 {
label = "R(1:(2:36|(1:38)(1:39))(1:(2:42|(1:44)(1:45)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_651165103 {
label = "IF [B:27:0x007d, B:28:0x007f] THEN: R(2:36|(1:38)(1:39)) ELSE: R(1:(2:42|(1:44)(1:45))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x007d|if (r5 != false) goto L35\l}"];
Node_28 [shape=record,label="{28\:\ 0x007f|ADDED_TO_REGION\l|if (r15 != false) goto L36\l}"];
subgraph cluster_Region_1468837646 {
label = "R(2:36|(1:38)(1:39))";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0081|measure(r8, androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED, r8.horizontalRun.dimension.value, androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT, r8.verticalRun.dimension.value)\l}"];
subgraph cluster_IfRegion_1710119652 {
label = "IF [B:30:0x0099] THEN: R(1:38) ELSE: R(1:39)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0099|if (r11 == androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L38\l}"];
subgraph cluster_Region_1708263267 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x009b|r8.verticalRun.dimension.wrapValue = r8.getHeight()\l}"];
}
subgraph cluster_Region_534655673 {
label = "R(1:39)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x00a6|r8.verticalRun.dimension.resolve(r8.getHeight())\lr8.measured = androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.USE_GROUPS\l}"];
}
}
}
subgraph cluster_Region_626960816 {
label = "R(1:(2:42|(1:44)(1:45))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1184485107 {
label = "IF [B:33:0x00b4, B:34:0x00b6] THEN: R(2:42|(1:44)(1:45)) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x00b4|if (r4 != false) goto L41\l}"];
Node_34 [shape=record,label="{34\:\ 0x00b6|ADDED_TO_REGION\l|if (r14 != false) goto L42\l}"];
subgraph cluster_Region_306540708 {
label = "R(2:42|(1:44)(1:45))";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x00b8|measure(r8, androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT, r8.horizontalRun.dimension.value, androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED, r8.verticalRun.dimension.value)\l}"];
subgraph cluster_IfRegion_282987794 {
label = "IF [B:36:0x00d0] THEN: R(1:44) ELSE: R(1:45)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x00d0|if (r9 == androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L44\l}"];
subgraph cluster_Region_537086269 {
label = "R(1:44)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x00d2|r8.horizontalRun.dimension.wrapValue = r8.getWidth()\l}"];
}
subgraph cluster_Region_1428142913 {
label = "R(1:45)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x00dd|r8.horizontalRun.dimension.resolve(r8.getWidth())\lr8.measured = androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.USE_GROUPS\l}"];
}
}
}
}
}
}
}
}
subgraph cluster_IfRegion_993661089 {
label = "IF [B:40:0x00ec, B:42:0x00f2] THEN: R(1:28) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x00ec|if (r8.measured != false) goto L24\l}"];
Node_42 [shape=record,label="{42\:\ 0x00f2|ADDED_TO_REGION\l|if (r8.verticalRun.baselineDimension != null) goto L27\l}"];
subgraph cluster_Region_37984050 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x00f4|r8.verticalRun.baselineDimension.resolve(r8.getBaselineDistance())\l}"];
}
}
}
subgraph cluster_Region_167180657 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000a|LOOP_START\lLOOP:0: B:3:0x000a\-\>B:50:0x000a\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x001c|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002c}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002e}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0030|REMOVE\lADDED_TO_REGION\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0032|REMOVE\lADDED_TO_REGION\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0035}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x003d}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x00ea}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x00ee|SYNTHETIC\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x00ee}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x00f4|SYNTHETIC\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x000a|SYNTHETIC\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x000a|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x000a\-\>B:50:0x000a\l}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x000a|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x000a|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0079}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0037}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x000a|SYNTHETIC\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0101|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0101}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.measureWidgets((r19v0 'this' androidx.constraintlayout.core.widgets.analyzer.DependencyGraph A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:43:0x00f4 \-\> B:3:0x000a, BACK_EDGE: B:42:0x00f2 \-\> B:3:0x000a, BACK_EDGE: B:40:0x00ec \-\> B:3:0x000a, CROSS_EDGE: B:31:0x009b \-\> B:39:0x00ea, CROSS_EDGE: B:32:0x00a6 \-\> B:39:0x00ea, CROSS_EDGE: B:37:0x00d2 \-\> B:39:0x00ea, CROSS_EDGE: B:38:0x00dd \-\> B:39:0x00ea, CROSS_EDGE: B:34:0x00b6 \-\> B:39:0x00ea, CROSS_EDGE: B:33:0x00b4 \-\> B:39:0x00ea, CROSS_EDGE: B:27:0x007d \-\> B:33:0x00b4, CROSS_EDGE: B:23:0x0051 \-\> B:26:0x0079, CROSS_EDGE: B:20:0x0041 \-\> B:22:0x0044, CROSS_EDGE: B:19:0x003f \-\> B:22:0x0044, CROSS_EDGE: B:17:0x003b \-\> B:21:0x0043, CROSS_EDGE: B:15:0x0037 \-\> B:16:0x0038, CROSS_EDGE: B:11:0x0030 \-\> B:14:0x0035, CROSS_EDGE: B:9:0x002c \-\> B:15:0x0037, BACK_EDGE: B:6:0x0019 \-\> B:3:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_47[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_46;
Node_6 -> Node_51[style=dashed];
Node_8 -> Node_9;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_19 -> Node_20;
Node_19 -> Node_22[style=dashed];
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_26[style=dashed];
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_39;
Node_27 -> Node_28;
Node_27 -> Node_33[style=dashed];
Node_28 -> Node_29;
Node_28 -> Node_33[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_32[style=dashed];
Node_31 -> Node_39;
Node_32 -> Node_39;
Node_33 -> Node_34;
Node_33 -> Node_39[style=dashed];
Node_34 -> Node_35;
Node_34 -> Node_39[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_40 -> Node_48;
Node_40 -> Node_52[style=dashed];
Node_42 -> Node_49;
Node_42 -> Node_53[style=dashed];
Node_43 -> Node_54;
Node_0 -> Node_2;
Node_3 -> Node_4;
Node_46 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14;
Node_12 -> Node_14;
Node_12 -> Node_15;
Node_14 -> Node_16;
Node_18 -> Node_19;
Node_39 -> Node_40;
Node_48 -> Node_41;
Node_41 -> Node_42;
Node_49 -> Node_43;
Node_54 -> Node_50;
Node_50 -> Node_3;
Node_53 -> Node_50;
Node_52 -> Node_50;
Node_26 -> Node_27;
Node_15 -> Node_16;
Node_51 -> Node_50;
Node_47 -> Node_45;
Node_45 -> Node_1;
}

