digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.HelperReferences.applyToWidget()V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0004|if ((r4.widget instanceof androidx.constraintlayout.core.widgets.Barrier) == false) goto L12\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|androidx.constraintlayout.core.widgets.Barrier r0 = (androidx.constraintlayout.core.widgets.Barrier) r4.widget\lint r1 = r0.getBarrierType()\l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|if (r1 == 0) goto L10\l}"];
Node_20 [shape=record,label="{20\:\ 0x0010}"];
Node_21 [shape=record,label="{21\:\ 0x0011|if (r1 != 1) goto L7\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|r4.widget.setY(r4.start.value)\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x001e|r4.widget.setX(r4.start.value)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0027|RETURN\lORIG_RETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.analyzer.HelperReferences.applyToWidget((r4v0 'this' androidx.constraintlayout.core.widgets.analyzer.HelperReferences A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x001e \-\> B:25:0x0027, CROSS_EDGE: B:19:0x000e \-\> B:24:0x001e, CROSS_EDGE: B:17:0x0004 \-\> B:25:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.widgets.analyzer.WidgetRun.applyToWidget():void]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_27 -> Node_15;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_26 -> Node_15;
}

