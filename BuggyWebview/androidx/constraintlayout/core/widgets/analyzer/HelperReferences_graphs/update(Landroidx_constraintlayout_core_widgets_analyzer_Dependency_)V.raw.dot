digraph "CFG forandroidx.constraintlayout.core.widgets.analyzer.HelperReferences.update(Landroidx\/constraintlayout\/core\/widgets\/analyzer\/Dependency;)V" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: IGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget) = (r8 I:androidx.constraintlayout.core.widgets.analyzer.HelperReferences) androidx.constraintlayout.core.widgets.analyzer.HelperReferences.widget androidx.constraintlayout.core.widgets.ConstraintWidget  (LINE:122)\l0x0002: CHECK_CAST (r0 I:androidx.constraintlayout.core.widgets.Barrier) = (androidx.constraintlayout.core.widgets.Barrier) (r0 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  (r1 I:int) = (r0 I:androidx.constraintlayout.core.widgets.Barrier A[D('barrier' androidx.constraintlayout.core.widgets.Barrier)]) type: VIRTUAL call: androidx.constraintlayout.core.widgets.Barrier.getBarrierType():int A[MD:():int (m)] (LINE:123)\l0x0008: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:125)\l0x0009: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:126)\l0x000a: IGET  (r4 I:androidx.constraintlayout.core.widgets.analyzer.DependencyNode) = (r8 I:androidx.constraintlayout.core.widgets.analyzer.HelperReferences) androidx.constraintlayout.core.widgets.analyzer.HelperReferences.start androidx.constraintlayout.core.widgets.analyzer.DependencyNode  (LINE:127)\l0x000c: IGET  (r4 I:java.util.List\<androidx.constraintlayout.core.widgets.analyzer.DependencyNode\>) = (r4 I:androidx.constraintlayout.core.widgets.analyzer.DependencyNode) androidx.constraintlayout.core.widgets.analyzer.DependencyNode.targets java.util.List \l0x000e: INVOKE  (r4 I:java.util.Iterator) = (r4 I:java.util.List) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0012|LOOP_START\lLOOP:0: B:28:0x0012\-\>B:46:0x0012\l|0x0012: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0016|0x0016: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x002a \l}"];
Node_30 [shape=record,label="{30\:\ 0x0018|0x0018: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001c: CHECK_CAST (r5 I:androidx.constraintlayout.core.widgets.analyzer.DependencyNode) = (androidx.constraintlayout.core.widgets.analyzer.DependencyNode) (r5 I:??[OBJECT, ARRAY]) \l0x001e: IGET  (r6 I:int) = \l  (r5 I:androidx.constraintlayout.core.widgets.analyzer.DependencyNode A[D('node' androidx.constraintlayout.core.widgets.analyzer.DependencyNode)])\l androidx.constraintlayout.core.widgets.analyzer.DependencyNode.value int  (LINE:128)\l0x0020: CONST  (r7 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:129)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|0x0021: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('min' int)]) == (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0025 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|0x0023: IF  (r6 I:??[int, byte, short, char] A[D('value' int)]) \>= (r2 I:??[int, byte, short, char] A[D('min' int)])  \-\> B:34:0x0026 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0026|0x0026: IF  (r3 I:??[int, byte, short, char] A[D('max' int)]) \>= (r6 I:??[int, byte, short, char] A[D('value' int)])  \-\> B:47:0x0012  (LINE:132)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0028|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0028|0x0028: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('max' int)]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('value' int)])  (LINE:133)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0012|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0012|LOOP_END\lSYNTHETIC\lLOOP:0: B:28:0x0012\-\>B:46:0x0012\l}"];
Node_47 [shape=record,label="{47\:\ 0x0012|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0025|0x0025: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('min' int)]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('value' int)])  (LINE:130)\l}"];
Node_45 [shape=record,label="{45\:\ 0x002a|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x002a|0x002a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x003b  (LINE:136)\l}"];
Node_38 [shape=record,label="{38\:\ 0x002c|0x002c: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x002d|0x002d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0030 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0030|0x0030: IGET  (r4 I:androidx.constraintlayout.core.widgets.analyzer.DependencyNode) = (r8 I:androidx.constraintlayout.core.widgets.analyzer.HelperReferences) androidx.constraintlayout.core.widgets.analyzer.HelperReferences.start androidx.constraintlayout.core.widgets.analyzer.DependencyNode  (LINE:139)\l0x0032: INVOKE  (r5 I:int) = (r0 I:androidx.constraintlayout.core.widgets.Barrier A[D('barrier' androidx.constraintlayout.core.widgets.Barrier)]) type: VIRTUAL call: androidx.constraintlayout.core.widgets.Barrier.getMargin():int A[MD:():int (m)]\l0x0036: ARITH  (r5 I:int) = (r5 I:int) + (r3 I:int A[D('max' int)]) \l0x0037: INVOKE  (r4 I:androidx.constraintlayout.core.widgets.analyzer.DependencyNode), (r5 I:int) type: VIRTUAL call: androidx.constraintlayout.core.widgets.analyzer.DependencyNode.resolve(int):void A[MD:(int):void (m)]\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|0x0045: RETURN   A[SYNTHETIC] (LINE:141)\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x003b|0x003b: IGET  (r4 I:androidx.constraintlayout.core.widgets.analyzer.DependencyNode) = (r8 I:androidx.constraintlayout.core.widgets.analyzer.HelperReferences) androidx.constraintlayout.core.widgets.analyzer.HelperReferences.start androidx.constraintlayout.core.widgets.analyzer.DependencyNode  (LINE:137)\l0x003d: INVOKE  (r5 I:int) = (r0 I:androidx.constraintlayout.core.widgets.Barrier A[D('barrier' androidx.constraintlayout.core.widgets.Barrier)]) type: VIRTUAL call: androidx.constraintlayout.core.widgets.Barrier.getMargin():int A[MD:():int (m)]\l0x0041: ARITH  (r5 I:int) = (r5 I:int) + (r2 I:int A[D('min' int)]) \l0x0042: INVOKE  (r4 I:androidx.constraintlayout.core.widgets.analyzer.DependencyNode), (r5 I:int) type: VIRTUAL call: androidx.constraintlayout.core.widgets.analyzer.DependencyNode.resolve(int):void A[MD:(int):void (m)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0045|RETURN\lORIG_RETURN\l|0x0045: RETURN    (LINE:141)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.analyzer.HelperReferences.update((r8 'this' I:androidx.constraintlayout.core.widgets.analyzer.HelperReferences A[IMMUTABLE_TYPE, THIS]), (r9 I:androidx.constraintlayout.core.widgets.analyzer.Dependency A[D('dependency' androidx.constraintlayout.core.widgets.analyzer.Dependency), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:35:0x0028 \-\> B:28:0x0012, BACK_EDGE: B:34:0x0026 \-\> B:28:0x0012, CROSS_EDGE: B:32:0x0023 \-\> B:34:0x0026, CROSS_EDGE: B:31:0x0021 \-\> B:33:0x0025, CROSS_EDGE: B:42:0x003b \-\> B:43:0x0045, CROSS_EDGE: B:37:0x002a \-\> B:42:0x003b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x0029: r5 'node' Landroidx\/constraintlayout\/core\/widgets\/analyzer\/DependencyNode;\l  0x0020\-0x0029: r6 'value' I\l  0x0004\-0x0045: r0 'barrier' Landroidx\/constraintlayout\/core\/widgets\/Barrier;\l  0x0008\-0x0045: r1 'type' I\l  0x0009\-0x0045: r2 'min' I\l  0x000a\-0x0045: r3 'max' I\l  \-1 \-0x0045: r9 'dependency' Landroidx\/constraintlayout\/core\/widgets\/analyzer\/Dependency;\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.widgets.analyzer.Dependency.update(androidx.constraintlayout.core.widgets.analyzer.Dependency):void]\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_45;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_34 -> Node_44[style=dashed];
Node_34 -> Node_47;
Node_44 -> Node_35;
Node_35 -> Node_48;
Node_48 -> Node_46;
Node_46 -> Node_28;
Node_47 -> Node_46;
Node_33 -> Node_34;
Node_45 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_42;
Node_38 -> Node_39;
Node_39 -> Node_41;
Node_39 -> Node_42[style=dashed];
Node_41 -> Node_49;
Node_49 -> Node_26;
Node_42 -> Node_43;
Node_43 -> Node_26;
}

