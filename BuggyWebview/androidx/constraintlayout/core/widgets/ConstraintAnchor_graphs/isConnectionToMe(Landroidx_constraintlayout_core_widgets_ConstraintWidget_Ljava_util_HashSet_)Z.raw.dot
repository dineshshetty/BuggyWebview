digraph "CFG forandroidx.constraintlayout.core.widgets.ConstraintAnchor.isConnectionToMe(Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;Ljava\/util\/HashSet;)Z" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = \l  (r9 I:java.util.HashSet A[D('checked' java.util.HashSet\<androidx.constraintlayout.core.widgets.ConstraintWidget\>)])\l  (r8 I:java.lang.Object A[D('target' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: java.util.HashSet.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:465)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0008 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:boolean)  (LINE:466)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0008|0x0008: INVOKE  \l  (r9 I:java.util.HashSet A[D('checked' java.util.HashSet\<androidx.constraintlayout.core.widgets.ConstraintWidget\>)])\l  (r8 I:java.lang.Object A[D('target' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: java.util.HashSet.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:468)\l0x000b: INVOKE  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget) = (r7 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintAnchor.getOwner():androidx.constraintlayout.core.widgets.ConstraintWidget A[MD:():androidx.constraintlayout.core.widgets.ConstraintWidget (m)] (LINE:470)\l0x000f: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0010|0x0010: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('target' androidx.constraintlayout.core.widgets.ConstraintWidget)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0013 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0012|RETURN\l|0x0012: RETURN  (r2 I:boolean)  (LINE:471)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0013|0x0013: INVOKE  (r0 I:java.util.ArrayList) = \l  (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('target' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getAnchors():java.util.ArrayList A[MD:():java.util.ArrayList\<androidx.constraintlayout.core.widgets.ConstraintAnchor\> (m)] (LINE:473)\l0x0017: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:474)\l0x0018: INVOKE  (r4 I:int) = \l  (r0 I:java.util.ArrayList A[D('targetAnchors' java.util.ArrayList\<androidx.constraintlayout.core.widgets.ConstraintAnchor\>)])\l type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x001c|LOOP_START\lLOOP:0: B:33:0x001c\-\>B:41:0x003f\l|0x001c: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char] A[D('targetAnchorsSize' int)])  \-\> B:43:0x0042 \l}"];
Node_34 [shape=record,label="{34\:\ 0x001e|0x001e: INVOKE  (r5 I:java.lang.Object) = \l  (r0 I:java.util.ArrayList A[D('targetAnchors' java.util.ArrayList\<androidx.constraintlayout.core.widgets.ConstraintAnchor\>)])\l  (r3 I:int A[D('i' int)])\l type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:475)\l0x0022: CHECK_CAST (r5 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (androidx.constraintlayout.core.widgets.ConstraintAnchor) (r5 I:??[OBJECT, ARRAY]) \l0x0024: INVOKE  (r6 I:boolean) = \l  (r5 I:androidx.constraintlayout.core.widgets.ConstraintAnchor A[D('anchor' androidx.constraintlayout.core.widgets.ConstraintAnchor)])\l  (r7 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintAnchor.isSimilarDimensionConnection(androidx.constraintlayout.core.widgets.ConstraintAnchor):boolean A[MD:(androidx.constraintlayout.core.widgets.ConstraintAnchor):boolean (m)] (LINE:476)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0028|0x0028: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x003f \l}"];
Node_36 [shape=record,label="{36\:\ 0x002a|0x002a: INVOKE  (r6 I:boolean) = \l  (r5 I:androidx.constraintlayout.core.widgets.ConstraintAnchor A[D('anchor' androidx.constraintlayout.core.widgets.ConstraintAnchor)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintAnchor.isConnected():boolean A[MD:():boolean (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x002e|0x002e: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x003f \l}"];
Node_38 [shape=record,label="{38\:\ 0x0030|0x0030: INVOKE  (r6 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = \l  (r5 I:androidx.constraintlayout.core.widgets.ConstraintAnchor A[D('anchor' androidx.constraintlayout.core.widgets.ConstraintAnchor)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintAnchor.getTarget():androidx.constraintlayout.core.widgets.ConstraintAnchor A[MD:():androidx.constraintlayout.core.widgets.ConstraintAnchor (m)] (LINE:477)\l0x0034: INVOKE  (r6 I:androidx.constraintlayout.core.widgets.ConstraintWidget) = (r6 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintAnchor.getOwner():androidx.constraintlayout.core.widgets.ConstraintWidget A[MD:():androidx.constraintlayout.core.widgets.ConstraintWidget (m)]\l0x0038: INVOKE  (r6 I:boolean) = \l  (r7 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l  (r6 I:androidx.constraintlayout.core.widgets.ConstraintWidget)\l  (r9 I:java.util.HashSet A[D('checked' java.util.HashSet\<androidx.constraintlayout.core.widgets.ConstraintWidget\>)])\l type: DIRECT call: androidx.constraintlayout.core.widgets.ConstraintAnchor.isConnectionToMe(androidx.constraintlayout.core.widgets.ConstraintWidget, java.util.HashSet):boolean A[MD:(androidx.constraintlayout.core.widgets.ConstraintWidget, java.util.HashSet\<androidx.constraintlayout.core.widgets.ConstraintWidget\>):boolean (m)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x003c|0x003c: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x003f \l}"];
Node_44 [shape=record,label="{44\:\ 0x003e|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x003e|RETURN\l|0x003e: RETURN  (r2 I:boolean)  (LINE:478)\l}"];
Node_47 [shape=record,label="{47\:\ 0x003f|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x003f|LOOP_END\lLOOP:0: B:33:0x001c\-\>B:41:0x003f\l|0x003f: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:474)\l}"];
Node_46 [shape=record,label="{46\:\ 0x003f|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x003f|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0042|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0042|RETURN\l|0x0042: RETURN  (r1 I:boolean)  (LINE:482)\l}"];
MethodNode[shape=record,label="{private boolean androidx.constraintlayout.core.widgets.ConstraintAnchor.isConnectionToMe((r7 'this' I:androidx.constraintlayout.core.widgets.ConstraintAnchor A[IMMUTABLE_TYPE, THIS]), (r8 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('target' androidx.constraintlayout.core.widgets.ConstraintWidget), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.util.HashSet\<androidx.constraintlayout.core.widgets.ConstraintWidget\> A[D('checked' java.util.HashSet\<androidx.constraintlayout.core.widgets.ConstraintWidget\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0012 \-\> B:25:?, CROSS_EDGE: B:40:0x003e \-\> B:25:?, BACK_EDGE: B:41:0x003f \-\> B:33:0x001c, CROSS_EDGE: B:37:0x002e \-\> B:41:0x003f, CROSS_EDGE: B:35:0x0028 \-\> B:41:0x003f, CROSS_EDGE: B:42:0x0042 \-\> B:25:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0024\-0x003f: r5 'anchor' Landroidx\/constraintlayout\/core\/widgets\/ConstraintAnchor;\l  0x0018\-0x0042: r3 'i' I\l  0x001c\-0x0042: r4 'targetAnchorsSize' I\l  0x0017\-0x0042: r0 'targetAnchors' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroidx\/constraintlayout\/core\/widgets\/ConstraintAnchor;\>;\l  \-1 \-0x0042: r8 'target' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  0x0000\-0x0042: r9 'checked' Ljava\/util\/HashSet;, signature: Ljava\/util\/HashSet\<Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\>;\lSIGNATURE: (Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;Ljava\/util\/HashSet\<Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\>;)Z\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_25;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_25;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_43;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_45;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_46;
Node_38 -> Node_39;
Node_39 -> Node_44[style=dashed];
Node_39 -> Node_47;
Node_44 -> Node_40;
Node_40 -> Node_25;
Node_47 -> Node_41;
Node_41 -> Node_33;
Node_46 -> Node_41;
Node_45 -> Node_41;
Node_43 -> Node_42;
Node_42 -> Node_25;
}

