digraph "CFG forandroidx.constraintlayout.core.widgets.ConstraintAnchor.copyFrom(Landroidx\/constraintlayout\/core\/widgets\/ConstraintAnchor;Ljava\/util\/HashMap;)V" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: IGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r3 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor  (LINE:104)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x000b \l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|0x0004: IGET  (r0 I:java.util.HashSet\<androidx.constraintlayout.core.widgets.ConstraintAnchor\>) = (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mDependents java.util.HashSet  (LINE:105)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x000b \l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|0x0008: INVOKE  (r0 I:java.util.HashSet), (r3 I:java.lang.Object) type: VIRTUAL call: java.util.HashSet.remove(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:106)\l}"];
Node_26 [shape=record,label="{26\:\ 0x000b|0x000b: IGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = \l  (r4 I:androidx.constraintlayout.core.widgets.ConstraintAnchor A[D('source' androidx.constraintlayout.core.widgets.ConstraintAnchor)])\l androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor  (LINE:109)\l}"];
Node_27 [shape=record,label="{27\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0024 \l}"];
Node_28 [shape=record,label="{28\:\ 0x000f|0x000f: INVOKE  (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) = (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintAnchor.getType():androidx.constraintlayout.core.widgets.ConstraintAnchor$Type A[MD:():androidx.constraintlayout.core.widgets.ConstraintAnchor$Type (m)] (LINE:110)\l0x0013: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = \l  (r4 I:androidx.constraintlayout.core.widgets.ConstraintAnchor A[D('source' androidx.constraintlayout.core.widgets.ConstraintAnchor)])\l androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor  (LINE:111)\l0x0015: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget) = (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mOwner androidx.constraintlayout.core.widgets.ConstraintWidget \l0x0017: INVOKE  (r1 I:java.lang.Object) = \l  (r5 I:java.util.HashMap A[D('map' java.util.HashMap\<androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget\>)])\l  (r1 I:java.lang.Object)\l type: VIRTUAL call: java.util.HashMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x001b: CHECK_CAST (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget) = (androidx.constraintlayout.core.widgets.ConstraintWidget) (r1 I:??[OBJECT, ARRAY]) \l0x001d: INVOKE  (r2 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = \l  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('owner' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l  (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor$Type A[D('type' androidx.constraintlayout.core.widgets.ConstraintAnchor$Type)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getAnchor(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type):androidx.constraintlayout.core.widgets.ConstraintAnchor A[MD:(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type):androidx.constraintlayout.core.widgets.ConstraintAnchor (m)] (LINE:112)\l0x0021: IPUT  \l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l  (r3 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor \l}"];
Node_30 [shape=record,label="{30\:\ 0x0027|0x0027: IGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r3 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor  (LINE:116)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0029|0x0029: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x003d \l}"];
Node_32 [shape=record,label="{32\:\ 0x002b|0x002b: IGET  (r1 I:java.util.HashSet\<androidx.constraintlayout.core.widgets.ConstraintAnchor\>) = (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mDependents java.util.HashSet  (LINE:117)\l}"];
Node_33 [shape=record,label="{33\:\ 0x002d|0x002d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0036 \l}"];
Node_34 [shape=record,label="{34\:\ 0x002f|0x002f: NEW_INSTANCE  (r1 I:java.util.HashSet) =  java.util.HashSet  (LINE:118)\l0x0031: INVOKE  (r1 I:java.util.HashSet) type: DIRECT call: java.util.HashSet.\<init\>():void A[MD:():void (c)]\l0x0034: IPUT  \l  (r1 I:java.util.HashSet\<androidx.constraintlayout.core.widgets.ConstraintAnchor\>)\l  (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l androidx.constraintlayout.core.widgets.ConstraintAnchor.mDependents java.util.HashSet \l}"];
Node_35 [shape=record,label="{35\:\ 0x0036|0x0036: IGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r3 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor  (LINE:120)\l0x0038: IGET  (r0 I:java.util.HashSet\<androidx.constraintlayout.core.widgets.ConstraintAnchor\>) = (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mDependents java.util.HashSet \l0x003a: INVOKE  (r0 I:java.util.HashSet), (r3 I:java.lang.Object) type: VIRTUAL call: java.util.HashSet.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x003d|0x003d: IGET  (r0 I:int) = \l  (r4 I:androidx.constraintlayout.core.widgets.ConstraintAnchor A[D('source' androidx.constraintlayout.core.widgets.ConstraintAnchor)])\l androidx.constraintlayout.core.widgets.ConstraintAnchor.mMargin int  (LINE:122)\l0x003f: IPUT  (r0 I:int), (r3 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mMargin int \l0x0041: IGET  (r0 I:int) = \l  (r4 I:androidx.constraintlayout.core.widgets.ConstraintAnchor A[D('source' androidx.constraintlayout.core.widgets.ConstraintAnchor)])\l androidx.constraintlayout.core.widgets.ConstraintAnchor.mGoneMargin int  (LINE:123)\l0x0043: IPUT  (r0 I:int), (r3 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) androidx.constraintlayout.core.widgets.ConstraintAnchor.mGoneMargin int \l}"];
Node_37 [shape=record,label="{37\:\ 0x0045|RETURN\l|0x0045: RETURN    (LINE:124)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0024|0x0024: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:114)\l0x0025: IPUT  \l  (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l  (r3 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l androidx.constraintlayout.core.widgets.ConstraintAnchor.mTarget androidx.constraintlayout.core.widgets.ConstraintAnchor \l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.ConstraintAnchor.copyFrom((r3 'this' I:androidx.constraintlayout.core.widgets.ConstraintAnchor A[IMMUTABLE_TYPE, THIS]), (r4 I:androidx.constraintlayout.core.widgets.ConstraintAnchor A[D('source' androidx.constraintlayout.core.widgets.ConstraintAnchor), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.util.HashMap\<androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget\> A[D('map' java.util.HashMap\<androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x002d \-\> B:35:0x0036, CROSS_EDGE: B:31:0x0029 \-\> B:36:0x003d, CROSS_EDGE: B:29:0x0024 \-\> B:30:0x0027, CROSS_EDGE: B:24:0x0006 \-\> B:26:0x000b, CROSS_EDGE: B:22:0x0002 \-\> B:26:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0023: r0 'type' Landroidx\/constraintlayout\/core\/widgets\/ConstraintAnchor$Type;\l  0x001d\-0x0023: r1 'owner' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  \-1 \-0x0045: r4 'source' Landroidx\/constraintlayout\/core\/widgets\/ConstraintAnchor;\l  0x0000\-0x0045: r5 'map' Ljava\/util\/HashMap;, signature: Ljava\/util\/HashMap\<Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\>;\lSIGNATURE: (Landroidx\/constraintlayout\/core\/widgets\/ConstraintAnchor;Ljava\/util\/HashMap\<Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\>;)V\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_36;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_29 -> Node_30;
}

