digraph "CFG forandroidx.constraintlayout.core.widgets.ChainHead.isMatchConstraintEqualityCandidate(Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;I)Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = \l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getVisibility():int A[MD:():int (m)] (LINE:77)\l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001f \l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|0x0008: IGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[]) = \l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mListDimensionBehaviors androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] \l0x000a: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char] A[D('orientation' int)]) \l0x000c: SGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001f \l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|0x0010: IGET  (r0 I:int[]) = \l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mResolvedMatchConstraintDefault int[] \l0x0012: AGET  (r0 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][]), (r3 I:??[int, short, byte, char] A[D('orientation' int)]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x001d \l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|0x0016: IGET  (r0 I:int[]) = \l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mResolvedMatchConstraintDefault int[] \l0x0018: AGET  (r0 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][]), (r3 I:??[int, short, byte, char] A[D('orientation' int)]) \l0x001a: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001f \l}"];
Node_24 [shape=record,label="{24\:\ 0x001d|SYNTHETIC\lRETURN\l|0x001d: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0020: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x001f|RETURN\lORIG_RETURN\l|0x001f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0020: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean androidx.constraintlayout.core.widgets.ChainHead.isMatchConstraintEqualityCandidate((r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x001f \-\> B:26:0x0020, CROSS_EDGE: B:21:0x0014 \-\> B:24:0x001d, CROSS_EDGE: B:19:0x000e \-\> B:25:0x001f, CROSS_EDGE: B:17:0x0006 \-\> B:25:0x001f\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0020: r2 'widget' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  \-1 \-0x0020: r3 'orientation' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_15;
Node_25 -> Node_15;
}

