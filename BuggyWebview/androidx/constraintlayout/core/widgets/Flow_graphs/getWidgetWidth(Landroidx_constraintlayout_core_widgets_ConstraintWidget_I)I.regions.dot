digraph "CFG forandroidx.constraintlayout.core.widgets.Flow.getWidgetWidth(Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;I)I" {
subgraph cluster_Region_958522831 {
label = "R(1:(2:(1:3)|(2:(1:(2:(1:9)|(1:(3:12|(1:14)|15)(1:(1:19)(1:(1:23))))))|25)))";
node [shape=record,color=blue];
subgraph cluster_Region_1084922885 {
label = "R(2:(1:3)|(2:(1:(2:(1:9)|(1:(3:12|(1:14)|15)(1:(1:19)(1:(1:23))))))|25))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_11571161 {
label = "IF [B:29:0x0001] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0001|if (r10 == null) goto L3\l}"];
subgraph cluster_Region_920820811 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0003|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_14358725 {
label = "R(2:(1:(2:(1:9)|(1:(3:12|(1:14)|15)(1:(1:19)(1:(1:23))))))|25)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_344323695 {
label = "IF [B:32:0x000a] THEN: R(1:(2:(1:9)|(1:(3:12|(1:14)|15)(1:(1:19)(1:(1:23)))))) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x000a|if (r10.getHorizontalDimensionBehaviour() == androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L7\l}"];
subgraph cluster_Region_273640801 {
label = "R(1:(2:(1:9)|(1:(3:12|(1:14)|15)(1:(1:19)(1:(1:23))))))";
node [shape=record,color=blue];
subgraph cluster_Region_854440935 {
label = "R(2:(1:9)|(1:(3:12|(1:14)|15)(1:(1:19)(1:(1:23)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1789431887 {
label = "IF [B:34:0x000e] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x000e|if (r10.mMatchConstraintDefaultWidth == 0) goto L9\l}"];
subgraph cluster_Region_1361389051 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0010|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_988446427 {
label = "R(1:(3:12|(1:14)|15)(1:(1:19)(1:(1:23))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1703397602 {
label = "IF [B:37:0x0015] THEN: R(3:12|(1:14)|15) ELSE: R(1:(1:19)(1:(1:23)))";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0015|if (r10.mMatchConstraintDefaultWidth == 2) goto L12\l}"];
subgraph cluster_Region_1290318049 {
label = "R(3:12|(1:14)|15)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0017|int int r0 = (int) (r10.mMatchConstraintPercentWidth * r11)\l}"];
subgraph cluster_IfRegion_808530179 {
label = "IF [B:39:0x0021] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0021|if (r0 != r10.getWidth()) goto L14\l}"];
subgraph cluster_Region_570023208 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0023|r10.setMeasureRequested(true)\lmeasure(r10, androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED, r0, r10.getVerticalDimensionBehaviour(), r10.getHeight())\l}"];
}
}
Node_41 [shape=record,label="{41\:\ 0x0036|RETURN\l|return r0\l}"];
}
subgraph cluster_Region_1266878197 {
label = "R(1:(1:19)(1:(1:23))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_863107203 {
label = "IF [B:43:0x0039] THEN: R(1:19) ELSE: R(1:(1:23)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0039|if (r10.mMatchConstraintDefaultWidth == 1) goto L18\l}"];
subgraph cluster_Region_1510233232 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x003f|RETURN\l|return r10.getWidth()\l}"];
}
subgraph cluster_Region_27219946 {
label = "R(1:(1:23))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1383619970 {
label = "IF [B:47:0x0043] THEN: R(1:23) ELSE: null";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x0043|if (r10.mMatchConstraintDefaultWidth == 3) goto L22\l}"];
subgraph cluster_Region_1861292718 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0052|RETURN\l|return (int) ((r10.getHeight() * r10.mDimensionRatio) + 0.5f)\l}"];
}
}
}
}
}
}
}
}
}
}
Node_51 [shape=record,label="{51\:\ 0x0057|RETURN\l|return r10.getWidth()\l}"];
}
}
}
Node_26 [shape=record,color=red,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0000}"];
Node_27 [shape=record,color=red,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0004}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x000c}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0011}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0037}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x003b}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0040}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x0045}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0053}"];
MethodNode[shape=record,label="{public final int androidx.constraintlayout.core.widgets.Flow.getWidgetWidth((r9v0 'this' androidx.constraintlayout.core.widgets.Flow A[IMMUTABLE_TYPE, THIS]), (r10v0 'widget' androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'max' int A[D('max' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0010 \-\> B:27:?, CROSS_EDGE: B:41:0x0036 \-\> B:27:?, CROSS_EDGE: B:39:0x0021 \-\> B:41:0x0036, CROSS_EDGE: B:45:0x003f \-\> B:27:?, CROSS_EDGE: B:49:0x0052 \-\> B:27:?, CROSS_EDGE: B:51:0x0057 \-\> B:27:?, CROSS_EDGE: B:32:0x000a \-\> B:50:0x0053\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_26;Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_30 -> Node_27;
Node_32 -> Node_33;
Node_32 -> Node_50[style=dashed];
Node_34 -> Node_35;
Node_34 -> Node_36[style=dashed];
Node_35 -> Node_27;
Node_37 -> Node_38;
Node_37 -> Node_42[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_41[style=dashed];
Node_40 -> Node_41;
Node_41 -> Node_27;
Node_43 -> Node_44;
Node_43 -> Node_46[style=dashed];
Node_45 -> Node_27;
Node_47 -> Node_48;
Node_47 -> Node_50[style=dashed];
Node_49 -> Node_27;
Node_51 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_29;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_36 -> Node_37;
Node_42 -> Node_43;
Node_44 -> Node_45;
Node_46 -> Node_47;
Node_48 -> Node_49;
Node_50 -> Node_51;
}

