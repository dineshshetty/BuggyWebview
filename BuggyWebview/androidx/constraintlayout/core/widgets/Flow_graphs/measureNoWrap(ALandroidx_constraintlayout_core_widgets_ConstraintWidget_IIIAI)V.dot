digraph "CFG forandroidx.constraintlayout.core.widgets.Flow.measureNoWrap([Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;III[I)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x0004|if (r25 != 0) goto L5\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007}"];
Node_21 [shape=record,label="{21\:\ 0x000f|if (r23.mChainList.size() != 0) goto L14\l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|androidx.constraintlayout.core.widgets.Flow$WidgetsList r0 = new androidx.constraintlayout.core.widgets.Flow.WidgetsList(r26, r23.mLeft, r23.mTop, r23.mRight, r23.mBottom, r27)\lr23.mChainList.add(r0)\l}"];
Node_24 [shape=record,label="{24\:\ 0x005a|PHI: r0 \l  PHI: (r0v5 'list' androidx.constraintlayout.core.widgets.Flow$WidgetsList) = (r0v4 'list' androidx.constraintlayout.core.widgets.Flow$WidgetsList), (r0v6 'list' androidx.constraintlayout.core.widgets.Flow$WidgetsList) binds: [B:23:0x002b, B:22:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|r1 = 0\l}"];
Node_25 [shape=record,label="{25\:\ 0x005b|LOOP_START\lLOOP:0: B:25:0x005b\-\>B:26:0x005d\lPHI: r1 \l  PHI: (r1v2 'i' int) = (r1v1 'i' int), (r1v5 'i' int) binds: [B:24:0x005a, B:26:0x005d] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r25) goto L11\l}"];
Node_26 [shape=record,label="{26\:\ 0x005d|LOOP_END\lLOOP:0: B:25:0x005b\-\>B:26:0x005d\l|r2 = r24[r1]\lr0.add(r2)\lint r1 = r1 + 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x0065|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0065|int r1 = r0.getWidth()\lr28[0] = r1\lr28[1] = r0.getHeight()\l}"];
Node_28 [shape=record,label="{28\:\ 0x0072|RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x002b|androidx.constraintlayout.core.widgets.Flow$WidgetsList r0 = r23.mChainList.get(0)\lr0.clear()\lr0.setup(r26, r23.mLeft, r23.mTop, r23.mRight, r23.mBottom, getPaddingLeft(), getPaddingTop(), getPaddingRight(), getPaddingBottom(), r27)\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.core.widgets.Flow.measureNoWrap((r23v0 'this' androidx.constraintlayout.core.widgets.Flow A[IMMUTABLE_TYPE, THIS]), (r24v0 'widgets' androidx.constraintlayout.core.widgets.ConstraintWidget[] A[D('widgets' androidx.constraintlayout.core.widgets.ConstraintWidget[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 'count' int A[D('count' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 'orientation' int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 'max' int A[D('max' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28v0 'measured' int[] A[D('measured' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x005d \-\> B:25:0x005b, CROSS_EDGE: B:28:0x0072 \-\> B:16:?, CROSS_EDGE: B:23:0x002b \-\> B:24:0x005a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_25;
Node_29 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_16;
Node_23 -> Node_24;
}

