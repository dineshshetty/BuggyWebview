digraph "CFG forandroidx.constraintlayout.core.widgets.Flow.measureNoWrap([Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;III[I)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r23 I:??[OBJECT, ARRAY])  (LINE:1103)\l0x0002: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r25 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('count' int)]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|0x0004: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0007 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|RETURN\l|0x0006: RETURN    (LINE:1104)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|0x0007: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1106)\l0x0008: IGET  (r0 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.Flow$WidgetsList\>) = (r8 I:androidx.constraintlayout.core.widgets.Flow) androidx.constraintlayout.core.widgets.Flow.mChainList java.util.ArrayList  (LINE:1107)\l0x000a: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x000e: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x002b \l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: NEW_INSTANCE  (r12 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) =  androidx.constraintlayout.core.widgets.Flow$WidgetsList  (LINE:1108)\l0x0013: IGET  (r3 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r8 I:androidx.constraintlayout.core.widgets.Flow) androidx.constraintlayout.core.widgets.Flow.mLeft androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x0015: IGET  (r4 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r8 I:androidx.constraintlayout.core.widgets.Flow) androidx.constraintlayout.core.widgets.Flow.mTop androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x0017: IGET  (r5 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r8 I:androidx.constraintlayout.core.widgets.Flow) androidx.constraintlayout.core.widgets.Flow.mRight androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x0019: IGET  (r6 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r8 I:androidx.constraintlayout.core.widgets.Flow) androidx.constraintlayout.core.widgets.Flow.mBottom androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x001b: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY]) \l0x001c: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r23 I:??[OBJECT, ARRAY]) \l0x001e: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r26 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('orientation' int)]) \l0x0020: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r27 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('max' int)]) \l0x0022: INVOKE  \l  (r0 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList)\l  (r1 I:androidx.constraintlayout.core.widgets.Flow)\l  (r2 I:int)\l  (r3 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l  (r4 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l  (r5 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l  (r6 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l  (r7 I:int)\l type: DIRECT call: androidx.constraintlayout.core.widgets.Flow.WidgetsList.\<init\>(androidx.constraintlayout.core.widgets.Flow, int, androidx.constraintlayout.core.widgets.ConstraintAnchor, androidx.constraintlayout.core.widgets.ConstraintAnchor, androidx.constraintlayout.core.widgets.ConstraintAnchor, androidx.constraintlayout.core.widgets.ConstraintAnchor, int):void A[MD:(androidx.constraintlayout.core.widgets.Flow, int, androidx.constraintlayout.core.widgets.ConstraintAnchor, androidx.constraintlayout.core.widgets.ConstraintAnchor, androidx.constraintlayout.core.widgets.ConstraintAnchor, androidx.constraintlayout.core.widgets.ConstraintAnchor, int):void (m)]\l0x0025: IGET  (r1 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.Flow$WidgetsList\>) = (r8 I:androidx.constraintlayout.core.widgets.Flow) androidx.constraintlayout.core.widgets.Flow.mChainList java.util.ArrayList  (LINE:1109)\l0x0027: INVOKE  \l  (r1 I:java.util.ArrayList)\l  (r0 I:java.lang.Object A[D('list' androidx.constraintlayout.core.widgets.Flow$WidgetsList)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x005a|0x005a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1117)\l}"];
Node_25 [shape=record,label="{25\:\ 0x005b|LOOP_START\lLOOP:0: B:25:0x005b\-\>B:26:0x005d\l|0x005b: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r9 I:??[int, byte, short, char])  \-\> B:29:0x0065 \l}"];
Node_26 [shape=record,label="{26\:\ 0x005d|LOOP_END\lLOOP:0: B:25:0x005b\-\>B:26:0x005d\l|0x005d: AGET  (r2 I:??[OBJECT, ARRAY]) = \l  (r24 I:??[OBJECT, ARRAY][] A[D('widgets' androidx.constraintlayout.core.widgets.ConstraintWidget[])])\l  (r1 I:??[int, short, byte, char] A[D('i' int)])\l  (LINE:1118)\l0x005f: INVOKE  \l  (r0 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList A[D('list' androidx.constraintlayout.core.widgets.Flow$WidgetsList)])\l  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.Flow.WidgetsList.add(androidx.constraintlayout.core.widgets.ConstraintWidget):void A[MD:(androidx.constraintlayout.core.widgets.ConstraintWidget):void (m)] (LINE:1119)\l0x0062: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:1117)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0065|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0065|0x0065: INVOKE  (r1 I:int) = \l  (r0 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList A[D('list' androidx.constraintlayout.core.widgets.Flow$WidgetsList)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.Flow.WidgetsList.getWidth():int A[MD:():int (m)] (LINE:1122)\l0x0069: APUT  \l  (r28 I:??[int, float][] A[D('measured' int[])])\l  (r11 I:??[int, short, byte, char])\l  (r1 I:??[int, float, short, byte, char])\l \l0x006b: INVOKE  (r1 I:int) = \l  (r0 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList A[D('list' androidx.constraintlayout.core.widgets.Flow$WidgetsList)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.Flow.WidgetsList.getHeight():int A[MD:():int (m)] (LINE:1123)\l0x006f: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0070: APUT  \l  (r28 I:??[int, float][] A[D('measured' int[])])\l  (r2 I:??[int, short, byte, char])\l  (r1 I:??[int, float, short, byte, char])\l \l}"];
Node_28 [shape=record,label="{28\:\ 0x0072|RETURN\l|0x0072: RETURN    (LINE:1124)\l}"];
Node_23 [shape=record,label="{23\:\ 0x002b|0x002b: IGET  (r0 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.Flow$WidgetsList\> A[D('list' androidx.constraintlayout.core.widgets.Flow$WidgetsList)]) = (r8 I:androidx.constraintlayout.core.widgets.Flow) androidx.constraintlayout.core.widgets.Flow.mChainList java.util.ArrayList  (LINE:1111)\l0x002d: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.ArrayList), (r11 I:int) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0031: CHECK_CAST (r0 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList) = (androidx.constraintlayout.core.widgets.Flow$WidgetsList) (r0 I:??[OBJECT, ARRAY]) \l0x0033: INVOKE  \l  (r0 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList A[D('list' androidx.constraintlayout.core.widgets.Flow$WidgetsList)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.Flow.WidgetsList.clear():void A[MD:():void (m)] (LINE:1112)\l0x0036: IGET  (r14 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r8 I:androidx.constraintlayout.core.widgets.Flow) androidx.constraintlayout.core.widgets.Flow.mLeft androidx.constraintlayout.core.widgets.ConstraintAnchor  (LINE:1113)\l0x0038: IGET  (r15 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r8 I:androidx.constraintlayout.core.widgets.Flow) androidx.constraintlayout.core.widgets.Flow.mTop androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x003a: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r8 I:androidx.constraintlayout.core.widgets.Flow) androidx.constraintlayout.core.widgets.Flow.mRight androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x003c: IGET  (r2 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r8 I:androidx.constraintlayout.core.widgets.Flow) androidx.constraintlayout.core.widgets.Flow.mBottom androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x003e: INVOKE  (r18 I:int) = (r23 I:androidx.constraintlayout.core.widgets.Flow) type: VIRTUAL call: androidx.constraintlayout.core.widgets.Flow.getPaddingLeft():int A[MD:():int (m)] (LINE:1114)\l0x0042: INVOKE  (r19 I:int) = (r23 I:androidx.constraintlayout.core.widgets.Flow) type: VIRTUAL call: androidx.constraintlayout.core.widgets.Flow.getPaddingTop():int A[MD:():int (m)]\l0x0046: INVOKE  (r20 I:int) = (r23 I:androidx.constraintlayout.core.widgets.Flow) type: VIRTUAL call: androidx.constraintlayout.core.widgets.Flow.getPaddingRight():int A[MD:():int (m)]\l0x004a: INVOKE  (r21 I:int) = (r23 I:androidx.constraintlayout.core.widgets.Flow) type: VIRTUAL call: androidx.constraintlayout.core.widgets.Flow.getPaddingBottom():int A[MD:():int (m)]\l0x004e: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('list' androidx.constraintlayout.core.widgets.Flow$WidgetsList)])  (LINE:1113)\l0x004f: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r26 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('orientation' int)]) \l0x0051: MOVE  (r16 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0053: MOVE  (r17 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x0055: MOVE  (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r27 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('max' int)]) \l0x0057: INVOKE  \l  (r12 I:androidx.constraintlayout.core.widgets.Flow$WidgetsList)\l  (r13 I:int)\l  (r14 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l  (r15 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l  (r16 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l  (r17 I:androidx.constraintlayout.core.widgets.ConstraintAnchor)\l  (r18 I:int)\l  (r19 I:int)\l  (r20 I:int)\l  (r21 I:int)\l  (r22 I:int)\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.Flow.WidgetsList.setup(int, androidx.constraintlayout.core.widgets.ConstraintAnchor, androidx.constraintlayout.core.widgets.ConstraintAnchor, androidx.constraintlayout.core.widgets.ConstraintAnchor, androidx.constraintlayout.core.widgets.ConstraintAnchor, int, int, int, int, int):void A[MD:(int, androidx.constraintlayout.core.widgets.ConstraintAnchor, androidx.constraintlayout.core.widgets.ConstraintAnchor, androidx.constraintlayout.core.widgets.ConstraintAnchor, androidx.constraintlayout.core.widgets.ConstraintAnchor, int, int, int, int, int):void (m)]\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.core.widgets.Flow.measureNoWrap((r23 'this' I:androidx.constraintlayout.core.widgets.Flow A[IMMUTABLE_TYPE, THIS]), (r24 I:androidx.constraintlayout.core.widgets.ConstraintWidget[] A[D('widgets' androidx.constraintlayout.core.widgets.ConstraintWidget[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:int A[D('count' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:int A[D('max' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:int[] A[D('measured' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x005d \-\> B:25:0x005b, CROSS_EDGE: B:28:0x0072 \-\> B:16:?, CROSS_EDGE: B:23:0x002b \-\> B:24:0x005a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x0025: r10 'list' Landroidx\/constraintlayout\/core\/widgets\/Flow$WidgetsList;\l  0x0025\-0x002b: r0 'list' Landroidx\/constraintlayout\/core\/widgets\/Flow$WidgetsList;\l  0x002b\-0x0033: r10 'list' Landroidx\/constraintlayout\/core\/widgets\/Flow$WidgetsList;\l  0x005f\-0x0062: r2 'widget' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  0x005b\-0x0065: r1 'i' I\l  0x0033\-0x0072: r0 'list' Landroidx\/constraintlayout\/core\/widgets\/Flow$WidgetsList;\l  \-1 \-0x0072: r24 'widgets' [Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  \-1 \-0x0072: r25 'count' I\l  \-1 \-0x0072: r26 'orientation' I\l  \-1 \-0x0072: r27 'max' I\l  \-1 \-0x0072: r28 'measured' [I\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_25;
Node_29 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_16;
Node_23 -> Node_24;
}

