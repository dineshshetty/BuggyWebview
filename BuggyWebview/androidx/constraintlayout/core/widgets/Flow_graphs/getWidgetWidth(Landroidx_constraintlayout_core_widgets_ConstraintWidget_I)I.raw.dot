digraph "CFG forandroidx.constraintlayout.core.widgets.Flow.getWidgetWidth(Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;I)I" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:181)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0001|0x0001: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0004 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0003|RETURN\l|0x0003: RETURN  (r0 I:int)  (LINE:182)\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0004|0x0004: INVOKE  (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getHorizontalDimensionBehaviour():androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour A[MD:():androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour (m)] (LINE:184)\l0x0008: SGET  (r2 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour \l}"];
Node_32 [shape=record,label="{32\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0053 \l}"];
Node_33 [shape=record,label="{33\:\ 0x000c|0x000c: IGET  (r1 I:int) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mMatchConstraintDefaultWidth int  (LINE:185)\l}"];
Node_34 [shape=record,label="{34\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0011 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:int)  (LINE:186)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0011|0x0011: IGET  (r0 I:int) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mMatchConstraintDefaultWidth int  (LINE:187)\l0x0013: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0014: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0015|0x0015: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0037 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0017|0x0017: IGET  (r0 I:float) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mMatchConstraintPercentWidth float  (LINE:188)\l0x0019: CAST (r1 I:float) = (float) (r11 I:int A[D('max' int)]) \l0x001a: ARITH  (r0 I:float) = (r0 I:float) * (r1 I:float) \l0x001c: CAST (r0 I:int) = (int) (r0 I:float) \l0x001d: INVOKE  (r1 I:int) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getWidth():int A[MD:():int (m)] (LINE:189)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0021|0x0021: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' int)]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0036 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0023|0x0023: INVOKE  \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l  (r2 I:boolean)\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.setMeasureRequested(boolean):void A[MD:(boolean):void (m)] (LINE:190)\l0x0026: SGET  (r5 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) =  androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour  (LINE:191)\l0x0028: INVOKE  (r7 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getVerticalDimensionBehaviour():androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour A[MD:():androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour (m)]\l0x002c: INVOKE  (r8 I:int) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getHeight():int A[MD:():int (m)]\l0x0030: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY]) \l0x0031: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)]) \l0x0032: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('value' int)]) \l0x0033: INVOKE  \l  (r3 I:androidx.constraintlayout.core.widgets.Flow)\l  (r4 I:androidx.constraintlayout.core.widgets.ConstraintWidget)\l  (r5 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)\l  (r6 I:int)\l  (r7 I:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)\l  (r8 I:int)\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.Flow.measure(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int):void A[MD:(androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int, androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour, int):void (m)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0036|RETURN\l|0x0036: RETURN  (r0 I:int A[D('value' int)])  (LINE:193)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0037|0x0037: IGET  (r0 I:int A[D('value' int)]) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mMatchConstraintDefaultWidth int  (LINE:194)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0039|0x0039: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0040 \l}"];
Node_44 [shape=record,label="{44\:\ 0x003b|0x003b: INVOKE  (r0 I:int) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getWidth():int A[MD:():int (m)] (LINE:195)\l}"];
Node_45 [shape=record,label="{45\:\ 0x003f|RETURN\l|0x003f: RETURN  (r0 I:int) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0040|0x0040: IGET  (r0 I:int) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mMatchConstraintDefaultWidth int  (LINE:196)\l0x0042: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0043|0x0043: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0053 \l}"];
Node_48 [shape=record,label="{48\:\ 0x0045|0x0045: INVOKE  (r0 I:int) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getHeight():int A[MD:():int (m)] (LINE:197)\l0x0049: CAST (r0 I:float) = (float) (r0 I:int) \l0x004a: IGET  (r1 I:float) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l androidx.constraintlayout.core.widgets.ConstraintWidget.mDimensionRatio float \l0x004c: ARITH  (r0 I:float) = (r0 I:float) * (r1 I:float) \l0x004e: CONST  (r1 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char]) \l0x0050: ARITH  (r0 I:float) = (r0 I:float) + (r1 I:float) \l0x0051: CAST (r0 I:int) = (int) (r0 I:float) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0052|RETURN\l|0x0052: RETURN  (r0 I:int) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0053|0x0053: INVOKE  (r0 I:int) = \l  (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget)])\l type: VIRTUAL call: androidx.constraintlayout.core.widgets.ConstraintWidget.getWidth():int A[MD:():int (m)] (LINE:200)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0057|RETURN\l|0x0057: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public final int androidx.constraintlayout.core.widgets.Flow.getWidgetWidth((r9 'this' I:androidx.constraintlayout.core.widgets.Flow A[IMMUTABLE_TYPE, THIS]), (r10 I:androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('max' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0010 \-\> B:27:?, CROSS_EDGE: B:41:0x0036 \-\> B:27:?, CROSS_EDGE: B:39:0x0021 \-\> B:41:0x0036, CROSS_EDGE: B:45:0x003f \-\> B:27:?, CROSS_EDGE: B:49:0x0052 \-\> B:27:?, CROSS_EDGE: B:51:0x0057 \-\> B:27:?, CROSS_EDGE: B:32:0x000a \-\> B:50:0x0053\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001d\-0x0037: r0 'value' I\l  \-1 \-0x0057: r10 'widget' Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\l  \-1 \-0x0057: r11 'max' I\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_27;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_50;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_27;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_42;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_27;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_46;
Node_44 -> Node_45;
Node_45 -> Node_27;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_50;
Node_48 -> Node_49;
Node_49 -> Node_27;
Node_50 -> Node_51;
Node_51 -> Node_27;
}

