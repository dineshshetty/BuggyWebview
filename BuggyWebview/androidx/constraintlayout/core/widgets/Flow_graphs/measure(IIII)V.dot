digraph "CFG forandroidx.constraintlayout.core.widgets.Flow.measure(IIII)V" {
Node_75 [shape=record,label="{75\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_77 [shape=record,label="{77\:\ 0x0000}"];
Node_78 [shape=record,label="{78\:\ 0x000d|if (r23.mWidgetsCount \<= 0) goto L8\l}"];
Node_79 [shape=record,label="{79\:\ 0x000f}"];
Node_80 [shape=record,label="{80\:\ 0x0013|if (measureChildren() != false) goto L8\l}"];
Node_81 [shape=record,label="{81\:\ 0x0015|setMeasure(0, 0)\lneedsCallbackFromSolver(false)\l}"];
Node_82 [shape=record,label="{82\:\ 0x001b|RETURN\l|return\l}"];
Node_76 [shape=record,label="{76\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_83 [shape=record,label="{83\:\ 0x001c|int r14 = getPaddingLeft()\lint r15 = getPaddingRight()\lint r16 = getPaddingTop()\lint r17 = getPaddingBottom()\lint[] r5 = new int[2]\lint r0 = (r25 \- r14) \- r15\lint r1 = r23.mOrientation\l}"];
Node_84 [shape=record,label="{84\:\ 0x0037|if (r1 != 1) goto L74\l}"];
Node_85 [shape=record,label="{85\:\ 0x0039|int r0 = (r27 \- r16) \- r17\lr18 = r0\l}"];
Node_87 [shape=record,label="{87\:\ 0x0042|PHI: r18 \l  PHI: (r18v1 'max' int) = (r18v0 'max' int), (r18v2 'max' int) binds: [B:86:0x0040, B:85:0x0039] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_88 [shape=record,label="{88\:\ 0x0043|if (r1 != 0) goto L68\l}"];
Node_89 [shape=record,label="{89\:\ 0x0045}"];
Node_90 [shape=record,label="{90\:\ 0x0047|if (r23.mHorizontalStyle != (\-1)) goto L16\l}"];
Node_91 [shape=record,label="{91\:\ 0x0049|r23.mHorizontalStyle = 0\l}"];
Node_92 [shape=record,label="{92\:\ 0x004b}"];
Node_93 [shape=record,label="{93\:\ 0x004d|if (r23.mVerticalStyle != (\-1)) goto L19\l}"];
Node_94 [shape=record,label="{94\:\ 0x004f|r23.mVerticalStyle = 0\l}"];
Node_101 [shape=record,label="{101\:\ 0x005e|androidx.constraintlayout.core.widgets.ConstraintWidget[] r0 = r23.mWidgets\lr2 = 0\lr19 = 0\l}"];
Node_102 [shape=record,label="{102\:\ 0x0064|LOOP_START\lLOOP:0: B:102:0x0064\-\>B:107:0x0076\lPHI: r2 r19 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v15 'i' int) binds: [B:101:0x005e, B:107:0x0076] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r19v1 'gone' int) = (r19v0 'gone' int), (r19v2 'gone' int) binds: [B:101:0x005e, B:107:0x0076] A[DONT_GENERATE, DONT_INLINE]\l|int r1 = r23.mWidgetsCount\l}"];
Node_103 [shape=record,label="{103\:\ 0x0068|if (r2 \>= r1) goto L28\l}"];
Node_104 [shape=record,label="{104\:\ 0x006a}"];
Node_105 [shape=record,label="{105\:\ 0x0072|if (r23.mWidgets[r2].getVisibility() != 8) goto L27\l}"];
Node_106 [shape=record,label="{106\:\ 0x0074|int r19 = r19 + 1\l}"];
Node_145 [shape=record,label="{145\:\ 0x0076|SYNTHETIC\l}"];
Node_107 [shape=record,label="{107\:\ 0x0076|LOOP_END\lLOOP:0: B:102:0x0064\-\>B:107:0x0076\lPHI: r19 \l  PHI: (r19v2 'gone' int) = (r19v1 'gone' int), (r19v3 'gone' int) binds: [B:146:0x0076, B:145:0x0076] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = r2 + 1\l}"];
Node_146 [shape=record,label="{146\:\ 0x0076|SYNTHETIC\l}"];
Node_144 [shape=record,label="{144\:\ 0x007a|SYNTHETIC\l}"];
Node_108 [shape=record,label="{108\:\ 0x007a|int r1 = r23.mWidgetsCount\l}"];
Node_109 [shape=record,label="{109\:\ 0x007c|if (r19 \<= 0) goto L67\l}"];
Node_110 [shape=record,label="{110\:\ 0x007e|androidx.constraintlayout.core.widgets.ConstraintWidget[] r0 = new androidx.constraintlayout.core.widgets.ConstraintWidget[r23.mWidgetsCount \- r19]\lr2 = 0\lr4 = 0\l}"];
Node_111 [shape=record,label="{111\:\ 0x0086|LOOP_START\lLOOP:1: B:111:0x0086\-\>B:116:0x009a\lPHI: r1 r2 r4 \l  PHI: (r1v13 'count' int) = (r1v5 'count' int), (r1v16 'count' int) binds: [B:110:0x007e, B:116:0x009a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v12 'j' int) = (r2v11 'j' int), (r2v13 'j' int) binds: [B:110:0x007e, B:116:0x009a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v13 'i' int) = (r4v12 'i' int), (r4v15 'i' int) binds: [B:110:0x007e, B:116:0x009a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_112 [shape=record,label="{112\:\ 0x0088|if (r4 \>= r23.mWidgetsCount) goto L40\l}"];
Node_113 [shape=record,label="{113\:\ 0x008a|r11 = r23.mWidgets[r4]\lr21 = r1\l}"];
Node_114 [shape=record,label="{114\:\ 0x0094|if (r11.getVisibility() == 8) goto L39\l}"];
Node_115 [shape=record,label="{115\:\ 0x0096|r0[r2] = r11\lint r2 = r2 + 1\l}"];
Node_148 [shape=record,label="{148\:\ 0x009a|SYNTHETIC\l}"];
Node_116 [shape=record,label="{116\:\ 0x009a|LOOP_END\lLOOP:1: B:111:0x0086\-\>B:116:0x009a\lPHI: r2 \l  PHI: (r2v13 'j' int) = (r2v12 'j' int), (r2v14 'j' int) binds: [B:149:0x009a, B:148:0x009a] A[DONT_GENERATE, DONT_INLINE]\l|int r4 = r4 + 1\lr1 = r21\l}"];
Node_149 [shape=record,label="{149\:\ 0x009a|SYNTHETIC\l}"];
Node_147 [shape=record,label="{147\:\ 0x00a0|SYNTHETIC\l}"];
Node_117 [shape=record,label="{117\:\ 0x00a0|r11 = r0\lr4 = r2\l}"];
Node_119 [shape=record,label="{119\:\ 0x00ab|PHI: r4 r11 \l  PHI: (r4v2 'count' int) = (r4v1 'count' int), (r4v14 'count' int) binds: [B:118:0x00a6, B:117:0x00a0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v2 'widgets' androidx.constraintlayout.core.widgets.ConstraintWidget[]) = (r11v1 'widgets' androidx.constraintlayout.core.widgets.ConstraintWidget[]), (r11v4 'widgets' androidx.constraintlayout.core.widgets.ConstraintWidget[]) binds: [B:118:0x00a6, B:117:0x00a0] A[DONT_GENERATE, DONT_INLINE]\l|r23.mDisplayedWidgets = r11\lr23.mDisplayedWidgetsCount = r4\l}"];
Node_120 [shape=record,label="{120\:\ 0x00b1|switch(r23.mWrapMode) \{\l    case 0: goto L66;\l    case 1: goto L65;\l    case 2: goto L64;\l    case 3: goto L63;\l    default: goto L44;\l\}\l}"];
Node_121 [shape=record,label="{121\:\ 0x00b4|r22 = r5\lr20 = 1\l}"];
Node_126 [shape=record,label="{126\:\ 0x0106|PHI: r20 r22 \l  PHI: (r20v4 char) = (r20v0 char), (r20v1 char), (r20v2 char), (r20v3 char), (r20v5 char) binds: [B:125:0x00f3, B:124:0x00e0, B:123:0x00cd, B:122:0x00bb, B:121:0x00b4] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r22v4 'measured' int[]) = (r22v0 'measured' int[]), (r22v1 'measured' int[]), (r22v2 'measured' int[]), (r22v3 'measured' int[]), (r22v5 'measured' int[]) binds: [B:125:0x00f3, B:124:0x00e0, B:123:0x00cd, B:122:0x00bb, B:121:0x00b4] A[DONT_GENERATE, DONT_INLINE]\l|r0 = false\lint r1 = (r22[0] + r14) + r15\lint r2 = (r22[r20] + r16) + r17\lr3 = 0\lr4 = 0\l}"];
Node_127 [shape=record,label="{127\:\ 0x0117|if (r24 != 1073741824) goto L59\l}"];
Node_128 [shape=record,label="{128\:\ 0x0119|r3 = r25\l}"];
Node_133 [shape=record,label="{133\:\ 0x0126|PHI: r3 \l  PHI: (r3v8 'measuredWidth' int) = (r3v5 'measuredWidth' int), (r3v6 'measuredWidth' int), (r3v7 'measuredWidth' int), (r3v9 'measuredWidth' int) binds: [B:131:0x0123, B:132:0x0125, B:130:0x011e, B:128:0x0119] A[DONT_GENERATE, DONT_INLINE]\l|if (r26 != 1073741824) goto L55\l}"];
Node_134 [shape=record,label="{134\:\ 0x0128|r4 = r27\l}"];
Node_139 [shape=record,label="{139\:\ 0x0135|PHI: r4 \l  PHI: (r4v10 'measuredHeight' int) = (r4v7 'measuredHeight' int), (r4v8 'measuredHeight' int), (r4v9 'measuredHeight' int), (r4v11 'measuredHeight' int) binds: [B:137:0x0132, B:138:0x0134, B:136:0x012d, B:134:0x0128] A[DONT_GENERATE, DONT_INLINE]\l|setMeasure(r3, r4)\lsetWidth(r3)\lsetHeight(r4)\l}"];
Node_140 [shape=record,label="{140\:\ 0x0140|if (r23.mWidgetsCount \<= 0) goto L53\l}"];
Node_141 [shape=record,label="{141\:\ 0x0142|r0 = true\l}"];
Node_142 [shape=record,label="{142\:\ 0x0143|PHI: r0 \l  PHI: (r0v12 boolean) = (r0v11 boolean), (r0v13 boolean) binds: [B:140:0x0140, B:141:0x0142] A[DONT_GENERATE, DONT_INLINE]\l|needsCallbackFromSolver(r0)\l}"];
Node_143 [shape=record,label="{143\:\ 0x0146|RETURN\l|return\l}"];
Node_135 [shape=record,label="{135\:\ 0x012b|if (r26 != Integer.MIN_VALUE) goto L57\l}"];
Node_136 [shape=record,label="{136\:\ 0x012d|int r4 = java.lang.Math.min(r2, r27)\l}"];
Node_137 [shape=record,label="{137\:\ 0x0132|if (r26 != 0) goto L50\l}"];
Node_138 [shape=record,label="{138\:\ 0x0134|r4 = r2\l}"];
Node_129 [shape=record,label="{129\:\ 0x011c|if (r24 != Integer.MIN_VALUE) goto L61\l}"];
Node_130 [shape=record,label="{130\:\ 0x011e|int r3 = java.lang.Math.min(r1, r25)\l}"];
Node_131 [shape=record,label="{131\:\ 0x0123|if (r24 != 0) goto L48\l}"];
Node_132 [shape=record,label="{132\:\ 0x0125|r3 = r1\l}"];
Node_122 [shape=record,label="{122\:\ 0x00bb|r1 = r11\lr2 = r4\lr20 = 1\lr22 = r5\lmeasureChainWrap_new(r1, r2, r23.mOrientation, r18, r5)\l}"];
Node_123 [shape=record,label="{123\:\ 0x00cd|r22 = r5\lr20 = 1\lr1 = r11\lmeasureAligned(r1, r4, r23.mOrientation, r18, r5)\l}"];
Node_124 [shape=record,label="{124\:\ 0x00e0|r22 = r5\lr20 = 1\lr1 = r11\lmeasureChainWrap(r1, r4, r23.mOrientation, r18, r5)\l}"];
Node_125 [shape=record,label="{125\:\ 0x00f3|r22 = r5\lr20 = 1\lr1 = r11\lmeasureNoWrap(r1, r4, r23.mOrientation, r18, r5)\l}"];
Node_118 [shape=record,label="{118\:\ 0x00a6|r11 = r0\lr4 = r1\l}"];
Node_95 [shape=record,label="{95\:\ 0x0052}"];
Node_96 [shape=record,label="{96\:\ 0x0054|if (r23.mHorizontalStyle != (\-1)) goto L71\l}"];
Node_97 [shape=record,label="{97\:\ 0x0056|r23.mHorizontalStyle = 0\l}"];
Node_98 [shape=record,label="{98\:\ 0x0058}"];
Node_99 [shape=record,label="{99\:\ 0x005a|if (r23.mVerticalStyle != (\-1)) goto L19\l}"];
Node_100 [shape=record,label="{100\:\ 0x005c|r23.mVerticalStyle = 0\l}"];
Node_86 [shape=record,label="{86\:\ 0x0040|r18 = r0\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.Flow.measure((r23v0 'this' androidx.constraintlayout.core.widgets.Flow A[IMMUTABLE_TYPE, THIS]), (r24v0 'widthMode' int A[D('widthMode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 'widthSize' int A[D('widthSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 'heightMode' int A[D('heightMode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 'heightSize' int A[D('heightSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lBACK_EDGE: B:107:0x0076 \-\> B:102:0x0064, CROSS_EDGE: B:105:0x0072 \-\> B:107:0x0076, BACK_EDGE: B:116:0x009a \-\> B:111:0x0086, CROSS_EDGE: B:114:0x0094 \-\> B:116:0x009a, CROSS_EDGE: B:143:0x0146 \-\> B:76:?, CROSS_EDGE: B:140:0x0140 \-\> B:142:0x0143, CROSS_EDGE: B:136:0x012d \-\> B:139:0x0135, CROSS_EDGE: B:138:0x0134 \-\> B:139:0x0135, CROSS_EDGE: B:137:0x0132 \-\> B:139:0x0135, CROSS_EDGE: B:130:0x011e \-\> B:133:0x0126, CROSS_EDGE: B:132:0x0125 \-\> B:133:0x0126, CROSS_EDGE: B:131:0x0123 \-\> B:133:0x0126, CROSS_EDGE: B:122:0x00bb \-\> B:126:0x0106, CROSS_EDGE: B:123:0x00cd \-\> B:126:0x0106, CROSS_EDGE: B:124:0x00e0 \-\> B:126:0x0106, CROSS_EDGE: B:125:0x00f3 \-\> B:126:0x0106, CROSS_EDGE: B:118:0x00a6 \-\> B:119:0x00ab, CROSS_EDGE: B:93:0x004d \-\> B:101:0x005e, CROSS_EDGE: B:90:0x0047 \-\> B:92:0x004b, CROSS_EDGE: B:100:0x005c \-\> B:101:0x005e, CROSS_EDGE: B:99:0x005a \-\> B:101:0x005e, CROSS_EDGE: B:96:0x0054 \-\> B:98:0x0058, CROSS_EDGE: B:86:0x0040 \-\> B:87:0x0042, CROSS_EDGE: B:78:0x000d \-\> B:83:0x001c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.widgets.VirtualLayout.measure(int, int, int, int):void]\l}"];
MethodNode -> Node_75;Node_75 -> Node_77;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_83;
Node_79 -> Node_80;
Node_80 -> Node_81[style=dashed];
Node_80 -> Node_83;
Node_81 -> Node_82;
Node_82 -> Node_76;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_86;
Node_85 -> Node_87;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_95;
Node_89 -> Node_90;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_92;
Node_91 -> Node_92;
Node_92 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_101;
Node_94 -> Node_101;
Node_101 -> Node_102;
Node_102 -> Node_103;
Node_103 -> Node_104[style=dashed];
Node_103 -> Node_144;
Node_104 -> Node_105;
Node_105 -> Node_106[style=dashed];
Node_105 -> Node_146;
Node_106 -> Node_145;
Node_145 -> Node_107;
Node_107 -> Node_102;
Node_146 -> Node_107;
Node_144 -> Node_108;
Node_108 -> Node_109;
Node_109 -> Node_110[style=dashed];
Node_109 -> Node_118;
Node_110 -> Node_111;
Node_111 -> Node_112;
Node_112 -> Node_113[style=dashed];
Node_112 -> Node_147;
Node_113 -> Node_114;
Node_114 -> Node_115[style=dashed];
Node_114 -> Node_149;
Node_115 -> Node_148;
Node_148 -> Node_116;
Node_116 -> Node_111;
Node_149 -> Node_116;
Node_147 -> Node_117;
Node_117 -> Node_119;
Node_119 -> Node_120;
Node_120 -> Node_121;
Node_120 -> Node_122;
Node_120 -> Node_123;
Node_120 -> Node_124;
Node_120 -> Node_125;
Node_121 -> Node_126;
Node_126 -> Node_127;
Node_127 -> Node_128[style=dashed];
Node_127 -> Node_129;
Node_128 -> Node_133;
Node_133 -> Node_134[style=dashed];
Node_133 -> Node_135;
Node_134 -> Node_139;
Node_139 -> Node_140;
Node_140 -> Node_141[style=dashed];
Node_140 -> Node_142;
Node_141 -> Node_142;
Node_142 -> Node_143;
Node_143 -> Node_76;
Node_135 -> Node_136[style=dashed];
Node_135 -> Node_137;
Node_136 -> Node_139;
Node_137 -> Node_138[style=dashed];
Node_137 -> Node_139;
Node_138 -> Node_139;
Node_129 -> Node_130[style=dashed];
Node_129 -> Node_131;
Node_130 -> Node_133;
Node_131 -> Node_132[style=dashed];
Node_131 -> Node_133;
Node_132 -> Node_133;
Node_122 -> Node_126;
Node_123 -> Node_126;
Node_124 -> Node_126;
Node_125 -> Node_126;
Node_118 -> Node_119;
Node_95 -> Node_96;
Node_96 -> Node_97[style=dashed];
Node_96 -> Node_98;
Node_97 -> Node_98;
Node_98 -> Node_99;
Node_99 -> Node_100[style=dashed];
Node_99 -> Node_101;
Node_100 -> Node_101;
Node_86 -> Node_87;
}

