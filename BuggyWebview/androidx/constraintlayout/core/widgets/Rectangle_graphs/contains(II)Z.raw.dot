digraph "CFG forandroidx.constraintlayout.core.widgets.Rectangle.contains(II)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r2 I:androidx.constraintlayout.core.widgets.Rectangle) androidx.constraintlayout.core.widgets.Rectangle.x int  (LINE:46)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r3 I:??[int, byte, short, char] A[D('x' int)]) \< (r0 I:??[int, byte, short, char])  \-\> B:11:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: IGET  (r1 I:int) = (r2 I:androidx.constraintlayout.core.widgets.Rectangle) androidx.constraintlayout.core.widgets.Rectangle.width int \l0x0006: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IF  (r3 I:??[int, byte, short, char] A[D('x' int)]) \>= (r0 I:??[int, byte, short, char])  \-\> B:11:0x0014 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: IGET  (r0 I:int) = (r2 I:androidx.constraintlayout.core.widgets.Rectangle) androidx.constraintlayout.core.widgets.Rectangle.y int \l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|0x000b: IF  (r4 I:??[int, byte, short, char] A[D('y' int)]) \< (r0 I:??[int, byte, short, char])  \-\> B:11:0x0014 \l}"];
Node_8 [shape=record,label="{8\:\ 0x000d|0x000d: IGET  (r1 I:int) = (r2 I:androidx.constraintlayout.core.widgets.Rectangle) androidx.constraintlayout.core.widgets.Rectangle.height int \l0x000f: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0010|0x0010: IF  (r4 I:??[int, byte, short, char] A[D('y' int)]) \>= (r0 I:??[int, byte, short, char])  \-\> B:11:0x0014 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|SYNTHETIC\lRETURN\l|0x0012: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0015: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0014|RETURN\lORIG_RETURN\l|0x0014: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.core.widgets.Rectangle.contains((r2 'this' I:androidx.constraintlayout.core.widgets.Rectangle A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0014 \-\> B:12:0x0015, CROSS_EDGE: B:7:0x000b \-\> B:11:0x0014, CROSS_EDGE: B:5:0x0007 \-\> B:11:0x0014, CROSS_EDGE: B:3:0x0002 \-\> B:11:0x0014\lDebug Info:\l  \-1 \-0x0015: r3 'x' I\l  \-1 \-0x0015: r4 'y' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_1;
Node_11 -> Node_1;
}

