digraph "CFG forandroidx.constraintlayout.core.widgets.ConstraintWidgetContainer.addHorizontalWrapMinVariable(Landroidx\/constraintlayout\/core\/widgets\/ConstraintAnchor;)V" {
subgraph cluster_Region_9292169 {
label = "R(2:1|(1:(1:9)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0000|java.lang.ref.WeakReference\<androidx.constraintlayout.core.widgets.ConstraintAnchor\> java.lang.ref.WeakReference\<androidx.constraintlayout.core.widgets.ConstraintAnchor\> r0 = r2.horizontalWrapMin\l}"];
subgraph cluster_Region_1235130672 {
label = "R(1:(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_510913537 {
label = "IF [B:14:0x0002, B:16:0x0008, B:18:0x001a] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0002|if (r0 == null) goto L9\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|ADDED_TO_REGION\l|if (r0.get() == null) goto L9\l}"];
Node_18 [shape=record,label="{18\:\ 0x001a|ADDED_TO_REGION\l|if (r3.getFinalValue() \> r2.horizontalWrapMin.get().getFinalValue()) goto L9\l}"];
subgraph cluster_Region_875643680 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x001c|r2.horizontalWrapMin = new java.lang.ref.WeakReference\<\>(r3)\l}"];
}
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0004}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x000a}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0023|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.ConstraintWidgetContainer.addHorizontalWrapMinVariable((r2v0 'this' androidx.constraintlayout.core.widgets.ConstraintWidgetContainer A[IMMUTABLE_TYPE, THIS]), (r3v0 'left' androidx.constraintlayout.core.widgets.ConstraintAnchor A[D('left' androidx.constraintlayout.core.widgets.ConstraintAnchor), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x001a \-\> B:20:0x0023, CROSS_EDGE: B:16:0x0008 \-\> B:19:0x001c, CROSS_EDGE: B:14:0x0002 \-\> B:19:0x001c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_18 -> Node_19;
Node_18 -> Node_21[style=dashed];
Node_19 -> Node_20;
Node_11 -> Node_13;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_21 -> Node_12;
Node_20 -> Node_12;
}

