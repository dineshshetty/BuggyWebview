digraph "CFG forandroidx.constraintlayout.core.widgets.ConstraintWidgetContainer.directMeasure(Z)Z" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:androidx.constraintlayout.core.widgets.analyzer.DependencyGraph) = (r1 I:androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) androidx.constraintlayout.core.widgets.ConstraintWidgetContainer.mDependencyGraph androidx.constraintlayout.core.widgets.analyzer.DependencyGraph  (LINE:73)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:androidx.constraintlayout.core.widgets.analyzer.DependencyGraph), (r2 I:boolean A[D('optimizeWrap' boolean)]) type: VIRTUAL call: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph.directMeasure(boolean):boolean A[MD:(boolean):boolean (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.core.widgets.ConstraintWidgetContainer.directMeasure((r1 'this' I:androidx.constraintlayout.core.widgets.ConstraintWidgetContainer A[IMMUTABLE_TYPE, THIS]), (r2 I:boolean A[D('optimizeWrap' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0006: r2 'optimizeWrap' Z\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

