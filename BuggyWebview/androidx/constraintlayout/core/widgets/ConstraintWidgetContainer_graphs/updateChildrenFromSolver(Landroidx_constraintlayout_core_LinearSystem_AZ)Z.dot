digraph "CFG forandroidx.constraintlayout.core.widgets.ConstraintWidgetContainer.updateChildrenFromSolver(Landroidx\/constraintlayout\/core\/LinearSystem;[Z)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|r8[2] = false\lboolean r0 = optimizeFor(64)\lupdateFromSolver(r7, r0)\lint r1 = r6.mChildren.size()\lr2 = false\lr3 = 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x0015|LOOP_START\lLOOP:0: B:15:0x0015\-\>B:19:0x0029\lPHI: r2 r3 \l  PHI: (r2v1 'hasOverride' boolean) = (r2v0 'hasOverride' boolean), (r2v2 'hasOverride' boolean) binds: [B:14:0x0000, B:19:0x0029] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v2 'i' int) binds: [B:14:0x0000, B:19:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \>= r1) goto L9\l}"];
Node_16 [shape=record,label="{16\:\ 0x0017|androidx.constraintlayout.core.widgets.ConstraintWidget r4 = r6.mChildren.get(r3)\lr4.updateFromSolver(r7, r0)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|if (r4.hasDimensionOverride() == false) goto L8\l}"];
Node_18 [shape=record,label="{18\:\ 0x0028|r2 = true\l}"];
Node_22 [shape=record,label="{22\:\ 0x0029|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0029|LOOP_END\lLOOP:0: B:15:0x0015\-\>B:19:0x0029\lPHI: r2 \l  PHI: (r2v2 'hasOverride' boolean) = (r2v1 'hasOverride' boolean), (r2v3 'hasOverride' boolean) binds: [B:23:0x0029, B:22:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|int r3 = r3 + 1\l}"];
Node_23 [shape=record,label="{23\:\ 0x0029|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x002c|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x002c|RETURN\l|return r2\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.core.widgets.ConstraintWidgetContainer.updateChildrenFromSolver((r6v0 'this' androidx.constraintlayout.core.widgets.ConstraintWidgetContainer A[IMMUTABLE_TYPE, THIS]), (r7v0 'system' androidx.constraintlayout.core.LinearSystem A[D('system' androidx.constraintlayout.core.LinearSystem), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'flags' boolean[] A[D('flags' boolean[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0029 \-\> B:15:0x0015, CROSS_EDGE: B:17:0x0026 \-\> B:19:0x0029\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_22;
Node_22 -> Node_19;
Node_19 -> Node_15;
Node_23 -> Node_19;
Node_21 -> Node_20;
Node_20 -> Node_13;
}

