digraph "CFG forandroidx.constraintlayout.core.widgets.ConstraintWidgetContainer.measure(ILandroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;Landroidx\/constraintlayout\/core\/widgets\/analyzer\/BasicMeasure$Measurer;Landroidx\/constraintlayout\/core\/widgets\/analyzer\/BasicMeasure$Measure;I)Z" {
Node_87 [shape=record,label="{87\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_89 [shape=record,label="{89\:\ 0x0000}"];
Node_90 [shape=record,label="{90\:\ 0x0001|if (r11 != null) goto L5\l}"];
Node_91 [shape=record,label="{91\:\ 0x0003|RETURN\l|return false\l}"];
Node_88 [shape=record,label="{88\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_92 [shape=record,label="{92\:\ 0x0004}"];
Node_93 [shape=record,label="{93\:\ 0x000a|if (r10.getVisibility() == 8) goto L84\l}"];
Node_94 [shape=record,label="{94\:\ 0x000c}"];
Node_95 [shape=record,label="{95\:\ 0x000e|if ((r10 instanceof androidx.constraintlayout.core.widgets.Guideline) != false) goto L84\l}"];
Node_96 [shape=record,label="{96\:\ 0x0010}"];
Node_97 [shape=record,label="{97\:\ 0x0012|if ((r10 instanceof androidx.constraintlayout.core.widgets.Barrier) == false) goto L11\l}"];
Node_99 [shape=record,label="{99\:\ 0x0016|r12.horizontalBehavior = r10.getHorizontalDimensionBehaviour()\lr12.verticalBehavior = r10.getVerticalDimensionBehaviour()\lr12.horizontalDimension = r10.getWidth()\lr12.verticalDimension = r10.getHeight()\lr12.measuredNeedsSolverPass = false\lr12.measureStrategy = r13\l}"];
Node_100 [shape=record,label="{100\:\ 0x0037|if (r12.horizontalBehavior != androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L83\l}"];
Node_101 [shape=record,label="{101\:\ 0x0039|r1 = true\l}"];
Node_103 [shape=record,label="{103\:\ 0x003c|PHI: r1 \l  PHI: (r1v9 'horizontalMatchConstraints' boolean) = (r1v8 'horizontalMatchConstraints' boolean), (r1v14 'horizontalMatchConstraints' boolean) binds: [B:102:0x003b, B:101:0x0039] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_104 [shape=record,label="{104\:\ 0x0040|if (r12.verticalBehavior != androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.MATCH_CONSTRAINT) goto L82\l}"];
Node_105 [shape=record,label="{105\:\ 0x0042|r2 = true\l}"];
Node_107 [shape=record,label="{107\:\ 0x0045|PHI: r2 \l  PHI: (r2v4 'verticalMatchConstraints' boolean) = (r2v3 'verticalMatchConstraints' boolean), (r2v9 'verticalMatchConstraints' boolean) binds: [B:106:0x0044, B:105:0x0042] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_108 [shape=record,label="{108\:\ 0x0046|if (r1 == false) goto L81\l}"];
Node_109 [shape=record,label="{109\:\ 0x0048}"];
Node_110 [shape=record,label="{110\:\ 0x004c|if ((r10.mDimensionRatio \> 0.0f ? 1 : (r10.mDimensionRatio == 0.0f ? 0 : \-1)) \<= 0) goto L81\l}"];
Node_111 [shape=record,label="{111\:\ 0x004e|r5 = true\l}"];
Node_113 [shape=record,label="{113\:\ 0x0051|PHI: r5 \l  PHI: (r5v1 'horizontalUseRatio' boolean) = (r5v0 'horizontalUseRatio' boolean), (r5v4 'horizontalUseRatio' boolean) binds: [B:112:0x0050, B:111:0x004e] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == false) goto L80\l}"];
Node_114 [shape=record,label="{114\:\ 0x0053}"];
Node_115 [shape=record,label="{115\:\ 0x0057|if ((r10.mDimensionRatio \> 0.0f ? 1 : (r10.mDimensionRatio == 0.0f ? 0 : \-1)) \<= 0) goto L80\l}"];
Node_116 [shape=record,label="{116\:\ 0x0059|r4 = true\l}"];
Node_118 [shape=record,label="{118\:\ 0x005c|PHI: r4 \l  PHI: (r4v3 'verticalUseRatio' boolean) = (r4v2 'verticalUseRatio' boolean), (r4v5 'verticalUseRatio' boolean) binds: [B:117:0x005b, B:116:0x0059] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L37\l}"];
Node_119 [shape=record,label="{119\:\ 0x005e}"];
Node_120 [shape=record,label="{120\:\ 0x0062|if (r10.hasDanglingDimension(0) == false) goto L37\l}"];
Node_121 [shape=record,label="{121\:\ 0x0064}"];
Node_122 [shape=record,label="{122\:\ 0x0066|if (r10.mMatchConstraintDefaultWidth != 0) goto L37\l}"];
Node_123 [shape=record,label="{123\:\ 0x0068|if (r5 != false) goto L37\l}"];
Node_124 [shape=record,label="{124\:\ 0x006a|r1 = false\lr12.horizontalBehavior = androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT\l}"];
Node_125 [shape=record,label="{125\:\ 0x006f|if (r2 == false) goto L37\l}"];
Node_126 [shape=record,label="{126\:\ 0x0071}"];
Node_127 [shape=record,label="{127\:\ 0x0073|if (r10.mMatchConstraintDefaultHeight != 0) goto L37\l}"];
Node_128 [shape=record,label="{128\:\ 0x0075|r12.horizontalBehavior = androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED\l}"];
Node_129 [shape=record,label="{129\:\ 0x0079|PHI: r1 \l  PHI: (r1v10 'horizontalMatchConstraints' boolean) = (r1v9 'horizontalMatchConstraints' boolean), (r1v9 'horizontalMatchConstraints' boolean), (r1v9 'horizontalMatchConstraints' boolean), (r1v9 'horizontalMatchConstraints' boolean), (r1v13 'horizontalMatchConstraints' boolean), (r1v13 'horizontalMatchConstraints' boolean), (r1v13 'horizontalMatchConstraints' boolean) binds: [B:118:0x005c, B:120:0x0062, B:122:0x0066, B:123:0x0068, B:125:0x006f, B:127:0x0073, B:128:0x0075] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == false) goto L48\l}"];
Node_130 [shape=record,label="{130\:\ 0x007b}"];
Node_131 [shape=record,label="{131\:\ 0x007f|if (r10.hasDanglingDimension(1) == false) goto L48\l}"];
Node_132 [shape=record,label="{132\:\ 0x0081}"];
Node_133 [shape=record,label="{133\:\ 0x0083|if (r10.mMatchConstraintDefaultHeight != 0) goto L48\l}"];
Node_134 [shape=record,label="{134\:\ 0x0085|if (r4 != false) goto L48\l}"];
Node_135 [shape=record,label="{135\:\ 0x0087|r2 = false\lr12.verticalBehavior = androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT\l}"];
Node_136 [shape=record,label="{136\:\ 0x008c|if (r1 == false) goto L48\l}"];
Node_137 [shape=record,label="{137\:\ 0x008e}"];
Node_138 [shape=record,label="{138\:\ 0x0090|if (r10.mMatchConstraintDefaultWidth != 0) goto L48\l}"];
Node_139 [shape=record,label="{139\:\ 0x0092|r12.verticalBehavior = androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED\l}"];
Node_140 [shape=record,label="{140\:\ 0x0096|PHI: r2 \l  PHI: (r2v5 'verticalMatchConstraints' boolean) = (r2v4 'verticalMatchConstraints' boolean), (r2v4 'verticalMatchConstraints' boolean), (r2v4 'verticalMatchConstraints' boolean), (r2v4 'verticalMatchConstraints' boolean), (r2v8 'verticalMatchConstraints' boolean), (r2v8 'verticalMatchConstraints' boolean), (r2v8 'verticalMatchConstraints' boolean) binds: [B:129:0x0079, B:131:0x007f, B:133:0x0083, B:134:0x0085, B:136:0x008c, B:138:0x0090, B:139:0x0092] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_141 [shape=record,label="{141\:\ 0x009a|if (r10.isResolvedHorizontally() == false) goto L51\l}"];
Node_142 [shape=record,label="{142\:\ 0x009c|r1 = false\lr12.horizontalBehavior = androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED\l}"];
Node_143 [shape=record,label="{143\:\ 0x00a1|PHI: r1 \l  PHI: (r1v11 'horizontalMatchConstraints' boolean) = (r1v10 'horizontalMatchConstraints' boolean), (r1v12 'horizontalMatchConstraints' boolean) binds: [B:141:0x009a, B:142:0x009c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_144 [shape=record,label="{144\:\ 0x00a5|if (r10.isResolvedVertically() == false) goto L54\l}"];
Node_145 [shape=record,label="{145\:\ 0x00a7|r2 = false\lr12.verticalBehavior = androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED\l}"];
Node_146 [shape=record,label="{146\:\ 0x00ac|PHI: r2 \l  PHI: (r2v6 'verticalMatchConstraints' boolean) = (r2v5 'verticalMatchConstraints' boolean), (r2v7 'verticalMatchConstraints' boolean) binds: [B:144:0x00a5, B:145:0x00a7] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_147 [shape=record,label="{147\:\ 0x00ad|if (r5 == false) goto L65\l}"];
Node_148 [shape=record,label="{148\:\ 0x00af}"];
Node_149 [shape=record,label="{149\:\ 0x00b3|if (r10.mResolvedMatchConstraintDefault[0] != 4) goto L59\l}"];
Node_150 [shape=record,label="{150\:\ 0x00b5|r12.horizontalBehavior = androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED\l}"];
Node_151 [shape=record,label="{151\:\ 0x00ba|if (r2 != false) goto L65\l}"];
Node_152 [shape=record,label="{152\:\ 0x00bc}"];
Node_153 [shape=record,label="{153\:\ 0x00c0|if (r12.verticalBehavior != androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED) goto L64\l}"];
Node_154 [shape=record,label="{154\:\ 0x00c2|int r0 = r12.verticalDimension\l}"];
Node_156 [shape=record,label="{156\:\ 0x00ce|PHI: r0 \l  PHI: (r0v19 'measuredHeight' int) = (r0v18 'measuredHeight' int), (r0v20 'measuredHeight' int) binds: [B:155:0x00c5, B:154:0x00c2] A[DONT_GENERATE, DONT_INLINE]\l|r12.horizontalBehavior = androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED\lr12.horizontalDimension = (int) (r10.getDimensionRatio() * ((float) r0))\l}"];
Node_155 [shape=record,label="{155\:\ 0x00c5|r12.horizontalBehavior = androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT\lr11.measure(r10, r12)\lint r0 = r12.measuredHeight\l}"];
Node_157 [shape=record,label="{157\:\ 0x00dc|if (r4 == false) goto L78\l}"];
Node_158 [shape=record,label="{158\:\ 0x00de}"];
Node_159 [shape=record,label="{159\:\ 0x00e2|if (r10.mResolvedMatchConstraintDefault[1] != 4) goto L69\l}"];
Node_160 [shape=record,label="{160\:\ 0x00e4|r12.verticalBehavior = androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED\l}"];
Node_161 [shape=record,label="{161\:\ 0x00e9|if (r1 != false) goto L78\l}"];
Node_162 [shape=record,label="{162\:\ 0x00eb}"];
Node_163 [shape=record,label="{163\:\ 0x00ef|if (r12.horizontalBehavior != androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED) goto L77\l}"];
Node_164 [shape=record,label="{164\:\ 0x00f1|int r0 = r12.horizontalDimension\l}"];
Node_166 [shape=record,label="{166\:\ 0x00fd|PHI: r0 \l  PHI: (r0v12 'measuredWidth' int) = (r0v11 'measuredWidth' int), (r0v13 'measuredWidth' int) binds: [B:165:0x00f4, B:164:0x00f1] A[DONT_GENERATE, DONT_INLINE]\l|r12.verticalBehavior = androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.FIXED\l}"];
Node_167 [shape=record,label="{167\:\ 0x0106|if (r10.getDimensionRatioSide() != (\-1)) goto L76\l}"];
Node_168 [shape=record,label="{168\:\ 0x0108|r12.verticalDimension = (int) (((float) r0) \/ r10.getDimensionRatio())\l}"];
Node_169 [shape=record,label="{169\:\ 0x0112|r12.verticalDimension = (int) (r10.getDimensionRatio() * ((float) r0))\l}"];
Node_165 [shape=record,label="{165\:\ 0x00f4|r12.verticalBehavior = androidx.constraintlayout.core.widgets.ConstraintWidget.DimensionBehaviour.WRAP_CONTENT\lr11.measure(r10, r12)\lint r0 = r12.measuredWidth\l}"];
Node_170 [shape=record,label="{170\:\ 0x011c|r11.measure(r10, r12)\lr10.setWidth(r12.measuredWidth)\lr10.setHeight(r12.measuredHeight)\lr10.setHasBaseline(r12.measuredHasBaseline)\lr10.setBaselineDistance(r12.measuredBaseline)\lr12.measureStrategy = androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.Measure.SELF_DIMENSIONS\l}"];
Node_171 [shape=record,label="{171\:\ 0x0139|RETURN\l|return r12.measuredNeedsSolverPass\l}"];
Node_117 [shape=record,label="{117\:\ 0x005b|r4 = false\l}"];
Node_112 [shape=record,label="{112\:\ 0x0050|r5 = false\l}"];
Node_106 [shape=record,label="{106\:\ 0x0044|r2 = false\l}"];
Node_102 [shape=record,label="{102\:\ 0x003b|r1 = false\l}"];
Node_172 [shape=record,label="{172\:\ 0x013a|r12.measuredWidth = 0\lr12.measuredHeight = 0\l}"];
Node_173 [shape=record,label="{173\:\ 0x013e|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static boolean androidx.constraintlayout.core.widgets.ConstraintWidgetContainer.measure((r9v0 'level' int A[D('level' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'widget' androidx.constraintlayout.core.widgets.ConstraintWidget A[D('widget' androidx.constraintlayout.core.widgets.ConstraintWidget), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'measurer' androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer A[D('measurer' androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'measure' androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure A[D('measure' androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'measureStrategy' int A[D('measureStrategy' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:171:0x0139 \-\> B:88:?, CROSS_EDGE: B:168:0x0108 \-\> B:170:0x011c, CROSS_EDGE: B:169:0x0112 \-\> B:170:0x011c, CROSS_EDGE: B:165:0x00f4 \-\> B:166:0x00fd, CROSS_EDGE: B:161:0x00e9 \-\> B:170:0x011c, CROSS_EDGE: B:157:0x00dc \-\> B:170:0x011c, CROSS_EDGE: B:156:0x00ce \-\> B:157:0x00dc, CROSS_EDGE: B:155:0x00c5 \-\> B:156:0x00ce, CROSS_EDGE: B:151:0x00ba \-\> B:157:0x00dc, CROSS_EDGE: B:147:0x00ad \-\> B:157:0x00dc, CROSS_EDGE: B:144:0x00a5 \-\> B:146:0x00ac, CROSS_EDGE: B:141:0x009a \-\> B:143:0x00a1, CROSS_EDGE: B:138:0x0090 \-\> B:140:0x0096, CROSS_EDGE: B:136:0x008c \-\> B:140:0x0096, CROSS_EDGE: B:134:0x0085 \-\> B:140:0x0096, CROSS_EDGE: B:133:0x0083 \-\> B:140:0x0096, CROSS_EDGE: B:131:0x007f \-\> B:140:0x0096, CROSS_EDGE: B:129:0x0079 \-\> B:140:0x0096, CROSS_EDGE: B:127:0x0073 \-\> B:129:0x0079, CROSS_EDGE: B:125:0x006f \-\> B:129:0x0079, CROSS_EDGE: B:123:0x0068 \-\> B:129:0x0079, CROSS_EDGE: B:122:0x0066 \-\> B:129:0x0079, CROSS_EDGE: B:120:0x0062 \-\> B:129:0x0079, CROSS_EDGE: B:118:0x005c \-\> B:129:0x0079, CROSS_EDGE: B:117:0x005b \-\> B:118:0x005c, CROSS_EDGE: B:113:0x0051 \-\> B:117:0x005b, CROSS_EDGE: B:112:0x0050 \-\> B:113:0x0051, CROSS_EDGE: B:108:0x0046 \-\> B:112:0x0050, CROSS_EDGE: B:106:0x0044 \-\> B:107:0x0045, CROSS_EDGE: B:102:0x003b \-\> B:103:0x003c, CROSS_EDGE: B:173:0x013e \-\> B:88:?, CROSS_EDGE: B:95:0x000e \-\> B:172:0x013a, CROSS_EDGE: B:93:0x000a \-\> B:172:0x013a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_87;Node_87 -> Node_89;
Node_89 -> Node_90;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_92;
Node_91 -> Node_88;
Node_92 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_172;
Node_94 -> Node_95;
Node_95 -> Node_96[style=dashed];
Node_95 -> Node_172;
Node_96 -> Node_97;
Node_97 -> Node_99;
Node_97 -> Node_172[style=dashed];
Node_99 -> Node_100;
Node_100 -> Node_101[style=dashed];
Node_100 -> Node_102;
Node_101 -> Node_103;
Node_103 -> Node_104;
Node_104 -> Node_105[style=dashed];
Node_104 -> Node_106;
Node_105 -> Node_107;
Node_107 -> Node_108;
Node_108 -> Node_109[style=dashed];
Node_108 -> Node_112;
Node_109 -> Node_110;
Node_110 -> Node_111[style=dashed];
Node_110 -> Node_112;
Node_111 -> Node_113;
Node_113 -> Node_114[style=dashed];
Node_113 -> Node_117;
Node_114 -> Node_115;
Node_115 -> Node_116[style=dashed];
Node_115 -> Node_117;
Node_116 -> Node_118;
Node_118 -> Node_119[style=dashed];
Node_118 -> Node_129;
Node_119 -> Node_120;
Node_120 -> Node_121[style=dashed];
Node_120 -> Node_129;
Node_121 -> Node_122;
Node_122 -> Node_123[style=dashed];
Node_122 -> Node_129;
Node_123 -> Node_124[style=dashed];
Node_123 -> Node_129;
Node_124 -> Node_125;
Node_125 -> Node_126[style=dashed];
Node_125 -> Node_129;
Node_126 -> Node_127;
Node_127 -> Node_128[style=dashed];
Node_127 -> Node_129;
Node_128 -> Node_129;
Node_129 -> Node_130[style=dashed];
Node_129 -> Node_140;
Node_130 -> Node_131;
Node_131 -> Node_132[style=dashed];
Node_131 -> Node_140;
Node_132 -> Node_133;
Node_133 -> Node_134[style=dashed];
Node_133 -> Node_140;
Node_134 -> Node_135[style=dashed];
Node_134 -> Node_140;
Node_135 -> Node_136;
Node_136 -> Node_137[style=dashed];
Node_136 -> Node_140;
Node_137 -> Node_138;
Node_138 -> Node_139[style=dashed];
Node_138 -> Node_140;
Node_139 -> Node_140;
Node_140 -> Node_141;
Node_141 -> Node_142[style=dashed];
Node_141 -> Node_143;
Node_142 -> Node_143;
Node_143 -> Node_144;
Node_144 -> Node_145[style=dashed];
Node_144 -> Node_146;
Node_145 -> Node_146;
Node_146 -> Node_147;
Node_147 -> Node_148[style=dashed];
Node_147 -> Node_157;
Node_148 -> Node_149;
Node_149 -> Node_150[style=dashed];
Node_149 -> Node_151;
Node_150 -> Node_157;
Node_151 -> Node_152[style=dashed];
Node_151 -> Node_157;
Node_152 -> Node_153;
Node_153 -> Node_154[style=dashed];
Node_153 -> Node_155;
Node_154 -> Node_156;
Node_156 -> Node_157;
Node_155 -> Node_156;
Node_157 -> Node_158[style=dashed];
Node_157 -> Node_170;
Node_158 -> Node_159;
Node_159 -> Node_160[style=dashed];
Node_159 -> Node_161;
Node_160 -> Node_170;
Node_161 -> Node_162[style=dashed];
Node_161 -> Node_170;
Node_162 -> Node_163;
Node_163 -> Node_164[style=dashed];
Node_163 -> Node_165;
Node_164 -> Node_166;
Node_166 -> Node_167;
Node_167 -> Node_168[style=dashed];
Node_167 -> Node_169;
Node_168 -> Node_170;
Node_169 -> Node_170;
Node_165 -> Node_166;
Node_170 -> Node_171;
Node_171 -> Node_88;
Node_117 -> Node_118;
Node_112 -> Node_113;
Node_106 -> Node_107;
Node_102 -> Node_103;
Node_172 -> Node_173;
Node_173 -> Node_88;
}

