digraph "CFG forandroidx.constraintlayout.core.widgets.Guideline.setOrientation(I)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r4 I:androidx.constraintlayout.core.widgets.Guideline) androidx.constraintlayout.core.widgets.Guideline.mOrientation int  (LINE:86)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('orientation' int)])  \-\> B:19:0x0005 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|RETURN\l|0x0004: RETURN    (LINE:87)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|0x0005: IPUT  (r5 I:int A[D('orientation' int)]), (r4 I:androidx.constraintlayout.core.widgets.Guideline) androidx.constraintlayout.core.widgets.Guideline.mOrientation int  (LINE:89)\l0x0007: IGET  (r0 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.ConstraintAnchor\>) = (r4 I:androidx.constraintlayout.core.widgets.Guideline) androidx.constraintlayout.core.widgets.Guideline.mAnchors java.util.ArrayList  (LINE:90)\l0x0009: INVOKE  (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.clear():void A[MD:():void (c)]\l0x000c: IGET  (r0 I:int) = (r4 I:androidx.constraintlayout.core.widgets.Guideline) androidx.constraintlayout.core.widgets.Guideline.mOrientation int  (LINE:91)\l0x000e: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0016 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|0x0011: IGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r4 I:androidx.constraintlayout.core.widgets.Guideline) androidx.constraintlayout.core.widgets.Guideline.mLeft androidx.constraintlayout.core.widgets.ConstraintAnchor  (LINE:92)\l0x0013: IPUT  (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor), (r4 I:androidx.constraintlayout.core.widgets.Guideline) androidx.constraintlayout.core.widgets.Guideline.mAnchor androidx.constraintlayout.core.widgets.ConstraintAnchor \l}"];
Node_23 [shape=record,label="{23\:\ 0x001a|0x001a: IGET  (r0 I:java.util.ArrayList\<androidx.constraintlayout.core.widgets.ConstraintAnchor\>) = (r4 I:androidx.constraintlayout.core.widgets.Guideline) androidx.constraintlayout.core.widgets.Guideline.mAnchors java.util.ArrayList  (LINE:96)\l0x001c: IGET  (r1 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r4 I:androidx.constraintlayout.core.widgets.Guideline) androidx.constraintlayout.core.widgets.Guideline.mAnchor androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x001e: INVOKE  (r0 I:java.util.ArrayList), (r1 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0021: IGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor[]) = (r4 I:androidx.constraintlayout.core.widgets.Guideline) androidx.constraintlayout.core.widgets.Guideline.mListAnchors androidx.constraintlayout.core.widgets.ConstraintAnchor[]  (LINE:97)\l0x0023: ARRAY_LENGTH  (r0 I:int) = (r0 I:??[]) \l0x0024: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:98)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0025|LOOP_START\lLOOP:0: B:24:0x0025\-\>B:25:0x0027\l|0x0025: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:27:0x0030 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0027|LOOP_END\lLOOP:0: B:24:0x0025\-\>B:25:0x0027\l|0x0027: IGET  (r2 I:androidx.constraintlayout.core.widgets.ConstraintAnchor[]) = (r4 I:androidx.constraintlayout.core.widgets.Guideline) androidx.constraintlayout.core.widgets.Guideline.mListAnchors androidx.constraintlayout.core.widgets.ConstraintAnchor[]  (LINE:99)\l0x0029: IGET  (r3 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r4 I:androidx.constraintlayout.core.widgets.Guideline) androidx.constraintlayout.core.widgets.Guideline.mAnchor androidx.constraintlayout.core.widgets.ConstraintAnchor \l0x002b: APUT  (r2 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char] A[D('i' int)]), (r3 I:??[OBJECT, ARRAY]) \l0x002d: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:98)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0030|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0030|RETURN\l|0x0030: RETURN    (LINE:101)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|0x0016: IGET  (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor) = (r4 I:androidx.constraintlayout.core.widgets.Guideline) androidx.constraintlayout.core.widgets.Guideline.mTop androidx.constraintlayout.core.widgets.ConstraintAnchor  (LINE:94)\l0x0018: IPUT  (r0 I:androidx.constraintlayout.core.widgets.ConstraintAnchor), (r4 I:androidx.constraintlayout.core.widgets.Guideline) androidx.constraintlayout.core.widgets.Guideline.mAnchor androidx.constraintlayout.core.widgets.ConstraintAnchor \l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.core.widgets.Guideline.setOrientation((r4 'this' I:androidx.constraintlayout.core.widgets.Guideline A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x0027 \-\> B:24:0x0025, CROSS_EDGE: B:26:0x0030 \-\> B:15:?, CROSS_EDGE: B:22:0x0016 \-\> B:23:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0025\-0x0030: r1 'i' I\l  0x0024\-0x0030: r0 'count' I\l  \-1 \-0x0030: r5 'orientation' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_24;
Node_27 -> Node_26;
Node_26 -> Node_15;
Node_22 -> Node_23;
}

