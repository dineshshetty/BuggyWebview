digraph "CFG forandroidx.constraintlayout.core.ArrayLinkedVariables.remove(Landroidx\/constraintlayout\/core\/SolverVariable;Z)F" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r7.candidate != r8) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|r7.candidate = null\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007}"];
Node_6 [shape=record,label="{6\:\ 0x000b|if (r7.mHead != (\-1)) goto L8\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|RETURN\l|return 0.0f\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|int r0 = r7.mHead\lr3 = \-1\lr4 = 0\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|LOOP_START\lLOOP:0: B:9:0x0012\-\>B:25:0x0053\lPHI: r0 r3 r4 \l  PHI: (r0v3 'current' int) = (r0v2 'current' int), (r0v4 'current' int) binds: [B:8:0x000e, B:25:0x0053] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'previous' int) = (r3v0 'previous' int), (r3v2 'previous' int) binds: [B:8:0x000e, B:25:0x0053] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'counter' int) = (r4v0 'counter' int), (r4v2 'counter' int) binds: [B:8:0x000e, B:25:0x0053] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == (\-1)) goto L29\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014}"];
Node_11 [shape=record,label="{11\:\ 0x0016|if (r4 \>= r7.currentSize) goto L27\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|r5 = r7.mArrayIndices[r0]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|if (r5 != r8.f13id) goto L14\l}"];
Node_25 [shape=record,label="{25\:\ 0x0053|LOOP_END\lLOOP:0: B:9:0x0012\-\>B:25:0x0053\l|r3 = r0\lr0 = r7.mArrayNextIndices[r0]\lint r4 = r4 + 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x0020|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020}"];
Node_15 [shape=record,label="{15\:\ 0x0022|if (r0 != r7.mHead) goto L26\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024|r7.mHead = r7.mArrayNextIndices[r0]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0031|if (r9 == false) goto L21\l}"];
Node_19 [shape=record,label="{19\:\ 0x0033|r8.removeFromRow(r7.mRow)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0038|r8.usageInRowCount = r8.usageInRowCount + (\-1)\lr7.currentSize = r7.currentSize + (\-1)\lr7.mArrayIndices[r0] = \-1\l}"];
Node_21 [shape=record,label="{21\:\ 0x004a|if (r7.mDidFillOnce == false) goto L24\l}"];
Node_22 [shape=record,label="{22\:\ 0x004c|r7.mLast = r0\l}"];
Node_23 [shape=record,label="{23\:\ 0x004e}"];
Node_24 [shape=record,label="{24\:\ 0x0052|RETURN\l|return r7.mArrayValues[r0]\l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|int[] r1 = r7.mArrayNextIndices\lr1[r3] = r1[r0]\l}"];
Node_28 [shape=record,label="{28\:\ 0x005b|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x005b|RETURN\l|return 0.0f\l}"];
Node_27 [shape=record,label="{27\:\ 0x005b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final float androidx.constraintlayout.core.ArrayLinkedVariables.remove((r7v0 'this' androidx.constraintlayout.core.ArrayLinkedVariables A[IMMUTABLE_TYPE, THIS]), (r8v0 'variable' androidx.constraintlayout.core.SolverVariable A[D('variable' androidx.constraintlayout.core.SolverVariable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'removeFromDefinition' boolean A[D('removeFromDefinition' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0052 \-\> B:1:?, CROSS_EDGE: B:21:0x004a \-\> B:23:0x004e, CROSS_EDGE: B:18:0x0031 \-\> B:20:0x0038, CROSS_EDGE: B:17:0x002b \-\> B:18:0x0031, BACK_EDGE: B:25:0x0053 \-\> B:9:0x0012, CROSS_EDGE: B:26:0x005b \-\> B:1:?, CROSS_EDGE: B:9:0x0012 \-\> B:26:0x005b, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0007\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.ArrayRow.ArrayRowVariables.remove(androidx.constraintlayout.core.SolverVariable, boolean):float]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_27;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_28;
Node_12 -> Node_13;
Node_13 -> Node_25;
Node_13 -> Node_29[style=dashed];
Node_25 -> Node_9;
Node_29 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_1;
Node_17 -> Node_18;
Node_28 -> Node_26;
Node_26 -> Node_1;
Node_27 -> Node_26;
}

