digraph "CFG forandroidx.constraintlayout.core.ArrayLinkedVariables.getVariable(I)Landroidx\/constraintlayout\/core\/SolverVariable;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r4 I:androidx.constraintlayout.core.ArrayLinkedVariables) androidx.constraintlayout.core.ArrayLinkedVariables.mHead int  (LINE:558)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:559)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|LOOP_START\lLOOP:0: B:3:0x0003\-\>B:10:0x0017\l|0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:560)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('current' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: IGET  (r2 I:int) = (r4 I:androidx.constraintlayout.core.ArrayLinkedVariables) androidx.constraintlayout.core.ArrayLinkedVariables.currentSize int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: IF  (r1 I:??[int, byte, short, char] A[D('counter' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:14:0x001e \l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('counter' int)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)])  \-\> B:10:0x0017  (LINE:561)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|LOOP_END\lLOOP:0: B:3:0x0003\-\>B:10:0x0017\l|0x0017: IGET  (r2 I:int[]) = (r4 I:androidx.constraintlayout.core.ArrayLinkedVariables) androidx.constraintlayout.core.ArrayLinkedVariables.mArrayNextIndices int[]  (LINE:564)\l0x0019: AGET  (r0 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][]), (r0 I:??[int, short, byte, char] A[D('current' int)]) \l0x001b: ARITH  (r1 I:int) = (r1 I:int A[D('counter' int)]) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x000c|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x000c|0x000c: IGET  (r2 I:androidx.constraintlayout.core.Cache) = (r4 I:androidx.constraintlayout.core.ArrayLinkedVariables) androidx.constraintlayout.core.ArrayLinkedVariables.mCache androidx.constraintlayout.core.Cache  (LINE:562)\l0x000e: IGET  (r2 I:androidx.constraintlayout.core.SolverVariable[]) = (r2 I:androidx.constraintlayout.core.Cache) androidx.constraintlayout.core.Cache.mIndexedVariables androidx.constraintlayout.core.SolverVariable[] \l0x0010: IGET  (r3 I:int[]) = (r4 I:androidx.constraintlayout.core.ArrayLinkedVariables) androidx.constraintlayout.core.ArrayLinkedVariables.mArrayIndices int[] \l0x0012: AGET  (r3 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][]), (r0 I:??[int, short, byte, char] A[D('current' int)]) \l0x0014: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|RETURN\l|0x0016: RETURN  (r2 I:androidx.constraintlayout.core.SolverVariable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x001e|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|0x001e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:566)\l0x001f: RETURN  (r2 I:androidx.constraintlayout.core.SolverVariable) A[SYNTHETIC]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|RETURN\lORIG_RETURN\l|0x001e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:566)\l0x001f: RETURN  (r2 I:androidx.constraintlayout.core.SolverVariable) \l}"];
MethodNode[shape=record,label="{public androidx.constraintlayout.core.SolverVariable androidx.constraintlayout.core.ArrayLinkedVariables.getVariable((r4 'this' I:androidx.constraintlayout.core.ArrayLinkedVariables A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:10:0x0017 \-\> B:3:0x0003, CROSS_EDGE: B:12:0x001f \-\> B:1:?, CROSS_EDGE: B:4:0x0004 \-\> B:11:0x001e\lDebug Info:\l  0x0002\-0x001f: r0 'current' I\l  0x0003\-0x001f: r1 'counter' I\l  \-1 \-0x001f: r5 'index' I\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.ArrayRow.ArrayRowVariables.getVariable(int):androidx.constraintlayout.core.SolverVariable]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_10;
Node_7 -> Node_15[style=dashed];
Node_10 -> Node_3;
Node_15 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_14 -> Node_16;
Node_16 -> Node_1;
Node_13 -> Node_11;
Node_11 -> Node_1;
}

