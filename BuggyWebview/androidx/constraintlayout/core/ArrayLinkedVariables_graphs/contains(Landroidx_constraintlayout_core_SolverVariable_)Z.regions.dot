digraph "CFG forandroidx.constraintlayout.core.ArrayLinkedVariables.contains(Landroidx\/constraintlayout\/core\/SolverVariable;)Z" {
subgraph cluster_Region_1027516875 {
label = "R(1:(2:(1:3)|(3:5|(1:(2:(1:13)|(1:11)))|15)))";
node [shape=record,color=blue];
subgraph cluster_Region_1093250228 {
label = "R(2:(1:3)|(3:5|(1:(2:(1:13)|(1:11)))|15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1743750692 {
label = "IF [B:3:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r6.mHead == (\-1)) goto L3\l}"];
subgraph cluster_Region_1272367875 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1076675004 {
label = "R(3:5|(1:(2:(1:13)|(1:11)))|15)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0007|int int r0 = r6.mHead\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_2063845861 {
label = "LOOP:0: (1:(2:(1:13)|(1:11)))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000a|LOOP_START\lLOOP:0: B:6:0x000a\-\>B:13:0x001a\lPHI: r0 r3 \l  PHI: (r0v2 'current' int) = (r0v1 'current' int), (r0v3 'current' int) binds: [B:5:0x0007, B:13:0x001a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'counter' int) = (r3v0 'counter' int), (r3v2 'counter' int) binds: [B:5:0x0007, B:13:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != (\-1)) goto L7\l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|ADDED_TO_REGION\l|if (r3 \< r6.currentSize) goto L9\l}"];
subgraph cluster_Region_65950531 {
label = "R(1:(2:(1:13)|(1:11)))";
node [shape=record,color=blue];
subgraph cluster_Region_254673798 {
label = "R(2:(1:13)|(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1326710193 {
label = "IF [B:10:0x0016] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0016|if (r6.mArrayIndices[r0] == r7.f13id) goto L12\l}"];
subgraph cluster_Region_350976737 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0018|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_2105403869 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x001a|LOOP_END\lLOOP:0: B:6:0x000a\-\>B:13:0x001a\l|r0 = r6.mArrayNextIndices[r0]\lr3++\l}"];
}
}
}
}
Node_14 [shape=record,label="{14\:\ 0x0021|RETURN\l|return false\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000c}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0010}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0018|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0021|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0021|SYNTHETIC\lADDED_TO_REGION\l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.core.ArrayLinkedVariables.contains((r6v0 'this' androidx.constraintlayout.core.ArrayLinkedVariables A[IMMUTABLE_TYPE, THIS]), (r7v0 'variable' androidx.constraintlayout.core.SolverVariable A[D('variable' androidx.constraintlayout.core.SolverVariable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0019 \-\> B:1:?, BACK_EDGE: B:13:0x001a \-\> B:6:0x000a, CROSS_EDGE: B:14:0x0021 \-\> B:1:?, CROSS_EDGE: B:6:0x000a \-\> B:14:0x0021\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.ArrayRow.ArrayRowVariables.contains(androidx.constraintlayout.core.SolverVariable):boolean]\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_16[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_17[style=dashed];
Node_10 -> Node_13[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_1;
Node_13 -> Node_6;
Node_14 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_15 -> Node_11;
Node_17 -> Node_14;
Node_16 -> Node_14;
}

