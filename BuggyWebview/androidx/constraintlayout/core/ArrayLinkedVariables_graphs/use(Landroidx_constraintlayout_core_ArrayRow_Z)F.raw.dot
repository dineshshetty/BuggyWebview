digraph "CFG forandroidx.constraintlayout.core.ArrayLinkedVariables.use(Landroidx\/constraintlayout\/core\/ArrayRow;Z)F" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.constraintlayout.core.SolverVariable) = (r8 I:androidx.constraintlayout.core.ArrayRow A[D('definition' androidx.constraintlayout.core.ArrayRow)]) androidx.constraintlayout.core.ArrayRow.variable androidx.constraintlayout.core.SolverVariable  (LINE:349)\l0x0002: INVOKE  (r0 I:float) = (r7 I:androidx.constraintlayout.core.ArrayLinkedVariables), (r0 I:androidx.constraintlayout.core.SolverVariable) type: VIRTUAL call: androidx.constraintlayout.core.ArrayLinkedVariables.get(androidx.constraintlayout.core.SolverVariable):float A[MD:(androidx.constraintlayout.core.SolverVariable):float (m)]\l0x0006: IGET  (r1 I:androidx.constraintlayout.core.SolverVariable) = (r8 I:androidx.constraintlayout.core.ArrayRow A[D('definition' androidx.constraintlayout.core.ArrayRow)]) androidx.constraintlayout.core.ArrayRow.variable androidx.constraintlayout.core.SolverVariable  (LINE:350)\l0x0008: INVOKE  \l  (r7 I:androidx.constraintlayout.core.ArrayLinkedVariables)\l  (r1 I:androidx.constraintlayout.core.SolverVariable)\l  (r9 I:boolean A[D('removeFromDefinition' boolean)])\l type: VIRTUAL call: androidx.constraintlayout.core.ArrayLinkedVariables.remove(androidx.constraintlayout.core.SolverVariable, boolean):float A[MD:(androidx.constraintlayout.core.SolverVariable, boolean):float (m)]\l0x000b: IGET  (r1 I:androidx.constraintlayout.core.ArrayRow$ArrayRowVariables) = (r8 I:androidx.constraintlayout.core.ArrayRow A[D('definition' androidx.constraintlayout.core.ArrayRow)]) androidx.constraintlayout.core.ArrayRow.variables androidx.constraintlayout.core.ArrayRow$ArrayRowVariables  (LINE:351)\l0x000d: INVOKE  (r2 I:int) = \l  (r1 I:androidx.constraintlayout.core.ArrayRow$ArrayRowVariables A[D('definitionVariables' androidx.constraintlayout.core.ArrayRow$ArrayRowVariables)])\l type: INTERFACE call: androidx.constraintlayout.core.ArrayRow.ArrayRowVariables.getCurrentSize():int A[MD:():int (m)] (LINE:352)\l0x0011: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:353)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|LOOP_START\lLOOP:0: B:3:0x0012\-\>B:4:0x0014\l|0x0012: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char] A[D('definitionSize' int)])  \-\> B:6:0x0024 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|LOOP_END\lLOOP:0: B:3:0x0012\-\>B:4:0x0014\l|0x0014: INVOKE  (r4 I:androidx.constraintlayout.core.SolverVariable) = \l  (r1 I:androidx.constraintlayout.core.ArrayRow$ArrayRowVariables A[D('definitionVariables' androidx.constraintlayout.core.ArrayRow$ArrayRowVariables)])\l  (r3 I:int A[D('i' int)])\l type: INTERFACE call: androidx.constraintlayout.core.ArrayRow.ArrayRowVariables.getVariable(int):androidx.constraintlayout.core.SolverVariable A[MD:(int):androidx.constraintlayout.core.SolverVariable (m)] (LINE:354)\l0x0018: INVOKE  (r5 I:float) = \l  (r1 I:androidx.constraintlayout.core.ArrayRow$ArrayRowVariables A[D('definitionVariables' androidx.constraintlayout.core.ArrayRow$ArrayRowVariables)])\l  (r4 I:androidx.constraintlayout.core.SolverVariable A[D('definitionVariable' androidx.constraintlayout.core.SolverVariable)])\l type: INTERFACE call: androidx.constraintlayout.core.ArrayRow.ArrayRowVariables.get(androidx.constraintlayout.core.SolverVariable):float A[MD:(androidx.constraintlayout.core.SolverVariable):float (m)] (LINE:355)\l0x001c: ARITH  (r6 I:float) = (r5 I:float A[D('definitionValue' float)]) * (r0 I:float A[D('value' float)])  (LINE:356)\l0x001e: INVOKE  \l  (r7 I:androidx.constraintlayout.core.ArrayLinkedVariables)\l  (r4 I:androidx.constraintlayout.core.SolverVariable A[D('definitionVariable' androidx.constraintlayout.core.SolverVariable)])\l  (r6 I:float)\l  (r9 I:boolean A[D('removeFromDefinition' boolean)])\l type: VIRTUAL call: androidx.constraintlayout.core.ArrayLinkedVariables.add(androidx.constraintlayout.core.SolverVariable, float, boolean):void A[MD:(androidx.constraintlayout.core.SolverVariable, float, boolean):void (m)]\l0x0021: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:353)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|SYNTHETIC\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|RETURN\l|0x0024: RETURN  (r0 I:float A[D('value' float)])  (LINE:358)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public float androidx.constraintlayout.core.ArrayLinkedVariables.use((r7 'this' I:androidx.constraintlayout.core.ArrayLinkedVariables A[IMMUTABLE_TYPE, THIS]), (r8 I:androidx.constraintlayout.core.ArrayRow A[D('definition' androidx.constraintlayout.core.ArrayRow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('removeFromDefinition' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:4:0x0014 \-\> B:3:0x0012\lDebug Info:\l  0x0018\-0x0021: r4 'definitionVariable' Landroidx\/constraintlayout\/core\/SolverVariable;\l  0x001c\-0x0021: r5 'definitionValue' F\l  0x0012\-0x0024: r3 'i' I\l  0x0006\-0x0024: r0 'value' F\l  0x000d\-0x0024: r1 'definitionVariables' Landroidx\/constraintlayout\/core\/ArrayRow$ArrayRowVariables;\l  0x0011\-0x0024: r2 'definitionSize' I\l  \-1 \-0x0024: r8 'definition' Landroidx\/constraintlayout\/core\/ArrayRow;\l  \-1 \-0x0024: r9 'removeFromDefinition' Z\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.ArrayRow.ArrayRowVariables.use(androidx.constraintlayout.core.ArrayRow, boolean):float]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_3;
Node_6 -> Node_5;
Node_5 -> Node_1;
}

