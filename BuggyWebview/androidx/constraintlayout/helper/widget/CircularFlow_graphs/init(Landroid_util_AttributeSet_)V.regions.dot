digraph "CFG forandroidx.constraintlayout.helper.widget.CircularFlow.init(Landroid\/util\/AttributeSet;)V" {
subgraph cluster_Region_1193220819 {
label = "R(2:1|(1:(3:3|(3:5|(1:7)(1:(1:12)(1:(1:16)(1:(1:20)(1:(1:24)(0)))))|9)|28)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|super.init(r6)\l}"];
subgraph cluster_Region_1547312251 {
label = "R(1:(3:3|(3:5|(1:7)(1:(1:12)(1:(1:16)(1:(1:20)(1:(1:24)(0)))))|9)|28))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1631225175 {
label = "IF [B:3:0x0003] THEN: R(3:3|(3:5|(1:7)(1:(1:12)(1:(1:16)(1:(1:20)(1:(1:24)(0)))))|9)|28) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r6 != null) goto L3\l}"];
subgraph cluster_Region_389246551 {
label = "R(3:3|(3:5|(1:7)(1:(1:12)(1:(1:16)(1:(1:20)(1:(1:24)(0)))))|9)|28)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|android.content.res.TypedArray android.content.res.TypedArray r0 = getContext().obtainStyledAttributes(r6, androidx.constraintlayout.widget.C0169R.styleable.ConstraintLayout_Layout)\lint int r1 = r0.getIndexCount()\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1669792287 {
label = "LOOP:0: (3:5|(1:7)(1:(1:12)(1:(1:16)(1:(1:20)(1:(1:24)(0)))))|9)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|LOOP_START\lLOOP:0: B:5:0x0014\-\>B:21:0x0071\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v2 'i' int) binds: [B:4:0x0005, B:21:0x0071] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< r1) goto L5\l}"];
subgraph cluster_Region_305856822 {
label = "R(3:5|(1:7)(1:(1:12)(1:(1:16)(1:(1:20)(1:(1:24)(0)))))|9)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|int int r3 = r0.getIndex(r2)\l}"];
subgraph cluster_IfRegion_444811232 {
label = "IF [B:7:0x001c] THEN: R(1:7) ELSE: R(1:(1:12)(1:(1:16)(1:(1:20)(1:(1:24)(0)))))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001c|if (r3 == androidx.constraintlayout.widget.C0169R.styleable.ConstraintLayout_Layout_circularflow_viewCenter) goto L7\l}"];
subgraph cluster_Region_1832676947 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001e|r5.mViewCenter = r0.getResourceId(r3, 0)\l}"];
}
subgraph cluster_Region_1346821689 {
label = "R(1:(1:12)(1:(1:16)(1:(1:20)(1:(1:24)(0))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1842570191 {
label = "IF [B:10:0x0028] THEN: R(1:12) ELSE: R(1:(1:16)(1:(1:20)(1:(1:24)(0)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0028|if (r3 == androidx.constraintlayout.widget.C0169R.styleable.ConstraintLayout_Layout_circularflow_angles) goto L12\l}"];
subgraph cluster_Region_844459376 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002a|java.lang.String java.lang.String r4 = r0.getString(r3)\lr5.mReferenceAngles = r4\lsetAngles(r4)\l}"];
}
subgraph cluster_Region_1865453408 {
label = "R(1:(1:16)(1:(1:20)(1:(1:24)(0)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_301549261 {
label = "IF [B:13:0x0036] THEN: R(1:16) ELSE: R(1:(1:20)(1:(1:24)(0))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0036|if (r3 == androidx.constraintlayout.widget.C0169R.styleable.ConstraintLayout_Layout_circularflow_radiusInDP) goto L16\l}"];
subgraph cluster_Region_1041820859 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0038|java.lang.String java.lang.String r4 = r0.getString(r3)\lr5.mReferenceRadius = r4\lsetRadius(r4)\l}"];
}
subgraph cluster_Region_1667604281 {
label = "R(1:(1:20)(1:(1:24)(0))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1245002007 {
label = "IF [B:16:0x0044] THEN: R(1:20) ELSE: R(1:(1:24)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0044|if (r3 == androidx.constraintlayout.widget.C0169R.styleable.ConstraintLayout_Layout_circularflow_defaultAngle) goto L20\l}"];
subgraph cluster_Region_1952479487 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0046|java.lang.Float java.lang.Float r4 = java.lang.Float.valueOf(r0.getFloat(r3, androidx.constraintlayout.helper.widget.CircularFlow.DEFAULT_ANGLE))\lr5.mReferenceDefaultAngle = r4\lsetDefaultAngle(r4.floatValue())\l}"];
}
subgraph cluster_Region_1447079487 {
label = "R(1:(1:24)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1250548726 {
label = "IF [B:19:0x005c] THEN: R(1:24) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x005c|if (r3 == androidx.constraintlayout.widget.C0169R.styleable.ConstraintLayout_Layout_circularflow_defaultRadius) goto L24\l}"];
subgraph cluster_Region_2057363158 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x005e|java.lang.Integer java.lang.Integer r4 = java.lang.Integer.valueOf(r0.getDimensionPixelSize(r3, androidx.constraintlayout.helper.widget.CircularFlow.DEFAULT_RADIUS))\lr5.mReferenceDefaultRadius = r4\lsetDefaultRadius(r4.intValue())\l}"];
}
subgraph cluster_Region_806426072 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
}
}
}
}
Node_21 [shape=record,label="{21\:\ 0x0071|LOOP_END\lLOOP:0: B:5:0x0014\-\>B:21:0x0071\l|r2++\l}"];
}
}
Node_22 [shape=record,label="{22\:\ 0x0074|r0.recycle()\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0071|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0026}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0071|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0034}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0071|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0042}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0071|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x005a}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0071|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0071|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0074|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0077|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,color=red,label="{31\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.helper.widget.CircularFlow.init((r5v0 'this' androidx.constraintlayout.helper.widget.CircularFlow A[IMMUTABLE_TYPE, THIS]), (r6v0 'attrs' android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0071 \-\> B:5:0x0014, CROSS_EDGE: B:11:0x002a \-\> B:21:0x0071, CROSS_EDGE: B:14:0x0038 \-\> B:21:0x0071, CROSS_EDGE: B:17:0x0046 \-\> B:21:0x0071, CROSS_EDGE: B:20:0x005e \-\> B:21:0x0071, CROSS_EDGE: B:19:0x005c \-\> B:21:0x0071, CROSS_EDGE: B:3:0x0003 \-\> B:23:0x0077\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [attrs]\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l INFO: \l \-\> Access modifiers changed from: protected\}\lMETHOD_OVERRIDE: [androidx.constraintlayout.widget.ConstraintHelper.init(android.util.AttributeSet):void]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_31[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_24[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_26;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_27;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_28;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_29;
Node_19 -> Node_20;
Node_19 -> Node_30[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_5;
Node_22 -> Node_23;
Node_0 -> Node_2;
Node_26 -> Node_21;
Node_9 -> Node_10;
Node_27 -> Node_21;
Node_12 -> Node_13;
Node_28 -> Node_21;
Node_15 -> Node_16;
Node_29 -> Node_21;
Node_18 -> Node_19;
Node_25 -> Node_21;
Node_30 -> Node_21;
Node_24 -> Node_22;
Node_23 -> Node_1;
Node_31 -> Node_1;
}

