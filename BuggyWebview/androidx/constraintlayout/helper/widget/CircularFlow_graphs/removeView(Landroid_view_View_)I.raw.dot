digraph "CFG forandroidx.constraintlayout.helper.widget.CircularFlow.removeView(Landroid\/view\/View;)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r4 I:androidx.constraintlayout.widget.VirtualLayout), (r5 I:android.view.View A[D('view' android.view.View)]) type: SUPER call: androidx.constraintlayout.widget.VirtualLayout.removeView(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:337)\l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:338)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0008 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:int A[D('index' int)])  (LINE:339)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: NEW_INSTANCE  (r1 I:androidx.constraintlayout.widget.ConstraintSet) =  androidx.constraintlayout.widget.ConstraintSet  (LINE:341)\l0x000a: INVOKE  (r1 I:androidx.constraintlayout.widget.ConstraintSet) type: DIRECT call: androidx.constraintlayout.widget.ConstraintSet.\<init\>():void A[MD:():void (m)]\l0x000d: IGET  (r2 I:androidx.constraintlayout.widget.ConstraintLayout) = (r4 I:androidx.constraintlayout.helper.widget.CircularFlow) androidx.constraintlayout.helper.widget.CircularFlow.mContainer androidx.constraintlayout.widget.ConstraintLayout  (LINE:342)\l0x000f: INVOKE  \l  (r1 I:androidx.constraintlayout.widget.ConstraintSet A[D('c' androidx.constraintlayout.widget.ConstraintSet)])\l  (r2 I:androidx.constraintlayout.widget.ConstraintLayout)\l type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintSet.clone(androidx.constraintlayout.widget.ConstraintLayout):void A[MD:(androidx.constraintlayout.widget.ConstraintLayout):void (m)]\l0x0012: INVOKE  (r2 I:int) = (r5 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getId():int A[MD:():int (c)] (LINE:343)\l0x0016: CONST  (r3 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l0x0018: INVOKE  \l  (r1 I:androidx.constraintlayout.widget.ConstraintSet A[D('c' androidx.constraintlayout.widget.ConstraintSet)])\l  (r2 I:int)\l  (r3 I:int)\l type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintSet.clear(int, int):void A[MD:(int, int):void (m)]\l0x001b: IGET  (r2 I:androidx.constraintlayout.widget.ConstraintLayout) = (r4 I:androidx.constraintlayout.helper.widget.CircularFlow) androidx.constraintlayout.helper.widget.CircularFlow.mContainer androidx.constraintlayout.widget.ConstraintLayout  (LINE:344)\l0x001d: INVOKE  \l  (r1 I:androidx.constraintlayout.widget.ConstraintSet A[D('c' androidx.constraintlayout.widget.ConstraintSet)])\l  (r2 I:androidx.constraintlayout.widget.ConstraintLayout)\l type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintSet.applyTo(androidx.constraintlayout.widget.ConstraintLayout):void A[MD:(androidx.constraintlayout.widget.ConstraintLayout):void (m)]\l0x0020: IGET  (r2 I:float[]) = (r4 I:androidx.constraintlayout.helper.widget.CircularFlow) androidx.constraintlayout.helper.widget.CircularFlow.mAngles float[]  (LINE:346)\l0x0022: ARRAY_LENGTH  (r3 I:int) = (r2 I:??[]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: IF  (r0 I:??[int, byte, short, char] A[D('index' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:8:0x0031 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: INVOKE  (r2 I:float[]) = (r4 I:androidx.constraintlayout.helper.widget.CircularFlow), (r2 I:float[]), (r0 I:int A[D('index' int)]) type: DIRECT call: androidx.constraintlayout.helper.widget.CircularFlow.removeAngle(float[], int):float[] A[MD:(float[], int):float[] (m)] (LINE:347)\l0x0029: IPUT  (r2 I:float[]), (r4 I:androidx.constraintlayout.helper.widget.CircularFlow) androidx.constraintlayout.helper.widget.CircularFlow.mAngles float[] \l0x002b: IGET  (r2 I:int) = (r4 I:androidx.constraintlayout.helper.widget.CircularFlow) androidx.constraintlayout.helper.widget.CircularFlow.mCountAngle int  (LINE:348)\l0x002d: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l0x002f: IPUT  (r2 I:int), (r4 I:androidx.constraintlayout.helper.widget.CircularFlow) androidx.constraintlayout.helper.widget.CircularFlow.mCountAngle int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: IGET  (r2 I:int[]) = (r4 I:androidx.constraintlayout.helper.widget.CircularFlow) androidx.constraintlayout.helper.widget.CircularFlow.mRadius int[]  (LINE:350)\l0x0033: ARRAY_LENGTH  (r3 I:int) = (r2 I:??[]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: IF  (r0 I:??[int, byte, short, char] A[D('index' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:11:0x0042 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: INVOKE  (r2 I:int[]) = (r4 I:androidx.constraintlayout.helper.widget.CircularFlow), (r2 I:int[]), (r0 I:int A[D('index' int)]) type: DIRECT call: androidx.constraintlayout.helper.widget.CircularFlow.removeRadius(int[], int):int[] A[MD:(int[], int):int[] (m)] (LINE:351)\l0x003a: IPUT  (r2 I:int[]), (r4 I:androidx.constraintlayout.helper.widget.CircularFlow) androidx.constraintlayout.helper.widget.CircularFlow.mRadius int[] \l0x003c: IGET  (r2 I:int) = (r4 I:androidx.constraintlayout.helper.widget.CircularFlow) androidx.constraintlayout.helper.widget.CircularFlow.mCountRadius int  (LINE:352)\l0x003e: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l0x0040: IPUT  (r2 I:int), (r4 I:androidx.constraintlayout.helper.widget.CircularFlow) androidx.constraintlayout.helper.widget.CircularFlow.mCountRadius int \l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|0x0042: INVOKE  (r4 I:androidx.constraintlayout.helper.widget.CircularFlow) type: DIRECT call: androidx.constraintlayout.helper.widget.CircularFlow.anchorReferences():void A[MD:():void (m)] (LINE:354)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0045|RETURN\l|0x0045: RETURN  (r0 I:int A[D('index' int)])  (LINE:355)\l}"];
MethodNode[shape=record,label="{public int androidx.constraintlayout.helper.widget.CircularFlow.removeView((r4 'this' I:androidx.constraintlayout.helper.widget.CircularFlow A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0045 \-\> B:1:?, CROSS_EDGE: B:9:0x0034 \-\> B:11:0x0042, CROSS_EDGE: B:6:0x0023 \-\> B:8:0x0031\lDebug Info:\l  0x0004\-0x0045: r0 'index' I\l  0x000d\-0x0045: r1 'c' Landroidx\/constraintlayout\/widget\/ConstraintSet;\l  \-1 \-0x0045: r5 'view' Landroid\/view\/View;\lMETHOD_PARAMETERS: [view]\lMETHOD_OVERRIDE: [androidx.constraintlayout.widget.ConstraintHelper.removeView(android.view.View):int]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
}

