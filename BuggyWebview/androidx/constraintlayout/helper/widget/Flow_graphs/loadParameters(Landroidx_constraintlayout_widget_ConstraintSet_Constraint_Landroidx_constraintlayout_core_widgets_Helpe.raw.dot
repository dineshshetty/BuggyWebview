digraph "CFG forandroidx.constraintlayout.helper.widget.Flow.loadParameters(Landroidx\/constraintlayout\/widget\/ConstraintSet$Constraint;Landroidx\/constraintlayout\/core\/widgets\/HelperWidget;Landroidx\/constraintlayout\/widget\/ConstraintLayout$LayoutParams;Landroid\/util\/SparseArray;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  \l  (r3 I:androidx.constraintlayout.widget.VirtualLayout)\l  (r4 I:androidx.constraintlayout.widget.ConstraintSet$Constraint A[D('constraint' androidx.constraintlayout.widget.ConstraintSet$Constraint)])\l  (r5 I:androidx.constraintlayout.core.widgets.HelperWidget A[D('child' androidx.constraintlayout.core.widgets.HelperWidget)])\l  (r6 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams A[D('layoutParams' androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)])\l  (r7 I:android.util.SparseArray A[D('mapIdToWidget' android.util.SparseArray\<androidx.constraintlayout.core.widgets.ConstraintWidget\>)])\l type: SUPER call: androidx.constraintlayout.widget.VirtualLayout.loadParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint, androidx.constraintlayout.core.widgets.HelperWidget, androidx.constraintlayout.widget.ConstraintLayout$LayoutParams, android.util.SparseArray):void A[MD:(androidx.constraintlayout.widget.ConstraintSet$Constraint, androidx.constraintlayout.core.widgets.HelperWidget, androidx.constraintlayout.widget.ConstraintLayout$LayoutParams, android.util.SparseArray\<androidx.constraintlayout.core.widgets.ConstraintWidget\>):void (m)] (LINE:182)\l0x0003: INSTANCE_OF  (r0 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('child' androidx.constraintlayout.core.widgets.HelperWidget)]) androidx.constraintlayout.core.widgets.Flow  (LINE:183)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('child' androidx.constraintlayout.core.widgets.HelperWidget)])  (LINE:184)\l0x0008: CHECK_CAST (r0 I:androidx.constraintlayout.core.widgets.Flow) = (androidx.constraintlayout.core.widgets.Flow) (r0 I:??[OBJECT, ARRAY]) \l0x000a: IGET  (r1 I:int) = \l  (r6 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams A[D('layoutParams' androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)])\l androidx.constraintlayout.widget.ConstraintLayout.LayoutParams.orientation int  (LINE:185)\l0x000c: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:? \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IGET  (r1 I:int) = \l  (r6 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams A[D('layoutParams' androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)])\l androidx.constraintlayout.widget.ConstraintLayout.LayoutParams.orientation int  (LINE:186)\l0x0011: INVOKE  (r0 I:androidx.constraintlayout.core.widgets.Flow A[D('flow' androidx.constraintlayout.core.widgets.Flow)]), (r1 I:int) type: VIRTUAL call: androidx.constraintlayout.core.widgets.Flow.setOrientation(int):void A[MD:(int):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|RETURN\lORIG_RETURN\l|0x0014: RETURN    (LINE:189)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|0x0014: RETURN   A[SYNTHETIC] (LINE:189)\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|0x0014: RETURN   A[SYNTHETIC] (LINE:189)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.helper.widget.Flow.loadParameters((r3 'this' I:androidx.constraintlayout.helper.widget.Flow A[IMMUTABLE_TYPE, THIS]), (r4 I:androidx.constraintlayout.widget.ConstraintSet$Constraint A[D('constraint' androidx.constraintlayout.widget.ConstraintSet$Constraint), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:androidx.constraintlayout.core.widgets.HelperWidget A[D('child' androidx.constraintlayout.core.widgets.HelperWidget), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams A[D('layoutParams' androidx.constraintlayout.widget.ConstraintLayout$LayoutParams), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.util.SparseArray\<androidx.constraintlayout.core.widgets.ConstraintWidget\> A[D('mapIdToWidget' android.util.SparseArray\<androidx.constraintlayout.core.widgets.ConstraintWidget\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000d \-\> B:7:0x0014, CROSS_EDGE: B:3:0x0005 \-\> B:7:0x0014\lDebug Info:\l  0x000a\-0x0014: r0 'flow' Landroidx\/constraintlayout\/core\/widgets\/Flow;\l  \-1 \-0x0014: r4 'constraint' Landroidx\/constraintlayout\/widget\/ConstraintSet$Constraint;\l  \-1 \-0x0014: r5 'child' Landroidx\/constraintlayout\/core\/widgets\/HelperWidget;\l  \-1 \-0x0014: r6 'layoutParams' Landroidx\/constraintlayout\/widget\/ConstraintLayout$LayoutParams;\l  0x0000\-0x0014: r7 'mapIdToWidget' Landroid\/util\/SparseArray;, signature: Landroid\/util\/SparseArray\<Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\>;\lMETHOD_PARAMETERS: [constraint, child, layoutParams, mapIdToWidget]\lSIGNATURE: (Landroidx\/constraintlayout\/widget\/ConstraintSet$Constraint;Landroidx\/constraintlayout\/core\/widgets\/HelperWidget;Landroidx\/constraintlayout\/widget\/ConstraintLayout$LayoutParams;Landroid\/util\/SparseArray\<Landroidx\/constraintlayout\/core\/widgets\/ConstraintWidget;\>;)V\lMETHOD_OVERRIDE: [androidx.constraintlayout.widget.ConstraintHelper.loadParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint, androidx.constraintlayout.core.widgets.HelperWidget, androidx.constraintlayout.widget.ConstraintLayout$LayoutParams, android.util.SparseArray\<androidx.constraintlayout.core.widgets.ConstraintWidget\>):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_9 -> Node_1;
Node_8 -> Node_1;
}

