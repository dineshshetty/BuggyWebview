digraph "CFG forandroidx.constraintlayout.helper.widget.Layer.onAttachedToWindow()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|super.onAttachedToWindow()\lr7.mContainer = (androidx.constraintlayout.widget.ConstraintLayout) getParent()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if (r7.mApplyVisibilityOnAttach != false) goto L7\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f}"];
Node_5 [shape=record,label="{5\:\ 0x0011|if (r7.mApplyElevationOnAttach == false) goto L5\l}"];
Node_25 [shape=record,label="{25\:\ 0x0052|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|int r0 = getVisibility()\lr1 = 0.0f\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|if (android.os.Build.VERSION.SDK_INT \< 21) goto L10\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|float r1 = getElevation()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|PHI: r1 \l  PHI: (r1v1 'elevation' float) = (r1v0 'elevation' float), (r1v2 'elevation' float) binds: [B:7:0x001c, B:8:0x001e] A[DONT_GENERATE, DONT_INLINE]\l|r2 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|LOOP_START\lLOOP:0: B:10:0x0023\-\>B:24:0x004f\lPHI: r2 \l  PHI: (r2v2 'i' int) = (r2v1 'i' int), (r2v3 'i' int) binds: [B:9:0x0022, B:24:0x004f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|if (r2 \>= r7.mCount) goto L31\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|r4 = r7.mIds[r2]\landroid.view.View r5 = r7.mContainer.getViewById(r4)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|if (r5 == null) goto L30\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033}"];
Node_15 [shape=record,label="{15\:\ 0x0035|if (r7.mApplyVisibilityOnAttach == false) goto L18\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|r5.setVisibility(r0)\l}"];
Node_17 [shape=record,label="{17\:\ 0x003a}"];
Node_18 [shape=record,label="{18\:\ 0x003c|if (r7.mApplyElevationOnAttach == false) goto L29\l}"];
Node_19 [shape=record,label="{19\:\ 0x003e}"];
Node_20 [shape=record,label="{20\:\ 0x0041|if ((r1 \> 0.0f ? 1 : (r1 == 0.0f ? 0 : \-1)) \<= 0) goto L28\l}"];
Node_21 [shape=record,label="{21\:\ 0x0043}"];
Node_22 [shape=record,label="{22\:\ 0x0045|if (android.os.Build.VERSION.SDK_INT \< 21) goto L27\l}"];
Node_23 [shape=record,label="{23\:\ 0x0047|r5.setTranslationZ(r5.getTranslationZ() + r1)\l}"];
Node_27 [shape=record,label="{27\:\ 0x004f|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x004f|LOOP_END\lLOOP:0: B:10:0x0023\-\>B:24:0x004f\l|int r2 = r2 + 1\l}"];
Node_31 [shape=record,label="{31\:\ 0x004f|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x004f|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x004f|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x004f|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0052|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void androidx.constraintlayout.helper.widget.Layer.onAttachedToWindow((r7v0 'this' androidx.constraintlayout.helper.widget.Layer A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:24:0x004f \-\> B:10:0x0023, CROSS_EDGE: B:22:0x0045 \-\> B:24:0x004f, CROSS_EDGE: B:20:0x0041 \-\> B:24:0x004f, CROSS_EDGE: B:18:0x003c \-\> B:24:0x004f, CROSS_EDGE: B:15:0x0035 \-\> B:17:0x003a, CROSS_EDGE: B:13:0x0031 \-\> B:24:0x004f, CROSS_EDGE: B:7:0x001c \-\> B:9:0x0022, CROSS_EDGE: B:5:0x0011 \-\> B:25:0x0052, CROSS_EDGE: B:3:0x000d \-\> B:6:0x0013\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onAttachedToWindow():void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_25;
Node_25 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_26;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_28;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_29;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_30;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_31;
Node_23 -> Node_27;
Node_27 -> Node_24;
Node_24 -> Node_10;
Node_31 -> Node_24;
Node_30 -> Node_24;
Node_29 -> Node_24;
Node_28 -> Node_24;
Node_26 -> Node_32;
Node_32 -> Node_1;
}

