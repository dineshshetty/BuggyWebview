digraph "CFG forandroidx.constraintlayout.helper.widget.Layer.calcCenters()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r8.mContainer != null) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0005}"];
Node_6 [shape=record,label="{6\:\ 0x0007|if (r8.mNeedBounds != false) goto L12\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009}"];
Node_8 [shape=record,label="{8\:\ 0x000f|if (java.lang.Float.isNaN(r8.mComputedCenterX) != false) goto L12\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011}"];
Node_10 [shape=record,label="{10\:\ 0x0017|if (java.lang.Float.isNaN(r8.mComputedCenterY) != false) goto L12\l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ 0x001a}"];
Node_13 [shape=record,label="{13\:\ 0x0020|if (java.lang.Float.isNaN(r8.mRotationCenterX) != false) goto L18\l}"];
Node_14 [shape=record,label="{14\:\ 0x0022}"];
Node_15 [shape=record,label="{15\:\ 0x0028|if (java.lang.Float.isNaN(r8.mRotationCenterY) == false) goto L16\l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|r8.mComputedCenterY = r8.mRotationCenterY\lr8.mComputedCenterX = r8.mRotationCenterX\l}"];
Node_31 [shape=record,label="{31\:\ 0x00b3|RETURN\lORIG_RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ 0x0035|android.view.View[] r0 = getViews(r8.mContainer)\lint r2 = r0[0].getLeft()\lint r3 = r0[0].getTop()\lint r4 = r0[0].getRight()\lint r1 = r0[0].getBottom()\lr5 = 0\l}"];
Node_19 [shape=record,label="{19\:\ 0x0055|LOOP_START\lLOOP:0: B:19:0x0055\-\>B:21:0x0059\lPHI: r1 r2 r3 r4 r5 \l  PHI: (r1v3 'maxy' int) = (r1v2 'maxy' int), (r1v4 'maxy' int) binds: [B:18:0x0035, B:21:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 'minx' int) = (r2v1 'minx' int), (r2v3 'minx' int) binds: [B:18:0x0035, B:21:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 'miny' int) = (r3v1 'miny' int), (r3v3 'miny' int) binds: [B:18:0x0035, B:21:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 'maxx' int) = (r4v1 'maxx' int), (r4v3 'maxx' int) binds: [B:18:0x0035, B:21:0x0059] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'i' int) = (r5v0 'i' int), (r5v18 'i' int) binds: [B:18:0x0035, B:21:0x0059] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|if (r5 \>= r8.mCount) goto L22\l}"];
Node_21 [shape=record,label="{21\:\ 0x0059|LOOP_END\lLOOP:0: B:19:0x0055\-\>B:21:0x0059\l|r6 = r0[r5]\lint r2 = java.lang.Math.min(r2, r6.getLeft())\lint r3 = java.lang.Math.min(r3, r6.getTop())\lint r4 = java.lang.Math.max(r4, r6.getRight())\lint r1 = java.lang.Math.max(r1, r6.getBottom())\lint r5 = r5 + 1\l}"];
Node_32 [shape=record,label="{32\:\ 0x007e|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x007e|r8.mComputedMaxX = (float) r4\lr8.mComputedMaxY = (float) r1\lr8.mComputedMinX = (float) r2\lr8.mComputedMinY = (float) r3\l}"];
Node_23 [shape=record,label="{23\:\ 0x0090|if (java.lang.Float.isNaN(r8.mRotationCenterX) == false) goto L32\l}"];
Node_24 [shape=record,label="{24\:\ 0x0092|r8.mComputedCenterX = (float) ((r2 + r4) \/ 2)\l}"];
Node_26 [shape=record,label="{26\:\ 0x009e}"];
Node_27 [shape=record,label="{27\:\ 0x00a4|if (java.lang.Float.isNaN(r8.mRotationCenterY) == false) goto L30\l}"];
Node_28 [shape=record,label="{28\:\ 0x00a6|r8.mComputedCenterY = (float) ((r3 + r1) \/ 2)\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ 0x00ae|r8.mComputedCenterY = r8.mRotationCenterY\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ 0x009a|r8.mComputedCenterX = r8.mRotationCenterX\l}"];
MethodNode[shape=record,label="{protected void androidx.constraintlayout.helper.widget.Layer.calcCenters((r8v0 'this' androidx.constraintlayout.helper.widget.Layer A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0019 \-\> B:1:?, CROSS_EDGE: B:31:0x00b3 \-\> B:1:?, BACK_EDGE: B:21:0x0059 \-\> B:19:0x0055, CROSS_EDGE: B:28:0x00a6 \-\> B:31:0x00b3, CROSS_EDGE: B:29:0x00ae \-\> B:31:0x00b3, CROSS_EDGE: B:25:0x009a \-\> B:26:0x009e, CROSS_EDGE: B:13:0x0020 \-\> B:18:0x0035, CROSS_EDGE: B:8:0x000f \-\> B:12:0x001a, CROSS_EDGE: B:6:0x0007 \-\> B:12:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_31;
Node_31 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_32;
Node_21 -> Node_19;
Node_32 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_34;
Node_34 -> Node_1;
Node_29 -> Node_33;
Node_33 -> Node_1;
Node_25 -> Node_26;
}

