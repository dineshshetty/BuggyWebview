digraph "CFG forandroidx.constraintlayout.motion.widget.DesignTool.SetDimensions(ILandroidx\/constraintlayout\/widget\/ConstraintSet;Landroid\/view\/View;Ljava\/util\/HashMap;I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"layout_width\"  (LINE:162)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:163)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0007 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: CONST_STR  (r0 I:java.lang.String A[D('dimension' java.lang.String)]) =  \"layout_height\"  (LINE:164)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: INVOKE  (r1 I:java.lang.Object) = \l  (r7 I:java.util.HashMap A[D('attributes' java.util.HashMap\<java.lang.String, java.lang.String\>)])\l  (r0 I:java.lang.Object A[D('dimension' java.lang.String)])\l type: VIRTUAL call: java.util.HashMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:166)\l0x000b: CHECK_CAST (r1 I:java.lang.String) = (java.lang.String) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('dimensionValue' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:?  (LINE:167)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2 ??[int, float, short, byte, char])  (LINE:168)\l0x0010: CONST_STR  (r3 I:java.lang.String) =  \"wrap_content\"  (LINE:169)\l0x0012: INVOKE  (r3 I:boolean) = (r1 I:java.lang.String A[D('dimensionValue' java.lang.String)]), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.String.equalsIgnoreCase(java.lang.String):boolean A[MD:(java.lang.String):boolean (c)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: INVOKE  (r2 I:int A[D('value' int)]) = (r4 I:int A[D('dpi' int)]), (r1 I:java.lang.String A[D('dimensionValue' java.lang.String)]) type: STATIC call: androidx.constraintlayout.motion.widget.DesignTool.GetPxFromDp(int, java.lang.String):int A[MD:(int, java.lang.String):int (m)] (LINE:170)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0026  (LINE:172)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: INVOKE  (r3 I:int) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getId():int A[MD:():int (c)] (LINE:173)\l0x0022: INVOKE  \l  (r5 I:androidx.constraintlayout.widget.ConstraintSet A[D('set' androidx.constraintlayout.widget.ConstraintSet)])\l  (r3 I:int)\l  (r2 I:int A[D('value' int)])\l type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintSet.constrainWidth(int, int):void A[MD:(int, int):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x002d: RETURN   A[SYNTHETIC] (LINE:178)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|0x0026: INVOKE  (r3 I:int) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getId():int A[MD:():int (c)] (LINE:175)\l0x002a: INVOKE  \l  (r5 I:androidx.constraintlayout.widget.ConstraintSet A[D('set' androidx.constraintlayout.widget.ConstraintSet)])\l  (r3 I:int)\l  (r2 I:int A[D('value' int)])\l type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintSet.constrainHeight(int, int):void A[MD:(int, int):void (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|RETURN\lORIG_RETURN\l|0x002d: RETURN    (LINE:178)\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|0x002d: RETURN   A[SYNTHETIC] (LINE:178)\l}"];
MethodNode[shape=record,label="{private static void androidx.constraintlayout.motion.widget.DesignTool.SetDimensions((r4 I:int A[D('dpi' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:androidx.constraintlayout.widget.ConstraintSet A[D('set' androidx.constraintlayout.widget.ConstraintSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.HashMap\<java.lang.String, java.lang.String\> A[D('attributes' java.util.HashMap\<java.lang.String, java.lang.String\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0026 \-\> B:13:0x002d, CROSS_EDGE: B:8:0x0016 \-\> B:10:0x001c, CROSS_EDGE: B:6:0x000d \-\> B:13:0x002d, CROSS_EDGE: B:3:0x0003 \-\> B:5:0x0007\lDebug Info:\l  0x0010\-0x002d: r2 'value' I\l  0x0002\-0x002d: r0 'dimension' Ljava\/lang\/String;\l  0x000d\-0x002d: r1 'dimensionValue' Ljava\/lang\/String;\l  \-1 \-0x002d: r4 'dpi' I\l  \-1 \-0x002d: r5 'set' Landroidx\/constraintlayout\/widget\/ConstraintSet;\l  \-1 \-0x002d: r6 'view' Landroid\/view\/View;\l  0x0000\-0x002d: r7 'attributes' Ljava\/util\/HashMap;, signature: Ljava\/util\/HashMap\<Ljava\/lang\/String;Ljava\/lang\/String;\>;\l  \-1 \-0x002d: r8 'type' I\lMETHOD_PARAMETERS: [dpi, set, view, attributes, type]\lSIGNATURE: (ILandroidx\/constraintlayout\/widget\/ConstraintSet;Landroid\/view\/View;Ljava\/util\/HashMap\<Ljava\/lang\/String;Ljava\/lang\/String;\>;I)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_15;
Node_15 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_14 -> Node_1;
}

