digraph "CFG forandroidx.constraintlayout.motion.widget.DesignTool.getAnimationPath(Ljava\/lang\/Object;[FI)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.constraintlayout.motion.widget.MotionLayout) = (r2 I:androidx.constraintlayout.motion.widget.DesignTool) androidx.constraintlayout.motion.widget.DesignTool.mMotionLayout androidx.constraintlayout.motion.widget.MotionLayout  (LINE:199)\l0x0002: IGET  (r0 I:androidx.constraintlayout.motion.widget.MotionScene) = (r0 I:androidx.constraintlayout.motion.widget.MotionLayout) androidx.constraintlayout.motion.widget.MotionLayout.mScene androidx.constraintlayout.motion.widget.MotionScene \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0008 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|0x0006: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:200)\l0x0007: RETURN  (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: IGET  (r0 I:androidx.constraintlayout.motion.widget.MotionLayout) = (r2 I:androidx.constraintlayout.motion.widget.DesignTool) androidx.constraintlayout.motion.widget.DesignTool.mMotionLayout androidx.constraintlayout.motion.widget.MotionLayout  (LINE:203)\l0x000a: IGET  (r0 I:java.util.HashMap\<android.view.View, androidx.constraintlayout.motion.widget.MotionController\>) = (r0 I:androidx.constraintlayout.motion.widget.MotionLayout) androidx.constraintlayout.motion.widget.MotionLayout.mFrameArrayList java.util.HashMap \l0x000c: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.HashMap), (r3 I:java.lang.Object A[D('view' java.lang.Object)]) type: VIRTUAL call: java.util.HashMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0010: CHECK_CAST (r0 I:androidx.constraintlayout.motion.widget.MotionController) = (androidx.constraintlayout.motion.widget.MotionController) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('motionController' androidx.constraintlayout.motion.widget.MotionController)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0016  (LINE:204)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|RETURN\l|0x0014: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:205)\l0x0015: RETURN  (r1 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|0x0016: INVOKE  \l  (r0 I:androidx.constraintlayout.motion.widget.MotionController A[D('motionController' androidx.constraintlayout.motion.widget.MotionController)])\l  (r4 I:float[] A[D('path' float[])])\l  (r5 I:int A[D('len' int)])\l type: VIRTUAL call: androidx.constraintlayout.motion.widget.MotionController.buildPath(float[], int):void A[MD:(float[], int):void (m)] (LINE:208)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|RETURN\l|0x0019: RETURN  (r5 I:int A[D('len' int)])  (LINE:209)\l}"];
MethodNode[shape=record,label="{public int androidx.constraintlayout.motion.widget.DesignTool.getAnimationPath((r2 'this' I:androidx.constraintlayout.motion.widget.DesignTool A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[D('view' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:float[] A[D('path' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('len' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0015 \-\> B:1:?, CROSS_EDGE: B:11:0x0019 \-\> B:1:?\lDebug Info:\l  0x0012\-0x0019: r0 'motionController' Landroidx\/constraintlayout\/motion\/widget\/MotionController;\l  \-1 \-0x0019: r3 'view' Ljava\/lang\/Object;\l  \-1 \-0x0019: r4 'path' [F\l  \-1 \-0x0019: r5 'len' I\lMETHOD_PARAMETERS: [view, path, len]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_1;
}

