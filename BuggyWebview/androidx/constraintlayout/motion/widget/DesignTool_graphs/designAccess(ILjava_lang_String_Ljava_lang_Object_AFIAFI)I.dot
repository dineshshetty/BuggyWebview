digraph "CFG forandroidx.constraintlayout.motion.widget.DesignTool.designAccess(ILjava\/lang\/String;Ljava\/lang\/Object;[FI[FI)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|android.view.View r0 = (android.view.View) r8\lr1 = null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r6 == 0) goto L12\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007}"];
Node_5 [shape=record,label="{5\:\ 0x000b|if (r5.mMotionLayout.mScene != null) goto L7\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|RETURN\l|return \-1\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|if (r0 == null) goto L11\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|java.lang.Object r3 = r5.mMotionLayout.mFrameArrayList.get(r0)\landroidx.constraintlayout.motion.widget.MotionController r1 = r3\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|if (r1 != null) goto L12\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|RETURN\l|return \-1\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|RETURN\l|return \-1\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|PHI: r1 \l  PHI: (r1v1 'motionController' androidx.constraintlayout.motion.widget.MotionController) = (r1v0 'motionController' androidx.constraintlayout.motion.widget.MotionController), (r1v3 'motionController' androidx.constraintlayout.motion.widget.MotionController) binds: [B:3:0x0005, B:9:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|switch(r6) \{\l    case 0: goto L20;\l    case 1: goto L18;\l    case 2: goto L16;\l    case 3: goto L14;\l    default: goto L13;\l\}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|RETURN\l|return \-1\l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|int r2 = r5.mMotionLayout.mScene.getDuration()\lint r3 = r2 \/ 16\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|RETURN\l|return r1.getAttributeValues(r7, r11, r12)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|int r2 = r5.mMotionLayout.mScene.getDuration()\lint r3 = r2 \/ 16\lr1.buildKeyFrames(r11, null)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0040|RETURN\l|return r3\l}"];
Node_18 [shape=record,label="{18\:\ 0x0041|int r2 = r5.mMotionLayout.mScene.getDuration()\lint r3 = r2 \/ 16\lr1.buildPath(r11, r3)\l}"];
Node_19 [shape=record,label="{19\:\ 0x004e|RETURN\l|return r3\l}"];
Node_20 [shape=record,label="{20\:\ 0x004f|RETURN\l|return 1\l}"];
MethodNode[shape=record,label="{public int androidx.constraintlayout.motion.widget.DesignTool.designAccess((r5v0 'this' androidx.constraintlayout.motion.widget.DesignTool A[IMMUTABLE_TYPE, THIS]), (r6v0 'cmd' int A[D('cmd' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'type' java.lang.String A[D('type' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'viewObject' java.lang.Object A[D('viewObject' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'in' float[] A[D('in' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'inLength' int A[D('inLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'out' float[] A[D('out' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'outLength' int A[D('outLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x001d \-\> B:1:?, CROSS_EDGE: B:13:0x0022 \-\> B:1:?, CROSS_EDGE: B:15:0x0031 \-\> B:1:?, CROSS_EDGE: B:17:0x0040 \-\> B:1:?, CROSS_EDGE: B:19:0x004e \-\> B:1:?, CROSS_EDGE: B:21:0x0050 \-\> B:1:?, CROSS_EDGE: B:11:0x001e \-\> B:1:?, CROSS_EDGE: B:3:0x0005 \-\> B:12:0x001f\lMETHOD_PARAMETERS: [cmd, type, viewObject, in, inLength, out, outLength]\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.motion.widget.ProxyInterface.designAccess(int, java.lang.String, java.lang.Object, float[], int, float[], int):int]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_1;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_1;
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_12 -> Node_14;
Node_12 -> Node_16;
Node_12 -> Node_18;
Node_12 -> Node_20;
Node_13 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_1;
Node_20 -> Node_1;
}

