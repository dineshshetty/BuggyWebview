digraph "CFG forandroidx.constraintlayout.motion.widget.DesignTool.setViewDebug(Ljava\/lang\/Object;I)V" {
subgraph cluster_Region_211624671 {
label = "R(1:(1:(1:7))) | DECL_VAR: androidx.constraintlayout.motion.widget.MotionController motionController\l";
node [shape=record,color=blue];
subgraph cluster_Region_1333730661 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1894671951 {
label = "IF [B:3:0x0002, B:6:0x000f] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if ((r3 instanceof android.view.View) != false) goto L5\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|ADDED_TO_REGION\l|if ((r0 = r2.mMotionLayout.mFrameArrayList.get(r3)) != null) goto L7\l}"];
subgraph cluster_Region_1173132016 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0011|r0.setDrawPath(r4)\lr2.mMotionLayout.invalidate()\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0004|RETURN\lADDED_TO_REGION\l|return\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0005}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0019|ORIG_RETURN\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.motion.widget.DesignTool.setViewDebug((r2v0 'this' androidx.constraintlayout.motion.widget.DesignTool A[IMMUTABLE_TYPE, THIS]), (r3v0 'view' java.lang.Object A[D('view' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'debugMode' int A[D('debugMode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0019 \-\> B:1:?, CROSS_EDGE: B:6:0x000f \-\> B:8:0x0019\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [view, debugMode]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_8 -> Node_1;
Node_9 -> Node_1;
}

