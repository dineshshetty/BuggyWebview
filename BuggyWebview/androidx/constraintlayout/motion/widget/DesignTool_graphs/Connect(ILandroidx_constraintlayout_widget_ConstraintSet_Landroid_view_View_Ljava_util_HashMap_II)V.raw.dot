digraph "CFG forandroidx.constraintlayout.motion.widget.DesignTool.Connect(ILandroidx\/constraintlayout\/widget\/ConstraintSet;Landroid\/view\/View;Ljava\/util\/HashMap;II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY] A[D('attributes' java.util.HashMap\<java.lang.String, java.lang.String\>)])  (LINE:132)\l0x0002: SGET  (r1 I:java.util.HashMap\<android.util.Pair\<java.lang.Integer, java.lang.Integer\>, java.lang.String\>) =  androidx.constraintlayout.motion.widget.DesignTool.allAttributes java.util.HashMap \l0x0004: INVOKE  (r2 I:java.lang.Integer) = (r17 I:int A[D('from' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0008: INVOKE  (r3 I:java.lang.Integer) = (r18 I:int A[D('to' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x000c: INVOKE  (r2 I:android.util.Pair) = (r2 I:java.lang.Object), (r3 I:java.lang.Object) type: STATIC call: android.util.Pair.create(java.lang.Object, java.lang.Object):android.util.Pair A[MD:\<A, B\>:(A, B):android.util.Pair\<A, B\> (c)]\l0x0010: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.HashMap), (r2 I:java.lang.Object) type: VIRTUAL call: java.util.HashMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0014: CHECK_CAST (r1 I:java.lang.String) = (java.lang.String) (r1 I:??[OBJECT, ARRAY]) \l0x0016: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.HashMap), (r1 I:java.lang.Object A[D('connection' java.lang.String)]) type: VIRTUAL call: java.util.HashMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:133)\l0x001a: CHECK_CAST (r2 I:java.lang.String) = (java.lang.String) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('connectionValue' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0049  (LINE:135)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:136)\l0x001f: SGET  (r4 I:java.util.HashMap\<java.lang.String, java.lang.String\>) =  androidx.constraintlayout.motion.widget.DesignTool.allMargins java.util.HashMap  (LINE:137)\l0x0021: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.HashMap), (r1 I:java.lang.Object A[D('connection' java.lang.String)]) type: VIRTUAL call: java.util.HashMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0025: CHECK_CAST (r4 I:java.lang.String) = (java.lang.String) (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('margin' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0035  (LINE:138)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: INVOKE  (r5 I:java.lang.Object) = (r0 I:java.util.HashMap), (r4 I:java.lang.Object A[D('margin' java.lang.String)]) type: VIRTUAL call: java.util.HashMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:139)\l0x002d: CHECK_CAST (r5 I:java.lang.String) = (java.lang.String) (r5 I:??[OBJECT, ARRAY]) \l0x002f: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dpi' int)]) \l0x0030: INVOKE  (r3 I:int A[D('marginValue' int)]) = (r13 I:int A[D('dpi' int)]), (r5 I:java.lang.String) type: STATIC call: androidx.constraintlayout.motion.widget.DesignTool.GetPxFromDp(int, java.lang.String):int A[MD:(int, java.lang.String):int (m)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|0x0036: INVOKE  (r5 I:int) = (r2 I:java.lang.String A[D('connectionValue' java.lang.String)]) type: STATIC call: java.lang.Integer.parseInt(java.lang.String):int A[MD:(java.lang.String):int throws java.lang.NumberFormatException (c)] (LINE:141)\l0x003a: INVOKE  (r8 I:int) = (r15 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getId():int A[MD:():int (c)] (LINE:142)\l0x003e: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY] A[D('set' androidx.constraintlayout.widget.ConstraintSet)]) \l0x003f: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('from' int)]) \l0x0041: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('id' int)]) \l0x0042: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('to' int)]) \l0x0044: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('marginValue' int)]) \l0x0045: INVOKE  (r7 I:androidx.constraintlayout.widget.ConstraintSet), (r8 I:int), (r9 I:int), (r10 I:int), (r11 I:int), (r12 I:int) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintSet.connect(int, int, int, int, int):void A[MD:(int, int, int, int, int):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|0x004a: RETURN   A[SYNTHETIC] (LINE:144)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dpi' int)])  (LINE:138)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0049|0x0049: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dpi' int)])  (LINE:135)\l}"];
Node_10 [shape=record,label="{10\:\ 0x004a|RETURN\lORIG_RETURN\l|0x004a: RETURN    (LINE:144)\l}"];
MethodNode[shape=record,label="{private static void androidx.constraintlayout.motion.widget.DesignTool.Connect((r13 I:int A[D('dpi' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:androidx.constraintlayout.widget.ConstraintSet A[D('set' androidx.constraintlayout.widget.ConstraintSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:java.util.HashMap\<java.lang.String, java.lang.String\> A[D('attributes' java.util.HashMap\<java.lang.String, java.lang.String\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[D('from' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('to' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0035 \-\> B:8:0x0036, CROSS_EDGE: B:9:0x0049 \-\> B:10:0x004a\lDebug Info:\l  0x001f\-0x0049: r3 'marginValue' I\l  0x0027\-0x0049: r4 'margin' Ljava\/lang\/String;\l  0x003a\-0x0049: r5 'id' I\l  0x0016\-0x004a: r1 'connection' Ljava\/lang\/String;\l  0x001c\-0x004a: r2 'connectionValue' Ljava\/lang\/String;\l  \-1 \-0x004a: r13 'dpi' I\l  \-1 \-0x004a: r14 'set' Landroidx\/constraintlayout\/widget\/ConstraintSet;\l  \-1 \-0x004a: r15 'view' Landroid\/view\/View;\l  0x0000\-0x004a: r16 'attributes' Ljava\/util\/HashMap;, signature: Ljava\/util\/HashMap\<Ljava\/lang\/String;Ljava\/lang\/String;\>;\l  \-1 \-0x004a: r17 'from' I\l  \-1 \-0x004a: r18 'to' I\lMETHOD_PARAMETERS: [dpi, set, view, attributes, from, to]\lSIGNATURE: (ILandroidx\/constraintlayout\/widget\/ConstraintSet;Landroid\/view\/View;Ljava\/util\/HashMap\<Ljava\/lang\/String;Ljava\/lang\/String;\>;II)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_11;
Node_11 -> Node_1;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

