digraph "CFG forandroidx.constraintlayout.motion.widget.MotionScene.Transition.addOnClick(II)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|java.util.Iterator r0 = r3.mOnClicks.iterator()\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|LOOP_START\lLOOP:0: B:17:0x0006\-\>B:20:0x0014\l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|if (r0.hasNext() == false) goto L10\l}"];
Node_19 [shape=record,label="{19\:\ 0x000c|androidx.constraintlayout.motion.widget.MotionScene$Transition$TransitionOnClick r1 = r0.next()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|LOOP_END\lLOOP:0: B:17:0x0006\-\>B:20:0x0014\l|if (r1.mTargetId != r4) goto L2\l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|r1.mMode = r5\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x001a|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x001a|androidx.constraintlayout.motion.widget.MotionScene$Transition$TransitionOnClick r0 = new androidx.constraintlayout.motion.widget.MotionScene.Transition.TransitionOnClick(r3, r4, r5)\lr3.mOnClicks.add(r0)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0024|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.motion.widget.MotionScene.Transition.addOnClick((r3v0 'this' androidx.constraintlayout.motion.widget.MotionScene$Transition A[IMMUTABLE_TYPE, THIS]), (r4v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'action' int A[D('action' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x0014 \-\> B:17:0x0006, CROSS_EDGE: B:25:0x0024 \-\> B:15:?\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [id, action]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_17;
Node_20 -> Node_26[style=dashed];
Node_26 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_15;
Node_27 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_15;
}

