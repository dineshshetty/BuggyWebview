digraph "CFG forandroidx.constraintlayout.motion.widget.TouchResponse.scrollUp(FF)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:606)\l0x0001: IPUT  (r0 I:boolean), (r12 I:androidx.constraintlayout.motion.widget.TouchResponse) androidx.constraintlayout.motion.widget.TouchResponse.mDragStarted boolean \l0x0003: IGET  (r1 I:androidx.constraintlayout.motion.widget.MotionLayout) = (r12 I:androidx.constraintlayout.motion.widget.TouchResponse) androidx.constraintlayout.motion.widget.TouchResponse.mMotionLayout androidx.constraintlayout.motion.widget.MotionLayout  (LINE:608)\l0x0005: INVOKE  (r1 I:float) = (r1 I:androidx.constraintlayout.motion.widget.MotionLayout) type: VIRTUAL call: androidx.constraintlayout.motion.widget.MotionLayout.getProgress():float A[MD:():float (m)]\l0x0009: IGET  (r2 I:androidx.constraintlayout.motion.widget.MotionLayout) = (r12 I:androidx.constraintlayout.motion.widget.TouchResponse) androidx.constraintlayout.motion.widget.TouchResponse.mMotionLayout androidx.constraintlayout.motion.widget.MotionLayout  (LINE:609)\l0x000b: IGET  (r3 I:int) = (r12 I:androidx.constraintlayout.motion.widget.TouchResponse) androidx.constraintlayout.motion.widget.TouchResponse.mTouchAnchorId int \l0x000d: IGET  (r5 I:float) = (r12 I:androidx.constraintlayout.motion.widget.TouchResponse) androidx.constraintlayout.motion.widget.TouchResponse.mTouchAnchorX float \l0x000f: IGET  (r6 I:float) = (r12 I:androidx.constraintlayout.motion.widget.TouchResponse) androidx.constraintlayout.motion.widget.TouchResponse.mTouchAnchorY float \l0x0011: IGET  (r7 I:float[]) = (r12 I:androidx.constraintlayout.motion.widget.TouchResponse) androidx.constraintlayout.motion.widget.TouchResponse.mAnchorDpDt float[] \l0x0013: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pos' float)]) \l0x0014: INVOKE  \l  (r2 I:androidx.constraintlayout.motion.widget.MotionLayout)\l  (r3 I:int)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float[])\l type: VIRTUAL call: androidx.constraintlayout.motion.widget.MotionLayout.getAnchorDpDt(int, float, float, float, float[]):void A[MD:(int, float, float, float, float[]):void (m)]\l0x0017: IGET  (r2 I:float) = (r12 I:androidx.constraintlayout.motion.widget.TouchResponse) androidx.constraintlayout.motion.widget.TouchResponse.mTouchDirectionX float  (LINE:610)\l0x0019: IGET  (r3 I:float[]) = (r12 I:androidx.constraintlayout.motion.widget.TouchResponse) androidx.constraintlayout.motion.widget.TouchResponse.mAnchorDpDt float[] \l0x001b: AGET  (r4 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][]), (r0 I:??[int, short, byte, char]) \l0x001d: ARITH  (r4 I:float) = (r4 I:float) * (r2 I:float) \l0x001f: IGET  (r5 I:float) = (r12 I:androidx.constraintlayout.motion.widget.TouchResponse) androidx.constraintlayout.motion.widget.TouchResponse.mTouchDirectionY float \l0x0021: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0022: AGET  (r7 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][]), (r6 I:??[int, short, byte, char]) \l0x0024: ARITH  (r7 I:float) = (r7 I:float) * (r5 I:float) \l0x0026: ARITH  (r4 I:float) = (r4 I:float) + (r7 I:float) \l0x0027: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:612)\l0x0028: CMP_L  (r8 I:int) = (r2 I:float), (r7 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|0x002a: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0032 \l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|0x002c: ARITH  (r2 I:float) = (r2 I:float) * (r13 I:float A[D('dx' float)])  (LINE:613)\l0x002e: AGET  (r3 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][]), (r0 I:??[int, short, byte, char]) \l0x0030: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0038|0x0038: INVOKE  (r3 I:boolean) = (r2 I:float A[D('velocity' float)]) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)] (LINE:617)\l}"];
Node_7 [shape=record,label="{7\:\ 0x003c|0x003c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0043 \l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|0x003e: CONST  (r3 I:??[int, float, short, byte, char]) = (1077936128(0x40400000, float:3.0) ??[int, float, short, byte, char])  (LINE:618)\l0x0040: ARITH  (r3 I:float) = (r2 I:float A[D('velocity' float)]) \/ (r3 I:float) \l0x0042: ARITH  (r1 I:float) = (r1 I:float A[D('pos' float)]) + (r3 I:float) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0043|0x0043: CMP_L  (r3 I:int) = (r1 I:float A[D('pos' float)]), (r7 I:float)  (LINE:620)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|0x0045: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|0x0047: CONST  (r3 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x0049: CMP_L  (r5 I:int) = (r1 I:float A[D('pos' float)]), (r3 I:float) \l}"];
Node_12 [shape=record,label="{12\:\ 0x004b|0x004b: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x004f \l}"];
Node_13 [shape=record,label="{13\:\ 0x004d|0x004d: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0050|0x0050: IGET  (r8 I:int) = (r12 I:androidx.constraintlayout.motion.widget.TouchResponse) androidx.constraintlayout.motion.widget.TouchResponse.mOnTouchUp int \l0x0052: CONST  (r9 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0053|0x0053: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0056 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0055|0x0055: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|0x0056: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (r5 I:??[int, boolean, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0057|0x0057: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:? \l}"];
Node_20 [shape=record,label="{20\:\ 0x0059|0x0059: IGET  (r0 I:androidx.constraintlayout.motion.widget.MotionLayout) = (r12 I:androidx.constraintlayout.motion.widget.TouchResponse) androidx.constraintlayout.motion.widget.TouchResponse.mMotionLayout androidx.constraintlayout.motion.widget.MotionLayout  (LINE:621)\l0x005b: CAST (r5 I:double) = (double) (r1 I:float A[D('pos' float)]) \l0x005c: CONST  (r9 I:??[long, double]) = (4602678819172646912(0x3fe0000000000000, double:0.5) ??[long, double]) \l0x005e: CMP_G  (r11 I:int) = (r5 I:double), (r9 I:double) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0060|0x0060: IF  (r11 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:23:0x0063 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0063|0x0063: CONST  (r7 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0065|0x0065: INVOKE  \l  (r0 I:androidx.constraintlayout.motion.widget.MotionLayout)\l  (r8 I:int)\l  (r7 I:float)\l  (r2 I:float A[D('velocity' float)])\l type: VIRTUAL call: androidx.constraintlayout.motion.widget.MotionLayout.touchAnimateTo(int, float, float):void A[MD:(int, float, float):void (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0068|RETURN\lORIG_RETURN\l|0x0068: RETURN    (LINE:623)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0068: RETURN   A[SYNTHETIC] (LINE:623)\l}"];
Node_14 [shape=record,label="{14\:\ 0x004f|0x004f: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|0x0068: RETURN   A[SYNTHETIC] (LINE:623)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|0x0032: ARITH  (r5 I:float) = (r5 I:float) * (r14 I:float A[D('dy' float)])  (LINE:615)\l0x0034: AGET  (r2 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][]), (r6 I:??[int, short, byte, char]) \l0x0036: ARITH  (r2 I:float) = (r5 I:float) \/ (r2 I:float) \l}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.motion.widget.TouchResponse.scrollUp((r12 'this' I:androidx.constraintlayout.motion.widget.TouchResponse A[IMMUTABLE_TYPE, THIS]), (r13 I:float A[D('dx' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:float A[D('dy' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0060 \-\> B:24:0x0065, CROSS_EDGE: B:19:0x0057 \-\> B:25:0x0068, CROSS_EDGE: B:16:0x0053 \-\> B:18:0x0056, CROSS_EDGE: B:14:0x004f \-\> B:15:0x0050, CROSS_EDGE: B:10:0x0045 \-\> B:25:0x0068, CROSS_EDGE: B:7:0x003c \-\> B:9:0x0043, CROSS_EDGE: B:5:0x0032 \-\> B:6:0x0038\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0031\-0x0032: r2 'velocity' F\l  0x0009\-0x0068: r1 'pos' F\l  0x0038\-0x0068: r2 'velocity' F\l  0x0027\-0x0068: r4 'movmentInDir' F\l  \-1 \-0x0068: r13 'dx' F\l  \-1 \-0x0068: r14 'dy' F\lMETHOD_PARAMETERS: [dx, dy]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_26;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_1;
Node_27 -> Node_1;
Node_14 -> Node_15;
Node_26 -> Node_1;
Node_5 -> Node_6;
}

