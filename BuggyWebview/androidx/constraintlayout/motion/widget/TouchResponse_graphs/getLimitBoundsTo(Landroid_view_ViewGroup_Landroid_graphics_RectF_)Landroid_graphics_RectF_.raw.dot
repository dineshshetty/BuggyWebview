digraph "CFG forandroidx.constraintlayout.motion.widget.TouchResponse.getLimitBoundsTo(Landroid\/view\/ViewGroup;Landroid\/graphics\/RectF;)Landroid\/graphics\/RectF;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r5 I:androidx.constraintlayout.motion.widget.TouchResponse) androidx.constraintlayout.motion.widget.TouchResponse.mLimitBoundsTo int  (LINE:805)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0007 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|0x0006: RETURN  (r1 I:android.graphics.RectF)  (LINE:806)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: INVOKE  (r0 I:android.view.View) = (r6 I:android.view.ViewGroup A[D('layout' android.view.ViewGroup)]), (r0 I:int) type: VIRTUAL call: android.view.ViewGroup.findViewById(int):android.view.View A[MD:\<T extends android.view.View\>:(int):T extends android.view.View (c)] (LINE:808)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('view' android.view.View)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000e  (LINE:809)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|RETURN\l|0x000d: RETURN  (r1 I:android.graphics.RectF)  (LINE:810)\l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|0x000e: INVOKE  (r1 I:int) = (r0 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:812)\l0x0012: CAST (r1 I:float) = (float) (r1 I:int) \l0x0013: INVOKE  (r2 I:int) = (r0 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0017: CAST (r2 I:float) = (float) (r2 I:int) \l0x0018: INVOKE  (r3 I:int) = (r0 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)]\l0x001c: CAST (r3 I:float) = (float) (r3 I:int) \l0x001d: INVOKE  (r4 I:int) = (r0 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)]\l0x0021: CAST (r4 I:float) = (float) (r4 I:int) \l0x0022: INVOKE  \l  (r7 I:android.graphics.RectF A[D('rect' android.graphics.RectF)])\l  (r1 I:float)\l  (r2 I:float)\l  (r3 I:float)\l  (r4 I:float)\l type: VIRTUAL call: android.graphics.RectF.set(float, float, float, float):void A[MD:(float, float, float, float):void (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|RETURN\l|0x0025: RETURN  (r7 I:android.graphics.RectF A[D('rect' android.graphics.RectF)])  (LINE:813)\l}"];
MethodNode[shape=record,label="{android.graphics.RectF androidx.constraintlayout.motion.widget.TouchResponse.getLimitBoundsTo((r5 'this' I:androidx.constraintlayout.motion.widget.TouchResponse A[IMMUTABLE_TYPE, THIS]), (r6 I:android.view.ViewGroup A[D('layout' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.graphics.RectF A[D('rect' android.graphics.RectF), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x000d \-\> B:1:?, CROSS_EDGE: B:9:0x0025 \-\> B:1:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0025: r0 'view' Landroid\/view\/View;\l  \-1 \-0x0025: r6 'layout' Landroid\/view\/ViewGroup;\l  \-1 \-0x0025: r7 'rect' Landroid\/graphics\/RectF;\lMETHOD_PARAMETERS: [layout, rect]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

