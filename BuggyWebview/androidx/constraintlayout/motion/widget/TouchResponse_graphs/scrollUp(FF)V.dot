digraph "CFG forandroidx.constraintlayout.motion.widget.TouchResponse.scrollUp(FF)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|r0 = false\lr12.mDragStarted = false\lfloat r1 = r12.mMotionLayout.getProgress()\lr12.mMotionLayout.getAnchorDpDt(r12.mTouchAnchorId, r1, r12.mTouchAnchorX, r12.mTouchAnchorY, r12.mAnchorDpDt)\lfloat r2 = r12.mTouchDirectionX\lfloat[] r3 = r12.mAnchorDpDt\lfloat r5 = r12.mTouchDirectionY\lfloat r4 = (r3[0] * r2) + (r3[1] * r5)\lr7 = 0.0f\l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|if ((r2 \> 0.0f ? 1 : (r2 == 0.0f ? 0 : \-1)) == 0) goto L26\l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|float r2 = (r2 * r13) \/ r3[0]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0038|PHI: r2 \l  PHI: (r2v4 'velocity' float) = (r2v3 'velocity' float), (r2v6 'velocity' float) binds: [B:5:0x0032, B:4:0x002c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x003c|if (java.lang.Float.isNaN(r2) != false) goto L7\l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|float r1 = r1 + (r2 \/ 3.0f)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0043|PHI: r1 \l  PHI: (r1v2 'pos' float) = (r1v1 'pos' float), (r1v3 'pos' float) binds: [B:7:0x003c, B:8:0x003e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|if ((r1 \> 0.0f ? 1 : (r1 == 0.0f ? 0 : \-1)) == 0) goto L25\l}"];
Node_11 [shape=record,label="{11\:\ 0x0047}"];
Node_12 [shape=record,label="{12\:\ 0x004b|if ((r1 \> 1.0f ? 1 : (r1 == 1.0f ? 0 : \-1)) == 0) goto L24\l}"];
Node_13 [shape=record,label="{13\:\ 0x004d|r5 = true\l}"];
Node_15 [shape=record,label="{15\:\ 0x0050|PHI: r5 \l  PHI: (r5v5 boolean) = (r5v4 boolean), (r5v7 boolean) binds: [B:14:0x004f, B:13:0x004d] A[DONT_GENERATE, DONT_INLINE]\l|int r8 = r12.mOnTouchUp\l}"];
Node_16 [shape=record,label="{16\:\ 0x0053|if (r8 == 3) goto L15\l}"];
Node_17 [shape=record,label="{17\:\ 0x0055|r0 = true\l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v0 boolean), (r0v4 boolean) binds: [B:16:0x0053, B:17:0x0055] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0057|if ((r0 & r5) == false) goto L23\l}"];
Node_20 [shape=record,label="{20\:\ 0x0059|androidx.constraintlayout.motion.widget.MotionLayout r0 = r12.mMotionLayout\l}"];
Node_21 [shape=record,label="{21\:\ 0x0060|if ((((double) r1) \> 0.5d ? 1 : (((double) r1) == 0.5d ? 0 : \-1)) \>= 0) goto L19\l}"];
Node_23 [shape=record,label="{23\:\ 0x0063|r7 = 1.0f\l}"];
Node_24 [shape=record,label="{24\:\ 0x0065|PHI: r7 \l  PHI: (r7v4 float) = (r7v3 float), (r7v5 float) binds: [B:21:0x0060, B:23:0x0063] A[DONT_GENERATE, DONT_INLINE]\l|r0.touchAnimateTo(r8, r7, r2)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0068|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ 0x004f|r5 = false\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|float r2 = (r5 * r14) \/ r3[1]\l}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.motion.widget.TouchResponse.scrollUp((r12v0 'this' androidx.constraintlayout.motion.widget.TouchResponse A[IMMUTABLE_TYPE, THIS]), (r13v0 'dx' float A[D('dx' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'dy' float A[D('dy' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0060 \-\> B:24:0x0065, CROSS_EDGE: B:19:0x0057 \-\> B:25:0x0068, CROSS_EDGE: B:16:0x0053 \-\> B:18:0x0056, CROSS_EDGE: B:14:0x004f \-\> B:15:0x0050, CROSS_EDGE: B:10:0x0045 \-\> B:25:0x0068, CROSS_EDGE: B:7:0x003c \-\> B:9:0x0043, CROSS_EDGE: B:5:0x0032 \-\> B:6:0x0038\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [dx, dy]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_26;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_1;
Node_27 -> Node_1;
Node_14 -> Node_15;
Node_26 -> Node_1;
Node_5 -> Node_6;
}

