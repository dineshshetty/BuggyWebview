digraph "CFG forandroidx.constraintlayout.motion.widget.ViewTransition.checkTags(Landroid\/view\/View;)Z" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r5 I:androidx.constraintlayout.motion.widget.ViewTransition) androidx.constraintlayout.motion.widget.ViewTransition.mIfTagSet int  (LINE:607)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0009 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0007|0x0007: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0011|0x0011: IGET  (r4 I:int) = (r5 I:androidx.constraintlayout.motion.widget.ViewTransition) androidx.constraintlayout.motion.widget.ViewTransition.mIfTagNotSet int  (LINE:608)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0013|0x0013: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0017 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0015|0x0015: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x001f|0x001f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('set' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:?  (LINE:609)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0021|0x0021: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('notSet' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:? \l}"];
Node_40 [shape=record,label="{40\:\ 0x0023|RETURN\lORIG_RETURN\l|0x0023: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0024: RETURN  (r2 I:boolean) \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|0x0024: RETURN  (r2 I:boolean) A[SYNTHETIC]\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|0x0024: RETURN  (r2 I:boolean) A[SYNTHETIC]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0017|0x0017: INVOKE  (r1 I:java.lang.Object) = (r6 I:android.view.View A[D('view' android.view.View)]), (r4 I:int) type: VIRTUAL call: android.view.View.getTag(int):java.lang.Object A[MD:(int):java.lang.Object (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x001b|0x001b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x001e \l}"];
Node_37 [shape=record,label="{37\:\ 0x001e|0x001e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0009|0x0009: INVOKE  (r0 I:java.lang.Object) = (r6 I:android.view.View A[D('view' android.view.View)]), (r0 I:int) type: VIRTUAL call: android.view.View.getTag(int):java.lang.Object A[MD:(int):java.lang.Object (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0010 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0010|0x0010: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.motion.widget.ViewTransition.checkTags((r5 'this' I:androidx.constraintlayout.motion.widget.ViewTransition A[IMMUTABLE_TYPE, THIS]), (r6 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:39:0x0021 \-\> B:41:0x0024, CROSS_EDGE: B:38:0x001f \-\> B:41:0x0024, CROSS_EDGE: B:37:0x001e \-\> B:38:0x001f, CROSS_EDGE: B:35:0x001b \-\> B:33:0x0015, CROSS_EDGE: B:30:0x0010 \-\> B:31:0x0011, CROSS_EDGE: B:28:0x000d \-\> B:26:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0024: r0 'set' Z\l  0x001f\-0x0024: r1 'notSet' Z\l  \-1 \-0x0024: r6 'view' Landroid\/view\/View;\lMETHOD_PARAMETERS: [view]\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_43;
Node_40 -> Node_23;
Node_43 -> Node_23;
Node_42 -> Node_23;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_33[style=dashed];
Node_37 -> Node_38;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_26[style=dashed];
Node_30 -> Node_31;
}

