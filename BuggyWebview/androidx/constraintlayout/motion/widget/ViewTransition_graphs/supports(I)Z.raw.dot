digraph "CFG forandroidx.constraintlayout.motion.widget.ViewTransition.supports(I)Z" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r4 I:androidx.constraintlayout.motion.widget.ViewTransition) androidx.constraintlayout.motion.widget.ViewTransition.mOnStateTransition int  (LINE:585)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x000a \l}"];
Node_25 [shape=record,label="{25\:\ 0x0006|0x0006: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('action' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:?  (LINE:586)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0008|RETURN\lORIG_RETURN\l|0x0008: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0009: RETURN  (r1 I:boolean) \l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x0009: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_28 [shape=record,label="{28\:\ 0x000a|0x000a: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:588)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0011 \l}"];
Node_30 [shape=record,label="{30\:\ 0x000d|0x000d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('action' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:?  (LINE:589)\l}"];
Node_31 [shape=record,label="{31\:\ 0x000f|RETURN\lORIG_RETURN\l|0x000f: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0010: RETURN  (r1 I:boolean) \l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|0x0010: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0011|0x0011: CONST  (r3 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:591)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0018 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0014|0x0014: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('action' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:?  (LINE:592)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0016|RETURN\lORIG_RETURN\l|0x0016: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0017: RETURN  (r1 I:boolean) \l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|0x0017: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0018|RETURN\l|0x0018: RETURN  (r1 I:boolean)  (LINE:594)\l}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.motion.widget.ViewTransition.supports((r4 'this' I:androidx.constraintlayout.motion.widget.ViewTransition A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('action' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0006 \-\> B:27:0x0009, CROSS_EDGE: B:32:0x0010 \-\> B:22:?, CROSS_EDGE: B:30:0x000d \-\> B:32:0x0010, CROSS_EDGE: B:37:0x0017 \-\> B:22:?, CROSS_EDGE: B:35:0x0014 \-\> B:37:0x0017, CROSS_EDGE: B:38:0x0018 \-\> B:22:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r5 'action' I\lMETHOD_PARAMETERS: [action]\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_39;
Node_26 -> Node_22;
Node_39 -> Node_22;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_40;
Node_31 -> Node_22;
Node_40 -> Node_22;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_38;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_41;
Node_36 -> Node_22;
Node_41 -> Node_22;
Node_38 -> Node_22;
}

