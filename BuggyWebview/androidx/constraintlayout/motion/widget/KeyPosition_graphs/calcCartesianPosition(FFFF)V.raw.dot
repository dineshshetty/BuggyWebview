digraph "CFG forandroidx.constraintlayout.motion.widget.KeyPosition.calcCartesianPosition(FFFF)V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: ARITH  (r0 I:float) = (r11 I:float A[D('end_x' float)]) \- (r9 I:float A[D('start_x' float)])  (LINE:125)\l0x0002: ARITH  (r1 I:float) = (r12 I:float A[D('end_y' float)]) \- (r10 I:float A[D('start_y' float)])  (LINE:126)\l0x0004: IGET  (r2 I:float) = (r8 I:androidx.constraintlayout.motion.widget.KeyPosition) androidx.constraintlayout.motion.widget.KeyPosition.mPercentX float  (LINE:127)\l0x0006: INVOKE  (r2 I:boolean) = (r2 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l0x000a: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x000f \l}"];
Node_24 [shape=record,label="{24\:\ 0x000d|0x000d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|0x0011: IGET  (r4 I:float) = (r8 I:androidx.constraintlayout.motion.widget.KeyPosition) androidx.constraintlayout.motion.widget.KeyPosition.mAltPercentY float  (LINE:128)\l0x0013: INVOKE  (r4 I:boolean) = (r4 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0017|0x0017: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x001b \l}"];
Node_28 [shape=record,label="{28\:\ 0x0019|0x0019: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x001d|0x001d: IGET  (r5 I:float) = (r8 I:androidx.constraintlayout.motion.widget.KeyPosition) androidx.constraintlayout.motion.widget.KeyPosition.mPercentY float  (LINE:129)\l0x001f: INVOKE  (r5 I:boolean) = (r5 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0023|0x0023: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0027 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0025|0x0025: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0029|0x0029: IGET  (r6 I:float) = (r8 I:androidx.constraintlayout.motion.widget.KeyPosition) androidx.constraintlayout.motion.widget.KeyPosition.mAltPercentX float  (LINE:130)\l0x002b: INVOKE  (r6 I:boolean) = (r6 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x002f|0x002f: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0032 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0032|0x0032: IGET  (r3 I:float) = (r8 I:androidx.constraintlayout.motion.widget.KeyPosition) androidx.constraintlayout.motion.widget.KeyPosition.mAltPercentX float \l}"];
Node_38 [shape=record,label="{38\:\ 0x0034|0x0034: ARITH  (r6 I:float) = (r0 I:float A[D('pathVectorX' float)]) * (r2 I:float A[D('dxdx' float)])  (LINE:131)\l0x0036: ARITH  (r6 I:float) = (r6 I:float) + (r9 I:float A[D('start_x' float)]) \l0x0037: ARITH  (r7 I:float) = (r1 I:float A[D('pathVectorY' float)]) * (r3 I:float A[D('dxdy' float)]) \l0x0039: ARITH  (r6 I:float) = (r6 I:float) + (r7 I:float) \l0x003a: CAST (r6 I:int) = (int) (r6 I:float) \l0x003b: CAST (r6 I:float) = (float) (r6 I:int) \l0x003c: IPUT  (r6 I:float), (r8 I:androidx.constraintlayout.motion.widget.KeyPosition) androidx.constraintlayout.motion.widget.KeyPosition.mCalculatedPositionX float \l0x003e: ARITH  (r6 I:float) = (r0 I:float A[D('pathVectorX' float)]) * (r4 I:float A[D('dydx' float)])  (LINE:132)\l0x0040: ARITH  (r6 I:float) = (r6 I:float) + (r10 I:float A[D('start_y' float)]) \l0x0041: ARITH  (r7 I:float) = (r1 I:float A[D('pathVectorY' float)]) * (r5 I:float A[D('dydy' float)]) \l0x0043: ARITH  (r6 I:float) = (r6 I:float) + (r7 I:float) \l0x0044: CAST (r6 I:int) = (int) (r6 I:float) \l0x0045: CAST (r6 I:float) = (float) (r6 I:int) \l0x0046: IPUT  (r6 I:float), (r8 I:androidx.constraintlayout.motion.widget.KeyPosition) androidx.constraintlayout.motion.widget.KeyPosition.mCalculatedPositionY float \l}"];
Node_39 [shape=record,label="{39\:\ 0x0048|RETURN\l|0x0048: RETURN    (LINE:133)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0027|0x0027: IGET  (r5 I:float) = (r8 I:androidx.constraintlayout.motion.widget.KeyPosition) androidx.constraintlayout.motion.widget.KeyPosition.mPercentY float \l}"];
Node_29 [shape=record,label="{29\:\ 0x001b|0x001b: IGET  (r4 I:float) = (r8 I:androidx.constraintlayout.motion.widget.KeyPosition) androidx.constraintlayout.motion.widget.KeyPosition.mAltPercentY float \l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|0x000f: IGET  (r2 I:float) = (r8 I:androidx.constraintlayout.motion.widget.KeyPosition) androidx.constraintlayout.motion.widget.KeyPosition.mPercentX float \l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.motion.widget.KeyPosition.calcCartesianPosition((r8 'this' I:androidx.constraintlayout.motion.widget.KeyPosition A[IMMUTABLE_TYPE, THIS]), (r9 I:float A[D('start_x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:float A[D('start_y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:float A[D('end_x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:float A[D('end_y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x002f \-\> B:38:0x0034, CROSS_EDGE: B:33:0x0027 \-\> B:34:0x0029, CROSS_EDGE: B:29:0x001b \-\> B:30:0x001d, CROSS_EDGE: B:25:0x000f \-\> B:26:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x0048: r0 'pathVectorX' F\l  0x0004\-0x0048: r1 'pathVectorY' F\l  0x0011\-0x0048: r2 'dxdx' F\l  0x0034\-0x0048: r3 'dxdy' F\l  0x001d\-0x0048: r4 'dydx' F\l  0x0029\-0x0048: r5 'dydy' F\l  \-1 \-0x0048: r9 'start_x' F\l  \-1 \-0x0048: r10 'start_y' F\l  \-1 \-0x0048: r11 'end_x' F\l  \-1 \-0x0048: r12 'end_y' F\lMETHOD_PARAMETERS: [start_x, start_y, end_x, end_y]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_38[style=dashed];
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_21;
Node_33 -> Node_34;
Node_29 -> Node_30;
Node_25 -> Node_26;
}

