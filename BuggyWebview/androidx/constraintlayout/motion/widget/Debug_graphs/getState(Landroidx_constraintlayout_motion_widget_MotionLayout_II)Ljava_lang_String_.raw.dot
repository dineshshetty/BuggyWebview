digraph "CFG forandroidx.constraintlayout.motion.widget.Debug.getState(Landroidx\/constraintlayout\/motion\/widget\/MotionLayout;II)Ljava\/lang\/String;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:198)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0001|0x0001: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('stateId' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0006 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0003|RETURN\l|0x0003: CONST_STR  (r0 I:java.lang.String) =  \"UNDEFINED\"  (LINE:199)\l0x0005: RETURN  (r0 I:java.lang.String) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0006|0x0006: INVOKE  (r1 I:android.content.Context) = \l  (r8 I:androidx.constraintlayout.motion.widget.MotionLayout A[D('layout' androidx.constraintlayout.motion.widget.MotionLayout)])\l type: VIRTUAL call: androidx.constraintlayout.motion.widget.MotionLayout.getContext():android.content.Context A[MD:():android.content.Context (s)] (LINE:201)\l0x000a: INVOKE  (r2 I:android.content.res.Resources) = (r1 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)] (LINE:202)\l0x000e: INVOKE  (r2 I:java.lang.String) = (r2 I:android.content.res.Resources), (r9 I:int A[D('stateId' int)]) type: VIRTUAL call: android.content.res.Resources.getResourceEntryName(int):java.lang.String A[MD:(int):java.lang.String throws android.content.res.Resources$NotFoundException (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0012|0x0012: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('len' int)]) == (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:?  (LINE:203)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0014|0x0014: INVOKE  (r0 I:int) = (r2 I:java.lang.String A[D('str' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)] (LINE:204)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0018|0x0018: IF  (r0 I:??[int, byte, short, char]) \<= (r10 I:??[int, byte, short, char] A[D('len' int)])  \-\> B:31:0x0022 \l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|0x001a: CONST_STR  (r0 I:java.lang.String) =  \"([^_])[aeiou]+\"  (LINE:205)\l0x001c: CONST_STR  (r3 I:java.lang.String) =  \"$1\" \l0x001e: INVOKE  (r2 I:java.lang.String A[D('str' java.lang.String)]) = (r2 I:java.lang.String A[D('str' java.lang.String)]), (r0 I:java.lang.String), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.String.replaceAll(java.lang.String, java.lang.String):java.lang.String A[MD:(java.lang.String, java.lang.String):java.lang.String (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|0x0022: INVOKE  (r0 I:int) = (r2 I:java.lang.String A[D('str' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)] (LINE:207)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0026|0x0026: IF  (r0 I:??[int, byte, short, char]) \<= (r10 I:??[int, byte, short, char] A[D('len' int)])  \-\> B:38:? \l}"];
Node_33 [shape=record,label="{33\:\ 0x0028|0x0028: CONST_STR  (r0 I:java.lang.String) =  \"[^_]\"  (LINE:208)\l0x002a: CONST_STR  (r3 I:java.lang.String) =  \"\" \l0x002c: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.String A[D('str' java.lang.String)]), (r0 I:java.lang.String), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.String.replaceAll(java.lang.String, java.lang.String):java.lang.String A[MD:(java.lang.String, java.lang.String):java.lang.String (c)]\l0x0030: INVOKE  (r0 I:int) = (r0 I:java.lang.String) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0034|0x0034: IF  (r0 I:??[int, byte, short, char] A[D('n' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:39:?  (LINE:209)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0036|0x0036: INVOKE  (r3 I:int) = (r2 I:java.lang.String A[D('str' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)] (LINE:210)\l0x003a: ARITH  (r3 I:int) = (r3 I:int) \- (r10 I:int A[D('len' int)]) \l0x003b: ARITH  (r3 I:int) = (r3 I:int) \/ (r0 I:int A[D('n' int)]) \l0x003c: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:211)\l0x003e: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0041: INVOKE  (r5 I:java.nio.CharBuffer) = (r3 I:int A[D('extra' int)]) type: STATIC call: java.nio.CharBuffer.allocate(int):java.nio.CharBuffer A[MD:(int):java.nio.CharBuffer (c)]\l0x0045: INVOKE  (r5 I:java.lang.String) = (r5 I:java.nio.CharBuffer) type: VIRTUAL call: java.nio.CharBuffer.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0049: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x004a: CONST  (r7 I:??[int, float, short, byte, char]) = (46 ??[int, float, short, byte, char]) \l0x004c: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.String), (r6 I:char), (r7 I:char) type: VIRTUAL call: java.lang.String.replace(char, char):java.lang.String A[MD:(char, char):java.lang.String (c)]\l0x0050: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0053: CONST_STR  (r5 I:java.lang.String) =  \"_\" \l0x0055: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0058: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x005c: INVOKE  (r2 I:java.lang.String A[D('str' java.lang.String)]) = \l  (r2 I:java.lang.String A[D('str' java.lang.String)])\l  (r4 I:java.lang.String A[D('reg' java.lang.String)])\l  (r5 I:java.lang.String)\l type: VIRTUAL call: java.lang.String.replaceAll(java.lang.String, java.lang.String):java.lang.String A[MD:(java.lang.String, java.lang.String):java.lang.String (c)] (LINE:212)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0060|RETURN\lORIG_RETURN\l|0x0060: RETURN  (r2 I:java.lang.String A[D('str' java.lang.String)])  (LINE:216)\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x0060: RETURN  (r2 I:java.lang.String A[D('str' java.lang.String)]) A[SYNTHETIC] (LINE:216)\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|0x0060: RETURN  (r2 I:java.lang.String A[D('str' java.lang.String)]) A[SYNTHETIC] (LINE:216)\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x0060: RETURN  (r2 I:java.lang.String A[D('str' java.lang.String)]) A[SYNTHETIC] (LINE:216)\l}"];
MethodNode[shape=record,label="{public static java.lang.String androidx.constraintlayout.motion.widget.Debug.getState((r8 I:androidx.constraintlayout.motion.widget.MotionLayout A[D('layout' androidx.constraintlayout.motion.widget.MotionLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('stateId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('len' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x0060 \-\> B:21:?, CROSS_EDGE: B:34:0x0034 \-\> B:36:0x0060, CROSS_EDGE: B:32:0x0026 \-\> B:36:0x0060, CROSS_EDGE: B:29:0x0018 \-\> B:31:0x0022, CROSS_EDGE: B:27:0x0012 \-\> B:36:0x0060\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0034\-0x0060: r0 'n' I\l  0x003c\-0x0060: r3 'extra' I\l  0x005c\-0x0060: r4 'reg' Ljava\/lang\/String;\l  0x000a\-0x0060: r1 'context' Landroid\/content\/Context;\l  0x0012\-0x0060: r2 'str' Ljava\/lang\/String;\l  \-1 \-0x0060: r8 'layout' Landroidx\/constraintlayout\/motion\/widget\/MotionLayout;\l  \-1 \-0x0060: r9 'stateId' I\l  \-1 \-0x0060: r10 'len' I\lMETHOD_PARAMETERS: [layout, stateId, len]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_21;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_37;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_38;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_39;
Node_35 -> Node_36;
Node_36 -> Node_21;
Node_39 -> Node_21;
Node_38 -> Node_21;
Node_37 -> Node_21;
}

