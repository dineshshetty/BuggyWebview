digraph "CFG forandroidx.constraintlayout.motion.widget.ViewTransition.Animate.reverse(Z)V" {
subgraph cluster_Region_1653997050 {
label = "R(3:1|(1:7)|9) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|r2.reverse = r3\l}"];
subgraph cluster_IfRegion_367951196 {
label = "IF [B:15:0x0002, B:17:0x0007] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0002|if (r3 != false) goto L3\l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|ADDED_TO_REGION\l|if ((r0 = r2.mUpDuration) != (\-1)) goto L5\l}"];
subgraph cluster_Region_1215736885 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0014|PHI: r0 \l  PHI: (r0v5 float A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r2.mDpositionDt = r0 == 0 ? Float.MAX_VALUE : 1.0f \/ r0\l}"];
}
}
Node_22 [shape=record,label="{22\:\ 0x0016|r2.mVtController.invalidate()\lr2.mLastRender = java.lang.System.nanoTime()\l}"];
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0004}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0009}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000b}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000f}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0021}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.motion.widget.ViewTransition.Animate.reverse((r2v0 'this' androidx.constraintlayout.motion.widget.ViewTransition$Animate A[IMMUTABLE_TYPE, THIS]), (r3v0 'dir' boolean A[D('dir' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x000f \-\> B:21:0x0014, CROSS_EDGE: B:17:0x0007 \-\> B:22:0x0016, CROSS_EDGE: B:15:0x0002 \-\> B:22:0x0016\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [dir]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_22[style=dashed];
Node_17 -> Node_18;
Node_17 -> Node_22[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_12 -> Node_14;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_23 -> Node_13;
}

