digraph "CFG forandroidx.constraintlayout.motion.widget.MotionPaths.setDpDt(FF[F[I[D[D)V" {
subgraph cluster_Region_174489408 {
label = "R(3:1|(3:4|5|8)|17)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|float r1 = 0.0f\lfloat r2 = 0.0f\lfloat r3 = 0.0f\lfloat r4 = 0.0f\lint r11 = 0\l}"];
subgraph cluster_LoopRegion_2144782483 {
label = "LOOP:0: (3:4|5|8)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|if (r11 \< r25.length) goto L4\l}"];
subgraph cluster_Region_45706200 {
label = "R(3:4|5|8)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|float float r12 = (float) r26[r11]\lfloat float r13 = (float) r27[r11]\l}"];
subgraph cluster_SwitchRegion_1472055336 {
label = "Switch: 4
 case 1 -> R(2:13|1)
 case 2 -> R(2:11|1)
 case 3 -> R(2:9|1)
 case 4 -> R(2:6|1)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001a|switch(r25[r11]) \{\l    case 0: goto L15;\l    case 1: goto L13;\l    case 2: goto L11;\l    case 3: goto L9;\l    case 4: goto L6;\l    default: goto L15;\l\}\l}"];
subgraph cluster_Region_1031965670 {
label = "R(2:13|1)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0024|r1 = r12\l}"];
Node_InsnContainer_1567278840 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1872909855 {
label = "R(2:11|1)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0022|r2 = r12\l}"];
Node_InsnContainer_1269032369 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1871137477 {
label = "R(2:9|1)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0020|r3 = r12\l}"];
Node_InsnContainer_1292211639 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1445114890 {
label = "R(2:6|1)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001e|r4 = r12\l}"];
Node_InsnContainer_1398886307 [shape=record,label="{|break\l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x0027|LOOP_END\lLOOP:0: B:3:0x000f\-\>B:13:0x0027\lPHI: r1 r2 r3 r4 \l  PHI: (r1v3 'd_x' float) = (r1v1 'd_x' float), (r1v2 'd_x' float), (r1v1 'd_x' float), (r1v1 'd_x' float), (r1v1 'd_x' float) binds: [B:21:0x0027, B:20:0x0027, B:19:0x0027, B:18:0x0027, B:17:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 'd_y' float) = (r2v1 'd_y' float), (r2v1 'd_y' float), (r2v2 'd_y' float), (r2v1 'd_y' float), (r2v1 'd_y' float) binds: [B:21:0x0027, B:20:0x0027, B:19:0x0027, B:18:0x0027, B:17:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v3 'd_width' float) = (r3v1 'd_width' float), (r3v1 'd_width' float), (r3v1 'd_width' float), (r3v2 'd_width' float), (r3v1 'd_width' float) binds: [B:21:0x0027, B:20:0x0027, B:19:0x0027, B:18:0x0027, B:17:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 'd_height' float) = (r4v1 'd_height' float), (r4v1 'd_height' float), (r4v1 'd_height' float), (r4v1 'd_height' float), (r4v3 'd_height' float) binds: [B:21:0x0027, B:20:0x0027, B:19:0x0027, B:18:0x0027, B:17:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|r11++\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x002a|float float r11 = r1 \- ((0.0f * r3) \/ 2.0f)\lfloat float r12 = r2 \- ((0.0f * r4) \/ 2.0f)\lfloat float r14 = (0.0f + 1.0f) * r3\lfloat float r15 = (0.0f + 1.0f) * r4\lfloat float r16 = r11 + r14\lfloat float r17 = r12 + r15\lr24[0] = ((1.0f \- r22) * r11) + (r16 * r22) + 0.0f\lr24[1] = ((1.0f \- r23) * r12) + (r17 * r23) + 0.0f\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000f|LOOP_START\lLOOP:0: B:3:0x000f\-\>B:13:0x0027\lPHI: r1 r2 r3 r4 r11 \l  PHI: (r1v1 'd_x' float) = (r1v0 'd_x' float), (r1v3 'd_x' float) binds: [B:2:0x0000, B:13:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'd_y' float) = (r2v0 'd_y' float), (r2v3 'd_y' float) binds: [B:2:0x0000, B:13:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'd_width' float) = (r3v0 'd_width' float), (r3v3 'd_width' float) binds: [B:2:0x0000, B:13:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'd_height' float) = (r4v0 'd_height' float), (r4v2 'd_height' float) binds: [B:2:0x0000, B:13:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v1 'i' int) = (r11v0 'i' int), (r11v5 'i' int) binds: [B:2:0x0000, B:13:0x0027] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0027|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0027|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0027|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0027|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0027|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x002a|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x005f}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.motion.widget.MotionPaths.setDpDt((r21v0 'this' androidx.constraintlayout.motion.widget.MotionPaths A[IMMUTABLE_TYPE, THIS]), (r22v0 'locationX' float A[D('locationX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'locationY' float A[D('locationY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 'mAnchorDpDt' float[] A[D('mAnchorDpDt' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 'toUse' int[] A[D('toUse' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 'deltaData' double[] A[D('deltaData' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 'data' double[] A[D('data' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x0027 \-\> B:3:0x000f, CROSS_EDGE: B:9:0x0020 \-\> B:13:0x0027, CROSS_EDGE: B:10:0x0022 \-\> B:13:0x0027, CROSS_EDGE: B:11:0x0024 \-\> B:13:0x0027, CROSS_EDGE: B:6:0x001a \-\> B:13:0x0027\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [locationX, locationY, mAnchorDpDt, toUse, deltaData, data]\lJadxCommentsAttr\{\l INFO: \l \-\> Access modifiers changed from: package\-private\}\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_16[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_9;
Node_6 -> Node_10;
Node_6 -> Node_11;
Node_6 -> Node_21;
Node_11 -> Node_20;
Node_10 -> Node_19;
Node_9 -> Node_18;
Node_8 -> Node_17;
Node_13 -> Node_3;
Node_14 -> Node_15;
Node_0 -> Node_2;
Node_3 -> Node_4;
Node_17 -> Node_13;
Node_18 -> Node_13;
Node_19 -> Node_13;
Node_20 -> Node_13;
Node_21 -> Node_13;
Node_16 -> Node_14;
Node_15 -> Node_1;
}

