digraph "CFG forandroidx.constraintlayout.motion.widget.MotionPaths.diff(FF)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r5 I:float A[D('a' float)]) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)] (LINE:298)\l0x0004: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0005: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: INVOKE  (r0 I:boolean) = (r6 I:float A[D('b' float)]) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000f \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: ARITH  (r0 I:float) = (r5 I:float A[D('a' float)]) \- (r6 I:float A[D('b' float)])  (LINE:301)\l0x0011: INVOKE  (r0 I:float) = (r0 I:float) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x0015: CONST  (r3 I:??[int, float, short, byte, char]) = (897988541(0x358637bd, float:1.0E\-6) ??[int, float, short, byte, char]) \l0x0018: CMP_L  (r0 I:int) = (r0 I:float), (r3 I:float) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:10:0x001d \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|RETURN\lORIG_RETURN\l|0x001d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001e: RETURN  (r1 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|0x001e: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|0x001f: INVOKE  (r0 I:boolean) = (r5 I:float A[D('a' float)]) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)] (LINE:299)\l0x0023: INVOKE  (r3 I:boolean) = (r6 I:float A[D('b' float)]) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|0x0027: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002a \l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|RETURN\lORIG_RETURN\l|0x002a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002b: RETURN  (r1 I:boolean) \l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|0x002b: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{private boolean androidx.constraintlayout.motion.widget.MotionPaths.diff((r4 'this' I:androidx.constraintlayout.motion.widget.MotionPaths A[IMMUTABLE_TYPE, THIS]), (r5 I:float A[D('a' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[D('b' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x001a \-\> B:11:0x001e, CROSS_EDGE: B:16:0x002b \-\> B:1:?, CROSS_EDGE: B:13:0x0027 \-\> B:16:0x002b, CROSS_EDGE: B:3:0x0006 \-\> B:12:0x001f\lDebug Info:\l  \-1 \-0x002b: r5 'a' F\l  \-1 \-0x002b: r6 'b' F\lMETHOD_PARAMETERS: [a, b]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_12[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_17[style=dashed];
Node_10 -> Node_1;
Node_17 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_18[style=dashed];
Node_15 -> Node_1;
Node_18 -> Node_1;
}

