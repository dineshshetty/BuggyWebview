digraph "CFG forandroidx.constraintlayout.motion.widget.MotionPaths.initCartesian(Landroidx\/constraintlayout\/motion\/widget\/KeyPosition;Landroidx\/constraintlayout\/motion\/widget\/MotionPaths;Landroidx\/constraintlayout\/motion\/widget\/MotionPaths;)V" {
subgraph cluster_Region_462201379 {
label = "R(9:1|2|5|7|(1:25)(1:9)|11|(1:23)(1:15)|17|19) | DECL_VAR: float dxdx, float dydy\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|float float r3 = r23.mFramePosition \/ 100.0f\lr22.time = r3\lr22.mDrawPath = r23.mDrawPath\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|float r5 = java.lang.Float.isNaN(r23.mPercentWidth) ? r3 : r23.mPercentWidth\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|float r7 = java.lang.Float.isNaN(r23.mPercentHeight) ? r3 : r23.mPercentHeight\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|PHI: r7 \l  PHI: (r7v3 'scaleHeight' float) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|float float r8 = r25.width\lfloat float r9 = r24.width\lfloat float r10 = r8 \- r9\lfloat float r11 = r25.height\lfloat float r12 = r24.height\lfloat float r13 = r11 \- r12\lr22.position = r22.time\lfloat float r15 = r24.f54x\lfloat float r17 = r15 + (r9 \/ 2.0f)\lfloat float r3 = r24.f55y\lfloat float r19 = r3 + (r12 \/ 2.0f)\lfloat float r6 = r25.f54x + (r8 \/ 2.0f)\lfloat float r8 = r25.f55y + (r11 \/ 2.0f)\lfloat float r11 = r6 \- r17\lfloat float r20 = r8 \- r19\lr22.f54x = (int) ((r15 + (r11 * r3)) \- ((r10 * r5) \/ 2.0f))\lr22.f55y = (int) ((r3 + (r20 * r3)) \- ((r13 * r7) \/ 2.0f))\lr22.width = (int) (r9 + (r10 * r5))\lr22.height = (int) (r12 + (r13 * r7))\l}"];
subgraph cluster_IfRegion_270827642 {
label = "IF [B:11:0x008b] THEN: R(1:25) ELSE: R(1:9)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x008b|if (java.lang.Float.isNaN(r23.mPercentX) == false) goto L25\l}"];
subgraph cluster_Region_309373364 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0090|float r3 = r23.mPercentX\l}"];
}
subgraph cluster_Region_1455611094 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x008d|r3 = r3\l}"];
}
}
Node_15 [shape=record,label="{15\:\ 0x0098|float r9 = java.lang.Float.isNaN(r23.mAltPercentY) ? 0.0f : r23.mAltPercentY\l}"];
subgraph cluster_IfRegion_1437511231 {
label = "IF [B:19:0x00a4] THEN: R(1:23) ELSE: R(1:15)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x00a4|if (java.lang.Float.isNaN(r23.mPercentY) == false) goto L23\l}"];
subgraph cluster_Region_1813220451 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x00a9|float r15 = r23.mPercentY\l}"];
}
subgraph cluster_Region_2013753351 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x00a6|r15 = r3\l}"];
}
}
Node_23 [shape=record,label="{23\:\ 0x00b1|float r12 = java.lang.Float.isNaN(r23.mAltPercentX) ? 0.0f : r23.mAltPercentX\l}"];
Node_26 [shape=record,label="{26\:\ 0x00b7|PHI: r12 \l  PHI: (r12v5 'dxdy' float) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r22.mMode = 0\lr22.f54x = (int) (((r24.f54x + (r11 * r3)) + (r20 * r12)) \- ((r10 * r5) \/ 2.0f))\lr22.f55y = (int) (((r24.f55y + (r11 * r9)) + (r20 * r15)) \- ((r13 * r7) \/ 2.0f))\lr22.mKeyFrameEasing = androidx.constraintlayout.core.motion.utils.Easing.getInterpolator(r23.mTransitionEasing)\lr22.mPathMotionArc = r23.mPathMotionArc\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x001e}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0022|PHI: r5 \l  PHI: (r5v4 'scaleWidth' float) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002a}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0092|PHI: r3 \l  PHI: (r3v17 'dxdx' float) = (r3v16 'dxdx' float), (r3v18 'dxdx' float) binds: [B:13:0x0090, B:12:0x008d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x009a}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x009e|PHI: r9 \l  PHI: (r9v5 'dydx' float) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x00ab|PHI: r15 \l  PHI: (r15v11 'dydy' float) = (r15v10 'dydy' float), (r15v12 'dydy' float) binds: [B:21:0x00a9, B:20:0x00a6] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x00b3}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x00ee}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x00b5}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x009c}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002c}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0020}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.motion.widget.MotionPaths.initCartesian((r22v0 'this' androidx.constraintlayout.motion.widget.MotionPaths A[IMMUTABLE_TYPE, THIS]), (r23v0 'c' androidx.constraintlayout.motion.widget.KeyPosition A[D('c' androidx.constraintlayout.motion.widget.KeyPosition), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 'startTimePoint' androidx.constraintlayout.motion.widget.MotionPaths A[D('startTimePoint' androidx.constraintlayout.motion.widget.MotionPaths), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 'endTimePoint' androidx.constraintlayout.motion.widget.MotionPaths A[D('endTimePoint' androidx.constraintlayout.motion.widget.MotionPaths), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x00b5 \-\> B:26:0x00b7, CROSS_EDGE: B:21:0x00a9 \-\> B:22:0x00ab, CROSS_EDGE: B:17:0x009c \-\> B:18:0x009e, CROSS_EDGE: B:13:0x0090 \-\> B:14:0x0092, CROSS_EDGE: B:9:0x002c \-\> B:10:0x002e, CROSS_EDGE: B:5:0x0020 \-\> B:6:0x0022\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [c, startTimePoint, endTimePoint]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_12 -> Node_14;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_20 -> Node_22;
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_26 -> Node_27;
Node_0 -> Node_2;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_10;
Node_14 -> Node_15;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_22 -> Node_23;
Node_24 -> Node_26;
Node_27 -> Node_1;
Node_25 -> Node_26;
Node_17 -> Node_18;
Node_9 -> Node_10;
Node_5 -> Node_6;
}

