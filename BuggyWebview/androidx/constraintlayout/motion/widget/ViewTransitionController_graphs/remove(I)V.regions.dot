digraph "CFG forandroidx.constraintlayout.motion.widget.ViewTransitionController.remove(I)V" {
subgraph cluster_Region_632010707 {
label = "R(3:1|(1:(2:(1:13)|(2:4|(2:7|1))))|(1:(1:9)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|androidx.constraintlayout.motion.widget.ViewTransition r0 = null\ljava.util.Iterator java.util.Iterator\<androidx.constraintlayout.motion.widget.ViewTransition\> r1 = r4.viewTransitions.iterator()\l}"];
subgraph cluster_LoopRegion_1726172748 {
label = "LOOP:0: (1:(2:(1:13)|(2:4|(2:7|1))))";
node [shape=record,color=blue];
subgraph cluster_Region_1770940966 {
label = "R(1:(2:(1:13)|(2:4|(2:7|1))))";
node [shape=record,color=blue];
subgraph cluster_Region_89091867 {
label = "R(2:(1:13)|(2:4|(2:7|1)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1560983854 {
label = "IF [B:4:0x000b] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r1.hasNext() != true) goto L13\l}"];
subgraph cluster_Region_1617526390 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x001c|SYNTHETIC\lEDGE_INSN: B:13:0x001c\-\>B:9:0x001c ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_873584006 {
label = "R(2:4|(2:7|1))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|androidx.constraintlayout.motion.widget.ViewTransition androidx.constraintlayout.motion.widget.ViewTransition r2 = r1.next()\l}"];
subgraph cluster_IfRegion_193408822 {
label = "IF [B:6:0x0017] THEN: R(2:7|1) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0017|LOOP_END\lLOOP:0: B:3:0x0007\-\>B:6:0x0017\l|if (r2.getId() == r5) goto L6\l}"];
subgraph cluster_Region_979002636 {
label = "R(2:7|1)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0019|EDGE_INSN: B:7:0x0019\-\>B:9:0x001c ?: BREAK  \l|r0 = r2\l}"];
Node_InsnContainer_470080793 [shape=record,label="{|break\l}"];
}
}
}
}
}
}
subgraph cluster_Region_113335269 {
label = "R(1:(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_214334967 {
label = "IF [B:9:0x001c] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001c|EDGE_INSN: B:7:0x0019\-\>B:9:0x001c ?: BREAK  , EDGE_INSN: B:13:0x001c\-\>B:9:0x001c ?: BREAK  \lPHI: r0 \l  PHI: (r0v1 'del' androidx.constraintlayout.motion.widget.ViewTransition) = (r0v0 'del' androidx.constraintlayout.motion.widget.ViewTransition), (r0v2 'del' androidx.constraintlayout.motion.widget.ViewTransition) binds: [B:13:0x001c, B:7:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != null) goto L9\l}"];
subgraph cluster_Region_627545982 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001e|r4.mRelatedViews = null\lr4.viewTransitions.remove(r0)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0007|LOOP_START\lLOOP:0: B:3:0x0007\-\>B:6:0x0017\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0019|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0026|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.motion.widget.ViewTransitionController.remove((r4v0 'this' androidx.constraintlayout.motion.widget.ViewTransitionController A[IMMUTABLE_TYPE, THIS]), (r5v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x001c \-\> B:11:0x0026, BACK_EDGE: B:6:0x0017 \-\> B:3:0x0007, CROSS_EDGE: B:4:0x000b \-\> B:9:0x001c\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [id]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_13 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_3[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_14[style=dashed];
Node_10 -> Node_11;
Node_0 -> Node_2;
Node_3 -> Node_4;
Node_12 -> Node_7;
Node_11 -> Node_1;
Node_14 -> Node_1;
}

