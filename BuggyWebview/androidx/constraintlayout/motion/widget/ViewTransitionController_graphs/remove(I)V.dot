digraph "CFG forandroidx.constraintlayout.motion.widget.ViewTransitionController.remove(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|r0 = null\ljava.util.Iterator r1 = r4.viewTransitions.iterator()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|LOOP_START\lLOOP:0: B:3:0x0007\-\>B:6:0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r1.hasNext() == false) goto L13\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|androidx.constraintlayout.motion.widget.ViewTransition r2 = r1.next()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|LOOP_END\lLOOP:0: B:3:0x0007\-\>B:6:0x0017\l|if (r2.getId() != r5) goto L2\l}"];
Node_12 [shape=record,label="{12\:\ 0x0019|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|r0 = r2\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|PHI: r0 \l  PHI: (r0v1 'del' androidx.constraintlayout.motion.widget.ViewTransition) = (r0v0 'del' androidx.constraintlayout.motion.widget.ViewTransition), (r0v2 'del' androidx.constraintlayout.motion.widget.ViewTransition) binds: [B:13:0x001c, B:7:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == null) goto L12\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|r4.mRelatedViews = null\lr4.viewTransitions.remove(r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void androidx.constraintlayout.motion.widget.ViewTransitionController.remove((r4v0 'this' androidx.constraintlayout.motion.widget.ViewTransitionController A[IMMUTABLE_TYPE, THIS]), (r5v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x001c \-\> B:11:0x0026, BACK_EDGE: B:6:0x0017 \-\> B:3:0x0007, CROSS_EDGE: B:4:0x000b \-\> B:9:0x001c\lMETHOD_PARAMETERS: [id]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_3;
Node_6 -> Node_12[style=dashed];
Node_12 -> Node_7;
Node_7 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_14 -> Node_1;
Node_13 -> Node_9;
}

