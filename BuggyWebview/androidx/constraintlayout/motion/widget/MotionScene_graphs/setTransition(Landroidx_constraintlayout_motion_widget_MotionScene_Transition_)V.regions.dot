digraph "CFG forandroidx.constraintlayout.motion.widget.MotionScene.setTransition(Landroidx\/constraintlayout\/motion\/widget\/MotionScene$Transition;)V" {
subgraph cluster_Region_1301530448 {
label = "R(2:1|(2:(1:8)|(1:5)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|r2.mCurrentTransition = r3\l}"];
subgraph cluster_Region_2063036478 {
label = "R(2:(1:8)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_195244574 {
label = "IF [B:13:0x0002, B:15:0x0008] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|if (r3 == null) goto L9\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|ADDED_TO_REGION\l|if (r3.mTouchResponse == null) goto L8\l}"];
subgraph cluster_Region_1463295794 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_79887298 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x000a|r2.mCurrentTransition.mTouchResponse.setRTL(r2.mRtl)\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0004}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0015|ORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.motion.widget.MotionScene.setTransition((r2v0 'this' androidx.constraintlayout.motion.widget.MotionScene A[IMMUTABLE_TYPE, THIS]), (r3v0 'transition' androidx.constraintlayout.motion.widget.MotionScene$Transition A[D('transition' androidx.constraintlayout.motion.widget.MotionScene$Transition), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0008 \-\> B:17:0x0015, CROSS_EDGE: B:13:0x0002 \-\> B:17:0x0015\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [transition]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_19 -> Node_11;
Node_16 -> Node_17;
Node_10 -> Node_12;
Node_14 -> Node_15;
Node_17 -> Node_11;
Node_18 -> Node_11;
}

