digraph "CFG forandroidx.constraintlayout.motion.widget.MotionScene.parseInclude(Landroid\/content\/Context;I)I" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|0x0000: INVOKE  (r0 I:android.content.res.Resources) = (r6 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)] (LINE:1220)\l0x0004: INVOKE  (r1 I:android.content.res.XmlResourceParser) = (r0 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r7 I:int A[D('resourceId' int)]) type: VIRTUAL call: android.content.res.Resources.getXml(int):android.content.res.XmlResourceParser A[MD:(int):android.content.res.XmlResourceParser throws android.content.res.Resources$NotFoundException (c)] (LINE:1221)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0008|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_31 [shape=record,label="{31\:\ 0x0008|TRY_ENTER\lTryCatch #2 \{IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f, blocks: (B:31:0x0008, B:34:0x000f, B:36:0x0016, B:38:0x001e, B:40:0x0023), top: B:50:0x0008 \}\lCatch: IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f\l|0x0008: INVOKE  (r2 I:int) = (r1 I:org.xmlpull.v1.XmlPullParser A[D('includeParser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getEventType():int A[Catch: IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f, MD:():int throws org.xmlpull.v1.XmlPullParserException (c), TRY_ENTER] (LINE:1223)\l}"];
Node_32 [shape=record,label="{32\:\ 0x000c|LOOP_START\lLOOP:0: B:32:0x000c\-\>B:41:0x0027\l|0x000c: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1224)\l}"];
Node_33 [shape=record,label="{33\:\ 0x000d|0x000d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('eventType' int)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0034 \l}"];
Node_34 [shape=record,label="{34\:\ 0x000f|TryCatch #2 \{IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f, blocks: (B:31:0x0008, B:34:0x000f, B:36:0x0016, B:38:0x001e, B:40:0x0023), top: B:50:0x0008 \}\lCatch: IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f\l|0x000f: INVOKE  (r3 I:java.lang.String) = (r1 I:org.xmlpull.v1.XmlPullParser A[D('includeParser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getName():java.lang.String A[Catch: IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f, MD:():java.lang.String (c)] (LINE:1226)\l0x0013: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:1227)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0014|0x0014: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('eventType' int)])  \-\> B:40:0x0023 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0016|TryCatch #2 \{IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f, blocks: (B:31:0x0008, B:34:0x000f, B:36:0x0016, B:38:0x001e, B:40:0x0023), top: B:50:0x0008 \}\lCatch: IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f\l|0x0016: CONST_STR  (r4 I:java.lang.String) =  \"ConstraintSet\" \l0x0018: INVOKE  (r4 I:boolean) = (r4 I:java.lang.String), (r3 I:java.lang.Object A[D('tagName' java.lang.String)]) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[Catch: IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f, MD:(java.lang.Object):boolean (c)] (LINE:1228)\l}"];
Node_37 [shape=record,label="{37\:\ 0x001c|0x001c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0023 \l}"];
Node_52 [shape=record,label="{52\:\ 0x001e|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x001e|TryCatch #2 \{IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f, blocks: (B:31:0x0008, B:34:0x000f, B:36:0x0016, B:38:0x001e, B:40:0x0023), top: B:50:0x0008 \}\lCatch: IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f\l|0x001e: INVOKE  (r4 I:int) = \l  (r5 I:androidx.constraintlayout.motion.widget.MotionScene)\l  (r6 I:android.content.Context A[D('context' android.content.Context)])\l  (r1 I:org.xmlpull.v1.XmlPullParser A[D('includeParser' org.xmlpull.v1.XmlPullParser)])\l type: DIRECT call: androidx.constraintlayout.motion.widget.MotionScene.parseConstraintSet(android.content.Context, org.xmlpull.v1.XmlPullParser):int A[Catch: IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f, MD:(android.content.Context, org.xmlpull.v1.XmlPullParser):int (m)] (LINE:1229)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0022|RETURN\l|0x0022: RETURN  (r4 I:int) \l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_40 [shape=record,label="{40\:\ 0x0023|TRY_LEAVE\lTryCatch #2 \{IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f, blocks: (B:31:0x0008, B:34:0x000f, B:36:0x0016, B:38:0x001e, B:40:0x0023), top: B:50:0x0008 \}\lCatch: IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f\l|0x0023: INVOKE  (r3 I:int) = (r1 I:org.xmlpull.v1.XmlPullParser A[D('includeParser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[Catch: IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f, MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c), TRY_LEAVE] (LINE:1225)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0027|LOOP_END\lLOOP:0: B:32:0x000c\-\>B:41:0x0027\l|0x0027: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('eventType' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x0034|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\l|0x0034: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) A[SYNTHETIC] (LINE:1243)\l0x0035: RETURN  (r2 I:int) A[SYNTHETIC]\l}"];
Node_43 [shape=record,label="{43\:\ 0x002a|ExcHandler: IOException \-\> 0x002a\l|0x002a: MOVE_EXCEPTION  (r2 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x002a] (LINE:1237)\l}"];
Node_44 [shape=record,label="{44\:\ 0x002b|0x002b: INVOKE  (r2 I:java.io.IOException A[D('e' java.io.IOException)]) type: VIRTUAL call: java.io.IOException.printStackTrace():void A[MD:():void (s)] (LINE:1241)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0034|RETURN\lORIG_RETURN\l|0x0034: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:1243)\l0x0035: RETURN  (r2 I:int) \l}"];
Node_45 [shape=record,label="{45\:\ 0x002f|ExcHandler: XmlPullParserException \-\> 0x002f\l|0x002f: MOVE_EXCEPTION  (r2 I:org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: XmlPullParserException \-\> 0x002f] (LINE:1232)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0030|0x0030: INVOKE  (r2 I:org.xmlpull.v1.XmlPullParserException A[D('e' org.xmlpull.v1.XmlPullParserException)]) type: VIRTUAL call: org.xmlpull.v1.XmlPullParserException.printStackTrace():void A[MD:():void (c)] (LINE:1236)\l}"];
Node_54 [shape=record,label="{54\:\ ?|SYNTHETIC\lRETURN\l|0x0034: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) A[SYNTHETIC] (LINE:1243)\l0x0035: RETURN  (r2 I:int) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public int androidx.constraintlayout.motion.widget.MotionScene.parseInclude((r5 'this' I:androidx.constraintlayout.motion.widget.MotionScene A[IMMUTABLE_TYPE, THIS]), (r6 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('resourceId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:49:0x0035 \-\> B:29:?, CROSS_EDGE: B:46:0x0030 \-\> B:48:0x0034, BACK_EDGE: B:41:0x0027 \-\> B:32:0x000c, CROSS_EDGE: B:35:0x0014 \-\> B:40:0x0023, CROSS_EDGE: B:33:0x000d \-\> B:48:0x0034, CROSS_EDGE: B:50:0x0008 \-\> B:43:0x002a, CROSS_EDGE: B:50:0x0008 \-\> B:45:0x002f\lINLINE_NOT_NEEDED\lTryCatch #2 \{IOException \-\> 0x002a, XmlPullParserException \-\> 0x002f, blocks: (B:31:0x0008, B:34:0x000f, B:36:0x0016, B:38:0x001e, B:40:0x0023), top: B:50:0x0008 \}\lMETHOD_PARAMETERS: [context, resourceId]\lDebug Info:\l  0x0013\-0x0023: r3 'tagName' Ljava\/lang\/String;\l  0x000c\-0x0029: r2 'eventType' I\l  0x002b\-0x002f: r2 'e' Ljava\/io\/IOException;\l  0x0030\-0x0033: r2 'e' Lorg\/xmlpull\/v1\/XmlPullParserException;\l  0x0004\-0x0035: r0 'res' Landroid\/content\/res\/Resources;\l  0x0008\-0x0035: r1 'includeParser' Lorg\/xmlpull\/v1\/XmlPullParser;\l  \-1 \-0x0035: r6 'context' Landroid\/content\/Context;\l  \-1 \-0x0035: r7 'resourceId' I\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_50;
Node_50 -> Node_31;
Node_50 -> Node_43;
Node_50 -> Node_45;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_53;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_40;
Node_36 -> Node_37;
Node_37 -> Node_40;
Node_37 -> Node_52[style=dashed];
Node_52 -> Node_38;
Node_38 -> Node_39;
Node_38 -> Node_51;
Node_39 -> Node_29;
Node_51 -> Node_43;
Node_51 -> Node_45;
Node_40 -> Node_41;
Node_41 -> Node_32;
Node_53 -> Node_55;
Node_55 -> Node_29;
Node_43 -> Node_44;
Node_44 -> Node_48;
Node_48 -> Node_29;
Node_45 -> Node_46;
Node_46 -> Node_54;
Node_54 -> Node_29;
}

