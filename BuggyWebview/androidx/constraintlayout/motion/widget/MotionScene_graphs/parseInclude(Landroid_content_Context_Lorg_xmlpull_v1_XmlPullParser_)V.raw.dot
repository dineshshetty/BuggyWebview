digraph "CFG forandroidx.constraintlayout.motion.widget.MotionScene.parseInclude(Landroid\/content\/Context;Lorg\/xmlpull\/v1\/XmlPullParser;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INVOKE  (r0 I:android.util.AttributeSet) = (r7 I:org.xmlpull.v1.XmlPullParser A[D('mainParser' org.xmlpull.v1.XmlPullParser)]) type: STATIC call: android.util.Xml.asAttributeSet(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet A[MD:(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet (c)] (LINE:1207)\l0x0004: SGET  (r1 I:int[]) =  androidx.constraintlayout.widget.R.styleable.include int[] \l0x0006: INVOKE  (r0 I:android.content.res.TypedArray) = (r6 I:android.content.Context A[D('context' android.content.Context)]), (r0 I:android.util.AttributeSet), (r1 I:int[]) type: VIRTUAL call: android.content.Context.obtainStyledAttributes(android.util.AttributeSet, int[]):android.content.res.TypedArray A[MD:(android.util.AttributeSet, int[]):android.content.res.TypedArray (c)]\l0x000a: INVOKE  (r1 I:int) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.getIndexCount():int A[MD:():int (c)] (LINE:1208)\l0x000e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1209)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|LOOP_START\lLOOP:0: B:16:0x000f\-\>B:20:0x0021\l|0x000f: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('N' int)])  \-\> B:23:0x0024 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|0x0011: INVOKE  (r3 I:int) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r2 I:int A[D('i' int)]) type: VIRTUAL call: android.content.res.TypedArray.getIndex(int):int A[MD:(int):int (c)] (LINE:1210)\l0x0015: SGET  (r4 I:int) =  androidx.constraintlayout.widget.R.styleable.include_constraintSet int  (LINE:1211)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|0x0017: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('attr' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0021 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|0x0019: CONST  (r4 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:1212)\l0x001a: INVOKE  (r4 I:int) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r3 I:int A[D('attr' int)]), (r4 I:int) type: VIRTUAL call: android.content.res.TypedArray.getResourceId(int, int):int A[MD:(int, int):int (c)]\l0x001e: INVOKE  \l  (r5 I:androidx.constraintlayout.motion.widget.MotionScene)\l  (r6 I:android.content.Context A[D('context' android.content.Context)])\l  (r4 I:int A[D('resourceId' int)])\l type: DIRECT call: androidx.constraintlayout.motion.widget.MotionScene.parseInclude(android.content.Context, int):int A[MD:(android.content.Context, int):int (m)] (LINE:1213)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0021|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0021|LOOP_END\lLOOP:0: B:16:0x000f\-\>B:20:0x0021\l|0x0021: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:1209)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0024|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0024|0x0024: INVOKE  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:1216)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0027|RETURN\l|0x0027: RETURN    (LINE:1217)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.constraintlayout.motion.widget.MotionScene.parseInclude((r5 'this' I:androidx.constraintlayout.motion.widget.MotionScene A[IMMUTABLE_TYPE, THIS]), (r6 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.xmlpull.v1.XmlPullParser A[D('mainParser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x0021 \-\> B:16:0x000f, CROSS_EDGE: B:18:0x0017 \-\> B:20:0x0021\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x0021: r3 'attr' I\l  0x001e\-0x0021: r4 'resourceId' I\l  0x000f\-0x0024: r2 'i' I\l  0x000a\-0x0027: r0 'a' Landroid\/content\/res\/TypedArray;\l  0x000e\-0x0027: r1 'N' I\l  \-1 \-0x0027: r6 'context' Landroid\/content\/Context;\l  \-1 \-0x0027: r7 'mainParser' Lorg\/xmlpull\/v1\/XmlPullParser;\lMETHOD_PARAMETERS: [context, mainParser]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_24;
Node_24 -> Node_20;
Node_20 -> Node_16;
Node_25 -> Node_20;
Node_23 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_14;
}

