digraph "CFG forandroidx.constraintlayout.motion.widget.TransitionBuilder.validate(Landroidx\/constraintlayout\/motion\/widget\/MotionLayout;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.constraintlayout.motion.widget.MotionScene) = \l  (r3 I:androidx.constraintlayout.motion.widget.MotionLayout A[D('layout' androidx.constraintlayout.motion.widget.MotionLayout)])\l androidx.constraintlayout.motion.widget.MotionLayout.mScene androidx.constraintlayout.motion.widget.MotionScene  (LINE:35)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: IGET  (r0 I:androidx.constraintlayout.motion.widget.MotionScene) = \l  (r3 I:androidx.constraintlayout.motion.widget.MotionLayout A[D('layout' androidx.constraintlayout.motion.widget.MotionLayout)])\l androidx.constraintlayout.motion.widget.MotionLayout.mScene androidx.constraintlayout.motion.widget.MotionScene  (LINE:39)\l0x0006: INVOKE  (r1 I:boolean) = \l  (r0 I:androidx.constraintlayout.motion.widget.MotionScene A[D('scene' androidx.constraintlayout.motion.widget.MotionScene)])\l  (r3 I:androidx.constraintlayout.motion.widget.MotionLayout A[D('layout' androidx.constraintlayout.motion.widget.MotionLayout)])\l type: VIRTUAL call: androidx.constraintlayout.motion.widget.MotionScene.validateLayout(androidx.constraintlayout.motion.widget.MotionLayout):boolean A[MD:(androidx.constraintlayout.motion.widget.MotionLayout):boolean (m)] (LINE:40)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0023 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IGET  (r1 I:androidx.constraintlayout.motion.widget.MotionScene$Transition) = \l  (r0 I:androidx.constraintlayout.motion.widget.MotionScene A[D('scene' androidx.constraintlayout.motion.widget.MotionScene)])\l androidx.constraintlayout.motion.widget.MotionScene.mCurrentTransition androidx.constraintlayout.motion.widget.MotionScene$Transition  (LINE:44)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001b \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: INVOKE  (r1 I:java.util.ArrayList) = \l  (r0 I:androidx.constraintlayout.motion.widget.MotionScene A[D('scene' androidx.constraintlayout.motion.widget.MotionScene)])\l type: VIRTUAL call: androidx.constraintlayout.motion.widget.MotionScene.getDefinedTransitions():java.util.ArrayList A[MD:():java.util.ArrayList\<androidx.constraintlayout.motion.widget.MotionScene$Transition\> (m)]\l0x0014: INVOKE  (r1 I:boolean) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001b \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|RETURN\l|0x001a: RETURN    (LINE:47)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: NEW_INSTANCE  (r1 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:45)\l0x001d: CONST_STR  (r2 I:java.lang.String) =  \"Invalid motion layout. Motion Scene doesn't have any transition.\" \l0x001f: INVOKE  (r1 I:java.lang.RuntimeException), (r2 I:java.lang.String) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: NEW_INSTANCE  (r1 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:41)\l0x0025: CONST_STR  (r2 I:java.lang.String) =  \"MotionLayout doesn't have the right motion scene.\" \l0x0027: INVOKE  (r1 I:java.lang.RuntimeException), (r2 I:java.lang.String) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|0x002a: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|0x002b: NEW_INSTANCE  (r0 I:java.lang.RuntimeException A[D('scene' androidx.constraintlayout.motion.widget.MotionScene)]) =  java.lang.RuntimeException  (LINE:36)\l0x002d: CONST_STR  (r1 I:java.lang.String) =  \"Invalid motion layout. Layout missing Motion Scene.\" \l0x002f: INVOKE  (r0 I:java.lang.RuntimeException), (r1 I:java.lang.String) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|0x0032: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void androidx.constraintlayout.motion.widget.TransitionBuilder.validate((r3 I:androidx.constraintlayout.motion.widget.MotionLayout A[D('layout' androidx.constraintlayout.motion.widget.MotionLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0022 \-\> B:1:?, CROSS_EDGE: B:7:0x000e \-\> B:11:0x001b, CROSS_EDGE: B:14:0x002a \-\> B:1:?, CROSS_EDGE: B:16:0x0032 \-\> B:1:?\lDebug Info:\l  0x0006\-0x002b: r0 'scene' Landroidx\/constraintlayout\/motion\/widget\/MotionScene;\l  \-1 \-0x0032: r3 'layout' Landroidx\/constraintlayout\/motion\/widget\/MotionLayout;\lMETHOD_PARAMETERS: [layout]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_15 -> Node_16;
Node_16 -> Node_1;
}

