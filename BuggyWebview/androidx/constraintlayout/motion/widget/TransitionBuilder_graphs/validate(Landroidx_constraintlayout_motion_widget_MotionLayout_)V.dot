digraph "CFG forandroidx.constraintlayout.motion.widget.TransitionBuilder.validate(Landroidx\/constraintlayout\/motion\/widget\/MotionLayout;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r3.mScene == null) goto L15\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|androidx.constraintlayout.motion.widget.MotionScene r0 = r3.mScene\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|if (r0.validateLayout(r3) == false) goto L13\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c}"];
Node_7 [shape=record,label="{7\:\ 0x000e|if (r0.mCurrentTransition == null) goto L11\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010}"];
Node_9 [shape=record,label="{9\:\ 0x0018|if (r0.getDefinedTransitions().isEmpty() != false) goto L11\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b}"];
Node_12 [shape=record,label="{12\:\ 0x0022|throw new java.lang.RuntimeException(\"Invalid motion layout. Motion Scene doesn't have any transition.\")\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023}"];
Node_14 [shape=record,label="{14\:\ 0x002a|throw new java.lang.RuntimeException(\"MotionLayout doesn't have the right motion scene.\")\l}"];
Node_15 [shape=record,label="{15\:\ 0x002b}"];
Node_16 [shape=record,label="{16\:\ 0x0032|throw new java.lang.RuntimeException(\"Invalid motion layout. Layout missing Motion Scene.\")\l}"];
MethodNode[shape=record,label="{public static void androidx.constraintlayout.motion.widget.TransitionBuilder.validate((r3v0 'layout' androidx.constraintlayout.motion.widget.MotionLayout A[D('layout' androidx.constraintlayout.motion.widget.MotionLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0022 \-\> B:1:?, CROSS_EDGE: B:7:0x000e \-\> B:11:0x001b, CROSS_EDGE: B:14:0x002a \-\> B:1:?, CROSS_EDGE: B:16:0x0032 \-\> B:1:?\lMETHOD_PARAMETERS: [layout]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_15 -> Node_16;
Node_16 -> Node_1;
}

