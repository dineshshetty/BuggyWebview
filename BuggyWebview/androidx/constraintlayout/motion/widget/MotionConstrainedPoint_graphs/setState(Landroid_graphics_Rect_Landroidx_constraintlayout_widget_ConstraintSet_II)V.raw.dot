digraph "CFG forandroidx.constraintlayout.motion.widget.MotionConstrainedPoint.setState(Landroid\/graphics\/Rect;Landroidx\/constraintlayout\/widget\/ConstraintSet;II)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r5 I:android.graphics.Rect A[D('cw' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:365)\l0x0002: CAST (r0 I:float) = (float) (r0 I:int) \l0x0003: IGET  (r1 I:int) = (r5 I:android.graphics.Rect A[D('cw' android.graphics.Rect)]) android.graphics.Rect.top int \l0x0005: CAST (r1 I:float) = (float) (r1 I:int) \l0x0006: INVOKE  (r2 I:int) = (r5 I:android.graphics.Rect A[D('cw' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.width():int A[MD:():int (c)]\l0x000a: CAST (r2 I:float) = (float) (r2 I:int) \l0x000b: INVOKE  (r3 I:int) = (r5 I:android.graphics.Rect A[D('cw' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.height():int A[MD:():int (c)]\l0x000f: CAST (r3 I:float) = (float) (r3 I:int) \l0x0010: INVOKE  \l  (r4 I:androidx.constraintlayout.motion.widget.MotionConstrainedPoint)\l  (r0 I:float)\l  (r1 I:float)\l  (r2 I:float)\l  (r3 I:float)\l type: VIRTUAL call: androidx.constraintlayout.motion.widget.MotionConstrainedPoint.setBounds(float, float, float, float):void A[MD:(float, float, float, float):void (m)]\l0x0013: INVOKE  (r0 I:androidx.constraintlayout.widget.ConstraintSet$Constraint) = \l  (r6 I:androidx.constraintlayout.widget.ConstraintSet A[D('constraintSet' androidx.constraintlayout.widget.ConstraintSet)])\l  (r8 I:int A[D('viewId' int)])\l type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintSet.getParameters(int):androidx.constraintlayout.widget.ConstraintSet$Constraint A[MD:(int):androidx.constraintlayout.widget.ConstraintSet$Constraint (m)] (LINE:366)\l0x0017: INVOKE  \l  (r4 I:androidx.constraintlayout.motion.widget.MotionConstrainedPoint)\l  (r0 I:androidx.constraintlayout.widget.ConstraintSet$Constraint)\l type: VIRTUAL call: androidx.constraintlayout.motion.widget.MotionConstrainedPoint.applyParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint):void A[MD:(androidx.constraintlayout.widget.ConstraintSet$Constraint):void (m)]\l0x001a: CONST  (r0 I:??[int, float, short, byte, char]) = (1119092736(0x42b40000, float:90.0) ??[int, float, short, byte, char])  (LINE:367)\l}"];
Node_16 [shape=record,label="{16\:\ 0x001c|0x001c: SWITCH  (r7 I:?? A[D('rotation' int)])\l case 1: goto B:21:0x0031\l case 2: goto B:18:0x0020\l case 3: goto B:21:0x0031\l case 4: goto B:18:0x0020\l default: goto B:25:? \l}"];
Node_18 [shape=record,label="{18\:\ 0x0020|0x0020: IGET  (r1 I:float) = (r4 I:androidx.constraintlayout.motion.widget.MotionConstrainedPoint) androidx.constraintlayout.motion.widget.MotionConstrainedPoint.rotation float  (LINE:374)\l0x0022: ARITH  (r1 I:float) = (r1 I:float) + (r0 I:float) \l0x0023: IPUT  (r1 I:float), (r4 I:androidx.constraintlayout.motion.widget.MotionConstrainedPoint) androidx.constraintlayout.motion.widget.MotionConstrainedPoint.rotation float \l0x0025: CONST  (r0 I:??[int, float, short, byte, char]) = (1127481344(0x43340000, float:180.0) ??[int, float, short, byte, char])  (LINE:375)\l0x0027: CMP_L  (r0 I:int) = (r1 I:float), (r0 I:float) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0029|0x0029: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:23:? \l}"];
Node_20 [shape=record,label="{20\:\ 0x002b|0x002b: CONST  (r0 I:??[int, float, short, byte, char]) = (1135869952(0x43b40000, float:360.0) ??[int, float, short, byte, char]) \l0x002d: ARITH  (r1 I:float) = (r1 I:float) \- (r0 I:float) \l0x002e: IPUT  (r1 I:float), (r4 I:androidx.constraintlayout.motion.widget.MotionConstrainedPoint) androidx.constraintlayout.motion.widget.MotionConstrainedPoint.rotation float \l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|0x0037: RETURN   A[SYNTHETIC] (LINE:378)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0037: RETURN   A[SYNTHETIC] (LINE:378)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0031|0x0031: IGET  (r1 I:float) = (r4 I:androidx.constraintlayout.motion.widget.MotionConstrainedPoint) androidx.constraintlayout.motion.widget.MotionConstrainedPoint.rotation float  (LINE:370)\l0x0033: ARITH  (r1 I:float) = (r1 I:float) \- (r0 I:float) \l0x0034: IPUT  (r1 I:float), (r4 I:androidx.constraintlayout.motion.widget.MotionConstrainedPoint) androidx.constraintlayout.motion.widget.MotionConstrainedPoint.rotation float \l}"];
Node_22 [shape=record,label="{22\:\ 0x0037|RETURN\lORIG_RETURN\l|0x0037: RETURN    (LINE:378)\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0037: RETURN   A[SYNTHETIC] (LINE:378)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.motion.widget.MotionConstrainedPoint.setState((r4 'this' I:androidx.constraintlayout.motion.widget.MotionConstrainedPoint A[IMMUTABLE_TYPE, THIS]), (r5 I:android.graphics.Rect A[D('cw' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:androidx.constraintlayout.widget.ConstraintSet A[D('constraintSet' androidx.constraintlayout.widget.ConstraintSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('rotation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('viewId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0029 \-\> B:22:0x0037, CROSS_EDGE: B:21:0x0031 \-\> B:22:0x0037, CROSS_EDGE: B:16:0x001c \-\> B:22:0x0037\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0043: r5 'cw' Landroid\/graphics\/Rect;\l  \-1 \-0x0043: r6 'constraintSet' Landroidx\/constraintlayout\/widget\/ConstraintSet;\l  \-1 \-0x0043: r7 'rotation' I\l  \-1 \-0x0043: r8 'viewId' I\lMETHOD_PARAMETERS: [cw, constraintSet, rotation, viewId]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_21;
Node_16 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_24;
Node_24 -> Node_14;
Node_23 -> Node_14;
Node_21 -> Node_22;
Node_22 -> Node_14;
Node_25 -> Node_14;
}

