digraph "CFG forandroidx.constraintlayout.motion.widget.MotionController.buildKeyFrames([F[I)I" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:494)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0001|0x0001: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('keyFrames' float[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x004d \l}"];
Node_24 [shape=record,label="{24\:\ 0x0003|0x0003: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:495)\l0x0004: IGET  (r2 I:androidx.constraintlayout.core.motion.utils.CurveFit[]) = (r11 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mSpline androidx.constraintlayout.core.motion.utils.CurveFit[]  (LINE:496)\l0x0006: AGET  (r2 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char]) \l0x0008: INVOKE  (r2 I:double[]) = (r2 I:androidx.constraintlayout.core.motion.utils.CurveFit) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.CurveFit.getTimePoints():double[] A[MD:():double[] (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x000c|0x000c: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mode' int[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0029  (LINE:497)\l}"];
Node_26 [shape=record,label="{26\:\ 0x000e|0x000e: IGET  (r3 I:java.util.ArrayList\<androidx.constraintlayout.motion.widget.MotionPaths\>) = (r11 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mMotionPaths java.util.ArrayList  (LINE:498)\l0x0010: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0014|LOOP_START\lLOOP:0: B:27:0x0014\-\>B:29:0x001a\l|0x0014: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|0x0018: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0028 \l}"];
Node_29 [shape=record,label="{29\:\ 0x001a|LOOP_END\lLOOP:0: B:27:0x0014\-\>B:29:0x001a\l|0x001a: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001e: CHECK_CAST (r4 I:androidx.constraintlayout.motion.widget.MotionPaths) = (androidx.constraintlayout.motion.widget.MotionPaths) (r4 I:??[OBJECT, ARRAY]) \l0x0020: ARITH  (r5 I:int) = (r1 I:int A[D('count' int)]) + (1 int)  (LINE:499)\l0x0022: IGET  (r6 I:int) = \l  (r4 I:androidx.constraintlayout.motion.widget.MotionPaths A[D('keyFrame' androidx.constraintlayout.motion.widget.MotionPaths)])\l androidx.constraintlayout.motion.widget.MotionPaths.mMode int \l0x0024: APUT  \l  (r13 I:??[int, float][] A[D('mode' int[])])\l  (r1 I:??[int, short, byte, char])\l  (r6 I:??[int, float, short, byte, char])\l \l0x0026: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('count' int)])  (LINE:500)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0028|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0028|0x0028: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('count' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:501)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0029|0x0029: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:504)\l}"];
Node_32 [shape=record,label="{32\:\ 0x002a|LOOP_START\lLOOP:1: B:32:0x002a\-\>B:34:0x002d\l|0x002a: ARRAY_LENGTH  (r4 I:int) = (r2 I:??[] A[D('time' double[])]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x002b|0x002b: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:39:0x004a \l}"];
Node_34 [shape=record,label="{34\:\ 0x002d|LOOP_END\lLOOP:1: B:32:0x002a\-\>B:34:0x002d\l|0x002d: IGET  (r4 I:androidx.constraintlayout.core.motion.utils.CurveFit[]) = (r11 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mSpline androidx.constraintlayout.core.motion.utils.CurveFit[]  (LINE:505)\l0x002f: AGET  (r4 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char]) \l0x0031: AGET  (r5 I:??[long, double]) = (r2 I:??[long, double][] A[D('time' double[])]), (r3 I:??[int, short, byte, char] A[D('i' int)]) \l0x0033: IGET  (r7 I:double[]) = (r11 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateData double[] \l0x0035: INVOKE  (r4 I:androidx.constraintlayout.core.motion.utils.CurveFit), (r5 I:double), (r7 I:double[]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, double[]):void A[MD:(double, double[]):void (m)]\l0x0038: IGET  (r4 I:androidx.constraintlayout.motion.widget.MotionPaths) = (r11 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mStartMotionPath androidx.constraintlayout.motion.widget.MotionPaths  (LINE:506)\l0x003a: AGET  (r5 I:??[long, double]) = (r2 I:??[long, double][] A[D('time' double[])]), (r3 I:??[int, short, byte, char] A[D('i' int)]) \l0x003c: IGET  (r7 I:int[]) = (r11 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateVariables int[] \l0x003e: IGET  (r8 I:double[]) = (r11 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateData double[] \l0x0040: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('keyFrames' float[])]) \l0x0041: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('count' int)]) \l0x0042: INVOKE  \l  (r4 I:androidx.constraintlayout.motion.widget.MotionPaths)\l  (r5 I:double)\l  (r7 I:int[])\l  (r8 I:double[])\l  (r9 I:float[])\l  (r10 I:int)\l type: VIRTUAL call: androidx.constraintlayout.motion.widget.MotionPaths.getCenter(double, int[], double[], float[], int):void A[MD:(double, int[], double[], float[], int):void (m)]\l0x0045: ARITH  (r1 I:int) = (r1 I:int A[D('count' int)]) + (2 int)  (LINE:507)\l0x0047: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:504)\l}"];
Node_39 [shape=record,label="{39\:\ 0x004a|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x004a|0x004a: ARITH  (r0 I:int) = (r1 I:int A[D('count' int)]) \/ (2 int)  (LINE:509)\l}"];
Node_36 [shape=record,label="{36\:\ 0x004c|RETURN\l|0x004c: RETURN  (r0 I:int) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x004d|RETURN\l|0x004d: RETURN  (r0 I:int)  (LINE:511)\l}"];
MethodNode[shape=record,label="{public int androidx.constraintlayout.motion.widget.MotionController.buildKeyFrames((r11 'this' I:androidx.constraintlayout.motion.widget.MotionController A[IMMUTABLE_TYPE, THIS]), (r12 I:float[] A[D('keyFrames' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int[] A[D('mode' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x001a \-\> B:27:0x0014, BACK_EDGE: B:34:0x002d \-\> B:32:0x002a, CROSS_EDGE: B:25:0x000c \-\> B:31:0x0029, CROSS_EDGE: B:37:0x004d \-\> B:21:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0022: r1 'count' I\l  0x0020\-0x0026: r4 'keyFrame' Landroidx\/constraintlayout\/motion\/widget\/MotionPaths;\l  0x0022\-0x0028: r5 'count' I\l  0x002a\-0x004a: r3 'i' I\l  0x0028\-0x004d: r1 'count' I\l  0x000c\-0x004d: r2 'time' [D\l  \-1 \-0x004d: r12 'keyFrames' [F\l  \-1 \-0x004d: r13 'mode' [I\lMETHOD_PARAMETERS: [keyFrames, mode]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_37;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_38;
Node_29 -> Node_27;
Node_38 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_39;
Node_34 -> Node_32;
Node_39 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_21;
Node_37 -> Node_21;
}

