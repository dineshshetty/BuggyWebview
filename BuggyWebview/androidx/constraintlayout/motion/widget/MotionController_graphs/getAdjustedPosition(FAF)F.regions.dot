digraph "CFG forandroidx.constraintlayout.motion.widget.MotionController.getAdjustedPosition(F[F)F" {
subgraph cluster_Region_1650795109 {
label = "R(5:(1:3)(2:34|(3:36|(1:38)|(1:43)))|4|(2:7|(1:(1:21)(1:(1:16)(0)))(0))|(3:(1:28)|29|(1:31))|32)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1245024636 {
label = "IF [B:48:0x0003] THEN: R(1:3) ELSE: R(2:34|(3:36|(1:38)|(1:43)))";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x0003|if (r11 != null) goto L3\l}"];
subgraph cluster_Region_1354822542 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0005|r11[0] = 1.0f\l}"];
}
subgraph cluster_Region_1629233376 {
label = "R(2:34|(3:36|(1:38)|(1:43)))";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0008|float float r2 = r9.mStaggerScale\l}"];
subgraph cluster_IfRegion_1341786518 {
label = "IF [B:51:0x000f] THEN: R(3:36|(1:38)|(1:43)) ELSE: null";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x000f|if (r2 != 1.0d) goto L36\l}"];
subgraph cluster_Region_1396262112 {
label = "R(3:36|(1:38)|(1:43))";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x0011|float float r3 = r9.mStaggerOffset\l}"];
subgraph cluster_IfRegion_1394763079 {
label = "IF [B:53:0x0015] THEN: R(1:38) ELSE: null";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0015|if (r10 \< r3) goto L38\l}"];
subgraph cluster_Region_1717911185 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0017|r10 = 0.0f\l}"];
}
}
subgraph cluster_IfRegion_1284206604 {
label = "IF [B:56:0x001a, B:58:0x001f] THEN: R(1:43) ELSE: null";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x001a|if (r10 \> r3) goto L41\l}"];
Node_58 [shape=record,label="{58\:\ 0x001f|ADDED_TO_REGION\l|if (r10 \< 1.0d) goto L43\l}"];
subgraph cluster_Region_1390384115 {
label = "R(1:43)";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x0021|float r10 = java.lang.Math.min((r10 \- r3) * r2, 1.0f)\l}"];
}
}
}
}
}
}
Node_60 [shape=record,label="{60\:\ 0x0028|PHI: r10 \l  PHI: (r10v6 'position' float) = (r10v0 'position' float), (r10v1 'position' float), (r10v1 'position' float), (r10v4 'position' float), (r10v0 'position' float) binds: [B:51:0x000f, B:56:0x001a, B:58:0x001f, B:59:0x0021, B:49:0x0005] A[DONT_GENERATE, DONT_INLINE]\l|float r0 = r10\landroidx.constraintlayout.core.motion.utils.Easing androidx.constraintlayout.core.motion.utils.Easing r2 = r9.mStartMotionPath.mKeyFrameEasing\lfloat r3 = 0.0f\lfloat r4 = Float.NaN\ljava.util.Iterator java.util.Iterator\<androidx.constraintlayout.motion.widget.MotionPaths\> r5 = r9.mMotionPaths.iterator()\l}"];
subgraph cluster_LoopRegion_1714317307 {
label = "LOOP:0: (2:7|(1:(1:21)(1:(1:16)(0)))(0))";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x003a|if (r5.hasNext() != false) goto L7\l}"];
subgraph cluster_Region_385085947 {
label = "R(2:7|(1:(1:21)(1:(1:16)(0)))(0))";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x003c|androidx.constraintlayout.motion.widget.MotionPaths androidx.constraintlayout.motion.widget.MotionPaths r6 = r5.next()\l}"];
subgraph cluster_IfRegion_127184494 {
label = "IF [B:64:0x0044] THEN: R(1:(1:21)(1:(1:16)(0))) ELSE: R(0)";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x0044|if (r6.mKeyFrameEasing != null) goto L9\l}"];
subgraph cluster_Region_2052838153 {
label = "R(1:(1:21)(1:(1:16)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1101942174 {
label = "IF [B:66:0x004a] THEN: R(1:21) ELSE: R(1:(1:16)(0))";
node [shape=record,color=blue];
Node_66 [shape=record,label="{66\:\ 0x004a|if (r6.time \< r10) goto L20\l}"];
subgraph cluster_Region_1001008891 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ 0x004c|androidx.constraintlayout.core.motion.utils.Easing r2 = r6.mKeyFrameEasing\lfloat r3 = r6.time\l}"];
}
subgraph cluster_Region_478352207 {
label = "R(1:(1:16)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2016226144 {
label = "IF [B:69:0x0055] THEN: R(1:16) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x0055|if (java.lang.Float.isNaN(r4) != false) goto L15\l}"];
subgraph cluster_Region_1704110066 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x0057|float r4 = r6.time\l}"];
}
subgraph cluster_Region_1258868690 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
subgraph cluster_Region_81195412 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
subgraph cluster_IfRegion_741745298 {
label = "IF [B:72:0x005a] THEN: R(3:(1:28)|29|(1:31)) ELSE: null";
node [shape=record,color=blue];
Node_72 [shape=record,label="{72\:\ 0x005a|if (r2 != null) goto L26\l}"];
subgraph cluster_Region_2070049933 {
label = "R(3:(1:28)|29|(1:31))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1170241437 {
label = "IF [B:74:0x0060] THEN: R(1:28) ELSE: null";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x0060|if (java.lang.Float.isNaN(r4) != false) goto L28\l}"];
subgraph cluster_Region_262507787 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_75 [shape=record,label="{75\:\ 0x0062|r4 = 1.0f\l}"];
}
}
Node_76 [shape=record,label="{76\:\ 0x0064|PHI: r4 \l  PHI: (r4v5 'end' float) = (r4v4 'end' float), (r4v6 'end' float) binds: [B:74:0x0060, B:75:0x0062] A[DONT_GENERATE, DONT_INLINE]\l|float float r5 = (r10 \- r3) \/ (r4 \- r3)\lfloat float r6 = (float) r2.get(r5)\lfloat r0 = ((r4 \- r3) * r6) + r3\l}"];
subgraph cluster_IfRegion_548518300 {
label = "IF [B:77:0x0075] THEN: R(1:31) ELSE: null";
node [shape=record,color=blue];
Node_77 [shape=record,label="{77\:\ 0x0075|if (r11 != null) goto L31\l}"];
subgraph cluster_Region_1728797563 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x0077|r11[0] = (float) r2.getDiff(r5)\l}"];
}
}
}
}
Node_79 [shape=record,label="{79\:\ 0x007f|RETURN\lPHI: r0 \l  PHI: (r0v2 'adjusted' float) = (r0v1 'adjusted' float), (r0v3 'adjusted' float), (r0v3 'adjusted' float) binds: [B:72:0x005a, B:77:0x0075, B:78:0x0077] A[DONT_GENERATE, DONT_INLINE]\l|return r0\l}"];
}
Node_45 [shape=record,color=red,label="{45\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0000}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x0036|LOOP_START\lLOOP:0: B:61:0x0036\-\>B:85:0x0036\lPHI: r2 r3 r4 \l  PHI: (r2v3 'easing' androidx.constraintlayout.core.motion.utils.Easing) = (r2v2 'easing' androidx.constraintlayout.core.motion.utils.Easing), (r2v4 'easing' androidx.constraintlayout.core.motion.utils.Easing) binds: [B:60:0x0028, B:85:0x0036] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v3 'start' float) = (r3v2 'start' float), (r3v4 'start' float) binds: [B:60:0x0028, B:85:0x0036] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v4 'end' float) = (r4v3 'end' float), (r4v7 'end' float) binds: [B:60:0x0028, B:85:0x0036] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_80 [shape=record,color=red,label="{80\:\ 0x0046|SYNTHETIC\l}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x0046}"];
Node_82 [shape=record,color=red,label="{82\:\ 0x0051|SYNTHETIC\l}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x0051}"];
Node_83 [shape=record,color=red,label="{83\:\ 0x0057|SYNTHETIC\l}"];
Node_88 [shape=record,color=red,label="{88\:\ 0x0036|SYNTHETIC\l}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x0036|LOOP_END\lSYNTHETIC\lLOOP:0: B:61:0x0036\-\>B:85:0x0036\lPHI: r2 r3 r4 \l  PHI: (r2v4 'easing' androidx.constraintlayout.core.motion.utils.Easing) = (r2v3 'easing' androidx.constraintlayout.core.motion.utils.Easing), (r2v5 'easing' androidx.constraintlayout.core.motion.utils.Easing), (r2v3 'easing' androidx.constraintlayout.core.motion.utils.Easing), (r2v3 'easing' androidx.constraintlayout.core.motion.utils.Easing) binds: [B:86:0x0036, B:89:0x0036, B:87:0x0036, B:88:0x0036] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v4 'start' float) = (r3v3 'start' float), (r3v5 'start' float), (r3v3 'start' float), (r3v3 'start' float) binds: [B:86:0x0036, B:89:0x0036, B:87:0x0036, B:88:0x0036] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v7 'end' float) = (r4v4 'end' float), (r4v4 'end' float), (r4v4 'end' float), (r4v8 'end' float) binds: [B:86:0x0036, B:89:0x0036, B:87:0x0036, B:88:0x0036] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_87 [shape=record,color=red,label="{87\:\ 0x0036|SYNTHETIC\l}"];
Node_84 [shape=record,color=red,label="{84\:\ 0x004c|SYNTHETIC\l}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x0036|SYNTHETIC\l}"];
Node_86 [shape=record,color=red,label="{86\:\ 0x0036|SYNTHETIC\l}"];
Node_81 [shape=record,color=red,label="{81\:\ 0x005a|SYNTHETIC\l}"];
Node_73 [shape=record,color=red,label="{73\:\ 0x005c}"];
Node_46 [shape=record,color=red,label="{46\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x0018|PHI: r10 \l  PHI: (r10v1 'position' float) = (r10v0 'position' float), (r10v5 'position' float) binds: [B:53:0x0015, B:54:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x001c}"];
MethodNode[shape=record,label="{private float androidx.constraintlayout.motion.widget.MotionController.getAdjustedPosition((r9v0 'this' androidx.constraintlayout.motion.widget.MotionController A[IMMUTABLE_TYPE, THIS]), (r10v0 'position' float A[D('position' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'velocity' float[] A[D('velocity' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:67:0x004c \-\> B:61:0x0036, BACK_EDGE: B:70:0x0057 \-\> B:61:0x0036, BACK_EDGE: B:69:0x0055 \-\> B:61:0x0036, BACK_EDGE: B:64:0x0044 \-\> B:61:0x0036, CROSS_EDGE: B:77:0x0075 \-\> B:79:0x007f, CROSS_EDGE: B:74:0x0060 \-\> B:76:0x0064, CROSS_EDGE: B:72:0x005a \-\> B:79:0x007f, CROSS_EDGE: B:59:0x0021 \-\> B:60:0x0028, CROSS_EDGE: B:58:0x001f \-\> B:60:0x0028, CROSS_EDGE: B:56:0x001a \-\> B:60:0x0028, CROSS_EDGE: B:53:0x0015 \-\> B:55:0x0018, CROSS_EDGE: B:51:0x000f \-\> B:60:0x0028\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [position, velocity]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_45;Node_48 -> Node_49;
Node_48 -> Node_50[style=dashed];
Node_49 -> Node_60;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_51 -> Node_60[style=dashed];
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_53 -> Node_55[style=dashed];
Node_54 -> Node_55;
Node_56 -> Node_57;
Node_56 -> Node_60[style=dashed];
Node_58 -> Node_59;
Node_58 -> Node_60[style=dashed];
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_62 -> Node_63;
Node_62 -> Node_81[style=dashed];
Node_63 -> Node_64;
Node_64 -> Node_80;
Node_64 -> Node_86[style=dashed];
Node_66 -> Node_82[style=dashed];
Node_66 -> Node_84;
Node_67 -> Node_89;
Node_69 -> Node_83;
Node_69 -> Node_87[style=dashed];
Node_70 -> Node_88;
Node_72 -> Node_73;
Node_72 -> Node_79[style=dashed];
Node_74 -> Node_75;
Node_74 -> Node_76[style=dashed];
Node_75 -> Node_76;
Node_76 -> Node_77;
Node_77 -> Node_78;
Node_77 -> Node_79[style=dashed];
Node_78 -> Node_79;
Node_79 -> Node_46;
Node_45 -> Node_47;
Node_47 -> Node_48;
Node_61 -> Node_62;
Node_80 -> Node_65;
Node_65 -> Node_66;
Node_82 -> Node_68;
Node_68 -> Node_69;
Node_83 -> Node_70;
Node_88 -> Node_85;
Node_85 -> Node_61;
Node_87 -> Node_85;
Node_84 -> Node_67;
Node_89 -> Node_85;
Node_86 -> Node_85;
Node_81 -> Node_72;
Node_73 -> Node_74;
Node_55 -> Node_56;
Node_57 -> Node_58;
}

