digraph "CFG forandroidx.constraintlayout.motion.widget.MotionController.getCenter(D[F[F)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:255)\l0x0001: NEW_ARRAY  (r9 I:double[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: double[] \l0x0003: NEW_ARRAY  (r10 I:double[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: double[]  (LINE:256)\l0x0005: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[]  (LINE:257)\l0x0007: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.CurveFit[]) = (r11 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mSpline androidx.constraintlayout.core.motion.utils.CurveFit[]  (LINE:258)\l0x0009: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]) \l0x000c: INVOKE  \l  (r1 I:androidx.constraintlayout.core.motion.utils.CurveFit)\l  (r12 I:double A[D('p' double)])\l  (r9 I:double[] A[D('position' double[])])\l type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, double[]):void A[MD:(double, double[]):void (m)]\l0x000f: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.CurveFit[]) = (r11 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mSpline androidx.constraintlayout.core.motion.utils.CurveFit[]  (LINE:259)\l0x0011: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]) \l0x0013: INVOKE  \l  (r1 I:androidx.constraintlayout.core.motion.utils.CurveFit)\l  (r12 I:double A[D('p' double)])\l  (r10 I:double[] A[D('velocity' double[])])\l type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.CurveFit.getSlope(double, double[]):void A[MD:(double, double[]):void (m)]\l0x0016: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:260)\l0x0017: INVOKE  (r15 I:float[] A[D('vel' float[])]), (r1 I:float) type: STATIC call: java.util.Arrays.fill(float[], float):void A[MD:(float[], float):void (c)]\l0x001a: IGET  (r1 I:androidx.constraintlayout.motion.widget.MotionPaths) = (r11 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mStartMotionPath androidx.constraintlayout.motion.widget.MotionPaths  (LINE:261)\l0x001c: IGET  (r4 I:int[]) = (r11 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateVariables int[] \l0x001e: MOVE  (r2 I:??[long, double]) = (r12 I:??[long, double] A[D('p' double)]) \l0x001f: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('position' double[])]) \l0x0020: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY] A[D('pos' float[])]) \l0x0021: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('velocity' double[])]) \l0x0022: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY] A[D('vel' float[])]) \l0x0023: INVOKE  \l  (r1 I:androidx.constraintlayout.motion.widget.MotionPaths)\l  (r2 I:double)\l  (r4 I:int[])\l  (r5 I:double[])\l  (r6 I:float[])\l  (r7 I:double[])\l  (r8 I:float[])\l type: VIRTUAL call: androidx.constraintlayout.motion.widget.MotionPaths.getCenter(double, int[], double[], float[], double[], float[]):void A[MD:(double, int[], double[], float[], double[], float[]):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|RETURN\l|0x0026: RETURN    (LINE:262)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.motion.widget.MotionController.getCenter((r11 'this' I:androidx.constraintlayout.motion.widget.MotionController A[IMMUTABLE_TYPE, THIS]), (r12 I:double A[D('p' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:float[] A[D('pos' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:float[] A[D('vel' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x0026: r0 'temp' [I\l  0x0003\-0x0026: r9 'position' [D\l  0x0005\-0x0026: r10 'velocity' [D\l  \-1 \-0x0026: r12 'p' D\l  \-1 \-0x0026: r14 'pos' [F\l  \-1 \-0x0026: r15 'vel' [F\lMETHOD_PARAMETERS: [p, pos, vel]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

